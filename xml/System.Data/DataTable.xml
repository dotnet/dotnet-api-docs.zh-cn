<Type Name="DataTable" FullName="System.Data.DataTable">
  <Metadata><Meta Name="ms.openlocfilehash" Value="57e2c7015c13dcc952842a4fa62dcb56195963cf" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89939545" /></Metadata><TypeSignature Language="C#" Value="public class DataTable : System.ComponentModel.MarshalByValueComponent, System.ComponentModel.IListSource, System.ComponentModel.ISupportInitialize, System.ComponentModel.ISupportInitializeNotification, System.Runtime.Serialization.ISerializable, System.Xml.Serialization.IXmlSerializable" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DataTable extends System.ComponentModel.MarshalByValueComponent implements class System.ComponentModel.IListSource, class System.ComponentModel.ISupportInitialize, class System.ComponentModel.ISupportInitializeNotification, class System.Runtime.Serialization.ISerializable, class System.Xml.Serialization.IXmlSerializable" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-2.0;netstandard-2.1" />
  <TypeSignature Language="DocId" Value="T:System.Data.DataTable" />
  <TypeSignature Language="VB.NET" Value="Public Class DataTable&#xA;Inherits MarshalByValueComponent&#xA;Implements IListSource, ISerializable, ISupportInitialize, ISupportInitializeNotification, IXmlSerializable" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataTable : System::ComponentModel::MarshalByValueComponent, System::ComponentModel::IListSource, System::ComponentModel::ISupportInitialize, System::ComponentModel::ISupportInitializeNotification, System::Runtime::Serialization::ISerializable, System::Xml::Serialization::IXmlSerializable" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1" />
  <TypeSignature Language="F#" Value="type DataTable = class&#xA;    inherit MarshalByValueComponent&#xA;    interface IListSource&#xA;    interface ISupportInitialize&#xA;    interface ISupportInitializeNotification&#xA;    interface ISerializable&#xA;    interface IXmlSerializable" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-2.0;netstandard-2.1" />
  <TypeSignature Language="C#" Value="public class DataTable" FrameworkAlternate="netcore-1.0;netcore-1.1" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DataTable extends System.Object" FrameworkAlternate="netcore-1.0;netcore-1.1" />
  <TypeSignature Language="VB.NET" Value="Public Class DataTable" FrameworkAlternate="netcore-1.0;netcore-1.1" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataTable" FrameworkAlternate="netcore-1.0;netcore-1.1" />
  <TypeSignature Language="F#" Value="type DataTable = class" FrameworkAlternate="netcore-1.0;netcore-1.1" />
  <TypeSignature Language="C#" Value="public class DataTable : System.ComponentModel.MarshalByValueComponent, System.ComponentModel.IListSource, System.ComponentModel.ISupportInitialize, System.Runtime.Serialization.ISerializable" FrameworkAlternate="netframework-1.1" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit DataTable extends System.ComponentModel.MarshalByValueComponent implements class System.ComponentModel.IListSource, class System.ComponentModel.ISupportInitialize, class System.Runtime.Serialization.ISerializable" FrameworkAlternate="netframework-1.1" />
  <TypeSignature Language="VB.NET" Value="Public Class DataTable&#xA;Inherits MarshalByValueComponent&#xA;Implements IListSource, ISerializable, ISupportInitialize" FrameworkAlternate="netframework-1.1" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataTable : System::ComponentModel::MarshalByValueComponent, System::ComponentModel::IListSource, System::ComponentModel::ISupportInitialize, System::Runtime::Serialization::ISerializable" FrameworkAlternate="netframework-1.1" />
  <TypeSignature Language="F#" Value="type DataTable = class&#xA;    inherit MarshalByValueComponent&#xA;    interface IListSource&#xA;    interface ISupportInitialize&#xA;    interface ISerializable" FrameworkAlternate="netframework-1.1" />
  <TypeSignature Language="C#" Value="public class DataTable : System.ComponentModel.MarshalByValueComponent, System.ComponentModel.IListSource, System.ComponentModel.ISupportInitializeNotification, System.Runtime.Serialization.ISerializable, System.Xml.Serialization.IXmlSerializable" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit DataTable extends System.ComponentModel.MarshalByValueComponent implements class System.ComponentModel.IListSource, class System.ComponentModel.ISupportInitialize, class System.ComponentModel.ISupportInitializeNotification, class System.Runtime.Serialization.ISerializable, class System.Xml.Serialization.IXmlSerializable" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="VB.NET" Value="Public Class DataTable&#xA;Inherits MarshalByValueComponent&#xA;Implements IListSource, ISerializable, ISupportInitializeNotification, IXmlSerializable" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataTable : System::ComponentModel::MarshalByValueComponent, System::ComponentModel::IListSource, System::ComponentModel::ISupportInitializeNotification, System::Runtime::Serialization::ISerializable, System::Xml::Serialization::IXmlSerializable" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="F#" Value="type DataTable = class&#xA;    inherit MarshalByValueComponent&#xA;    interface IListSource&#xA;    interface ISupportInitializeNotification&#xA;    interface ISupportInitialize&#xA;    interface ISerializable&#xA;    interface IXmlSerializable" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <TypeSignature Language="F#" Value="type DataTable = class&#xA;    inherit MarshalByValueComponent&#xA;    interface IListSource&#xA;    interface ISupportInitializeNotification&#xA;    interface ISerializable&#xA;    interface IXmlSerializable&#xA;    interface ISupportInitialize" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Common</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.Data.Common" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.ComponentModel.MarshalByValueComponent</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netcore-1.0;netcore-1.1">System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <InterfaceName>System.ComponentModel.IListSource</InterfaceName>
    </Interface>
    <Interface FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <InterfaceName>System.ComponentModel.ISupportInitialize</InterfaceName>
    </Interface>
    <Interface FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <InterfaceName>System.ComponentModel.ISupportInitializeNotification</InterfaceName>
    </Interface>
    <Interface FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <InterfaceName>System.Runtime.Serialization.ISerializable</InterfaceName>
    </Interface>
    <Interface FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <InterfaceName>System.Xml.Serialization.IXmlSerializable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName Language="C#">[System.ComponentModel.DefaultEvent("RowChanging")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultEvent("RowChanging")&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName Language="C#">[System.ComponentModel.DefaultProperty("TableName")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultProperty("TableName")&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName Language="C#">[System.ComponentModel.DesignTimeVisible(false)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.ComponentModel.DesignTimeVisible(false)&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName Language="C#">[System.ComponentModel.ToolboxItem(false)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.ComponentModel.ToolboxItem(false)&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName Language="C#">[System.Xml.Serialization.XmlSchemaProvider("GetDataTableSchema")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Xml.Serialization.XmlSchemaProvider("GetDataTableSchema")&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1">
      <AttributeName Language="C#">[System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DataTableEditor, Microsoft.VSDesigner, Version=7.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]</AttributeName>
      <AttributeName Language="F#">[&lt;System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DataTableEditor, Microsoft.VSDesigner, Version=7.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName Language="C#">[System.Serializable]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Serializable&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName Language="C#">[System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DataTableEditor, Microsoft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DataTableEditor, Microsoft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName Language="C#">[System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DataTableEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DataTableEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8">
      <AttributeName Language="C#">[System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DataTableEditor, Microsoft.VSDesigner, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=2.0.5.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DataTableEditor, Microsoft.VSDesigner, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=2.0.5.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarinmac-3.0">
      <AttributeName Language="C#">[System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DataTableEditor, Microsoft.VSDesigner, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DataTableEditor, Microsoft.VSDesigner, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="f01f9-101">表示内存中数据的一个表。</span><span class="sxs-lookup"><span data-stu-id="f01f9-101">Represents one table of in-memory data.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks

 <span data-ttu-id="f01f9-102"><xref:System.Data.DataTable>是 ADO.NET 库中的中心对象。</span><span class="sxs-lookup"><span data-stu-id="f01f9-102">The <xref:System.Data.DataTable> is a central object in the ADO.NET library.</span></span> <span data-ttu-id="f01f9-103">使用的其他对象 <xref:System.Data.DataTable> 包括 <xref:System.Data.DataSet> 和 <xref:System.Data.DataView> 。</span><span class="sxs-lookup"><span data-stu-id="f01f9-103">Other objects that use the <xref:System.Data.DataTable> include the <xref:System.Data.DataSet> and the <xref:System.Data.DataView>.</span></span>  
  
 <span data-ttu-id="f01f9-104">在访问 <xref:System.Data.DataTable> 对象时，请注意，它们具有条件区分大小写。</span><span class="sxs-lookup"><span data-stu-id="f01f9-104">When accessing <xref:System.Data.DataTable> objects, note that they are conditionally case sensitive.</span></span> <span data-ttu-id="f01f9-105">例如，如果一个 <xref:System.Data.DataTable> 名为 "mydatatable"，另一个名为 "mydatatable"，则用于搜索其中一个表的字符串被视为区分大小写。</span><span class="sxs-lookup"><span data-stu-id="f01f9-105">For example, if one <xref:System.Data.DataTable> is named "mydatatable" and another is named "Mydatatable", a string used to search for one of the tables is regarded as case sensitive.</span></span> <span data-ttu-id="f01f9-106">但是，如果 "mydatatable" 存在并且 "Mydatatable" 不是，则搜索字符串将被视为不区分大小写。</span><span class="sxs-lookup"><span data-stu-id="f01f9-106">However, if "mydatatable" exists and "Mydatatable" does not, the search string is regarded as case insensitive.</span></span> <span data-ttu-id="f01f9-107"><xref:System.Data.DataSet>可以包含两个 <xref:System.Data.DataTable> 对象，这些对象具有相同的 <xref:System.Data.DataTable.TableName%2A> 属性值，但 <xref:System.Data.DataTable.Namespace%2A> 属性值不同。</span><span class="sxs-lookup"><span data-stu-id="f01f9-107">A <xref:System.Data.DataSet> can contain two <xref:System.Data.DataTable> objects that have the same <xref:System.Data.DataTable.TableName%2A> property value but different <xref:System.Data.DataTable.Namespace%2A> property values.</span></span> <span data-ttu-id="f01f9-108">有关使用对象的详细信息 <xref:System.Data.DataTable> ，请参阅 [创建 DataTable](/dotnet/framework/data/adonet/dataset-datatable-dataview/creating-a-datatable)。</span><span class="sxs-lookup"><span data-stu-id="f01f9-108">For more information about working with <xref:System.Data.DataTable> objects, see [Creating a DataTable](/dotnet/framework/data/adonet/dataset-datatable-dataview/creating-a-datatable).</span></span>  
  
 <span data-ttu-id="f01f9-109">如果要 <xref:System.Data.DataTable> 以编程方式创建，则必须先通过将 <xref:System.Data.DataColumn> 对象添加到 <xref:System.Data.DataColumnCollection> 通过属性) 访问 (来定义其架构 <xref:System.Data.DataTable.Columns%2A> 。</span><span class="sxs-lookup"><span data-stu-id="f01f9-109">If you are creating a <xref:System.Data.DataTable> programmatically, you must first define its schema by adding <xref:System.Data.DataColumn> objects to the <xref:System.Data.DataColumnCollection> (accessed through the <xref:System.Data.DataTable.Columns%2A> property).</span></span> <span data-ttu-id="f01f9-110">有关添加对象的详细信息 <xref:System.Data.DataColumn> ，请参阅 [将列添加到 DataTable](/dotnet/framework/data/adonet/dataset-datatable-dataview/adding-columns-to-a-datatable)。</span><span class="sxs-lookup"><span data-stu-id="f01f9-110">For more information about adding <xref:System.Data.DataColumn> objects, see [Adding Columns to a DataTable](/dotnet/framework/data/adonet/dataset-datatable-dataview/adding-columns-to-a-datatable).</span></span>  
  
 <span data-ttu-id="f01f9-111">若要将行添加到 <xref:System.Data.DataTable> 中，必须首先使用 <xref:System.Data.DataTable.NewRow%2A> 方法返回新的 <xref:System.Data.DataRow> 对象。</span><span class="sxs-lookup"><span data-stu-id="f01f9-111">To add rows to a <xref:System.Data.DataTable>, you must first use the <xref:System.Data.DataTable.NewRow%2A> method to return a new <xref:System.Data.DataRow> object.</span></span> <span data-ttu-id="f01f9-112"><xref:System.Data.DataTable.NewRow%2A>方法返回一个具有架构的行 <xref:System.Data.DataTable> ，因为它是由表的定义的 <xref:System.Data.DataColumnCollection> 。</span><span class="sxs-lookup"><span data-stu-id="f01f9-112">The <xref:System.Data.DataTable.NewRow%2A> method returns a row with the schema of the <xref:System.Data.DataTable>, as it is defined by the table's <xref:System.Data.DataColumnCollection>.</span></span> <span data-ttu-id="f01f9-113">可存储的最大行数 <xref:System.Data.DataTable> 为16777216。</span><span class="sxs-lookup"><span data-stu-id="f01f9-113">The maximum number of rows that a <xref:System.Data.DataTable> can store is 16,777,216.</span></span> <span data-ttu-id="f01f9-114">有关详细信息，请参阅 [将数据添加到 DataTable](/dotnet/framework/data/adonet/dataset-datatable-dataview/adding-data-to-a-datatable)。</span><span class="sxs-lookup"><span data-stu-id="f01f9-114">For more information, see [Adding Data to a DataTable](/dotnet/framework/data/adonet/dataset-datatable-dataview/adding-data-to-a-datatable).</span></span>  
  
 <span data-ttu-id="f01f9-115"><xref:System.Data.DataTable>还包含一个 <xref:System.Data.Constraint> 对象集合，这些对象可用于确保数据的完整性。</span><span class="sxs-lookup"><span data-stu-id="f01f9-115">The <xref:System.Data.DataTable> also contains a collection of <xref:System.Data.Constraint> objects that can be used to ensure the integrity of the data.</span></span> <span data-ttu-id="f01f9-116">有关详细信息，请参阅 [DataTable 约束](/dotnet/framework/data/adonet/dataset-datatable-dataview/datatable-constraints)。</span><span class="sxs-lookup"><span data-stu-id="f01f9-116">For more information, see [DataTable Constraints](/dotnet/framework/data/adonet/dataset-datatable-dataview/datatable-constraints).</span></span>  
  
 <span data-ttu-id="f01f9-117"><xref:System.Data.DataTable>可以使用多个事件来确定何时对表进行了更改。</span><span class="sxs-lookup"><span data-stu-id="f01f9-117">There are many <xref:System.Data.DataTable> events that can be used to determine when changes are made to a table.</span></span> <span data-ttu-id="f01f9-118">其中包括 <xref:System.Data.DataTable.RowChanged>、<xref:System.Data.DataTable.RowChanging>、<xref:System.Data.DataTable.RowDeleting> 和 <xref:System.Data.DataTable.RowDeleted>。</span><span class="sxs-lookup"><span data-stu-id="f01f9-118">These include <xref:System.Data.DataTable.RowChanged>, <xref:System.Data.DataTable.RowChanging>, <xref:System.Data.DataTable.RowDeleting>, and <xref:System.Data.DataTable.RowDeleted>.</span></span> <span data-ttu-id="f01f9-119">有关可与一起使用的事件的详细信息 <xref:System.Data.DataTable> ，请参阅 [处理 DataTable 事件](/dotnet/framework/data/adonet/dataset-datatable-dataview/handling-datatable-events)。</span><span class="sxs-lookup"><span data-stu-id="f01f9-119">For more information about the events that can be used with a <xref:System.Data.DataTable>, see [Handling DataTable Events](/dotnet/framework/data/adonet/dataset-datatable-dataview/handling-datatable-events).</span></span>  
  
 <span data-ttu-id="f01f9-120">创建的实例后 <xref:System.Data.DataTable> ，某些读/写属性将设置为初始值。</span><span class="sxs-lookup"><span data-stu-id="f01f9-120">When an instance of <xref:System.Data.DataTable> is created, some of the read/write properties are set to initial values.</span></span> <span data-ttu-id="f01f9-121">有关这些值的列表，请参阅 <xref:System.Data.DataTable.%23ctor%2A?displayProperty=nameWithType> 构造函数主题。</span><span class="sxs-lookup"><span data-stu-id="f01f9-121">For a list of these values, see the <xref:System.Data.DataTable.%23ctor%2A?displayProperty=nameWithType> constructor topic.</span></span>  
  
> [!NOTE]
> <span data-ttu-id="f01f9-122"><xref:System.Data.DataSet>和 <xref:System.Data.DataTable> 对象从继承 <xref:System.ComponentModel.MarshalByValueComponent> ，并支持 <xref:System.Runtime.Serialization.ISerializable> .NET Framework 远程处理的接口。</span><span class="sxs-lookup"><span data-stu-id="f01f9-122">The <xref:System.Data.DataSet> and <xref:System.Data.DataTable> objects inherit from <xref:System.ComponentModel.MarshalByValueComponent> and support the <xref:System.Runtime.Serialization.ISerializable> interface for .NET Framework remoting.</span></span> <span data-ttu-id="f01f9-123">这些是唯一可用于 .NET Framework 远程处理的 ADO.NET 对象。</span><span class="sxs-lookup"><span data-stu-id="f01f9-123">These are the only ADO.NET objects that you can use for .NET Framework remoting.</span></span>

### <a name="security-considerations"></a><span data-ttu-id="f01f9-124">安全注意事项</span><span class="sxs-lookup"><span data-stu-id="f01f9-124">Security considerations</span></span>

<span data-ttu-id="f01f9-125">有关数据集和 DataTable 安全性的信息，请参阅 [安全指南](/dotnet/framework/data/adonet/dataset-datatable-dataview/security-guidance)。</span><span class="sxs-lookup"><span data-stu-id="f01f9-125">For information about DataSet and DataTable security, see [Security guidance](/dotnet/framework/data/adonet/dataset-datatable-dataview/security-guidance).</span></span>
  
## Examples  
 <span data-ttu-id="f01f9-126">下面的示例创建两个 <xref:System.Data.DataTable> 对象和一个 <xref:System.Data.DataRelation> 对象，并将新对象添加到 <xref:System.Data.DataSet> 中。</span><span class="sxs-lookup"><span data-stu-id="f01f9-126">The following example creates two <xref:System.Data.DataTable> objects and one <xref:System.Data.DataRelation> object, and adds the new objects to a <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="f01f9-127">然后，将在控件中显示这些表 <xref:System.Windows.Forms.DataGridView> 。</span><span class="sxs-lookup"><span data-stu-id="f01f9-127">The tables are then displayed in a <xref:System.Windows.Forms.DataGridView> control.</span></span>  
  
 [!code-csharp[Classic WebData DataTable Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable Example/VB/source.vb#1)]  
  
 <span data-ttu-id="f01f9-128">此示例演示如何使用特定的架构定义手动创建 DataTable：</span><span class="sxs-lookup"><span data-stu-id="f01f9-128">This sample demonstrates how to create a DataTable manually with specific schema definitions:</span></span>  
  
-   <span data-ttu-id="f01f9-129">创建多个 DataTable 并定义初始列。</span><span class="sxs-lookup"><span data-stu-id="f01f9-129">Create multiple DataTables and define the initial columns.</span></span>  
  
-   <span data-ttu-id="f01f9-130">创建表约束。</span><span class="sxs-lookup"><span data-stu-id="f01f9-130">Create the table constraints.</span></span>  
  
-   <span data-ttu-id="f01f9-131">插入值并显示表。</span><span class="sxs-lookup"><span data-stu-id="f01f9-131">Insert the values and display the tables.</span></span>  
  
-   <span data-ttu-id="f01f9-132">创建表达式列并显示表。</span><span class="sxs-lookup"><span data-stu-id="f01f9-132">Create the expression columns and display the tables.</span></span>  
  
 <span data-ttu-id="f01f9-133">带有此代码示例的 c # 和 Visual Basic 项目可在 [开发人员代码示例](https://code.msdn.microsoft.com/How-to-create-DataTable-7abb4914)中找到。</span><span class="sxs-lookup"><span data-stu-id="f01f9-133">C# and Visual Basic projects with this code sample can be found on [Developer Code Samples](https://code.msdn.microsoft.com/How-to-create-DataTable-7abb4914).</span></span>  
  
 [!code-csharp[Classic WebData DataTable Example2#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/classic webdata datatable example2/cs/source.cs#1)]
 [!code-vb[Classic WebData DataTable Example2#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/classic webdata datatable example2/vb/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="f01f9-134">对于多线程读取操作，此类型是安全的。</span><span class="sxs-lookup"><span data-stu-id="f01f9-134">This type is safe for multithreaded read operations.</span></span> <span data-ttu-id="f01f9-135">必须同步任何写入操作。</span><span class="sxs-lookup"><span data-stu-id="f01f9-135">You must synchronize any write operations.</span></span></threadsafe>
    <related type="Article" href="/dotnet/framework/data/adonet/dataset-datatable-dataview/datatables"><span data-ttu-id="f01f9-136">DataTables</span><span class="sxs-lookup"><span data-stu-id="f01f9-136">DataTables</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f01f9-137">初始化 <see cref="T:System.Data.DataTable" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="f01f9-137">Initializes a new instance of the <see cref="T:System.Data.DataTable" /> class.</span></span></summary>
        <related type="Article" href="/dotnet/framework/data/adonet/dataset-datatable-dataview/datatables"><span data-ttu-id="f01f9-138">DataTables</span><span class="sxs-lookup"><span data-stu-id="f01f9-138">DataTables</span></span></related>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataTable ();" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.#ctor" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataTable();" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f01f9-139">在不使用参数的情况下初始化 <see cref="T:System.Data.DataTable" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="f01f9-139">Initializes a new instance of the <see cref="T:System.Data.DataTable" /> class with no arguments.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f01f9-140">构造函数设置对象的所有属性的初始值 <xref:System.Data.DataTable> 。</span><span class="sxs-lookup"><span data-stu-id="f01f9-140">The constructor sets initial values for all properties of the <xref:System.Data.DataTable> object.</span></span> <span data-ttu-id="f01f9-141">下表显示了属性及其默认值。</span><span class="sxs-lookup"><span data-stu-id="f01f9-141">The following table shows the properties and their default values.</span></span> <span data-ttu-id="f01f9-142">创建实例时 <xref:System.Data.DataTable> ，以下读/写属性将设置为初始值。</span><span class="sxs-lookup"><span data-stu-id="f01f9-142">When an instance of <xref:System.Data.DataTable> is created, the following read/write properties are set to initial values.</span></span>  
  
|<span data-ttu-id="f01f9-143">properties</span><span class="sxs-lookup"><span data-stu-id="f01f9-143">Property</span></span>|<span data-ttu-id="f01f9-144">默认值</span><span class="sxs-lookup"><span data-stu-id="f01f9-144">Default value</span></span>|  
|--------------|-------------------|  
|<span data-ttu-id="f01f9-145">**CaseSensitive**</span><span class="sxs-lookup"><span data-stu-id="f01f9-145">**CaseSensitive**</span></span>|<span data-ttu-id="f01f9-146">如果它属于父级，则与父级相同 <xref:System.Data.DataSet> 。</span><span class="sxs-lookup"><span data-stu-id="f01f9-146">Same as the parent <xref:System.Data.DataSet>, if it belongs to one.</span></span> <span data-ttu-id="f01f9-147">否则为 `false`。</span><span class="sxs-lookup"><span data-stu-id="f01f9-147">Otherwise, `false`.</span></span>|  
|<span data-ttu-id="f01f9-148">**DisplayExpression**</span><span class="sxs-lookup"><span data-stu-id="f01f9-148">**DisplayExpression**</span></span>|<span data-ttu-id="f01f9-149">空字符串 ( "" ) </span><span class="sxs-lookup"><span data-stu-id="f01f9-149">Empty string ("")</span></span>|  
|<span data-ttu-id="f01f9-150">**区域设置**</span><span class="sxs-lookup"><span data-stu-id="f01f9-150">**Locale**</span></span>|<span data-ttu-id="f01f9-151">与 <xref:System.Data.DataSet> <xref:System.Globalization.CultureInfo>) 属性返回的父对象 (相同 <xref:System.Data.DataSet.Locale%2A> ; 如果不存在父对象，则默认值为当前系统 <xref:System.Globalization.CultureInfo> 。</span><span class="sxs-lookup"><span data-stu-id="f01f9-151">Same as the parent <xref:System.Data.DataSet> object's <xref:System.Globalization.CultureInfo> (returned by the <xref:System.Data.DataSet.Locale%2A> property); if no parent exists, the default is the current system <xref:System.Globalization.CultureInfo>.</span></span>|  
|<span data-ttu-id="f01f9-152">**MinimumCapacity**</span><span class="sxs-lookup"><span data-stu-id="f01f9-152">**MinimumCapacity**</span></span>|<span data-ttu-id="f01f9-153">50行。</span><span class="sxs-lookup"><span data-stu-id="f01f9-153">50 rows.</span></span>|  
  
 <span data-ttu-id="f01f9-154">可以通过单独调用属性来更改任何这些属性的值。</span><span class="sxs-lookup"><span data-stu-id="f01f9-154">You can change the value for any of these properties through a separate call to the property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f01f9-155">下面的示例使用和创建一个新的 <xref:System.Data.DataTable> <xref:System.Data.DataColumn> <xref:System.Data.DataRow> ，并在控件中显示它 <xref:System.Windows.Forms.DataGridView> 。</span><span class="sxs-lookup"><span data-stu-id="f01f9-155">The following example creates a new <xref:System.Data.DataTable> with <xref:System.Data.DataColumn> and <xref:System.Data.DataRow>, and displays it in a <xref:System.Windows.Forms.DataGridView> control.</span></span>  
  
 [!code-csharp[Classic WebData DataTable.DataTable Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable.DataTable Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable.DataTable Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable.DataTable Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/data/adonet/dataset-datatable-dataview/datatables"><span data-ttu-id="f01f9-156">DataTables</span><span class="sxs-lookup"><span data-stu-id="f01f9-156">DataTables</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataTable (string tableName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string tableName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (tableName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataTable(System::String ^ tableName);" />
      <MemberSignature Language="F#" Value="new System.Data.DataTable : string -&gt; System.Data.DataTable" Usage="new System.Data.DataTable tableName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="tableName" Type="System.String" Index="0" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="tableName"><span data-ttu-id="f01f9-157">要向表提供的名称。</span><span class="sxs-lookup"><span data-stu-id="f01f9-157">The name to give the table.</span></span> <span data-ttu-id="f01f9-158">如果 <paramref name="tableName" /> 为 <see langword="null" /> 或是空字符串，则在添加到 <see cref="T:System.Data.DataTableCollection" /> 中时指定默认名称。</span><span class="sxs-lookup"><span data-stu-id="f01f9-158">If <paramref name="tableName" /> is <see langword="null" /> or an empty string, a default name is given when added to the <see cref="T:System.Data.DataTableCollection" />.</span></span></param>
        <summary><span data-ttu-id="f01f9-159">使用指定的表名初始化 <see cref="T:System.Data.DataTable" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="f01f9-159">Initializes a new instance of the <see cref="T:System.Data.DataTable" /> class with the specified table name.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f01f9-160">下面的示例创建一个 <xref:System.Data.DataTable> ，并在控件中显示它 <xref:System.Windows.Forms.DataGridView> 。</span><span class="sxs-lookup"><span data-stu-id="f01f9-160">The following example creates a <xref:System.Data.DataTable> and displays it in a <xref:System.Windows.Forms.DataGridView> control.</span></span>  
  
 [!code-csharp[Classic WebData DataTable.DataTable1 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable.DataTable1 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable.DataTable1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable.DataTable1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/data/adonet/dataset-datatable-dataview/datatables"><span data-ttu-id="f01f9-161">DataTables</span><span class="sxs-lookup"><span data-stu-id="f01f9-161">DataTables</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected DataTable (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; DataTable(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="new System.Data.DataTable : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; System.Data.DataTable" Usage="new System.Data.DataTable (info, context)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" Index="0" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" Index="1" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="info"><span data-ttu-id="f01f9-162">序列化或反序列化对象所需的数据。</span><span class="sxs-lookup"><span data-stu-id="f01f9-162">The data needed to serialize or deserialize an object.</span></span></param>
        <param name="context"><span data-ttu-id="f01f9-163">给定序列化流的源和目标。</span><span class="sxs-lookup"><span data-stu-id="f01f9-163">The source and destination of a given serialized stream.</span></span></param>
        <summary><span data-ttu-id="f01f9-164">使用 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 和 <see cref="T:System.Runtime.Serialization.StreamingContext" /> 初始化 <see cref="T:System.Data.DataTable" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="f01f9-164">Initializes a new instance of the <see cref="T:System.Data.DataTable" /> class with the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> and the <see cref="T:System.Runtime.Serialization.StreamingContext" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f01f9-165">此 <xref:System.Data.DataTable> 构造函数的实现是必需的 <xref:System.Runtime.Serialization.ISerializable> 。</span><span class="sxs-lookup"><span data-stu-id="f01f9-165">This implementation of the <xref:System.Data.DataTable> constructor is required for <xref:System.Runtime.Serialization.ISerializable>.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/data/adonet/dataset-datatable-dataview/datatables"><span data-ttu-id="f01f9-166">DataTables</span><span class="sxs-lookup"><span data-stu-id="f01f9-166">DataTables</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataTable (string tableName, string tableNamespace);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string tableName, string tableNamespace) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (tableName As String, tableNamespace As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataTable(System::String ^ tableName, System::String ^ tableNamespace);" />
      <MemberSignature Language="F#" Value="new System.Data.DataTable : string * string -&gt; System.Data.DataTable" Usage="new System.Data.DataTable (tableName, tableNamespace)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="tableName" Type="System.String" Index="0" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="tableNamespace" Type="System.String" Index="1" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="tableName"><span data-ttu-id="f01f9-167">要向表提供的名称。</span><span class="sxs-lookup"><span data-stu-id="f01f9-167">The name to give the table.</span></span> <span data-ttu-id="f01f9-168">如果 <paramref name="tableName" /> 为 <see langword="null" /> 或是空字符串，则在添加到 <see cref="T:System.Data.DataTableCollection" /> 中时指定默认名称。</span><span class="sxs-lookup"><span data-stu-id="f01f9-168">If <paramref name="tableName" /> is <see langword="null" /> or an empty string, a default name is given when added to the <see cref="T:System.Data.DataTableCollection" />.</span></span></param>
        <param name="tableNamespace"><span data-ttu-id="f01f9-169"><see langword="DataTable" /> 中所存储数据的 XML 表示形式的命名空间。</span><span class="sxs-lookup"><span data-stu-id="f01f9-169">The namespace for the XML representation of the data stored in the <see langword="DataTable" />.</span></span></param>
        <summary><span data-ttu-id="f01f9-170">使用指定的表名和命名空间初始化 <see cref="T:System.Data.DataTable" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="f01f9-170">Initializes a new instance of the <see cref="T:System.Data.DataTable" /> class using the specified table name and namespace.</span></span></summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="/dotnet/framework/data/adonet/dataset-datatable-dataview/datatables"><span data-ttu-id="f01f9-171">DataTables</span><span class="sxs-lookup"><span data-stu-id="f01f9-171">DataTables</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="AcceptChanges">
      <MemberSignature Language="C#" Value="public void AcceptChanges ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AcceptChanges() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.AcceptChanges" />
      <MemberSignature Language="VB.NET" Value="Public Sub AcceptChanges ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AcceptChanges();" />
      <MemberSignature Language="F#" Value="member this.AcceptChanges : unit -&gt; unit" Usage="dataTable.AcceptChanges " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f01f9-172">提交自上次调用 <see cref="M:System.Data.DataTable.AcceptChanges" /> 以来对该表进行的所有更改。</span><span class="sxs-lookup"><span data-stu-id="f01f9-172">Commits all the changes made to this table since the last time <see cref="M:System.Data.DataTable.AcceptChanges" /> was called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f01f9-173"><xref:System.Data.DataTable.AcceptChanges%2A>调用时， <xref:System.Data.DataRow> 仍处于编辑模式的任何对象都将成功结束其编辑。</span><span class="sxs-lookup"><span data-stu-id="f01f9-173">When <xref:System.Data.DataTable.AcceptChanges%2A> is called, any <xref:System.Data.DataRow> object still in edit mode successfully ends its edits.</span></span> <span data-ttu-id="f01f9-174"><xref:System.Data.DataRowState>还将更改：所有 `Added` 和行均为 `Modified` `Unchanged` ， `Deleted` 行被删除。</span><span class="sxs-lookup"><span data-stu-id="f01f9-174">The <xref:System.Data.DataRowState> also changes: all `Added` and `Modified` rows become `Unchanged`, and `Deleted` rows are removed.</span></span>  
  
 <span data-ttu-id="f01f9-175">在 <xref:System.Data.DataTable.AcceptChanges%2A> <xref:System.Data.DataTable> 您尝试使用方法更新后，通常在上调用方法 <xref:System.Data.DataSet> <xref:System.Data.Common.DbDataAdapter.Update%2A?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="f01f9-175">The <xref:System.Data.DataTable.AcceptChanges%2A> method is generally called on a <xref:System.Data.DataTable> after you attempt to update the <xref:System.Data.DataSet> using the <xref:System.Data.Common.DbDataAdapter.Update%2A?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f01f9-176">下面的示例将测试每个表中的错误。</span><span class="sxs-lookup"><span data-stu-id="f01f9-176">The following example tests each table for errors.</span></span> <span data-ttu-id="f01f9-177">如果可以通过将表的错误传递到未定义的函数) 来对其进行协调 (<xref:System.Data.DataTable.AcceptChanges%2A> 则调用; 否则， <xref:System.Data.DataTable.RejectChanges%2A> 将调用。</span><span class="sxs-lookup"><span data-stu-id="f01f9-177">If the table's errors can be reconciled (by passing it to an undefined function), <xref:System.Data.DataTable.AcceptChanges%2A> is called; otherwise, <xref:System.Data.DataTable.RejectChanges%2A> is called.</span></span>  
  
 [!code-csharp[Classic WebData DataTable.AcceptChanges Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable.AcceptChanges Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable.AcceptChanges Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable.AcceptChanges Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/data/adonet/dataset-datatable-dataview/datatables"><span data-ttu-id="f01f9-178">DataTables</span><span class="sxs-lookup"><span data-stu-id="f01f9-178">DataTables</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="BeginInit">
      <MemberSignature Language="C#" Value="public virtual void BeginInit ();" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BeginInit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.BeginInit" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub BeginInit ()" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void BeginInit();" />
      <MemberSignature Language="F#" Value="abstract member BeginInit : unit -&gt; unit&#xA;override this.BeginInit : unit -&gt; unit" Usage="dataTable.BeginInit " />
      <MemberSignature Language="C#" Value="public void BeginInit ();" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="VB.NET" Value="Public Sub BeginInit ()" FrameworkAlternate="netframework-1.1" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.ISupportInitialize.BeginInit</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f01f9-179">开始初始化在窗体上使用或由另一个组件使用的 <see cref="T:System.Data.DataTable" />。</span><span class="sxs-lookup"><span data-stu-id="f01f9-179">Begins the initialization of a <see cref="T:System.Data.DataTable" /> that is used on a form or used by another component.</span></span> <span data-ttu-id="f01f9-180">初始化发生在运行时。</span><span class="sxs-lookup"><span data-stu-id="f01f9-180">The initialization occurs at run time.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f01f9-181">Visual Studio .NET 设计环境使用此方法开始初始化在窗体上使用或由另一个组件使用的组件。</span><span class="sxs-lookup"><span data-stu-id="f01f9-181">The Visual Studio .NET design environment uses this method to start the initialization of a component that is used on a form or used by another component.</span></span> <span data-ttu-id="f01f9-182"><xref:System.Data.DataTable.EndInit%2A>方法结束初始化。</span><span class="sxs-lookup"><span data-stu-id="f01f9-182">The <xref:System.Data.DataTable.EndInit%2A> method ends the initialization.</span></span> <span data-ttu-id="f01f9-183">使用 <xref:System.Data.DataTable.BeginInit%2A> 和 <xref:System.Data.DataTable.EndInit%2A> 方法可防止控件在完全初始化之前被使用。</span><span class="sxs-lookup"><span data-stu-id="f01f9-183">Using the <xref:System.Data.DataTable.BeginInit%2A> and <xref:System.Data.DataTable.EndInit%2A> methods prevents the control from being used before it is fully initialized.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/data/adonet/dataset-datatable-dataview/datatables"><span data-ttu-id="f01f9-184">DataTables</span><span class="sxs-lookup"><span data-stu-id="f01f9-184">DataTables</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="BeginLoadData">
      <MemberSignature Language="C#" Value="public void BeginLoadData ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void BeginLoadData() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.BeginLoadData" />
      <MemberSignature Language="VB.NET" Value="Public Sub BeginLoadData ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void BeginLoadData();" />
      <MemberSignature Language="F#" Value="member this.BeginLoadData : unit -&gt; unit" Usage="dataTable.BeginLoadData " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f01f9-185">加载数据时，关闭通知、索引维护和约束。</span><span class="sxs-lookup"><span data-stu-id="f01f9-185">Turns off notifications, index maintenance, and constraints while loading data.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f01f9-186">将 <xref:System.Data.DataTable.BeginLoadData%2A> 与和结合 <xref:System.Data.DataTable.LoadDataRow%2A> 使用 <xref:System.Data.DataTable.EndLoadData%2A> 。</span><span class="sxs-lookup"><span data-stu-id="f01f9-186">Use <xref:System.Data.DataTable.BeginLoadData%2A> in conjunction with <xref:System.Data.DataTable.LoadDataRow%2A> and <xref:System.Data.DataTable.EndLoadData%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/data/adonet/dataset-datatable-dataview/datatables"><span data-ttu-id="f01f9-187">DataTables</span><span class="sxs-lookup"><span data-stu-id="f01f9-187">DataTables</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CaseSensitive">
      <MemberSignature Language="C#" Value="public bool CaseSensitive { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CaseSensitive" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataTable.CaseSensitive" />
      <MemberSignature Language="VB.NET" Value="Public Property CaseSensitive As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CaseSensitive { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.CaseSensitive : bool with get, set" Usage="System.Data.DataTable.CaseSensitive" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName Language="C#">[System.Data.DataSysDescription("DataTableCaseSensitiveDescr")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Data.DataSysDescription("DataTableCaseSensitiveDescr")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f01f9-188">指示表中的字符串比较是否区分大小写。</span><span class="sxs-lookup"><span data-stu-id="f01f9-188">Indicates whether string comparisons within the table are case-sensitive.</span></span></summary>
        <value><span data-ttu-id="f01f9-189">如果比较区分大小写，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="f01f9-189"><see langword="true" /> if the comparison is case-sensitive; otherwise <see langword="false" />.</span></span> <span data-ttu-id="f01f9-190">默认值被设置为父级 <see cref="T:System.Data.DataSet" /> 对象的 <see cref="P:System.Data.DataSet.CaseSensitive" /> 属性；当 <see cref="T:System.Data.DataTable" /> 的创建独立于 <see cref="T:System.Data.DataSet" /> 时设置为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="f01f9-190">The default is set to the parent <see cref="T:System.Data.DataSet" /> object's <see cref="P:System.Data.DataSet.CaseSensitive" /> property, or <see langword="false" /> if the <see cref="T:System.Data.DataTable" /> was created independently of a <see cref="T:System.Data.DataSet" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f01f9-191"><xref:System.Data.DataTable.CaseSensitive%2A>属性会影响排序、搜索和筛选中的字符串比较。</span><span class="sxs-lookup"><span data-stu-id="f01f9-191">The <xref:System.Data.DataTable.CaseSensitive%2A> property affects string comparisons in sorting, searching, and filtering.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f01f9-192">下面的示例 <xref:System.Data.DataTable.Select%2A> 在上两次调用方法 <xref:System.Data.DataTable> 。</span><span class="sxs-lookup"><span data-stu-id="f01f9-192">The following example calls the <xref:System.Data.DataTable.Select%2A> method twice on a <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="f01f9-193">第一次， <xref:System.Data.DataTable.CaseSensitive%2A> 属性设置为 `false` ，第二个设置为 `true` 。</span><span class="sxs-lookup"><span data-stu-id="f01f9-193">The first time, the <xref:System.Data.DataTable.CaseSensitive%2A> property is set to `false`, the second, to `true`.</span></span>  
  
 [!code-csharp[Classic WebData DataTable.CaseSensitive Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable.CaseSensitive Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable.CaseSensitive Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable.CaseSensitive Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.DataTable.Select" />
        <related type="Article" href="/dotnet/framework/data/adonet/dataset-datatable-dataview/datatables"><span data-ttu-id="f01f9-194">DataTables</span><span class="sxs-lookup"><span data-stu-id="f01f9-194">DataTables</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ChildRelations">
      <MemberSignature Language="C#" Value="public System.Data.DataRelationCollection ChildRelations { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.DataRelationCollection ChildRelations" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataTable.ChildRelations" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ChildRelations As DataRelationCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::DataRelationCollection ^ ChildRelations { System::Data::DataRelationCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ChildRelations : System.Data.DataRelationCollection" Usage="System.Data.DataTable.ChildRelations" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName Language="C#">[System.Data.DataSysDescription("DataTableChildRelationsDescr")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Data.DataSysDescription("DataTableChildRelationsDescr")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.DataRelationCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f01f9-195">获取此 <see cref="T:System.Data.DataTable" /> 的子关系的集合。</span><span class="sxs-lookup"><span data-stu-id="f01f9-195">Gets the collection of child relations for this <see cref="T:System.Data.DataTable" />.</span></span></summary>
        <value><span data-ttu-id="f01f9-196">一个 <see cref="T:System.Data.DataRelationCollection" />，包含该表的子关系。</span><span class="sxs-lookup"><span data-stu-id="f01f9-196">A <see cref="T:System.Data.DataRelationCollection" /> that contains the child relations for the table.</span></span> <span data-ttu-id="f01f9-197">如果 <see cref="T:System.Data.DataRelation" /> 对象不存在，将返回空集合。</span><span class="sxs-lookup"><span data-stu-id="f01f9-197">An empty collection is returned if no <see cref="T:System.Data.DataRelation" /> objects exist.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f01f9-198"><xref:System.Data.DataRelation>定义两个表之间的关系。</span><span class="sxs-lookup"><span data-stu-id="f01f9-198">A <xref:System.Data.DataRelation> defines the relationship between two tables.</span></span> <span data-ttu-id="f01f9-199">通常，两个表通过包含相同数据的单个字段进行链接。</span><span class="sxs-lookup"><span data-stu-id="f01f9-199">Typically, two tables are linked through a single field that contains the same data.</span></span> <span data-ttu-id="f01f9-200">例如，包含地址数据的表可能包含一个字段，其中包含表示国家/地区的代码。</span><span class="sxs-lookup"><span data-stu-id="f01f9-200">For example, a table which contains address data may have a single field containing codes that represent countries/regions.</span></span> <span data-ttu-id="f01f9-201">包含国家/地区数据的第二个表中将包含一个字段，其中包含标识该国家/地区的代码，并将此代码插入到第一个表中的相应字段。</span><span class="sxs-lookup"><span data-stu-id="f01f9-201">A second table that contains country/region data will have a single field that contains the code that identifies the country/region, and it is this code which is inserted into the corresponding field in the first table.</span></span> <span data-ttu-id="f01f9-202"><xref:System.Data.DataRelation>然后，至少包含四条信息： (1) 第一个表的名称， (2) 第一个表中的列名称， (3) 第二个表的名称， (4) 第二个表中的列名称。</span><span class="sxs-lookup"><span data-stu-id="f01f9-202">A <xref:System.Data.DataRelation>, then, contains at least four pieces of information: (1) the name of the first table, (2) the column name in the first table, (3) the name of the second table, and (4) the column name in the second table.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f01f9-203">下面的示例使用 <xref:System.Data.DataTable.ChildRelations%2A> 属性返回中的每个子元素 <xref:System.Data.DataRelation> <xref:System.Data.DataTable> 。</span><span class="sxs-lookup"><span data-stu-id="f01f9-203">The following example uses the <xref:System.Data.DataTable.ChildRelations%2A> property to return each child <xref:System.Data.DataRelation> in a <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="f01f9-204">然后，每个关系在的方法中用作参数 <xref:System.Data.DataRow.GetChildRows%2A> <xref:System.Data.DataRow> 以返回行的数组。</span><span class="sxs-lookup"><span data-stu-id="f01f9-204">Each relation is then used as an argument in the <xref:System.Data.DataRow.GetChildRows%2A> method of the <xref:System.Data.DataRow> to return an array of rows.</span></span> <span data-ttu-id="f01f9-205">然后打印该行中每列的值。</span><span class="sxs-lookup"><span data-stu-id="f01f9-205">The value of each column in the row is then printed.</span></span>  
  
 [!code-csharp[Classic WebData DataTable.ChildRelations Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable.ChildRelations Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable.ChildRelations Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable.ChildRelations Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Data.DataTable.ParentRelations" />
        <altmember cref="M:System.Data.DataRow.GetParentRows(System.String)" />
        <altmember cref="M:System.Data.DataRow.GetChildRows(System.String)" />
        <related type="Article" href="/dotnet/framework/data/adonet/dataset-datatable-dataview/datatables"><span data-ttu-id="f01f9-206">DataTables</span><span class="sxs-lookup"><span data-stu-id="f01f9-206">DataTables</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberSignature Language="F#" Value="member this.Clear : unit -&gt; unit" Usage="dataTable.Clear " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f01f9-207">清除所有数据的 <see cref="T:System.Data.DataTable" />。</span><span class="sxs-lookup"><span data-stu-id="f01f9-207">Clears the <see cref="T:System.Data.DataTable" /> of all data.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f01f9-208">所有表中的所有行都将被删除。</span><span class="sxs-lookup"><span data-stu-id="f01f9-208">All rows in all tables are removed.</span></span> <span data-ttu-id="f01f9-209">如果表具有将导致子行孤立的任何已强制的子关系，则会生成异常。</span><span class="sxs-lookup"><span data-stu-id="f01f9-209">An exception is generated if the table has any enforced child relations that would cause child rows to be orphaned.</span></span>  
  
 <span data-ttu-id="f01f9-210">如果 <xref:System.Data.DataSet> 绑定到 <xref:System.Xml.XmlDataDocument> ，则调用 <xref:System.Data.DataSet.Clear%2A?displayProperty=nameWithType> 或 <xref:System.Data.DataTable.Clear%2A?displayProperty=nameWithType> 引发 <xref:System.NotSupportedException> 。</span><span class="sxs-lookup"><span data-stu-id="f01f9-210">If the <xref:System.Data.DataSet> is bound to an <xref:System.Xml.XmlDataDocument>, calling <xref:System.Data.DataSet.Clear%2A?displayProperty=nameWithType> or <xref:System.Data.DataTable.Clear%2A?displayProperty=nameWithType> raises the <xref:System.NotSupportedException>.</span></span> <span data-ttu-id="f01f9-211">若要避免这种情况，请遍历每个表，一次删除一个行。</span><span class="sxs-lookup"><span data-stu-id="f01f9-211">To avoid this situation, traverse each table, removing each row one at a time.</span></span> <span data-ttu-id="f01f9-212">使用 <xref:System.Data.DataTable.NewRow%2A> 创建新行时，必须在调用之前处理这些行 <xref:System.Data.DataTable.Clear%2A> 。</span><span class="sxs-lookup"><span data-stu-id="f01f9-212">When you use <xref:System.Data.DataTable.NewRow%2A> to create new rows, the rows must be processed before you call <xref:System.Data.DataTable.Clear%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f01f9-213">下面的示例将清除所有数据的表。</span><span class="sxs-lookup"><span data-stu-id="f01f9-213">The following example clears the table of all data.</span></span>  
  
 [!code-csharp[Classic WebData DataTable.Clear Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable.Clear Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable.Clear Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable.Clear Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/data/adonet/dataset-datatable-dataview/datatables"><span data-ttu-id="f01f9-214">DataTables</span><span class="sxs-lookup"><span data-stu-id="f01f9-214">DataTables</span></span></related>
        <related type="Article" href="/dotnet/framework/data/adonet/dataset-datatable-dataview/handling-datatable-events"><span data-ttu-id="f01f9-215">处理数据表事件</span><span class="sxs-lookup"><span data-stu-id="f01f9-215">Handling DataTable Events</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public virtual System.Data.DataTable Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Data.DataTable Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Clone () As DataTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Data::DataTable ^ Clone();" />
      <MemberSignature Language="F#" Value="abstract member Clone : unit -&gt; System.Data.DataTable&#xA;override this.Clone : unit -&gt; System.Data.DataTable" Usage="dataTable.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f01f9-216">克隆 <see cref="T:System.Data.DataTable" /> 的结构，包括所有 <see cref="T:System.Data.DataTable" /> 架构和约束。</span><span class="sxs-lookup"><span data-stu-id="f01f9-216">Clones the structure of the <see cref="T:System.Data.DataTable" />, including all <see cref="T:System.Data.DataTable" /> schemas and constraints.</span></span></summary>
        <returns><span data-ttu-id="f01f9-217">新的 <see cref="T:System.Data.DataTable" />，与当前 <see cref="T:System.Data.DataTable" /> 具有相同架构。</span><span class="sxs-lookup"><span data-stu-id="f01f9-217">A new <see cref="T:System.Data.DataTable" /> with the same schema as the current <see cref="T:System.Data.DataTable" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f01f9-218">如果这些类已派生，则克隆还会属于相同的派生类。</span><span class="sxs-lookup"><span data-stu-id="f01f9-218">If these classes have been derived, the clone will also be of the same derived classes.</span></span>  
  
 <span data-ttu-id="f01f9-219">克隆可创建具有与原始 <xref:System.Data.DataTable> 相同的结构的新 <xref:System.Data.DataTable>，但不复制任何数据（新 <xref:System.Data.DataTable> 将不会包含任何 `DataRows`）。</span><span class="sxs-lookup"><span data-stu-id="f01f9-219">Clone creates a new <xref:System.Data.DataTable> with the same structure as the original <xref:System.Data.DataTable>, but does not copy any data (the new <xref:System.Data.DataTable> will not contain any `DataRows`).</span></span> <span data-ttu-id="f01f9-220">若要同时将结构和数据复制到新 <xref:System.Data.DataTable> 中，请使用 <xref:System.Data.DataTable.Copy%2A>。</span><span class="sxs-lookup"><span data-stu-id="f01f9-220">To copy both the structure and data into a new <xref:System.Data.DataTable>, use <xref:System.Data.DataTable.Copy%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f01f9-221">以下示例演示如何在执行 DataTable.Clone 后更新目标表的结构和约束。</span><span class="sxs-lookup"><span data-stu-id="f01f9-221">The following sample demonstrates how to update the structure and constraints of the destination table after you execute DataTable.Clone.</span></span> <span data-ttu-id="f01f9-222">ClonedDataTable 类将返回目标表并包括所有更新事件。</span><span class="sxs-lookup"><span data-stu-id="f01f9-222">The ClonedDataTable class will return a destination table and includes all the updating events.</span></span> <span data-ttu-id="f01f9-223">克隆后，源表中的结构更改不会反映到目标表中。</span><span class="sxs-lookup"><span data-stu-id="f01f9-223">After the clone, structure changes in the source table won't be reflected in the destination table.</span></span> <span data-ttu-id="f01f9-224">具体而言，此示例将：</span><span class="sxs-lookup"><span data-stu-id="f01f9-224">Specifically, this sample will:</span></span>  
  
-   <span data-ttu-id="f01f9-225">更新源表中的列更改。</span><span class="sxs-lookup"><span data-stu-id="f01f9-225">Update the changes of the columns in source table.</span></span>  
  
-   <span data-ttu-id="f01f9-226">更新源表中的 UniqueConstraint 更改。</span><span class="sxs-lookup"><span data-stu-id="f01f9-226">Update the changes of the UniqueConstraint in source table.</span></span>  
  
-   <span data-ttu-id="f01f9-227">更新源表中的 ForeignKeyConstraint 更改。</span><span class="sxs-lookup"><span data-stu-id="f01f9-227">Update the changes of the ForeignKeyConstraint in source table.</span></span>  
  
 <span data-ttu-id="f01f9-228">带有此代码示例的 c # 和 Visual Basic 项目可在 [开发人员代码示例](https://code.msdn.microsoft.com/site/search?f%5B0%5D.Type=SearchText&f%5B0%5D.Value=How%20to%20automically%20update%20the%20structure%20of%20a%20cloned%20DataTable)中找到。</span><span class="sxs-lookup"><span data-stu-id="f01f9-228">C# and Visual Basic projects with this code sample can be found on [Developer Code Samples](https://code.msdn.microsoft.com/site/search?f%5B0%5D.Type=SearchText&f%5B0%5D.Value=How%20to%20automically%20update%20the%20structure%20of%20a%20cloned%20DataTable).</span></span>  
  
```csharp  
using System;  
using System.Linq;  
using System.Data;  
using System.ComponentModel;  
  
class Program {  
   static void Main(string[] args) {  
      DataTable courses = NewCourseDataTable();  
      Console.WriteLine("This is the source table:");  
      WriteDataTable(courses);  
  
      ClonedDataTable clonedResult = new ClonedDataTable(courses);  
      DataTable clonedCourses = clonedResult.DestinationTable;  
      Console.WriteLine("This is the destination table:");  
      WriteDataTable(clonedCourses);  
  
      // Add the events of updating column collection into the source table.  
      clonedResult.UpdateAddedColumn();  
      clonedResult.UpdateDeletedColumn();  
      // Add a DataColumn in source table.  
      DataColumn columnCredits = new DataColumn("Credits", typeof(Int32));  
      courses.Columns.Add(columnCredits);  
      Console.WriteLine("After add a column in source table, it's the result in the destination:");  
      WriteDataTable(clonedCourses);  
  
      // Add the event of updating UniqueConstraint into the source table.  
      clonedResult.UpdateUniqueConstraint();  
  
      // Add the unique constraint in source table.  
      UniqueConstraint uniqueConstraint = new UniqueConstraint(courses.Columns["CourseId"]);  
      courses.Constraints.Add(uniqueConstraint);  
  
      Console.WriteLine(@"If we add the unique constraint in source table and then insert the duplicate   
rows into the destination table, we will get the following error:");  
      InsertDuplicateData(clonedCourses);  
      Console.WriteLine();  
  
      // Add the event of updating ForeignKeyConstraint into the source table.  
      clonedResult.UpdateForeignKeyConstraint();  
  
      // Add the ForeignKeyConstraint into the source table.  
      DataTable departments = NewDepartmentDataTable();  
      DataSet dataset = new DataSet();  
  
      dataset.Tables.Add(courses);  
      dataset.Tables.Add(clonedCourses);  
      dataset.Tables.Add(departments);  
  
      ForeignKeyConstraint foreignKey = new ForeignKeyConstraint(departments.Columns["DepartmentId"], courses.Columns["DepartmentId"]);  
      courses.Constraints.Add(foreignKey);  
  
      Console.WriteLine(@"If we add the foreign key constraint in source table and then insert a row   
without the parent  into the destination table, we will get the following error:");  
      InsertNoParentRow(clonedCourses);  
      Console.WriteLine();  
  
      Console.WriteLine("Please press any key to exit...");  
      Console.ReadKey();  
   }  
  
   static private DataTable NewCourseDataTable() {  
      DataTable newTable = new DataTable();  
  
      DataColumn[] columns ={   
                                      new DataColumn("CourseId", typeof(String)),  
                                      new DataColumn("CourseName",typeof(String)),                                        
                                      new DataColumn("DepartmentId", typeof(Int32))  
                                  };  
  
      newTable.Columns.AddRange(columns);  
  
      newTable.Rows.Add("C1045", "Calculus", 7);  
      newTable.Rows.Add("C1061", "Physics", 1);  
      newTable.Rows.Add("C2021", "Composition", 2);  
      newTable.Rows.Add("C2042", "Literature", 2);  
  
      return newTable;  
   }  
  
   static private DataTable NewDeparmentDataTable() {  
      DataTable newTable = new DataTable();  
  
      DataColumn[] columns ={   
                                      new DataColumn("DepartmentId", typeof(Int32)),  
                                      new DataColumn("Name",typeof(String)),  
                                  };  
  
      newTable.Columns.AddRange(columns);  
  
      newTable.Rows.Add(1, "Engineering");  
      newTable.Rows.Add(2, "English");  
      newTable.Rows.Add(4, "Economics");  
      newTable.Rows.Add(7, "Mathematics");  
  
      return newTable;  
   }  
  
   static private void WriteDataTable(DataTable table) {  
      if (table == null)  
         return;  
  
      foreach (DataColumn column in table.Columns) {  
         Console.Write("{0,-15}", column.ColumnName);  
      }  
      Console.WriteLine();  
  
      foreach (DataRow row in table.Rows) {  
         for (int i = 0; i < table.Columns.Count; i++)  
            Console.Write("{0,-15}", row[i].ToString());  
         Console.WriteLine();  
      }  
  
      Console.WriteLine();  
   }  
  
   static private void InsertDuplicateData(DataTable table) {  
      try {  
         table.Rows.Add("C1045", "Calculus", 7);  
         table.Rows.Add("C1045", "Calculus", 7);  
      } catch (Exception e) {  
         Console.WriteLine("\"" + e.Message + "\"");  
      }  
   }  
  
   private static void InsertNoParentRow(DataTable table) {  
      try {  
         table.Rows.Add("C1061", "Physics", 11);  
      } catch (Exception e) {  
         Console.WriteLine("\"" + e.Message + "\"");  
      }  
   }  
}  
  
public class ClonedDataTable {  
   private DataTable sourceTable;  
   private DataTable destinationTable;  
  
   public ClonedDataTable(DataTable source) {  
      sourceTable = source;  
      // set the cloned result  
      destinationTable = sourceTable.Clone();  
   }  
  
   public void UpdateAddedColumn() {  
      sourceTable.Columns.CollectionChanged += new CollectionChangeEventHandler(ColumnAdded);  
   }  
  
   public void UpdateDeletedColumn() {  
      sourceTable.Columns.CollectionChanged += new CollectionChangeEventHandler(ColumnDeleted);  
   }  
  
   public void UpdateUniqueConstraint() {  
      sourceTable.Constraints.CollectionChanged += new CollectionChangeEventHandler(UniqueConstraint_Changed);  
   }  
  
   public void UpdateForeignKeyConstraint() {  
      sourceTable.Constraints.CollectionChanged += new CollectionChangeEventHandler(ForeignKeyConstraint_Changed);  
   }  
  
   // After the source table adds a column, the method will add the same column in the destination table.  
   void ColumnAdded(object sender, System.ComponentModel.CollectionChangeEventArgs e) {  
      if (e.Action == CollectionChangeAction.Add) {  
         DataColumn column = e.Element as DataColumn;  
  
         if (column != null) {  
            DataColumn newColumn = new DataColumn(column.ColumnName, column.DataType, column.Expression, column.ColumnMapping);  
  
            if (!destinationTable.Columns.Contains(newColumn.ColumnName))  
               destinationTable.Columns.Add(newColumn);  
         }  
      }  
   }  
  
   // After the source table deletes a column, the method will delete the same column in the destination table.  
   void ColumnDeleted(object sender, CollectionChangeEventArgs e) {  
      if (e.Action == CollectionChangeAction.Remove) {  
         DataColumn column = e.Element as DataColumn;  
  
         if (column != null)  
            if (destinationTable.Columns.Contains(column.ColumnName))  
               destinationTable.Columns.Remove(column.ColumnName);  
      }  
   }  
  
   // After the source table changes the UniqueConstraint, this method changes the same UniqueConstraint in destination table.        
   void UniqueConstraint_Changed(object sender, CollectionChangeEventArgs e) {  
      UniqueConstraint constraint = e.Element as UniqueConstraint;  
  
      if (constraint == null)  
         return;  
  
      String constraintName = constraint.ConstraintName;  
  
      if (e.Action == CollectionChangeAction.Add) {  
         DataColumn[] columns = new DataColumn[constraint.Columns.Count()];  
         Boolean isPrimaryKey = constraint.IsPrimaryKey;  
  
         // Get the columns used in new constraint from the destination table.  
         for (Int32 i = 0; i < constraint.Columns.Count(); i++) {  
            String columnName = constraint.Columns[i].ColumnName;  
  
            if (destinationTable.Columns.Contains(columnName))  
               columns[i] = destinationTable.Columns[columnName];  
            else  
               return;  
         }  
  
         UniqueConstraint newConstraint = new UniqueConstraint(constraintName, columns, isPrimaryKey);  
  
         if (!destinationTable.Constraints.Contains(constraintName))  
            destinationTable.Constraints.Add(newConstraint);  
  
      } else if (e.Action == CollectionChangeAction.Remove)  
         if (destinationTable.Constraints.Contains(constraintName))  
            destinationTable.Constraints.Remove(constraintName);  
   }  
  
   // After the source table changes the ForeignKeyConstraint, this method changes    
   // the same ForeignKeyConstraint in the destination table.  
   void ForeignKeyConstraint_Changed(object sender, CollectionChangeEventArgs e) {  
      ForeignKeyConstraint constraint = e.Element as ForeignKeyConstraint;  
  
      if (constraint == null)  
         return;  
  
      // If the source and destination are not in the same DataSet, don't change the ForeignKeyConstraint.  
      if (sourceTable.DataSet != destinationTable.DataSet)  
         return;  
  
      String constraintName = constraint.ConstraintName;  
  
      if (e.Action == CollectionChangeAction.Add) {  
         DataColumn[] columns = new DataColumn[constraint.Columns.Count()];  
         DataColumn[] parentColumns = constraint.RelatedColumns;  
  
         // Get the columns used in new constraint from the destination table.  
         for (int i = 0; i < constraint.Columns.Count(); i++) {  
            String columnName = constraint.Columns[i].ColumnName;  
  
            if (destinationTable.Columns.Contains(columnName))  
               columns[i] = destinationTable.Columns[columnName];  
            else  
               return;  
         }  
  
         ForeignKeyConstraint newConstraint = new ForeignKeyConstraint(constraintName, parentColumns, columns);  
         newConstraint.AcceptRejectRule = constraint.AcceptRejectRule;  
         newConstraint.DeleteRule = constraint.DeleteRule;  
         newConstraint.UpdateRule = constraint.UpdateRule;  
  
         if (!destinationTable.Constraints.Contains(constraintName))  
            destinationTable.Constraints.Add(newConstraint);  
      } else if (e.Action == CollectionChangeAction.Remove)  
         if (destinationTable.Constraints.Contains(constraintName))  
            destinationTable.Constraints.Remove(constraintName);  
   }  
  
   // return the destination table.  
   public DataTable DestinationTable {  
      get { return destinationTable; }  
   }  
}  
```  
  
 <span data-ttu-id="f01f9-229">此示例演示如何更改 DataTable 中的数据和更新数据源。</span><span class="sxs-lookup"><span data-stu-id="f01f9-229">This sample shows how to modify data in a DataTable and update the data source.</span></span>  
  
 <span data-ttu-id="f01f9-230">首先，创建一个数据库：</span><span class="sxs-lookup"><span data-stu-id="f01f9-230">First, create a database:</span></span>  
  
```  
USE [master]  
GO  
  
CREATE DATABASE [MySchool]   
  
GO  
  
USE [MySchool]  
GO  
  
SET ANSI_NULLS ON  
GO  
SET QUOTED_IDENTIFIER ON  
GO  
CREATE TABLE [dbo].[Course]([CourseID] [nvarchar](10) NOT NULL,  
[Year] [smallint] NOT NULL,  
[Title] [nvarchar](100) NOT NULL,  
[Credits] [int] NOT NULL,  
[DepartmentID] [int] NOT NULL,  
 CONSTRAINT [PK_Course] PRIMARY KEY CLUSTERED   
(  
[CourseID] ASC,  
[Year] ASC  
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]) ON [PRIMARY]  
  
GO  
  
SET ANSI_NULLS ON  
GO  
SET QUOTED_IDENTIFIER ON  
GO  
CREATE TABLE [dbo].[Department]([DepartmentID] [int] IDENTITY(1,1) NOT NULL,  
[Name] [nvarchar](50) NOT NULL,  
[Budget] [money] NOT NULL,  
[StartDate] [datetime] NOT NULL,  
[Administrator] [int] NULL,  
 CONSTRAINT [PK_Department] PRIMARY KEY CLUSTERED   
(  
[DepartmentID] ASC  
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]) ON [PRIMARY]  
  
GO  
  
INSERT [dbo].[Course] ([CourseID], [Year], [Title], [Credits], [DepartmentID]) VALUES (N'C1045', 2012, N'Calculus', 4, 7)  
INSERT [dbo].[Course] ([CourseID], [Year], [Title], [Credits], [DepartmentID]) VALUES (N'C1061', 2012, N'Physics', 4, 1)  
INSERT [dbo].[Course] ([CourseID], [Year], [Title], [Credits], [DepartmentID]) VALUES (N'C2021', 2012, N'Composition', 3, 2)  
INSERT [dbo].[Course] ([CourseID], [Year], [Title], [Credits], [DepartmentID]) VALUES (N'C2042', 2012, N'Literature', 4, 2)  
  
SET IDENTITY_INSERT [dbo].[Department] ON   
  
INSERT [dbo].[Department] ([DepartmentID], [Name], [Budget], [StartDate], [Administrator]) VALUES (1, N'Engineering', 350000.0000, CAST(0x0000999C00000000 AS DateTime), 2)  
INSERT [dbo].[Department] ([DepartmentID], [Name], [Budget], [StartDate], [Administrator]) VALUES (2, N'English', 120000.0000, CAST(0x0000999C00000000 AS DateTime), 6)  
INSERT [dbo].[Department] ([DepartmentID], [Name], [Budget], [StartDate], [Administrator]) VALUES (4, N'Economics', 200000.0000, CAST(0x0000999C00000000 AS DateTime), 4)  
INSERT [dbo].[Department] ([DepartmentID], [Name], [Budget], [StartDate], [Administrator]) VALUES (7, N'Mathematics', 250024.0000, CAST(0x0000999C00000000 AS DateTime), 3)  
SET IDENTITY_INSERT [dbo].[Department] OFF  
  
ALTER TABLE [dbo].[Course]  WITH CHECK ADD  CONSTRAINT [FK_Course_Department] FOREIGN KEY([DepartmentID])  
REFERENCES [dbo].[Department] ([DepartmentID])  
GO  
ALTER TABLE [dbo].[Course] CHECK CONSTRAINT [FK_Course_Department]  
GO  
```  
  
 <span data-ttu-id="f01f9-231">现在可编译并运行此示例。</span><span class="sxs-lookup"><span data-stu-id="f01f9-231">You can now compile and run the sample.</span></span> <span data-ttu-id="f01f9-232">[如何将 DataTable 中的数据和更新数据源的数据源修改为](https://code.msdn.microsoft.com/How-to-modify-data-in-c68d35f4) 此示例的 Visual Basic 和 c # 项目。</span><span class="sxs-lookup"><span data-stu-id="f01f9-232">[How to modify data in DataTable and update to the data source](https://code.msdn.microsoft.com/How-to-modify-data-in-c68d35f4) has Visual Basic and C# projects of this sample.</span></span>  
  
```csharp  
using System;  
using System.Data;  
using System.Data.SqlClient;  
  
class Program {  
   static void Main(string[] args) {  
  
   string MySchoolConnectionString = "Data Source=(local);Initial Catalog=MySchool;Integrated Security=True";  
  
      // Get Data  
      String selectString =  
       @"Select [CourseID],[Year],[Title],[Credits],[DepartmentID] From [dbo].[Course];  
               Select [DepartmentID],[Name],[Budget],[StartDate],[Administrator] From [dbo].[Department] ";  
  
      DataSet dataSet = new DataSet();  
      DataTable course = dataSet.Tables.Add("Course");  
      DataTable department = dataSet.Tables.Add("Department");  
  
      Console.WriteLine("Get data from database:");  
      GetDataTables(MySchoolConnectionString, selectString, dataSet, course, department);  
      Console.WriteLine();  
  
      // Use DataTable Edits to edit the data  
      String updateString =  
              @"Update [dbo].[Course] Set [Credits]=@Credits Where [CourseID]=@CourseID;";  
  
      course.ColumnChanged += OnColumnChanged;  
  
      // Set the Credits of first row is negative value, and set the Credits of second row is plus.  
      ChangeCredits(course, course.Rows[0], -1);  
      ChangeCredits(course, course.Rows[1], 11);  
  
      UpdateDataTables(MySchoolConnectionString, updateString, dataSet, "Course",  
          new SqlParameter("@CourseID", SqlDbType.NVarChar, 10, "CourseID"),  
          new SqlParameter("@Credits", SqlDbType.Int, 4, "Credits"));  
      Console.WriteLine("Only the Credits of second row is changed.");  
      ShowDataTable(course);  
      Console.WriteLine();  
  
      // Delete and Remove from DataTable  
      // Create the foreign key constraint, and set the DeleteRule with Cascade.  
      ForeignKeyConstraint courseDepartFK = new ForeignKeyConstraint("CourseDepartFK", department.Columns["DepartmentID"], course.Columns["DepartmentID"]);  
      courseDepartFK.DeleteRule = Rule.Cascade;  
      courseDepartFK.UpdateRule = Rule.Cascade;  
      courseDepartFK.AcceptRejectRule = AcceptRejectRule.None;  
      course.Constraints.Add(courseDepartFK);  
  
      String deleteString = @"Delete From [dbo].[Course] Where [CourseID]=@CourseID;";  
  
      department.Rows[0].Delete();  
      Console.WriteLine("If One row in Department table is deleted, the related rows in Course table will also be deleted.");  
      Console.WriteLine("Department DataTable:");  
      ShowDataTable(department);  
      Console.WriteLine();  
      Console.WriteLine("Course DataTable:");  
      ShowDataTable(course);  
      Console.WriteLine();  
      // Update the delete operation  
      DeleteDataTables(MySchoolConnectionString, deleteString, dataSet, "Course",  
          new SqlParameter("@CourseID", SqlDbType.NVarChar, 10, "CourseID"));  
      Console.WriteLine("After delete operation:");  
      Console.WriteLine("Course DataTable:");  
      ShowDataTable(course);  
      Console.WriteLine();  
  
      course.Rows.RemoveAt(0);  
      Console.WriteLine("Now we remove one row from Course:");  
      ShowDataTable(course);  
      DeleteDataTables(MySchoolConnectionString, deleteString, dataSet, "Course",  
          new SqlParameter("@CourseID", SqlDbType.NVarChar, 10, "CourseID"));  
   }  
  
   // Use SqlDataAdapter to get data.  
   private static void GetDataTables(String connectionString, String selectString,  
       DataSet dataSet, params DataTable[] tables) {  
      using (SqlDataAdapter adapter = new SqlDataAdapter()) {  
         adapter.SelectCommand = new SqlCommand(selectString);  
         adapter.SelectCommand.Connection = new SqlConnection(connectionString);  
  
         adapter.Fill(0, 0, tables);  
  
         foreach (DataTable table in dataSet.Tables) {  
            Console.WriteLine("Data in {0}:", table.TableName);  
            ShowDataTable(table);  
            Console.WriteLine();  
         }  
      }  
   }  
  
   // Use SqlDataAdapter to update the updata operation.  
   private static void UpdateDataTables(String connectionString, String updateString,  
       DataSet dataSet, String tableName, params SqlParameter[] parameters) {  
      using (SqlDataAdapter adapter = new SqlDataAdapter()) {  
         adapter.UpdateCommand = new SqlCommand(updateString);  
         adapter.UpdateCommand.Parameters.AddRange(parameters);  
         adapter.UpdateCommand.Connection = new SqlConnection(connectionString);  
  
         adapter.Update(dataSet, tableName);  
      }  
   }  
  
   // Use SqlDataAdapter to update delete operation.  
   private static void DeleteDataTables(String connectionString, String deleteString,  
       DataSet dataSet, String tableName, params SqlParameter[] parameters) {  
      using (SqlDataAdapter adapter = new SqlDataAdapter()) {  
         adapter.DeleteCommand = new SqlCommand(deleteString);  
         adapter.DeleteCommand.Parameters.AddRange(parameters);  
         adapter.DeleteCommand.Connection = new SqlConnection(connectionString);  
  
         adapter.Update(dataSet, tableName);  
      }  
   }  
  
   // Use DataTable Edits to modify the data.  
   private static void ChangeCredits(DataTable table, DataRow row, Int32 credits) {  
      row.BeginEdit();  
      Console.WriteLine("We change row {0}", table.Rows.IndexOf(row));  
      row["Credits"] = credits;  
      row.EndEdit();  
   }  
  
   // The method will be invoked when the value in DataTable is changed.  
   private static void OnColumnChanged(Object sender, DataColumnChangeEventArgs args) {  
      Int32 credits = 0;  
      // If Credits is changed and the value is negative, we'll cancel the edit.  
      if ((args.Column.ColumnName == "Credits") &&  
          (!Int32.TryParse(args.ProposedValue.ToString(), out credits) || credits < 0)) {  
         Console.WriteLine("The value of Credits is invalid. Edit canceled.");  
         args.Row.CancelEdit();  
      }  
   }  
  
   // Display the column and value of DataTable.  
   private static void ShowDataTable(DataTable table) {  
      foreach (DataColumn col in table.Columns) {  
         Console.Write("{0,-14}", col.ColumnName);  
      }  
      Console.WriteLine("{0,-14}", "RowState");  
  
      foreach (DataRow row in table.Rows) {  
         if (row.RowState == DataRowState.Deleted) {  
            foreach (DataColumn col in table.Columns) {  
               if (col.DataType.Equals(typeof(DateTime)))  
                  Console.Write("{0,-14:d}", row[col, DataRowVersion.Original]);  
               else if (col.DataType.Equals(typeof(Decimal)))  
                  Console.Write("{0,-14:C}", row[col, DataRowVersion.Original]);  
               else  
                  Console.Write("{0,-14}", row[col, DataRowVersion.Original]);  
            }  
         }  
         else {  
            foreach (DataColumn col in table.Columns) {  
               if (col.DataType.Equals(typeof(DateTime)))  
                  Console.Write("{0,-14:d}", row[col]);  
               else if (col.DataType.Equals(typeof(Decimal)))  
                  Console.Write("{0,-14:C}", row[col]);  
               else  
                  Console.Write("{0,-14}", row[col]);  
            }  
         }  
         Console.WriteLine("{0,-14}", row.RowState);  
      }  
   }  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.DataTable.Copy" />
        <related type="Article" href="/dotnet/framework/data/adonet/dataset-datatable-dataview/datatables"><span data-ttu-id="f01f9-233">DataTables</span><span class="sxs-lookup"><span data-stu-id="f01f9-233">DataTables</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ColumnChanged">
      <MemberSignature Language="C#" Value="public event System.Data.DataColumnChangeEventHandler ColumnChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Data.DataColumnChangeEventHandler ColumnChanged" />
      <MemberSignature Language="DocId" Value="E:System.Data.DataTable.ColumnChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ColumnChanged As DataColumnChangeEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Data::DataColumnChangeEventHandler ^ ColumnChanged;" />
      <MemberSignature Language="F#" Value="member this.ColumnChanged : System.Data.DataColumnChangeEventHandler " Usage="member this.ColumnChanged : System.Data.DataColumnChangeEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName Language="C#">[System.Data.DataSysDescription("DataTableColumnChangedDescr")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Data.DataSysDescription("DataTableColumnChangedDescr")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.DataColumnChangeEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f01f9-234">更改 <see cref="T:System.Data.DataRow" /> 中指定的 <see cref="T:System.Data.DataColumn" /> 值之后发生。</span><span class="sxs-lookup"><span data-stu-id="f01f9-234">Occurs after a value has been changed for the specified <see cref="T:System.Data.DataColumn" /> in a <see cref="T:System.Data.DataRow" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f01f9-235">有关详细信息，请参阅 [处理 DataTable 事件](/dotnet/framework/data/adonet/dataset-datatable-dataview/handling-datatable-events)。</span><span class="sxs-lookup"><span data-stu-id="f01f9-235">For more information, see [Handling DataTable Events](/dotnet/framework/data/adonet/dataset-datatable-dataview/handling-datatable-events).</span></span>  
  
   
  
## Examples  
 [!code-csharp[Classic WebData DataTable.ColumnChanged Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable.ColumnChanged Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable.ColumnChanged Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable.ColumnChanged Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Data.DataColumnChangeEventHandler" />
        <related type="Article" href="/dotnet/framework/data/adonet/dataset-datatable-dataview/datatables"><span data-ttu-id="f01f9-236">DataTables</span><span class="sxs-lookup"><span data-stu-id="f01f9-236">DataTables</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ColumnChanging">
      <MemberSignature Language="C#" Value="public event System.Data.DataColumnChangeEventHandler ColumnChanging;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Data.DataColumnChangeEventHandler ColumnChanging" />
      <MemberSignature Language="DocId" Value="E:System.Data.DataTable.ColumnChanging" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ColumnChanging As DataColumnChangeEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Data::DataColumnChangeEventHandler ^ ColumnChanging;" />
      <MemberSignature Language="F#" Value="member this.ColumnChanging : System.Data.DataColumnChangeEventHandler " Usage="member this.ColumnChanging : System.Data.DataColumnChangeEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName Language="C#">[System.Data.DataSysDescription("DataTableColumnChangingDescr")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Data.DataSysDescription("DataTableColumnChangingDescr")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.DataColumnChangeEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f01f9-237">更改 <see cref="T:System.Data.DataRow" /> 中指定的 <see cref="T:System.Data.DataColumn" /> 值时发生。</span><span class="sxs-lookup"><span data-stu-id="f01f9-237">Occurs when a value is being changed for the specified <see cref="T:System.Data.DataColumn" /> in a <see cref="T:System.Data.DataRow" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f01f9-238">有关详细信息，请参阅 [处理 DataTable 事件](/dotnet/framework/data/adonet/dataset-datatable-dataview/handling-datatable-events)。</span><span class="sxs-lookup"><span data-stu-id="f01f9-238">For more information, see [Handling DataTable Events](/dotnet/framework/data/adonet/dataset-datatable-dataview/handling-datatable-events).</span></span>  
  
   
  
## Examples  
 [!code-csharp[Classic WebData DataTable.ColumnChanging Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable.ColumnChanging Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable.ColumnChanging Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable.ColumnChanging Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/data/adonet/dataset-datatable-dataview/datatables"><span data-ttu-id="f01f9-239">DataTables</span><span class="sxs-lookup"><span data-stu-id="f01f9-239">DataTables</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Columns">
      <MemberSignature Language="C#" Value="public System.Data.DataColumnCollection Columns { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.DataColumnCollection Columns" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataTable.Columns" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Columns As DataColumnCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::DataColumnCollection ^ Columns { System::Data::DataColumnCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Columns : System.Data.DataColumnCollection" Usage="System.Data.DataTable.Columns" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName Language="C#">[System.Data.DataSysDescription("DataTableColumnsDescr")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Data.DataSysDescription("DataTableColumnsDescr")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.DataColumnCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f01f9-240">获取属于该表的列的集合。</span><span class="sxs-lookup"><span data-stu-id="f01f9-240">Gets the collection of columns that belong to this table.</span></span></summary>
        <value><span data-ttu-id="f01f9-241">一个 <see cref="T:System.Data.DataColumnCollection" />，包含该表的 <see cref="T:System.Data.DataColumn" /> 对象的集合。</span><span class="sxs-lookup"><span data-stu-id="f01f9-241">A <see cref="T:System.Data.DataColumnCollection" /> that contains the collection of <see cref="T:System.Data.DataColumn" /> objects for the table.</span></span> <span data-ttu-id="f01f9-242">如果 <see cref="T:System.Data.DataColumn" /> 对象不存在，将返回空集合。</span><span class="sxs-lookup"><span data-stu-id="f01f9-242">An empty collection is returned if no <see cref="T:System.Data.DataColumn" /> objects exist.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f01f9-243"><xref:System.Data.DataColumnCollection>通过定义每个列的数据类型来确定表的架构。</span><span class="sxs-lookup"><span data-stu-id="f01f9-243">The <xref:System.Data.DataColumnCollection> determines the schema of a table by defining the data type of each column.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f01f9-244">下面的示例使用属性输出表中每一行的每个值 <xref:System.Data.DataTable.Columns%2A> 。</span><span class="sxs-lookup"><span data-stu-id="f01f9-244">The following example prints each value of each row in a table using the <xref:System.Data.DataTable.Columns%2A> property.</span></span>  
  
 [!code-csharp[Classic WebData DataTable.Columns Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable.Columns Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable.Columns Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable.Columns Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/data/adonet/dataset-datatable-dataview/datatables"><span data-ttu-id="f01f9-245">DataTables</span><span class="sxs-lookup"><span data-stu-id="f01f9-245">DataTables</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Compute">
      <MemberSignature Language="C#" Value="public object? Compute (string expression, string filter);" FrameworkAlternate="net-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object Compute(string expression, string filter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.Compute(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Compute (expression As String, filter As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Compute(System::String ^ expression, System::String ^ filter);" />
      <MemberSignature Language="F#" Value="member this.Compute : string * string -&gt; obj" Usage="dataTable.Compute (expression, filter)" />
      <MemberSignature Language="C#" Value="public object Compute (string expression, string filter);" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.String" Index="0" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="filter" Type="System.String" Index="1" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="expression"><span data-ttu-id="f01f9-246">要计算的表达式。</span><span class="sxs-lookup"><span data-stu-id="f01f9-246">The expression to compute.</span></span></param>
        <param name="filter"><span data-ttu-id="f01f9-247">用于限制表达式中计算的行的筛选器。</span><span class="sxs-lookup"><span data-stu-id="f01f9-247">The filter to limit the rows that evaluate in the expression.</span></span></param>
        <summary><span data-ttu-id="f01f9-248">计算用来传递筛选条件的当前行上的给定表达式。</span><span class="sxs-lookup"><span data-stu-id="f01f9-248">Computes the given expression on the current rows that pass the filter criteria.</span></span></summary>
        <returns><span data-ttu-id="f01f9-249">将 <see cref="T:System.Object" /> 设置为计算结果。</span><span class="sxs-lookup"><span data-stu-id="f01f9-249">An <see cref="T:System.Object" />, set to the result of the computation.</span></span> <span data-ttu-id="f01f9-250">如果该表达式计算结果为 null，则返回值为 <see cref="F:System.DBNull.Value" />。</span><span class="sxs-lookup"><span data-stu-id="f01f9-250">If the expression evaluates to null, the return value will be <see cref="F:System.DBNull.Value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f01f9-251">`expression`参数需要聚合函数。</span><span class="sxs-lookup"><span data-stu-id="f01f9-251">The `expression` parameter requires an aggregate function.</span></span> <span data-ttu-id="f01f9-252">例如，下面是一个合法表达式：</span><span class="sxs-lookup"><span data-stu-id="f01f9-252">For example, the following is a legal expression:</span></span>  
  
 `Count(Quantity)`  
  
 <span data-ttu-id="f01f9-253">但此表达式不是：</span><span class="sxs-lookup"><span data-stu-id="f01f9-253">But this expression is not:</span></span>  
  
 `Sum (Quantity * UnitPrice)`  
  
 <span data-ttu-id="f01f9-254">如果必须对两个或更多个列执行操作，则应创建一个 <xref:System.Data.DataColumn> ，将其 <xref:System.Data.DataColumn.Expression%2A> 属性设置为相应的表达式，并对生成的列使用聚合表达式。</span><span class="sxs-lookup"><span data-stu-id="f01f9-254">If you must perform an operation on two or more columns, you should create a <xref:System.Data.DataColumn>, set its <xref:System.Data.DataColumn.Expression%2A> property to an appropriate expression, and use an aggregate expression on the resulting column.</span></span> <span data-ttu-id="f01f9-255">在这种情况下，假定 <xref:System.Data.DataColumn> 名称为 "total"，并将 <xref:System.Data.DataColumn.Expression%2A> 属性设置为：</span><span class="sxs-lookup"><span data-stu-id="f01f9-255">In that case, given a <xref:System.Data.DataColumn> with the name "total", and the <xref:System.Data.DataColumn.Expression%2A> property set to this:</span></span>  
  
 `"Quantity * UnitPrice"`  
  
 <span data-ttu-id="f01f9-256">然后，该方法的 expression 参数 <xref:System.Data.DataTable.Compute%2A> 将为：</span><span class="sxs-lookup"><span data-stu-id="f01f9-256">The expression argument for the <xref:System.Data.DataTable.Compute%2A> method would then be this:</span></span>  
  
 `Sum(total)`  
  
 <span data-ttu-id="f01f9-257">第二个参数 `filter` 确定要在表达式中使用的行。</span><span class="sxs-lookup"><span data-stu-id="f01f9-257">The second parameter, `filter`, determines which rows are used in the expression.</span></span> <span data-ttu-id="f01f9-258">例如，如果表中包含名为 "colDate" 的日期列，则可以使用以下表达式限制行：</span><span class="sxs-lookup"><span data-stu-id="f01f9-258">For example, if the table contains a date column named "colDate", you could limit the rows with the following expression:</span></span>  
  
 `colDate > 1/1/99 AND colDate < 17/1/99`  
  
 <span data-ttu-id="f01f9-259">有关为这两个参数创建表达式的规则，请参见 <xref:System.Data.DataColumn.Expression%2A?displayProperty=nameWithType> 属性。</span><span class="sxs-lookup"><span data-stu-id="f01f9-259">For rules on creating expressions for both parameters, see the <xref:System.Data.DataColumn.Expression%2A?displayProperty=nameWithType> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f01f9-260">下面的示例将名为 "Total" 的列的值与标识号为5的销售人员的值求和。</span><span class="sxs-lookup"><span data-stu-id="f01f9-260">The following example sums the values of a column named "Total", for the salesperson whose identification number is five.</span></span>  
  
 [!code-csharp[Classic WebData DataTable.Compute Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable.Compute Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable.Compute Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable.Compute Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/data/adonet/dataset-datatable-dataview/datatables"><span data-ttu-id="f01f9-261">DataTables</span><span class="sxs-lookup"><span data-stu-id="f01f9-261">DataTables</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Constraints">
      <MemberSignature Language="C#" Value="public System.Data.ConstraintCollection Constraints { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.ConstraintCollection Constraints" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataTable.Constraints" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Constraints As ConstraintCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::ConstraintCollection ^ Constraints { System::Data::ConstraintCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Constraints : System.Data.ConstraintCollection" Usage="System.Data.DataTable.Constraints" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName Language="C#">[System.Data.DataSysDescription("DataTableConstraintsDescr")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Data.DataSysDescription("DataTableConstraintsDescr")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.ConstraintCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f01f9-262">获取由该表维护的约束的集合。</span><span class="sxs-lookup"><span data-stu-id="f01f9-262">Gets the collection of constraints maintained by this table.</span></span></summary>
        <value><span data-ttu-id="f01f9-263">一个 <see cref="T:System.Data.ConstraintCollection" />，包含该表的 <see cref="T:System.Data.Constraint" /> 对象的集合。</span><span class="sxs-lookup"><span data-stu-id="f01f9-263">A <see cref="T:System.Data.ConstraintCollection" /> that contains the collection of <see cref="T:System.Data.Constraint" /> objects for the table.</span></span> <span data-ttu-id="f01f9-264">如果 <see cref="T:System.Data.Constraint" /> 对象不存在，将返回空集合。</span><span class="sxs-lookup"><span data-stu-id="f01f9-264">An empty collection is returned if no <see cref="T:System.Data.Constraint" /> objects exist.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f01f9-265"><xref:System.Data.ForeignKeyConstraint>限制在删除或更新列中的值 (或列) 时执行的操作。</span><span class="sxs-lookup"><span data-stu-id="f01f9-265">A <xref:System.Data.ForeignKeyConstraint> restricts the action performed when a value in a column (or columns) is either deleted or updated.</span></span> <span data-ttu-id="f01f9-266">此类约束旨在与主键列一起使用。</span><span class="sxs-lookup"><span data-stu-id="f01f9-266">Such a constraint is intended to be used with primary key columns.</span></span> <span data-ttu-id="f01f9-267">在两个表之间的父/子关系中，从父表中删除某个值可能会以下列方式之一影响子行。</span><span class="sxs-lookup"><span data-stu-id="f01f9-267">In a parent/child relationship between two tables, deleting a value from the parent table can affect the child rows in one of the following ways.</span></span>  
  
-   <span data-ttu-id="f01f9-268">还可以 (级联操作) 删除子行。</span><span class="sxs-lookup"><span data-stu-id="f01f9-268">The child rows can also be deleted (a cascading action).</span></span>  
  
-   <span data-ttu-id="f01f9-269">子列 (或列) 中的值可以设置为 null 值。</span><span class="sxs-lookup"><span data-stu-id="f01f9-269">The values in the child column (or columns) can be set to null values.</span></span>  
  
-   <span data-ttu-id="f01f9-270">子列 (或列) 中的值可以设置为默认值。</span><span class="sxs-lookup"><span data-stu-id="f01f9-270">The values in the child column (or columns) can be set to default values.</span></span>  
  
-   <span data-ttu-id="f01f9-271">可以生成异常。</span><span class="sxs-lookup"><span data-stu-id="f01f9-271">An exception can be generated.</span></span>  
  
 <span data-ttu-id="f01f9-272"><xref:System.Data.UniqueConstraint>当尝试将主键中的值设置为非唯一值时，将变为活动状态。</span><span class="sxs-lookup"><span data-stu-id="f01f9-272">A <xref:System.Data.UniqueConstraint> becomes active when attempting to set a value in a primary key to a non-unique value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f01f9-273">下面的示例将添加 <xref:System.Data.ForeignKeyConstraint> 到约束的集合。</span><span class="sxs-lookup"><span data-stu-id="f01f9-273">The following example adds a <xref:System.Data.ForeignKeyConstraint> to the collection of constraints.</span></span>  
  
 [!code-csharp[Classic WebData DataTable.Constraints Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable.Constraints Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable.Constraints Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable.Constraints Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/data/adonet/dataset-datatable-dataview/datatables"><span data-ttu-id="f01f9-274">DataTables</span><span class="sxs-lookup"><span data-stu-id="f01f9-274">DataTables</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public System.Data.DataTable Copy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataTable Copy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.Copy" />
      <MemberSignature Language="VB.NET" Value="Public Function Copy () As DataTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::DataTable ^ Copy();" />
      <MemberSignature Language="F#" Value="member this.Copy : unit -&gt; System.Data.DataTable" Usage="dataTable.Copy " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f01f9-275">复制该 <see cref="T:System.Data.DataTable" /> 的结构和数据。</span><span class="sxs-lookup"><span data-stu-id="f01f9-275">Copies both the structure and data for this <see cref="T:System.Data.DataTable" />.</span></span></summary>
        <returns><span data-ttu-id="f01f9-276">新的 <see cref="T:System.Data.DataTable" />，具有与该 <see cref="T:System.Data.DataTable" /> 相同的结构（表架构和约束）和数据。</span><span class="sxs-lookup"><span data-stu-id="f01f9-276">A new <see cref="T:System.Data.DataTable" /> with the same structure (table schemas and constraints) and data as this <see cref="T:System.Data.DataTable" />.</span></span>  
  
<span data-ttu-id="f01f9-277">如果已派生这些类，则副本也是相同的派生类。</span><span class="sxs-lookup"><span data-stu-id="f01f9-277">If these classes have been derived, the copy will also be of the same derived classes.</span></span>  
  
 <span data-ttu-id="f01f9-278"><see cref="M:System.Data.DataTable.Copy" /> 创建一个新 <see cref="T:System.Data.DataTable" />，后者与原始 <see cref="T:System.Data.DataTable" /> 具有相同的结构和数据。</span><span class="sxs-lookup"><span data-stu-id="f01f9-278"><see cref="M:System.Data.DataTable.Copy" /> creates a new <see cref="T:System.Data.DataTable" /> with the same structure and data as the original <see cref="T:System.Data.DataTable" />.</span></span> <span data-ttu-id="f01f9-279">要将结构复制到新的 <see cref="T:System.Data.DataTable" />，而不是复制到数据，请使用 <see cref="M:System.Data.DataTable.Clone" />。</span><span class="sxs-lookup"><span data-stu-id="f01f9-279">To copy the structure to a new <see cref="T:System.Data.DataTable" />, but not the data, use <see cref="M:System.Data.DataTable.Clone" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f01f9-280">下面的示例使用 <xref:System.Data.DataTable.Copy%2A> 方法创建原始的副本 <xref:System.Data.DataTable> 。</span><span class="sxs-lookup"><span data-stu-id="f01f9-280">The following example uses the <xref:System.Data.DataTable.Copy%2A> method to create a copy of the original <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="f01f9-281">如果命名空间名称继承自父级或，则不保留该 <xref:System.Data.DataTable> 名称 <xref:System.Data.DataSet> 。</span><span class="sxs-lookup"><span data-stu-id="f01f9-281">The namespace name is not retained if it is inherited from a parent <xref:System.Data.DataTable> or <xref:System.Data.DataSet>.</span></span>  
  
 [!code-csharp[Classic WebData DataTable.Copy Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable.Copy Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable.Copy Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable.Copy Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.DataView.ToTable" />
        <altmember cref="M:System.Data.DataTable.Clone" />
        <related type="Article" href="/dotnet/framework/data/adonet/dataset-datatable-dataview/datatables"><span data-ttu-id="f01f9-282">DataTables</span><span class="sxs-lookup"><span data-stu-id="f01f9-282">DataTables</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CreateDataReader">
      <MemberSignature Language="C#" Value="public System.Data.DataTableReader CreateDataReader ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataTableReader CreateDataReader() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.CreateDataReader" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateDataReader () As DataTableReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::DataTableReader ^ CreateDataReader();" />
      <MemberSignature Language="F#" Value="member this.CreateDataReader : unit -&gt; System.Data.DataTableReader" Usage="dataTable.CreateDataReader " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTableReader</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f01f9-283">返回与此 <see cref="T:System.Data.DataTable" /> 内的数据对应的 <see cref="T:System.Data.DataTableReader" />。</span><span class="sxs-lookup"><span data-stu-id="f01f9-283">Returns a <see cref="T:System.Data.DataTableReader" /> corresponding to the data within this <see cref="T:System.Data.DataTable" />.</span></span></summary>
        <returns><span data-ttu-id="f01f9-284"><see cref="T:System.Data.DataTableReader" /> 包含一个对应于源 <see cref="T:System.Data.DataTable" /> 实例的结果集。</span><span class="sxs-lookup"><span data-stu-id="f01f9-284">A <see cref="T:System.Data.DataTableReader" /> containing one result set, corresponding to the source <see cref="T:System.Data.DataTable" /> instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f01f9-285">以下控制台应用程序创建一个 <xref:System.Data.DataTable> 实例。</span><span class="sxs-lookup"><span data-stu-id="f01f9-285">The following console application creates a <xref:System.Data.DataTable> instance.</span></span> <span data-ttu-id="f01f9-286">然后，该示例将填充的传递 <xref:System.Data.DataTable> 给调用方法的过程，该过程会 <xref:System.Data.DataTable.CreateDataReader%2A> 循环访问中包含的结果 <xref:System.Data.DataTableReader> 。</span><span class="sxs-lookup"><span data-stu-id="f01f9-286">The example then passes the filled <xref:System.Data.DataTable> to a procedure that calls the <xref:System.Data.DataTable.CreateDataReader%2A> method, which iterates through the results contained within the <xref:System.Data.DataTableReader>.</span></span>  
  
 [!code-csharp[DataWorks DataTable.CreateDataReader#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTable.CreateDataReader/CS/source.cs#1)]
 [!code-vb[DataWorks DataTable.CreateDataReader#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTable.CreateDataReader/VB/source.vb#1)]  
  
 <span data-ttu-id="f01f9-287">该示例在控制台窗口中显示以下输出：</span><span class="sxs-lookup"><span data-stu-id="f01f9-287">The example displays the following output in the console window:</span></span>  
  
 `1 Mary`  
  
 `2 Andy`  
  
 `3 Peter`  
  
 `4 Russ`  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.DataSet.CreateDataReader" />
        <related type="Article" href="/dotnet/framework/data/adonet/dataset-datatable-dataview/datatables"><span data-ttu-id="f01f9-288">DataTables</span><span class="sxs-lookup"><span data-stu-id="f01f9-288">DataTables</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="protected virtual System.Data.DataTable CreateInstance ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Data.DataTable CreateInstance() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.CreateInstance" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateInstance () As DataTable" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Data::DataTable ^ CreateInstance();" />
      <MemberSignature Language="F#" Value="abstract member CreateInstance : unit -&gt; System.Data.DataTable&#xA;override this.CreateInstance : unit -&gt; System.Data.DataTable" Usage="dataTable.CreateInstance " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f01f9-289">创建 <see cref="T:System.Data.DataTable" /> 的新实例。</span><span class="sxs-lookup"><span data-stu-id="f01f9-289">Creates a new instance of <see cref="T:System.Data.DataTable" />.</span></span></summary>
        <returns><span data-ttu-id="f01f9-290">新表达式。</span><span class="sxs-lookup"><span data-stu-id="f01f9-290">The new expression.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DataSet">
      <MemberSignature Language="C#" Value="public System.Data.DataSet? DataSet { get; }" FrameworkAlternate="net-5.0" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.DataSet DataSet" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataTable.DataSet" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DataSet As DataSet" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::DataSet ^ DataSet { System::Data::DataSet ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DataSet : System.Data.DataSet" Usage="System.Data.DataTable.DataSet" />
      <MemberSignature Language="C#" Value="public System.Data.DataSet DataSet { get; }" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName Language="C#">[System.Data.DataSysDescription("DataTableDataSetDescr")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Data.DataSysDescription("DataTableDataSetDescr")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.DataSet</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f01f9-291">获取此表所属的 <see cref="T:System.Data.DataSet" />。</span><span class="sxs-lookup"><span data-stu-id="f01f9-291">Gets the <see cref="T:System.Data.DataSet" /> to which this table belongs.</span></span></summary>
        <value><span data-ttu-id="f01f9-292">此表所属的 <see cref="T:System.Data.DataSet" />。</span><span class="sxs-lookup"><span data-stu-id="f01f9-292">The <see cref="T:System.Data.DataSet" /> to which this table belongs.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f01f9-293">如果控件被数据绑定到 <xref:System.Data.DataTable> ，而表属于 <xref:System.Data.DataSet> ，则可以 <xref:System.Data.DataSet> 通过此属性转到。</span><span class="sxs-lookup"><span data-stu-id="f01f9-293">If a control is data bound to a <xref:System.Data.DataTable>, and the table belongs to a <xref:System.Data.DataSet>, you can get to the <xref:System.Data.DataSet> through this property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f01f9-294">下面的示例 <xref:System.Data.DataSet> 通过属性返回给定表的父级 <xref:System.Data.DataTable.DataSet%2A> 。</span><span class="sxs-lookup"><span data-stu-id="f01f9-294">The following example returns the parent <xref:System.Data.DataSet> of a given table through the <xref:System.Data.DataTable.DataSet%2A> property.</span></span>  
  
 [!code-csharp[Classic WebData DataTable.DataSet Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable.DataSet Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable.DataSet Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable.DataSet Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/data/adonet/dataset-datatable-dataview/datatables"><span data-ttu-id="f01f9-295">DataTables</span><span class="sxs-lookup"><span data-stu-id="f01f9-295">DataTables</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="DefaultView">
      <MemberSignature Language="C#" Value="public System.Data.DataView DefaultView { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.DataView DefaultView" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataTable.DefaultView" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DefaultView As DataView" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::DataView ^ DefaultView { System::Data::DataView ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultView : System.Data.DataView" Usage="System.Data.DataTable.DefaultView" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName Language="C#">[System.Data.DataSysDescription("DataTableDefaultViewDescr")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Data.DataSysDescription("DataTableDefaultViewDescr")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.DataView</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f01f9-296">获取可能包含筛选视图或游标位置的表的自定义视图。</span><span class="sxs-lookup"><span data-stu-id="f01f9-296">Gets a customized view of the table that may include a filtered view, or a cursor position.</span></span></summary>
        <value><span data-ttu-id="f01f9-297">与 <see cref="T:System.Data.DataView" /> 关联的 <see cref="T:System.Data.DataTable" />。</span><span class="sxs-lookup"><span data-stu-id="f01f9-297">The <see cref="T:System.Data.DataView" /> associated with the <see cref="T:System.Data.DataTable" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f01f9-298"><xref:System.Data.DataTable.DefaultView%2A>属性返回 <xref:System.Data.DataView> 可用于对进行排序、筛选和搜索的 <xref:System.Data.DataTable> 。</span><span class="sxs-lookup"><span data-stu-id="f01f9-298">The <xref:System.Data.DataTable.DefaultView%2A> property returns a <xref:System.Data.DataView> you can use to sort, filter, and search a <xref:System.Data.DataTable>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f01f9-299">下面的示例 <xref:System.Data.DataTable> 通过属性设置对象的属性 <xref:System.Data.DataView> <xref:System.Data.DataTable.DefaultView%2A> 。</span><span class="sxs-lookup"><span data-stu-id="f01f9-299">The following example sets a property of the <xref:System.Data.DataTable> object's <xref:System.Data.DataView> through the <xref:System.Data.DataTable.DefaultView%2A> property.</span></span> <span data-ttu-id="f01f9-300">该示例还演示了 <xref:System.Windows.Forms.DataGridView> 如何将控件绑定到命名的 <xref:System.Data.DataTable> "供应商"，其中包括名为 "公司名称" 的列。</span><span class="sxs-lookup"><span data-stu-id="f01f9-300">The example also shows the binding of a <xref:System.Windows.Forms.DataGridView> control to a <xref:System.Data.DataTable> named "Suppliers" that includes a column named "CompanyName."</span></span>  
  
 [!code-csharp[Classic WebData DataTable.DefaultView Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable.DefaultView Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable.DefaultView Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable.DefaultView Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/data/adonet/dataset-datatable-dataview/datatables"><span data-ttu-id="f01f9-301">DataTables</span><span class="sxs-lookup"><span data-stu-id="f01f9-301">DataTables</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="DisplayExpression">
      <MemberSignature Language="C#" Value="public string DisplayExpression { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DisplayExpression" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataTable.DisplayExpression" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayExpression As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DisplayExpression { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DisplayExpression : string with get, set" Usage="System.Data.DataTable.DisplayExpression" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue("")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue("")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName Language="C#">[System.Data.DataSysDescription("DataTableDisplayExpressionDescr")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Data.DataSysDescription("DataTableDisplayExpressionDescr")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f01f9-302">获取或设置一个表达式，该表达式返回的值用于在用户界面中表示此表。</span><span class="sxs-lookup"><span data-stu-id="f01f9-302">Gets or sets the expression that returns a value used to represent this table in the user interface.</span></span> <span data-ttu-id="f01f9-303"><see langword="DisplayExpression" /> 属性用于在用户界面中显示此表名。</span><span class="sxs-lookup"><span data-stu-id="f01f9-303">The <see langword="DisplayExpression" /> property lets you display the name of this table in a user interface.</span></span></summary>
        <value><span data-ttu-id="f01f9-304">显示字符串。</span><span class="sxs-lookup"><span data-stu-id="f01f9-304">A display string.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Data.DataColumn.Expression" />
        <related type="Article" href="/dotnet/framework/data/adonet/dataset-datatable-dataview/datatables"><span data-ttu-id="f01f9-305">DataTables</span><span class="sxs-lookup"><span data-stu-id="f01f9-305">DataTables</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="EndInit">
      <MemberSignature Language="C#" Value="public virtual void EndInit ();" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndInit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.EndInit" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub EndInit ()" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void EndInit();" />
      <MemberSignature Language="F#" Value="abstract member EndInit : unit -&gt; unit&#xA;override this.EndInit : unit -&gt; unit" Usage="dataTable.EndInit " />
      <MemberSignature Language="C#" Value="public void EndInit ();" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndInit ()" FrameworkAlternate="netframework-1.1" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.ISupportInitialize.EndInit</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f01f9-306">结束在窗体上使用或由另一个组件使用的 <see cref="T:System.Data.DataTable" /> 的初始化。</span><span class="sxs-lookup"><span data-stu-id="f01f9-306">Ends the initialization of a <see cref="T:System.Data.DataTable" /> that is used on a form or used by another component.</span></span> <span data-ttu-id="f01f9-307">初始化发生在运行时。</span><span class="sxs-lookup"><span data-stu-id="f01f9-307">The initialization occurs at run time.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f01f9-308">Visual Studio .NET 设计环境使用此方法来结束在窗体上使用或由另一个组件使用的组件的初始化。</span><span class="sxs-lookup"><span data-stu-id="f01f9-308">The Visual Studio .NET design environment uses this method to end the initialization of a component that is used on a form or used by another component.</span></span> <span data-ttu-id="f01f9-309"><xref:System.Data.DataTable.BeginInit%2A>方法启动初始化。</span><span class="sxs-lookup"><span data-stu-id="f01f9-309">The <xref:System.Data.DataTable.BeginInit%2A> method starts the initialization.</span></span> <span data-ttu-id="f01f9-310">使用 <xref:System.Data.DataTable.BeginInit%2A> 和 <xref:System.Data.DataTable.EndInit%2A> 方法可防止控件在完全初始化之前被使用。</span><span class="sxs-lookup"><span data-stu-id="f01f9-310">Using the <xref:System.Data.DataTable.BeginInit%2A> and <xref:System.Data.DataTable.EndInit%2A> methods prevents the control from being used before it is fully initialized.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/data/adonet/dataset-datatable-dataview/datatables"><span data-ttu-id="f01f9-311">DataTables</span><span class="sxs-lookup"><span data-stu-id="f01f9-311">DataTables</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="EndLoadData">
      <MemberSignature Language="C#" Value="public void EndLoadData ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndLoadData() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.EndLoadData" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndLoadData ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndLoadData();" />
      <MemberSignature Language="F#" Value="member this.EndLoadData : unit -&gt; unit" Usage="dataTable.EndLoadData " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f01f9-312">加载数据后，打开通知、索引维护和约束。</span><span class="sxs-lookup"><span data-stu-id="f01f9-312">Turns on notifications, index maintenance, and constraints after loading data.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f01f9-313">将 <xref:System.Data.DataTable.EndLoadData%2A> 与和结合 <xref:System.Data.DataTable.LoadDataRow%2A> 使用 <xref:System.Data.DataTable.BeginLoadData%2A> 。</span><span class="sxs-lookup"><span data-stu-id="f01f9-313">Use <xref:System.Data.DataTable.EndLoadData%2A> in conjunction with <xref:System.Data.DataTable.LoadDataRow%2A> and <xref:System.Data.DataTable.BeginLoadData%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/data/adonet/dataset-datatable-dataview/datatables"><span data-ttu-id="f01f9-314">DataTables</span><span class="sxs-lookup"><span data-stu-id="f01f9-314">DataTables</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ExtendedProperties">
      <MemberSignature Language="C#" Value="public System.Data.PropertyCollection ExtendedProperties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.PropertyCollection ExtendedProperties" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataTable.ExtendedProperties" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ExtendedProperties As PropertyCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::PropertyCollection ^ ExtendedProperties { System::Data::PropertyCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ExtendedProperties : System.Data.PropertyCollection" Usage="System.Data.DataTable.ExtendedProperties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName Language="C#">[System.Data.DataSysDescription("ExtendedPropertiesDescr")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Data.DataSysDescription("ExtendedPropertiesDescr")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.PropertyCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f01f9-315">获取自定义用户信息的集合。</span><span class="sxs-lookup"><span data-stu-id="f01f9-315">Gets the collection of customized user information.</span></span></summary>
        <value><span data-ttu-id="f01f9-316">包含自定义用户信息的 <see cref="T:System.Data.PropertyCollection" />。</span><span class="sxs-lookup"><span data-stu-id="f01f9-316">A <see cref="T:System.Data.PropertyCollection" /> that contains custom user information.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f01f9-317">使用 <xref:System.Data.DataTable.ExtendedProperties%2A> 将自定义信息添加到 <xref:System.Data.DataTable> 。</span><span class="sxs-lookup"><span data-stu-id="f01f9-317">Use the <xref:System.Data.DataTable.ExtendedProperties%2A> to add custom information to a <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="f01f9-318">用方法添加信息 `Add` 。</span><span class="sxs-lookup"><span data-stu-id="f01f9-318">Add information with the `Add` method.</span></span> <span data-ttu-id="f01f9-319">用方法检索信息 `Item` 。</span><span class="sxs-lookup"><span data-stu-id="f01f9-319">Retrieve information with the `Item` method.</span></span>  
  
 <span data-ttu-id="f01f9-320">扩展属性的类型必须为 <xref:System.String> 。</span><span class="sxs-lookup"><span data-stu-id="f01f9-320">Extended properties must be of type <xref:System.String>.</span></span> <span data-ttu-id="f01f9-321">在以 XML 形式编写时，不会保留不属于字符串类型的属性 <xref:System.Data.DataTable> 。</span><span class="sxs-lookup"><span data-stu-id="f01f9-321">Properties that are not of type String are not persisted when the <xref:System.Data.DataTable> is written as XML.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f01f9-322">下面的示例通过属性向添加一个时间戳值 <xref:System.Data.DataTable> <xref:System.Data.DataTable.ExtendedProperties%2A> 。</span><span class="sxs-lookup"><span data-stu-id="f01f9-322">The following example adds a timestamp value to the <xref:System.Data.DataTable> through the <xref:System.Data.DataTable.ExtendedProperties%2A> property.</span></span>  
  
 [!code-csharp[Classic WebData DataTable.ExtendedProperties Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable.ExtendedProperties Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable.ExtendedProperties Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable.ExtendedProperties Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/data/adonet/dataset-datatable-dataview/datatables"><span data-ttu-id="f01f9-323">DataTables</span><span class="sxs-lookup"><span data-stu-id="f01f9-323">DataTables</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="fInitInProgress">
      <MemberSignature Language="C#" Value="protected internal bool fInitInProgress;" />
      <MemberSignature Language="ILAsm" Value=".field familyorassembly bool fInitInProgress" />
      <MemberSignature Language="DocId" Value="F:System.Data.DataTable.fInitInProgress" />
      <MemberSignature Language="VB.NET" Value="Protected Friend fInitInProgress As Boolean " />
      <MemberSignature Language="C++ CLI" Value="protected public: bool fInitInProgress;" />
      <MemberSignature Language="F#" Value="val mutable fInitInProgress : bool" Usage="System.Data.DataTable.fInitInProgress" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f01f9-324">检查是否正在进行初始化。</span><span class="sxs-lookup"><span data-stu-id="f01f9-324">Checks whether initialization is in progress.</span></span> <span data-ttu-id="f01f9-325">初始化发生在运行时。</span><span class="sxs-lookup"><span data-stu-id="f01f9-325">The initialization occurs at run time.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetChanges">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f01f9-326">获取 <see cref="T:System.Data.DataTable" /> 的副本，该副本包含自上次加载以来或自调用 <see cref="M:System.Data.DataTable.AcceptChanges" /> 以来的所有更改。</span><span class="sxs-lookup"><span data-stu-id="f01f9-326">Gets a copy of the <see cref="T:System.Data.DataTable" /> containing all changes made to it since it was last loaded, or since <see cref="M:System.Data.DataTable.AcceptChanges" /> was called.</span></span></summary>
        <related type="Article" href="/dotnet/framework/data/adonet/dataset-datatable-dataview/datatables"><span data-ttu-id="f01f9-327">DataTables</span><span class="sxs-lookup"><span data-stu-id="f01f9-327">DataTables</span></span></related>
        <related type="Article" href="/dotnet/framework/data/adonet/dataset-datatable-dataview/handling-datatable-events"><span data-ttu-id="f01f9-328">处理数据表事件</span><span class="sxs-lookup"><span data-stu-id="f01f9-328">Handling DataTable Events</span></span></related>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetChanges">
      <MemberSignature Language="C#" Value="public System.Data.DataTable GetChanges ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataTable GetChanges() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.GetChanges" />
      <MemberSignature Language="VB.NET" Value="Public Function GetChanges () As DataTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::DataTable ^ GetChanges();" />
      <MemberSignature Language="F#" Value="member this.GetChanges : unit -&gt; System.Data.DataTable" Usage="dataTable.GetChanges " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f01f9-329">获取 <see cref="T:System.Data.DataTable" /> 的副本，该副本包含自加载以来或自上次调用 <see cref="M:System.Data.DataTable.AcceptChanges" /> 以来进行的所有更改。</span><span class="sxs-lookup"><span data-stu-id="f01f9-329">Gets a copy of the <see cref="T:System.Data.DataTable" /> that contains all changes made to it since it was loaded or <see cref="M:System.Data.DataTable.AcceptChanges" /> was last called.</span></span></summary>
        <returns><span data-ttu-id="f01f9-330">此 <see cref="T:System.Data.DataTable" /> 中的更改的副本，如果未发现更改，则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="f01f9-330">A copy of the changes from this <see cref="T:System.Data.DataTable" />, or <see langword="null" /> if no changes are found.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f01f9-331">创建一个新的 <xref:System.Data.DataSet> ，其中包含原始中 <xref:System.Data.DataSet> 具有挂起的更改的所有行的副本。</span><span class="sxs-lookup"><span data-stu-id="f01f9-331">Creates a new <xref:System.Data.DataSet> containing a copy of all rows in the original <xref:System.Data.DataSet> that have pending changes.</span></span> <span data-ttu-id="f01f9-332"><xref:System.Data.DataSet>如果未更改的行包含与更改的行中的外键相对应的主键，则关系约束可能导致将其他未更改的行添加到新的中。</span><span class="sxs-lookup"><span data-stu-id="f01f9-332">Relationship constraints can cause additional unchanged rows to be added to the new <xref:System.Data.DataSet> if the unchanged rows contain primary keys corresponding to foreign keys in the changed rows.</span></span> <span data-ttu-id="f01f9-333">`null` `Nothing` 如果原始中不存在具有挂起更改的行，则该方法将返回 (Visual Basic) <xref:System.Data.DataSet> 。</span><span class="sxs-lookup"><span data-stu-id="f01f9-333">The method returns `null` (`Nothing` in Visual Basic) if there are no rows in the original <xref:System.Data.DataSet> with pending changes.</span></span>  
  
   
  
## Examples  
 [!code-csharp[Classic WebData DataTable.GetChanges Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable.GetChanges Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable.GetChanges Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable.GetChanges Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/data/adonet/dataset-datatable-dataview/datatables"><span data-ttu-id="f01f9-334">DataTables</span><span class="sxs-lookup"><span data-stu-id="f01f9-334">DataTables</span></span></related>
        <related type="Article" href="/dotnet/framework/data/adonet/dataset-datatable-dataview/handling-datatable-events"><span data-ttu-id="f01f9-335">处理数据表事件</span><span class="sxs-lookup"><span data-stu-id="f01f9-335">Handling DataTable Events</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetChanges">
      <MemberSignature Language="C#" Value="public System.Data.DataTable GetChanges (System.Data.DataRowState rowStates);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataTable GetChanges(valuetype System.Data.DataRowState rowStates) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.GetChanges(System.Data.DataRowState)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetChanges (rowStates As DataRowState) As DataTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::DataTable ^ GetChanges(System::Data::DataRowState rowStates);" />
      <MemberSignature Language="F#" Value="member this.GetChanges : System.Data.DataRowState -&gt; System.Data.DataTable" Usage="dataTable.GetChanges rowStates" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowStates" Type="System.Data.DataRowState" Index="0" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="rowStates"><span data-ttu-id="f01f9-336"><see cref="T:System.Data.DataRowState" /> 值之一。</span><span class="sxs-lookup"><span data-stu-id="f01f9-336">One of the <see cref="T:System.Data.DataRowState" /> values.</span></span></param>
        <summary><span data-ttu-id="f01f9-337">获取由 <see cref="T:System.Data.DataRowState" /> 筛选的 <see cref="T:System.Data.DataTable" /> 的副本，该副本包含上次加载以来或调用 <see cref="M:System.Data.DataTable.AcceptChanges" /> 以来进行的所有更改。</span><span class="sxs-lookup"><span data-stu-id="f01f9-337">Gets a copy of the <see cref="T:System.Data.DataTable" /> containing all changes made to it since it was last loaded, or since <see cref="M:System.Data.DataTable.AcceptChanges" /> was called, filtered by <see cref="T:System.Data.DataRowState" />.</span></span></summary>
        <returns><span data-ttu-id="f01f9-338"><see cref="T:System.Data.DataTable" /> 的筛选副本，可以对该副本执行操作，之后可以使用 <see cref="T:System.Data.DataTable" /> 将其合并回 <see cref="M:System.Data.DataSet.Merge(System.Data.DataSet)" />。</span><span class="sxs-lookup"><span data-stu-id="f01f9-338">A filtered copy of the <see cref="T:System.Data.DataTable" /> that can have actions performed on it, and later be merged back in the <see cref="T:System.Data.DataTable" /> using <see cref="M:System.Data.DataSet.Merge(System.Data.DataSet)" />.</span></span> <span data-ttu-id="f01f9-339">如果未找到所需 <see cref="T:System.Data.DataRowState" /> 的行，则该方法返回 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="f01f9-339">If no rows of the desired <see cref="T:System.Data.DataRowState" /> are found, the method returns <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f01f9-340"><xref:System.Data.DataTable.GetChanges%2A>方法用于生成第二个 <xref:System.Data.DataTable> 对象，该对象仅包含在原始中引入的更改。</span><span class="sxs-lookup"><span data-stu-id="f01f9-340">The <xref:System.Data.DataTable.GetChanges%2A> method is used to produce a second <xref:System.Data.DataTable> object that contains only the changes introduced into the original.</span></span> <span data-ttu-id="f01f9-341">使用 `rowStates` 参数可指定新对象应包含的更改类型。</span><span class="sxs-lookup"><span data-stu-id="f01f9-341">Use the `rowStates` argument to specify the type of changes the new object should include.</span></span>  
  
 <span data-ttu-id="f01f9-342">关系约束可能会导致包括未更改的父行。</span><span class="sxs-lookup"><span data-stu-id="f01f9-342">Relationship constraints may cause unchanged parent rows to be included.</span></span>  
  
   
  
## Examples  
 [!code-csharp[Classic WebData DataTable.GetChanges1 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable.GetChanges1 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable.GetChanges1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable.GetChanges1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/data/adonet/dataset-datatable-dataview/datatables"><span data-ttu-id="f01f9-343">DataTables</span><span class="sxs-lookup"><span data-stu-id="f01f9-343">DataTables</span></span></related>
        <related type="Article" href="/dotnet/framework/data/adonet/dataset-datatable-dataview/handling-datatable-events"><span data-ttu-id="f01f9-344">处理数据表事件</span><span class="sxs-lookup"><span data-stu-id="f01f9-344">Handling DataTable Events</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetDataTableSchema">
      <MemberSignature Language="C#" Value="public static System.Xml.Schema.XmlSchemaComplexType GetDataTableSchema (System.Xml.Schema.XmlSchemaSet? schemaSet);" FrameworkAlternate="net-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.Schema.XmlSchemaComplexType GetDataTableSchema(class System.Xml.Schema.XmlSchemaSet schemaSet) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.GetDataTableSchema(System.Xml.Schema.XmlSchemaSet)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetDataTableSchema (schemaSet As XmlSchemaSet) As XmlSchemaComplexType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::Schema::XmlSchemaComplexType ^ GetDataTableSchema(System::Xml::Schema::XmlSchemaSet ^ schemaSet);" />
      <MemberSignature Language="F#" Value="static member GetDataTableSchema : System.Xml.Schema.XmlSchemaSet -&gt; System.Xml.Schema.XmlSchemaComplexType" Usage="System.Data.DataTable.GetDataTableSchema schemaSet" />
      <MemberSignature Language="C#" Value="public static System.Xml.Schema.XmlSchemaComplexType GetDataTableSchema (System.Xml.Schema.XmlSchemaSet schemaSet);" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchemaComplexType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="schemaSet" Type="System.Xml.Schema.XmlSchemaSet" Index="0" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="schemaSet"><span data-ttu-id="f01f9-345">一个 <see cref="T:System.Xml.Schema.XmlSchemaSet" /> 实例。</span><span class="sxs-lookup"><span data-stu-id="f01f9-345">An <see cref="T:System.Xml.Schema.XmlSchemaSet" /> instance.</span></span></param>
        <summary><span data-ttu-id="f01f9-346">该方法返回一个包含 Web Services 描述语言 (WSDL) 的 <see cref="T:System.Xml.Schema.XmlSchemaSet" /> 实例，该语言描述了用于 Web 服务的 <see cref="T:System.Data.DataTable" />。</span><span class="sxs-lookup"><span data-stu-id="f01f9-346">This method returns an <see cref="T:System.Xml.Schema.XmlSchemaSet" /> instance containing the Web Services Description Language (WSDL) that describes the <see cref="T:System.Data.DataTable" /> for Web Services.</span></span></summary>
        <returns><span data-ttu-id="f01f9-347"><see cref="T:System.Xml.Schema.XmlSchemaSet" /> 实例。</span><span class="sxs-lookup"><span data-stu-id="f01f9-347">The <see cref="T:System.Xml.Schema.XmlSchemaSet" /> instance.</span></span></returns>
        <remarks>To be added.</remarks>
        <related type="Article" href="/dotnet/framework/data/adonet/dataset-datatable-dataview/datatables"><span data-ttu-id="f01f9-348">DataTables</span><span class="sxs-lookup"><span data-stu-id="f01f9-348">DataTables</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetErrors">
      <MemberSignature Language="C#" Value="public System.Data.DataRow[] GetErrors ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataRow[] GetErrors() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.GetErrors" />
      <MemberSignature Language="VB.NET" Value="Public Function GetErrors () As DataRow()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Data::DataRow ^&gt; ^ GetErrors();" />
      <MemberSignature Language="F#" Value="member this.GetErrors : unit -&gt; System.Data.DataRow[]" Usage="dataTable.GetErrors " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRow[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f01f9-349">获取包含错误的 <see cref="T:System.Data.DataRow" /> 对象数组。</span><span class="sxs-lookup"><span data-stu-id="f01f9-349">Gets an array of <see cref="T:System.Data.DataRow" /> objects that contain errors.</span></span></summary>
        <returns><span data-ttu-id="f01f9-350">包含错误的 <see cref="T:System.Data.DataRow" /> 对象数组。</span><span class="sxs-lookup"><span data-stu-id="f01f9-350">An array of <see cref="T:System.Data.DataRow" /> objects that have errors.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f01f9-351">返回具有 <xref:System.Data.DataRow> 集的 <xref:System.Data.DataRow.RowError%2A> 对象的列表。</span><span class="sxs-lookup"><span data-stu-id="f01f9-351">Returns the list of <xref:System.Data.DataRow> objects that have <xref:System.Data.DataRow.RowError%2A> set.</span></span> <span data-ttu-id="f01f9-352">例如，在将 <xref:System.Data.Common.DataAdapter.Update%2A> 设置为 <xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A> 的情况下调用 `true` 时，可能会出现错误。</span><span class="sxs-lookup"><span data-stu-id="f01f9-352">For example, errors can occur when calling <xref:System.Data.Common.DataAdapter.Update%2A> with <xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A> set to `true`.</span></span> <span data-ttu-id="f01f9-353">不要对 <xref:System.Data.DataTable.AcceptChanges%2A> 调用 <xref:System.Data.DataTable>，直到您解决所有错误并重新提交 <xref:System.Data.DataSet> 以供更新。</span><span class="sxs-lookup"><span data-stu-id="f01f9-353">Do not invoke <xref:System.Data.DataTable.AcceptChanges%2A> on the <xref:System.Data.DataTable> until you resolve all errors and resubmit the <xref:System.Data.DataSet> for updating.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f01f9-354">下面的示例使用 <xref:System.Data.DataTable.GetErrors%2A> 方法返回 <xref:System.Data.DataRow> 具有错误的对象的数组。</span><span class="sxs-lookup"><span data-stu-id="f01f9-354">The following example uses the <xref:System.Data.DataTable.GetErrors%2A> method to return an array of <xref:System.Data.DataRow> objects that have errors.</span></span>  
  
 [!code-csharp[Classic WebData DataTable.GetErrors Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable.GetErrors Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable.GetErrors Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable.GetErrors Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Data.DataTable.HasErrors" />
        <altmember cref="P:System.Data.DataRow.RowError" />
        <altmember cref="M:System.Data.DataRow.SetColumnError(System.Int32,System.String)" />
        <related type="Article" href="/dotnet/framework/data/adonet/dataset-datatable-dataview/datatables"><span data-ttu-id="f01f9-355">数据表 (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="f01f9-355">DataTables (ADO.NET)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetObjectData">
      <MemberSignature Language="C#" Value="public virtual void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub GetObjectData (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="abstract member GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit&#xA;override this.GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit" Usage="dataTable.GetObjectData (info, context)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" Index="0" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" Index="1" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="info"><span data-ttu-id="f01f9-356">一个 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 对象，包含与 <see cref="T:System.Data.DataTable" /> 关联的序列化数据。</span><span class="sxs-lookup"><span data-stu-id="f01f9-356">A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object that holds the serialized data associated with the <see cref="T:System.Data.DataTable" />.</span></span></param>
        <param name="context"><span data-ttu-id="f01f9-357">一个 <see cref="T:System.Runtime.Serialization.StreamingContext" /> 对象，包含与 <see cref="T:System.Data.DataTable" /> 关联的序列化流的源和目标。</span><span class="sxs-lookup"><span data-stu-id="f01f9-357">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> object that contains the source and destination of the serialized stream associated with the <see cref="T:System.Data.DataTable" />.</span></span></param>
        <summary><span data-ttu-id="f01f9-358">使用序列化 <see cref="T:System.Data.DataTable" /> 时所需的数据填充序列化信息对象。</span><span class="sxs-lookup"><span data-stu-id="f01f9-358">Populates a serialization information object with the data needed to serialize the <see cref="T:System.Data.DataTable" />.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="f01f9-359"><paramref name="info" /> 参数为 null 引用（在 Visual Basic 中为 <see langword="Nothing" />）。</span><span class="sxs-lookup"><span data-stu-id="f01f9-359">The <paramref name="info" /> parameter is a null reference (<see langword="Nothing" /> in Visual Basic).</span></span></exception>
        <related type="Article" href="/dotnet/framework/data/adonet/dataset-datatable-dataview/datatables"><span data-ttu-id="f01f9-360">DataTables</span><span class="sxs-lookup"><span data-stu-id="f01f9-360">DataTables</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetRowType">
      <MemberSignature Language="C#" Value="protected virtual Type GetRowType ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Type GetRowType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.GetRowType" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetRowType () As Type" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual Type ^ GetRowType();" />
      <MemberSignature Language="F#" Value="abstract member GetRowType : unit -&gt; Type&#xA;override this.GetRowType : unit -&gt; Type" Usage="dataTable.GetRowType " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f01f9-361">获取行类型。</span><span class="sxs-lookup"><span data-stu-id="f01f9-361">Gets the row type.</span></span></summary>
        <returns><span data-ttu-id="f01f9-362"><see cref="T:System.Data.DataRow" /> 的类型。</span><span class="sxs-lookup"><span data-stu-id="f01f9-362">The type of the <see cref="T:System.Data.DataRow" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSchema">
      <MemberSignature Language="C#" Value="protected virtual System.Xml.Schema.XmlSchema GetSchema ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xml.Schema.XmlSchema GetSchema() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.GetSchema" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetSchema () As XmlSchema" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xml::Schema::XmlSchema ^ GetSchema();" />
      <MemberSignature Language="F#" Value="abstract member GetSchema : unit -&gt; System.Xml.Schema.XmlSchema&#xA;override this.GetSchema : unit -&gt; System.Xml.Schema.XmlSchema" Usage="dataTable.GetSchema " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchema</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f01f9-363">有关此成员的说明，请参见 <see cref="M:System.Xml.Serialization.IXmlSerializable.GetSchema" />。</span><span class="sxs-lookup"><span data-stu-id="f01f9-363">For a description of this member, see <see cref="M:System.Xml.Serialization.IXmlSerializable.GetSchema" />.</span></span></summary>
        <returns><span data-ttu-id="f01f9-364">由 <see cref="T:System.Xml.Schema.XmlSchema" /> 方法生成并由 <see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" /> 方法使用的对象的 XML 表示形式的 <see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" />。</span><span class="sxs-lookup"><span data-stu-id="f01f9-364">An <see cref="T:System.Xml.Schema.XmlSchema" /> that describes the XML representation of the object that is produced by the <see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" /> method and consumed by the <see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" /> method.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasErrors">
      <MemberSignature Language="C#" Value="public bool HasErrors { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasErrors" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataTable.HasErrors" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasErrors As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasErrors { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasErrors : bool" Usage="System.Data.DataTable.HasErrors" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName Language="C#">[System.Data.DataSysDescription("DataTableHasErrorsDescr")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Data.DataSysDescription("DataTableHasErrorsDescr")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f01f9-365">获取一个值，该值指示该表所属的 <see cref="T:System.Data.DataSet" /> 的任何表的任何行中是否有错误。</span><span class="sxs-lookup"><span data-stu-id="f01f9-365">Gets a value indicating whether there are errors in any of the rows in any of the tables of the <see cref="T:System.Data.DataSet" /> to which the table belongs.</span></span></summary>
        <value><span data-ttu-id="f01f9-366">如果有错误，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="f01f9-366"><see langword="true" /> if errors exist; otherwise <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f01f9-367">当用户处理中包含的一组数据时 <xref:System.Data.DataTable> ，如果更改导致某些验证失败，则可以将每个更改标记为错误。</span><span class="sxs-lookup"><span data-stu-id="f01f9-367">As users work on a set of data contained in a <xref:System.Data.DataTable>, you can mark each change with an error if the change causes some validation failure.</span></span> <span data-ttu-id="f01f9-368">您可以 <xref:System.Data.DataRow> 使用属性，使用错误消息标记整个 <xref:System.Data.DataRow.RowError%2A> 。</span><span class="sxs-lookup"><span data-stu-id="f01f9-368">You can mark an entire <xref:System.Data.DataRow> with an error message using the <xref:System.Data.DataRow.RowError%2A> property.</span></span> <span data-ttu-id="f01f9-369">还可以通过方法在行的每一列上设置错误 <xref:System.Data.DataRow.SetColumnError%2A> 。</span><span class="sxs-lookup"><span data-stu-id="f01f9-369">You can also set errors on each column of the row with the <xref:System.Data.DataRow.SetColumnError%2A> method.</span></span>  
  
 <span data-ttu-id="f01f9-370">在使用更新数据源之前 <xref:System.Data.DataSet> ，建议先 <xref:System.Data.DataSet.GetChanges%2A> 在目标上调用方法 <xref:System.Data.DataSet> 。</span><span class="sxs-lookup"><span data-stu-id="f01f9-370">Before updating a data source with a <xref:System.Data.DataSet>, it's recommended that you first invoke the <xref:System.Data.DataSet.GetChanges%2A> method on the target <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="f01f9-371">方法将生成 <xref:System.Data.DataSet> ，其中仅包含对原始的更改。</span><span class="sxs-lookup"><span data-stu-id="f01f9-371">The method results in a <xref:System.Data.DataSet> that contains only the changes made to the original.</span></span> <span data-ttu-id="f01f9-372">在将发送 <xref:System.Data.DataSet> 到数据源进行更新之前，请检查 <xref:System.Data.DataTable.HasErrors%2A> 每个表的属性，以确定是否有任何错误附加到行中的行或列。</span><span class="sxs-lookup"><span data-stu-id="f01f9-372">Before sending the <xref:System.Data.DataSet> to the data source for updating, check the <xref:System.Data.DataTable.HasErrors%2A> property of each table to see if any errors have been attached to the rows or columns in the rows.</span></span>  
  
 <span data-ttu-id="f01f9-373">协调每个错误后，请用的方法清除错误 <xref:System.Data.DataRow.ClearErrors%2A> `DataRow` 。</span><span class="sxs-lookup"><span data-stu-id="f01f9-373">After reconciling each error, clear the errors with the <xref:System.Data.DataRow.ClearErrors%2A> method of the `DataRow`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f01f9-374">下面的示例使用 <xref:System.Data.DataTable.HasErrors%2A> 属性来检查表中是否包含错误。</span><span class="sxs-lookup"><span data-stu-id="f01f9-374">The following example uses the <xref:System.Data.DataTable.HasErrors%2A> property to check if a table contains errors.</span></span>  
  
 [!code-csharp[Classic WebData DataTable.HasErrors Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable.HasErrors Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable.HasErrors Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable.HasErrors Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.DataTable.GetErrors" />
        <related type="Article" href="/dotnet/framework/data/adonet/dataset-datatable-dataview/datatables"><span data-ttu-id="f01f9-375">DataTables</span><span class="sxs-lookup"><span data-stu-id="f01f9-375">DataTables</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ImportRow">
      <MemberSignature Language="C#" Value="public void ImportRow (System.Data.DataRow row);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ImportRow(class System.Data.DataRow row) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.ImportRow(System.Data.DataRow)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ImportRow (row As DataRow)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ImportRow(System::Data::DataRow ^ row);" />
      <MemberSignature Language="F#" Value="member this.ImportRow : System.Data.DataRow -&gt; unit" Usage="dataTable.ImportRow row" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="row" Type="System.Data.DataRow" Index="0" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="row"><span data-ttu-id="f01f9-376">要导入的 <see cref="T:System.Data.DataRow" />。</span><span class="sxs-lookup"><span data-stu-id="f01f9-376">The <see cref="T:System.Data.DataRow" /> to be imported.</span></span></param>
        <summary><span data-ttu-id="f01f9-377">将 <see cref="T:System.Data.DataRow" /> 复制到 <see cref="T:System.Data.DataTable" /> 中，保留任何属性设置以及初始值和当前值。</span><span class="sxs-lookup"><span data-stu-id="f01f9-377">Copies a <see cref="T:System.Data.DataRow" /> into a <see cref="T:System.Data.DataTable" />, preserving any property settings, as well as original and current values.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f01f9-378">调用 <xref:System.Data.DataTable.NewRow%2A> 使用现有的表架构将行添加到表中，但对于行使用默认值，并将设置 <xref:System.Data.DataRowState> 为 `Detached` 。</span><span class="sxs-lookup"><span data-stu-id="f01f9-378">Calling <xref:System.Data.DataTable.NewRow%2A> adds a row to the table using the existing table schema, but with default values for the row, and sets the <xref:System.Data.DataRowState> to `Detached`.</span></span> <span data-ttu-id="f01f9-379">调用 <xref:System.Data.DataTable.ImportRow%2A> 将保留现有的 <xref:System.Data.DataRowState> 和行中的其他值。</span><span class="sxs-lookup"><span data-stu-id="f01f9-379">Calling <xref:System.Data.DataTable.ImportRow%2A> preserves the existing <xref:System.Data.DataRowState> along with other values in the row.</span></span> <span data-ttu-id="f01f9-380">如果 `DataRow` 作为参数传递的处于已分离状态，则将其忽略，并且不会引发异常。</span><span class="sxs-lookup"><span data-stu-id="f01f9-380">If the `DataRow` that is passed as a parameter is in a detached state, it is ignored, and no exception is thrown.</span></span>  
  
 <span data-ttu-id="f01f9-381">新行将添加到数据表的末尾。</span><span class="sxs-lookup"><span data-stu-id="f01f9-381">The new row will be added to the end of the data table.</span></span>  
  
 <span data-ttu-id="f01f9-382">如果新行违反约束，则不会将其添加到数据表。</span><span class="sxs-lookup"><span data-stu-id="f01f9-382">If the new row violates a Constraint it won't be added to the data table.</span></span>  
  
 <span data-ttu-id="f01f9-383">可以获取新行的索引，其形式为 DataTable. IndexOf 和 DataTable。</span><span class="sxs-lookup"><span data-stu-id="f01f9-383">You can get the index of the new row with as DataTable.Rows.Find and DataTable.Rows.IndexOf.</span></span> <span data-ttu-id="f01f9-384">有关更多信息，请参见<xref:System.Data.DataRowCollection>和<xref:System.Data.DataTable.Rows%2A>。</span><span class="sxs-lookup"><span data-stu-id="f01f9-384">See <xref:System.Data.DataRowCollection> and <xref:System.Data.DataTable.Rows%2A> for more information.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/data/adonet/dataset-datatable-dataview/datatables"><span data-ttu-id="f01f9-385">DataTables</span><span class="sxs-lookup"><span data-stu-id="f01f9-385">DataTables</span></span></related>
        <related type="Article" href="/dotnet/framework/data/adonet/dataset-datatable-dataview/manipulating-data-in-a-datatable"><span data-ttu-id="f01f9-386">操作数据表中的数据</span><span class="sxs-lookup"><span data-stu-id="f01f9-386">Manipulating Data in a DataTable</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Initialized">
      <MemberSignature Language="C#" Value="public event EventHandler Initialized;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Initialized" />
      <MemberSignature Language="DocId" Value="E:System.Data.DataTable.Initialized" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Initialized As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event EventHandler ^ Initialized;" />
      <MemberSignature Language="F#" Value="member this.Initialized : EventHandler " Usage="member this.Initialized : System.EventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.ComponentModel.ISupportInitializeNotification.Initialized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f01f9-387">初始化 <see cref="T:System.Data.DataTable" /> 后发生。</span><span class="sxs-lookup"><span data-stu-id="f01f9-387">Occurs after the <see cref="T:System.Data.DataTable" /> is initialized.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f01f9-388">有关详细信息，请参阅 <xref:System.Data.DataTable.IsInitialized%2A>。</span><span class="sxs-lookup"><span data-stu-id="f01f9-388">For more information, see <xref:System.Data.DataTable.IsInitialized%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/data/adonet/dataset-datatable-dataview/datatables"><span data-ttu-id="f01f9-389">DataTables</span><span class="sxs-lookup"><span data-stu-id="f01f9-389">DataTables</span></span></related>
        <related type="Article" href="/dotnet/framework/data/adonet/dataset-datatable-dataview/handling-datatable-events"><span data-ttu-id="f01f9-390">处理数据表事件</span><span class="sxs-lookup"><span data-stu-id="f01f9-390">Handling DataTable Events</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="IsInitialized">
      <MemberSignature Language="C#" Value="public bool IsInitialized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsInitialized" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataTable.IsInitialized" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsInitialized As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsInitialized { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsInitialized : bool" Usage="System.Data.DataTable.IsInitialized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.ComponentModel.ISupportInitializeNotification.IsInitialized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f01f9-391">获取一个值，该值指示是否已初始化 <see cref="T:System.Data.DataTable" />。</span><span class="sxs-lookup"><span data-stu-id="f01f9-391">Gets a value that indicates whether the <see cref="T:System.Data.DataTable" /> is initialized.</span></span></summary>
        <value><span data-ttu-id="f01f9-392"><see langword="true" /> 表明组件已完成初始化；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="f01f9-392"><see langword="true" /> to indicate the component has completed initialization; otherwise <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f01f9-393">返回正在构造的状态 <xref:System.Data.DataTable> ，例如 Visual Studio。</span><span class="sxs-lookup"><span data-stu-id="f01f9-393">Returns the status of the <xref:System.Data.DataTable> while it's being constructed, for instance by Visual Studio.</span></span> <span data-ttu-id="f01f9-394"><xref:System.Data.DataTable.BeginInit%2A>方法将其设置为 `false` ， <xref:System.Data.DataTable.EndInit%2A> 方法将其设置为 `true` 。</span><span class="sxs-lookup"><span data-stu-id="f01f9-394">The <xref:System.Data.DataTable.BeginInit%2A> method sets it to `false` and <xref:System.Data.DataTable.EndInit%2A> method sets it to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/data/adonet/dataset-datatable-dataview/datatables"><span data-ttu-id="f01f9-395">DataTables</span><span class="sxs-lookup"><span data-stu-id="f01f9-395">DataTables</span></span></related>
        <related type="Article" href="/dotnet/framework/data/adonet/dataset-datatable-dataview/handling-datatable-events"><span data-ttu-id="f01f9-396">处理数据表事件</span><span class="sxs-lookup"><span data-stu-id="f01f9-396">Handling DataTable Events</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Load">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f01f9-397">通过所提供的 <see cref="T:System.Data.IDataReader" />，用某个数据源的值填充 <see cref="T:System.Data.DataTable" />。</span><span class="sxs-lookup"><span data-stu-id="f01f9-397">Fills a <see cref="T:System.Data.DataTable" /> with values from a data source using the supplied <see cref="T:System.Data.IDataReader" />.</span></span> <span data-ttu-id="f01f9-398">如果 <see langword="DataTable" /> 已经包含行，则从数据源传入的数据与现有行合并。</span><span class="sxs-lookup"><span data-stu-id="f01f9-398">If the <see langword="DataTable" /> already contains rows, the incoming data from the data source is merged with the existing rows.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f01f9-399">`Load`此方法可用于几个常见方案，所有这些方案都围绕从指定数据源获取数据并将其添加到当前数据容器中，在这种情况下 (`DataTable`) 。</span><span class="sxs-lookup"><span data-stu-id="f01f9-399">The `Load` method can be used in several common scenarios, all centered around getting data from a specified data source and adding it to the current data container (in this case, a `DataTable`).</span></span> <span data-ttu-id="f01f9-400">这些方案描述了的标准用法 `DataTable` ，描述了其更新和合并行为。</span><span class="sxs-lookup"><span data-stu-id="f01f9-400">These scenarios describe standard usage for a `DataTable`, describing its update and merge behavior.</span></span>  
  
 <span data-ttu-id="f01f9-401">`DataTable`与单个主数据源同步或更新。</span><span class="sxs-lookup"><span data-stu-id="f01f9-401">A `DataTable` synchronizes or updates with a single primary data source.</span></span> <span data-ttu-id="f01f9-402">`DataTable`跟踪更改，允许与主数据源同步。</span><span class="sxs-lookup"><span data-stu-id="f01f9-402">The `DataTable` tracks changes, allowing synchronization with the primary data source.</span></span> <span data-ttu-id="f01f9-403">此外， `DataTable` 可以接受来自一个或多个辅助数据源的增量数据。</span><span class="sxs-lookup"><span data-stu-id="f01f9-403">In addition, a `DataTable` can accept incremental data from one or more secondary data sources.</span></span> <span data-ttu-id="f01f9-404">`DataTable`不负责跟踪更改以便与辅助数据源同步。</span><span class="sxs-lookup"><span data-stu-id="f01f9-404">The `DataTable` isn't responsible for tracking changes in order to allow synchronization with the secondary data source.</span></span>  
  
 <span data-ttu-id="f01f9-405">假设有这两个假设数据源，用户可能需要以下行为之一：</span><span class="sxs-lookup"><span data-stu-id="f01f9-405">Given these two hypothetical data sources, a user is likely to require one of the following behaviors:</span></span>  
  
-   <span data-ttu-id="f01f9-406">`DataTable`从主数据源初始化。</span><span class="sxs-lookup"><span data-stu-id="f01f9-406">Initialize `DataTable` from a primary data source.</span></span> <span data-ttu-id="f01f9-407">在这种情况下，用户想要 `DataTable` 使用主数据源中的值初始化一个空的。</span><span class="sxs-lookup"><span data-stu-id="f01f9-407">In this scenario, the user wants to initialize an empty `DataTable` with values from the primary data source.</span></span> <span data-ttu-id="f01f9-408">稍后，用户打算将更改传播回主数据源。</span><span class="sxs-lookup"><span data-stu-id="f01f9-408">Later the user intends to propagate changes back to the primary data source.</span></span>  
  
-   <span data-ttu-id="f01f9-409">保留更改并从主数据源重新同步。</span><span class="sxs-lookup"><span data-stu-id="f01f9-409">Preserve changes and re-synchronize from the primary data source.</span></span> <span data-ttu-id="f01f9-410">在这种情况下，用户希望采用 `DataTable` 前面方案中填充的内容并执行与主数据源的增量同步，同时保留在中所做的修改 `DataTable` 。</span><span class="sxs-lookup"><span data-stu-id="f01f9-410">In this scenario, the user wants to take the `DataTable` filled in the previous scenario and perform an incremental synchronization with the primary data source, preserving modifications made in the `DataTable`.</span></span>  
  
-   <span data-ttu-id="f01f9-411">来自辅助数据源的增量数据馈送。</span><span class="sxs-lookup"><span data-stu-id="f01f9-411">Incremental data feed from secondary data sources.</span></span> <span data-ttu-id="f01f9-412">在这种情况下，用户想要合并一个或多个辅助数据源的更改，并将这些更改传播回主数据源。</span><span class="sxs-lookup"><span data-stu-id="f01f9-412">In this scenario, the user wants to merge changes from one or more secondary data sources, and propagate those changes back to the primary data source.</span></span>  
  
 <span data-ttu-id="f01f9-413">`Load`方法可以实现所有这些方案。</span><span class="sxs-lookup"><span data-stu-id="f01f9-413">The `Load` method makes all these scenarios possible.</span></span> <span data-ttu-id="f01f9-414">此方法的所有重载（除重载外）都允许您指定加载选项参数，以指示 <xref:System.Data.DataTable> 与要加载的行合并的行。</span><span class="sxs-lookup"><span data-stu-id="f01f9-414">All but one of the overloads for this method allows you to specify a load option parameter, indicating how rows already in a <xref:System.Data.DataTable> combine with rows being loaded.</span></span> <span data-ttu-id="f01f9-415"> (不允许指定行为的重载使用默认加载选项。 ) 下表描述了枚举提供的三个加载选项 <xref:System.Data.LoadOption> 。</span><span class="sxs-lookup"><span data-stu-id="f01f9-415">(The overload that doesn't allow you to specify the behavior uses the default load option.) The following table describes the three load options provided by the <xref:System.Data.LoadOption> enumeration.</span></span> <span data-ttu-id="f01f9-416">在每种情况下，说明指示传入数据中行的主键与现有行的主键匹配时的行为。</span><span class="sxs-lookup"><span data-stu-id="f01f9-416">In each case, the description indicates the behavior when the primary key of a row in the incoming data matches the primary key of an existing row.</span></span>  
  
|<span data-ttu-id="f01f9-417">Load 选项</span><span class="sxs-lookup"><span data-stu-id="f01f9-417">Load Option</span></span>|<span data-ttu-id="f01f9-418">描述</span><span class="sxs-lookup"><span data-stu-id="f01f9-418">Description</span></span>|  
|-----------------|-----------------|  
|<span data-ttu-id="f01f9-419">`PreserveChanges`（默认值）</span><span class="sxs-lookup"><span data-stu-id="f01f9-419">`PreserveChanges` (default)</span></span>|<span data-ttu-id="f01f9-420">用传入行的值更新行的原始版本。</span><span class="sxs-lookup"><span data-stu-id="f01f9-420">Updates the original version of the row with the value of the incoming row.</span></span>|  
|`OverwriteChanges`|<span data-ttu-id="f01f9-421">用传入行的值更新行的当前版本和原始版本。</span><span class="sxs-lookup"><span data-stu-id="f01f9-421">Updates the current and original versions of the row with the value of the incoming row.</span></span>|  
|`Upsert`|<span data-ttu-id="f01f9-422">用传入行的值更新行的当前版本。</span><span class="sxs-lookup"><span data-stu-id="f01f9-422">Updates the current version of the row with the value of the incoming row.</span></span>|  
  
 <span data-ttu-id="f01f9-423">通常， `PreserveChanges` 和选项适用 `OverwriteChanges` 于用户需要 `DataSet` 与主数据源同步及其更改的情况。</span><span class="sxs-lookup"><span data-stu-id="f01f9-423">In general, the `PreserveChanges` and `OverwriteChanges` options are intended for scenarios in which the user needs to synchronize the `DataSet` and its changes with the primary data source.</span></span> <span data-ttu-id="f01f9-424">`Upsert`选项有助于聚合来自一个或多个辅助数据源的更改。</span><span class="sxs-lookup"><span data-stu-id="f01f9-424">The `Upsert` option facilitates aggregating changes from one or more secondary data sources.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f01f9-425">下面的示例演示了调用方法所涉及的几个问题 <xref:System.Data.DataTable.Load%2A> 。</span><span class="sxs-lookup"><span data-stu-id="f01f9-425">The following example demonstrates several of the issues involved with calling the <xref:System.Data.DataTable.Load%2A> method.</span></span> <span data-ttu-id="f01f9-426">首先，该示例重点介绍架构问题，包括从加载的中推断架构 <xref:System.Data.IDataReader> ，并处理不兼容的架构，以及缺少或附加列的架构。</span><span class="sxs-lookup"><span data-stu-id="f01f9-426">First, the example focuses on schema issues, including inferring a schema from the loaded <xref:System.Data.IDataReader>, and then handling incompatible schemas, and schemas with missing or additional columns.</span></span> <span data-ttu-id="f01f9-427">然后，该示例重点介绍数据问题，包括处理各种加载选项。</span><span class="sxs-lookup"><span data-stu-id="f01f9-427">The example then focuses on data issues, including handling the various loading options.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f01f9-428">此示例演示如何使用的重载版本之一 `Load` 。</span><span class="sxs-lookup"><span data-stu-id="f01f9-428">This example shows how to use one of the overloaded versions of `Load`.</span></span> <span data-ttu-id="f01f9-429">有关可能可用的其他示例，请参阅各个重载主题。</span><span class="sxs-lookup"><span data-stu-id="f01f9-429">For other examples that might be available, see the individual overload topics.</span></span>  
  
 [!code-csharp[DataWorks DataTableLoad#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableLoad/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableLoad#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableLoad/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Data.DataSet.Load" />
        <related type="Article" href="/dotnet/framework/data/adonet/dataset-datatable-dataview/datatables"><span data-ttu-id="f01f9-430">DataTables</span><span class="sxs-lookup"><span data-stu-id="f01f9-430">DataTables</span></span></related>
      </Docs>
    </MemberGroup>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Data.IDataReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Data.IDataReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.Load(System.Data.IDataReader)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (reader As IDataReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Data::IDataReader ^ reader);" />
      <MemberSignature Language="F#" Value="member this.Load : System.Data.IDataReader -&gt; unit" Usage="dataTable.Load reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Data.IDataReader" Index="0" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="f01f9-431">提供结果集的 <see cref="T:System.Data.IDataReader" />。</span><span class="sxs-lookup"><span data-stu-id="f01f9-431">An <see cref="T:System.Data.IDataReader" /> that provides a result set.</span></span></param>
        <summary><span data-ttu-id="f01f9-432">通过所提供的 <see cref="T:System.Data.IDataReader" />，用某个数据源的值填充 <see cref="T:System.Data.DataTable" />。</span><span class="sxs-lookup"><span data-stu-id="f01f9-432">Fills a <see cref="T:System.Data.DataTable" /> with values from a data source using the supplied <see cref="T:System.Data.IDataReader" />.</span></span> <span data-ttu-id="f01f9-433">如果 <see cref="T:System.Data.DataTable" /> 已经包含行，则从数据源传入的数据与现有行合并。</span><span class="sxs-lookup"><span data-stu-id="f01f9-433">If the <see cref="T:System.Data.DataTable" /> already contains rows, the incoming data from the data source is merged with the existing rows.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f01f9-434"><xref:System.Data.DataTable.Load%2A>方法使用已加载的第一个结果集 <xref:System.Data.IDataReader> ，成功完成后，将读取器的位置设置为下一个结果集（如果有）。</span><span class="sxs-lookup"><span data-stu-id="f01f9-434">The <xref:System.Data.DataTable.Load%2A> method consumes the first result set from the loaded <xref:System.Data.IDataReader>, and after successful completion, sets the reader's position to the next result set, if any.</span></span> <span data-ttu-id="f01f9-435">转换数据时， `Load` 方法使用与方法相同的转换规则 <xref:System.Data.Common.DbDataAdapter.Fill%2A?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="f01f9-435">When converting data, the `Load` method uses the same conversion rules as the <xref:System.Data.Common.DbDataAdapter.Fill%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="f01f9-436"><xref:System.Data.DataTable.Load%2A>从实例加载数据时，该方法必须考虑三个特定问题 <xref:System.Data.IDataReader> ：架构、数据和事件操作。</span><span class="sxs-lookup"><span data-stu-id="f01f9-436">The <xref:System.Data.DataTable.Load%2A> method must take into account three specific issues when loading the data from an <xref:System.Data.IDataReader> instance: schema, data, and event operations.</span></span> <span data-ttu-id="f01f9-437">使用架构时，此 <xref:System.Data.DataTable.Load%2A> 方法可能会遇到下表中所述的情况。</span><span class="sxs-lookup"><span data-stu-id="f01f9-437">When working with the schema, the <xref:System.Data.DataTable.Load%2A> method may encounter conditions as described in the following table.</span></span> <span data-ttu-id="f01f9-438">架构操作适用于所有导入的结果集，甚至包括不包含任何数据的结果集。</span><span class="sxs-lookup"><span data-stu-id="f01f9-438">The schema operations take place for all imported result sets, even those containing no data.</span></span>  
  
|<span data-ttu-id="f01f9-439">条件</span><span class="sxs-lookup"><span data-stu-id="f01f9-439">Condition</span></span>|<span data-ttu-id="f01f9-440">行为</span><span class="sxs-lookup"><span data-stu-id="f01f9-440">Behavior</span></span>|  
|---------------|--------------|  
|<span data-ttu-id="f01f9-441">没有 <xref:System.Data.DataTable> 架构。</span><span class="sxs-lookup"><span data-stu-id="f01f9-441">The <xref:System.Data.DataTable> has no schema.</span></span>|<span data-ttu-id="f01f9-442"><xref:System.Data.DataTable.Load%2A>方法根据导入的结果集推断架构 <xref:System.Data.IDataReader> 。</span><span class="sxs-lookup"><span data-stu-id="f01f9-442">The <xref:System.Data.DataTable.Load%2A> method infers the schema based on the result set from the imported <xref:System.Data.IDataReader>.</span></span>|  
|<span data-ttu-id="f01f9-443"><xref:System.Data.DataTable>具有架构，但它与加载的架构不兼容。</span><span class="sxs-lookup"><span data-stu-id="f01f9-443">The <xref:System.Data.DataTable> has a schema, but it is incompatible with the loaded schema.</span></span>|<span data-ttu-id="f01f9-444"><xref:System.Data.DataTable.Load%2A>当尝试将数据加载到不兼容的架构中时，该方法会引发与特定错误相关的异常。</span><span class="sxs-lookup"><span data-stu-id="f01f9-444">The <xref:System.Data.DataTable.Load%2A> method throws an exception corresponding to the particular error that occurs when attempting to load data into the incompatible schema.</span></span>|  
|<span data-ttu-id="f01f9-445">架构是兼容的，但加载的结果集架构包含中不存在的列 <xref:System.Data.DataTable> 。</span><span class="sxs-lookup"><span data-stu-id="f01f9-445">The schemas are compatible, but the loaded result set schema contains columns that do not exist in the <xref:System.Data.DataTable>.</span></span>|<span data-ttu-id="f01f9-446"><xref:System.Data.DataTable.Load%2A>方法将额外的列添加到 `DataTable` 的架构。</span><span class="sxs-lookup"><span data-stu-id="f01f9-446">The <xref:System.Data.DataTable.Load%2A> method adds the extra columns to `DataTable`'s schema.</span></span> <span data-ttu-id="f01f9-447">如果中的相应列 <xref:System.Data.DataTable> 和加载的结果集不是值兼容的，则该方法将引发异常。</span><span class="sxs-lookup"><span data-stu-id="f01f9-447">The method throws an exception if corresponding columns in the <xref:System.Data.DataTable> and the loaded result set are not value compatible.</span></span> <span data-ttu-id="f01f9-448">方法还会从结果集中为所有已添加的列检索约束信息。</span><span class="sxs-lookup"><span data-stu-id="f01f9-448">The method also retrieves constraint information from the result set for all added columns.</span></span> <span data-ttu-id="f01f9-449">除了 Primary Key 约束的情况外，仅当在 <xref:System.Data.DataTable> 加载操作开始时当前不包含任何列时，才使用此约束信息。</span><span class="sxs-lookup"><span data-stu-id="f01f9-449">Except for the case of Primary Key constraint, this constraint information is used only if the current <xref:System.Data.DataTable> does not contain any columns at the start of the load operation.</span></span>|  
|<span data-ttu-id="f01f9-450">架构是兼容的，但加载的结果集架构包含的列数少于 `DataTable` 。</span><span class="sxs-lookup"><span data-stu-id="f01f9-450">The schemas are compatible, but the loaded result set schema contains fewer columns than does the `DataTable`.</span></span>|<span data-ttu-id="f01f9-451">如果缺少的列定义了默认值，或者列的数据类型可以为 null，则 <xref:System.Data.DataTable.Load%2A> 方法允许添加行，并将 `null` 缺少的列替换为默认值或值。</span><span class="sxs-lookup"><span data-stu-id="f01f9-451">If a missing column has a default value defined or the column's data type is nullable, the <xref:System.Data.DataTable.Load%2A> method allows the rows to be added, substituting the default or `null` value for the missing column.</span></span> <span data-ttu-id="f01f9-452">如果没有默认值或 `null` 可使用，则该 `Load` 方法将引发异常。</span><span class="sxs-lookup"><span data-stu-id="f01f9-452">If no default value or `null` can be used, then the `Load` method throws an exception.</span></span> <span data-ttu-id="f01f9-453">如果未提供任何特定的默认值，则该 `Load` 方法将使用 `null` 值作为隐含的默认值。</span><span class="sxs-lookup"><span data-stu-id="f01f9-453">If no specific default value has been supplied, the `Load` method uses the `null` value as the implied default value.</span></span>|  
  
 <span data-ttu-id="f01f9-454">在考虑数据操作的方法的行为之前 `Load` ，请考虑中的每行 <xref:System.Data.DataTable> 都维护每个列的当前值和原始值。</span><span class="sxs-lookup"><span data-stu-id="f01f9-454">Before considering the behavior of the `Load` method in terms of data operations, consider that each row within a <xref:System.Data.DataTable> maintains both the current value and the original value for each column.</span></span> <span data-ttu-id="f01f9-455">如果自填充后行中的数据发生了更改，则这些值可能是等效的，也可能不同。 `DataTable`</span><span class="sxs-lookup"><span data-stu-id="f01f9-455">These values may be equivalent, or may be different if the data in the row has been changed since filling the `DataTable`.</span></span>  <span data-ttu-id="f01f9-456">有关详细信息，请参阅 [行状态和行版本](/dotnet/framework/data/adonet/dataset-datatable-dataview/row-states-and-row-versions)。</span><span class="sxs-lookup"><span data-stu-id="f01f9-456">For more information, see [Row States and Row Versions](/dotnet/framework/data/adonet/dataset-datatable-dataview/row-states-and-row-versions).</span></span>  
  
 <span data-ttu-id="f01f9-457">此版本的 `Load` 方法尝试保留每行中的当前值，并保持原始值不变。</span><span class="sxs-lookup"><span data-stu-id="f01f9-457">This version of the `Load` method attempts to preserve the current values in each row, leaving the original value intact.</span></span> <span data-ttu-id="f01f9-458"> (如果要更精细地控制传入数据的行为，请参阅 <xref:System.Data.DataTable.Load%2A?displayProperty=nameWithType> 。 ) 如果现有行和传入行包含相应的主键值，则使用该行的当前行状态值处理该行，否则将其视为新行。</span><span class="sxs-lookup"><span data-stu-id="f01f9-458">(If you want finer control over the behavior of incoming data, see <xref:System.Data.DataTable.Load%2A?displayProperty=nameWithType>.) If the existing row and the incoming row contain corresponding primary key values, the row is processed using its current row state value, otherwise it's treated as a new row.</span></span>  
  
 <span data-ttu-id="f01f9-459">在事件操作方面， <xref:System.Data.DataTable.RowChanging> 事件发生在每行更改之前， <xref:System.Data.DataTable.RowChanged> 事件在每行更改后发生。</span><span class="sxs-lookup"><span data-stu-id="f01f9-459">In terms of event operations, the <xref:System.Data.DataTable.RowChanging> event occurs before each row is changed, and the <xref:System.Data.DataTable.RowChanged> event occurs after each row has been changed.</span></span> <span data-ttu-id="f01f9-460">在每种情况下， <xref:System.Data.DataRowChangeEventArgs.Action%2A> <xref:System.Data.DataRowChangeEventArgs> 传递到事件处理程序的实例的属性都包含与该事件相关联的特定操作的相关信息。</span><span class="sxs-lookup"><span data-stu-id="f01f9-460">In each case, the <xref:System.Data.DataRowChangeEventArgs.Action%2A> property of the <xref:System.Data.DataRowChangeEventArgs> instance passed to the event handler contains information about the particular action associated with the event.</span></span> <span data-ttu-id="f01f9-461">此操作值取决于加载操作前行的状态。</span><span class="sxs-lookup"><span data-stu-id="f01f9-461">This action value depends on the state of the row before the load operation.</span></span> <span data-ttu-id="f01f9-462">在每种情况下，都会发生两个事件，每个事件的操作都是相同的。</span><span class="sxs-lookup"><span data-stu-id="f01f9-462">In each case, both events occur, and the action is the same for each.</span></span> <span data-ttu-id="f01f9-463">此操作可应用于每行的当前版本或原始版本，也可应用于这两个行，具体取决于当前的行状态。</span><span class="sxs-lookup"><span data-stu-id="f01f9-463">The action may be applied to either the current or original version of each row, or both, depending on the current row state.</span></span>  
  
 <span data-ttu-id="f01f9-464">下表显示方法的行为 `Load` 。</span><span class="sxs-lookup"><span data-stu-id="f01f9-464">The following table displays behavior for the `Load` method.</span></span> <span data-ttu-id="f01f9-465">最后一行 (标签为 " (不存在) " ) 描述与任何现有行不匹配的传入行的行为。</span><span class="sxs-lookup"><span data-stu-id="f01f9-465">The final row (labeled "(Not present)") describes the behavior for incoming rows that don't match any existing row.</span></span> <span data-ttu-id="f01f9-466">此表中的每个单元格介绍行中某个字段的当前值和原始值，以及 <xref:System.Data.DataRowState> 方法完成后的值的 `Load` 。</span><span class="sxs-lookup"><span data-stu-id="f01f9-466">Each cell in this table describes the current and original value for a field within a row, along with the <xref:System.Data.DataRowState> for the value after the `Load` method has completed.</span></span> <span data-ttu-id="f01f9-467">在这种情况下，方法不允许指示 load 选项，并使用默认的 `PreserveChanges` 。</span><span class="sxs-lookup"><span data-stu-id="f01f9-467">In this case, the method doesn't allow you to indicate the load option, and uses the default, `PreserveChanges`.</span></span>  
  
|<span data-ttu-id="f01f9-468">现有 DataRowState</span><span class="sxs-lookup"><span data-stu-id="f01f9-468">Existing DataRowState</span></span>|<span data-ttu-id="f01f9-469">方法后 `Load` 的值和事件操作</span><span class="sxs-lookup"><span data-stu-id="f01f9-469">Values after `Load` method, and event action</span></span>|  
|---------------------------|--------------------------------------------------|  
|<span data-ttu-id="f01f9-470">已添加</span><span class="sxs-lookup"><span data-stu-id="f01f9-470">Added</span></span>|<span data-ttu-id="f01f9-471">当前 = \<Existing></span><span class="sxs-lookup"><span data-stu-id="f01f9-471">Current = \<Existing></span></span><br /><br /> <span data-ttu-id="f01f9-472">原始 = \<Incoming></span><span class="sxs-lookup"><span data-stu-id="f01f9-472">Original = \<Incoming></span></span><br /><br /> <span data-ttu-id="f01f9-473">状态 = \<Modified></span><span class="sxs-lookup"><span data-stu-id="f01f9-473">State = \<Modified></span></span><br /><br /> <span data-ttu-id="f01f9-474">RowAction = ChangeOriginal</span><span class="sxs-lookup"><span data-stu-id="f01f9-474">RowAction = ChangeOriginal</span></span>|  
|<span data-ttu-id="f01f9-475">修改时间</span><span class="sxs-lookup"><span data-stu-id="f01f9-475">Modified</span></span>|<span data-ttu-id="f01f9-476">当前 = \<Existing></span><span class="sxs-lookup"><span data-stu-id="f01f9-476">Current = \<Existing></span></span><br /><br /> <span data-ttu-id="f01f9-477">原始 = \<Incoming></span><span class="sxs-lookup"><span data-stu-id="f01f9-477">Original = \<Incoming></span></span><br /><br /> <span data-ttu-id="f01f9-478">状态 = \<Modified></span><span class="sxs-lookup"><span data-stu-id="f01f9-478">State = \<Modified></span></span><br /><br /> <span data-ttu-id="f01f9-479">RowAction = ChangeOriginal</span><span class="sxs-lookup"><span data-stu-id="f01f9-479">RowAction = ChangeOriginal</span></span>|  
|<span data-ttu-id="f01f9-480">Deleted</span><span class="sxs-lookup"><span data-stu-id="f01f9-480">Deleted</span></span>|<span data-ttu-id="f01f9-481">当前 = \<Not available></span><span class="sxs-lookup"><span data-stu-id="f01f9-481">Current = \<Not available></span></span><br /><br /> <span data-ttu-id="f01f9-482">原始 = \<Incoming></span><span class="sxs-lookup"><span data-stu-id="f01f9-482">Original = \<Incoming></span></span><br /><br /> <span data-ttu-id="f01f9-483">状态 = \<Deleted></span><span class="sxs-lookup"><span data-stu-id="f01f9-483">State = \<Deleted></span></span><br /><br /> <span data-ttu-id="f01f9-484">RowAction = ChangeOriginal</span><span class="sxs-lookup"><span data-stu-id="f01f9-484">RowAction = ChangeOriginal</span></span>|  
|<span data-ttu-id="f01f9-485">不变</span><span class="sxs-lookup"><span data-stu-id="f01f9-485">Unchanged</span></span>|<span data-ttu-id="f01f9-486">当前 = \<Incoming></span><span class="sxs-lookup"><span data-stu-id="f01f9-486">Current = \<Incoming></span></span><br /><br /> <span data-ttu-id="f01f9-487">原始 = \<Incoming></span><span class="sxs-lookup"><span data-stu-id="f01f9-487">Original = \<Incoming></span></span><br /><br /> <span data-ttu-id="f01f9-488">状态 = \<Unchanged></span><span class="sxs-lookup"><span data-stu-id="f01f9-488">State = \<Unchanged></span></span><br /><br /> <span data-ttu-id="f01f9-489">RowAction = ChangeCurrentAndOriginal</span><span class="sxs-lookup"><span data-stu-id="f01f9-489">RowAction = ChangeCurrentAndOriginal</span></span>|  
|<span data-ttu-id="f01f9-490"> (不存在) </span><span class="sxs-lookup"><span data-stu-id="f01f9-490">(Not present)</span></span>|<span data-ttu-id="f01f9-491">当前 = \<Incoming></span><span class="sxs-lookup"><span data-stu-id="f01f9-491">Current = \<Incoming></span></span><br /><br /> <span data-ttu-id="f01f9-492">原始 = \<Incoming></span><span class="sxs-lookup"><span data-stu-id="f01f9-492">Original = \<Incoming></span></span><br /><br /> <span data-ttu-id="f01f9-493">状态 = \<Unchanged></span><span class="sxs-lookup"><span data-stu-id="f01f9-493">State = \<Unchanged></span></span><br /><br /> <span data-ttu-id="f01f9-494">RowAction = ChangeCurrentAndOriginal</span><span class="sxs-lookup"><span data-stu-id="f01f9-494">RowAction = ChangeCurrentAndOriginal</span></span>|  
  
 <span data-ttu-id="f01f9-495"><xref:System.Data.DataColumn>可以通过使用和等属性来约束中的值 <xref:System.Data.DataColumn.ReadOnly%2A> <xref:System.Data.DataColumn.AutoIncrement%2A> 。</span><span class="sxs-lookup"><span data-stu-id="f01f9-495">Values in a <xref:System.Data.DataColumn> can be constrained through use of properties such as <xref:System.Data.DataColumn.ReadOnly%2A> and <xref:System.Data.DataColumn.AutoIncrement%2A>.</span></span> <span data-ttu-id="f01f9-496">`Load`方法处理此类列的方式与列的属性所定义的行为一致。</span><span class="sxs-lookup"><span data-stu-id="f01f9-496">The `Load` method handles such columns in a manner that is consistent with the behavior defined by the column's properties.</span></span> <span data-ttu-id="f01f9-497">上的只读约束 <xref:System.Data.DataColumn> 仅适用于内存中发生的更改。</span><span class="sxs-lookup"><span data-stu-id="f01f9-497">The read only constraint on a <xref:System.Data.DataColumn> is applicable only for changes that occur in memory.</span></span> <span data-ttu-id="f01f9-498">`Load`如果需要，此方法将覆盖只读列值。</span><span class="sxs-lookup"><span data-stu-id="f01f9-498">The `Load` method's overwrites the read-only column values, if needed.</span></span>  
  
 <span data-ttu-id="f01f9-499">若要确定用于将当前行与传入行进行比较的主键字段的版本，该 `Load` 方法将使用行中的主键值的原始版本（如果存在）。</span><span class="sxs-lookup"><span data-stu-id="f01f9-499">To determine which version of the primary key field to use for comparing the current row with an incoming row, the `Load` method uses the original version of the primary key value within a row, if it exists.</span></span> <span data-ttu-id="f01f9-500">否则，该 `Load` 方法将使用主键字段的当前版本。</span><span class="sxs-lookup"><span data-stu-id="f01f9-500">Otherwise, the `Load` method uses the current version of the primary key field.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f01f9-501">下面的示例演示了调用方法所涉及的几个问题 <xref:System.Data.DataTable.Load%2A> 。</span><span class="sxs-lookup"><span data-stu-id="f01f9-501">The following example demonstrates several of the issues involved with calling the <xref:System.Data.DataTable.Load%2A> method.</span></span> <span data-ttu-id="f01f9-502">首先，该示例重点介绍架构问题，包括从加载的中推断架构 <xref:System.Data.IDataReader> ，并处理不兼容的架构，以及缺少或附加列的架构。</span><span class="sxs-lookup"><span data-stu-id="f01f9-502">First, the example focuses on schema issues, including inferring a schema from the loaded <xref:System.Data.IDataReader>, and then handling incompatible schemas, and schemas with missing or additional columns.</span></span> <span data-ttu-id="f01f9-503">然后，该示例调用 `Load` 方法，并在加载操作前后显示数据。</span><span class="sxs-lookup"><span data-stu-id="f01f9-503">The example then calls the `Load` method, displaying the data both before and after the load operation.</span></span>  
  
 [!code-csharp[DataWorks DataTableLoad.IDataReader#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableLoad.IDataReader/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableLoad.IDataReader#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableLoad.IDataReader/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/data/adonet/dataset-datatable-dataview/datatables"><span data-ttu-id="f01f9-504">DataTables</span><span class="sxs-lookup"><span data-stu-id="f01f9-504">DataTables</span></span></related>
        <related type="Article" href="/dotnet/framework/data/adonet/dataset-datatable-dataview/handling-datatable-events"><span data-ttu-id="f01f9-505">处理数据表事件</span><span class="sxs-lookup"><span data-stu-id="f01f9-505">Handling DataTable Events</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Data.IDataReader reader, System.Data.LoadOption loadOption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Data.IDataReader reader, valuetype System.Data.LoadOption loadOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (reader As IDataReader, loadOption As LoadOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Data::IDataReader ^ reader, System::Data::LoadOption loadOption);" />
      <MemberSignature Language="F#" Value="member this.Load : System.Data.IDataReader * System.Data.LoadOption -&gt; unit" Usage="dataTable.Load (reader, loadOption)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Data.IDataReader" Index="0" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="loadOption" Type="System.Data.LoadOption" Index="1" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="f01f9-506">提供一个或多个结果集的 <see cref="T:System.Data.IDataReader" />。</span><span class="sxs-lookup"><span data-stu-id="f01f9-506">An <see cref="T:System.Data.IDataReader" /> that provides one or more result sets.</span></span></param>
        <param name="loadOption"><span data-ttu-id="f01f9-507"><see cref="T:System.Data.LoadOption" /> 枚举的值，指示 <see cref="T:System.Data.DataTable" /> 中已有的行如何与共享相同主键的传入行合并。</span><span class="sxs-lookup"><span data-stu-id="f01f9-507">A value from the <see cref="T:System.Data.LoadOption" /> enumeration that indicates how rows already in the <see cref="T:System.Data.DataTable" /> are combined with incoming rows that share the same primary key.</span></span></param>
        <summary><span data-ttu-id="f01f9-508">通过所提供的 <see cref="T:System.Data.IDataReader" />，用某个数据源的值填充 <see cref="T:System.Data.DataTable" />。</span><span class="sxs-lookup"><span data-stu-id="f01f9-508">Fills a <see cref="T:System.Data.DataTable" /> with values from a data source using the supplied <see cref="T:System.Data.IDataReader" />.</span></span> <span data-ttu-id="f01f9-509">如果 <see langword="DataTable" /> 已包含行，则从数据源传入的数据根据 <paramref name="loadOption" /> 参数的值与现有行合并。</span><span class="sxs-lookup"><span data-stu-id="f01f9-509">If the <see langword="DataTable" /> already contains rows, the incoming data from the data source is merged with the existing rows according to the value of the <paramref name="loadOption" /> parameter.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f01f9-510">`Load`方法使用已加载的第一个结果集 <xref:System.Data.IDataReader> ，成功完成后，将读取器的位置设置为下一个结果集（如果有）。</span><span class="sxs-lookup"><span data-stu-id="f01f9-510">The `Load` method consumes the first result set from the loaded <xref:System.Data.IDataReader>, and after successful completion, sets the reader's position to the next result set, if any.</span></span> <span data-ttu-id="f01f9-511">转换数据时， `Load` 方法使用与方法相同的转换规则 <xref:System.Data.Common.DbDataAdapter.Fill%2A> 。</span><span class="sxs-lookup"><span data-stu-id="f01f9-511">When converting data, the `Load` method uses the same conversion rules as the <xref:System.Data.Common.DbDataAdapter.Fill%2A> method.</span></span>  
  
 <span data-ttu-id="f01f9-512">`Load`从实例加载数据时，该方法必须考虑三个特定问题 <xref:System.Data.IDataReader> ：架构、数据和事件操作。</span><span class="sxs-lookup"><span data-stu-id="f01f9-512">The `Load` method must take into account three specific issues when loading the data from an <xref:System.Data.IDataReader> instance: schema, data, and event operations.</span></span> <span data-ttu-id="f01f9-513">使用架构时，此 `Load` 方法可能会遇到下表中所述的情况。</span><span class="sxs-lookup"><span data-stu-id="f01f9-513">When working with the schema, the `Load` method may encounter conditions as described in the following table.</span></span> <span data-ttu-id="f01f9-514">架构操作适用于所有导入的结果集，甚至包括不包含任何数据的结果集。</span><span class="sxs-lookup"><span data-stu-id="f01f9-514">The schema operations take place for all imported result sets, even those containing no data.</span></span>  
  
|<span data-ttu-id="f01f9-515">条件</span><span class="sxs-lookup"><span data-stu-id="f01f9-515">Condition</span></span>|<span data-ttu-id="f01f9-516">行为</span><span class="sxs-lookup"><span data-stu-id="f01f9-516">Behavior</span></span>|  
|---------------|--------------|  
|<span data-ttu-id="f01f9-517">没有 <xref:System.Data.DataTable> 架构。</span><span class="sxs-lookup"><span data-stu-id="f01f9-517">The <xref:System.Data.DataTable> has no schema.</span></span>|<span data-ttu-id="f01f9-518">`Load`方法根据导入的结果集推断架构 <xref:System.Data.IDataReader> 。</span><span class="sxs-lookup"><span data-stu-id="f01f9-518">The `Load` method infers the schema based on the result set from the imported <xref:System.Data.IDataReader>.</span></span>|  
|<span data-ttu-id="f01f9-519"><xref:System.Data.DataTable>具有架构，但它与加载的架构不兼容。</span><span class="sxs-lookup"><span data-stu-id="f01f9-519">The <xref:System.Data.DataTable> has a schema, but it is incompatible with the loaded schema.</span></span>|<span data-ttu-id="f01f9-520">`Load`当尝试将数据加载到不兼容的架构中时，该方法会引发与特定错误相关的异常。</span><span class="sxs-lookup"><span data-stu-id="f01f9-520">The `Load` method throws an exception corresponding to the particular error that occurs when attempting to load data into the incompatible schema.</span></span>|  
|<span data-ttu-id="f01f9-521">架构是兼容的，但加载的结果集架构包含中不存在的列 `DataTable` 。</span><span class="sxs-lookup"><span data-stu-id="f01f9-521">The schemas are compatible, but the loaded result set schema contains columns that don't exist in the `DataTable`.</span></span>|<span data-ttu-id="f01f9-522">`Load`方法将额外的列添加到 `DataTable` 的架构。</span><span class="sxs-lookup"><span data-stu-id="f01f9-522">The `Load` method adds the extra columns to `DataTable`'s schema.</span></span> <span data-ttu-id="f01f9-523">如果中的相应列 <xref:System.Data.DataTable> 和加载的结果集不是值兼容的，则该方法将引发异常。</span><span class="sxs-lookup"><span data-stu-id="f01f9-523">The method throws an exception if corresponding columns in the <xref:System.Data.DataTable> and the loaded result set are not value compatible.</span></span> <span data-ttu-id="f01f9-524">方法还会从结果集中为所有已添加的列检索约束信息。</span><span class="sxs-lookup"><span data-stu-id="f01f9-524">The method also retrieves constraint information from the result set for all added columns.</span></span> <span data-ttu-id="f01f9-525">除了 Primary Key 约束的情况外，仅当在 <xref:System.Data.DataTable> 加载操作开始时当前不包含任何列时，才使用此约束信息。</span><span class="sxs-lookup"><span data-stu-id="f01f9-525">Except for the case of Primary Key constraint, this constraint information is used only if the current <xref:System.Data.DataTable> does not contain any columns at the start of the load operation.</span></span>|  
|<span data-ttu-id="f01f9-526">架构是兼容的，但加载的结果集架构包含的列数少于 `DataTable` 。</span><span class="sxs-lookup"><span data-stu-id="f01f9-526">The schemas are compatible, but the loaded result set schema contains fewer columns than does the `DataTable`.</span></span>|<span data-ttu-id="f01f9-527">如果缺少的列定义了默认值，或者列的数据类型可以为 null，则 `Load` 方法允许添加行，并将缺少的列替换为默认值或 null 值。</span><span class="sxs-lookup"><span data-stu-id="f01f9-527">If a missing column has a default value defined or the column's data type is nullable, the `Load` method allows the rows to be added, substituting the default or null value for the missing column.</span></span> <span data-ttu-id="f01f9-528">如果没有可用的默认值或 null 值，则该 `Load` 方法将引发异常。</span><span class="sxs-lookup"><span data-stu-id="f01f9-528">If no default value or null can be used, then the `Load` method throws an exception.</span></span> <span data-ttu-id="f01f9-529">如果未提供任何特定的默认值，则该 `Load` 方法将使用 null 值作为隐含的默认值。</span><span class="sxs-lookup"><span data-stu-id="f01f9-529">If no specific default value has been supplied, the `Load` method uses the null value as the implied default value.</span></span>|  
  
 <span data-ttu-id="f01f9-530">在考虑数据操作的方法的行为之前 `Load` ，请考虑中的每行 <xref:System.Data.DataTable> 都维护每个列的当前值和原始值。</span><span class="sxs-lookup"><span data-stu-id="f01f9-530">Before considering the behavior of the `Load` method in terms of data operations, consider that each row within a <xref:System.Data.DataTable> maintains both the current value and the original value for each column.</span></span> <span data-ttu-id="f01f9-531">如果自填充后行中的数据发生了更改，则这些值可能是等效的，也可能不同。 `DataTable`</span><span class="sxs-lookup"><span data-stu-id="f01f9-531">These values may be equivalent, or may be different if the data in the row has been changed since filling the `DataTable`.</span></span> <span data-ttu-id="f01f9-532">有关详细信息，请参阅 [行状态和行版本](/dotnet/framework/data/adonet/dataset-datatable-dataview/row-states-and-row-versions) 。</span><span class="sxs-lookup"><span data-stu-id="f01f9-532">See [Row States and Row Versions](/dotnet/framework/data/adonet/dataset-datatable-dataview/row-states-and-row-versions) for more information.</span></span>  
  
 <span data-ttu-id="f01f9-533">在此方法调用中，指定的 <xref:System.Data.LoadOption> 参数会影响传入数据的处理。</span><span class="sxs-lookup"><span data-stu-id="f01f9-533">In this method call, the specified <xref:System.Data.LoadOption> parameter influences the processing of the incoming data.</span></span> <span data-ttu-id="f01f9-534">Load 方法如何处理与现有行具有相同主键的行？</span><span class="sxs-lookup"><span data-stu-id="f01f9-534">How should the Load method handle loading rows that have the same primary key as existing rows?</span></span> <span data-ttu-id="f01f9-535">它应同时修改当前值、原始值还是同时修改两者？</span><span class="sxs-lookup"><span data-stu-id="f01f9-535">Should it modify current values, original values, or both?</span></span> <span data-ttu-id="f01f9-536">这些问题和其他问题由 `loadOption` 参数控制。</span><span class="sxs-lookup"><span data-stu-id="f01f9-536">These issues, and more, are controlled by the `loadOption` parameter.</span></span>  
  
 <span data-ttu-id="f01f9-537">如果现有行和传入行包含相应的主键值，则使用该行的当前行状态值处理该行，否则将其视为新行。</span><span class="sxs-lookup"><span data-stu-id="f01f9-537">If the existing row and the incoming row contain corresponding primary key values, the row is processed using its current row state value, otherwise it's treated as a new row.</span></span>  
  
 <span data-ttu-id="f01f9-538">在事件操作方面， <xref:System.Data.DataTable.RowChanging> 事件发生在每行更改之前， <xref:System.Data.DataTable.RowChanged> 事件在每行更改后发生。</span><span class="sxs-lookup"><span data-stu-id="f01f9-538">In terms of event operations, the <xref:System.Data.DataTable.RowChanging> event occurs before each row is changed, and the <xref:System.Data.DataTable.RowChanged> event occurs after each row has been changed.</span></span> <span data-ttu-id="f01f9-539">在每种情况下， <xref:System.Data.DataRowChangeEventArgs.Action%2A> <xref:System.Data.DataRowChangeEventArgs> 传递到事件处理程序的实例的属性都包含与该事件相关联的特定操作的相关信息。</span><span class="sxs-lookup"><span data-stu-id="f01f9-539">In each case, the <xref:System.Data.DataRowChangeEventArgs.Action%2A> property of the <xref:System.Data.DataRowChangeEventArgs> instance passed to the event handler contains information about the particular action associated with the event.</span></span> <span data-ttu-id="f01f9-540">此操作值的变化取决于加载操作之前的行的状态。</span><span class="sxs-lookup"><span data-stu-id="f01f9-540">This action value varies, depending on the state of the row before the load operation.</span></span> <span data-ttu-id="f01f9-541">在每种情况下，都会发生两个事件，每个事件的操作都是相同的。</span><span class="sxs-lookup"><span data-stu-id="f01f9-541">In each case, both events occur, and the action is the same for each.</span></span> <span data-ttu-id="f01f9-542">此操作可应用于每行的当前版本或原始版本，也可应用于这两个行，具体取决于当前的行状态。</span><span class="sxs-lookup"><span data-stu-id="f01f9-542">The action may be applied to either the current or original version of each row, or both, depending on the current row state.</span></span>  
  
 <span data-ttu-id="f01f9-543">下表显示了在用每个值调用时加载方法的行为 `LoadOption` ，还显示了值如何与正在加载的行的行状态交互。</span><span class="sxs-lookup"><span data-stu-id="f01f9-543">The following table displays behavior for the Load method when called with each of the `LoadOption` values, and also shows how the values interact with the row state for the row being loaded.</span></span> <span data-ttu-id="f01f9-544">最后一行 (标签为 " (不存在) " ) 描述与任何现有行不匹配的传入行的行为。</span><span class="sxs-lookup"><span data-stu-id="f01f9-544">The final row (labeled "(Not present)") describes the behavior for incoming rows that don't match any existing row.</span></span> <span data-ttu-id="f01f9-545">此表中的每个单元格介绍行中某个字段的当前值和原始值，以及 <xref:System.Data.DataRowState> 方法完成后的值的 `Load` 。</span><span class="sxs-lookup"><span data-stu-id="f01f9-545">Each cell in this table describes the current and original value for a field within a row, along with the <xref:System.Data.DataRowState> for the value after the `Load` method has completed.</span></span>  
  
|<span data-ttu-id="f01f9-546">现有 DataRowState</span><span class="sxs-lookup"><span data-stu-id="f01f9-546">Existing DataRowState</span></span>|<span data-ttu-id="f01f9-547">Upsert</span><span class="sxs-lookup"><span data-stu-id="f01f9-547">Upsert</span></span>|<span data-ttu-id="f01f9-548">OverwriteChanges</span><span class="sxs-lookup"><span data-stu-id="f01f9-548">OverwriteChanges</span></span>|<span data-ttu-id="f01f9-549">PreserveChanges (默认行为) </span><span class="sxs-lookup"><span data-stu-id="f01f9-549">PreserveChanges (Default behavior)</span></span>|  
|---------------------------|------------|----------------------|------------------------------------------|  
|<span data-ttu-id="f01f9-550">已添加</span><span class="sxs-lookup"><span data-stu-id="f01f9-550">Added</span></span>|<span data-ttu-id="f01f9-551">当前 = \<Incoming></span><span class="sxs-lookup"><span data-stu-id="f01f9-551">Current = \<Incoming></span></span><br /><br /> <span data-ttu-id="f01f9-552">原始 =-\<Not available></span><span class="sxs-lookup"><span data-stu-id="f01f9-552">Original = -\<Not available></span></span><br /><br /> <span data-ttu-id="f01f9-553">状态 = \<Added></span><span class="sxs-lookup"><span data-stu-id="f01f9-553">State = \<Added></span></span><br /><br /> <span data-ttu-id="f01f9-554">RowAction = 更改</span><span class="sxs-lookup"><span data-stu-id="f01f9-554">RowAction = Change</span></span>|<span data-ttu-id="f01f9-555">当前 = \<Incoming></span><span class="sxs-lookup"><span data-stu-id="f01f9-555">Current = \<Incoming></span></span><br /><br /> <span data-ttu-id="f01f9-556">原始 = \<Incoming></span><span class="sxs-lookup"><span data-stu-id="f01f9-556">Original = \<Incoming></span></span><br /><br /> <span data-ttu-id="f01f9-557">状态 = \<Unchanged></span><span class="sxs-lookup"><span data-stu-id="f01f9-557">State = \<Unchanged></span></span><br /><br /> <span data-ttu-id="f01f9-558">RowAction = ChangeCurrentAndOriginal</span><span class="sxs-lookup"><span data-stu-id="f01f9-558">RowAction = ChangeCurrentAndOriginal</span></span>|<span data-ttu-id="f01f9-559">当前 = \<Existing></span><span class="sxs-lookup"><span data-stu-id="f01f9-559">Current = \<Existing></span></span><br /><br /> <span data-ttu-id="f01f9-560">原始 = \<Incoming></span><span class="sxs-lookup"><span data-stu-id="f01f9-560">Original = \<Incoming></span></span><br /><br /> <span data-ttu-id="f01f9-561">状态 = \<Modified></span><span class="sxs-lookup"><span data-stu-id="f01f9-561">State = \<Modified></span></span><br /><br /> <span data-ttu-id="f01f9-562">RowAction = ChangeOriginal</span><span class="sxs-lookup"><span data-stu-id="f01f9-562">RowAction = ChangeOriginal</span></span>|  
|<span data-ttu-id="f01f9-563">修改时间</span><span class="sxs-lookup"><span data-stu-id="f01f9-563">Modified</span></span>|<span data-ttu-id="f01f9-564">当前 = \<Incoming></span><span class="sxs-lookup"><span data-stu-id="f01f9-564">Current = \<Incoming></span></span><br /><br /> <span data-ttu-id="f01f9-565">原始 = \<Existing></span><span class="sxs-lookup"><span data-stu-id="f01f9-565">Original = \<Existing></span></span><br /><br /> <span data-ttu-id="f01f9-566">状态 = \<Modified></span><span class="sxs-lookup"><span data-stu-id="f01f9-566">State = \<Modified></span></span><br /><br /> <span data-ttu-id="f01f9-567">RowAction = 更改</span><span class="sxs-lookup"><span data-stu-id="f01f9-567">RowAction = Change</span></span>|<span data-ttu-id="f01f9-568">当前 = \<Incoming></span><span class="sxs-lookup"><span data-stu-id="f01f9-568">Current = \<Incoming></span></span><br /><br /> <span data-ttu-id="f01f9-569">原始 = \<Incoming></span><span class="sxs-lookup"><span data-stu-id="f01f9-569">Original = \<Incoming></span></span><br /><br /> <span data-ttu-id="f01f9-570">状态 = \<Unchanged></span><span class="sxs-lookup"><span data-stu-id="f01f9-570">State = \<Unchanged></span></span><br /><br /> <span data-ttu-id="f01f9-571">RowAction = ChangeCurrentAndOriginal</span><span class="sxs-lookup"><span data-stu-id="f01f9-571">RowAction = ChangeCurrentAndOriginal</span></span>|<span data-ttu-id="f01f9-572">当前 = \<Existing></span><span class="sxs-lookup"><span data-stu-id="f01f9-572">Current = \<Existing></span></span><br /><br /> <span data-ttu-id="f01f9-573">原始 = \<Incoming></span><span class="sxs-lookup"><span data-stu-id="f01f9-573">Original = \<Incoming></span></span><br /><br /> <span data-ttu-id="f01f9-574">状态 = \<Modified></span><span class="sxs-lookup"><span data-stu-id="f01f9-574">State = \<Modified></span></span><br /><br /> <span data-ttu-id="f01f9-575">RowAction = ChangeOriginal</span><span class="sxs-lookup"><span data-stu-id="f01f9-575">RowAction =ChangeOriginal</span></span>|  
|<span data-ttu-id="f01f9-576">Deleted</span><span class="sxs-lookup"><span data-stu-id="f01f9-576">Deleted</span></span>|<span data-ttu-id="f01f9-577"> (负载不会影响删除的行) </span><span class="sxs-lookup"><span data-stu-id="f01f9-577">(Load does not affect deleted rows)</span></span><br /><br /> <span data-ttu-id="f01f9-578">Current =---</span><span class="sxs-lookup"><span data-stu-id="f01f9-578">Current = ---</span></span><br /><br /> <span data-ttu-id="f01f9-579">原始 = \<Existing></span><span class="sxs-lookup"><span data-stu-id="f01f9-579">Original = \<Existing></span></span><br /><br /> <span data-ttu-id="f01f9-580">状态 = \<Deleted></span><span class="sxs-lookup"><span data-stu-id="f01f9-580">State = \<Deleted></span></span><br /><br /> <span data-ttu-id="f01f9-581">添加了具有以下特征的 (新行) </span><span class="sxs-lookup"><span data-stu-id="f01f9-581">(New row is added with the following characteristics)</span></span><br /><br /> <span data-ttu-id="f01f9-582">当前 = \<Incoming></span><span class="sxs-lookup"><span data-stu-id="f01f9-582">Current = \<Incoming></span></span><br /><br /> <span data-ttu-id="f01f9-583">原始 = \<Not available></span><span class="sxs-lookup"><span data-stu-id="f01f9-583">Original = \<Not available></span></span><br /><br /> <span data-ttu-id="f01f9-584">状态 = \<Added></span><span class="sxs-lookup"><span data-stu-id="f01f9-584">State = \<Added></span></span><br /><br /> <span data-ttu-id="f01f9-585">RowAction = 添加</span><span class="sxs-lookup"><span data-stu-id="f01f9-585">RowAction = Add</span></span>|<span data-ttu-id="f01f9-586">撤消删除和</span><span class="sxs-lookup"><span data-stu-id="f01f9-586">Undo delete and</span></span><br /><br /> <span data-ttu-id="f01f9-587">当前 = \<Incoming></span><span class="sxs-lookup"><span data-stu-id="f01f9-587">Current = \<Incoming></span></span><br /><br /> <span data-ttu-id="f01f9-588">原始 = \<Incoming></span><span class="sxs-lookup"><span data-stu-id="f01f9-588">Original = \<Incoming></span></span><br /><br /> <span data-ttu-id="f01f9-589">状态 = \<Unchanged></span><span class="sxs-lookup"><span data-stu-id="f01f9-589">State = \<Unchanged></span></span><br /><br /> <span data-ttu-id="f01f9-590">RowAction = ChangeCurrentAndOriginal</span><span class="sxs-lookup"><span data-stu-id="f01f9-590">RowAction = ChangeCurrentAndOriginal</span></span>|<span data-ttu-id="f01f9-591">当前 = \<Not available></span><span class="sxs-lookup"><span data-stu-id="f01f9-591">Current = \<Not available></span></span><br /><br /> <span data-ttu-id="f01f9-592">原始 = \<Incoming></span><span class="sxs-lookup"><span data-stu-id="f01f9-592">Original = \<Incoming></span></span><br /><br /> <span data-ttu-id="f01f9-593">状态 = \<Deleted></span><span class="sxs-lookup"><span data-stu-id="f01f9-593">State = \<Deleted></span></span><br /><br /> <span data-ttu-id="f01f9-594">RowAction = ChangeOriginal</span><span class="sxs-lookup"><span data-stu-id="f01f9-594">RowAction = ChangeOriginal</span></span>|  
|<span data-ttu-id="f01f9-595">不变</span><span class="sxs-lookup"><span data-stu-id="f01f9-595">Unchanged</span></span>|<span data-ttu-id="f01f9-596">当前 = \<Incoming></span><span class="sxs-lookup"><span data-stu-id="f01f9-596">Current = \<Incoming></span></span><br /><br /> <span data-ttu-id="f01f9-597">原始 = \<Existing></span><span class="sxs-lookup"><span data-stu-id="f01f9-597">Original = \<Existing></span></span><br /><br /> <span data-ttu-id="f01f9-598">如果新值与现有的值相同，则</span><span class="sxs-lookup"><span data-stu-id="f01f9-598">If new value is the same as the existing value then</span></span><br /><br /> <span data-ttu-id="f01f9-599">状态 = \<Unchanged></span><span class="sxs-lookup"><span data-stu-id="f01f9-599">State = \<Unchanged></span></span><br /><br /> <span data-ttu-id="f01f9-600">RowAction = Nothing</span><span class="sxs-lookup"><span data-stu-id="f01f9-600">RowAction = Nothing</span></span><br /><br /> <span data-ttu-id="f01f9-601">Else</span><span class="sxs-lookup"><span data-stu-id="f01f9-601">Else</span></span><br /><br /> <span data-ttu-id="f01f9-602">状态 = \<Modified></span><span class="sxs-lookup"><span data-stu-id="f01f9-602">State = \<Modified></span></span><br /><br /> <span data-ttu-id="f01f9-603">RowAction = 更改</span><span class="sxs-lookup"><span data-stu-id="f01f9-603">RowAction = Change</span></span>|<span data-ttu-id="f01f9-604">当前 = \<Incoming></span><span class="sxs-lookup"><span data-stu-id="f01f9-604">Current = \<Incoming></span></span><br /><br /> <span data-ttu-id="f01f9-605">原始 = \<Incoming></span><span class="sxs-lookup"><span data-stu-id="f01f9-605">Original = \<Incoming></span></span><br /><br /> <span data-ttu-id="f01f9-606">状态 = \<Unchanged></span><span class="sxs-lookup"><span data-stu-id="f01f9-606">State = \<Unchanged></span></span><br /><br /> <span data-ttu-id="f01f9-607">RowAction = ChangeCurrentAndOriginal</span><span class="sxs-lookup"><span data-stu-id="f01f9-607">RowAction = ChangeCurrentAndOriginal</span></span>|<span data-ttu-id="f01f9-608">当前 = \<Incoming></span><span class="sxs-lookup"><span data-stu-id="f01f9-608">Current = \<Incoming></span></span><br /><br /> <span data-ttu-id="f01f9-609">原始 = \<Incoming></span><span class="sxs-lookup"><span data-stu-id="f01f9-609">Original = \<Incoming></span></span><br /><br /> <span data-ttu-id="f01f9-610">状态 = \<Unchanged></span><span class="sxs-lookup"><span data-stu-id="f01f9-610">State = \<Unchanged></span></span><br /><br /> <span data-ttu-id="f01f9-611">RowAction = ChangeCurrentAndOriginal</span><span class="sxs-lookup"><span data-stu-id="f01f9-611">RowAction = ChangeCurrentAndOriginal</span></span>|  
<span data-ttu-id="f01f9-612">不存在) </span><span class="sxs-lookup"><span data-stu-id="f01f9-612">Not present)</span></span>|<span data-ttu-id="f01f9-613">当前 = \<Incoming></span><span class="sxs-lookup"><span data-stu-id="f01f9-613">Current = \<Incoming></span></span><br /><br /> <span data-ttu-id="f01f9-614">原始 = \<Not available></span><span class="sxs-lookup"><span data-stu-id="f01f9-614">Original = \<Not available></span></span><br /><br /> <span data-ttu-id="f01f9-615">状态 = \<Added></span><span class="sxs-lookup"><span data-stu-id="f01f9-615">State = \<Added></span></span><br /><br /> <span data-ttu-id="f01f9-616">RowAction = 添加</span><span class="sxs-lookup"><span data-stu-id="f01f9-616">RowAction = Add</span></span>|<span data-ttu-id="f01f9-617">当前 = \<Incoming></span><span class="sxs-lookup"><span data-stu-id="f01f9-617">Current = \<Incoming></span></span><br /><br /> <span data-ttu-id="f01f9-618">原始 = \<Incoming></span><span class="sxs-lookup"><span data-stu-id="f01f9-618">Original = \<Incoming></span></span><br /><br /> <span data-ttu-id="f01f9-619">状态 = \<Unchanged></span><span class="sxs-lookup"><span data-stu-id="f01f9-619">State = \<Unchanged></span></span><br /><br /> <span data-ttu-id="f01f9-620">RowAction = ChangeCurrentAndOriginal</span><span class="sxs-lookup"><span data-stu-id="f01f9-620">RowAction = ChangeCurrentAndOriginal</span></span>|<span data-ttu-id="f01f9-621">当前 = \<Incoming></span><span class="sxs-lookup"><span data-stu-id="f01f9-621">Current = \<Incoming></span></span><br /><br /> <span data-ttu-id="f01f9-622">原始 = \<Incoming></span><span class="sxs-lookup"><span data-stu-id="f01f9-622">Original = \<Incoming></span></span><br /><br /> <span data-ttu-id="f01f9-623">状态 = \<Unchanged></span><span class="sxs-lookup"><span data-stu-id="f01f9-623">State = \<Unchanged></span></span><br /><br /> <span data-ttu-id="f01f9-624">RowAction = ChangeCurrentAndOriginal</span><span class="sxs-lookup"><span data-stu-id="f01f9-624">RowAction = ChangeCurrentAndOriginal</span></span>|  
  
 <span data-ttu-id="f01f9-625"><xref:System.Data.DataColumn>可以通过使用和等属性来约束中的值 <xref:System.Data.DataColumn.ReadOnly%2A> <xref:System.Data.DataColumn.AutoIncrement%2A> 。</span><span class="sxs-lookup"><span data-stu-id="f01f9-625">Values in a <xref:System.Data.DataColumn> can be constrained through use of properties such as <xref:System.Data.DataColumn.ReadOnly%2A> and <xref:System.Data.DataColumn.AutoIncrement%2A>.</span></span> <span data-ttu-id="f01f9-626">`Load`方法处理此类列的方式与列的属性所定义的行为一致。</span><span class="sxs-lookup"><span data-stu-id="f01f9-626">The `Load` method handles such columns in a manner that is consistent with the behavior defined by the column's properties.</span></span> <span data-ttu-id="f01f9-627">上的只读约束 <xref:System.Data.DataColumn> 仅适用于内存中发生的更改。</span><span class="sxs-lookup"><span data-stu-id="f01f9-627">The read only constraint on a <xref:System.Data.DataColumn> is applicable only for changes that occur in memory.</span></span> <span data-ttu-id="f01f9-628">`Load`如果需要，此方法将覆盖只读列值。</span><span class="sxs-lookup"><span data-stu-id="f01f9-628">The `Load` method's overwrites the read-only column values, if needed.</span></span>  
  
 <span data-ttu-id="f01f9-629">如果在调用方法时指定 OverwriteChanges 或 PreserveChanges 选项 `Load` ，则假设传入数据来自 `DataTable` 的主数据源，并且 DataTable 跟踪更改，并可以将更改传播回数据源。</span><span class="sxs-lookup"><span data-stu-id="f01f9-629">If you specify the OverwriteChanges or PreserveChanges options when calling the `Load` method, then the assumption is made that the incoming data is coming from the `DataTable`'s primary data source, and the DataTable tracks changes and can propagate the changes back to the data source.</span></span> <span data-ttu-id="f01f9-630">如果选择 "Upsert" 选项，则假定数据来自辅助数据源之一，如中间层组件提供的数据（可能由用户更改）。</span><span class="sxs-lookup"><span data-stu-id="f01f9-630">If you select the Upsert option, it is assumed that the data is coming from one of a secondary data source, such as data provided by a middle-tier component, perhaps altered by a user.</span></span> <span data-ttu-id="f01f9-631">在这种情况下，假设目的是聚合中的一个或多个数据源中的数据 `DataTable` ，然后将数据传播回主数据源。</span><span class="sxs-lookup"><span data-stu-id="f01f9-631">In this case, the assumption is that the intent is to aggregate data from one or more data sources in the `DataTable`, and then perhaps propagate the data back to the primary data source.</span></span> <span data-ttu-id="f01f9-632"><xref:System.Data.LoadOption>参数用于确定要用于主键比较的行的特定版本。</span><span class="sxs-lookup"><span data-stu-id="f01f9-632">The <xref:System.Data.LoadOption> parameter is used for determining the specific version of the row that is to be used for primary key comparison.</span></span> <span data-ttu-id="f01f9-633">下表提供了详细信息。</span><span class="sxs-lookup"><span data-stu-id="f01f9-633">The table below provides the details.</span></span>  
  
|<span data-ttu-id="f01f9-634">Load 选项</span><span class="sxs-lookup"><span data-stu-id="f01f9-634">Load option</span></span>|<span data-ttu-id="f01f9-635">用于主键比较的 DataRow 版本</span><span class="sxs-lookup"><span data-stu-id="f01f9-635">DataRow version used for primary key comparison</span></span>|  
|-----------------|-----------------------------------------------------|  
|`OverwriteChanges`|<span data-ttu-id="f01f9-636">原始版本（如果存在），否则为当前版本</span><span class="sxs-lookup"><span data-stu-id="f01f9-636">Original version, if it exists, otherwise Current version</span></span>|  
|`PreserveChanges`|<span data-ttu-id="f01f9-637">原始版本（如果存在），否则为当前版本</span><span class="sxs-lookup"><span data-stu-id="f01f9-637">Original version, if it exists, otherwise Current version</span></span>|  
|`Upsert`|<span data-ttu-id="f01f9-638">当前版本（如果存在），否则为原始版本</span><span class="sxs-lookup"><span data-stu-id="f01f9-638">Current version, if it exists, otherwise Original version</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="f01f9-639">下面的示例演示了调用方法所涉及的几个问题 <xref:System.Data.DataTable.Load%2A> 。</span><span class="sxs-lookup"><span data-stu-id="f01f9-639">The following example demonstrates several of the issues involved with calling the <xref:System.Data.DataTable.Load%2A> method.</span></span> <span data-ttu-id="f01f9-640">首先，该示例重点介绍架构问题，包括从加载的中推断架构 <xref:System.Data.IDataReader> ，并处理不兼容的架构，以及缺少或附加列的架构。</span><span class="sxs-lookup"><span data-stu-id="f01f9-640">First, the example focuses on schema issues, including inferring a schema from the loaded <xref:System.Data.IDataReader>, and then handling incompatible schemas, and schemas with missing or additional columns.</span></span> <span data-ttu-id="f01f9-641">然后，该示例重点介绍数据问题，包括处理各种加载选项。</span><span class="sxs-lookup"><span data-stu-id="f01f9-641">The example then focuses on data issues, including handling the various loading options.</span></span>  
  
 [!code-csharp[DataWorks DataTableLoad.LoadOption#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableLoad.LoadOption/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableLoad.LoadOption#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableLoad.LoadOption/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/data/adonet/dataset-datatable-dataview/datatables"><span data-ttu-id="f01f9-642">DataTables</span><span class="sxs-lookup"><span data-stu-id="f01f9-642">DataTables</span></span></related>
        <related type="Article" href="/dotnet/framework/data/adonet/dataset-datatable-dataview/handling-datatable-events"><span data-ttu-id="f01f9-643">处理数据表事件</span><span class="sxs-lookup"><span data-stu-id="f01f9-643">Handling DataTable Events</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public virtual void Load (System.Data.IDataReader reader, System.Data.LoadOption loadOption, System.Data.FillErrorEventHandler? errorHandler);" FrameworkAlternate="net-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Load(class System.Data.IDataReader reader, valuetype System.Data.LoadOption loadOption, class System.Data.FillErrorEventHandler errorHandler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Load (reader As IDataReader, loadOption As LoadOption, errorHandler As FillErrorEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Load(System::Data::IDataReader ^ reader, System::Data::LoadOption loadOption, System::Data::FillErrorEventHandler ^ errorHandler);" />
      <MemberSignature Language="F#" Value="abstract member Load : System.Data.IDataReader * System.Data.LoadOption * System.Data.FillErrorEventHandler -&gt; unit&#xA;override this.Load : System.Data.IDataReader * System.Data.LoadOption * System.Data.FillErrorEventHandler -&gt; unit" Usage="dataTable.Load (reader, loadOption, errorHandler)" />
      <MemberSignature Language="C#" Value="public virtual void Load (System.Data.IDataReader reader, System.Data.LoadOption loadOption, System.Data.FillErrorEventHandler errorHandler);" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Data.IDataReader" Index="0" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="loadOption" Type="System.Data.LoadOption" Index="1" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="errorHandler" Type="System.Data.FillErrorEventHandler" Index="2" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="f01f9-644">提供结果集的 <see cref="T:System.Data.IDataReader" />。</span><span class="sxs-lookup"><span data-stu-id="f01f9-644">A <see cref="T:System.Data.IDataReader" /> that provides a result set.</span></span></param>
        <param name="loadOption"><span data-ttu-id="f01f9-645"><see cref="T:System.Data.LoadOption" /> 枚举的值，指示 <see cref="T:System.Data.DataTable" /> 中已有的行如何与共享相同主键的传入行合并。</span><span class="sxs-lookup"><span data-stu-id="f01f9-645">A value from the <see cref="T:System.Data.LoadOption" /> enumeration that indicates how rows already in the <see cref="T:System.Data.DataTable" /> are combined with incoming rows that share the same primary key.</span></span></param>
        <param name="errorHandler"><span data-ttu-id="f01f9-646">加载数据时出现错误的情况下要调用的 <see cref="T:System.Data.FillErrorEventHandler" /> 委托。</span><span class="sxs-lookup"><span data-stu-id="f01f9-646">A <see cref="T:System.Data.FillErrorEventHandler" /> delegate to call when an error occurs while loading data.</span></span></param>
        <summary><span data-ttu-id="f01f9-647">通过所提供的使用错误处理委托的 <see cref="T:System.Data.IDataReader" />，用某个数据源中的值填充 <see cref="T:System.Data.DataTable" />。</span><span class="sxs-lookup"><span data-stu-id="f01f9-647">Fills a <see cref="T:System.Data.DataTable" /> with values from a data source using the supplied <see cref="T:System.Data.IDataReader" /> using an error-handling delegate.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f01f9-648">`Load`方法使用已加载的第一个结果集 <xref:System.Data.IDataReader> ，成功完成后，将读取器的位置设置为下一个结果集（如果有）。</span><span class="sxs-lookup"><span data-stu-id="f01f9-648">The `Load` method consumes the first result set from the loaded <xref:System.Data.IDataReader>, and after successful completion, sets the reader's position to the next result set, if any.</span></span> <span data-ttu-id="f01f9-649">转换数据时， `Load` 方法使用与方法相同的转换规则 <xref:System.Data.Common.DbDataAdapter.Fill%2A?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="f01f9-649">When converting data, the `Load` method uses the same conversion rules as the <xref:System.Data.Common.DbDataAdapter.Fill%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="f01f9-650">`Load`从实例加载数据时，该方法必须考虑三个特定问题 <xref:System.Data.IDataReader> ：架构、数据和事件操作。</span><span class="sxs-lookup"><span data-stu-id="f01f9-650">The `Load` method must take into account three specific issues when loading the data from an <xref:System.Data.IDataReader> instance: schema, data, and event operations.</span></span> <span data-ttu-id="f01f9-651">使用架构时，此 `Load` 方法可能会遇到下表中所述的情况。</span><span class="sxs-lookup"><span data-stu-id="f01f9-651">When working with the schema, the `Load` method may encounter conditions as described in the following table.</span></span> <span data-ttu-id="f01f9-652">架构操作适用于所有导入的结果集，甚至包括不包含任何数据的结果集。</span><span class="sxs-lookup"><span data-stu-id="f01f9-652">The schema operations take place for all imported result sets, even those containing no data.</span></span>  
  
|<span data-ttu-id="f01f9-653">条件</span><span class="sxs-lookup"><span data-stu-id="f01f9-653">Condition</span></span>|<span data-ttu-id="f01f9-654">行为</span><span class="sxs-lookup"><span data-stu-id="f01f9-654">Behavior</span></span>|  
|---------------|--------------|  
|<span data-ttu-id="f01f9-655">没有 <xref:System.Data.DataTable> 架构。</span><span class="sxs-lookup"><span data-stu-id="f01f9-655">The <xref:System.Data.DataTable> has no schema.</span></span>|<span data-ttu-id="f01f9-656">`Load`方法根据导入的结果集推断架构 <xref:System.Data.IDataReader> 。</span><span class="sxs-lookup"><span data-stu-id="f01f9-656">The `Load` method infers the schema based on the result set from the imported <xref:System.Data.IDataReader>.</span></span>|  
|<span data-ttu-id="f01f9-657"><xref:System.Data.DataTable>具有架构，但它与加载的架构不兼容。</span><span class="sxs-lookup"><span data-stu-id="f01f9-657">The <xref:System.Data.DataTable> has a schema, but it is incompatible with the loaded schema.</span></span>|<span data-ttu-id="f01f9-658">`Load`当尝试将数据加载到不兼容的架构中时，该方法会引发与特定错误相关的异常。</span><span class="sxs-lookup"><span data-stu-id="f01f9-658">The `Load` method throws an exception corresponding to the particular error that occurs when attempting to load data into the incompatible schema.</span></span>|  
|<span data-ttu-id="f01f9-659">架构是兼容的，但加载的结果集架构包含中不存在的列 `DataTable` 。</span><span class="sxs-lookup"><span data-stu-id="f01f9-659">The schemas are compatible, but the loaded result set schema contains columns that don't exist in the `DataTable`.</span></span>|<span data-ttu-id="f01f9-660">`Load`方法将)  (的额外列添加到 `DataTable` 架构。</span><span class="sxs-lookup"><span data-stu-id="f01f9-660">The `Load` method adds the extra column(s) to `DataTable`'s schema.</span></span> <span data-ttu-id="f01f9-661">如果中的相应列 <xref:System.Data.DataTable> 和加载的结果集不是值兼容的，则该方法将引发异常。</span><span class="sxs-lookup"><span data-stu-id="f01f9-661">The method throws an exception if corresponding columns in the <xref:System.Data.DataTable> and the loaded result set are not value compatible.</span></span> <span data-ttu-id="f01f9-662">方法还会从结果集中为所有已添加的列检索约束信息。</span><span class="sxs-lookup"><span data-stu-id="f01f9-662">The method also retrieves constraint information from the result set for all added columns.</span></span> <span data-ttu-id="f01f9-663">除了 Primary Key 约束的情况外，仅当在 <xref:System.Data.DataTable> 加载操作开始时当前不包含任何列时，才使用此约束信息。</span><span class="sxs-lookup"><span data-stu-id="f01f9-663">Except for the case of Primary Key constraint, this constraint information is used only if the current <xref:System.Data.DataTable> does not contain any columns at the start of the load operation.</span></span>|  
|<span data-ttu-id="f01f9-664">架构是兼容的，但加载的结果集架构包含的列数少于 `DataTable` 。</span><span class="sxs-lookup"><span data-stu-id="f01f9-664">The schemas are compatible, but the loaded result set schema contains fewer columns than does the `DataTable`.</span></span>|<span data-ttu-id="f01f9-665">如果缺少的列定义了默认值，或者列的数据类型可以为 null，则 `Load` 方法允许添加行，并将缺少的列替换为默认值或 null 值。</span><span class="sxs-lookup"><span data-stu-id="f01f9-665">If a missing column has a default value defined or the column's data type is nullable, the `Load` method allows the rows to be added, substituting the default or null value for the missing column.</span></span> <span data-ttu-id="f01f9-666">如果没有可用的默认值或 null 值，则该 `Load` 方法将引发异常。</span><span class="sxs-lookup"><span data-stu-id="f01f9-666">If no default value or null can be used, then the `Load` method throws an exception.</span></span> <span data-ttu-id="f01f9-667">如果未提供任何特定的默认值，则该 `Load` 方法将使用 null 值作为隐含的默认值。</span><span class="sxs-lookup"><span data-stu-id="f01f9-667">If no specific default value has been supplied, the `Load` method uses the null value as the implied default value.</span></span>|  
  
 <span data-ttu-id="f01f9-668">在考虑数据操作的方法的行为之前 `Load` ，请考虑中的每行 <xref:System.Data.DataTable> 都维护每个列的当前值和原始值。</span><span class="sxs-lookup"><span data-stu-id="f01f9-668">Before considering the behavior of the `Load` method in terms of data operations, consider that each row within a <xref:System.Data.DataTable> maintains both the current value and the original value for each column.</span></span> <span data-ttu-id="f01f9-669">如果自填充后行中的数据发生了更改，则这些值可能是等效的，也可能不同。 `DataTable`</span><span class="sxs-lookup"><span data-stu-id="f01f9-669">These values may be equivalent, or may be different if the data in the row has been changed since filling the `DataTable`.</span></span> <span data-ttu-id="f01f9-670">有关详细信息，请参阅 [行状态和行版本](/dotnet/framework/data/adonet/dataset-datatable-dataview/row-states-and-row-versions) 。</span><span class="sxs-lookup"><span data-stu-id="f01f9-670">See [Row States and Row Versions](/dotnet/framework/data/adonet/dataset-datatable-dataview/row-states-and-row-versions) for more information.</span></span>  
  
 <span data-ttu-id="f01f9-671">在此方法调用中，指定的 <xref:System.Data.LoadOption> 参数会影响传入数据的处理。</span><span class="sxs-lookup"><span data-stu-id="f01f9-671">In this method call, the specified <xref:System.Data.LoadOption> parameter influences the processing of the incoming data.</span></span> <span data-ttu-id="f01f9-672">Load 方法如何处理与现有行具有相同主键的行？</span><span class="sxs-lookup"><span data-stu-id="f01f9-672">How should the Load method handle loading rows that have the same primary key as existing rows?</span></span> <span data-ttu-id="f01f9-673">它应同时修改当前值、原始值还是同时修改两者？</span><span class="sxs-lookup"><span data-stu-id="f01f9-673">Should it modify current values, original values, or both?</span></span> <span data-ttu-id="f01f9-674">这些问题和其他问题由 `loadOption` 参数控制。</span><span class="sxs-lookup"><span data-stu-id="f01f9-674">These issues, and more, are controlled by the `loadOption` parameter.</span></span>  
  
 <span data-ttu-id="f01f9-675">如果现有行和传入行包含相应的主键值，则使用该行的当前行状态值处理该行，否则将其视为新行。</span><span class="sxs-lookup"><span data-stu-id="f01f9-675">If the existing row and the incoming row contain corresponding primary key values, the row is processed using its current row state value, otherwise it's treated as a new row.</span></span>  
  
 <span data-ttu-id="f01f9-676">在事件操作方面， <xref:System.Data.DataTable.RowChanging> 事件发生在每行更改之前， <xref:System.Data.DataTable.RowChanged> 事件在每行更改后发生。</span><span class="sxs-lookup"><span data-stu-id="f01f9-676">In terms of event operations, the <xref:System.Data.DataTable.RowChanging> event occurs before each row is changed, and the <xref:System.Data.DataTable.RowChanged> event occurs after each row has been changed.</span></span> <span data-ttu-id="f01f9-677">在每种情况下， <xref:System.Data.DataRowChangeEventArgs.Action%2A> <xref:System.Data.DataRowChangeEventArgs> 传递到事件处理程序的实例的属性都包含与该事件相关联的特定操作的相关信息。</span><span class="sxs-lookup"><span data-stu-id="f01f9-677">In each case, the <xref:System.Data.DataRowChangeEventArgs.Action%2A> property of the <xref:System.Data.DataRowChangeEventArgs> instance passed to the event handler contains information about the particular action associated with the event.</span></span> <span data-ttu-id="f01f9-678">此操作值的变化取决于加载操作之前的行的状态。</span><span class="sxs-lookup"><span data-stu-id="f01f9-678">This action value varies, depending on the state of the row before the load operation.</span></span> <span data-ttu-id="f01f9-679">在每种情况下，都会发生两个事件，每个事件的操作都是相同的。</span><span class="sxs-lookup"><span data-stu-id="f01f9-679">In each case, both events occur, and the action is the same for each.</span></span> <span data-ttu-id="f01f9-680">此操作可应用于每行的当前版本或原始版本，也可应用于这两个行，具体取决于当前的行状态。</span><span class="sxs-lookup"><span data-stu-id="f01f9-680">The action may be applied to either the current or original version of each row, or both, depending on the current row state.</span></span>  
  
 <span data-ttu-id="f01f9-681">下表显示了在用每个值调用时加载方法的行为 `LoadOption` ，还显示了值如何与正在加载的行的行状态交互。</span><span class="sxs-lookup"><span data-stu-id="f01f9-681">The following table displays behavior for the Load method when called with each of the `LoadOption` values, and also shows how the values interact with the row state for the row being loaded.</span></span> <span data-ttu-id="f01f9-682">最后一行 (标签为 " (不存在) " ) 描述与任何现有行不匹配的传入行的行为。</span><span class="sxs-lookup"><span data-stu-id="f01f9-682">The final row (labeled "(Not present)") describes the behavior for incoming rows that don't match any existing row.</span></span> <span data-ttu-id="f01f9-683">此表中的每个单元格介绍行中某个字段的当前值和原始值，以及 <xref:System.Data.DataRowState> 方法完成后的值的 `Load` 。</span><span class="sxs-lookup"><span data-stu-id="f01f9-683">Each cell in this table describes the current and original value for a field within a row, along with the <xref:System.Data.DataRowState> for the value after the `Load` method has completed.</span></span>  
  
|<span data-ttu-id="f01f9-684">现有 DataRowState</span><span class="sxs-lookup"><span data-stu-id="f01f9-684">Existing DataRowState</span></span>|<span data-ttu-id="f01f9-685">Upsert</span><span class="sxs-lookup"><span data-stu-id="f01f9-685">Upsert</span></span>|<span data-ttu-id="f01f9-686">OverwriteChanges</span><span class="sxs-lookup"><span data-stu-id="f01f9-686">OverwriteChanges</span></span>|<span data-ttu-id="f01f9-687">PreserveChanges (默认行为) </span><span class="sxs-lookup"><span data-stu-id="f01f9-687">PreserveChanges (Default behavior)</span></span>|  
|---------------------------|------------|----------------------|------------------------------------------|  
|<span data-ttu-id="f01f9-688">已添加</span><span class="sxs-lookup"><span data-stu-id="f01f9-688">Added</span></span>|<span data-ttu-id="f01f9-689">当前 = \<Incoming></span><span class="sxs-lookup"><span data-stu-id="f01f9-689">Current = \<Incoming></span></span><br /><br /> <span data-ttu-id="f01f9-690">原始 =-\<Not available></span><span class="sxs-lookup"><span data-stu-id="f01f9-690">Original = -\<Not available></span></span><br /><br /> <span data-ttu-id="f01f9-691">状态 = \<Added></span><span class="sxs-lookup"><span data-stu-id="f01f9-691">State = \<Added></span></span><br /><br /> <span data-ttu-id="f01f9-692">RowAction = 更改</span><span class="sxs-lookup"><span data-stu-id="f01f9-692">RowAction = Change</span></span>|<span data-ttu-id="f01f9-693">当前 = \<Incoming></span><span class="sxs-lookup"><span data-stu-id="f01f9-693">Current = \<Incoming></span></span><br /><br /> <span data-ttu-id="f01f9-694">原始 = \<Incoming></span><span class="sxs-lookup"><span data-stu-id="f01f9-694">Original = \<Incoming></span></span><br /><br /> <span data-ttu-id="f01f9-695">状态 = \<Unchanged></span><span class="sxs-lookup"><span data-stu-id="f01f9-695">State = \<Unchanged></span></span><br /><br /> <span data-ttu-id="f01f9-696">RowAction = ChangeCurrentAndOriginal</span><span class="sxs-lookup"><span data-stu-id="f01f9-696">RowAction = ChangeCurrentAndOriginal</span></span>|<span data-ttu-id="f01f9-697">当前 = \<Existing></span><span class="sxs-lookup"><span data-stu-id="f01f9-697">Current = \<Existing></span></span><br /><br /> <span data-ttu-id="f01f9-698">原始 = \<Incoming></span><span class="sxs-lookup"><span data-stu-id="f01f9-698">Original = \<Incoming></span></span><br /><br /> <span data-ttu-id="f01f9-699">状态 = \<Modified></span><span class="sxs-lookup"><span data-stu-id="f01f9-699">State = \<Modified></span></span><br /><br /> <span data-ttu-id="f01f9-700">RowAction = ChangeOriginal</span><span class="sxs-lookup"><span data-stu-id="f01f9-700">RowAction = ChangeOriginal</span></span>|  
|<span data-ttu-id="f01f9-701">修改时间</span><span class="sxs-lookup"><span data-stu-id="f01f9-701">Modified</span></span>|<span data-ttu-id="f01f9-702">当前 = \<Incoming></span><span class="sxs-lookup"><span data-stu-id="f01f9-702">Current = \<Incoming></span></span><br /><br /> <span data-ttu-id="f01f9-703">原始 = \<Existing></span><span class="sxs-lookup"><span data-stu-id="f01f9-703">Original = \<Existing></span></span><br /><br /> <span data-ttu-id="f01f9-704">状态 = \<Modified></span><span class="sxs-lookup"><span data-stu-id="f01f9-704">State = \<Modified></span></span><br /><br /> <span data-ttu-id="f01f9-705">RowAction = 更改</span><span class="sxs-lookup"><span data-stu-id="f01f9-705">RowAction = Change</span></span>|<span data-ttu-id="f01f9-706">当前 = \<Incoming></span><span class="sxs-lookup"><span data-stu-id="f01f9-706">Current = \<Incoming></span></span><br /><br /> <span data-ttu-id="f01f9-707">原始 = \<Incoming></span><span class="sxs-lookup"><span data-stu-id="f01f9-707">Original = \<Incoming></span></span><br /><br /> <span data-ttu-id="f01f9-708">状态 = \<Unchanged></span><span class="sxs-lookup"><span data-stu-id="f01f9-708">State = \<Unchanged></span></span><br /><br /> <span data-ttu-id="f01f9-709">RowAction = ChangeCurrentAndOriginal</span><span class="sxs-lookup"><span data-stu-id="f01f9-709">RowAction = ChangeCurrentAndOriginal</span></span>|<span data-ttu-id="f01f9-710">当前 = \<Existing></span><span class="sxs-lookup"><span data-stu-id="f01f9-710">Current = \<Existing></span></span><br /><br /> <span data-ttu-id="f01f9-711">原始 = \<Incoming></span><span class="sxs-lookup"><span data-stu-id="f01f9-711">Original = \<Incoming></span></span><br /><br /> <span data-ttu-id="f01f9-712">状态 = \<Modified></span><span class="sxs-lookup"><span data-stu-id="f01f9-712">State = \<Modified></span></span><br /><br /> <span data-ttu-id="f01f9-713">RowAction = ChangeOriginal</span><span class="sxs-lookup"><span data-stu-id="f01f9-713">RowAction =ChangeOriginal</span></span>|  
<span data-ttu-id="f01f9-714">e</span><span class="sxs-lookup"><span data-stu-id="f01f9-714">eleted</span></span>|<span data-ttu-id="f01f9-715"> (负载不会影响删除的行) </span><span class="sxs-lookup"><span data-stu-id="f01f9-715">(Load does not affect deleted rows)</span></span><br /><br /> <span data-ttu-id="f01f9-716">Current =---</span><span class="sxs-lookup"><span data-stu-id="f01f9-716">Current = ---</span></span><br /><br /> <span data-ttu-id="f01f9-717">原始 = \<Existing></span><span class="sxs-lookup"><span data-stu-id="f01f9-717">Original = \<Existing></span></span><br /><br /> <span data-ttu-id="f01f9-718">状态 = \<Deleted></span><span class="sxs-lookup"><span data-stu-id="f01f9-718">State = \<Deleted></span></span><br /><br /> <span data-ttu-id="f01f9-719">添加了具有以下特征的 (新行) </span><span class="sxs-lookup"><span data-stu-id="f01f9-719">(New row is added with the following characteristics)</span></span><br /><br /> <span data-ttu-id="f01f9-720">当前 = \<Incoming></span><span class="sxs-lookup"><span data-stu-id="f01f9-720">Current = \<Incoming></span></span><br /><br /> <span data-ttu-id="f01f9-721">原始 = \<Not available></span><span class="sxs-lookup"><span data-stu-id="f01f9-721">Original = \<Not available></span></span><br /><br /> <span data-ttu-id="f01f9-722">状态 = \<Added></span><span class="sxs-lookup"><span data-stu-id="f01f9-722">State = \<Added></span></span><br /><br /> <span data-ttu-id="f01f9-723">RowAction = 添加</span><span class="sxs-lookup"><span data-stu-id="f01f9-723">RowAction = Add</span></span>|<span data-ttu-id="f01f9-724">撤消删除和</span><span class="sxs-lookup"><span data-stu-id="f01f9-724">Undo delete and</span></span><br /><br /> <span data-ttu-id="f01f9-725">当前 = \<Incoming></span><span class="sxs-lookup"><span data-stu-id="f01f9-725">Current = \<Incoming></span></span><br /><br /> <span data-ttu-id="f01f9-726">原始 = \<Incoming></span><span class="sxs-lookup"><span data-stu-id="f01f9-726">Original = \<Incoming></span></span><br /><br /> <span data-ttu-id="f01f9-727">状态 = \<Unchanged></span><span class="sxs-lookup"><span data-stu-id="f01f9-727">State = \<Unchanged></span></span><br /><br /> <span data-ttu-id="f01f9-728">RowAction = ChangeCurrentAndOriginal</span><span class="sxs-lookup"><span data-stu-id="f01f9-728">RowAction = ChangeCurrentAndOriginal</span></span>|<span data-ttu-id="f01f9-729">当前 = \<Not available></span><span class="sxs-lookup"><span data-stu-id="f01f9-729">Current = \<Not available></span></span><br /><br /> <span data-ttu-id="f01f9-730">原始 = \<Incoming></span><span class="sxs-lookup"><span data-stu-id="f01f9-730">Original = \<Incoming></span></span><br /><br /> <span data-ttu-id="f01f9-731">状态 = \<Deleted></span><span class="sxs-lookup"><span data-stu-id="f01f9-731">State = \<Deleted></span></span><br /><br /> <span data-ttu-id="f01f9-732">RowAction = ChangeOriginal</span><span class="sxs-lookup"><span data-stu-id="f01f9-732">RowAction = ChangeOriginal</span></span>|  
|<span data-ttu-id="f01f9-733">不变</span><span class="sxs-lookup"><span data-stu-id="f01f9-733">Unchanged</span></span>|<span data-ttu-id="f01f9-734">当前 = \<Incoming></span><span class="sxs-lookup"><span data-stu-id="f01f9-734">Current = \<Incoming></span></span><br /><br /> <span data-ttu-id="f01f9-735">原始 = \<Existing></span><span class="sxs-lookup"><span data-stu-id="f01f9-735">Original = \<Existing></span></span><br /><br /> <span data-ttu-id="f01f9-736">如果新值与现有的值相同，则</span><span class="sxs-lookup"><span data-stu-id="f01f9-736">If new value is the same as the existing value then</span></span><br /><br /> <span data-ttu-id="f01f9-737">状态 = \<Unchanged></span><span class="sxs-lookup"><span data-stu-id="f01f9-737">State = \<Unchanged></span></span><br /><br /> <span data-ttu-id="f01f9-738">RowAction = Nothing</span><span class="sxs-lookup"><span data-stu-id="f01f9-738">RowAction = Nothing</span></span><br /><br /> <span data-ttu-id="f01f9-739">Else</span><span class="sxs-lookup"><span data-stu-id="f01f9-739">Else</span></span><br /><br /> <span data-ttu-id="f01f9-740">状态 = \<Modified></span><span class="sxs-lookup"><span data-stu-id="f01f9-740">State = \<Modified></span></span><br /><br /> <span data-ttu-id="f01f9-741">RowAction = 更改</span><span class="sxs-lookup"><span data-stu-id="f01f9-741">RowAction = Change</span></span>|<span data-ttu-id="f01f9-742">当前 = \<Incoming></span><span class="sxs-lookup"><span data-stu-id="f01f9-742">Current = \<Incoming></span></span><br /><br /> <span data-ttu-id="f01f9-743">原始 = \<Incoming></span><span class="sxs-lookup"><span data-stu-id="f01f9-743">Original = \<Incoming></span></span><br /><br /> <span data-ttu-id="f01f9-744">状态 = \<Unchanged></span><span class="sxs-lookup"><span data-stu-id="f01f9-744">State = \<Unchanged></span></span><br /><br /> <span data-ttu-id="f01f9-745">RowAction = ChangeCurrentAndOriginal</span><span class="sxs-lookup"><span data-stu-id="f01f9-745">RowAction = ChangeCurrentAndOriginal</span></span>|<span data-ttu-id="f01f9-746">当前 = \<Incoming></span><span class="sxs-lookup"><span data-stu-id="f01f9-746">Current = \<Incoming></span></span><br /><br /> <span data-ttu-id="f01f9-747">原始 = \<Incoming></span><span class="sxs-lookup"><span data-stu-id="f01f9-747">Original = \<Incoming></span></span><br /><br /> <span data-ttu-id="f01f9-748">状态 = \<Unchanged></span><span class="sxs-lookup"><span data-stu-id="f01f9-748">State = \<Unchanged></span></span><br /><br /> <span data-ttu-id="f01f9-749">RowAction = ChangeCurrentAndOriginal</span><span class="sxs-lookup"><span data-stu-id="f01f9-749">RowAction = ChangeCurrentAndOriginal</span></span>|  
<span data-ttu-id="f01f9-750">不存在) </span><span class="sxs-lookup"><span data-stu-id="f01f9-750">Not present)</span></span>|<span data-ttu-id="f01f9-751">当前 = \<Incoming></span><span class="sxs-lookup"><span data-stu-id="f01f9-751">Current = \<Incoming></span></span><br /><br /> <span data-ttu-id="f01f9-752">原始 = \<Not available></span><span class="sxs-lookup"><span data-stu-id="f01f9-752">Original = \<Not available></span></span><br /><br /> <span data-ttu-id="f01f9-753">状态 = \<Added></span><span class="sxs-lookup"><span data-stu-id="f01f9-753">State = \<Added></span></span><br /><br /> <span data-ttu-id="f01f9-754">RowAction = 添加</span><span class="sxs-lookup"><span data-stu-id="f01f9-754">RowAction = Add</span></span>|<span data-ttu-id="f01f9-755">当前 = \<Incoming></span><span class="sxs-lookup"><span data-stu-id="f01f9-755">Current = \<Incoming></span></span><br /><br /> <span data-ttu-id="f01f9-756">原始 = \<Incoming></span><span class="sxs-lookup"><span data-stu-id="f01f9-756">Original = \<Incoming></span></span><br /><br /> <span data-ttu-id="f01f9-757">状态 = \<Unchanged></span><span class="sxs-lookup"><span data-stu-id="f01f9-757">State = \<Unchanged></span></span><br /><br /> <span data-ttu-id="f01f9-758">RowAction = ChangeCurrentAndOriginal</span><span class="sxs-lookup"><span data-stu-id="f01f9-758">RowAction = ChangeCurrentAndOriginal</span></span>|<span data-ttu-id="f01f9-759">当前 = \<Incoming></span><span class="sxs-lookup"><span data-stu-id="f01f9-759">Current = \<Incoming></span></span><br /><br /> <span data-ttu-id="f01f9-760">原始 = \<Incoming></span><span class="sxs-lookup"><span data-stu-id="f01f9-760">Original = \<Incoming></span></span><br /><br /> <span data-ttu-id="f01f9-761">状态 = \<Unchanged></span><span class="sxs-lookup"><span data-stu-id="f01f9-761">State = \<Unchanged></span></span><br /><br /> <span data-ttu-id="f01f9-762">RowAction = ChangeCurrentAndOriginal</span><span class="sxs-lookup"><span data-stu-id="f01f9-762">RowAction = ChangeCurrentAndOriginal</span></span>|  
  
 <span data-ttu-id="f01f9-763"><xref:System.Data.DataColumn>可以通过使用和等属性来约束中的值 <xref:System.Data.DataColumn.ReadOnly%2A> <xref:System.Data.DataColumn.AutoIncrement%2A> 。</span><span class="sxs-lookup"><span data-stu-id="f01f9-763">Values in a <xref:System.Data.DataColumn> can be constrained through use of properties such as <xref:System.Data.DataColumn.ReadOnly%2A> and <xref:System.Data.DataColumn.AutoIncrement%2A>.</span></span> <span data-ttu-id="f01f9-764">`Load`方法处理此类列的方式与列的属性所定义的行为一致。</span><span class="sxs-lookup"><span data-stu-id="f01f9-764">The `Load` method handles such columns in a manner that is consistent with the behavior defined by the column's properties.</span></span> <span data-ttu-id="f01f9-765">上的只读约束 <xref:System.Data.DataColumn> 仅适用于内存中发生的更改。</span><span class="sxs-lookup"><span data-stu-id="f01f9-765">The read only constraint on a <xref:System.Data.DataColumn> is applicable only for changes that occur in memory.</span></span> <span data-ttu-id="f01f9-766">`Load`如果需要，此方法将覆盖只读列值。</span><span class="sxs-lookup"><span data-stu-id="f01f9-766">The `Load` method's overwrites the read-only column values, if needed.</span></span>  
  
 <span data-ttu-id="f01f9-767">如果在调用方法时指定 OverwriteChanges 或 PreserveChanges 选项 `Load` ，则假设传入数据来自 `DataTable` 的主数据源，并且 DataTable 跟踪更改，并可以将更改传播回数据源。</span><span class="sxs-lookup"><span data-stu-id="f01f9-767">If you specify the OverwriteChanges or PreserveChanges options when calling the `Load` method, then the assumption is made that the incoming data is coming from the `DataTable`'s primary data source, and the DataTable tracks changes and can propagate the changes back to the data source.</span></span> <span data-ttu-id="f01f9-768">如果选择 "Upsert" 选项，则假定数据来自辅助数据源之一，如中间层组件提供的数据（可能由用户更改）。</span><span class="sxs-lookup"><span data-stu-id="f01f9-768">If you select the Upsert option, it is assumed that the data is coming from one of a secondary data source, such as data provided by a middle-tier component, perhaps altered by a user.</span></span> <span data-ttu-id="f01f9-769">在这种情况下，假设目的是聚合中的一个或多个数据源中的数据 `DataTable` ，然后将数据传播回主数据源。</span><span class="sxs-lookup"><span data-stu-id="f01f9-769">In this case, the assumption is that the intent is to aggregate data from one or more data sources in the `DataTable`, and then perhaps propagate the data back to the primary data source.</span></span> <span data-ttu-id="f01f9-770"><xref:System.Data.LoadOption>参数用于确定要用于主键比较的行的特定版本。</span><span class="sxs-lookup"><span data-stu-id="f01f9-770">The <xref:System.Data.LoadOption> parameter is used for determining the specific version of the row that is to be used for primary key comparison.</span></span> <span data-ttu-id="f01f9-771">下表提供了详细信息。</span><span class="sxs-lookup"><span data-stu-id="f01f9-771">The table below provides the details.</span></span>  
  
|<span data-ttu-id="f01f9-772">Load 选项</span><span class="sxs-lookup"><span data-stu-id="f01f9-772">Load option</span></span>|<span data-ttu-id="f01f9-773">用于主键比较的 DataRow 版本</span><span class="sxs-lookup"><span data-stu-id="f01f9-773">DataRow version used for primary key comparison</span></span>|  
|-----------------|-----------------------------------------------------|  
|`OverwriteChanges`|<span data-ttu-id="f01f9-774">原始版本（如果存在），否则为当前版本</span><span class="sxs-lookup"><span data-stu-id="f01f9-774">Original version, if it exists, otherwise Current version</span></span>|  
|`PreserveChanges`|<span data-ttu-id="f01f9-775">原始版本（如果存在），否则为当前版本</span><span class="sxs-lookup"><span data-stu-id="f01f9-775">Original version, if it exists, otherwise Current version</span></span>|  
|`Upsert`|<span data-ttu-id="f01f9-776">当前版本（如果存在），否则为原始版本</span><span class="sxs-lookup"><span data-stu-id="f01f9-776">Current version, if it exists, otherwise Original version</span></span>|  
  
 <span data-ttu-id="f01f9-777">`errorHandler`参数是一个 <xref:System.Data.FillErrorEventHandler> 委托，该委托引用在加载数据的过程中发生错误时调用的过程。</span><span class="sxs-lookup"><span data-stu-id="f01f9-777">The `errorHandler` parameter is a <xref:System.Data.FillErrorEventHandler> delegate that refers to a procedure that is called when an error occurs while loading data.</span></span> <span data-ttu-id="f01f9-778"><xref:System.Data.FillErrorEventArgs>传递给过程的参数提供了属性，这些属性可用于检索有关所发生错误的信息、当前数据行以及 <xref:System.Data.DataTable> 要填充的。</span><span class="sxs-lookup"><span data-stu-id="f01f9-778">The <xref:System.Data.FillErrorEventArgs> parameter passed to the procedure provides properties that allow you to retrieve information about the error that occurred, the current row of data, and the <xref:System.Data.DataTable> being filled.</span></span> <span data-ttu-id="f01f9-779">使用此委托机制（而不是更简单的 try/catch 块），可以确定错误，处理情况，并根据需要继续处理。</span><span class="sxs-lookup"><span data-stu-id="f01f9-779">Using this delegate mechanism, rather than a simpler try/catch block, allows you to determine the error, handle the situation, and continue processing if you like.</span></span> <span data-ttu-id="f01f9-780"><xref:System.Data.FillErrorEventArgs>参数提供 <xref:System.Data.FillErrorEventArgs.Continue%2A> 属性：将此属性设置为， `true` 以指示已处理错误并希望继续处理。</span><span class="sxs-lookup"><span data-stu-id="f01f9-780">The <xref:System.Data.FillErrorEventArgs> parameter supplies a <xref:System.Data.FillErrorEventArgs.Continue%2A> property: set this property to `true` to indicate that you have handled the error and wish to continue processing.</span></span> <span data-ttu-id="f01f9-781">将属性设置为， `false` 以指示您希望暂停处理。</span><span class="sxs-lookup"><span data-stu-id="f01f9-781">Set the property to `false` to indicate that you wish to halt processing.</span></span> <span data-ttu-id="f01f9-782">请注意，将属性设置为 `false` 会导致触发问题的代码引发异常。</span><span class="sxs-lookup"><span data-stu-id="f01f9-782">Be aware that setting the property to `false` causes the code that triggered the problem to throw an exception.</span></span>  
  
   
  
## Examples  
 [!code-csharp[DataWorks DataTableLoad.ErrorEventHandler#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableLoad.ErrorEventHandler/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableLoad.ErrorEventHandler#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableLoad.ErrorEventHandler/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/data/adonet/dataset-datatable-dataview/datatables"><span data-ttu-id="f01f9-783">DataTables</span><span class="sxs-lookup"><span data-stu-id="f01f9-783">DataTables</span></span></related>
        <related type="Article" href="/dotnet/framework/data/adonet/dataset-datatable-dataview/handling-datatable-events"><span data-ttu-id="f01f9-784">处理数据表事件</span><span class="sxs-lookup"><span data-stu-id="f01f9-784">Handling DataTable Events</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="LoadDataRow">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f01f9-785">查找和更新特定行。</span><span class="sxs-lookup"><span data-stu-id="f01f9-785">Finds and updates a specific row.</span></span> <span data-ttu-id="f01f9-786">如果找不到任何匹配行，则使用给定值创建新行。</span><span class="sxs-lookup"><span data-stu-id="f01f9-786">If no matching row is found, a new row is created using the given values.</span></span></summary>
        <related type="Article" href="/dotnet/framework/data/adonet/dataset-datatable-dataview/datatables"><span data-ttu-id="f01f9-787">DataTables</span><span class="sxs-lookup"><span data-stu-id="f01f9-787">DataTables</span></span></related>
      </Docs>
    </MemberGroup>
    <Member MemberName="LoadDataRow">
      <MemberSignature Language="C#" Value="public System.Data.DataRow LoadDataRow (object[]? values, bool fAcceptChanges);" FrameworkAlternate="net-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataRow LoadDataRow(object[] values, bool fAcceptChanges) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.LoadDataRow(System.Object[],System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function LoadDataRow (values As Object(), fAcceptChanges As Boolean) As DataRow" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::DataRow ^ LoadDataRow(cli::array &lt;System::Object ^&gt; ^ values, bool fAcceptChanges);" />
      <MemberSignature Language="F#" Value="member this.LoadDataRow : obj[] * bool -&gt; System.Data.DataRow" Usage="dataTable.LoadDataRow (values, fAcceptChanges)" />
      <MemberSignature Language="C#" Value="public System.Data.DataRow LoadDataRow (object[] values, bool fAcceptChanges);" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRow</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="values" Type="System.Object[]" Index="0" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="fAcceptChanges" Type="System.Boolean" Index="1" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="values"><span data-ttu-id="f01f9-788">用于创建新行的值数组。</span><span class="sxs-lookup"><span data-stu-id="f01f9-788">An array of values used to create the new row.</span></span></param>
        <param name="fAcceptChanges"><span data-ttu-id="f01f9-789">如果接受更改，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="f01f9-789"><see langword="true" /> to accept changes; otherwise <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="f01f9-790">查找和更新特定行。</span><span class="sxs-lookup"><span data-stu-id="f01f9-790">Finds and updates a specific row.</span></span> <span data-ttu-id="f01f9-791">如果找不到任何匹配行，则使用给定值创建新行。</span><span class="sxs-lookup"><span data-stu-id="f01f9-791">If no matching row is found, a new row is created using the given values.</span></span></summary>
        <returns><span data-ttu-id="f01f9-792">新的 <see cref="T:System.Data.DataRow" />。</span><span class="sxs-lookup"><span data-stu-id="f01f9-792">The new <see cref="T:System.Data.DataRow" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f01f9-793"><xref:System.Data.DataTable.LoadDataRow%2A>方法采用值的数组，并在) 的主键 (列中查找 (s) 的匹配值。</span><span class="sxs-lookup"><span data-stu-id="f01f9-793">The <xref:System.Data.DataTable.LoadDataRow%2A> method takes an array of values and finds the matching value(s) in the primary key column(s).</span></span>  
  
 <span data-ttu-id="f01f9-794">如果列具有默认值，请在数组中传递 null 值，以设置该列的默认值。</span><span class="sxs-lookup"><span data-stu-id="f01f9-794">If a column has a default value, pass a null value in the array to set the default value for that column.</span></span> <span data-ttu-id="f01f9-795">同样，如果列的 <xref:System.Data.DataColumn.AutoIncrement%2A> 属性设置为 true，则在数组中传递 null 值，以便为该行设置自动生成的值。</span><span class="sxs-lookup"><span data-stu-id="f01f9-795">Similarly, if a column has its <xref:System.Data.DataColumn.AutoIncrement%2A> property set to true, pass a null value in the array to set the automatically generated value for the row.</span></span>  
  
 <span data-ttu-id="f01f9-796">如果 `fAcceptChanges` 参数为 `true` 或未指定，则将添加新数据，然后 <xref:System.Data.DataTable.AcceptChanges%2A> 调用以接受中的所有更改 <xref:System.Data.DataTable> ; 如果参数为 `false` ，则新添加的行将标记为插入，而对现有行的更改将被标记为修改。</span><span class="sxs-lookup"><span data-stu-id="f01f9-796">If the `fAcceptChanges` parameter is `true` or not specified, the new data is added and then <xref:System.Data.DataTable.AcceptChanges%2A> is called to accept all changes in the <xref:System.Data.DataTable>; if the argument is `false`, newly added rows are marked as insertions, and changes to existing rows are marked as modifications.</span></span>  
  
 <span data-ttu-id="f01f9-797">异常也可能发生在 <xref:System.Data.DataTable.ColumnChanging> 或事件期间 <xref:System.Data.DataTable.RowChanging> 。</span><span class="sxs-lookup"><span data-stu-id="f01f9-797">Exceptions can also occur during either a <xref:System.Data.DataTable.ColumnChanging> or <xref:System.Data.DataTable.RowChanging> event.</span></span> <span data-ttu-id="f01f9-798">如果发生异常，则不会将行添加到表中。</span><span class="sxs-lookup"><span data-stu-id="f01f9-798">If an exception occurs, the row is not added to the table.</span></span>  
  
 <span data-ttu-id="f01f9-799">将 <xref:System.Data.DataTable.LoadDataRow%2A> 与和结合 <xref:System.Data.DataTable.BeginLoadData%2A> 使用 <xref:System.Data.DataTable.EndLoadData%2A> 。</span><span class="sxs-lookup"><span data-stu-id="f01f9-799">Use <xref:System.Data.DataTable.LoadDataRow%2A> in conjunction with <xref:System.Data.DataTable.BeginLoadData%2A> and <xref:System.Data.DataTable.EndLoadData%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f01f9-800">下面的示例使用 <xref:System.Data.DataTable.LoadDataRow%2A> 方法尝试查找行。</span><span class="sxs-lookup"><span data-stu-id="f01f9-800">The following example uses the <xref:System.Data.DataTable.LoadDataRow%2A> method to attempt to find a row.</span></span> <span data-ttu-id="f01f9-801">如果找不到这样的行，则将使用这些值来创建新行。</span><span class="sxs-lookup"><span data-stu-id="f01f9-801">If no such row is found, the values are used to create a new row.</span></span>  
  
 [!code-csharp[Classic WebData DataTable.LoadDataRow Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable.LoadDataRow Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable.LoadDataRow Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable.LoadDataRow Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="f01f9-802">该数组大于表中的列数。</span><span class="sxs-lookup"><span data-stu-id="f01f9-802">The array is larger than the number of columns in the table.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="f01f9-803">值与其各自的列类型不匹配。</span><span class="sxs-lookup"><span data-stu-id="f01f9-803">A value doesn't match its respective column type.</span></span></exception>
        <exception cref="T:System.Data.ConstraintException"><span data-ttu-id="f01f9-804">添加行会使约束无效。</span><span class="sxs-lookup"><span data-stu-id="f01f9-804">Adding the row invalidates a constraint.</span></span></exception>
        <exception cref="T:System.Data.NoNullAllowedException"><span data-ttu-id="f01f9-805">尝试将 null 值放到 <see cref="P:System.Data.DataColumn.AllowDBNull" /> 为 false 的列中。</span><span class="sxs-lookup"><span data-stu-id="f01f9-805">Attempting to put a null in a column where <see cref="P:System.Data.DataColumn.AllowDBNull" /> is false.</span></span></exception>
        <related type="Article" href="/dotnet/framework/data/adonet/dataset-datatable-dataview/datatables"><span data-ttu-id="f01f9-806">DataTables</span><span class="sxs-lookup"><span data-stu-id="f01f9-806">DataTables</span></span></related>
        <related type="Article" href="/dotnet/framework/data/adonet/dataset-datatable-dataview/handling-datatable-events"><span data-ttu-id="f01f9-807">处理数据表事件</span><span class="sxs-lookup"><span data-stu-id="f01f9-807">Handling DataTable Events</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="LoadDataRow">
      <MemberSignature Language="C#" Value="public System.Data.DataRow LoadDataRow (object[]? values, System.Data.LoadOption loadOption);" FrameworkAlternate="net-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataRow LoadDataRow(object[] values, valuetype System.Data.LoadOption loadOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.LoadDataRow(System.Object[],System.Data.LoadOption)" />
      <MemberSignature Language="VB.NET" Value="Public Function LoadDataRow (values As Object(), loadOption As LoadOption) As DataRow" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::DataRow ^ LoadDataRow(cli::array &lt;System::Object ^&gt; ^ values, System::Data::LoadOption loadOption);" />
      <MemberSignature Language="F#" Value="member this.LoadDataRow : obj[] * System.Data.LoadOption -&gt; System.Data.DataRow" Usage="dataTable.LoadDataRow (values, loadOption)" />
      <MemberSignature Language="C#" Value="public System.Data.DataRow LoadDataRow (object[] values, System.Data.LoadOption loadOption);" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRow</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="values" Type="System.Object[]" Index="0" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="loadOption" Type="System.Data.LoadOption" Index="1" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="values"><span data-ttu-id="f01f9-808">用于创建新行的值数组。</span><span class="sxs-lookup"><span data-stu-id="f01f9-808">An array of values used to create the new row.</span></span></param>
        <param name="loadOption"><span data-ttu-id="f01f9-809">用于确定数组值如何应用于现有行中的对应值。</span><span class="sxs-lookup"><span data-stu-id="f01f9-809">Used to determine how the array values are applied to the corresponding values in an existing row.</span></span></param>
        <summary><span data-ttu-id="f01f9-810">查找和更新特定行。</span><span class="sxs-lookup"><span data-stu-id="f01f9-810">Finds and updates a specific row.</span></span> <span data-ttu-id="f01f9-811">如果找不到任何匹配行，则使用给定值创建新行。</span><span class="sxs-lookup"><span data-stu-id="f01f9-811">If no matching row is found, a new row is created using the given values.</span></span></summary>
        <returns><span data-ttu-id="f01f9-812">新的 <see cref="T:System.Data.DataRow" />。</span><span class="sxs-lookup"><span data-stu-id="f01f9-812">The new <see cref="T:System.Data.DataRow" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f01f9-813"><xref:System.Data.DataTable.LoadDataRow%2A>方法采用值的数组，并在) 的主键 (列中查找 (s) 的匹配值。</span><span class="sxs-lookup"><span data-stu-id="f01f9-813">The <xref:System.Data.DataTable.LoadDataRow%2A> method takes an array of values and finds the matching value(s) in the primary key column(s).</span></span>  
  
 <span data-ttu-id="f01f9-814">如果列具有默认值，请在数组中传递 null 值，以设置该列的默认值。</span><span class="sxs-lookup"><span data-stu-id="f01f9-814">If a column has a default value, pass a null value in the array to set the default value for that column.</span></span> <span data-ttu-id="f01f9-815">同样，如果列的 <xref:System.Data.DataColumn.AutoIncrement%2A> 属性设置为 true，则在数组中传递 null 值，以便为该行设置自动生成的值。</span><span class="sxs-lookup"><span data-stu-id="f01f9-815">Similarly, if a column has its <xref:System.Data.DataColumn.AutoIncrement%2A> property set to true, pass a null value in the array to set the automatically generated value for the row.</span></span>  
  
 <span data-ttu-id="f01f9-816">参数的值 `loadOption` 用于确定数组中的值如何应用于现有行。</span><span class="sxs-lookup"><span data-stu-id="f01f9-816">The value of the `loadOption` parameter is used to determine how the values in the array are applied to an existing row.</span></span> <span data-ttu-id="f01f9-817">例如，如果将 `loadOption` 设置为 `OverwriteChanges` ，则 `Original` 每列的和 `Current` 值将替换为传入行中的值，并且 `RowState` 属性设置为 `Unchanged` 。</span><span class="sxs-lookup"><span data-stu-id="f01f9-817">For example, if `loadOption` is set to `OverwriteChanges`, the `Original` and `Current` values of each column are replaced with the values in the incoming row and the `RowState` property is set to `Unchanged`.</span></span>  
  
 <span data-ttu-id="f01f9-818">异常也可能发生在 <xref:System.Data.DataTable.ColumnChanging> 或事件期间 <xref:System.Data.DataTable.RowChanging> 。</span><span class="sxs-lookup"><span data-stu-id="f01f9-818">Exceptions can also occur during either a <xref:System.Data.DataTable.ColumnChanging> or <xref:System.Data.DataTable.RowChanging> event.</span></span> <span data-ttu-id="f01f9-819">如果发生异常，则不会将行添加到表中。</span><span class="sxs-lookup"><span data-stu-id="f01f9-819">If an exception occurs, the row is not added to the table.</span></span>  
  
 <span data-ttu-id="f01f9-820">将 <xref:System.Data.DataTable.LoadDataRow%2A> 与和结合 <xref:System.Data.DataTable.BeginLoadData%2A> 使用 <xref:System.Data.DataTable.EndLoadData%2A> 。</span><span class="sxs-lookup"><span data-stu-id="f01f9-820">Use <xref:System.Data.DataTable.LoadDataRow%2A> in conjunction with <xref:System.Data.DataTable.BeginLoadData%2A> and <xref:System.Data.DataTable.EndLoadData%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/data/adonet/dataset-datatable-dataview/datatables"><span data-ttu-id="f01f9-821">DataTables</span><span class="sxs-lookup"><span data-stu-id="f01f9-821">DataTables</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Locale">
      <MemberSignature Language="C#" Value="public System.Globalization.CultureInfo Locale { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Globalization.CultureInfo Locale" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataTable.Locale" />
      <MemberSignature Language="VB.NET" Value="Public Property Locale As CultureInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Globalization::CultureInfo ^ Locale { System::Globalization::CultureInfo ^ get(); void set(System::Globalization::CultureInfo ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Locale : System.Globalization.CultureInfo with get, set" Usage="System.Data.DataTable.Locale" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName Language="C#">[System.Data.DataSysDescription("DataTableLocaleDescr")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Data.DataSysDescription("DataTableLocaleDescr")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Globalization.CultureInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f01f9-822">获取或设置用于比较表中字符串的区域设置信息。</span><span class="sxs-lookup"><span data-stu-id="f01f9-822">Gets or sets the locale information used to compare strings within the table.</span></span></summary>
        <value><span data-ttu-id="f01f9-823">一个 <see cref="T:System.Globalization.CultureInfo" />，它包含有关用户计算机区域设置的数据。</span><span class="sxs-lookup"><span data-stu-id="f01f9-823">A <see cref="T:System.Globalization.CultureInfo" /> that contains data about the user's machine locale.</span></span> <span data-ttu-id="f01f9-824">默认为 <see cref="T:System.Data.DataSet" /> 所属的 <see cref="T:System.Globalization.CultureInfo" /> 对象的 <see cref="P:System.Data.DataSet.Locale" />（由 <see cref="T:System.Data.DataTable" /> 属性返回）；如果该表不属于 <see cref="T:System.Data.DataSet" />，则默认为当前系统的 <see cref="T:System.Globalization.CultureInfo" />。</span><span class="sxs-lookup"><span data-stu-id="f01f9-824">The default is the <see cref="T:System.Data.DataSet" /> object's <see cref="T:System.Globalization.CultureInfo" /> (returned by the <see cref="P:System.Data.DataSet.Locale" /> property) to which the <see cref="T:System.Data.DataTable" /> belongs; if the table doesn't belong to a <see cref="T:System.Data.DataSet" />, the default is the current system <see cref="T:System.Globalization.CultureInfo" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f01f9-825"><xref:System.Globalization.CultureInfo>表示特定区域性或社区的软件首选项。</span><span class="sxs-lookup"><span data-stu-id="f01f9-825">A <xref:System.Globalization.CultureInfo> represents the software preferences of a particular culture or community.</span></span>  
  
 <span data-ttu-id="f01f9-826">用于字符串比较时， <xref:System.Globalization.CultureInfo> 会影响排序、比较和筛选。</span><span class="sxs-lookup"><span data-stu-id="f01f9-826">When used for string comparisons, the <xref:System.Globalization.CultureInfo> affects sorting, comparisons, and filtering.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f01f9-827">在包含表达式的列中， <xref:System.StringComparison.InvariantCulture> 使用。</span><span class="sxs-lookup"><span data-stu-id="f01f9-827">In columns that contain expressions, the <xref:System.StringComparison.InvariantCulture> is used.</span></span> <span data-ttu-id="f01f9-828"><xref:System.StringComparison.CurrentCulture>忽略。</span><span class="sxs-lookup"><span data-stu-id="f01f9-828">The <xref:System.StringComparison.CurrentCulture> is ignored.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f01f9-829">下面的示例通过将设置为 <xref:System.Globalization.CultureInfo> <xref:System.Data.DataTable.Locale%2A> ，并输出 ISO 语言名称。</span><span class="sxs-lookup"><span data-stu-id="f01f9-829">The following example sets the <xref:System.Globalization.CultureInfo> through the <xref:System.Data.DataTable.Locale%2A> and prints the ISO language name.</span></span>  
  
 [!code-csharp[Classic WebData DataTable.Locale Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable.Locale Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable.Locale Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable.Locale Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Globalization.CultureInfo" />
        <related type="Article" href="/dotnet/framework/data/adonet/dataset-datatable-dataview/datatables"><span data-ttu-id="f01f9-830">DataTables</span><span class="sxs-lookup"><span data-stu-id="f01f9-830">DataTables</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Merge">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f01f9-831">将指定的 <see cref="T:System.Data.DataTable" /> 与当前 <see cref="T:System.Data.DataTable" /> 合并。</span><span class="sxs-lookup"><span data-stu-id="f01f9-831">Merge the specified <see cref="T:System.Data.DataTable" /> with the current <see cref="T:System.Data.DataTable" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f01f9-832">`Merge`方法用于合并 <xref:System.Data.DataTable> 具有很大架构的两个对象。</span><span class="sxs-lookup"><span data-stu-id="f01f9-832">The `Merge` method is used to merge two <xref:System.Data.DataTable> objects that have largely similar schemas.</span></span> <span data-ttu-id="f01f9-833">通常在客户端应用程序上使用合并，以将数据源中的最新更改合并到现有中 <xref:System.Data.DataTable> 。</span><span class="sxs-lookup"><span data-stu-id="f01f9-833">A merge is typically used on a client application to incorporate the latest changes from a data source into an existing <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="f01f9-834">这允许客户端应用程序使用 <xref:System.Data.DataTable> 数据源中的最新数据进行刷新。</span><span class="sxs-lookup"><span data-stu-id="f01f9-834">This allows the client application to have a refreshed <xref:System.Data.DataTable> with the latest data from the data source.</span></span>  
  
 <span data-ttu-id="f01f9-835">Merge 操作仅考虑原始表和要合并的表。</span><span class="sxs-lookup"><span data-stu-id="f01f9-835">The merge operation takes into account only the original table, and the table to be merged.</span></span> <span data-ttu-id="f01f9-836">不会影响或包含子表。</span><span class="sxs-lookup"><span data-stu-id="f01f9-836">Child tables are not affected or included.</span></span> <span data-ttu-id="f01f9-837">如果表具有一个或多个子表（定义为关系的一部分），则每个子表都必须单独合并。</span><span class="sxs-lookup"><span data-stu-id="f01f9-837">If a table has one or more child tables, defined as part of a relationship, each child table must be merged individually.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f01f9-838">下面的控制台应用程序演示方法的参数的行为 `missingSchemaAction` <xref:System.Data.DataTable.Merge%2A> 。</span><span class="sxs-lookup"><span data-stu-id="f01f9-838">The following console application demonstrates the behavior of the `missingSchemaAction` parameter of the <xref:System.Data.DataTable.Merge%2A> method.</span></span> <span data-ttu-id="f01f9-839">此示例将创建同一个表的两个版本，并修改第二个版本的架构。</span><span class="sxs-lookup"><span data-stu-id="f01f9-839">This example creates two versions of the same table, modifying the schema for the second version.</span></span> <span data-ttu-id="f01f9-840">然后，该代码会尝试将第二个表合并为第一个表。</span><span class="sxs-lookup"><span data-stu-id="f01f9-840">The code then attempts to merge the second table into the first.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f01f9-841">此示例演示如何使用合并的重载版本之一。</span><span class="sxs-lookup"><span data-stu-id="f01f9-841">This example shows how to use one of the overloaded versions of Merge.</span></span> <span data-ttu-id="f01f9-842">有关可能可用的其他示例，请参阅各个重载主题。</span><span class="sxs-lookup"><span data-stu-id="f01f9-842">For other examples that might be available, see the individual overload topics.</span></span>  
  
 [!code-csharp[DataWorks DataTableMergeOverload#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableMergeOverload/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableMergeOverload#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableMergeOverload/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/data/adonet/dataset-datatable-dataview/datatables"><span data-ttu-id="f01f9-843">DataTables</span><span class="sxs-lookup"><span data-stu-id="f01f9-843">DataTables</span></span></related>
      </Docs>
    </MemberGroup>
    <Member MemberName="Merge">
      <MemberSignature Language="C#" Value="public void Merge (System.Data.DataTable table);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Merge(class System.Data.DataTable table) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.Merge(System.Data.DataTable)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Merge (table As DataTable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Merge(System::Data::DataTable ^ table);" />
      <MemberSignature Language="F#" Value="member this.Merge : System.Data.DataTable -&gt; unit" Usage="dataTable.Merge table" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="table" Type="System.Data.DataTable" Index="0" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="table"><span data-ttu-id="f01f9-844">要与当前 <see cref="T:System.Data.DataTable" /> 合并的 <see cref="T:System.Data.DataTable" />。</span><span class="sxs-lookup"><span data-stu-id="f01f9-844">The <see cref="T:System.Data.DataTable" /> to be merged with the current <see cref="T:System.Data.DataTable" />.</span></span></param>
        <summary><span data-ttu-id="f01f9-845">将指定的 <see cref="T:System.Data.DataTable" /> 与当前 <see cref="T:System.Data.DataTable" /> 合并。</span><span class="sxs-lookup"><span data-stu-id="f01f9-845">Merge the specified <see cref="T:System.Data.DataTable" /> with the current <see cref="T:System.Data.DataTable" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f01f9-846">Merge 方法用于合并 <xref:System.Data.DataTable> 具有很大相似架构的两个对象。</span><span class="sxs-lookup"><span data-stu-id="f01f9-846">The Merge method is used to merge two <xref:System.Data.DataTable> objects that have largely similar schemas.</span></span> <span data-ttu-id="f01f9-847">通常在客户端应用程序上使用合并，以将数据源中的最新更改合并到现有中 <xref:System.Data.DataTable> 。</span><span class="sxs-lookup"><span data-stu-id="f01f9-847">A merge is typically used on a client application to incorporate the latest changes from a data source into an existing <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="f01f9-848">这允许客户端应用程序使用 <xref:System.Data.DataTable> 数据源中的最新数据进行刷新。</span><span class="sxs-lookup"><span data-stu-id="f01f9-848">This allows the client application to have a refreshed <xref:System.Data.DataTable> with the latest data from the data source.</span></span>  
  
 <span data-ttu-id="f01f9-849">Merge 操作仅考虑原始表和要合并的表。</span><span class="sxs-lookup"><span data-stu-id="f01f9-849">The merge operation takes into account only the original table, and the table to be merged.</span></span> <span data-ttu-id="f01f9-850">不会影响或包含子表。</span><span class="sxs-lookup"><span data-stu-id="f01f9-850">Child tables are not affected or included.</span></span> <span data-ttu-id="f01f9-851">如果表具有一个或多个子表（定义为关系的一部分），则每个子表都必须单独合并。</span><span class="sxs-lookup"><span data-stu-id="f01f9-851">If a table has one or more child tables, defined as part of a relationship, each child table must be merged individually.</span></span>  
  
 <span data-ttu-id="f01f9-852">`Merge`方法通常在一系列过程的末尾调用，这些过程涉及验证更改、协调错误、使用更改更新数据源，最后刷新现有 <xref:System.Data.DataTable> 。</span><span class="sxs-lookup"><span data-stu-id="f01f9-852">The `Merge` method is typically called at the end of a series of procedures that involve validating changes, reconciling errors, updating the data source with the changes, and finally refreshing the existing <xref:System.Data.DataTable>.</span></span>  
  
 <span data-ttu-id="f01f9-853">执行合并时，默认情况下，合并操作期间将保留对现有数据所做的更改。</span><span class="sxs-lookup"><span data-stu-id="f01f9-853">When performing a merge, changes made to the existing data before the merge are preserved by default during the merge operation.</span></span> <span data-ttu-id="f01f9-854">开发人员可以通过调用此方法的另一个重载，并为参数指定 false 值来修改此行为 `preserveChanges` 。</span><span class="sxs-lookup"><span data-stu-id="f01f9-854">Developers can modify this behavior by calling one of the other two overloads for this method, and specifying a false value for the `preserveChanges` parameter.</span></span>  
  
 <span data-ttu-id="f01f9-855">在客户端应用程序中，通常会有一个按钮，用户可以单击该按钮来收集更改的数据并对其进行验证，然后再将其发送回中间层组件。</span><span class="sxs-lookup"><span data-stu-id="f01f9-855">In a client application, it is usual to have a single button that the user can click that gathers the changed data and validates it before sending it back to a middle tier component.</span></span> <span data-ttu-id="f01f9-856">在此方案中， <xref:System.Data.DataTable.GetChanges%2A> 首先调用方法。</span><span class="sxs-lookup"><span data-stu-id="f01f9-856">In this scenario, the <xref:System.Data.DataTable.GetChanges%2A> method is first invoked.</span></span> <span data-ttu-id="f01f9-857">该方法将返回第二个 <xref:System.Data.DataTable> 优化用于验证和合并的。</span><span class="sxs-lookup"><span data-stu-id="f01f9-857">That method returns a second <xref:System.Data.DataTable> optimized for validating and merging.</span></span> <span data-ttu-id="f01f9-858">此第二个 <xref:System.Data.DataTable> 对象仅包含已 <xref:System.Data.DataRow> 更改的对象，从而生成原始对象的子集 <xref:System.Data.DataTable> 。</span><span class="sxs-lookup"><span data-stu-id="f01f9-858">This second <xref:System.Data.DataTable> object contains only the <xref:System.Data.DataRow> objects that were changed, resulting in a subset of the original <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="f01f9-859">此子集通常较小，因此更有效地传递回中间层组件。</span><span class="sxs-lookup"><span data-stu-id="f01f9-859">This subset is generally smaller and thus more efficiently passed back to a middle tier component.</span></span> <span data-ttu-id="f01f9-860">然后，中间层组件使用存储过程中的更改来更新原始数据源。</span><span class="sxs-lookup"><span data-stu-id="f01f9-860">The middle tier component then updates the original data source with the changes through stored procedures.</span></span> <span data-ttu-id="f01f9-861">然后，中间层可以 <xref:System.Data.DataTable> 通过再次运行原始查询来发送回包含数据源中的原始数据和最新数据 (的新数据) ，也可以从数据源向后发送回已对其进行的任何更改的子集。</span><span class="sxs-lookup"><span data-stu-id="f01f9-861">The middle tier can then send back either a new <xref:System.Data.DataTable> that includes original data and the latest data from the data source (by running the original query again), or it can send back the subset with any changes that have been made to it from the data source.</span></span> <span data-ttu-id="f01f9-862"> (例如，如果数据源自动创建唯一的主键值，则这些值可以传播回客户端应用程序。 ) 在任何一种情况下，返回的都 <xref:System.Data.DataTable> 可以 <xref:System.Data.DataTable> 通过 <xref:System.Data.DataTable.Merge%2A> 方法合并回客户端应用程序的原始中。</span><span class="sxs-lookup"><span data-stu-id="f01f9-862">(For example, if the data source automatically creates unique primary key values, these values can be propagated back to the client application.) In either case, the returned <xref:System.Data.DataTable> can be merged back into the client application's original <xref:System.Data.DataTable> with the <xref:System.Data.DataTable.Merge%2A> method.</span></span>  
  
 <span data-ttu-id="f01f9-863">在将新源合并 <xref:System.Data.DataTable> 到目标时，任何值为、或的源行都将与 <xref:System.Data.DataRowState> `Unchanged` `Modified` `Deleted` 具有相同的主键值的目标行匹配。</span><span class="sxs-lookup"><span data-stu-id="f01f9-863">When merging a new source <xref:System.Data.DataTable> into the target, any source rows with a <xref:System.Data.DataRowState> value of `Unchanged`, `Modified`, or `Deleted`, is matched to target rows with the same primary key values.</span></span> <span data-ttu-id="f01f9-864">值为的源行与新源行的 <xref:System.Data.DataRowState> `Added` 主键值相同的新目标行匹配。</span><span class="sxs-lookup"><span data-stu-id="f01f9-864">Source rows with a <xref:System.Data.DataRowState> value of `Added` are matched to new target rows with the same primary key values as the new source rows.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f01f9-865">下面的控制台应用程序创建一个简单的 <xref:System.Data.DataTable> ，并将数据添加到表中。</span><span class="sxs-lookup"><span data-stu-id="f01f9-865">The following console application creates a simple <xref:System.Data.DataTable> and adds data to the table.</span></span> <span data-ttu-id="f01f9-866">然后，该示例将创建表的副本，并向副本添加行。</span><span class="sxs-lookup"><span data-stu-id="f01f9-866">The example then creates a copy of the table, adding rows to the copy.</span></span> <span data-ttu-id="f01f9-867">最后，该示例调用 <xref:System.Data.DataTable.Merge%2A> 方法，将第二个表中的数据与第一个表中的数据合并。</span><span class="sxs-lookup"><span data-stu-id="f01f9-867">Finally, the example calls the <xref:System.Data.DataTable.Merge%2A> method to merge the data in the second table with the data in the first table.</span></span>  
  
 [!code-csharp[DataWorks DataTable.Merge#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTable.Merge/CS/source.cs#1)]
 [!code-vb[DataWorks DataTable.Merge#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTable.Merge/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/data/adonet/dataset-datatable-dataview/datatables"><span data-ttu-id="f01f9-868">DataTables</span><span class="sxs-lookup"><span data-stu-id="f01f9-868">DataTables</span></span></related>
        <related type="Article" href="/dotnet/framework/data/adonet/dataset-datatable-dataview/handling-datatable-events"><span data-ttu-id="f01f9-869">处理数据表事件</span><span class="sxs-lookup"><span data-stu-id="f01f9-869">Handling DataTable Events</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Merge">
      <MemberSignature Language="C#" Value="public void Merge (System.Data.DataTable table, bool preserveChanges);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Merge(class System.Data.DataTable table, bool preserveChanges) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.Merge(System.Data.DataTable,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Merge (table As DataTable, preserveChanges As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Merge(System::Data::DataTable ^ table, bool preserveChanges);" />
      <MemberSignature Language="F#" Value="member this.Merge : System.Data.DataTable * bool -&gt; unit" Usage="dataTable.Merge (table, preserveChanges)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="table" Type="System.Data.DataTable" Index="0" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="preserveChanges" Type="System.Boolean" Index="1" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="table"><span data-ttu-id="f01f9-870">要与当前 <see langword="DataTable" /> 合并的 <see langword="DataTable" />。</span><span class="sxs-lookup"><span data-stu-id="f01f9-870">The <see langword="DataTable" /> to be merged with the current <see langword="DataTable" />.</span></span></param>
        <param name="preserveChanges"><span data-ttu-id="f01f9-871">如果保留当前 <see langword="DataTable" /> 中的更改，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="f01f9-871"><see langword="true" />, to preserve changes in the current <see langword="DataTable" />; otherwise <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="f01f9-872">将指定的 <see cref="T:System.Data.DataTable" /> 与当前 <see langword="DataTable" /> 合并，指示是否保留当前 <see langword="DataTable" /> 中的更改。</span><span class="sxs-lookup"><span data-stu-id="f01f9-872">Merge the specified <see cref="T:System.Data.DataTable" /> with the current <see langword="DataTable" />, indicating whether to preserve changes in the current <see langword="DataTable" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f01f9-873">Merge 方法用于合并 <xref:System.Data.DataTable> 具有很大相似架构的两个对象。</span><span class="sxs-lookup"><span data-stu-id="f01f9-873">The Merge method is used to merge two <xref:System.Data.DataTable> objects that have largely similar schemas.</span></span> <span data-ttu-id="f01f9-874">通常在客户端应用程序上使用合并，以将数据源中的最新更改合并到现有中 <xref:System.Data.DataTable> 。</span><span class="sxs-lookup"><span data-stu-id="f01f9-874">A merge is typically used on a client application to incorporate the latest changes from a data source into an existing <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="f01f9-875">这允许客户端应用程序使用 <xref:System.Data.DataTable> 数据源中的最新数据进行刷新。</span><span class="sxs-lookup"><span data-stu-id="f01f9-875">This allows the client application to have a refreshed <xref:System.Data.DataTable> with the latest data from the data source.</span></span>  
  
 <span data-ttu-id="f01f9-876">Merge 操作仅考虑原始表和要合并的表。</span><span class="sxs-lookup"><span data-stu-id="f01f9-876">The merge operation takes into account only the original table, and the table to be merged.</span></span> <span data-ttu-id="f01f9-877">不会影响或包含子表。</span><span class="sxs-lookup"><span data-stu-id="f01f9-877">Child tables are not affected or included.</span></span> <span data-ttu-id="f01f9-878">如果表具有一个或多个子表（定义为关系的一部分），则每个子表都必须单独合并。</span><span class="sxs-lookup"><span data-stu-id="f01f9-878">If a table has one or more child tables, defined as part of a relationship, each child table must be merged individually.</span></span>  
  
 <span data-ttu-id="f01f9-879">`Merge`方法通常在一系列过程的末尾调用，这些过程涉及验证更改、协调错误、使用更改更新数据源，最后刷新现有 <xref:System.Data.DataTable> 。</span><span class="sxs-lookup"><span data-stu-id="f01f9-879">The `Merge` method is typically called at the end of a series of procedures that involve validating changes, reconciling errors, updating the data source with the changes, and finally refreshing the existing <xref:System.Data.DataTable>.</span></span>  
  
 <span data-ttu-id="f01f9-880">执行合并时，将在合并操作期间保留对现有数据所做的更改，除非开发人员为参数指定 false `preserveChanges` 。</span><span class="sxs-lookup"><span data-stu-id="f01f9-880">When performing a merge, changes made to the existing data before the merge are preserved during the merge operation unless the developer specifies false for the `preserveChanges` parameter.</span></span> <span data-ttu-id="f01f9-881">如果将 `preserveChanges` 参数设置为 `true` ，则传入值不会覆盖现有行的当前行版本中的现有值。</span><span class="sxs-lookup"><span data-stu-id="f01f9-881">If the `preserveChanges` parameter is set to `true`, incoming values do not overwrite existing values in the Current row version of the existing row.</span></span> <span data-ttu-id="f01f9-882">如果将 `preserveChanges` 参数设置为 `false` ，则传入值将覆盖现有行的当前行版本中的现有值。</span><span class="sxs-lookup"><span data-stu-id="f01f9-882">If the `preserveChanges` parameter is set to `false`, incoming values do overwrite the existing values in the Current row version of the existing row.</span></span> <span data-ttu-id="f01f9-883">有关行版本的详细信息，请参阅 [行状态和行版本](/dotnet/framework/data/adonet/dataset-datatable-dataview/row-states-and-row-versions)。</span><span class="sxs-lookup"><span data-stu-id="f01f9-883">For more information about row versions, see [Row States and Row Versions](/dotnet/framework/data/adonet/dataset-datatable-dataview/row-states-and-row-versions).</span></span>  
  
 <span data-ttu-id="f01f9-884">在客户端应用程序中，通常会有一个按钮，用户可以单击该按钮来收集更改的数据并对其进行验证，然后再将其发送回中间层组件。</span><span class="sxs-lookup"><span data-stu-id="f01f9-884">In a client application, it is usual to have a single button that the user can click that gathers the changed data and validates it before sending it back to a middle tier component.</span></span> <span data-ttu-id="f01f9-885">在此方案中， <xref:System.Data.DataTable.GetChanges%2A> 首先调用方法。</span><span class="sxs-lookup"><span data-stu-id="f01f9-885">In this scenario, the <xref:System.Data.DataTable.GetChanges%2A> method is first invoked.</span></span> <span data-ttu-id="f01f9-886">该方法将返回第二个 <xref:System.Data.DataTable> 优化用于验证和合并的。</span><span class="sxs-lookup"><span data-stu-id="f01f9-886">That method returns a second <xref:System.Data.DataTable> optimized for validating and merging.</span></span> <span data-ttu-id="f01f9-887">此第二个 <xref:System.Data.DataTable> 对象仅包含已 <xref:System.Data.DataTable> 更改的和 <xref:System.Data.DataRow> 对象，从而导致了原始的子集 <xref:System.Data.DataTable> 。</span><span class="sxs-lookup"><span data-stu-id="f01f9-887">This second <xref:System.Data.DataTable> object contains only the <xref:System.Data.DataTable> and <xref:System.Data.DataRow> objects that were changed, resulting in a subset of the original <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="f01f9-888">此子集通常较小，因此此子集更有效地传递回中间层组件。</span><span class="sxs-lookup"><span data-stu-id="f01f9-888">This subset is generally smaller, and thus this subset is more efficiently passed back to a middle tier component.</span></span> <span data-ttu-id="f01f9-889">然后，中间层组件使用存储过程中的更改来更新原始数据源。</span><span class="sxs-lookup"><span data-stu-id="f01f9-889">The middle tier component then updates the original data source with the changes through stored procedures.</span></span> <span data-ttu-id="f01f9-890">然后，中间层可以 <xref:System.Data.DataTable> 通过再次运行原始查询来发送回包含数据源中的原始数据和最新数据 (的新数据) ，也可以从数据源向后发送回已对其进行的任何更改的子集。</span><span class="sxs-lookup"><span data-stu-id="f01f9-890">The middle tier can then send back either a new <xref:System.Data.DataTable> that includes original data and the latest data from the data source (by running the original query again), or it can send back the subset with any changes that have been made to it from the data source.</span></span> <span data-ttu-id="f01f9-891"> (例如，如果数据源自动创建唯一的主键值，则这些值可以传播回客户端应用程序。 ) 在任何一种情况下，返回的都 <xref:System.Data.DataTable> 可以 <xref:System.Data.DataTable> 通过 <xref:System.Data.DataTable.Merge%2A> 方法合并回客户端应用程序的原始中。</span><span class="sxs-lookup"><span data-stu-id="f01f9-891">(For example, if the data source automatically creates unique primary key values, these values can be propagated back to the client application.) In either case, the returned <xref:System.Data.DataTable> can be merged back into the client application's original <xref:System.Data.DataTable> with the <xref:System.Data.DataTable.Merge%2A> method.</span></span>  
  
 <span data-ttu-id="f01f9-892">在将新源合并 <xref:System.Data.DataTable> 到目标时，值为、或的任何源行都将与 <xref:System.Data.DataRowState> `Unchanged` `Modified` `Deleted` 具有相同的主键值的目标行匹配。</span><span class="sxs-lookup"><span data-stu-id="f01f9-892">When merging a new source <xref:System.Data.DataTable> into the target, any source rows with a <xref:System.Data.DataRowState> value of `Unchanged`, `Modified`, or `Deleted` are matched to target rows with the same primary key values.</span></span> <span data-ttu-id="f01f9-893">值为的源行与新源行的 <xref:System.Data.DataRowState> `Added` 主键值相同的新目标行匹配。</span><span class="sxs-lookup"><span data-stu-id="f01f9-893">Source rows with a <xref:System.Data.DataRowState> value of `Added` are matched to new target rows with the same primary key values as the new source rows.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f01f9-894">下面的控制台应用程序创建一个 <xref:System.Data.DataTable> 包含行，修改这些行中的某些数据，并尝试从不同的合并数据 <xref:System.Data.DataTable> 。</span><span class="sxs-lookup"><span data-stu-id="f01f9-894">The following console application creates a <xref:System.Data.DataTable> containing rows, modifies some of the data in those rows, and attempts to merge data from a different <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="f01f9-895">该示例演示参数的不同行为 `preserveChanges` 。</span><span class="sxs-lookup"><span data-stu-id="f01f9-895">The example demonstrates the different behaviors for the `preserveChanges` parameter.</span></span>  
  
 [!code-csharp[DataWorks DataTable.MergePreserveChanges#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTable.MergePreserveChanges/CS/source.cs#1)]
 [!code-vb[DataWorks DataTable.MergePreserveChanges#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTable.MergePreserveChanges/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/data/adonet/dataset-datatable-dataview/datatables"><span data-ttu-id="f01f9-896">DataTables</span><span class="sxs-lookup"><span data-stu-id="f01f9-896">DataTables</span></span></related>
        <related type="Article" href="/dotnet/framework/data/adonet/dataset-datatable-dataview/handling-datatable-events"><span data-ttu-id="f01f9-897">处理数据表事件</span><span class="sxs-lookup"><span data-stu-id="f01f9-897">Handling DataTable Events</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Merge">
      <MemberSignature Language="C#" Value="public void Merge (System.Data.DataTable table, bool preserveChanges, System.Data.MissingSchemaAction missingSchemaAction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Merge(class System.Data.DataTable table, bool preserveChanges, valuetype System.Data.MissingSchemaAction missingSchemaAction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.Merge(System.Data.DataTable,System.Boolean,System.Data.MissingSchemaAction)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Merge (table As DataTable, preserveChanges As Boolean, missingSchemaAction As MissingSchemaAction)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Merge(System::Data::DataTable ^ table, bool preserveChanges, System::Data::MissingSchemaAction missingSchemaAction);" />
      <MemberSignature Language="F#" Value="member this.Merge : System.Data.DataTable * bool * System.Data.MissingSchemaAction -&gt; unit" Usage="dataTable.Merge (table, preserveChanges, missingSchemaAction)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="table" Type="System.Data.DataTable" Index="0" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="preserveChanges" Type="System.Boolean" Index="1" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="missingSchemaAction" Type="System.Data.MissingSchemaAction" Index="2" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="table"><span data-ttu-id="f01f9-898">要与当前 <see cref="T:System.Data.DataTable" /> 合并的 <see cref="T:System.Data.DataTable" />。</span><span class="sxs-lookup"><span data-stu-id="f01f9-898">The <see cref="T:System.Data.DataTable" /> to be merged with the current <see cref="T:System.Data.DataTable" />.</span></span></param>
        <param name="preserveChanges"><span data-ttu-id="f01f9-899">如果保留当前 <see cref="T:System.Data.DataTable" /> 中的更改，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="f01f9-899"><see langword="true" />, to preserve changes in the current <see cref="T:System.Data.DataTable" />; otherwise <see langword="false" />.</span></span></param>
        <param name="missingSchemaAction"><span data-ttu-id="f01f9-900"><see cref="T:System.Data.MissingSchemaAction" /> 值之一。</span><span class="sxs-lookup"><span data-stu-id="f01f9-900">One of the <see cref="T:System.Data.MissingSchemaAction" /> values.</span></span></param>
        <summary><span data-ttu-id="f01f9-901">将指定的 <see cref="T:System.Data.DataTable" /> 与当前 <see langword="DataTable" /> 合并，指示是否保留更改以及如何处理当前 <see langword="DataTable" /> 中缺失的架构。</span><span class="sxs-lookup"><span data-stu-id="f01f9-901">Merge the specified <see cref="T:System.Data.DataTable" /> with the current <see langword="DataTable" />, indicating whether to preserve changes and how to handle missing schema in the current <see langword="DataTable" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f01f9-902">`Merge`方法用于合并 <xref:System.Data.DataTable> 具有很大架构的两个对象。</span><span class="sxs-lookup"><span data-stu-id="f01f9-902">The `Merge` method is used to merge two <xref:System.Data.DataTable> objects that have largely similar schemas.</span></span> <span data-ttu-id="f01f9-903">通常在客户端应用程序上使用合并，以将数据源中的最新更改合并到现有中 <xref:System.Data.DataTable> 。</span><span class="sxs-lookup"><span data-stu-id="f01f9-903">A merge is typically used on a client application to incorporate the latest changes from a data source into an existing <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="f01f9-904">这允许客户端应用程序使用 <xref:System.Data.DataTable> 数据源中的最新数据进行刷新。</span><span class="sxs-lookup"><span data-stu-id="f01f9-904">This allows the client application to have a refreshed <xref:System.Data.DataTable> with the latest data from the data source.</span></span>  
  
 <span data-ttu-id="f01f9-905">Merge 操作仅考虑原始表和要合并的表。</span><span class="sxs-lookup"><span data-stu-id="f01f9-905">The merge operation takes into account only the original table, and the table to be merged.</span></span> <span data-ttu-id="f01f9-906">不会影响或包含子表。</span><span class="sxs-lookup"><span data-stu-id="f01f9-906">Child tables are not affected or included.</span></span> <span data-ttu-id="f01f9-907">如果表具有一个或多个子表（定义为关系的一部分），则每个子表都必须单独合并。</span><span class="sxs-lookup"><span data-stu-id="f01f9-907">If a table has one or more child tables, defined as part of a relationship, each child table must be merged individually.</span></span>  
  
 <span data-ttu-id="f01f9-908">`Merge`方法通常在一系列过程的末尾调用，这些过程涉及验证更改、协调错误、使用更改更新数据源，最后刷新现有 <xref:System.Data.DataTable> 。</span><span class="sxs-lookup"><span data-stu-id="f01f9-908">The `Merge` method is typically called at the end of a series of procedures that involve validating changes, reconciling errors, updating the data source with the changes, and finally refreshing the existing <xref:System.Data.DataTable>.</span></span>  
  
 <span data-ttu-id="f01f9-909">执行合并时，将在合并操作期间保留对现有数据所做的更改，除非开发人员为参数指定 false `preserveChanges` 。</span><span class="sxs-lookup"><span data-stu-id="f01f9-909">When performing a merge, changes made to the existing data before the merge are preserved during the merge operation unless the developer specifies false for the `preserveChanges` parameter.</span></span> <span data-ttu-id="f01f9-910">如果将 `preserveChanges` 参数设置为 `true` ，则传入值不会覆盖现有行的当前行版本中的现有值。</span><span class="sxs-lookup"><span data-stu-id="f01f9-910">If the `preserveChanges` parameter is set to `true`, incoming values do not overwrite existing values in the Current row version of the existing row.</span></span> <span data-ttu-id="f01f9-911">如果将 `preserveChanges` 参数设置为 `false` ，则传入值将覆盖现有行的当前行版本中的现有值。</span><span class="sxs-lookup"><span data-stu-id="f01f9-911">If the `preserveChanges` parameter is set to `false`, incoming values do overwrite the existing values in the Current row version of the existing row.</span></span> <span data-ttu-id="f01f9-912">有关行版本的详细信息，请参阅 [行状态和行版本](/dotnet/framework/data/adonet/dataset-datatable-dataview/row-states-and-row-versions)。</span><span class="sxs-lookup"><span data-stu-id="f01f9-912">For more information about row versions, see [Row States and Row Versions](/dotnet/framework/data/adonet/dataset-datatable-dataview/row-states-and-row-versions).</span></span>  
  
 <span data-ttu-id="f01f9-913">在客户端应用程序中，通常会有一个按钮，用户可以单击该按钮来收集更改的数据并对其进行验证，然后再将其发送回中间层组件。</span><span class="sxs-lookup"><span data-stu-id="f01f9-913">In a client application, it is usual to have a single button that the user can click that gathers the changed data and validates it before sending it back to a middle tier component.</span></span> <span data-ttu-id="f01f9-914">在此方案中， <xref:System.Data.DataTable.GetChanges%2A> 首先调用方法。</span><span class="sxs-lookup"><span data-stu-id="f01f9-914">In this scenario, the <xref:System.Data.DataTable.GetChanges%2A> method is first invoked.</span></span> <span data-ttu-id="f01f9-915">该方法将返回第二个 <xref:System.Data.DataTable> 优化用于验证和合并的。</span><span class="sxs-lookup"><span data-stu-id="f01f9-915">That method returns a second <xref:System.Data.DataTable> optimized for validating and merging.</span></span> <span data-ttu-id="f01f9-916">此第二个 <xref:System.Data.DataTable> 对象仅包含已 <xref:System.Data.DataTable> 更改的和 <xref:System.Data.DataRow> 对象，从而导致了原始的子集 <xref:System.Data.DataTable> 。</span><span class="sxs-lookup"><span data-stu-id="f01f9-916">This second <xref:System.Data.DataTable> object contains only the <xref:System.Data.DataTable> and <xref:System.Data.DataRow> objects that were changed, resulting in a subset of the original <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="f01f9-917">此子集通常较小，因此此子集更有效地传递回中间层组件。</span><span class="sxs-lookup"><span data-stu-id="f01f9-917">This subset is generally smaller, and thus this subset is more efficiently passed back to a middle tier component.</span></span> <span data-ttu-id="f01f9-918">然后，中间层组件使用存储过程中的更改来更新原始数据源。</span><span class="sxs-lookup"><span data-stu-id="f01f9-918">The middle tier component then updates the original data source with the changes through stored procedures.</span></span> <span data-ttu-id="f01f9-919">然后，中间层可以 <xref:System.Data.DataTable> 通过再次运行原始查询来发送回包含数据源中的原始数据和最新数据 (的新数据) ，也可以从数据源向后发送回已对其进行的任何更改的子集。</span><span class="sxs-lookup"><span data-stu-id="f01f9-919">The middle tier can then send back either a new <xref:System.Data.DataTable> that includes original data and the latest data from the data source (by running the original query again), or it can send back the subset with any changes that have been made to it from the data source.</span></span> <span data-ttu-id="f01f9-920"> (例如，如果数据源自动创建唯一的主键值，则这些值可以传播回客户端应用程序。 ) 在任何一种情况下，返回的都 <xref:System.Data.DataTable> 可以 <xref:System.Data.DataTable> 通过 <xref:System.Data.DataTable.Merge%2A> 方法合并回客户端应用程序的原始中。</span><span class="sxs-lookup"><span data-stu-id="f01f9-920">(For example, if the data source automatically creates unique primary key values, these values can be propagated back to the client application.) In either case, the returned <xref:System.Data.DataTable> can be merged back into the client application's original <xref:System.Data.DataTable> with the <xref:System.Data.DataTable.Merge%2A> method.</span></span>  
  
 <span data-ttu-id="f01f9-921"><xref:System.Data.DataTable.Merge%2A>调用方法时，将比较两个对象的架构 <xref:System.Data.DataTable> ，因为架构可能已更改。</span><span class="sxs-lookup"><span data-stu-id="f01f9-921">When the <xref:System.Data.DataTable.Merge%2A> method is called, the schemas of the two <xref:System.Data.DataTable> objects are compared, because it is possible that the schemas may have been changed.</span></span> <span data-ttu-id="f01f9-922">例如，在企业对企业方案中，可能已通过自动化过程将新列添加到了 XML 架构。</span><span class="sxs-lookup"><span data-stu-id="f01f9-922">For example, in a business-to-business scenario, new columns may have been added to an XML schema by an automated process.</span></span> <span data-ttu-id="f01f9-923">如果源 <xref:System.Data.DataTable> 包含架构元素 (添加了 <xref:System.Data.DataColumn> 目标中缺少的对象) ，则可以通过将参数设置为来将架构元素添加到目标中 `missingSchemaAction` `MissingSchemaAction.Add` 。</span><span class="sxs-lookup"><span data-stu-id="f01f9-923">If the source <xref:System.Data.DataTable> contains schema elements (added <xref:System.Data.DataColumn> objects) that are missing in the target, the schema elements can be added to the target by setting the `missingSchemaAction` argument to `MissingSchemaAction.Add`.</span></span> <span data-ttu-id="f01f9-924">在这种情况下，合并的 <xref:System.Data.DataTable> 包含已添加的架构和数据。</span><span class="sxs-lookup"><span data-stu-id="f01f9-924">In that case, the merged <xref:System.Data.DataTable> contains the added schema and data.</span></span>  
  
 <span data-ttu-id="f01f9-925">合并架构后，数据将合并。</span><span class="sxs-lookup"><span data-stu-id="f01f9-925">After merging schemas, the data is merged.</span></span>  
  
 <span data-ttu-id="f01f9-926">在将新源合并 <xref:System.Data.DataTable> 到目标时，值为、或的任何源行都将与 <xref:System.Data.DataRowState> `Unchanged` `Modified` `Deleted` 具有相同的主键值的目标行匹配。</span><span class="sxs-lookup"><span data-stu-id="f01f9-926">When merging a new source <xref:System.Data.DataTable> into the target, any source rows with a <xref:System.Data.DataRowState> value of `Unchanged`, `Modified`, or `Deleted` are matched to target rows with the same primary key values.</span></span> <span data-ttu-id="f01f9-927">值为的源行与新源行的 <xref:System.Data.DataRowState> `Added` 主键值相同的新目标行匹配。</span><span class="sxs-lookup"><span data-stu-id="f01f9-927">Source rows with a <xref:System.Data.DataRowState> value of `Added` are matched to new target rows with the same primary key values as the new source rows.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f01f9-928">下面的控制台应用程序演示方法的参数的行为 `missingSchemaAction` <xref:System.Data.DataTable.Merge%2A> 。</span><span class="sxs-lookup"><span data-stu-id="f01f9-928">The following console application demonstrates the behavior of the `missingSchemaAction` parameter of the <xref:System.Data.DataTable.Merge%2A> method.</span></span> <span data-ttu-id="f01f9-929">此示例将创建同一个表的两个版本，并修改第二个版本的架构。</span><span class="sxs-lookup"><span data-stu-id="f01f9-929">This example creates two versions of the same table, modifying the schema for the second version.</span></span> <span data-ttu-id="f01f9-930">然后，该代码会尝试将第二个表合并为第一个表。</span><span class="sxs-lookup"><span data-stu-id="f01f9-930">The code then attempts to merge the second table into the first.</span></span>  
  
 [!code-csharp[DataWorks DataTable.MergeMissingSchemaAction#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTable.MergeMissingSchemaAction/CS/source.cs#1)]
 [!code-vb[DataWorks DataTable.MergeMissingSchemaAction#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTable.MergeMissingSchemaAction/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/data/adonet/dataset-datatable-dataview/datatables"><span data-ttu-id="f01f9-931">DataTables</span><span class="sxs-lookup"><span data-stu-id="f01f9-931">DataTables</span></span></related>
        <related type="Article" href="/dotnet/framework/data/adonet/dataset-datatable-dataview/handling-datatable-events"><span data-ttu-id="f01f9-932">处理数据表事件</span><span class="sxs-lookup"><span data-stu-id="f01f9-932">Handling DataTable Events</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="MinimumCapacity">
      <MemberSignature Language="C#" Value="public int MinimumCapacity { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MinimumCapacity" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataTable.MinimumCapacity" />
      <MemberSignature Language="VB.NET" Value="Public Property MinimumCapacity As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MinimumCapacity { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MinimumCapacity : int with get, set" Usage="System.Data.DataTable.MinimumCapacity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(50)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(50)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName Language="C#">[System.Data.DataSysDescription("DataTableMinimumCapacityDescr")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Data.DataSysDescription("DataTableMinimumCapacityDescr")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f01f9-933">获取或设置该表最初的起始大小。</span><span class="sxs-lookup"><span data-stu-id="f01f9-933">Gets or sets the initial starting size for this table.</span></span></summary>
        <value><span data-ttu-id="f01f9-934">该表中行的最初起始大小。</span><span class="sxs-lookup"><span data-stu-id="f01f9-934">The initial starting size in rows of this table.</span></span> <span data-ttu-id="f01f9-935">默认值为 50。</span><span class="sxs-lookup"><span data-stu-id="f01f9-935">The default is 50.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f01f9-936"><xref:System.Data.DataTable.MinimumCapacity%2A>允许系统在提取数据之前创建一组适当的资源。</span><span class="sxs-lookup"><span data-stu-id="f01f9-936">The <xref:System.Data.DataTable.MinimumCapacity%2A> allows the system to create an appropriate set of resources before fetching data.</span></span> <span data-ttu-id="f01f9-937">在性能至关重要的情况下，设置此属性可以优化性能。</span><span class="sxs-lookup"><span data-stu-id="f01f9-937">In a situation when performance is critical, setting this property can optimize performance.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f01f9-938">下面的示例设置的 <xref:System.Data.DataTable.MinimumCapacity%2A> <xref:System.Data.DataTable> 。</span><span class="sxs-lookup"><span data-stu-id="f01f9-938">The following example sets the <xref:System.Data.DataTable.MinimumCapacity%2A> of a <xref:System.Data.DataTable>.</span></span>  
  
 [!code-csharp[Classic WebData DataTable.MinimumCapacity Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable.MinimumCapacity Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable.MinimumCapacity Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable.MinimumCapacity Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/data/adonet/dataset-datatable-dataview/datatables"><span data-ttu-id="f01f9-939">DataTables</span><span class="sxs-lookup"><span data-stu-id="f01f9-939">DataTables</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Namespace">
      <MemberSignature Language="C#" Value="public string Namespace { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Namespace" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataTable.Namespace" />
      <MemberSignature Language="VB.NET" Value="Public Property Namespace As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Namespace { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Namespace : string with get, set" Usage="System.Data.DataTable.Namespace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName Language="C#">[System.Data.DataSysDescription("DataTableNamespaceDescr")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Data.DataSysDescription("DataTableNamespaceDescr")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f01f9-940">获取或设置 <see cref="T:System.Data.DataTable" /> 中所存储数据的 XML 表示形式的命名空间。</span><span class="sxs-lookup"><span data-stu-id="f01f9-940">Gets or sets the namespace for the XML representation of the data stored in the <see cref="T:System.Data.DataTable" />.</span></span></summary>
        <value><span data-ttu-id="f01f9-941"><see cref="T:System.Data.DataTable" /> 的命名空间。</span><span class="sxs-lookup"><span data-stu-id="f01f9-941">The namespace of the <see cref="T:System.Data.DataTable" />.</span></span></value>
        <remarks>To be added.</remarks>
        <related type="Article" href="/dotnet/framework/data/adonet/dataset-datatable-dataview/datatables"><span data-ttu-id="f01f9-942">DataTables</span><span class="sxs-lookup"><span data-stu-id="f01f9-942">DataTables</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="NewRow">
      <MemberSignature Language="C#" Value="public System.Data.DataRow NewRow ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataRow NewRow() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.NewRow" />
      <MemberSignature Language="VB.NET" Value="Public Function NewRow () As DataRow" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::DataRow ^ NewRow();" />
      <MemberSignature Language="F#" Value="member this.NewRow : unit -&gt; System.Data.DataRow" Usage="dataTable.NewRow " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRow</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f01f9-943">创建与该表具有相同架构的新 <see cref="T:System.Data.DataRow" />。</span><span class="sxs-lookup"><span data-stu-id="f01f9-943">Creates a new <see cref="T:System.Data.DataRow" /> with the same schema as the table.</span></span></summary>
        <returns><span data-ttu-id="f01f9-944">与 <see cref="T:System.Data.DataTable" /> 具有相同架构的 <see cref="T:System.Data.DataRow" />。</span><span class="sxs-lookup"><span data-stu-id="f01f9-944">A <see cref="T:System.Data.DataRow" /> with the same schema as the <see cref="T:System.Data.DataTable" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f01f9-945">您必须使用 <xref:System.Data.DataTable.NewRow%2A> 方法来创建新 <xref:System.Data.DataRow> 对象，其架构与相同 <xref:System.Data.DataTable> 。</span><span class="sxs-lookup"><span data-stu-id="f01f9-945">You must use the <xref:System.Data.DataTable.NewRow%2A> method to create new <xref:System.Data.DataRow> objects with the same schema as the <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="f01f9-946">创建后 <xref:System.Data.DataRow> ，可以 <xref:System.Data.DataRowCollection> 通过 <xref:System.Data.DataTable> 对象的属性将其添加到中 <xref:System.Data.DataTable.Rows%2A> 。</span><span class="sxs-lookup"><span data-stu-id="f01f9-946">After creating a <xref:System.Data.DataRow>, you can add it to the <xref:System.Data.DataRowCollection>, through the <xref:System.Data.DataTable> object's <xref:System.Data.DataTable.Rows%2A> property.</span></span> <span data-ttu-id="f01f9-947">使用 <xref:System.Data.DataTable.NewRow%2A> 创建新行时，必须先在数据表中添加或删除行，然后再调用 <xref:System.Data.DataTable.Clear%2A> 。</span><span class="sxs-lookup"><span data-stu-id="f01f9-947">When you use <xref:System.Data.DataTable.NewRow%2A> to create new rows, the rows must be added to or deleted from the data table before you call <xref:System.Data.DataTable.Clear%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f01f9-948">下面的示例创建了 <xref:System.Data.DataTable> ，并添加了两个 <xref:System.Data.DataColumn> 对象来确定表的架构，并使用方法创建了多个新的 <xref:System.Data.DataRow> 对象 <xref:System.Data.DataTable.NewRow%2A> 。</span><span class="sxs-lookup"><span data-stu-id="f01f9-948">The following example creates a <xref:System.Data.DataTable>, adds two <xref:System.Data.DataColumn> objects that determine the table's schema, and creates several new <xref:System.Data.DataRow> objects using the <xref:System.Data.DataTable.NewRow%2A> method.</span></span> <span data-ttu-id="f01f9-949"><xref:System.Data.DataRow>然后，使用方法将这些对象添加到中 <xref:System.Data.DataRowCollection> <xref:System.Data.DataRowCollection.Add%2A> 。</span><span class="sxs-lookup"><span data-stu-id="f01f9-949">Those <xref:System.Data.DataRow> objects are then added to the <xref:System.Data.DataRowCollection> using the <xref:System.Data.DataRowCollection.Add%2A> method.</span></span>  
  
 [!code-csharp[Classic WebData DataTable.NewRow Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable.NewRow Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable.NewRow Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable.NewRow Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/data/adonet/dataset-datatable-dataview/datatables"><span data-ttu-id="f01f9-950">DataTables</span><span class="sxs-lookup"><span data-stu-id="f01f9-950">DataTables</span></span></related>
        <related type="Article" href="/dotnet/framework/data/adonet/dataset-datatable-dataview/handling-datatable-events"><span data-ttu-id="f01f9-951">处理数据表事件</span><span class="sxs-lookup"><span data-stu-id="f01f9-951">Handling DataTable Events</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="NewRowArray">
      <MemberSignature Language="C#" Value="protected internal System.Data.DataRow[] NewRowArray (int size);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance class System.Data.DataRow[] NewRowArray(int32 size) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.NewRowArray(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Function NewRowArray (size As Integer) As DataRow()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; cli::array &lt;System::Data::DataRow ^&gt; ^ NewRowArray(int size);" />
      <MemberSignature Language="F#" Value="member this.NewRowArray : int -&gt; System.Data.DataRow[]" Usage="dataTable.NewRowArray size" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRow[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="size" Type="System.Int32" Index="0" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="size"><span data-ttu-id="f01f9-952">描述数组大小的 <see cref="T:System.Int32" /> 值。</span><span class="sxs-lookup"><span data-stu-id="f01f9-952">A <see cref="T:System.Int32" /> value that describes the size of the array.</span></span></param>
        <summary><span data-ttu-id="f01f9-953">返回 <see cref="T:System.Data.DataRow" /> 的数组。</span><span class="sxs-lookup"><span data-stu-id="f01f9-953">Returns an array of <see cref="T:System.Data.DataRow" />.</span></span></summary>
        <returns><span data-ttu-id="f01f9-954">新数组。</span><span class="sxs-lookup"><span data-stu-id="f01f9-954">The new array.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NewRowFromBuilder">
      <MemberSignature Language="C#" Value="protected virtual System.Data.DataRow NewRowFromBuilder (System.Data.DataRowBuilder builder);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Data.DataRow NewRowFromBuilder(class System.Data.DataRowBuilder builder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.NewRowFromBuilder(System.Data.DataRowBuilder)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function NewRowFromBuilder (builder As DataRowBuilder) As DataRow" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Data::DataRow ^ NewRowFromBuilder(System::Data::DataRowBuilder ^ builder);" />
      <MemberSignature Language="F#" Value="abstract member NewRowFromBuilder : System.Data.DataRowBuilder -&gt; System.Data.DataRow&#xA;override this.NewRowFromBuilder : System.Data.DataRowBuilder -&gt; System.Data.DataRow" Usage="dataTable.NewRowFromBuilder builder" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRow</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder" Type="System.Data.DataRowBuilder" Index="0" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="builder"><span data-ttu-id="f01f9-955"><see cref="T:System.Data.DataRowBuilder" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="f01f9-955">A <see cref="T:System.Data.DataRowBuilder" /> object.</span></span></param>
        <summary><span data-ttu-id="f01f9-956">从现有行创建新行。</span><span class="sxs-lookup"><span data-stu-id="f01f9-956">Creates a new row from an existing row.</span></span></summary>
        <returns><span data-ttu-id="f01f9-957"><see cref="T:System.Data.DataRow" /> 派生类。</span><span class="sxs-lookup"><span data-stu-id="f01f9-957">A <see cref="T:System.Data.DataRow" /> derived class.</span></span></returns>
        <remarks>To be added.</remarks>
        <related type="Article" href="/dotnet/framework/data/adonet/dataset-datatable-dataview/datatables"><span data-ttu-id="f01f9-958">DataTables</span><span class="sxs-lookup"><span data-stu-id="f01f9-958">DataTables</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="OnColumnChanged">
      <MemberSignature Language="C#" Value="protected internal virtual void OnColumnChanged (System.Data.DataColumnChangeEventArgs e);" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnColumnChanged(class System.Data.DataColumnChangeEventArgs e) cil managed" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.OnColumnChanged(System.Data.DataColumnChangeEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnColumnChanged (e As DataColumnChangeEventArgs)" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnColumnChanged(System::Data::DataColumnChangeEventArgs ^ e);" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="abstract member OnColumnChanged : System.Data.DataColumnChangeEventArgs -&gt; unit&#xA;override this.OnColumnChanged : System.Data.DataColumnChangeEventArgs -&gt; unit" Usage="dataTable.OnColumnChanged e" />
      <MemberSignature Language="C#" Value="protected virtual void OnColumnChanged (System.Data.DataColumnChangeEventArgs e);" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnColumnChanged(class System.Data.DataColumnChangeEventArgs e) cil managed" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnColumnChanged (e As DataColumnChangeEventArgs)" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnColumnChanged(System::Data::DataColumnChangeEventArgs ^ e);" FrameworkAlternate="netframework-1.1" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Data.DataColumnChangeEventArgs" Index="0" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="f01f9-959">包含事件数据的 <see cref="T:System.Data.DataColumnChangeEventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="f01f9-959">A <see cref="T:System.Data.DataColumnChangeEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="f01f9-960">引发 <see cref="E:System.Data.DataTable.ColumnChanged" /> 事件。</span><span class="sxs-lookup"><span data-stu-id="f01f9-960">Raises the <see cref="E:System.Data.DataTable.ColumnChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f01f9-961">引发事件时，将通过委托调用事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="f01f9-961">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="f01f9-962">有关概述，请参阅 [处理和引发事件](/dotnet/standard/events/)。</span><span class="sxs-lookup"><span data-stu-id="f01f9-962">For an overview, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="f01f9-963">当 <see cref="M:System.Data.DataTable.OnColumnChanged(System.Data.DataColumnChangeEventArgs)" /> 在派生类中重写时，请确保调用基类的 <see cref="M:System.Data.DataTable.OnColumnChanged(System.Data.DataColumnChangeEventArgs)" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="f01f9-963">When overriding <see cref="M:System.Data.DataTable.OnColumnChanged(System.Data.DataColumnChangeEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Data.DataTable.OnColumnChanged(System.Data.DataColumnChangeEventArgs)" /> method.</span></span></para></block>
        <related type="Article" href="/dotnet/framework/data/adonet/dataset-datatable-dataview/datatables"><span data-ttu-id="f01f9-964">DataTables</span><span class="sxs-lookup"><span data-stu-id="f01f9-964">DataTables</span></span></related>
        <related type="Article" href="/dotnet/framework/data/adonet/dataset-datatable-dataview/handling-datatable-events"><span data-ttu-id="f01f9-965">处理数据表事件</span><span class="sxs-lookup"><span data-stu-id="f01f9-965">Handling DataTable Events</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="OnColumnChanging">
      <MemberSignature Language="C#" Value="protected internal virtual void OnColumnChanging (System.Data.DataColumnChangeEventArgs e);" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnColumnChanging(class System.Data.DataColumnChangeEventArgs e) cil managed" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.OnColumnChanging(System.Data.DataColumnChangeEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnColumnChanging (e As DataColumnChangeEventArgs)" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnColumnChanging(System::Data::DataColumnChangeEventArgs ^ e);" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="abstract member OnColumnChanging : System.Data.DataColumnChangeEventArgs -&gt; unit&#xA;override this.OnColumnChanging : System.Data.DataColumnChangeEventArgs -&gt; unit" Usage="dataTable.OnColumnChanging e" />
      <MemberSignature Language="C#" Value="protected virtual void OnColumnChanging (System.Data.DataColumnChangeEventArgs e);" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnColumnChanging(class System.Data.DataColumnChangeEventArgs e) cil managed" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnColumnChanging (e As DataColumnChangeEventArgs)" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnColumnChanging(System::Data::DataColumnChangeEventArgs ^ e);" FrameworkAlternate="netframework-1.1" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Data.DataColumnChangeEventArgs" Index="0" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="f01f9-966">包含事件数据的 <see cref="T:System.Data.DataColumnChangeEventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="f01f9-966">A <see cref="T:System.Data.DataColumnChangeEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="f01f9-967">引发 <see cref="E:System.Data.DataTable.ColumnChanging" /> 事件。</span><span class="sxs-lookup"><span data-stu-id="f01f9-967">Raises the <see cref="E:System.Data.DataTable.ColumnChanging" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f01f9-968">引发事件时，将通过委托调用事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="f01f9-968">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="f01f9-969">有关概述，请参阅 [处理和引发事件](/dotnet/standard/events/)。</span><span class="sxs-lookup"><span data-stu-id="f01f9-969">For an overview, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="f01f9-970">当 <see cref="M:System.Data.DataTable.OnColumnChanging(System.Data.DataColumnChangeEventArgs)" /> 在派生类中重写时，请确保调用基类的 <see cref="M:System.Data.DataTable.OnColumnChanging(System.Data.DataColumnChangeEventArgs)" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="f01f9-970">When overriding <see cref="M:System.Data.DataTable.OnColumnChanging(System.Data.DataColumnChangeEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Data.DataTable.OnColumnChanging(System.Data.DataColumnChangeEventArgs)" /> method.</span></span></para></block>
        <related type="Article" href="/dotnet/framework/data/adonet/dataset-datatable-dataview/datatables"><span data-ttu-id="f01f9-971">DataTables</span><span class="sxs-lookup"><span data-stu-id="f01f9-971">DataTables</span></span></related>
        <related type="Article" href="/dotnet/framework/data/adonet/dataset-datatable-dataview/handling-datatable-events"><span data-ttu-id="f01f9-972">处理数据表事件</span><span class="sxs-lookup"><span data-stu-id="f01f9-972">Handling DataTable Events</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="OnPropertyChanging">
      <MemberSignature Language="C#" Value="protected virtual void OnPropertyChanging (System.ComponentModel.PropertyChangedEventArgs pcevent);" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPropertyChanging(class System.ComponentModel.PropertyChangedEventArgs pcevent) cil managed" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPropertyChanging (pcevent As PropertyChangedEventArgs)" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPropertyChanging(System::ComponentModel::PropertyChangedEventArgs ^ pcevent);" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="abstract member OnPropertyChanging : System.ComponentModel.PropertyChangedEventArgs -&gt; unit&#xA;override this.OnPropertyChanging : System.ComponentModel.PropertyChangedEventArgs -&gt; unit" Usage="dataTable.OnPropertyChanging pcevent" />
      <MemberSignature Language="C#" Value="protected internal virtual void OnPropertyChanging (System.ComponentModel.PropertyChangedEventArgs pcevent);" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPropertyChanging(class System.ComponentModel.PropertyChangedEventArgs pcevent) cil managed" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPropertyChanging (pcevent As PropertyChangedEventArgs)" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPropertyChanging(System::ComponentModel::PropertyChangedEventArgs ^ pcevent);" FrameworkAlternate="netframework-1.1" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pcevent" Type="System.ComponentModel.PropertyChangedEventArgs" Index="0" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="pcevent"><span data-ttu-id="f01f9-973">包含事件数据的 <see cref="T:System.ComponentModel.PropertyChangedEventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="f01f9-973">A <see cref="T:System.ComponentModel.PropertyChangedEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="f01f9-974">引发 <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" /> 事件。</span><span class="sxs-lookup"><span data-stu-id="f01f9-974">Raises the <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f01f9-975">引发事件时，将通过委托调用事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="f01f9-975">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="f01f9-976">有关概述，请参阅 [处理和引发事件](/dotnet/standard/events/)。</span><span class="sxs-lookup"><span data-stu-id="f01f9-976">For an overview, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="f01f9-977">当 <see cref="M:System.Data.DataTable.OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs)" /> 在派生类中重写时，请确保调用基类的 <see cref="M:System.Data.DataTable.OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs)" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="f01f9-977">When overriding <see cref="M:System.Data.DataTable.OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Data.DataTable.OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs)" /> method.</span></span></para></block>
        <related type="Article" href="/dotnet/framework/data/adonet/dataset-datatable-dataview/datatables"><span data-ttu-id="f01f9-978">DataTables</span><span class="sxs-lookup"><span data-stu-id="f01f9-978">DataTables</span></span></related>
        <related type="Article" href="/dotnet/framework/data/adonet/dataset-datatable-dataview/handling-datatable-events"><span data-ttu-id="f01f9-979">处理数据表事件</span><span class="sxs-lookup"><span data-stu-id="f01f9-979">Handling DataTable Events</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="OnRemoveColumn">
      <MemberSignature Language="C#" Value="protected virtual void OnRemoveColumn (System.Data.DataColumn column);" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRemoveColumn(class System.Data.DataColumn column) cil managed" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.OnRemoveColumn(System.Data.DataColumn)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRemoveColumn (column As DataColumn)" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRemoveColumn(System::Data::DataColumn ^ column);" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="abstract member OnRemoveColumn : System.Data.DataColumn -&gt; unit&#xA;override this.OnRemoveColumn : System.Data.DataColumn -&gt; unit" Usage="dataTable.OnRemoveColumn column" />
      <MemberSignature Language="C#" Value="protected internal virtual void OnRemoveColumn (System.Data.DataColumn column);" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnRemoveColumn(class System.Data.DataColumn column) cil managed" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnRemoveColumn (column As DataColumn)" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnRemoveColumn(System::Data::DataColumn ^ column);" FrameworkAlternate="netframework-1.1" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="column" Type="System.Data.DataColumn" Index="0" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="column"><span data-ttu-id="f01f9-980">正在移除的 <see cref="T:System.Data.DataColumn" />。</span><span class="sxs-lookup"><span data-stu-id="f01f9-980">The <see cref="T:System.Data.DataColumn" /> being removed.</span></span></param>
        <summary><span data-ttu-id="f01f9-981">通知 <see cref="T:System.Data.DataTable" /> 正在移除 <see cref="T:System.Data.DataColumn" />。</span><span class="sxs-lookup"><span data-stu-id="f01f9-981">Notifies the <see cref="T:System.Data.DataTable" /> that a <see cref="T:System.Data.DataColumn" /> is being removed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f01f9-982">引发事件时，将通过委托调用事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="f01f9-982">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="f01f9-983">有关详细信息，请参阅 [处理和引发事件](/dotnet/standard/events/)。</span><span class="sxs-lookup"><span data-stu-id="f01f9-983">For more information, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="f01f9-984">当 <see cref="M:System.Data.DataTable.OnRemoveColumn(System.Data.DataColumn)" /> 在派生类中重写时，请确保调用基类的 <see cref="M:System.Data.DataTable.OnRemoveColumn(System.Data.DataColumn)" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="f01f9-984">When overriding <see cref="M:System.Data.DataTable.OnRemoveColumn(System.Data.DataColumn)" /> in a derived class, be sure to call the base class's <see cref="M:System.Data.DataTable.OnRemoveColumn(System.Data.DataColumn)" /> method.</span></span></para></block>
        <related type="Article" href="/dotnet/framework/data/adonet/dataset-datatable-dataview/datatables"><span data-ttu-id="f01f9-985">DataTables</span><span class="sxs-lookup"><span data-stu-id="f01f9-985">DataTables</span></span></related>
        <related type="Article" href="/dotnet/framework/data/adonet/dataset-datatable-dataview/handling-datatable-events"><span data-ttu-id="f01f9-986">处理数据表事件</span><span class="sxs-lookup"><span data-stu-id="f01f9-986">Handling DataTable Events</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="OnRowChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnRowChanged (System.Data.DataRowChangeEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRowChanged(class System.Data.DataRowChangeEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.OnRowChanged(System.Data.DataRowChangeEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRowChanged (e As DataRowChangeEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRowChanged(System::Data::DataRowChangeEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnRowChanged : System.Data.DataRowChangeEventArgs -&gt; unit&#xA;override this.OnRowChanged : System.Data.DataRowChangeEventArgs -&gt; unit" Usage="dataTable.OnRowChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Data.DataRowChangeEventArgs" Index="0" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="f01f9-987">包含事件数据的 <see cref="T:System.Data.DataRowChangeEventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="f01f9-987">A <see cref="T:System.Data.DataRowChangeEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="f01f9-988">引发 <see cref="E:System.Data.DataTable.RowChanged" /> 事件。</span><span class="sxs-lookup"><span data-stu-id="f01f9-988">Raises the <see cref="E:System.Data.DataTable.RowChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f01f9-989">引发事件时，将通过委托调用事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="f01f9-989">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="f01f9-990">有关概述，请参阅 [处理和引发事件](/dotnet/standard/events/)。</span><span class="sxs-lookup"><span data-stu-id="f01f9-990">For an overview, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="f01f9-991">当 <see cref="M:System.Data.DataTable.OnRowChanged(System.Data.DataRowChangeEventArgs)" /> 在派生类中重写时，请确保调用基类的 <see cref="M:System.Data.DataTable.OnRowChanged(System.Data.DataRowChangeEventArgs)" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="f01f9-991">When overriding <see cref="M:System.Data.DataTable.OnRowChanged(System.Data.DataRowChangeEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Data.DataTable.OnRowChanged(System.Data.DataRowChangeEventArgs)" /> method.</span></span></para></block>
        <related type="Article" href="/dotnet/framework/data/adonet/dataset-datatable-dataview/datatables"><span data-ttu-id="f01f9-992">DataTables</span><span class="sxs-lookup"><span data-stu-id="f01f9-992">DataTables</span></span></related>
        <related type="Article" href="/dotnet/framework/data/adonet/dataset-datatable-dataview/handling-datatable-events"><span data-ttu-id="f01f9-993">处理数据表事件</span><span class="sxs-lookup"><span data-stu-id="f01f9-993">Handling DataTable Events</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="OnRowChanging">
      <MemberSignature Language="C#" Value="protected virtual void OnRowChanging (System.Data.DataRowChangeEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRowChanging(class System.Data.DataRowChangeEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.OnRowChanging(System.Data.DataRowChangeEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRowChanging (e As DataRowChangeEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRowChanging(System::Data::DataRowChangeEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnRowChanging : System.Data.DataRowChangeEventArgs -&gt; unit&#xA;override this.OnRowChanging : System.Data.DataRowChangeEventArgs -&gt; unit" Usage="dataTable.OnRowChanging e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Data.DataRowChangeEventArgs" Index="0" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="f01f9-994">包含事件数据的 <see cref="T:System.Data.DataRowChangeEventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="f01f9-994">A <see cref="T:System.Data.DataRowChangeEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="f01f9-995">引发 <see cref="E:System.Data.DataTable.RowChanging" /> 事件。</span><span class="sxs-lookup"><span data-stu-id="f01f9-995">Raises the <see cref="E:System.Data.DataTable.RowChanging" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f01f9-996">引发事件时，将通过委托调用事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="f01f9-996">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="f01f9-997">有关概述，请参阅 [处理和引发事件](/dotnet/standard/events/)。</span><span class="sxs-lookup"><span data-stu-id="f01f9-997">For an overview, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="f01f9-998">当 <see cref="M:System.Data.DataTable.OnRowChanging(System.Data.DataRowChangeEventArgs)" /> 在派生类中重写时，请确保调用基类的 <see cref="M:System.Data.DataTable.OnRowChanging(System.Data.DataRowChangeEventArgs)" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="f01f9-998">When overriding <see cref="M:System.Data.DataTable.OnRowChanging(System.Data.DataRowChangeEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Data.DataTable.OnRowChanging(System.Data.DataRowChangeEventArgs)" /> method.</span></span></para></block>
        <related type="Article" href="/dotnet/framework/data/adonet/dataset-datatable-dataview/datatables"><span data-ttu-id="f01f9-999">DataTables</span><span class="sxs-lookup"><span data-stu-id="f01f9-999">DataTables</span></span></related>
        <related type="Article" href="/dotnet/framework/data/adonet/dataset-datatable-dataview/handling-datatable-events"><span data-ttu-id="f01f9-1000">处理数据表事件</span><span class="sxs-lookup"><span data-stu-id="f01f9-1000">Handling DataTable Events</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="OnRowDeleted">
      <MemberSignature Language="C#" Value="protected virtual void OnRowDeleted (System.Data.DataRowChangeEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRowDeleted(class System.Data.DataRowChangeEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.OnRowDeleted(System.Data.DataRowChangeEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRowDeleted (e As DataRowChangeEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRowDeleted(System::Data::DataRowChangeEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnRowDeleted : System.Data.DataRowChangeEventArgs -&gt; unit&#xA;override this.OnRowDeleted : System.Data.DataRowChangeEventArgs -&gt; unit" Usage="dataTable.OnRowDeleted e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Data.DataRowChangeEventArgs" Index="0" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="f01f9-1001">包含事件数据的 <see cref="T:System.Data.DataRowChangeEventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1001">A <see cref="T:System.Data.DataRowChangeEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="f01f9-1002">引发 <see cref="E:System.Data.DataTable.RowDeleted" /> 事件。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1002">Raises the <see cref="E:System.Data.DataTable.RowDeleted" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f01f9-1003">引发事件时，将通过委托调用事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1003">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="f01f9-1004">有关概述，请参阅 [处理和引发事件](/dotnet/standard/events/)。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1004">For an overview, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="f01f9-1005">当 <see cref="M:System.Data.DataTable.OnRowDeleted(System.Data.DataRowChangeEventArgs)" /> 在派生类中重写时，请确保调用基类的 <see cref="M:System.Data.DataTable.OnRowDeleted(System.Data.DataRowChangeEventArgs)" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1005">When overriding <see cref="M:System.Data.DataTable.OnRowDeleted(System.Data.DataRowChangeEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Data.DataTable.OnRowDeleted(System.Data.DataRowChangeEventArgs)" /> method.</span></span></para></block>
        <related type="Article" href="/dotnet/framework/data/adonet/dataset-datatable-dataview/datatables"><span data-ttu-id="f01f9-1006">DataTables</span><span class="sxs-lookup"><span data-stu-id="f01f9-1006">DataTables</span></span></related>
        <related type="Article" href="/dotnet/framework/data/adonet/dataset-datatable-dataview/handling-datatable-events"><span data-ttu-id="f01f9-1007">处理数据表事件</span><span class="sxs-lookup"><span data-stu-id="f01f9-1007">Handling DataTable Events</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="OnRowDeleting">
      <MemberSignature Language="C#" Value="protected virtual void OnRowDeleting (System.Data.DataRowChangeEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRowDeleting(class System.Data.DataRowChangeEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.OnRowDeleting(System.Data.DataRowChangeEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRowDeleting (e As DataRowChangeEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRowDeleting(System::Data::DataRowChangeEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnRowDeleting : System.Data.DataRowChangeEventArgs -&gt; unit&#xA;override this.OnRowDeleting : System.Data.DataRowChangeEventArgs -&gt; unit" Usage="dataTable.OnRowDeleting e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Data.DataRowChangeEventArgs" Index="0" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="f01f9-1008">包含事件数据的 <see cref="T:System.Data.DataRowChangeEventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1008">A <see cref="T:System.Data.DataRowChangeEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="f01f9-1009">引发 <see cref="E:System.Data.DataTable.RowDeleting" /> 事件。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1009">Raises the <see cref="E:System.Data.DataTable.RowDeleting" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f01f9-1010">引发事件时，将通过委托调用事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1010">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="f01f9-1011">有关概述，请参阅 [处理和引发事件](/dotnet/standard/events/)。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1011">For an overview, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="f01f9-1012">当 <see cref="M:System.Data.DataTable.OnRowDeleting(System.Data.DataRowChangeEventArgs)" /> 在派生类中重写时，请确保调用基类的 <see cref="M:System.Data.DataTable.OnRowDeleting(System.Data.DataRowChangeEventArgs)" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1012">When overriding <see cref="M:System.Data.DataTable.OnRowDeleting(System.Data.DataRowChangeEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Data.DataTable.OnRowDeleting(System.Data.DataRowChangeEventArgs)" /> method.</span></span></para></block>
        <related type="Article" href="/dotnet/framework/data/adonet/dataset-datatable-dataview/datatables"><span data-ttu-id="f01f9-1013">DataTables</span><span class="sxs-lookup"><span data-stu-id="f01f9-1013">DataTables</span></span></related>
        <related type="Article" href="/dotnet/framework/data/adonet/dataset-datatable-dataview/handling-datatable-events"><span data-ttu-id="f01f9-1014">处理数据表事件</span><span class="sxs-lookup"><span data-stu-id="f01f9-1014">Handling DataTable Events</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="OnTableCleared">
      <MemberSignature Language="C#" Value="protected virtual void OnTableCleared (System.Data.DataTableClearEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnTableCleared(class System.Data.DataTableClearEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.OnTableCleared(System.Data.DataTableClearEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnTableCleared (e As DataTableClearEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnTableCleared(System::Data::DataTableClearEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnTableCleared : System.Data.DataTableClearEventArgs -&gt; unit&#xA;override this.OnTableCleared : System.Data.DataTableClearEventArgs -&gt; unit" Usage="dataTable.OnTableCleared e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Data.DataTableClearEventArgs" Index="0" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="f01f9-1015">包含事件数据的 <see cref="T:System.Data.DataTableClearEventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1015">A <see cref="T:System.Data.DataTableClearEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="f01f9-1016">引发 <see cref="E:System.Data.DataTable.TableCleared" /> 事件。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1016">Raises the <see cref="E:System.Data.DataTable.TableCleared" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f01f9-1017">引发 <xref:System.Data.DataTable.TableCleared> 事件，该事件在成功清除所有行之后但在 <xref:System.Data.DataTable.Clear%2A> 方法将控制权返回给调用方之前立即触发。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1017">Raises the <xref:System.Data.DataTable.TableCleared> event, which is fired immediately after all rows have been successfully cleared but before the <xref:System.Data.DataTable.Clear%2A> method returns control back to the caller.</span></span>  
  
 <span data-ttu-id="f01f9-1018">引发事件时，将通过委托调用事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1018">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="f01f9-1019">有关概述，请参阅 [处理和引发事件](/dotnet/standard/events/)。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1019">For an overview, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/data/adonet/dataset-datatable-dataview/datatables"><span data-ttu-id="f01f9-1020">DataTables</span><span class="sxs-lookup"><span data-stu-id="f01f9-1020">DataTables</span></span></related>
        <related type="Article" href="/dotnet/framework/data/adonet/dataset-datatable-dataview/handling-datatable-events"><span data-ttu-id="f01f9-1021">处理数据表事件</span><span class="sxs-lookup"><span data-stu-id="f01f9-1021">Handling DataTable Events</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="OnTableClearing">
      <MemberSignature Language="C#" Value="protected virtual void OnTableClearing (System.Data.DataTableClearEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnTableClearing(class System.Data.DataTableClearEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.OnTableClearing(System.Data.DataTableClearEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnTableClearing (e As DataTableClearEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnTableClearing(System::Data::DataTableClearEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnTableClearing : System.Data.DataTableClearEventArgs -&gt; unit&#xA;override this.OnTableClearing : System.Data.DataTableClearEventArgs -&gt; unit" Usage="dataTable.OnTableClearing e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Data.DataTableClearEventArgs" Index="0" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="f01f9-1022">包含事件数据的 <see cref="T:System.Data.DataTableClearEventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1022">A <see cref="T:System.Data.DataTableClearEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="f01f9-1023">引发 <see cref="E:System.Data.DataTable.TableClearing" /> 事件。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1023">Raises the <see cref="E:System.Data.DataTable.TableClearing" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f01f9-1024">引发 <xref:System.Data.DataTable.TableClearing> 事件，该事件在处理操作开始之前激发 <xref:System.Data.DataTable.Clear%2A> 。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1024">Raises the <xref:System.Data.DataTable.TableClearing> event, which is fired before processing of the <xref:System.Data.DataTable.Clear%2A> operation begins.</span></span>  
  
 <span data-ttu-id="f01f9-1025">引发事件时，将通过委托调用事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1025">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="f01f9-1026">有关概述，请参阅 [处理和引发事件](/dotnet/standard/events/)。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1026">For an overview, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/data/adonet/dataset-datatable-dataview/datatables"><span data-ttu-id="f01f9-1027">DataTables</span><span class="sxs-lookup"><span data-stu-id="f01f9-1027">DataTables</span></span></related>
        <related type="Article" href="/dotnet/framework/data/adonet/dataset-datatable-dataview/handling-datatable-events"><span data-ttu-id="f01f9-1028">处理数据表事件</span><span class="sxs-lookup"><span data-stu-id="f01f9-1028">Handling DataTable Events</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="OnTableNewRow">
      <MemberSignature Language="C#" Value="protected virtual void OnTableNewRow (System.Data.DataTableNewRowEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnTableNewRow(class System.Data.DataTableNewRowEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.OnTableNewRow(System.Data.DataTableNewRowEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnTableNewRow (e As DataTableNewRowEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnTableNewRow(System::Data::DataTableNewRowEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnTableNewRow : System.Data.DataTableNewRowEventArgs -&gt; unit&#xA;override this.OnTableNewRow : System.Data.DataTableNewRowEventArgs -&gt; unit" Usage="dataTable.OnTableNewRow e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Data.DataTableNewRowEventArgs" Index="0" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="f01f9-1029">包含事件数据的 <see cref="T:System.Data.DataTableNewRowEventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1029">A <see cref="T:System.Data.DataTableNewRowEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="f01f9-1030">引发 <see cref="E:System.Data.DataTable.TableNewRow" /> 事件。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1030">Raises the <see cref="E:System.Data.DataTable.TableNewRow" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f01f9-1031">引发 <xref:System.Data.DataTable.TableNewRow> 事件，该事件在使用创建新的后激发 <xref:System.Data.DataRow> <xref:System.Data.DataTable.NewRow%2A> 。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1031">Raises the <xref:System.Data.DataTable.TableNewRow> event, which fires after a new <xref:System.Data.DataRow> has been created using <xref:System.Data.DataTable.NewRow%2A>.</span></span>  
  
 <span data-ttu-id="f01f9-1032">引发事件时，将通过委托调用事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1032">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="f01f9-1033">有关概述，请参阅 [处理和引发事件](/dotnet/standard/events/)。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1033">For an overview, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/data/adonet/dataset-datatable-dataview/datatables"><span data-ttu-id="f01f9-1034">DataTables</span><span class="sxs-lookup"><span data-stu-id="f01f9-1034">DataTables</span></span></related>
        <related type="Article" href="/dotnet/framework/data/adonet/dataset-datatable-dataview/handling-datatable-events"><span data-ttu-id="f01f9-1035">处理数据表事件</span><span class="sxs-lookup"><span data-stu-id="f01f9-1035">Handling DataTable Events</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ParentRelations">
      <MemberSignature Language="C#" Value="public System.Data.DataRelationCollection ParentRelations { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.DataRelationCollection ParentRelations" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataTable.ParentRelations" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ParentRelations As DataRelationCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::DataRelationCollection ^ ParentRelations { System::Data::DataRelationCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ParentRelations : System.Data.DataRelationCollection" Usage="System.Data.DataTable.ParentRelations" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName Language="C#">[System.Data.DataSysDescription("DataTableParentRelationsDescr")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Data.DataSysDescription("DataTableParentRelationsDescr")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.DataRelationCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f01f9-1036">获取该 <see cref="T:System.Data.DataTable" /> 的父关系的集合。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1036">Gets the collection of parent relations for this <see cref="T:System.Data.DataTable" />.</span></span></summary>
        <value><span data-ttu-id="f01f9-1037">一个 <see cref="T:System.Data.DataRelationCollection" />，包含该表的父关系。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1037">A <see cref="T:System.Data.DataRelationCollection" /> that contains the parent relations for the table.</span></span> <span data-ttu-id="f01f9-1038">如果 <see cref="T:System.Data.DataRelation" /> 对象不存在，将返回空集合。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1038">An empty collection is returned if no <see cref="T:System.Data.DataRelation" /> objects exist.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f01f9-1039">下面的示例使用 <xref:System.Data.DataTable.ParentRelations%2A> 属性返回中的每个父级 <xref:System.Data.DataRelation> <xref:System.Data.DataTable> 。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1039">The following example uses the <xref:System.Data.DataTable.ParentRelations%2A> property to return each parent <xref:System.Data.DataRelation> in a <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="f01f9-1040">然后，每个关系在的方法中用作参数 <xref:System.Data.DataRow.GetParentRows%2A> <xref:System.Data.DataRow> 以返回行的数组。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1040">Each relation is then used as an argument in the <xref:System.Data.DataRow.GetParentRows%2A> method of the <xref:System.Data.DataRow> to return an array of rows.</span></span> <span data-ttu-id="f01f9-1041">然后打印该行中每列的值。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1041">The value of each column in the row is then printed.</span></span>  
  
 [!code-csharp[Classic WebData DataTable.ParentRelations Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable.ParentRelations Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable.ParentRelations Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable.ParentRelations Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Data.DataTable.ChildRelations" />
        <altmember cref="T:System.Data.DataRelation" />
        <altmember cref="T:System.Data.DataSet" />
        <altmember cref="P:System.Data.DataSet.Relations" />
        <related type="Article" href="/dotnet/framework/data/adonet/dataset-datatable-dataview/datatables"><span data-ttu-id="f01f9-1042">DataTables</span><span class="sxs-lookup"><span data-stu-id="f01f9-1042">DataTables</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Prefix">
      <MemberSignature Language="C#" Value="public string Prefix { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Prefix" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataTable.Prefix" />
      <MemberSignature Language="VB.NET" Value="Public Property Prefix As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Prefix { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Prefix : string with get, set" Usage="System.Data.DataTable.Prefix" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue("")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue("")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName Language="C#">[System.Data.DataSysDescription("DataTablePrefixDescr")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Data.DataSysDescription("DataTablePrefixDescr")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f01f9-1043">获取或设置 <see cref="T:System.Data.DataTable" /> 中所存储数据的 XML 表示形式的命名空间。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1043">Gets or sets the namespace for the XML representation of the data stored in the <see cref="T:System.Data.DataTable" />.</span></span></summary>
        <value><span data-ttu-id="f01f9-1044"><see cref="T:System.Data.DataTable" /> 的前缀。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1044">The prefix of the <see cref="T:System.Data.DataTable" />.</span></span></value>
        <remarks>To be added.</remarks>
        <related type="Article" href="/dotnet/framework/data/adonet/dataset-datatable-dataview/datatables"><span data-ttu-id="f01f9-1045">DataTables</span><span class="sxs-lookup"><span data-stu-id="f01f9-1045">DataTables</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="PrimaryKey">
      <MemberSignature Language="C#" Value="public System.Data.DataColumn[] PrimaryKey { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.DataColumn[] PrimaryKey" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataTable.PrimaryKey" />
      <MemberSignature Language="VB.NET" Value="Public Property PrimaryKey As DataColumn()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Data::DataColumn ^&gt; ^ PrimaryKey { cli::array &lt;System::Data::DataColumn ^&gt; ^ get(); void set(cli::array &lt;System::Data::DataColumn ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PrimaryKey : System.Data.DataColumn[] with get, set" Usage="System.Data.DataTable.PrimaryKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName Language="C#">[System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.PrimaryKeyEditor, Microsoft.VSDesigner, Version=7.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.PrimaryKeyEditor, Microsoft.VSDesigner, Version=7.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.ComponentModel.TypeConverter(typeof(System.Data.PrimaryKeyTypeConverter))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.TypeConverter(typeof(System.Data.PrimaryKeyTypeConverter))&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName Language="C#">[System.Data.DataSysDescription("DataTablePrimaryKeyDescr")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Data.DataSysDescription("DataTablePrimaryKeyDescr")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName Language="C#">[System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.PrimaryKeyEditor, Microsoft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.PrimaryKeyEditor, Microsoft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.PrimaryKeyEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.PrimaryKeyEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8">
          <AttributeName Language="C#">[System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.PrimaryKeyEditor, Microsoft.VSDesigner, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=2.0.5.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.PrimaryKeyEditor, Microsoft.VSDesigner, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=2.0.5.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName Language="C#">[System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.PrimaryKeyEditor, Microsoft.VSDesigner, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.PrimaryKeyEditor, Microsoft.VSDesigner, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.DataColumn[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f01f9-1046">获取或设置用作数据表主键的列数组。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1046">Gets or sets an array of columns that function as primary keys for the data table.</span></span></summary>
        <value><span data-ttu-id="f01f9-1047">一个 <see cref="T:System.Data.DataColumn" /> 对象数组。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1047">An array of <see cref="T:System.Data.DataColumn" /> objects.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f01f9-1048">表的主键必须唯一，以标识表中的记录。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1048">The primary key of a table must be unique to identify the record in the table.</span></span> <span data-ttu-id="f01f9-1049">还可以有一个表，其中的主键由两列或更多列组成。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1049">It's also possible to have a table with a primary key made up of two or more columns.</span></span> <span data-ttu-id="f01f9-1050">当单列不能包含足够的唯一值时，会发生这种情况。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1050">This occurs when a single column can't contain enough unique values.</span></span> <span data-ttu-id="f01f9-1051">例如，两个列的主键可能由 "OrderNumber" 和 "ProductID" 列组成。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1051">For example, a two column primary key might consist of an "OrderNumber" and "ProductID" column.</span></span> <span data-ttu-id="f01f9-1052">因为主键可以由多个列组成，所以 <xref:System.Data.DataTable.PrimaryKey%2A> 属性由一个对象数组组成 <xref:System.Data.DataColumn> 。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1052">Because primary keys can be made up of more than one column, the <xref:System.Data.DataTable.PrimaryKey%2A> property consists of an array of <xref:System.Data.DataColumn> objects.</span></span>  
  
## Examples  
 <span data-ttu-id="f01f9-1053">第一个示例演示如何返回中显示的的主键列 <xref:System.Data.DataTable> `DataGrid` 。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1053">The first example shows how to return the primary key columns for a <xref:System.Data.DataTable> displayed in a `DataGrid`.</span></span> <span data-ttu-id="f01f9-1054">第二个示例演示如何设置的主键列 <xref:System.Data.DataTable> 。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1054">The second example demonstrates how to set the primary key columns for a <xref:System.Data.DataTable>.</span></span>  
  
 [!code-csharp[Classic WebData DataTable.PrimaryKey Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable.PrimaryKey Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable.PrimaryKey Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable.PrimaryKey Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Data.DataException"><span data-ttu-id="f01f9-1055">该键是外键。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1055">The key is a foreign key.</span></span></exception>
        <altmember cref="T:System.Data.DataColumn" />
        <altmember cref="P:System.Data.DataTable.PrimaryKey" />
        <altmember cref="T:System.Data.DataColumnCollection" />
        <related type="Article" href="/dotnet/framework/data/adonet/dataset-datatable-dataview/datatables"><span data-ttu-id="f01f9-1056">DataTables</span><span class="sxs-lookup"><span data-stu-id="f01f9-1056">DataTables</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="ReadXml">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f01f9-1057">将 XML 架构和数据读入 <see cref="T:System.Data.DataTable" />。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1057">Reads XML schema and data into the <see cref="T:System.Data.DataTable" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f01f9-1058"><xref:System.Data.DataTable.ReadXml%2A>方法提供了一种方法，用于从 XML 文档只读取数据或将数据和架构读入到 <xref:System.Data.DataTable> 中，而 <xref:System.Data.DataTable.ReadXmlSchema%2A> 方法只读取架构。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1058">The <xref:System.Data.DataTable.ReadXml%2A> method provides a way to read either data only, or both data and schema into a <xref:System.Data.DataTable> from an XML document, whereas the <xref:System.Data.DataTable.ReadXmlSchema%2A> method reads only the schema.</span></span> <span data-ttu-id="f01f9-1059">若要读取数据和架构，请使用 `ReadXML` 包含参数的重载之一 `XmlReadMode` ，并将其值设置为 `ReadSchema` 。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1059">To read both data and schema, use one of the `ReadXML` overloads that include the `XmlReadMode` parameter, and set its value to `ReadSchema`.</span></span>  
  
 <span data-ttu-id="f01f9-1060">请注意，对于和方法也是 <xref:System.Data.DataTable.WriteXml%2A> 如此 <xref:System.Data.DataTable.WriteXmlSchema%2A> 。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1060">Note that the same is true for the <xref:System.Data.DataTable.WriteXml%2A> and <xref:System.Data.DataTable.WriteXmlSchema%2A> methods, respectively.</span></span> <span data-ttu-id="f01f9-1061">若要从编写 XML 数据或同时编写架构和数据 `DataTable` ，请使用 `WriteXml` 方法。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1061">To write XML data, or both schema and data from the `DataTable`, use the `WriteXml` method.</span></span> <span data-ttu-id="f01f9-1062">若要只写入架构，请使用 `WriteXmlSchema` 方法。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1062">To write just the schema, use the `WriteXmlSchema` method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f01f9-1063"><xref:System.InvalidOperationException>如果在中 `DataRow` 读取或写入的列类型实现 <xref:System.Dynamic.IDynamicMetaObjectProvider> 且不实现，则将引发 <xref:System.Xml.Serialization.IXmlSerializable> 。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1063">An <xref:System.InvalidOperationException> will be thrown if a column type in the `DataRow` being read from or written to implements <xref:System.Dynamic.IDynamicMetaObjectProvider> and does not implement <xref:System.Xml.Serialization.IXmlSerializable>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Data.DataSet.ReadXml" />
        <related type="Article" href="/dotnet/framework/data/adonet/dataset-datatable-dataview/datatables"><span data-ttu-id="f01f9-1064">DataTables</span><span class="sxs-lookup"><span data-stu-id="f01f9-1064">DataTables</span></span></related>
      </Docs>
    </MemberGroup>
    <Member MemberName="ReadXml">
      <MemberSignature Language="C#" Value="public System.Data.XmlReadMode ReadXml (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Data.XmlReadMode ReadXml(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.ReadXml(System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Function ReadXml (stream As Stream) As XmlReadMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::XmlReadMode ReadXml(System::IO::Stream ^ stream);" />
      <MemberSignature Language="F#" Value="member this.ReadXml : System.IO.Stream -&gt; System.Data.XmlReadMode" Usage="dataTable.ReadXml stream" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.XmlReadMode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" Index="0" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="stream"><span data-ttu-id="f01f9-1065">从 <see cref="T:System.IO.Stream" /> 派生的对象</span><span class="sxs-lookup"><span data-stu-id="f01f9-1065">An object that derives from <see cref="T:System.IO.Stream" /></span></span></param>
        <summary><span data-ttu-id="f01f9-1066">使用指定的 <see cref="T:System.IO.Stream" /> 将 XML 架构和数据读入 <see cref="T:System.Data.DataTable" />。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1066">Reads XML schema and data into the <see cref="T:System.Data.DataTable" /> using the specified <see cref="T:System.IO.Stream" />.</span></span></summary>
        <returns><span data-ttu-id="f01f9-1067">用于读取数据的 <see cref="T:System.Data.XmlReadMode" />。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1067">The <see cref="T:System.Data.XmlReadMode" /> used to read the data.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f01f9-1068">当前 <xref:System.Data.DataTable> 及其子代与提供的中的数据一起加载 <xref:System.IO.Stream> 。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1068">The current <xref:System.Data.DataTable> and its descendents are loaded with the data from the supplied <xref:System.IO.Stream>.</span></span> <span data-ttu-id="f01f9-1069">此方法的行为与方法的行为相同 <xref:System.Data.DataSet.ReadXml%2A?displayProperty=nameWithType> ，不同之处在于，在这种情况下，只会为当前表及其子代加载数据。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1069">The behavior of this method is identical to that of the <xref:System.Data.DataSet.ReadXml%2A?displayProperty=nameWithType> method, except that in this case, data is loaded only for the current table and its descendants.</span></span>  
  
 <span data-ttu-id="f01f9-1070"><xref:System.Data.DataTable.ReadXml%2A>方法提供了一种方法，用于从 XML 文档只读取数据或将数据和架构读入到 <xref:System.Data.DataTable> 中，而 <xref:System.Data.DataTable.ReadXmlSchema%2A> 方法只读取架构。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1070">The <xref:System.Data.DataTable.ReadXml%2A> method provides a way to read either data only, or both data and schema into a <xref:System.Data.DataTable> from an XML document, whereas the <xref:System.Data.DataTable.ReadXmlSchema%2A> method reads only the schema.</span></span>  
  
 <span data-ttu-id="f01f9-1071">请注意，对于和方法也是 <xref:System.Data.DataTable.WriteXml%2A> 如此 <xref:System.Data.DataTable.WriteXmlSchema%2A> 。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1071">Note that the same is true for the <xref:System.Data.DataTable.WriteXml%2A> and <xref:System.Data.DataTable.WriteXmlSchema%2A> methods, respectively.</span></span> <span data-ttu-id="f01f9-1072">若要从编写 XML 数据或同时编写架构和数据 `DataTable` ，请使用 `WriteXml` 方法。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1072">To write XML data, or both schema and data from the `DataTable`, use the `WriteXml` method.</span></span> <span data-ttu-id="f01f9-1073">若要只写入架构，请使用 `WriteXmlSchema` 方法。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1073">To write just the schema, use the `WriteXmlSchema` method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f01f9-1074"><xref:System.InvalidOperationException>如果在中 `DataRow` 读取或写入的列类型实现 <xref:System.Dynamic.IDynamicMetaObjectProvider> 且不实现，则将引发 <xref:System.Xml.Serialization.IXmlSerializable> 。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1074">An <xref:System.InvalidOperationException> will be thrown if a column type in the `DataRow` being read from or written to implements <xref:System.Dynamic.IDynamicMetaObjectProvider> and does not implement <xref:System.Xml.Serialization.IXmlSerializable>.</span></span>  
  
 <span data-ttu-id="f01f9-1075">如果指定了内嵌架构，则在加载数据之前，使用内联架构来扩展现有的关系结构。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1075">If an in-line schema is specified, the in-line schema is used to extend the existing relational structure prior to loading the data.</span></span> <span data-ttu-id="f01f9-1076">例如，如果存在任何冲突 (例如，使用不同数据类型定义的同一表中的同一列) 会引发异常。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1076">If there are any conflicts (for example, the same column in the same table defined with different data types) an exception is raised.</span></span>  
  
 <span data-ttu-id="f01f9-1077">如果未指定内联架构，根据 XML 文档的结构，将根据需要通过推理扩展关系结构。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1077">If no in-line schema is specified, the relational structure is extended through inference, as necessary, according to the structure of the XML document.</span></span> <span data-ttu-id="f01f9-1078">如果无法通过推理扩展架构以便公开所有数据，则会引发异常。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1078">If the schema cannot be extended through inference in order to expose all data, an exception is raised.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f01f9-1079">在 `DataSet` `DataColumn` `DataTable` 序列化的 XML 中转义 xml 元素（如 ( "_" ) ）时，不会将该元素与相应的或关联。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1079">The `DataSet` does not associate an XML element with its corresponding `DataColumn` or `DataTable` when legal XML characters like ("_") are escaped in the serialized XML.</span></span> <span data-ttu-id="f01f9-1080">`DataSet`本身只是转义 xml 元素名称中的非法 XML 字符，因此只能使用同一个。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1080">The `DataSet` itself only escapes illegal XML characters in XML element names and hence can only consume the same.</span></span> <span data-ttu-id="f01f9-1081">当转义 XML 元素名称中的法律字符时，将在处理时忽略元素。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1081">When legal characters in XML element name are escaped, the element is ignored while processing.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f01f9-1082">下面的示例创建一个 <xref:System.Data.DataTable> 包含两列和10行的。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1082">The following example creates a <xref:System.Data.DataTable> containing two columns and ten rows.</span></span> <span data-ttu-id="f01f9-1083">该示例 <xref:System.Data.DataTable> 通过调用方法将架构和数据写入内存流 <xref:System.Data.DataTable.WriteXml%2A> 。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1083">The example writes the <xref:System.Data.DataTable> schema and data to a memory stream, by invoking the <xref:System.Data.DataTable.WriteXml%2A> method.</span></span> <span data-ttu-id="f01f9-1084">该示例创建了第二个 <xref:System.Data.DataTable> ，并调用 <xref:System.Data.DataTable.ReadXml%2A> 方法以使用架构和数据对其进行填充。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1084">The example creates a second <xref:System.Data.DataTable> and calls the <xref:System.Data.DataTable.ReadXml%2A> method to fill it with schema and data.</span></span>  
  
 [!code-csharp[DataWorks DataTable.ReadXml#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTable.ReadXml/CS/source.cs#1)]
 [!code-vb[DataWorks DataTable.ReadXml#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTable.ReadXml/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/data/adonet/dataset-datatable-dataview/datatables"><span data-ttu-id="f01f9-1085">DataTables</span><span class="sxs-lookup"><span data-stu-id="f01f9-1085">DataTables</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ReadXml">
      <MemberSignature Language="C#" Value="public System.Data.XmlReadMode ReadXml (System.IO.TextReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Data.XmlReadMode ReadXml(class System.IO.TextReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.ReadXml(System.IO.TextReader)" />
      <MemberSignature Language="VB.NET" Value="Public Function ReadXml (reader As TextReader) As XmlReadMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::XmlReadMode ReadXml(System::IO::TextReader ^ reader);" />
      <MemberSignature Language="F#" Value="member this.ReadXml : System.IO.TextReader -&gt; System.Data.XmlReadMode" Usage="dataTable.ReadXml reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.XmlReadMode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.IO.TextReader" Index="0" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="f01f9-1086">将用于读取数据的 <see cref="T:System.IO.TextReader" />。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1086">The <see cref="T:System.IO.TextReader" /> that will be used to read the data.</span></span></param>
        <summary><span data-ttu-id="f01f9-1087">使用指定的 <see cref="T:System.IO.TextReader" /> 将 XML 架构和数据读入 <see cref="T:System.Data.DataTable" />。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1087">Reads XML schema and data into the <see cref="T:System.Data.DataTable" /> using the specified <see cref="T:System.IO.TextReader" />.</span></span></summary>
        <returns><span data-ttu-id="f01f9-1088">用于读取数据的 <see cref="T:System.Data.XmlReadMode" />。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1088">The <see cref="T:System.Data.XmlReadMode" /> used to read the data.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f01f9-1089">当前 <xref:System.Data.DataTable> 及其子代与提供的中的数据一起加载 <xref:System.IO.TextReader> 。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1089">The current <xref:System.Data.DataTable> and its descendents are loaded with the data from the supplied <xref:System.IO.TextReader>.</span></span> <span data-ttu-id="f01f9-1090">此方法的行为与方法的行为相同 <xref:System.Data.DataSet.ReadXml%2A?displayProperty=nameWithType> ，不同之处在于，在这种情况下，只会为当前表及其子代加载数据。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1090">The behavior of this method is identical to that of the <xref:System.Data.DataSet.ReadXml%2A?displayProperty=nameWithType> method, except that in this case, data is loaded only for the current table and its descendants.</span></span>  
  
 <span data-ttu-id="f01f9-1091"><xref:System.Data.DataTable.ReadXml%2A>方法提供了一种方法，用于从 XML 文档只读取数据或将数据和架构读入到 <xref:System.Data.DataTable> 中，而 <xref:System.Data.DataTable.ReadXmlSchema%2A> 方法只读取架构。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1091">The <xref:System.Data.DataTable.ReadXml%2A> method provides a way to read either data only, or both data and schema into a <xref:System.Data.DataTable> from an XML document, whereas the <xref:System.Data.DataTable.ReadXmlSchema%2A> method reads only the schema.</span></span>  
  
 <span data-ttu-id="f01f9-1092">请注意，对于和方法也是 <xref:System.Data.DataTable.WriteXml%2A> 如此 <xref:System.Data.DataTable.WriteXmlSchema%2A> 。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1092">Note that the same is true for the <xref:System.Data.DataTable.WriteXml%2A> and <xref:System.Data.DataTable.WriteXmlSchema%2A> methods, respectively.</span></span> <span data-ttu-id="f01f9-1093">若要从编写 XML 数据或同时编写架构和数据 `DataTable` ，请使用 `WriteXml` 方法。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1093">To write XML data, or both schema and data from the `DataTable`, use the `WriteXml` method.</span></span> <span data-ttu-id="f01f9-1094">若要只写入架构，请使用 `WriteXmlSchema` 方法。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1094">To write just the schema, use the `WriteXmlSchema` method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f01f9-1095"><xref:System.InvalidOperationException>如果在中 `DataRow` 读取或写入的列类型实现 <xref:System.Dynamic.IDynamicMetaObjectProvider> 且不实现，则将引发 <xref:System.Xml.Serialization.IXmlSerializable> 。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1095">An <xref:System.InvalidOperationException> will be thrown if a column type in the `DataRow` being read from or written to implements <xref:System.Dynamic.IDynamicMetaObjectProvider> and does not implement <xref:System.Xml.Serialization.IXmlSerializable>.</span></span>  
  
 <span data-ttu-id="f01f9-1096">如果指定了内嵌架构，则在加载数据之前，使用内联架构来扩展现有的关系结构。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1096">If an in-line schema is specified, the in-line schema is used to extend the existing relational structure prior to loading the data.</span></span> <span data-ttu-id="f01f9-1097">例如，如果存在任何冲突 (例如，使用不同数据类型定义的同一表中的同一列) 会引发异常。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1097">If there are any conflicts (for example, the same column in the same table defined with different data types) an exception is raised.</span></span>  
  
 <span data-ttu-id="f01f9-1098">如果未指定内联架构，根据 XML 文档的结构，将根据需要通过推理扩展关系结构。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1098">If no in-line schema is specified, the relational structure is extended through inference, as necessary, according to the structure of the XML document.</span></span> <span data-ttu-id="f01f9-1099">如果无法通过推理扩展架构以便公开所有数据，则会引发异常。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1099">If the schema cannot be extended through inference in order to expose all data, an exception is raised.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f01f9-1100">在 `DataSet` `DataColumn` `DataTable` 序列化的 XML 中转义 xml 元素（如 ( "_" ) ）时，不会将该元素与相应的或关联。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1100">The `DataSet` does not associate an XML element with its corresponding `DataColumn` or `DataTable` when legal XML characters like ("_") are escaped in the serialized XML.</span></span> <span data-ttu-id="f01f9-1101">`DataSet`本身只是转义 xml 元素名称中的非法 XML 字符，因此只能使用同一个。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1101">The `DataSet` itself only escapes illegal XML characters in XML element names and hence can only consume the same.</span></span> <span data-ttu-id="f01f9-1102">当转义 XML 元素名称中的法律字符时，将在处理时忽略元素。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1102">When legal characters in XML element name are escaped, the element is ignored while processing.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f01f9-1103">下面的示例创建一个 <xref:System.Data.DataTable> 包含两列和10行的。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1103">The following example creates a <xref:System.Data.DataTable> containing two columns and ten rows.</span></span> <span data-ttu-id="f01f9-1104">该示例 <xref:System.Data.DataTable> 通过调用方法将架构和数据写入内存流 <xref:System.Data.DataTable.WriteXml%2A> 。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1104">The example writes the <xref:System.Data.DataTable> schema and data to a memory stream, by invoking the <xref:System.Data.DataTable.WriteXml%2A> method.</span></span> <span data-ttu-id="f01f9-1105">该示例创建了第二个 <xref:System.Data.DataTable> ，并调用 <xref:System.Data.DataTable.ReadXml%2A> 方法以使用架构和数据对其进行填充。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1105">The example creates a second <xref:System.Data.DataTable> and calls the <xref:System.Data.DataTable.ReadXml%2A> method to fill it with schema and data.</span></span>  
  
 [!code-csharp[DataWorks DataTable.ReadXmlText#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTable.ReadXmlText/CS/source.cs#1)]
 [!code-vb[DataWorks DataTable.ReadXmlText#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTable.ReadXmlText/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/data/adonet/dataset-datatable-dataview/datatables"><span data-ttu-id="f01f9-1106">DataTables</span><span class="sxs-lookup"><span data-stu-id="f01f9-1106">DataTables</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ReadXml">
      <MemberSignature Language="C#" Value="public System.Data.XmlReadMode ReadXml (string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Data.XmlReadMode ReadXml(string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.ReadXml(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ReadXml (fileName As String) As XmlReadMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::XmlReadMode ReadXml(System::String ^ fileName);" />
      <MemberSignature Language="F#" Value="member this.ReadXml : string -&gt; System.Data.XmlReadMode" Usage="dataTable.ReadXml fileName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.XmlReadMode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" Index="0" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="fileName"><span data-ttu-id="f01f9-1107">从中读取数据的文件的名称。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1107">The name of the file from which to read the data.</span></span></param>
        <summary><span data-ttu-id="f01f9-1108">从指定的文件将 XML 架构和数据读入 <see cref="T:System.Data.DataTable" />。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1108">Reads XML schema and data into the <see cref="T:System.Data.DataTable" /> from the specified file.</span></span></summary>
        <returns><span data-ttu-id="f01f9-1109">用于读取数据的 <see cref="T:System.Data.XmlReadMode" />。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1109">The <see cref="T:System.Data.XmlReadMode" /> used to read the data.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f01f9-1110">当前 <xref:System.Data.DataTable> 及其子代与提供的中名为的文件中的数据一起加载 <xref:System.String> 。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1110">The current <xref:System.Data.DataTable> and its descendents are loaded with the data from the file named in the supplied <xref:System.String>.</span></span> <span data-ttu-id="f01f9-1111">此方法的行为与方法的行为相同 <xref:System.Data.DataSet.ReadXml%2A?displayProperty=nameWithType> ，不同之处在于，在这种情况下，只会为当前表及其子代加载数据。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1111">The behavior of this method is identical to that of the <xref:System.Data.DataSet.ReadXml%2A?displayProperty=nameWithType> method, except that in this case, data is loaded only for the current table and its descendants.</span></span>  
  
 <span data-ttu-id="f01f9-1112"><xref:System.Data.DataTable.ReadXml%2A>方法提供了一种方法，用于从 XML 文档只读取数据或将数据和架构读入到 <xref:System.Data.DataTable> 中，而 <xref:System.Data.DataTable.ReadXmlSchema%2A> 方法只读取架构。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1112">The <xref:System.Data.DataTable.ReadXml%2A> method provides a way to read either data only, or both data and schema into a <xref:System.Data.DataTable> from an XML document, whereas the <xref:System.Data.DataTable.ReadXmlSchema%2A> method reads only the schema.</span></span>  
  
 <span data-ttu-id="f01f9-1113">请注意，对于和方法也是 <xref:System.Data.DataTable.WriteXml%2A> 如此 <xref:System.Data.DataTable.WriteXmlSchema%2A> 。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1113">Note that the same is true for the <xref:System.Data.DataTable.WriteXml%2A> and <xref:System.Data.DataTable.WriteXmlSchema%2A> methods, respectively.</span></span> <span data-ttu-id="f01f9-1114">若要从编写 XML 数据或同时编写架构和数据 `DataTable` ，请使用 `WriteXml` 方法。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1114">To write XML data, or both schema and data from the `DataTable`, use the `WriteXml` method.</span></span> <span data-ttu-id="f01f9-1115">若要只写入架构，请使用 `WriteXmlSchema` 方法。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1115">To write just the schema, use the `WriteXmlSchema` method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f01f9-1116"><xref:System.InvalidOperationException>如果在中 `DataRow` 读取或写入的列类型实现 <xref:System.Dynamic.IDynamicMetaObjectProvider> 且不实现，则将引发 <xref:System.Xml.Serialization.IXmlSerializable> 。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1116">An <xref:System.InvalidOperationException> will be thrown if a column type in the `DataRow` being read from or written to implements <xref:System.Dynamic.IDynamicMetaObjectProvider> and does not implement <xref:System.Xml.Serialization.IXmlSerializable>.</span></span>  
  
 <span data-ttu-id="f01f9-1117">如果指定了内嵌架构，则在加载数据之前，使用内联架构来扩展现有的关系结构。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1117">If an in-line schema is specified, the in-line schema is used to extend the existing relational structure prior to loading the data.</span></span> <span data-ttu-id="f01f9-1118">例如，如果存在任何冲突 (例如，使用不同数据类型定义的同一表中的同一列) 会引发异常。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1118">If there are any conflicts (for example, the same column in the same table defined with different data types) an exception is raised.</span></span>  
  
 <span data-ttu-id="f01f9-1119">如果未指定内联架构，根据 XML 文档的结构，将根据需要通过推理扩展关系结构。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1119">If no in-line schema is specified, the relational structure is extended through inference, as necessary, according to the structure of the XML document.</span></span> <span data-ttu-id="f01f9-1120">如果无法通过推理扩展架构以便公开所有数据，则会引发异常。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1120">If the schema cannot be extended through inference in order to expose all data, an exception is raised.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f01f9-1121">在 `DataSet` `DataColumn` `DataTable` 序列化的 XML 中转义 xml 元素（如 ( "_" ) ）时，不会将该元素与相应的或关联。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1121">The `DataSet` does not associate an XML element with its corresponding `DataColumn` or `DataTable` when legal XML characters like ("_") are escaped in the serialized XML.</span></span> <span data-ttu-id="f01f9-1122">`DataSet`本身只是转义 xml 元素名称中的非法 XML 字符，因此只能使用同一个。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1122">The `DataSet` itself only escapes illegal XML characters in XML element names and hence can only consume the same.</span></span> <span data-ttu-id="f01f9-1123">当转义 XML 元素名称中的法律字符时，将在处理时忽略元素。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1123">When legal characters in XML element name are escaped, the element is ignored while processing.</span></span>  
  
```csharp  
using System.Data;  
public class A {  
   static void Main(string[] args) {  
      DataTable tabl = new DataTable("mytable");  
      tabl.Columns.Add(new DataColumn("id", typeof(int)));  
      for (int i = 0; i < 10; i++) {  
         DataRow row = tabl.NewRow();  
         row["id"] = i;  
         tabl.Rows.Add(row);  
      }  
      tabl.WriteXml("f.xml", XmlWriteMode.WriteSchema);  
      DataTable newt = new DataTable();  
      newt.ReadXml("f.xml");  
   }  
}  
```  
  
   
  
## Examples  
 <span data-ttu-id="f01f9-1124">下面的示例创建一个 <xref:System.Data.DataTable> 包含两列和10行的。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1124">The following example creates a <xref:System.Data.DataTable> containing two columns and ten rows.</span></span> <span data-ttu-id="f01f9-1125">此示例将 <xref:System.Data.DataTable> 架构和数据写入磁盘。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1125">The example writes the <xref:System.Data.DataTable> schema and data to disk.</span></span> <span data-ttu-id="f01f9-1126">该示例创建了第二个 <xref:System.Data.DataTable> ，并调用 <xref:System.Data.DataTable.ReadXml%2A> 方法以使用架构和数据对其进行填充。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1126">The example creates a second <xref:System.Data.DataTable> and calls the <xref:System.Data.DataTable.ReadXml%2A> method to fill it with schema and data.</span></span>  
  
 [!code-csharp[DataWorks DataTable.ReadXmlString#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTable.ReadXmlString/CS/source.cs#1)]
 [!code-vb[DataWorks DataTable.ReadXmlString#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTable.ReadXmlString/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/data/adonet/dataset-datatable-dataview/datatables"><span data-ttu-id="f01f9-1127">DataTables</span><span class="sxs-lookup"><span data-stu-id="f01f9-1127">DataTables</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ReadXml">
      <MemberSignature Language="C#" Value="public System.Data.XmlReadMode ReadXml (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Data.XmlReadMode ReadXml(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.ReadXml(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Function ReadXml (reader As XmlReader) As XmlReadMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::XmlReadMode ReadXml(System::Xml::XmlReader ^ reader);" />
      <MemberSignature Language="F#" Value="member this.ReadXml : System.Xml.XmlReader -&gt; System.Data.XmlReadMode" Usage="dataTable.ReadXml reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.XmlReadMode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" Index="0" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="f01f9-1128">将用于读取数据的 <see cref="T:System.Xml.XmlReader" />。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1128">The <see cref="T:System.Xml.XmlReader" /> that will be used to read the data.</span></span></param>
        <summary><span data-ttu-id="f01f9-1129">使用指定的 <see cref="T:System.Xml.XmlReader" /> 将 XML 架构和数据读入 <see cref="T:System.Data.DataTable" />。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1129">Reads XML Schema and Data into the <see cref="T:System.Data.DataTable" /> using the specified <see cref="T:System.Xml.XmlReader" />.</span></span></summary>
        <returns><span data-ttu-id="f01f9-1130">用于读取数据的 <see cref="T:System.Data.XmlReadMode" />。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1130">The <see cref="T:System.Data.XmlReadMode" /> used to read the data.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f01f9-1131">当前 <xref:System.Data.DataTable> 及其子代与提供的中名为的文件中的数据一起加载 <xref:System.Xml.XmlReader> 。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1131">The current <xref:System.Data.DataTable> and its descendents are loaded with the data from the file named in the supplied <xref:System.Xml.XmlReader>.</span></span> <span data-ttu-id="f01f9-1132">此方法的行为与方法的行为相同 <xref:System.Data.DataTable.ReadXml%2A> ，不同之处在于，在这种情况下，只会为当前表及其子代加载数据。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1132">The behavior of this method is identical to that of the <xref:System.Data.DataTable.ReadXml%2A> method, except that in this case, data is loaded only for the current table and its descendants.</span></span>  
  
 <span data-ttu-id="f01f9-1133"><xref:System.Data.DataTable.ReadXml%2A>方法提供了一种方法，用于从 XML 文档只读取数据或将数据和架构读入到 <xref:System.Data.DataTable> 中，而 <xref:System.Data.DataTable.ReadXmlSchema%2A> 方法只读取架构。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1133">The <xref:System.Data.DataTable.ReadXml%2A> method provides a way to read either data only, or both data and schema into a <xref:System.Data.DataTable> from an XML document, whereas the <xref:System.Data.DataTable.ReadXmlSchema%2A> method reads only the schema.</span></span>  
  
 <span data-ttu-id="f01f9-1134">请注意，对于和方法也是 <xref:System.Data.DataTable.WriteXml%2A> 如此 <xref:System.Data.DataTable.WriteXmlSchema%2A> 。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1134">Note that the same is true for the <xref:System.Data.DataTable.WriteXml%2A> and <xref:System.Data.DataTable.WriteXmlSchema%2A> methods, respectively.</span></span> <span data-ttu-id="f01f9-1135">若要从编写 XML 数据或同时编写架构和数据 `DataTable` ，请使用 `WriteXml` 方法。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1135">To write XML data, or both schema and data from the `DataTable`, use the `WriteXml` method.</span></span> <span data-ttu-id="f01f9-1136">若要只写入架构，请使用 `WriteXmlSchema` 方法。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1136">To write just the schema, use the `WriteXmlSchema` method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f01f9-1137"><xref:System.InvalidOperationException>如果在中 `DataRow` 读取或写入的列类型实现 <xref:System.Dynamic.IDynamicMetaObjectProvider> 且不实现，则将引发 <xref:System.Xml.Serialization.IXmlSerializable> 。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1137">An <xref:System.InvalidOperationException> will be thrown if a column type in the `DataRow` being read from or written to implements <xref:System.Dynamic.IDynamicMetaObjectProvider> and does not implement <xref:System.Xml.Serialization.IXmlSerializable>.</span></span>  
  
 <span data-ttu-id="f01f9-1138">如果指定了内嵌架构，则在加载数据之前，使用内联架构来扩展现有的关系结构。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1138">If an in-line schema is specified, the in-line schema is used to extend the existing relational structure prior to loading the data.</span></span> <span data-ttu-id="f01f9-1139">例如，如果存在任何冲突 (例如，使用不同数据类型定义的同一表中的同一列) 会引发异常。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1139">If there are any conflicts (for example, the same column in the same table defined with different data types) an exception is raised.</span></span>  
  
 <span data-ttu-id="f01f9-1140">如果未指定内联架构，根据 XML 文档的结构，将根据需要通过推理扩展关系结构。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1140">If no in-line schema is specified, the relational structure is extended through inference, as necessary, according to the structure of the XML document.</span></span> <span data-ttu-id="f01f9-1141">如果无法通过推理扩展架构以便公开所有数据，则会引发异常。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1141">If the schema cannot be extended through inference in order to expose all data, an exception is raised.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f01f9-1142">在 `DataSet` `DataColumn` `DataTable` 序列化的 XML 中转义 xml 元素（如 ( "_" ) ）时，不会将该元素与相应的或关联。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1142">The `DataSet` does not associate an XML element with its corresponding `DataColumn` or `DataTable` when legal XML characters like ("_") are escaped in the serialized XML.</span></span> <span data-ttu-id="f01f9-1143">`DataSet`本身只是转义 xml 元素名称中的非法 XML 字符，因此只能使用同一个。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1143">The `DataSet` itself only escapes illegal XML characters in XML element names and hence can only consume the same.</span></span> <span data-ttu-id="f01f9-1144">当转义 XML 元素名称中的法律字符时，将在处理时忽略元素。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1144">When legal characters in XML element name are escaped, the element is ignored while processing.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f01f9-1145">下面的示例创建一个 <xref:System.Data.DataTable> 包含两列和10行的。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1145">The following example creates a <xref:System.Data.DataTable> containing two columns and ten rows.</span></span> <span data-ttu-id="f01f9-1146">该示例将 <xref:System.Data.DataTable> 架构和数据写入 <xref:System.Xml.XmlReader> 。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1146">The example writes the <xref:System.Data.DataTable> schema and data to an <xref:System.Xml.XmlReader>.</span></span> <span data-ttu-id="f01f9-1147">该示例创建了第二个 <xref:System.Data.DataTable> ，并调用 <xref:System.Data.DataTable.ReadXml%2A> 方法以使用实例中的架构和数据填充该方法 <xref:System.Xml.XmlReader> 。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1147">The example creates a second <xref:System.Data.DataTable> and calls the <xref:System.Data.DataTable.ReadXml%2A> method to fill it with schema and data from the <xref:System.Xml.XmlReader> instance.</span></span>  
  
 [!code-csharp[DataWorks DataTable.ReadXmlXmlReader#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTable.ReadXmlXmlReader/CS/source.cs#1)]
 [!code-vb[DataWorks DataTable.ReadXmlXmlReader#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTable.ReadXmlXmlReader/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/data/adonet/dataset-datatable-dataview/datatables"><span data-ttu-id="f01f9-1148">DataTables</span><span class="sxs-lookup"><span data-stu-id="f01f9-1148">DataTables</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="ReadXmlSchema">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f01f9-1149">将 XML 架构读入 <see cref="T:System.Data.DataTable" />。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1149">Reads an XML schema into the <see cref="T:System.Data.DataTable" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f01f9-1150">使用 `ReadXmlSchema` 方法创建的架构 <xref:System.Data.DataTable> 。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1150">Use the `ReadXmlSchema` method to create the schema for a <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="f01f9-1151">此架构包括表、关系和约束定义。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1151">The schema includes table, relation, and constraint definitions.</span></span>  
  
 <span data-ttu-id="f01f9-1152">若要将架构写入 XML 文档，请使用 <xref:System.Data.DataTable.WriteXmlSchema%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1152">To write a schema to an XML document, use the <xref:System.Data.DataTable.WriteXmlSchema%2A> method.</span></span>  
  
 <span data-ttu-id="f01f9-1153">根据 XSD 标准解释 XML 架构。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1153">The XML schema is interpreted according to the XSD standard.</span></span>  
  
 <span data-ttu-id="f01f9-1154">`ReadXmlSchema`通常在调用 <xref:System.Data.DataTable.ReadXml%2A> 用于填充的方法之前调用方法 <xref:System.Data.DataTable> 。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1154">The `ReadXmlSchema` method is generally invoked before invoking the <xref:System.Data.DataTable.ReadXml%2A> method which is used to fill the <xref:System.Data.DataTable>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Data.DataSet.ReadXmlSchema" />
        <related type="Article" href="/dotnet/framework/data/adonet/dataset-datatable-dataview/datatables"><span data-ttu-id="f01f9-1155">DataTables</span><span class="sxs-lookup"><span data-stu-id="f01f9-1155">DataTables</span></span></related>
      </Docs>
    </MemberGroup>
    <Member MemberName="ReadXmlSchema">
      <MemberSignature Language="C#" Value="public void ReadXmlSchema (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ReadXmlSchema(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.ReadXmlSchema(System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReadXmlSchema (stream As Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ReadXmlSchema(System::IO::Stream ^ stream);" />
      <MemberSignature Language="F#" Value="member this.ReadXmlSchema : System.IO.Stream -&gt; unit" Usage="dataTable.ReadXmlSchema stream" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" Index="0" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="stream"><span data-ttu-id="f01f9-1156">用于读取架构的流。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1156">The stream used to read the schema.</span></span></param>
        <summary><span data-ttu-id="f01f9-1157">使用指定的流将 XML 架构读入 <see cref="T:System.Data.DataTable" />。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1157">Reads an XML schema into the <see cref="T:System.Data.DataTable" /> using the specified stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f01f9-1158">使用 <xref:System.Data.DataTable.ReadXmlSchema%2A> 方法创建的架构 <xref:System.Data.DataTable> 。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1158">Use the <xref:System.Data.DataTable.ReadXmlSchema%2A> method to create the schema for a <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="f01f9-1159">此架构包括表、关系和约束定义。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1159">The schema includes table, relation, and constraint definitions.</span></span>  
  
 <span data-ttu-id="f01f9-1160">若要将架构写入 XML 文档，请使用 <xref:System.Data.DataTable.WriteXmlSchema%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1160">To write a schema to an XML document, use the <xref:System.Data.DataTable.WriteXmlSchema%2A> method.</span></span>  
  
 <span data-ttu-id="f01f9-1161">根据 XSD 标准解释 XML 架构。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1161">The XML schema is interpreted according to the XSD standard.</span></span>  
  
 <span data-ttu-id="f01f9-1162">如果 msdata： DataType 和 xs： type 类型不匹配，则可能发生数据损坏。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1162">Data corruption can occur if the msdata:DataType and the xs:type types do not match.</span></span> <span data-ttu-id="f01f9-1163">不会引发异常。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1163">No exception will be thrown.</span></span>  
  
 <span data-ttu-id="f01f9-1164">`ReadXmlSchema`通常在调用 <xref:System.Data.DataTable.ReadXml%2A> 用于填充的方法之前调用方法 <xref:System.Data.DataTable> 。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1164">The `ReadXmlSchema` method is generally invoked before invoking the <xref:System.Data.DataTable.ReadXml%2A> method which is used to fill the <xref:System.Data.DataTable>.</span></span>  
  
 <span data-ttu-id="f01f9-1165">若要使用 XML 架构创建嵌套关系，请使用隐式嵌套元素。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1165">To create a nested relation using XML schema, use implicit nested elements.</span></span> <span data-ttu-id="f01f9-1166">您还可以将嵌套关系配置为使用显式列名称。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1166">You can also configure the nested relation to use explicit column names.</span></span> <span data-ttu-id="f01f9-1167">为了使相应的数据表参与嵌套关系，必须隐式嵌套元素。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1167">Elements must be implicitly nested in order for the corresponding DataTables to participate in a nested relation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f01f9-1168">下面的控制台应用程序将创建一个新的 <xref:System.Data.DataTable> ，并将该表的架构写入到中 <xref:System.IO.MemoryStream> 。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1168">The following console application creates a new <xref:System.Data.DataTable>, and writes the schema for that table to a <xref:System.IO.MemoryStream>.</span></span> <span data-ttu-id="f01f9-1169">然后，该示例创建一个新的 <xref:System.Data.DataTable> ，并从保存的 XML 架构读取其架构。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1169">Then, the example creates a new <xref:System.Data.DataTable> and reads its schema from the saved XML schema.</span></span>  
  
 [!code-csharp[DataWorks DataTable.ReadXmlIOStream#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTable.ReadXmlIOStream/CS/source.cs#1)]
 [!code-vb[DataWorks DataTable.ReadXmlIOStream#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTable.ReadXmlIOStream/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.DataSet.ReadXmlSchema(System.IO.Stream)" />
        <related type="Article" href="/dotnet/framework/data/adonet/dataset-datatable-dataview/datatables"><span data-ttu-id="f01f9-1170">DataTables</span><span class="sxs-lookup"><span data-stu-id="f01f9-1170">DataTables</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ReadXmlSchema">
      <MemberSignature Language="C#" Value="public void ReadXmlSchema (System.IO.TextReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ReadXmlSchema(class System.IO.TextReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.ReadXmlSchema(System.IO.TextReader)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReadXmlSchema (reader As TextReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ReadXmlSchema(System::IO::TextReader ^ reader);" />
      <MemberSignature Language="F#" Value="member this.ReadXmlSchema : System.IO.TextReader -&gt; unit" Usage="dataTable.ReadXmlSchema reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.IO.TextReader" Index="0" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="f01f9-1171">用于读取架构信息的 <see cref="T:System.IO.TextReader" />。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1171">The <see cref="T:System.IO.TextReader" /> used to read the schema information.</span></span></param>
        <summary><span data-ttu-id="f01f9-1172">使用指定的 <see cref="T:System.IO.TextReader" /> 将 XML 架构读入 <see cref="T:System.Data.DataTable" />。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1172">Reads an XML schema into the <see cref="T:System.Data.DataTable" /> using the specified <see cref="T:System.IO.TextReader" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f01f9-1173">使用 <xref:System.Data.DataTable.ReadXmlSchema%2A> 方法创建的架构 <xref:System.Data.DataTable> 。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1173">Use the <xref:System.Data.DataTable.ReadXmlSchema%2A> method to create the schema for a <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="f01f9-1174">此架构包括表、关系和约束定义。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1174">The schema includes table, relation, and constraint definitions.</span></span>  
  
 <span data-ttu-id="f01f9-1175">若要将架构写入 XML 文档，请使用 <xref:System.Data.DataTable.WriteXmlSchema%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1175">To write a schema to an XML document, use the <xref:System.Data.DataTable.WriteXmlSchema%2A> method.</span></span>  
  
 <span data-ttu-id="f01f9-1176">根据 XSD 标准解释 XML 架构。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1176">The XML schema is interpreted according to the XSD standard.</span></span>  
  
 <span data-ttu-id="f01f9-1177">如果 msdata： DataType 和 xs： type 类型不匹配，则可能发生数据损坏。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1177">Data corruption can occur if the msdata:DataType and the xs:type types do not match.</span></span> <span data-ttu-id="f01f9-1178">不会引发异常。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1178">No exception will be thrown.</span></span>  
  
 <span data-ttu-id="f01f9-1179">`ReadXmlSchema`通常在调用 <xref:System.Data.DataTable.ReadXml%2A> 用于填充的方法之前调用方法 <xref:System.Data.DataTable> 。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1179">The `ReadXmlSchema` method is generally invoked before invoking the <xref:System.Data.DataTable.ReadXml%2A> method which is used to fill the <xref:System.Data.DataTable>.</span></span>  
  
 <span data-ttu-id="f01f9-1180">若要使用 XML 架构创建嵌套关系，请使用隐式嵌套元素。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1180">To create a nested relation using XML schema, use implicit nested elements.</span></span> <span data-ttu-id="f01f9-1181">您还可以将嵌套关系重新配置为使用显式列名称。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1181">You can also reconfigure the nested relation to use explicit column names.</span></span> <span data-ttu-id="f01f9-1182">为了使相应的数据表参与嵌套关系，必须隐式嵌套元素。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1182">Elements must be implicitly nested in order for the corresponding DataTables to participate in a nested relation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f01f9-1183">下面的控制台应用程序将创建一个新的 <xref:System.Data.DataTable> ，并将该表的架构写入到中 <xref:System.IO.MemoryStream> 。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1183">The following console application creates a new <xref:System.Data.DataTable>, and writes the schema for that table to a <xref:System.IO.MemoryStream>.</span></span> <span data-ttu-id="f01f9-1184">然后，该示例创建一个新的， <xref:System.Data.DataTable> 并使用 <xref:System.IO.StreamReader> 从 <xref:System.IO.TextReader>) 作为其源的 (继承其架构。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1184">Then, the example creates a new <xref:System.Data.DataTable> and reads its schema from the saved XML schema, using a <xref:System.IO.StreamReader> (which inherits from <xref:System.IO.TextReader>) as its source.</span></span>  
  
 [!code-csharp[DataWorks DataTable.ReadXmlSchema#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTable.ReadXmlSchema/CS/source.cs#1)]
 [!code-vb[DataWorks DataTable.ReadXmlSchema#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTable.ReadXmlSchema/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.DataSet.ReadXmlSchema(System.IO.TextReader)" />
        <related type="Article" href="/dotnet/framework/data/adonet/dataset-datatable-dataview/datatables"><span data-ttu-id="f01f9-1185">DataTables</span><span class="sxs-lookup"><span data-stu-id="f01f9-1185">DataTables</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ReadXmlSchema">
      <MemberSignature Language="C#" Value="public void ReadXmlSchema (string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ReadXmlSchema(string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.ReadXmlSchema(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReadXmlSchema (fileName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ReadXmlSchema(System::String ^ fileName);" />
      <MemberSignature Language="F#" Value="member this.ReadXmlSchema : string -&gt; unit" Usage="dataTable.ReadXmlSchema fileName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" Index="0" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="fileName"><span data-ttu-id="f01f9-1186">从中读取架构信息的文件的名称。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1186">The name of the file from which to read the schema information.</span></span></param>
        <summary><span data-ttu-id="f01f9-1187">从指定的文件将 XML 架构读入 <see cref="T:System.Data.DataTable" />。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1187">Reads an XML schema into the <see cref="T:System.Data.DataTable" /> from the specified file.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f01f9-1188">使用 <xref:System.Data.DataTable.ReadXmlSchema%2A> 方法创建的架构 <xref:System.Data.DataTable> 。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1188">Use the <xref:System.Data.DataTable.ReadXmlSchema%2A> method to create the schema for a <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="f01f9-1189">此架构包括表、关系和约束定义。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1189">The schema includes table, relation, and constraint definitions.</span></span>  
  
 <span data-ttu-id="f01f9-1190">若要将架构写入 XML 文档，请使用 <xref:System.Data.DataTable.WriteXmlSchema%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1190">To write a schema to an XML document, use the <xref:System.Data.DataTable.WriteXmlSchema%2A> method.</span></span>  
  
 <span data-ttu-id="f01f9-1191">根据 XSD 标准解释 XML 架构。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1191">The XML schema is interpreted according to the XSD standard.</span></span>  
  
 <span data-ttu-id="f01f9-1192">如果 msdata： DataType 和 xs： type 类型不匹配，则可能发生数据损坏。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1192">Data corruption can occur if the msdata:DataType and the xs:type types do not match.</span></span> <span data-ttu-id="f01f9-1193">不会引发异常。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1193">No exception will be thrown.</span></span>  
  
 <span data-ttu-id="f01f9-1194">`ReadXmlSchema`通常在调用 <xref:System.Data.DataTable.ReadXml%2A> 用于填充的方法之前调用方法 `DataTable` 。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1194">The `ReadXmlSchema` method is generally invoked before invoking the <xref:System.Data.DataTable.ReadXml%2A> method which is used to fill the `DataTable`.</span></span>  
  
 <span data-ttu-id="f01f9-1195">若要使用 XML 架构创建嵌套关系，请使用隐式嵌套元素。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1195">To create a nested relation using XML schema, use implicit nested elements.</span></span> <span data-ttu-id="f01f9-1196">您还可以将嵌套关系重新配置为使用显式列名称。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1196">You can also reconfigure the nested relation to use explicit column names.</span></span> <span data-ttu-id="f01f9-1197">为了使相应的数据表参与嵌套关系，必须隐式嵌套元素。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1197">Elements must be implicitly nested in order for the corresponding DataTables to participate in a nested relation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f01f9-1198">下面的控制台应用程序将创建一个新的 <xref:System.Data.DataTable> ，并将该表的架构写入文件。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1198">The following console application creates a new <xref:System.Data.DataTable>, and writes the schema for that table to a file.</span></span> <span data-ttu-id="f01f9-1199">然后，该示例创建一个新的， <xref:System.Data.DataTable> 并使用文件作为其源从保存的 XML 架构读取其架构。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1199">Then, the example creates a new <xref:System.Data.DataTable> and reads its schema from the saved XML schema, using the file as its source.</span></span>  
  
 [!code-csharp[DataWorks DataTable.ReadXmlSchemaString#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTable.ReadXmlSchemaString/CS/source.cs#1)]
 [!code-vb[DataWorks DataTable.ReadXmlSchemaString#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTable.ReadXmlSchemaString/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.DataSet.ReadXmlSchema(System.String)" />
        <related type="Article" href="/dotnet/framework/data/adonet/dataset-datatable-dataview/datatables"><span data-ttu-id="f01f9-1200">DataTables</span><span class="sxs-lookup"><span data-stu-id="f01f9-1200">DataTables</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ReadXmlSchema">
      <MemberSignature Language="C#" Value="public void ReadXmlSchema (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ReadXmlSchema(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.ReadXmlSchema(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReadXmlSchema (reader As XmlReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ReadXmlSchema(System::Xml::XmlReader ^ reader);" />
      <MemberSignature Language="F#" Value="member this.ReadXmlSchema : System.Xml.XmlReader -&gt; unit" Usage="dataTable.ReadXmlSchema reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" Index="0" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="f01f9-1201">用于读取架构信息的 <see cref="T:System.Xml.XmlReader" />。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1201">The <see cref="T:System.Xml.XmlReader" /> used to read the schema information.</span></span></param>
        <summary><span data-ttu-id="f01f9-1202">使用指定的 <see cref="T:System.Xml.XmlReader" /> 将 XML 架构读入 <see cref="T:System.Data.DataTable" />。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1202">Reads an XML schema into the <see cref="T:System.Data.DataTable" /> using the specified <see cref="T:System.Xml.XmlReader" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f01f9-1203">使用 <xref:System.Data.DataTable.ReadXmlSchema%2A> 方法创建的架构 <xref:System.Data.DataTable> 。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1203">Use the <xref:System.Data.DataTable.ReadXmlSchema%2A> method to create the schema for a <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="f01f9-1204">此架构包括表、关系和约束定义。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1204">The schema includes table, relation, and constraint definitions.</span></span>  
  
 <span data-ttu-id="f01f9-1205">若要将架构写入 XML 文档，请使用 <xref:System.Data.DataTable.WriteXmlSchema%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1205">To write a schema to an XML document, use the <xref:System.Data.DataTable.WriteXmlSchema%2A> method.</span></span>  
  
 <span data-ttu-id="f01f9-1206">根据 XSD 标准解释 XML 架构。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1206">The XML schema is interpreted according to the XSD standard.</span></span>  
  
 <span data-ttu-id="f01f9-1207">如果 msdata： DataType 和 xs： type 类型不匹配，则可能发生数据损坏。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1207">Data corruption can occur if the msdata:DataType and the xs:type types do not match.</span></span> <span data-ttu-id="f01f9-1208">不会引发异常。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1208">No exception will be thrown.</span></span>  
  
 <span data-ttu-id="f01f9-1209">`ReadXmlSchema`通常在调用 <xref:System.Data.DataTable.ReadXml%2A> 用于填充的方法之前调用方法 <xref:System.Data.DataTable> 。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1209">The `ReadXmlSchema` method is generally invoked before invoking the <xref:System.Data.DataTable.ReadXml%2A> method which is used to fill the <xref:System.Data.DataTable>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f01f9-1210">使用 XML 架构创建嵌套关系的方法是使用隐式嵌套元素。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1210">The way to create a nested relation using XML schema is to have implicit nested elements.</span></span> <span data-ttu-id="f01f9-1211">此外，也可以将嵌套的关系重新连接到一起使用显式列名称。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1211">Additionally, the nested relation could be re-wired, to use explicit column names.</span></span> <span data-ttu-id="f01f9-1212">要隐式嵌套元素，以使相应的数据表参与嵌套关系，这是必需的。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1212">It is mandatory for elements to be implicitly nested for the corresponding DataTables to participate in a nested relation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f01f9-1213">下面的控制台应用程序将创建一个新的 <xref:System.Data.DataTable> ，并将该表的架构写入到中 <xref:System.IO.MemoryStream> 。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1213">The following console application creates a new <xref:System.Data.DataTable>, and writes the schema for that table to a <xref:System.IO.MemoryStream>.</span></span> <span data-ttu-id="f01f9-1214">然后，该示例创建一个新的， <xref:System.Data.DataTable> 并使用 <xref:System.Xml.XmlTextReader> 从 <xref:System.Xml.XmlReader>) 作为其源的 (继承其架构。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1214">Then, the example creates a new <xref:System.Data.DataTable> and reads its schema from the saved XML schema, using a <xref:System.Xml.XmlTextReader> (which inherits from <xref:System.Xml.XmlReader>) as its source.</span></span>  
  
 [!code-csharp[DataWorks DataTable.ReadXmlSchemaReader#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTable.ReadXmlSchemaReader/CS/source.cs#1)]
 [!code-vb[DataWorks DataTable.ReadXmlSchemaReader#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTable.ReadXmlSchemaReader/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.DataSet.ReadXmlSchema(System.Xml.XmlReader)" />
        <related type="Article" href="/dotnet/framework/data/adonet/dataset-datatable-dataview/datatables"><span data-ttu-id="f01f9-1215">DataTables</span><span class="sxs-lookup"><span data-stu-id="f01f9-1215">DataTables</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ReadXmlSerializable">
      <MemberSignature Language="C#" Value="protected virtual void ReadXmlSerializable (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ReadXmlSerializable(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.ReadXmlSerializable(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub ReadXmlSerializable (reader As XmlReader)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void ReadXmlSerializable(System::Xml::XmlReader ^ reader);" />
      <MemberSignature Language="F#" Value="abstract member ReadXmlSerializable : System.Xml.XmlReader -&gt; unit&#xA;override this.ReadXmlSerializable : System.Xml.XmlReader -&gt; unit" Usage="dataTable.ReadXmlSerializable reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" Index="0" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="f01f9-1216"><see cref="T:System.Xml.XmlReader" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1216">A <see cref="T:System.Xml.XmlReader" /> object.</span></span></param>
        <summary><span data-ttu-id="f01f9-1217">从 XML 流中读取。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1217">Reads from an XML stream.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RejectChanges">
      <MemberSignature Language="C#" Value="public void RejectChanges ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RejectChanges() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.RejectChanges" />
      <MemberSignature Language="VB.NET" Value="Public Sub RejectChanges ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RejectChanges();" />
      <MemberSignature Language="F#" Value="member this.RejectChanges : unit -&gt; unit" Usage="dataTable.RejectChanges " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f01f9-1218">回滚自该表加载以来或上次调用 <see cref="M:System.Data.DataTable.AcceptChanges" /> 以来对该表进行的所有更改。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1218">Rolls back all changes that have been made to the table since it was loaded, or the last time <see cref="M:System.Data.DataTable.AcceptChanges" /> was called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f01f9-1219"><xref:System.Data.DataTable.RejectChanges%2A>调用时， <xref:System.Data.DataRow> 仍处于编辑模式的任何对象都将取消其编辑。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1219">When <xref:System.Data.DataTable.RejectChanges%2A> is called, any <xref:System.Data.DataRow> objects that are still in edit-mode cancel their edits.</span></span> <span data-ttu-id="f01f9-1220">删除新行。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1220">New rows are removed.</span></span> <span data-ttu-id="f01f9-1221"><xref:System.Data.DataRowState>设置为 `Modified` 或 `Deleted` 返回到其原始状态的行。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1221">Rows with the <xref:System.Data.DataRowState> set to `Modified` or `Deleted` return back to their original state.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f01f9-1222">下面的示例对进行了几处更改 <xref:System.Data.DataTable> ，但通过调用方法拒绝了更改 <xref:System.Data.DataTable.RejectChanges%2A> 。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1222">The following example makes several changes to a <xref:System.Data.DataTable>, but rejects the changes by invoking the <xref:System.Data.DataTable.RejectChanges%2A> method.</span></span>  
  
 [!code-csharp[Classic WebData DataTable.RejectChanges Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable.RejectChanges Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable.RejectChanges Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable.RejectChanges Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/data/adonet/dataset-datatable-dataview/datatables"><span data-ttu-id="f01f9-1223">DataTables</span><span class="sxs-lookup"><span data-stu-id="f01f9-1223">DataTables</span></span></related>
        <related type="Article" href="/dotnet/framework/data/adonet/dataset-datatable-dataview/handling-datatable-events"><span data-ttu-id="f01f9-1224">处理数据表事件</span><span class="sxs-lookup"><span data-stu-id="f01f9-1224">Handling DataTable Events</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="RemotingFormat">
      <MemberSignature Language="C#" Value="public System.Data.SerializationFormat RemotingFormat { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.SerializationFormat RemotingFormat" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataTable.RemotingFormat" />
      <MemberSignature Language="VB.NET" Value="Public Property RemotingFormat As SerializationFormat" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::SerializationFormat RemotingFormat { System::Data::SerializationFormat get(); void set(System::Data::SerializationFormat value); };" />
      <MemberSignature Language="F#" Value="member this.RemotingFormat : System.Data.SerializationFormat with get, set" Usage="System.Data.DataTable.RemotingFormat" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.SerializationFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f01f9-1225">获取或设置序列化格式。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1225">Gets or sets the serialization format.</span></span></summary>
        <value><span data-ttu-id="f01f9-1226">指定 <see langword="Binary" /> 或 <see langword="Xml" /> 序列化的 <see cref="T:System.Data.SerializationFormat" /> 枚举。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1226">A <see cref="T:System.Data.SerializationFormat" /> enumeration specifying either <see langword="Binary" /> or <see langword="Xml" /> serialization.</span></span></value>
        <remarks>To be added.</remarks>
        <related type="Article" href="/dotnet/framework/data/adonet/dataset-datatable-dataview/datatables"><span data-ttu-id="f01f9-1227">DataTables</span><span class="sxs-lookup"><span data-stu-id="f01f9-1227">DataTables</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public virtual void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Reset();" />
      <MemberSignature Language="F#" Value="abstract member Reset : unit -&gt; unit&#xA;override this.Reset : unit -&gt; unit" Usage="dataTable.Reset " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f01f9-1228">将 <see cref="T:System.Data.DataTable" /> 重置为其初始状态。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1228">Resets the <see cref="T:System.Data.DataTable" /> to its original state.</span></span> <span data-ttu-id="f01f9-1229">重置将移除表的所有数据、索引、关系和列。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1229">Reset removes all data, indexes, relations, and columns of the table.</span></span> <span data-ttu-id="f01f9-1230">如果数据集包含一个数据表，则在重置该表之后，它将仍是数据集的一部分。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1230">If a DataSet includes a DataTable, the table will still be part of the DataSet after the table is reset.</span></span></summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="/dotnet/framework/data/adonet/dataset-datatable-dataview/datatables"><span data-ttu-id="f01f9-1231">DataTables</span><span class="sxs-lookup"><span data-stu-id="f01f9-1231">DataTables</span></span></related>
        <related type="Article" href="/dotnet/framework/data/adonet/dataset-datatable-dataview/handling-datatable-events"><span data-ttu-id="f01f9-1232">处理数据表事件</span><span class="sxs-lookup"><span data-stu-id="f01f9-1232">Handling DataTable Events</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="RowChanged">
      <MemberSignature Language="C#" Value="public event System.Data.DataRowChangeEventHandler RowChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Data.DataRowChangeEventHandler RowChanged" />
      <MemberSignature Language="DocId" Value="E:System.Data.DataTable.RowChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RowChanged As DataRowChangeEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Data::DataRowChangeEventHandler ^ RowChanged;" />
      <MemberSignature Language="F#" Value="member this.RowChanged : System.Data.DataRowChangeEventHandler " Usage="member this.RowChanged : System.Data.DataRowChangeEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName Language="C#">[System.Data.DataSysDescription("DataTableRowChangedDescr")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Data.DataSysDescription("DataTableRowChangedDescr")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.DataRowChangeEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f01f9-1233">在成功更改 <see cref="T:System.Data.DataRow" /> 后发生。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1233">Occurs after a <see cref="T:System.Data.DataRow" /> has been changed successfully.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f01f9-1234">有关详细信息，请参阅 [处理 DataTable 事件](/dotnet/framework/data/adonet/dataset-datatable-dataview/handling-datatable-events)。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1234">For more information, see [Handling DataTable Events](/dotnet/framework/data/adonet/dataset-datatable-dataview/handling-datatable-events).</span></span>  
  
   
  
## Examples  
 [!code-csharp[Classic WebData DataTable.RowChanged Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable.RowChanged Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable.RowChanged Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable.RowChanged Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/data/adonet/dataset-datatable-dataview/datatables"><span data-ttu-id="f01f9-1235">DataTables</span><span class="sxs-lookup"><span data-stu-id="f01f9-1235">DataTables</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="RowChanging">
      <MemberSignature Language="C#" Value="public event System.Data.DataRowChangeEventHandler RowChanging;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Data.DataRowChangeEventHandler RowChanging" />
      <MemberSignature Language="DocId" Value="E:System.Data.DataTable.RowChanging" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RowChanging As DataRowChangeEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Data::DataRowChangeEventHandler ^ RowChanging;" />
      <MemberSignature Language="F#" Value="member this.RowChanging : System.Data.DataRowChangeEventHandler " Usage="member this.RowChanging : System.Data.DataRowChangeEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName Language="C#">[System.Data.DataSysDescription("DataTableRowChangingDescr")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Data.DataSysDescription("DataTableRowChangingDescr")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.DataRowChangeEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f01f9-1236">在更改 <see cref="T:System.Data.DataRow" /> 时发生。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1236">Occurs when a <see cref="T:System.Data.DataRow" /> is changing.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f01f9-1237">有关详细信息，请参阅 [处理 DataTable 事件](/dotnet/framework/data/adonet/dataset-datatable-dataview/handling-datatable-events)。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1237">For more information, see [Handling DataTable Events](/dotnet/framework/data/adonet/dataset-datatable-dataview/handling-datatable-events).</span></span>  
  
   
  
## Examples  
 [!code-csharp[Classic WebData DataTable.RowChanging Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable.RowChanging Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable.RowChanging Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable.RowChanging Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/data/adonet/dataset-datatable-dataview/datatables"><span data-ttu-id="f01f9-1238">DataTables</span><span class="sxs-lookup"><span data-stu-id="f01f9-1238">DataTables</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="RowDeleted">
      <MemberSignature Language="C#" Value="public event System.Data.DataRowChangeEventHandler RowDeleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Data.DataRowChangeEventHandler RowDeleted" />
      <MemberSignature Language="DocId" Value="E:System.Data.DataTable.RowDeleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RowDeleted As DataRowChangeEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Data::DataRowChangeEventHandler ^ RowDeleted;" />
      <MemberSignature Language="F#" Value="member this.RowDeleted : System.Data.DataRowChangeEventHandler " Usage="member this.RowDeleted : System.Data.DataRowChangeEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName Language="C#">[System.Data.DataSysDescription("DataTableRowDeletedDescr")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Data.DataSysDescription("DataTableRowDeletedDescr")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.DataRowChangeEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f01f9-1239">删除表中的行后发生。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1239">Occurs after a row in the table has been deleted.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f01f9-1240">有关详细信息，请参阅 [处理 DataTable 事件](/dotnet/framework/data/adonet/dataset-datatable-dataview/handling-datatable-events)。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1240">For more information, see [Handling DataTable Events](/dotnet/framework/data/adonet/dataset-datatable-dataview/handling-datatable-events).</span></span>  
  
   
  
## Examples  
 [!code-csharp[Classic WebData DataTable.RowDeleted Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable.RowDeleted Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable.RowDeleted Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable.RowDeleted Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/data/adonet/dataset-datatable-dataview/datatables"><span data-ttu-id="f01f9-1241">DataTables</span><span class="sxs-lookup"><span data-stu-id="f01f9-1241">DataTables</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="RowDeleting">
      <MemberSignature Language="C#" Value="public event System.Data.DataRowChangeEventHandler RowDeleting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Data.DataRowChangeEventHandler RowDeleting" />
      <MemberSignature Language="DocId" Value="E:System.Data.DataTable.RowDeleting" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RowDeleting As DataRowChangeEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Data::DataRowChangeEventHandler ^ RowDeleting;" />
      <MemberSignature Language="F#" Value="member this.RowDeleting : System.Data.DataRowChangeEventHandler " Usage="member this.RowDeleting : System.Data.DataRowChangeEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName Language="C#">[System.Data.DataSysDescription("DataTableRowDeletingDescr")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Data.DataSysDescription("DataTableRowDeletingDescr")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.DataRowChangeEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f01f9-1242">要删除表中的行之前发生。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1242">Occurs before a row in the table is about to be deleted.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f01f9-1243">有关详细信息，请参阅 [处理 DataTable 事件](/dotnet/framework/data/adonet/dataset-datatable-dataview/handling-datatable-events)。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1243">For more information, see [Handling DataTable Events](/dotnet/framework/data/adonet/dataset-datatable-dataview/handling-datatable-events).</span></span>  
  
   
  
## Examples  
 [!code-csharp[Classic WebData DataTable.RowDeleting Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable.RowDeleting Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable.RowDeleting Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable.RowDeleting Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/data/adonet/dataset-datatable-dataview/datatables"><span data-ttu-id="f01f9-1244">DataTables</span><span class="sxs-lookup"><span data-stu-id="f01f9-1244">DataTables</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Rows">
      <MemberSignature Language="C#" Value="public System.Data.DataRowCollection Rows { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.DataRowCollection Rows" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataTable.Rows" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Rows As DataRowCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::DataRowCollection ^ Rows { System::Data::DataRowCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Rows : System.Data.DataRowCollection" Usage="System.Data.DataTable.Rows" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName Language="C#">[System.Data.DataSysDescription("DataTableRowsDescr")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Data.DataSysDescription("DataTableRowsDescr")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.DataRowCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f01f9-1245">获取属于该表的行的集合。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1245">Gets the collection of rows that belong to this table.</span></span></summary>
        <value><span data-ttu-id="f01f9-1246">包含 <see cref="T:System.Data.DataRowCollection" /> 对象的 <see cref="T:System.Data.DataRow" />；否则为 null 值（如果不存在任何 <see cref="T:System.Data.DataRow" /> 对象）。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1246">A <see cref="T:System.Data.DataRowCollection" /> that contains <see cref="T:System.Data.DataRow" /> objects; otherwise a null value if no <see cref="T:System.Data.DataRow" /> objects exist.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f01f9-1247">若要创建新的 <xref:System.Data.DataRow> ，必须使用 <xref:System.Data.DataTable.NewRow%2A> 方法返回新的对象。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1247">To create a new <xref:System.Data.DataRow>, you must use the <xref:System.Data.DataTable.NewRow%2A> method to return a new object.</span></span> <span data-ttu-id="f01f9-1248">此类对象根据为其对象集合定义的架构自动进行配置 <xref:System.Data.DataTable> <xref:System.Data.DataColumn> 。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1248">Such an object is automatically configured according to the schema defined for the <xref:System.Data.DataTable> through its collection of <xref:System.Data.DataColumn> objects.</span></span> <span data-ttu-id="f01f9-1249">创建新行并为行中的每个列设置值后，使用方法将行添加到中 <xref:System.Data.DataRowCollection> `Add` 。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1249">After creating a new row and setting the values for each column in the row, add the row to the <xref:System.Data.DataRowCollection> using the `Add` method.</span></span>  
  
 <span data-ttu-id="f01f9-1250">集合中的每个都 <xref:System.Data.DataRow> 表示表中的一行数据。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1250">Each <xref:System.Data.DataRow> in the collection represents a row of data in the table.</span></span> <span data-ttu-id="f01f9-1251">若要提交对行中某列的值所做的更改，必须调用 <xref:System.Data.DataTable.AcceptChanges%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1251">To commit a change to the value of a column in the row, you must invoke the <xref:System.Data.DataTable.AcceptChanges%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f01f9-1252">下面演示了返回和设置行的两个示例。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1252">The following shows two examples of returning and setting rows.</span></span> <span data-ttu-id="f01f9-1253">第一个示例使用 <xref:System.Data.DataTable.Rows%2A> 属性，并打印每个行的每一列的值。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1253">The first example uses the <xref:System.Data.DataTable.Rows%2A> property and prints the value of each column for every row.</span></span> <span data-ttu-id="f01f9-1254">第二个示例使用 <xref:System.Data.DataTable> 对象的 <xref:System.Data.DataTable.NewRow%2A> 方法创建一个新的 <xref:System.Data.DataRow> 对象，该对象具有的架构 <xref:System.Data.DataTable> 。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1254">The second example uses the <xref:System.Data.DataTable> object's <xref:System.Data.DataTable.NewRow%2A> method to create a new <xref:System.Data.DataRow> object with the schema of the <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="f01f9-1255">设置行值后，通过方法将行添加到 <xref:System.Data.DataRowCollection> `Add` 。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1255">After setting the row values, the row is added to the <xref:System.Data.DataRowCollection> through the `Add` method.</span></span>  
  
 [!code-csharp[Classic WebData DataTable.Rows Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable.Rows Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable.Rows Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable.Rows Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.DataTable.AcceptChanges" />
        <altmember cref="T:System.Data.DataRow" />
        <altmember cref="T:System.Data.DataRowCollection" />
        <altmember cref="M:System.Data.DataTable.NewRow" />
        <related type="Article" href="/dotnet/framework/data/adonet/dataset-datatable-dataview/datatables"><span data-ttu-id="f01f9-1256">DataTables</span><span class="sxs-lookup"><span data-stu-id="f01f9-1256">DataTables</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Select">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f01f9-1257">获取 <see cref="T:System.Data.DataRow" /> 对象数组。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1257">Gets an array of <see cref="T:System.Data.DataRow" /> objects.</span></span></summary>
        <related type="Article" href="/dotnet/framework/data/adonet/dataset-datatable-dataview/datatables"><span data-ttu-id="f01f9-1258">DataTables</span><span class="sxs-lookup"><span data-stu-id="f01f9-1258">DataTables</span></span></related>
      </Docs>
    </MemberGroup>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public System.Data.DataRow[] Select ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataRow[] Select() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.Select" />
      <MemberSignature Language="VB.NET" Value="Public Function Select () As DataRow()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Data::DataRow ^&gt; ^ Select();" />
      <MemberSignature Language="F#" Value="member this.Select : unit -&gt; System.Data.DataRow[]" Usage="dataTable.Select " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRow[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f01f9-1259">获取由所有 <see cref="T:System.Data.DataRow" /> 对象组成的数组。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1259">Gets an array of all <see cref="T:System.Data.DataRow" /> objects.</span></span></summary>
        <returns><span data-ttu-id="f01f9-1260">一个 <see cref="T:System.Data.DataRow" /> 对象数组。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1260">An array of <see cref="T:System.Data.DataRow" /> objects.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f01f9-1261">若要确保正确的排序顺序，请用或指定排序条件 <xref:System.Data.DataTable.Select(System.String,System.String)> <xref:System.Data.DataTable.Select(System.String,System.String,System.Data.DataViewRowState)> 。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1261">To ensure the proper sort order, specify sort criteria with <xref:System.Data.DataTable.Select(System.String,System.String)> or <xref:System.Data.DataTable.Select(System.String,System.String,System.Data.DataViewRowState)>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f01f9-1262">下面的示例 <xref:System.Data.DataRow> 通过方法返回对象的数组 <xref:System.Data.DataTable.Select%2A> 。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1262">The following example returns an array of <xref:System.Data.DataRow> objects through the <xref:System.Data.DataTable.Select%2A> method.</span></span>  
  
 [!code-csharp[Classic WebData DataTable.Select Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable.Select Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable.Select Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable.Select Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Data.DataTable.CaseSensitive" />
        <related type="Article" href="/dotnet/framework/data/adonet/dataset-datatable-dataview/datatables"><span data-ttu-id="f01f9-1263">DataTables</span><span class="sxs-lookup"><span data-stu-id="f01f9-1263">DataTables</span></span></related>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=191549"><span data-ttu-id="f01f9-1264">Null 值</span><span class="sxs-lookup"><span data-stu-id="f01f9-1264">Null Values</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public System.Data.DataRow[] Select (string? filterExpression);" FrameworkAlternate="net-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataRow[] Select(string filterExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.Select(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Select (filterExpression As String) As DataRow()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Data::DataRow ^&gt; ^ Select(System::String ^ filterExpression);" />
      <MemberSignature Language="F#" Value="member this.Select : string -&gt; System.Data.DataRow[]" Usage="dataTable.Select filterExpression" />
      <MemberSignature Language="C#" Value="public System.Data.DataRow[] Select (string filterExpression);" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRow[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filterExpression" Type="System.String" Index="0" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="filterExpression"><span data-ttu-id="f01f9-1265">用于筛选行的条件。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1265">The criteria to use to filter the rows.</span></span> <span data-ttu-id="f01f9-1266">有关如何筛选行的示例，请参阅 [DataView RowFilter 语法 [C#]](https://www.csharp-examples.net/dataview-rowfilter/)。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1266">For examples on how to filter rows, see [DataView RowFilter Syntax [C#]](https://www.csharp-examples.net/dataview-rowfilter/).</span></span></param>
        <summary><span data-ttu-id="f01f9-1267">获取由与筛选条件匹配的所有 <see cref="T:System.Data.DataRow" /> 对象组成的数组。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1267">Gets an array of all <see cref="T:System.Data.DataRow" /> objects that match the filter criteria.</span></span></summary>
        <returns><span data-ttu-id="f01f9-1268">一个 <see cref="T:System.Data.DataRow" /> 对象数组。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1268">An array of <see cref="T:System.Data.DataRow" /> objects.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f01f9-1269">若要创建 `filterExpression` 参数，请使用适用于 <xref:System.Data.DataColumn> 类的属性值的相同规则 <xref:System.Data.DataColumn.Expression%2A> 来创建筛选器。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1269">To create the `filterExpression` argument, use the same rules that apply to the <xref:System.Data.DataColumn> class's <xref:System.Data.DataColumn.Expression%2A> property value for creating filters.</span></span>  
  
<span data-ttu-id="f01f9-1270">若要确保正确的排序顺序，请用或指定排序条件 <xref:System.Data.DataTable.Select(System.String,System.String)> <xref:System.Data.DataTable.Select(System.String,System.String,System.Data.DataViewRowState)> 。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1270">To ensure the proper sort order, specify sort criteria with <xref:System.Data.DataTable.Select(System.String,System.String)> or <xref:System.Data.DataTable.Select(System.String,System.String,System.Data.DataViewRowState)>.</span></span>
  
 <span data-ttu-id="f01f9-1271">如果筛选器中的列包含 null 值，则它将不是结果的一部分。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1271">If the column on the filter contains a null value, it will not be part of the result.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f01f9-1272">下面的示例使用筛选表达式返回对象的数组 <xref:System.Data.DataRow> 。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1272">The following example uses a filter expression to return an array of <xref:System.Data.DataRow> objects.</span></span>  
  
 [!code-csharp[Classic WebData DataTable.Select1 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable.Select1 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable.Select1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable.Select1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Data.DataTable.CaseSensitive" />
        <related type="Article" href="/dotnet/framework/data/adonet/dataset-datatable-dataview/datatables"><span data-ttu-id="f01f9-1273">DataTables</span><span class="sxs-lookup"><span data-stu-id="f01f9-1273">DataTables</span></span></related>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=191549"><span data-ttu-id="f01f9-1274">Null 值</span><span class="sxs-lookup"><span data-stu-id="f01f9-1274">Null Values</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public System.Data.DataRow[]? Select (string filterExpression, string sort);" FrameworkAlternate="net-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataRow[] Select(string filterExpression, string sort) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.Select(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Select (filterExpression As String, sort As String) As DataRow()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Data::DataRow ^&gt; ^ Select(System::String ^ filterExpression, System::String ^ sort);" />
      <MemberSignature Language="F#" Value="member this.Select : string * string -&gt; System.Data.DataRow[]" Usage="dataTable.Select (filterExpression, sort)" />
      <MemberSignature Language="C#" Value="public System.Data.DataRow[] Select (string filterExpression, string sort);" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRow[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filterExpression" Type="System.String" Index="0" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="sort" Type="System.String" Index="1" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="filterExpression"><span data-ttu-id="f01f9-1275">用于筛选行的条件。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1275">The criteria to use to filter the rows.</span></span> <span data-ttu-id="f01f9-1276">有关如何筛选行的示例，请参阅 [DataView RowFilter 语法 [C#]](https://www.csharp-examples.net/dataview-rowfilter/)。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1276">For examples on how to filter rows, see [DataView RowFilter Syntax [C#]](https://www.csharp-examples.net/dataview-rowfilter/).</span></span></param>
        <param name="sort"><span data-ttu-id="f01f9-1277">指定列和排序方向的字符串。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1277">A string specifying the column and sort direction.</span></span></param>
        <summary><span data-ttu-id="f01f9-1278">以指定排序顺序，获取由与筛选条件匹配的所有 <see cref="T:System.Data.DataRow" /> 对象组成的数组。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1278">Gets an array of all <see cref="T:System.Data.DataRow" /> objects that match the filter criteria, in the specified sort order.</span></span></summary>
        <returns><span data-ttu-id="f01f9-1279">由与筛选条件匹配的 <see cref="T:System.Data.DataRow" /> 对象组成的数组。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1279">An array of <see cref="T:System.Data.DataRow" /> objects matching the filter expression.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f01f9-1280">若要形成 `filterExpression` 参数，请使用与创建 <xref:System.Data.DataColumn> 类的属性值相同的规则 <xref:System.Data.DataColumn.Expression%2A> 。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1280">To form the `filterExpression` argument, use the same rules for creating the <xref:System.Data.DataColumn> class's <xref:System.Data.DataColumn.Expression%2A> property value.</span></span> <span data-ttu-id="f01f9-1281">`Sort`参数还使用相同的规则来创建类的 <xref:System.Data.DataColumn.Expression%2A> 字符串。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1281">The `Sort` argument also uses the same rules for creating class's <xref:System.Data.DataColumn.Expression%2A> strings.</span></span>  
  
 <span data-ttu-id="f01f9-1282">如果筛选器中的列包含 null 值，则它将不是结果的一部分。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1282">If the column on the filter contains a null value, it will not be part of the result.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f01f9-1283">下面的示例使用筛选表达式返回对象的数组 <xref:System.Data.DataRow> 。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1283">The following example uses a filter expression to return an array of <xref:System.Data.DataRow> objects.</span></span>  
  
 [!code-csharp[Classic WebData DataTable.Select2 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable.Select2 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable.Select2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable.Select2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Data.DataTable.CaseSensitive" />
        <related type="Article" href="/dotnet/framework/data/adonet/dataset-datatable-dataview/datatables"><span data-ttu-id="f01f9-1284">DataTables</span><span class="sxs-lookup"><span data-stu-id="f01f9-1284">DataTables</span></span></related>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=191549"><span data-ttu-id="f01f9-1285">Null 值</span><span class="sxs-lookup"><span data-stu-id="f01f9-1285">Null Values</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public System.Data.DataRow[]? Select (string filterExpression, string sort, System.Data.DataViewRowState recordStates);" FrameworkAlternate="net-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataRow[] Select(string filterExpression, string sort, valuetype System.Data.DataViewRowState recordStates) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.Select(System.String,System.String,System.Data.DataViewRowState)" />
      <MemberSignature Language="VB.NET" Value="Public Function Select (filterExpression As String, sort As String, recordStates As DataViewRowState) As DataRow()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Data::DataRow ^&gt; ^ Select(System::String ^ filterExpression, System::String ^ sort, System::Data::DataViewRowState recordStates);" />
      <MemberSignature Language="F#" Value="member this.Select : string * string * System.Data.DataViewRowState -&gt; System.Data.DataRow[]" Usage="dataTable.Select (filterExpression, sort, recordStates)" />
      <MemberSignature Language="C#" Value="public System.Data.DataRow[] Select (string filterExpression, string sort, System.Data.DataViewRowState recordStates);" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRow[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filterExpression" Type="System.String" Index="0" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="sort" Type="System.String" Index="1" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="recordStates" Type="System.Data.DataViewRowState" Index="2" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="filterExpression"><span data-ttu-id="f01f9-1286">用于筛选行的条件。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1286">The criteria to use to filter the rows.</span></span> <span data-ttu-id="f01f9-1287">有关如何筛选行的示例，请参阅 [DataView RowFilter 语法 [C#]](https://www.csharp-examples.net/dataview-rowfilter/)。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1287">For examples on how to filter rows, see [DataView RowFilter Syntax [C#]](https://www.csharp-examples.net/dataview-rowfilter/).</span></span></param>
        <param name="sort"><span data-ttu-id="f01f9-1288">指定列和排序方向的字符串。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1288">A string specifying the column and sort direction.</span></span></param>
        <param name="recordStates"><span data-ttu-id="f01f9-1289"><see cref="T:System.Data.DataViewRowState" /> 值之一。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1289">One of the <see cref="T:System.Data.DataViewRowState" /> values.</span></span></param>
        <summary><span data-ttu-id="f01f9-1290">以与指定状态匹配的排序顺序，获取由与筛选条件匹配的所有 <see cref="T:System.Data.DataRow" /> 对象组成的数组。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1290">Gets an array of all <see cref="T:System.Data.DataRow" /> objects that match the filter in the order of the sort that match the specified state.</span></span></summary>
        <returns><span data-ttu-id="f01f9-1291">一个 <see cref="T:System.Data.DataRow" /> 对象数组。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1291">An array of <see cref="T:System.Data.DataRow" /> objects.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f01f9-1292">若要形成 `filterExpression` 参数，请使用与创建 <xref:System.Data.DataColumn> 类的属性值相同的规则 <xref:System.Data.DataColumn.Expression%2A> 。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1292">To form the `filterExpression` argument, use the same rules for creating the <xref:System.Data.DataColumn> class's <xref:System.Data.DataColumn.Expression%2A> property value.</span></span> <span data-ttu-id="f01f9-1293">`Sort`参数还使用相同的规则来创建类的 <xref:System.Data.DataColumn.Expression%2A> 字符串。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1293">The `Sort` argument also uses the same rules for creating class's <xref:System.Data.DataColumn.Expression%2A> strings.</span></span>  
  
 <span data-ttu-id="f01f9-1294">如果筛选器中的列包含 null 值，则它将不是结果的一部分。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1294">If the column on the filter contains a null value, it will not be part of the result.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f01f9-1295">下面的示例使用筛选器表达式和记录状态返回对象的数组 <xref:System.Data.DataRow> 。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1295">The following example uses a filter expression and record state to return an array of <xref:System.Data.DataRow> objects.</span></span>  
  
 [!code-csharp[Classic WebData DataTable.Select3 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable.Select3 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable.Select3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable.Select3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/data/adonet/dataset-datatable-dataview/datatables"><span data-ttu-id="f01f9-1296">DataTables</span><span class="sxs-lookup"><span data-stu-id="f01f9-1296">DataTables</span></span></related>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=191549"><span data-ttu-id="f01f9-1297">Null 值</span><span class="sxs-lookup"><span data-stu-id="f01f9-1297">Null Values</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Site">
      <MemberSignature Language="C#" Value="public override System.ComponentModel.ISite? Site { get; set; }" FrameworkAlternate="net-5.0" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.ISite Site" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataTable.Site" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Site As ISite" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::ComponentModel::ISite ^ Site { System::ComponentModel::ISite ^ get(); void set(System::ComponentModel::ISite ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Site : System.ComponentModel.ISite with get, set" Usage="System.Data.DataTable.Site" />
      <MemberSignature Language="C#" Value="public override System.ComponentModel.ISite Site { get; set; }" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.ISite</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f01f9-1298">获取或设置 <see cref="T:System.ComponentModel.ISite" /> 的 <see cref="T:System.Data.DataTable" />。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1298">Gets or sets an <see cref="T:System.ComponentModel.ISite" /> for the <see cref="T:System.Data.DataTable" />.</span></span></summary>
        <value><span data-ttu-id="f01f9-1299"><see cref="T:System.ComponentModel.ISite" /> 的一个 <see cref="T:System.Data.DataTable" />。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1299">An <see cref="T:System.ComponentModel.ISite" /> for the <see cref="T:System.Data.DataTable" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f01f9-1300">站点将绑定 <xref:System.ComponentModel.Component> 到， <xref:System.ComponentModel.Container> 并启用它们之间的通信，并为容器提供管理其组件的方法。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1300">Sites bind a <xref:System.ComponentModel.Component> to a <xref:System.ComponentModel.Container> and enable communication between them, as well as provide a way for the container to manage its components.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/data/adonet/dataset-datatable-dataview/datatables"><span data-ttu-id="f01f9-1301">DataTables</span><span class="sxs-lookup"><span data-stu-id="f01f9-1301">DataTables</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.IListSource.ContainsListCollection">
      <MemberSignature Language="C#" Value="bool System.ComponentModel.IListSource.ContainsListCollection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.ComponentModel.IListSource.ContainsListCollection" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataTable.System#ComponentModel#IListSource#ContainsListCollection" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property ContainsListCollection As Boolean Implements IListSource.ContainsListCollection" />
      <MemberSignature Language="C++ CLI" Value="property bool System::ComponentModel::IListSource::ContainsListCollection { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.System.ComponentModel.IListSource.ContainsListCollection : bool" Usage="System.ComponentModel.IListSource.ContainsListCollection" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.ComponentModel.IListSource.ContainsListCollection</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f01f9-1302">有关此成员的说明，请参见 <see cref="P:System.ComponentModel.IListSource.ContainsListCollection" />。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1302">For a description of this member, see <see cref="P:System.ComponentModel.IListSource.ContainsListCollection" />.</span></span></summary>
        <value><span data-ttu-id="f01f9-1303">如果集合是 <see cref="T:System.Collections.IList" /> 对象集合，则为 <see langword="true" />；否则，为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1303"><see langword="true" /> if the collection is a collection of <see cref="T:System.Collections.IList" /> objects; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f01f9-1304">此成员是显式接口成员的实现。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1304">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="f01f9-1305">它只能在 <xref:System.Data.DataTable> 实例被强制转换为 <xref:System.ComponentModel.IListSource> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1305">It can be used only when the <xref:System.Data.DataTable> instance is cast to an <xref:System.ComponentModel.IListSource> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.IListSource.GetList">
      <MemberSignature Language="C#" Value="System.Collections.IList IListSource.GetList ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IList System.ComponentModel.IListSource.GetList() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.System#ComponentModel#IListSource#GetList" />
      <MemberSignature Language="VB.NET" Value="Function GetList () As IList Implements IListSource.GetList" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IList ^ System.ComponentModel.IListSource.GetList() = System::ComponentModel::IListSource::GetList;" />
      <MemberSignature Language="F#" Value="abstract member System.ComponentModel.IListSource.GetList : unit -&gt; System.Collections.IList&#xA;override this.System.ComponentModel.IListSource.GetList : unit -&gt; System.Collections.IList" Usage="dataTable.System.ComponentModel.IListSource.GetList " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.IListSource.GetList</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IList</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f01f9-1306">有关此成员的说明，请参见 <see cref="M:System.ComponentModel.IListSource.GetList" />。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1306">For a description of this member, see <see cref="M:System.ComponentModel.IListSource.GetList" />.</span></span></summary>
        <returns><span data-ttu-id="f01f9-1307">对象中可以绑定到数据源的 <see cref="T:System.Collections.IList" />。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1307">An <see cref="T:System.Collections.IList" /> that can be bound to a data source from the object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f01f9-1308">此成员是显式接口成员的实现。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1308">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="f01f9-1309">它只能在 <xref:System.Data.DataTable> 实例被强制转换为 <xref:System.ComponentModel.IListSource> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1309">It can be used only when the <xref:System.Data.DataTable> instance is cast to an <xref:System.ComponentModel.IListSource> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.Serialization.ISerializable.GetObjectData">
      <MemberSignature Language="C#" Value="void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.Serialization.ISerializable.GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Sub GetObjectData (info As SerializationInfo, context As StreamingContext) Implements ISerializable.GetObjectData" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.Serialization.ISerializable.GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context) = System::Runtime::Serialization::ISerializable::GetObjectData;" />
      <MemberSignature Language="F#" Value="abstract member System.Runtime.Serialization.ISerializable.GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit&#xA;override this.System.Runtime.Serialization.ISerializable.GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit" Usage="dataTable.System.Runtime.Serialization.ISerializable.GetObjectData (info, context)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" Index="0" FrameworkAlternate="netframework-1.1" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" Index="1" FrameworkAlternate="netframework-1.1" />
      </Parameters>
      <Docs>
        <param name="info"><span data-ttu-id="f01f9-1310"><see cref="T:System.Runtime.Serialization.SerializationInfo" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1310">A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object.</span></span></param>
        <param name="context"><span data-ttu-id="f01f9-1311"><see cref="T:System.Runtime.Serialization.StreamingContext" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1311">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> object.</span></span></param>
        <summary><span data-ttu-id="f01f9-1312">使用序列化 <see cref="T:System.Data.DataTable" /> 时所需的数据填充序列化信息对象。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1312">Populates a serialization information object with the data needed to serialize the <see cref="T:System.Data.DataTable" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Xml.Serialization.IXmlSerializable.GetSchema">
      <MemberSignature Language="C#" Value="System.Xml.Schema.XmlSchema IXmlSerializable.GetSchema ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Xml.Schema.XmlSchema System.Xml.Serialization.IXmlSerializable.GetSchema() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.System#Xml#Serialization#IXmlSerializable#GetSchema" />
      <MemberSignature Language="VB.NET" Value="Function GetSchema () As XmlSchema Implements IXmlSerializable.GetSchema" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Xml::Schema::XmlSchema ^ System.Xml.Serialization.IXmlSerializable.GetSchema() = System::Xml::Serialization::IXmlSerializable::GetSchema;" />
      <MemberSignature Language="F#" Value="abstract member System.Xml.Serialization.IXmlSerializable.GetSchema : unit -&gt; System.Xml.Schema.XmlSchema&#xA;override this.System.Xml.Serialization.IXmlSerializable.GetSchema : unit -&gt; System.Xml.Schema.XmlSchema" Usage="dataTable.System.Xml.Serialization.IXmlSerializable.GetSchema " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Xml.Serialization.IXmlSerializable.GetSchema</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchema</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f01f9-1313">有关此成员的说明，请参见 <see cref="M:System.Xml.Serialization.IXmlSerializable.GetSchema" />。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1313">For a description of this member, see <see cref="M:System.Xml.Serialization.IXmlSerializable.GetSchema" />.</span></span></summary>
        <returns><span data-ttu-id="f01f9-1314">由 <see cref="T:System.Xml.Schema.XmlSchema" /> 方法生成并由 <see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" /> 方法使用的对象的 XML 表示形式的 <see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" />。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1314">An <see cref="T:System.Xml.Schema.XmlSchema" /> that describes the XML representation of the object that is produced by the <see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" /> method and consumed by the <see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" /> method.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f01f9-1315">此成员是显式接口成员的实现。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1315">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="f01f9-1316">它只能在 <xref:System.Data.DataSet> 实例被强制转换为 <xref:System.Xml.Serialization.IXmlSerializable> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1316">It can be used only when the <xref:System.Data.DataSet> instance is cast to an <xref:System.Xml.Serialization.IXmlSerializable> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Xml.Serialization.IXmlSerializable.ReadXml">
      <MemberSignature Language="C#" Value="void IXmlSerializable.ReadXml (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Xml.Serialization.IXmlSerializable.ReadXml(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Sub ReadXml (reader As XmlReader) Implements IXmlSerializable.ReadXml" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Xml.Serialization.IXmlSerializable.ReadXml(System::Xml::XmlReader ^ reader) = System::Xml::Serialization::IXmlSerializable::ReadXml;" />
      <MemberSignature Language="F#" Value="abstract member System.Xml.Serialization.IXmlSerializable.ReadXml : System.Xml.XmlReader -&gt; unit&#xA;override this.System.Xml.Serialization.IXmlSerializable.ReadXml : System.Xml.XmlReader -&gt; unit" Usage="dataTable.System.Xml.Serialization.IXmlSerializable.ReadXml reader" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" Index="0" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="f01f9-1317">XmlReader。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1317">An XmlReader.</span></span></param>
        <summary><span data-ttu-id="f01f9-1318">有关此成员的说明，请参见 <see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" />。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1318">For a description of this member, see <see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f01f9-1319">此成员是显式接口成员的实现。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1319">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="f01f9-1320">它只能在 <xref:System.Data.DataSet> 实例被强制转换为 <xref:System.Xml.Serialization.IXmlSerializable> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1320">It can be used only when the <xref:System.Data.DataSet> instance is cast to an <xref:System.Xml.Serialization.IXmlSerializable> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Xml.Serialization.IXmlSerializable.WriteXml">
      <MemberSignature Language="C#" Value="void IXmlSerializable.WriteXml (System.Xml.XmlWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Xml.Serialization.IXmlSerializable.WriteXml(class System.Xml.XmlWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Sub WriteXml (writer As XmlWriter) Implements IXmlSerializable.WriteXml" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Xml.Serialization.IXmlSerializable.WriteXml(System::Xml::XmlWriter ^ writer) = System::Xml::Serialization::IXmlSerializable::WriteXml;" />
      <MemberSignature Language="F#" Value="abstract member System.Xml.Serialization.IXmlSerializable.WriteXml : System.Xml.XmlWriter -&gt; unit&#xA;override this.System.Xml.Serialization.IXmlSerializable.WriteXml : System.Xml.XmlWriter -&gt; unit" Usage="dataTable.System.Xml.Serialization.IXmlSerializable.WriteXml writer" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" Index="0" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="f01f9-1321">XmlWriter。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1321">An XmlWriter.</span></span></param>
        <summary><span data-ttu-id="f01f9-1322">有关此成员的说明，请参见 <see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" />。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1322">For a description of this member, see <see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f01f9-1323">此成员是显式接口成员的实现。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1323">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="f01f9-1324">它只能在 <xref:System.Data.DataSet> 实例被强制转换为 <xref:System.Xml.Serialization.IXmlSerializable> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1324">It can be used only when the <xref:System.Data.DataSet> instance is cast to an <xref:System.Xml.Serialization.IXmlSerializable> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TableCleared">
      <MemberSignature Language="C#" Value="public event System.Data.DataTableClearEventHandler TableCleared;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Data.DataTableClearEventHandler TableCleared" />
      <MemberSignature Language="DocId" Value="E:System.Data.DataTable.TableCleared" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TableCleared As DataTableClearEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Data::DataTableClearEventHandler ^ TableCleared;" />
      <MemberSignature Language="F#" Value="member this.TableCleared : System.Data.DataTableClearEventHandler " Usage="member this.TableCleared : System.Data.DataTableClearEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTableClearEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f01f9-1325">清除 <see cref="T:System.Data.DataTable" /> 后发生。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1325">Occurs after a <see cref="T:System.Data.DataTable" /> is cleared.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f01f9-1326"><xref:System.Data.DataTable.TableCleared>成功清除所有行后，但在 <xref:System.Data.DataTable.Clear%2A> 方法将控制权返回给调用方之前，事件会立即触发。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1326">The <xref:System.Data.DataTable.TableCleared> event is fired immediately after all rows have been successfully cleared but before the <xref:System.Data.DataTable.Clear%2A> method returns control back to the caller.</span></span> <span data-ttu-id="f01f9-1327"><xref:System.Data.DataTable.TableCleared>如果在清除操作期间有任何异常，则不会触发事件。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1327">The <xref:System.Data.DataTable.TableCleared> event is not fired if there are any exceptions during the clear operation.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/data/adonet/dataset-datatable-dataview/datatables"><span data-ttu-id="f01f9-1328">DataTables</span><span class="sxs-lookup"><span data-stu-id="f01f9-1328">DataTables</span></span></related>
        <related type="Article" href="/dotnet/framework/data/adonet/dataset-datatable-dataview/handling-datatable-events"><span data-ttu-id="f01f9-1329">处理数据表事件</span><span class="sxs-lookup"><span data-stu-id="f01f9-1329">Handling DataTable Events</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="TableClearing">
      <MemberSignature Language="C#" Value="public event System.Data.DataTableClearEventHandler TableClearing;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Data.DataTableClearEventHandler TableClearing" />
      <MemberSignature Language="DocId" Value="E:System.Data.DataTable.TableClearing" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TableClearing As DataTableClearEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Data::DataTableClearEventHandler ^ TableClearing;" />
      <MemberSignature Language="F#" Value="member this.TableClearing : System.Data.DataTableClearEventHandler " Usage="member this.TableClearing : System.Data.DataTableClearEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTableClearEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f01f9-1330">清除 <see cref="T:System.Data.DataTable" /> 时发生。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1330">Occurs when a <see cref="T:System.Data.DataTable" /> is cleared.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f01f9-1331">在 <xref:System.Data.DataTable.TableClearing> 处理操作开始之前激发该事件 <xref:System.Data.DataTable.Clear%2A> 。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1331">The <xref:System.Data.DataTable.TableClearing> event is fired before processing of the <xref:System.Data.DataTable.Clear%2A> operation begins.</span></span> <span data-ttu-id="f01f9-1332">此事件始终在 <xref:System.Data.DataTable.Clear%2A> 调用方法时引发，即使该表包含零行。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1332">This event is always fired when the <xref:System.Data.DataTable.Clear%2A> method is invoked, even if the table contains zero rows.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/data/adonet/dataset-datatable-dataview/datatables"><span data-ttu-id="f01f9-1333">DataTables</span><span class="sxs-lookup"><span data-stu-id="f01f9-1333">DataTables</span></span></related>
        <related type="Article" href="/dotnet/framework/data/adonet/dataset-datatable-dataview/handling-datatable-events"><span data-ttu-id="f01f9-1334">处理数据表事件</span><span class="sxs-lookup"><span data-stu-id="f01f9-1334">Handling DataTable Events</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="TableName">
      <MemberSignature Language="C#" Value="public string TableName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TableName" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataTable.TableName" />
      <MemberSignature Language="VB.NET" Value="Public Property TableName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TableName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TableName : string with get, set" Usage="System.Data.DataTable.TableName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue("")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue("")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.All)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.All)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName Language="C#">[System.Data.DataSysDescription("DataTableTableNameDescr")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Data.DataSysDescription("DataTableTableNameDescr")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f01f9-1335">获取或设置 <see cref="T:System.Data.DataTable" /> 的名称。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1335">Gets or sets the name of the <see cref="T:System.Data.DataTable" />.</span></span></summary>
        <value><span data-ttu-id="f01f9-1336"><see cref="T:System.Data.DataTable" /> 的名称。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1336">The name of the <see cref="T:System.Data.DataTable" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f01f9-1337"><xref:System.Data.DataTable.TableName%2A>用于从父对象的 (返回此表， <xref:System.Data.DataSet> <xref:System.Data.DataTableCollection> <xref:System.Data.DataSet.Tables%2A>) 由属性返回。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1337">The <xref:System.Data.DataTable.TableName%2A> is used to return this table from the parent <xref:System.Data.DataSet> object's <xref:System.Data.DataTableCollection> (returned by the <xref:System.Data.DataSet.Tables%2A> property).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f01f9-1338">下面的示例 <xref:System.Data.DataTable.TableName%2A> 为对象集合中的每个表打印 <xref:System.Data.DataTable> 。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1338">The following example prints the <xref:System.Data.DataTable.TableName%2A> for each table in a collection of <xref:System.Data.DataTable> objects.</span></span>  
  
 [!code-csharp[Classic WebData DataTable.TableName Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable.TableName Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable.TableName Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable.TableName Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="f01f9-1339">传入 <see langword="null" /> 或空字符串 ("")，此表属于一个集合。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1339"><see langword="null" /> or empty string ("") is passed in and this table belongs to a collection.</span></span></exception>
        <exception cref="T:System.Data.DuplicateNameException"><span data-ttu-id="f01f9-1340">该表属于一个集合，该集合已包含同名的表。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1340">The table belongs to a collection that already has a table with the same name.</span></span> <span data-ttu-id="f01f9-1341">（比较区分大小写）。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1341">(Comparison is case-sensitive).</span></span></exception>
        <altmember cref="T:System.Data.DataSet" />
        <altmember cref="P:System.Data.DataSet.Tables" />
        <related type="Article" href="/dotnet/framework/data/adonet/dataset-datatable-dataview/datatables"><span data-ttu-id="f01f9-1342">DataTables</span><span class="sxs-lookup"><span data-stu-id="f01f9-1342">DataTables</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="TableNewRow">
      <MemberSignature Language="C#" Value="public event System.Data.DataTableNewRowEventHandler TableNewRow;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Data.DataTableNewRowEventHandler TableNewRow" />
      <MemberSignature Language="DocId" Value="E:System.Data.DataTable.TableNewRow" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TableNewRow As DataTableNewRowEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Data::DataTableNewRowEventHandler ^ TableNewRow;" />
      <MemberSignature Language="F#" Value="member this.TableNewRow : System.Data.DataTableNewRowEventHandler " Usage="member this.TableNewRow : System.Data.DataTableNewRowEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTableNewRowEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f01f9-1343">插入新的 <see cref="T:System.Data.DataRow" /> 时发生。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1343">Occurs when a new <see cref="T:System.Data.DataRow" /> is inserted.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f01f9-1344">使用创建新的后激发 <xref:System.Data.DataRow> <xref:System.Data.DataTable.NewRow%2A> 。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1344">Fires after a new <xref:System.Data.DataRow> has been created using <xref:System.Data.DataTable.NewRow%2A>.</span></span> <span data-ttu-id="f01f9-1345">此事件在调用的 `NewRow` 方法返回之前激发。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1345">This event is fired before the invoked `NewRow` method returns.</span></span> <span data-ttu-id="f01f9-1346">新 <xref:System.Data.DataRow> 实例已分离，但尚未将其添加到集合中。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1346">The new <xref:System.Data.DataRow> instance is detached; it has not been added to the collection.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/data/adonet/dataset-datatable-dataview/datatables"><span data-ttu-id="f01f9-1347">DataTables</span><span class="sxs-lookup"><span data-stu-id="f01f9-1347">DataTables</span></span></related>
        <related type="Article" href="/dotnet/framework/data/adonet/dataset-datatable-dataview/handling-datatable-events"><span data-ttu-id="f01f9-1348">处理数据表事件</span><span class="sxs-lookup"><span data-stu-id="f01f9-1348">Handling DataTable Events</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="dataTable.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f01f9-1349">获取 <see cref="P:System.Data.DataTable.TableName" /> 和 <see cref="P:System.Data.DataTable.DisplayExpression" />（如果有一个用作连接字符串）。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1349">Gets the <see cref="P:System.Data.DataTable.TableName" /> and <see cref="P:System.Data.DataTable.DisplayExpression" />, if there is one as a concatenated string.</span></span></summary>
        <returns><span data-ttu-id="f01f9-1350">一个由 <see cref="P:System.Data.DataTable.TableName" /> 和 <see cref="P:System.Data.DataTable.DisplayExpression" /> 值字符串。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1350">A string consisting of the <see cref="P:System.Data.DataTable.TableName" /> and the <see cref="P:System.Data.DataTable.DisplayExpression" /> values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f01f9-1351">为获取 <xref:System.Data.DataTable.TableName%2A> 和 <xref:System.Data.DataTable.DisplayExpression%2A> <xref:System.Data.DataTable> 。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1351">Gets the <xref:System.Data.DataTable.TableName%2A> and <xref:System.Data.DataTable.DisplayExpression%2A> for the <xref:System.Data.DataTable>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f01f9-1352">下面的示例返回 <xref:System.Data.DataTable.TableName%2A> 并 <xref:System.Data.DataTable.DisplayExpression%2A> 使用 <xref:System.Data.DataTable.ToString%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1352">The following example returns the <xref:System.Data.DataTable.TableName%2A> and <xref:System.Data.DataTable.DisplayExpression%2A> using the <xref:System.Data.DataTable.ToString%2A> method.</span></span>  
  
 [!code-csharp[Classic WebData DataTable.ToString Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable.ToString Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable.ToString Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable.ToString Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/data/adonet/dataset-datatable-dataview/datatables"><span data-ttu-id="f01f9-1353">DataTables</span><span class="sxs-lookup"><span data-stu-id="f01f9-1353">DataTables</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteXml">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f01f9-1354">以 XML 形式写入 <see cref="T:System.Data.DataTable" /> 的当前内容。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1354">Writes the current contents of the <see cref="T:System.Data.DataTable" /> as XML.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f01f9-1355"><xref:System.Data.DataTable.WriteXml%2A>方法提供了一种方法，用于将数据（或中的数据和架构 <xref:System.Data.DataTable> ）写入 XML 文档，而 <xref:System.Data.DataTable.WriteXmlSchema%2A> 方法只写入架构。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1355">The <xref:System.Data.DataTable.WriteXml%2A> method provides a way to write either data only, or both data and schema from a <xref:System.Data.DataTable> into an XML document, whereas the <xref:System.Data.DataTable.WriteXmlSchema%2A> method writes only the schema.</span></span> <span data-ttu-id="f01f9-1356">若要同时编写数据和架构，请使用包含参数的重载之一 <xref:System.Data.XmlWriteMode> ，并将其值设置为 `WriteSchema` 。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1356">To write both data and schema, use one of the overloads that include the <xref:System.Data.XmlWriteMode> parameter, and set its value to `WriteSchema`.</span></span>  
  
 <span data-ttu-id="f01f9-1357">请注意，对于和方法也是 <xref:System.Data.DataTable.ReadXml%2A> 如此 <xref:System.Data.DataTable.ReadXmlSchema%2A> 。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1357">Note that the same is true for the <xref:System.Data.DataTable.ReadXml%2A> and <xref:System.Data.DataTable.ReadXmlSchema%2A> methods, respectively.</span></span> <span data-ttu-id="f01f9-1358">若要将 XML 数据或架构和数据读入到 `DataTable` 中，请使用 `ReadXml` 方法。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1358">To read XML data, or both schema and data into the `DataTable`, use the `ReadXml` method.</span></span> <span data-ttu-id="f01f9-1359">若要仅读取架构，请使用 `ReadXmlSchema` 方法。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1359">To read just the schema, use the `ReadXmlSchema` method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f01f9-1360"><xref:System.InvalidOperationException>如果在中 `DataRow` 读取或写入的列类型实现 <xref:System.Dynamic.IDynamicMetaObjectProvider> 且不实现，则将引发 <xref:System.Xml.Serialization.IXmlSerializable> 。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1360">An <xref:System.InvalidOperationException> will be thrown if a column type in the `DataRow` being read from or written to implements <xref:System.Dynamic.IDynamicMetaObjectProvider> and does not implement <xref:System.Xml.Serialization.IXmlSerializable>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f01f9-1361">下面的控制台应用程序创建两个 <xref:System.Data.DataTable> 实例，将每个实例添加到 <xref:System.Data.DataSet> ，创建一个 <xref:System.Data.DataRelation> 与两个表相关的，然后使用 <xref:System.Data.DataTable.WriteXml%2A> 方法将父表中包含的数据写入到中 <xref:System.IO.TextWriter> 。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1361">The following console application creates two <xref:System.Data.DataTable> instances, adds each to a <xref:System.Data.DataSet>, creates a <xref:System.Data.DataRelation> relating the two tables, and then uses the <xref:System.Data.DataTable.WriteXml%2A> method to write the data contained within the parent table to a <xref:System.IO.TextWriter>.</span></span> <span data-ttu-id="f01f9-1362">该示例演示了在将参数设置 `writeHierarchy` 为其每个值时的行为。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1362">The example demonstrates the behavior when setting the `writeHierarchy` parameter to each of its values.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f01f9-1363">此示例演示如何使用 WriteXml 的重载版本之一。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1363">This example shows how to use one of the overloaded versions of WriteXml.</span></span> <span data-ttu-id="f01f9-1364">有关可能可用的其他示例，请参阅各个重载主题。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1364">For other examples that might be available, see the individual overload topics.</span></span>  
  
 [!code-csharp[DataWorks DataTable.WriteXmlOverload#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTable.WriteXmlOverload/CS/source.cs#1)]
 [!code-vb[DataWorks DataTable.WriteXmlOverload#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTable.WriteXmlOverload/VB/source.vb#1)]  
  
 <span data-ttu-id="f01f9-1365">该示例在控制台窗口中显示以下输出：</span><span class="sxs-lookup"><span data-stu-id="f01f9-1365">The example displays the following output in the console window:</span></span>  
  
```  
==============================  
Customer table, without hierarchy  
==============================  
<NewDataSet>  
  <xs:schema id="NewDataSet" xmlns="" xmlns:xs="http://www.w3.org/2001/XMLSchema  
" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">  
    <xs:element name="NewDataSet" msdata:IsDataSet="true" msdata:MainDataTable="Table1">  
      <xs:complexType>  
        <xs:choice minOccurs="0" maxOccurs="unbounded">  
          <xs:element name="Table1">  
            <xs:complexType>  
              <xs:sequence>  
                <xs:element name="ID" type="xs:int" />  
                <xs:element name="Name" type="xs:string" minOccurs="0" />  
              </xs:sequence>  
            </xs:complexType>  
          </xs:element>  
        </xs:choice>  
      </xs:complexType>  
      <xs:unique name="Constraint1" msdata:PrimaryKey="true">  
        <xs:selector xpath=".//Table1" />  
        <xs:field xpath="ID" />  
      </xs:unique>  
    </xs:element>  
  </xs:schema>  
  <Table1>  
    <ID>1</ID>  
    <Name>Mary</Name>  
  </Table1>  
  <Table1>  
    <ID>2</ID>  
    <Name>Andy</Name>  
  </Table1>  
  <Table1>  
    <ID>3</ID>  
    <Name>Peter</Name>  
  </Table1>  
  <Table1>  
    <ID>4</ID>  
    <Name>Russ</Name>  
  </Table1>  
</NewDataSet>  
==============================  
Customer table, with hierarchy  
==============================  
<NewDataSet>  
  <xs:schema id="NewDataSet" xmlns="" xmlns:xs="http://www.w3.org/2001/XMLSchema  
" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">  
    <xs:element name="NewDataSet" msdata:IsDataSet="true" msdata:MainDataTable="Table1">  
      <xs:complexType>  
        <xs:choice minOccurs="0" maxOccurs="unbounded">  
          <xs:element name="Table1">  
            <xs:complexType>  
              <xs:sequence>  
                <xs:element name="ID" type="xs:int" />  
                <xs:element name="Name" type="xs:string" minOccurs="0" />  
              </xs:sequence>  
            </xs:complexType>  
          </xs:element>  
          <xs:element name="Table2">  
            <xs:complexType>  
              <xs:sequence>  
                <xs:element name="OrderID" type="xs:int" />  
                <xs:element name="CustomerID" type="xs:int" minOccurs="0" />  
                <xs:element name="OrderDate" type="xs:dateTime" minOccurs="0" />  
  
              </xs:sequence>  
            </xs:complexType>  
          </xs:element>  
        </xs:choice>  
      </xs:complexType>  
      <xs:unique name="Constraint1" msdata:PrimaryKey="true">  
        <xs:selector xpath=".//Table1" />  
        <xs:field xpath="ID" />  
      </xs:unique>  
      <xs:unique name="Table2_Constraint1" msdata:ConstraintName="Constraint1" m  
sdata:PrimaryKey="true">  
        <xs:selector xpath=".//Table2" />  
        <xs:field xpath="OrderID" />  
      </xs:unique>  
      <xs:keyref name="CustomerOrder" refer="Constraint1">  
        <xs:selector xpath=".//Table2" />  
        <xs:field xpath="CustomerID" />  
      </xs:keyref>  
    </xs:element>  
  </xs:schema>  
  <Table1>  
    <ID>1</ID>  
    <Name>Mary</Name>  
  </Table1>  
  <Table1>  
    <ID>2</ID>  
    <Name>Andy</Name>  
  </Table1>  
  <Table1>  
    <ID>3</ID>  
    <Name>Peter</Name>  
  </Table1>  
  <Table1>  
    <ID>4</ID>  
    <Name>Russ</Name>  
  </Table1>  
  <Table2>  
    <OrderID>1</OrderID>  
    <CustomerID>1</CustomerID>  
    <OrderDate>2003-12-02T00:00:00.0000000-08:00</OrderDate>  
  </Table2>  
  <Table2>  
    <OrderID>2</OrderID>  
    <CustomerID>1</CustomerID>  
    <OrderDate>2004-01-03T00:00:00.0000000-08:00</OrderDate>  
  </Table2>  
  <Table2>  
    <OrderID>3</OrderID>  
    <CustomerID>2</CustomerID>  
    <OrderDate>2004-11-13T00:00:00.0000000-08:00</OrderDate>  
  </Table2>  
  <Table2>  
    <OrderID>4</OrderID>  
    <CustomerID>3</CustomerID>  
    <OrderDate>2004-05-16T00:00:00.0000000-07:00</OrderDate>  
  </Table2>  
  <Table2>  
    <OrderID>5</OrderID>  
    <CustomerID>3</CustomerID>  
    <OrderDate>2004-05-22T00:00:00.0000000-07:00</OrderDate>  
  </Table2>  
  <Table2>  
    <OrderID>6</OrderID>  
    <CustomerID>4</CustomerID>  
    <OrderDate>2004-06-15T00:00:00.0000000-07:00</OrderDate>  
  </Table2>  
</NewDataSet>  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/data/adonet/dataset-datatable-dataview/datatables"><span data-ttu-id="f01f9-1366">DataTables</span><span class="sxs-lookup"><span data-stu-id="f01f9-1366">DataTables</span></span></related>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteXml">
      <MemberSignature Language="C#" Value="public void WriteXml (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteXml(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.WriteXml(System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteXml (stream As Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteXml(System::IO::Stream ^ stream);" />
      <MemberSignature Language="F#" Value="member this.WriteXml : System.IO.Stream -&gt; unit" Usage="dataTable.WriteXml stream" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" Index="0" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="stream"><span data-ttu-id="f01f9-1367">要向其写入数据的流。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1367">The stream to which the data will be written.</span></span></param>
        <summary><span data-ttu-id="f01f9-1368">通过指定的 <see cref="T:System.IO.Stream" />，按 XML 形式编写 <see cref="T:System.Data.DataTable" /> 的当前内容。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1368">Writes the current contents of the <see cref="T:System.Data.DataTable" /> as XML using the specified <see cref="T:System.IO.Stream" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f01f9-1369"><xref:System.Data.DataTable.WriteXml%2A>方法提供了一种方法，用于将数据（或中的数据和架构 <xref:System.Data.DataTable> ）写入 XML 文档，而 <xref:System.Data.DataTable.WriteXmlSchema%2A> 方法只写入架构。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1369">The <xref:System.Data.DataTable.WriteXml%2A> method provides a way to write either data only, or both data and schema from a <xref:System.Data.DataTable> into an XML document, whereas the <xref:System.Data.DataTable.WriteXmlSchema%2A> method writes only the schema.</span></span> <span data-ttu-id="f01f9-1370">若要同时编写数据和架构，请使用包含参数的重载之一 <xref:System.Data.XmlWriteMode> ，并将其值设置为 `WriteSchema` 。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1370">To write both data and schema, use one of the overloads that includes the <xref:System.Data.XmlWriteMode> parameter, and set its value to `WriteSchema`.</span></span>  
  
 <span data-ttu-id="f01f9-1371">请注意，对于和方法也是 <xref:System.Data.DataTable.ReadXml%2A> 如此 <xref:System.Data.DataTable.ReadXmlSchema%2A> 。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1371">Note that the same is true for the <xref:System.Data.DataTable.ReadXml%2A> and <xref:System.Data.DataTable.ReadXmlSchema%2A> methods, respectively.</span></span> <span data-ttu-id="f01f9-1372">若要将 XML 数据或架构和数据读入到 `DataTable` 中，请使用 `ReadXml` 方法。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1372">To read XML data, or both schema and data into the `DataTable`, use the `ReadXml` method.</span></span> <span data-ttu-id="f01f9-1373">若要仅读取架构，请使用 `ReadXmlSchema` 方法。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1373">To read just the schema, use the `ReadXmlSchema` method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f01f9-1374"><xref:System.InvalidOperationException>如果在中 `DataRow` 读取或写入的列类型实现 <xref:System.Dynamic.IDynamicMetaObjectProvider> 且不实现，则将引发 <xref:System.Xml.Serialization.IXmlSerializable> 。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1374">An <xref:System.InvalidOperationException> will be thrown if a column type in the `DataRow` being read from or written to implements <xref:System.Dynamic.IDynamicMetaObjectProvider> and does not implement <xref:System.Xml.Serialization.IXmlSerializable>.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/data/adonet/dataset-datatable-dataview/datatables"><span data-ttu-id="f01f9-1375">DataTables</span><span class="sxs-lookup"><span data-stu-id="f01f9-1375">DataTables</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="WriteXml">
      <MemberSignature Language="C#" Value="public void WriteXml (System.IO.TextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteXml(class System.IO.TextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.WriteXml(System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteXml (writer As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteXml(System::IO::TextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="member this.WriteXml : System.IO.TextWriter -&gt; unit" Usage="dataTable.WriteXml writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.IO.TextWriter" Index="0" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="f01f9-1376">用于写入内容的 <see cref="T:System.IO.TextWriter" />。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1376">The <see cref="T:System.IO.TextWriter" /> with which to write the content.</span></span></param>
        <summary><span data-ttu-id="f01f9-1377">通过指定的 <see cref="T:System.IO.TextWriter" />，按 XML 形式编写 <see cref="T:System.Data.DataTable" /> 的当前内容。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1377">Writes the current contents of the <see cref="T:System.Data.DataTable" /> as XML using the specified <see cref="T:System.IO.TextWriter" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f01f9-1378"><xref:System.Data.DataTable.WriteXml%2A>方法提供了一种方法，用于将数据（或中的数据和架构 <xref:System.Data.DataTable> ）写入 XML 文档，而 <xref:System.Data.DataTable.WriteXmlSchema%2A> 方法只写入架构。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1378">The <xref:System.Data.DataTable.WriteXml%2A> method provides a way to write either data only, or both data and schema from a <xref:System.Data.DataTable> into an XML document, whereas the <xref:System.Data.DataTable.WriteXmlSchema%2A> method writes only the schema.</span></span> <span data-ttu-id="f01f9-1379">若要同时编写数据和架构，请使用包含参数的重载之一 <xref:System.Data.XmlWriteMode> ，并将其值设置为 `WriteSchema` 。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1379">To write both data and schema, use one of the overloads that includes the <xref:System.Data.XmlWriteMode> parameter, and set its value to `WriteSchema`.</span></span>  
  
 <span data-ttu-id="f01f9-1380">请注意，对于和方法也是 <xref:System.Data.DataTable.ReadXml%2A> 如此 <xref:System.Data.DataTable.ReadXmlSchema%2A> 。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1380">Note that the same is true for the <xref:System.Data.DataTable.ReadXml%2A> and <xref:System.Data.DataTable.ReadXmlSchema%2A> methods, respectively.</span></span> <span data-ttu-id="f01f9-1381">若要将 XML 数据或架构和数据读入到 `DataTable` 中，请使用 `ReadXml` 方法。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1381">To read XML data, or both schema and data into the `DataTable`, use the `ReadXml` method.</span></span> <span data-ttu-id="f01f9-1382">若要仅读取架构，请使用 `ReadXmlSchema` 方法。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1382">To read just the schema, use the `ReadXmlSchema` method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f01f9-1383"><xref:System.InvalidOperationException>如果在中 `DataRow` 读取或写入的列类型实现 <xref:System.Dynamic.IDynamicMetaObjectProvider> 且不实现，则将引发 <xref:System.Xml.Serialization.IXmlSerializable> 。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1383">An <xref:System.InvalidOperationException> will be thrown if a column type in the `DataRow` being read from or written to implements <xref:System.Dynamic.IDynamicMetaObjectProvider> and does not implement <xref:System.Xml.Serialization.IXmlSerializable>.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/data/adonet/dataset-datatable-dataview/datatables"><span data-ttu-id="f01f9-1384">DataTables</span><span class="sxs-lookup"><span data-stu-id="f01f9-1384">DataTables</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="WriteXml">
      <MemberSignature Language="C#" Value="public void WriteXml (string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteXml(string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.WriteXml(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteXml (fileName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteXml(System::String ^ fileName);" />
      <MemberSignature Language="F#" Value="member this.WriteXml : string -&gt; unit" Usage="dataTable.WriteXml fileName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" Index="0" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="fileName"><span data-ttu-id="f01f9-1385">要向其写入 XML 数据的文件。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1385">The file to which to write the XML data.</span></span></param>
        <summary><span data-ttu-id="f01f9-1386">使用指定的文件以 XML 形式写入 <see cref="T:System.Data.DataTable" /> 的当前内容。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1386">Writes the current contents of the <see cref="T:System.Data.DataTable" /> as XML using the specified file.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f01f9-1387"><xref:System.Data.DataTable.WriteXml%2A>方法提供了一种方法，用于将数据（或中的数据和架构 <xref:System.Data.DataTable> ）写入 XML 文档，而 <xref:System.Data.DataTable.WriteXmlSchema%2A> 方法只写入架构。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1387">The <xref:System.Data.DataTable.WriteXml%2A> method provides a way to write either data only, or both data and schema from a <xref:System.Data.DataTable> into an XML document, whereas the <xref:System.Data.DataTable.WriteXmlSchema%2A> method writes only the schema.</span></span> <span data-ttu-id="f01f9-1388">若要同时编写数据和架构，请使用包含参数的重载之一 <xref:System.Data.XmlWriteMode> ，并将其值设置为 `WriteSchema` 。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1388">To write both data and schema, use one of the overloads that includes the <xref:System.Data.XmlWriteMode> parameter, and set its value to `WriteSchema`.</span></span>  
  
 <span data-ttu-id="f01f9-1389">请注意，对于和方法也是 <xref:System.Data.DataTable.ReadXml%2A> 如此 <xref:System.Data.DataTable.ReadXmlSchema%2A> 。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1389">Note that the same is true for the <xref:System.Data.DataTable.ReadXml%2A> and <xref:System.Data.DataTable.ReadXmlSchema%2A> methods, respectively.</span></span> <span data-ttu-id="f01f9-1390">若要将 XML 数据或架构和数据读入到 `DataTable` 中，请使用 `ReadXml` 方法。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1390">To read XML data, or both schema and data into the `DataTable`, use the `ReadXml` method.</span></span> <span data-ttu-id="f01f9-1391">若要仅读取架构，请使用 `ReadXmlSchema` 方法。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1391">To read just the schema, use the `ReadXmlSchema` method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f01f9-1392"><xref:System.InvalidOperationException>如果在中 `DataRow` 读取或写入的列类型实现 <xref:System.Dynamic.IDynamicMetaObjectProvider> 且不实现，则将引发 <xref:System.Xml.Serialization.IXmlSerializable> 。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1392">An <xref:System.InvalidOperationException> will be thrown if a column type in the `DataRow` being read from or written to implements <xref:System.Dynamic.IDynamicMetaObjectProvider> and does not implement <xref:System.Xml.Serialization.IXmlSerializable>.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/data/adonet/dataset-datatable-dataview/datatables"><span data-ttu-id="f01f9-1393">DataTables</span><span class="sxs-lookup"><span data-stu-id="f01f9-1393">DataTables</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="WriteXml">
      <MemberSignature Language="C#" Value="public void WriteXml (System.Xml.XmlWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteXml(class System.Xml.XmlWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteXml (writer As XmlWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteXml(System::Xml::XmlWriter ^ writer);" />
      <MemberSignature Language="F#" Value="member this.WriteXml : System.Xml.XmlWriter -&gt; unit" Usage="dataTable.WriteXml writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" Index="0" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="f01f9-1394">用于写入内容的 <see cref="T:System.Xml.XmlWriter" />。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1394">The <see cref="T:System.Xml.XmlWriter" /> with which to write the contents.</span></span></param>
        <summary><span data-ttu-id="f01f9-1395">通过指定的 <see cref="T:System.Xml.XmlWriter" />，按 XML 形式编写 <see cref="T:System.Data.DataTable" /> 的当前内容。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1395">Writes the current contents of the <see cref="T:System.Data.DataTable" /> as XML using the specified <see cref="T:System.Xml.XmlWriter" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f01f9-1396"><xref:System.Data.DataTable.WriteXml%2A>方法提供了一种方法，用于将数据（或中的数据和架构 <xref:System.Data.DataTable> ）写入 XML 文档，而 <xref:System.Data.DataTable.WriteXmlSchema%2A> 方法只写入架构。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1396">The <xref:System.Data.DataTable.WriteXml%2A> method provides a way to write either data only, or both data and schema from a <xref:System.Data.DataTable> into an XML document, whereas the <xref:System.Data.DataTable.WriteXmlSchema%2A> method writes only the schema.</span></span> <span data-ttu-id="f01f9-1397">若要同时编写数据和架构，请使用包含参数的重载之一 <xref:System.Data.XmlWriteMode> ，并将其值设置为 `WriteSchema` 。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1397">To write both data and schema, use one of the overloads that include the <xref:System.Data.XmlWriteMode> parameter, and set its value to `WriteSchema`.</span></span>  
  
 <span data-ttu-id="f01f9-1398">请注意，对于和方法也是 <xref:System.Data.DataTable.ReadXml%2A> 如此 <xref:System.Data.DataTable.ReadXmlSchema%2A> 。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1398">Note that the same is true for the <xref:System.Data.DataTable.ReadXml%2A> and <xref:System.Data.DataTable.ReadXmlSchema%2A> methods, respectively.</span></span> <span data-ttu-id="f01f9-1399">若要将 XML 数据或架构和数据读入到 `DataTable` 中，请使用 `ReadXml` 方法。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1399">To read XML data, or both schema and data into the `DataTable`, use the `ReadXml` method.</span></span> <span data-ttu-id="f01f9-1400">若要仅读取架构，请使用 `ReadXmlSchema` 方法。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1400">To read just the schema, use the `ReadXmlSchema` method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f01f9-1401"><xref:System.InvalidOperationException>如果在中 `DataRow` 读取或写入的列类型实现 <xref:System.Dynamic.IDynamicMetaObjectProvider> 且不实现，则将引发 <xref:System.Xml.Serialization.IXmlSerializable> 。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1401">An <xref:System.InvalidOperationException> will be thrown if a column type in the `DataRow` being read from or written to implements <xref:System.Dynamic.IDynamicMetaObjectProvider> and does not implement <xref:System.Xml.Serialization.IXmlSerializable>.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/data/adonet/dataset-datatable-dataview/datatables"><span data-ttu-id="f01f9-1402">DataTables</span><span class="sxs-lookup"><span data-stu-id="f01f9-1402">DataTables</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="WriteXml">
      <MemberSignature Language="C#" Value="public void WriteXml (System.IO.Stream stream, bool writeHierarchy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteXml(class System.IO.Stream stream, bool writeHierarchy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.WriteXml(System.IO.Stream,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteXml (stream As Stream, writeHierarchy As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteXml(System::IO::Stream ^ stream, bool writeHierarchy);" />
      <MemberSignature Language="F#" Value="member this.WriteXml : System.IO.Stream * bool -&gt; unit" Usage="dataTable.WriteXml (stream, writeHierarchy)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" Index="0" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="writeHierarchy" Type="System.Boolean" Index="1" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="stream"><span data-ttu-id="f01f9-1403">要向其写入数据的流。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1403">The stream to which the data will be written.</span></span></param>
        <param name="writeHierarchy"><span data-ttu-id="f01f9-1404">如果为 <see langword="true" />，则写入当前表及其所有子代的内容。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1404">If <see langword="true" />, write the contents of the current table and all its descendants.</span></span> <span data-ttu-id="f01f9-1405">如果为 <see langword="false" />（默认值），则只写入当前表的数据。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1405">If <see langword="false" /> (the default value), write the data for the current table only.</span></span></param>
        <summary><span data-ttu-id="f01f9-1406">通过指定的 <see cref="T:System.IO.Stream" />，按 XML 形式编写 <see cref="T:System.Data.DataTable" /> 的当前内容。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1406">Writes the current contents of the <see cref="T:System.Data.DataTable" /> as XML using the specified <see cref="T:System.IO.Stream" />.</span></span> <span data-ttu-id="f01f9-1407">若要保存该表及其所有子代的数据，请将 <paramref name="writeHierarchy" /> 参数设置为 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1407">To save the data for the table and all its descendants, set the <paramref name="writeHierarchy" /> parameter to <see langword="true" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f01f9-1408">使用 <xref:System.Data.DataTable.WriteXmlSchema%2A> 方法可将的架构写入 <xref:System.Data.DataTable> XML 文档。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1408">Use the <xref:System.Data.DataTable.WriteXmlSchema%2A> method to write the schema for a <xref:System.Data.DataTable> to an XML document.</span></span> <span data-ttu-id="f01f9-1409">此架构包括表、关系和约束定义。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1409">The schema includes table, relation, and constraint definitions.</span></span>  
  
 <span data-ttu-id="f01f9-1410">使用 XSD 标准编写 XML 架构。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1410">The XML schema is written using the XSD standard.</span></span>  
  
 <span data-ttu-id="f01f9-1411">若要将数据写入 XML 文档，请使用 <xref:System.Data.DataTable.WriteXml%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1411">To write the data to an XML document, use the <xref:System.Data.DataTable.WriteXml%2A> method.</span></span>  
  
 <span data-ttu-id="f01f9-1412">通常， `WriteXml` 方法只写入当前表的数据。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1412">Normally the `WriteXml` method writes the data only for the current table.</span></span> <span data-ttu-id="f01f9-1413">若要写入当前表及其所有子代的相关表的数据，请调用方法，并将 `writeHierarchy` 参数设置为 `true` 。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1413">To write the data for the current table and all of its descendant, related tables, call the method with the `writeHierarchy` parameter set to `true`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f01f9-1414"><xref:System.InvalidOperationException>如果在中 `DataRow` 读取或写入的列类型实现 <xref:System.Dynamic.IDynamicMetaObjectProvider> 且不实现，则将引发 <xref:System.Xml.Serialization.IXmlSerializable> 。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1414">An <xref:System.InvalidOperationException> will be thrown if a column type in the `DataRow` being read from or written to implements <xref:System.Dynamic.IDynamicMetaObjectProvider> and does not implement <xref:System.Xml.Serialization.IXmlSerializable>.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/data/adonet/dataset-datatable-dataview/datatables"><span data-ttu-id="f01f9-1415">DataTables</span><span class="sxs-lookup"><span data-stu-id="f01f9-1415">DataTables</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="WriteXml">
      <MemberSignature Language="C#" Value="public void WriteXml (System.IO.Stream stream, System.Data.XmlWriteMode mode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteXml(class System.IO.Stream stream, valuetype System.Data.XmlWriteMode mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.WriteXml(System.IO.Stream,System.Data.XmlWriteMode)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteXml (stream As Stream, mode As XmlWriteMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteXml(System::IO::Stream ^ stream, System::Data::XmlWriteMode mode);" />
      <MemberSignature Language="F#" Value="member this.WriteXml : System.IO.Stream * System.Data.XmlWriteMode -&gt; unit" Usage="dataTable.WriteXml (stream, mode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" Index="0" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="mode" Type="System.Data.XmlWriteMode" Index="1" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="stream"><span data-ttu-id="f01f9-1416">要向其写入数据的流。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1416">The stream to which the data will be written.</span></span></param>
        <param name="mode"><span data-ttu-id="f01f9-1417"><see cref="T:System.Data.XmlWriteMode" /> 值之一。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1417">One of the <see cref="T:System.Data.XmlWriteMode" /> values.</span></span></param>
        <summary><span data-ttu-id="f01f9-1418">使用指定的 <see cref="T:System.Data.XmlWriteMode" /> 将 <see cref="T:System.Data.DataTable" /> 的当前数据和架构（可选）写入指定的文件。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1418">Writes the current data, and optionally the schema, for the <see cref="T:System.Data.DataTable" /> to the specified file using the specified <see cref="T:System.Data.XmlWriteMode" />.</span></span> <span data-ttu-id="f01f9-1419">若要写入架构，请将 <paramref name="mode" /> 参数的值设置为 <see langword="WriteSchema" />。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1419">To write the schema, set the value for the <paramref name="mode" /> parameter to <see langword="WriteSchema" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f01f9-1420"><xref:System.Data.DataTable.WriteXml%2A>方法提供了一种方法，用于将数据（或中的数据和架构 <xref:System.Data.DataTable> ）写入 XML 文档，而 <xref:System.Data.DataTable.WriteXmlSchema%2A> 方法只写入架构。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1420">The <xref:System.Data.DataTable.WriteXml%2A> method provides a way to write either data only, or both data and schema from a <xref:System.Data.DataTable> into an XML document, whereas the <xref:System.Data.DataTable.WriteXmlSchema%2A> method writes only the schema.</span></span> <span data-ttu-id="f01f9-1421">若要同时编写数据和架构，请使用包含参数的重载之一 <xref:System.Data.XmlWriteMode> ，并将其值设置为 `WriteSchema` 。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1421">To write both data and schema, use one of the overloads that includes the <xref:System.Data.XmlWriteMode> parameter, and set its value to `WriteSchema`.</span></span>  
  
 <span data-ttu-id="f01f9-1422">请注意，对于和方法也是 <xref:System.Data.DataTable.ReadXml%2A> 如此 <xref:System.Data.DataTable.ReadXmlSchema%2A> 。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1422">Note that the same is true for the <xref:System.Data.DataTable.ReadXml%2A> and <xref:System.Data.DataTable.ReadXmlSchema%2A> methods, respectively.</span></span> <span data-ttu-id="f01f9-1423">若要将 XML 数据或架构和数据读入到 `DataTable` 中，请使用 `ReadXml` 方法。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1423">To read XML data, or both schema and data into the `DataTable`, use the `ReadXml` method.</span></span> <span data-ttu-id="f01f9-1424">若要仅读取架构，请使用 `ReadXmlSchema` 方法。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1424">To read just the schema, use the `ReadXmlSchema` method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f01f9-1425"><xref:System.InvalidOperationException>如果在中 `DataRow` 读取或写入的列类型实现 <xref:System.Dynamic.IDynamicMetaObjectProvider> 且不实现，则将引发 <xref:System.Xml.Serialization.IXmlSerializable> 。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1425">An <xref:System.InvalidOperationException> will be thrown if a column type in the `DataRow` being read from or written to implements <xref:System.Dynamic.IDynamicMetaObjectProvider> and does not implement <xref:System.Xml.Serialization.IXmlSerializable>.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/data/adonet/dataset-datatable-dataview/datatables"><span data-ttu-id="f01f9-1426">DataTables</span><span class="sxs-lookup"><span data-stu-id="f01f9-1426">DataTables</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="WriteXml">
      <MemberSignature Language="C#" Value="public void WriteXml (System.IO.TextWriter writer, bool writeHierarchy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteXml(class System.IO.TextWriter writer, bool writeHierarchy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.WriteXml(System.IO.TextWriter,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteXml (writer As TextWriter, writeHierarchy As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteXml(System::IO::TextWriter ^ writer, bool writeHierarchy);" />
      <MemberSignature Language="F#" Value="member this.WriteXml : System.IO.TextWriter * bool -&gt; unit" Usage="dataTable.WriteXml (writer, writeHierarchy)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.IO.TextWriter" Index="0" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="writeHierarchy" Type="System.Boolean" Index="1" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="f01f9-1427">用于写入内容的 <see cref="T:System.IO.TextWriter" />。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1427">The <see cref="T:System.IO.TextWriter" /> with which to write the content.</span></span></param>
        <param name="writeHierarchy"><span data-ttu-id="f01f9-1428">如果为 <see langword="true" />，则写入当前表及其所有子代的内容。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1428">If <see langword="true" />, write the contents of the current table and all its descendants.</span></span> <span data-ttu-id="f01f9-1429">如果为 <see langword="false" />（默认值），则只写入当前表的数据。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1429">If <see langword="false" /> (the default value), write the data for the current table only.</span></span></param>
        <summary><span data-ttu-id="f01f9-1430">通过指定的 <see cref="T:System.IO.TextWriter" />，按 XML 形式编写 <see cref="T:System.Data.DataTable" /> 的当前内容。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1430">Writes the current contents of the <see cref="T:System.Data.DataTable" /> as XML using the specified <see cref="T:System.IO.TextWriter" />.</span></span> <span data-ttu-id="f01f9-1431">若要保存该表及其所有子代的数据，请将 <paramref name="writeHierarchy" /> 参数设置为 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1431">To save the data for the table and all its descendants, set the <paramref name="writeHierarchy" /> parameter to <see langword="true" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f01f9-1432"><xref:System.Data.DataTable.WriteXml%2A>方法提供了一种方法，用于将数据（或中的数据和架构 <xref:System.Data.DataTable> ）写入 XML 文档，而 <xref:System.Data.DataTable.WriteXmlSchema%2A> 方法只写入架构。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1432">The <xref:System.Data.DataTable.WriteXml%2A> method provides a way to write either data only, or both data and schema from a <xref:System.Data.DataTable> into an XML document, whereas the <xref:System.Data.DataTable.WriteXmlSchema%2A> method writes only the schema.</span></span> <span data-ttu-id="f01f9-1433">若要同时编写数据和架构，请使用包含参数的重载之一 <xref:System.Data.XmlWriteMode> ，并将其值设置为 `WriteSchema` 。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1433">To write both data and schema, use one of the overloads that includes the <xref:System.Data.XmlWriteMode> parameter, and set its value to `WriteSchema`.</span></span>  
  
 <span data-ttu-id="f01f9-1434">通常， `WriteXml` 方法只写入当前表的数据。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1434">Normally the `WriteXml` method writes the data only for the current table.</span></span> <span data-ttu-id="f01f9-1435">若要写入当前表及其所有子代的相关表的数据，请调用方法，并将 `writeHierarchy` 参数设置为 `true` 。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1435">To write the data for the current table and all its descendant, related tables, call the method with the `writeHierarchy` parameter set to `true`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f01f9-1436"><xref:System.InvalidOperationException>如果在中 `DataRow` 读取或写入的列类型实现 <xref:System.Dynamic.IDynamicMetaObjectProvider> 且不实现，则将引发 <xref:System.Xml.Serialization.IXmlSerializable> 。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1436">An <xref:System.InvalidOperationException> will be thrown if a column type in the `DataRow` being read from or written to implements <xref:System.Dynamic.IDynamicMetaObjectProvider> and does not implement <xref:System.Xml.Serialization.IXmlSerializable>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f01f9-1437">下面的控制台应用程序创建两个 <xref:System.Data.DataTable> 实例，将每个实例添加到 <xref:System.Data.DataSet> ，创建一个 <xref:System.Data.DataRelation> 与两个表相关的，然后使用 <xref:System.Data.DataTable.WriteXml%2A> 方法将父表中包含的数据写入到中 <xref:System.IO.TextWriter> 。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1437">The following console application creates two <xref:System.Data.DataTable> instances, adds each to a <xref:System.Data.DataSet>, creates a <xref:System.Data.DataRelation> relating the two tables, and then uses the <xref:System.Data.DataTable.WriteXml%2A> method to write the data contained within the parent table to a <xref:System.IO.TextWriter>.</span></span> <span data-ttu-id="f01f9-1438">该示例演示了在将参数设置为时的行为 `writeHierarchy` `true` 。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1438">The example demonstrates the behavior when setting the `writeHierarchy` parameter to `true`.</span></span>  
  
 [!code-csharp[DataWorks DataTable.WriteXml#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTable.WriteXml/CS/source.cs#1)]
 [!code-vb[DataWorks DataTable.WriteXml#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTable.WriteXml/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/data/adonet/dataset-datatable-dataview/datatables"><span data-ttu-id="f01f9-1439">DataTables</span><span class="sxs-lookup"><span data-stu-id="f01f9-1439">DataTables</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="WriteXml">
      <MemberSignature Language="C#" Value="public void WriteXml (System.IO.TextWriter writer, System.Data.XmlWriteMode mode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteXml(class System.IO.TextWriter writer, valuetype System.Data.XmlWriteMode mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.WriteXml(System.IO.TextWriter,System.Data.XmlWriteMode)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteXml (writer As TextWriter, mode As XmlWriteMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteXml(System::IO::TextWriter ^ writer, System::Data::XmlWriteMode mode);" />
      <MemberSignature Language="F#" Value="member this.WriteXml : System.IO.TextWriter * System.Data.XmlWriteMode -&gt; unit" Usage="dataTable.WriteXml (writer, mode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.IO.TextWriter" Index="0" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="mode" Type="System.Data.XmlWriteMode" Index="1" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="f01f9-1440">用于写入文档的 <see cref="T:System.IO.TextWriter" />。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1440">The <see cref="T:System.IO.TextWriter" /> used to write the document.</span></span></param>
        <param name="mode"><span data-ttu-id="f01f9-1441"><see cref="T:System.Data.XmlWriteMode" /> 值之一。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1441">One of the <see cref="T:System.Data.XmlWriteMode" /> values.</span></span></param>
        <summary><span data-ttu-id="f01f9-1442">使用指定的 <see cref="T:System.IO.TextWriter" /> 和 <see cref="T:System.Data.XmlWriteMode" /> 写入 <see cref="T:System.Data.DataTable" /> 的当前数据和架构（可选）。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1442">Writes the current data, and optionally the schema, for the <see cref="T:System.Data.DataTable" /> using the specified <see cref="T:System.IO.TextWriter" /> and <see cref="T:System.Data.XmlWriteMode" />.</span></span> <span data-ttu-id="f01f9-1443">若要写入架构，请将 <paramref name="mode" /> 参数的值设置为 <see langword="WriteSchema" />。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1443">To write the schema, set the value for the <paramref name="mode" /> parameter to <see langword="WriteSchema" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f01f9-1444"><xref:System.Data.DataTable.WriteXml%2A>方法提供了一种方法，用于将数据（或中的数据和架构 <xref:System.Data.DataTable> ）写入 XML 文档，而 <xref:System.Data.DataTable.WriteXmlSchema%2A> 方法只写入架构。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1444">The <xref:System.Data.DataTable.WriteXml%2A> method provides a way to write either data only, or both data and schema from a <xref:System.Data.DataTable> into an XML document, whereas the <xref:System.Data.DataTable.WriteXmlSchema%2A> method writes only the schema.</span></span> <span data-ttu-id="f01f9-1445">若要同时编写数据和架构，请使用包含参数的重载之一 <xref:System.Data.XmlWriteMode> ，并将其值设置为 `WriteSchema` 。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1445">To write both data and schema, use one of the overloads that includes the <xref:System.Data.XmlWriteMode> parameter, and set its value to `WriteSchema`.</span></span>  
  
 <span data-ttu-id="f01f9-1446">请注意，对于和方法也是 <xref:System.Data.DataTable.ReadXml%2A> 如此 <xref:System.Data.DataTable.ReadXmlSchema%2A> 。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1446">Note that the same is true for the <xref:System.Data.DataTable.ReadXml%2A> and <xref:System.Data.DataTable.ReadXmlSchema%2A> methods, respectively.</span></span> <span data-ttu-id="f01f9-1447">若要将 XML 数据或架构和数据读入到 `DataTable` 中，请使用 `ReadXml` 方法。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1447">To read XML data, or both schema and data into the `DataTable`, use the `ReadXml` method.</span></span> <span data-ttu-id="f01f9-1448">若要仅读取架构，请使用 `ReadXmlSchema` 方法。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1448">To read just the schema, use the `ReadXmlSchema` method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f01f9-1449"><xref:System.InvalidOperationException>如果在中 `DataRow` 读取或写入的列类型实现 <xref:System.Dynamic.IDynamicMetaObjectProvider> 且不实现，则将引发 <xref:System.Xml.Serialization.IXmlSerializable> 。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1449">An <xref:System.InvalidOperationException> will be thrown if a column type in the `DataRow` being read from or written to implements <xref:System.Dynamic.IDynamicMetaObjectProvider> and does not implement <xref:System.Xml.Serialization.IXmlSerializable>.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/data/adonet/dataset-datatable-dataview/datatables"><span data-ttu-id="f01f9-1450">DataTables</span><span class="sxs-lookup"><span data-stu-id="f01f9-1450">DataTables</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="WriteXml">
      <MemberSignature Language="C#" Value="public void WriteXml (string fileName, bool writeHierarchy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteXml(string fileName, bool writeHierarchy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.WriteXml(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteXml (fileName As String, writeHierarchy As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteXml(System::String ^ fileName, bool writeHierarchy);" />
      <MemberSignature Language="F#" Value="member this.WriteXml : string * bool -&gt; unit" Usage="dataTable.WriteXml (fileName, writeHierarchy)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" Index="0" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="writeHierarchy" Type="System.Boolean" Index="1" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="fileName"><span data-ttu-id="f01f9-1451">要向其写入 XML 数据的文件。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1451">The file to which to write the XML data.</span></span></param>
        <param name="writeHierarchy"><span data-ttu-id="f01f9-1452">如果为 <see langword="true" />，则写入当前表及其所有子代的内容。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1452">If <see langword="true" />, write the contents of the current table and all its descendants.</span></span> <span data-ttu-id="f01f9-1453">如果为 <see langword="false" />（默认值），则只写入当前表的数据。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1453">If <see langword="false" /> (the default value), write the data for the current table only.</span></span></param>
        <summary><span data-ttu-id="f01f9-1454">使用指定的文件以 XML 形式写入 <see cref="T:System.Data.DataTable" /> 的当前内容。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1454">Writes the current contents of the <see cref="T:System.Data.DataTable" /> as XML using the specified file.</span></span> <span data-ttu-id="f01f9-1455">若要保存该表及其所有子代的数据，请将 <paramref name="writeHierarchy" /> 参数设置为 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1455">To save the data for the table and all its descendants, set the <paramref name="writeHierarchy" /> parameter to <see langword="true" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f01f9-1456"><xref:System.Data.DataTable.WriteXml%2A>方法提供了一种方法，用于将数据（或中的数据和架构 <xref:System.Data.DataTable> ）写入 XML 文档，而 <xref:System.Data.DataTable.WriteXmlSchema%2A> 方法只写入架构。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1456">The <xref:System.Data.DataTable.WriteXml%2A> method provides a way to write either data only, or both data and schema from a <xref:System.Data.DataTable> into an XML document, whereas the <xref:System.Data.DataTable.WriteXmlSchema%2A> method writes only the schema.</span></span> <span data-ttu-id="f01f9-1457">若要同时编写数据和架构，请使用包含参数的重载之一 <xref:System.Data.XmlWriteMode> ，并将其值设置为 `WriteSchema` 。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1457">To write both data and schema, use one of the overloads that includes the <xref:System.Data.XmlWriteMode> parameter, and set its value to `WriteSchema`.</span></span>  
  
 <span data-ttu-id="f01f9-1458">请注意，对于和方法也是 <xref:System.Data.DataTable.ReadXml%2A> 如此 <xref:System.Data.DataTable.ReadXmlSchema%2A> 。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1458">Note that the same is true for the <xref:System.Data.DataTable.ReadXml%2A> and <xref:System.Data.DataTable.ReadXmlSchema%2A> methods, respectively.</span></span> <span data-ttu-id="f01f9-1459">若要将 XML 数据或架构和数据读入到 `DataTable` 中，请使用 `ReadXml` 方法。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1459">To read XML data, or both schema and data into the `DataTable`, use the `ReadXml` method.</span></span> <span data-ttu-id="f01f9-1460">若要仅读取架构，请使用 `ReadXmlSchema` 方法。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1460">To read just the schema, use the `ReadXmlSchema` method.</span></span>  
  
 <span data-ttu-id="f01f9-1461">通常， `WriteXml` 方法只写入当前表的数据。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1461">Normally the `WriteXml` method writes the data only for the current table.</span></span> <span data-ttu-id="f01f9-1462">若要写入当前表及其所有子代的相关表的数据，请调用方法，并将 `writeHierarchy` 参数设置为 `true` 。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1462">To write the data for the current table and all of its descendant, related tables, call the method with the `writeHierarchy` parameter set to `true`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f01f9-1463"><xref:System.InvalidOperationException>如果在中 `DataRow` 读取或写入的列类型实现 <xref:System.Dynamic.IDynamicMetaObjectProvider> 且不实现，则将引发 <xref:System.Xml.Serialization.IXmlSerializable> 。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1463">An <xref:System.InvalidOperationException> will be thrown if a column type in the `DataRow` being read from or written to implements <xref:System.Dynamic.IDynamicMetaObjectProvider> and does not implement <xref:System.Xml.Serialization.IXmlSerializable>.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/data/adonet/dataset-datatable-dataview/datatables"><span data-ttu-id="f01f9-1464">DataTables</span><span class="sxs-lookup"><span data-stu-id="f01f9-1464">DataTables</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="WriteXml">
      <MemberSignature Language="C#" Value="public void WriteXml (string fileName, System.Data.XmlWriteMode mode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteXml(string fileName, valuetype System.Data.XmlWriteMode mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.WriteXml(System.String,System.Data.XmlWriteMode)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteXml (fileName As String, mode As XmlWriteMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteXml(System::String ^ fileName, System::Data::XmlWriteMode mode);" />
      <MemberSignature Language="F#" Value="member this.WriteXml : string * System.Data.XmlWriteMode -&gt; unit" Usage="dataTable.WriteXml (fileName, mode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" Index="0" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="mode" Type="System.Data.XmlWriteMode" Index="1" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="fileName"><span data-ttu-id="f01f9-1465">将向其写入数据的文件名称。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1465">The name of the file to which the data will be written.</span></span></param>
        <param name="mode"><span data-ttu-id="f01f9-1466"><see cref="T:System.Data.XmlWriteMode" /> 值之一。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1466">One of the <see cref="T:System.Data.XmlWriteMode" /> values.</span></span></param>
        <summary><span data-ttu-id="f01f9-1467">使用指定的文件和 <see cref="T:System.Data.XmlWriteMode" /> 写入 <see cref="T:System.Data.DataTable" /> 的当前数据和架构（可选）。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1467">Writes the current data, and optionally the schema, for the <see cref="T:System.Data.DataTable" /> using the specified file and <see cref="T:System.Data.XmlWriteMode" />.</span></span> <span data-ttu-id="f01f9-1468">若要写入架构，请将 <paramref name="mode" /> 参数的值设置为 <see langword="WriteSchema" />。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1468">To write the schema, set the value for the <paramref name="mode" /> parameter to <see langword="WriteSchema" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f01f9-1469"><xref:System.Data.DataTable.WriteXml%2A>方法提供了一种方法，用于将数据（或中的数据和架构 <xref:System.Data.DataTable> ）写入 XML 文档，而 <xref:System.Data.DataTable.WriteXmlSchema%2A> 方法只写入架构。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1469">The <xref:System.Data.DataTable.WriteXml%2A> method provides a way to write either data only, or both data and schema from a <xref:System.Data.DataTable> into an XML document, whereas the <xref:System.Data.DataTable.WriteXmlSchema%2A> method writes only the schema.</span></span> <span data-ttu-id="f01f9-1470">若要同时编写数据和架构，请使用包含参数的重载之一 <xref:System.Data.XmlWriteMode> ，并将其值设置为 `WriteSchema` 。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1470">To write both data and schema, use one of the overloads that include the <xref:System.Data.XmlWriteMode> parameter, and set its value to `WriteSchema`.</span></span>  
  
 <span data-ttu-id="f01f9-1471">请注意，对于和方法也是 <xref:System.Data.DataTable.ReadXml%2A> 如此 <xref:System.Data.DataTable.ReadXmlSchema%2A> 。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1471">Note that the same is true for the <xref:System.Data.DataTable.ReadXml%2A> and <xref:System.Data.DataTable.ReadXmlSchema%2A> methods, respectively.</span></span> <span data-ttu-id="f01f9-1472">若要将 XML 数据或架构和数据读入到 `DataTable` 中，请使用 `ReadXml` 方法。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1472">To read XML data, or both schema and data into the `DataTable`, use the `ReadXml` method.</span></span> <span data-ttu-id="f01f9-1473">若要仅读取架构，请使用 `ReadXmlSchema` 方法。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1473">To read just the schema, use the `ReadXmlSchema` method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f01f9-1474"><xref:System.InvalidOperationException>如果在中 `DataRow` 读取或写入的列类型实现 <xref:System.Dynamic.IDynamicMetaObjectProvider> 且不实现，则将引发 <xref:System.Xml.Serialization.IXmlSerializable> 。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1474">An <xref:System.InvalidOperationException> will be thrown if a column type in the `DataRow` being read from or written to implements <xref:System.Dynamic.IDynamicMetaObjectProvider> and does not implement <xref:System.Xml.Serialization.IXmlSerializable>.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/data/adonet/dataset-datatable-dataview/datatables"><span data-ttu-id="f01f9-1475">DataTables</span><span class="sxs-lookup"><span data-stu-id="f01f9-1475">DataTables</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="WriteXml">
      <MemberSignature Language="C#" Value="public void WriteXml (System.Xml.XmlWriter writer, bool writeHierarchy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteXml(class System.Xml.XmlWriter writer, bool writeHierarchy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteXml (writer As XmlWriter, writeHierarchy As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteXml(System::Xml::XmlWriter ^ writer, bool writeHierarchy);" />
      <MemberSignature Language="F#" Value="member this.WriteXml : System.Xml.XmlWriter * bool -&gt; unit" Usage="dataTable.WriteXml (writer, writeHierarchy)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" Index="0" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="writeHierarchy" Type="System.Boolean" Index="1" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="f01f9-1476">用于写入内容的 <see cref="T:System.Xml.XmlWriter" />。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1476">The <see cref="T:System.Xml.XmlWriter" /> with which to write the contents.</span></span></param>
        <param name="writeHierarchy"><span data-ttu-id="f01f9-1477">如果为 <see langword="true" />，则写入当前表及其所有子代的内容。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1477">If <see langword="true" />, write the contents of the current table and all its descendants.</span></span> <span data-ttu-id="f01f9-1478">如果为 <see langword="false" />（默认值），则只写入当前表的数据。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1478">If <see langword="false" /> (the default value), write the data for the current table only.</span></span></param>
        <summary><span data-ttu-id="f01f9-1479">通过指定的 <see cref="T:System.Xml.XmlWriter" />，按 XML 形式编写 <see cref="T:System.Data.DataTable" /> 的当前内容。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1479">Writes the current contents of the <see cref="T:System.Data.DataTable" /> as XML using the specified <see cref="T:System.Xml.XmlWriter" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f01f9-1480"><xref:System.Data.DataTable.WriteXml%2A>方法提供了一种方法，用于将数据（或中的数据和架构 <xref:System.Data.DataTable> ）写入 XML 文档，而 <xref:System.Data.DataTable.WriteXmlSchema%2A> 方法只写入架构。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1480">The <xref:System.Data.DataTable.WriteXml%2A> method provides a way to write either data only, or both data and schema from a <xref:System.Data.DataTable> into an XML document, whereas the <xref:System.Data.DataTable.WriteXmlSchema%2A> method writes only the schema.</span></span> <span data-ttu-id="f01f9-1481">若要同时编写数据和架构，请使用包含参数的重载之一 <xref:System.Data.XmlWriteMode> ，并将其值设置为 `WriteSchema` 。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1481">To write both data and schema, use one of the overloads that include the <xref:System.Data.XmlWriteMode> parameter, and set its value to `WriteSchema`.</span></span>  
  
 <span data-ttu-id="f01f9-1482">请注意，对于和方法也是 <xref:System.Data.DataTable.ReadXml%2A> 如此 <xref:System.Data.DataTable.ReadXmlSchema%2A> 。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1482">Note that the same is true for the <xref:System.Data.DataTable.ReadXml%2A> and <xref:System.Data.DataTable.ReadXmlSchema%2A> methods, respectively.</span></span> <span data-ttu-id="f01f9-1483">若要将 XML 数据或架构和数据读入到 `DataTable` 中，请使用 `ReadXml` 方法。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1483">To read XML data, or both schema and data into the `DataTable`, use the `ReadXml` method.</span></span> <span data-ttu-id="f01f9-1484">若要仅读取架构，请使用 `ReadXmlSchema` 方法。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1484">To read just the schema, use the `ReadXmlSchema` method.</span></span>  
  
 <span data-ttu-id="f01f9-1485">通常， `WriteXml` 方法只写入当前表的数据。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1485">Normally the `WriteXml` method writes the data only for the current table.</span></span> <span data-ttu-id="f01f9-1486">若要写入当前表及其整个子代的相关表的数据，请调用方法，并将 `writeHierarchy` 参数设置为 `true` 。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1486">To write the data for the current table and its entire descendant, related tables, call the method with the `writeHierarchy` parameter set to `true`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f01f9-1487"><xref:System.InvalidOperationException>如果在中 `DataRow` 读取或写入的列类型实现 <xref:System.Dynamic.IDynamicMetaObjectProvider> 且不实现，则将引发 <xref:System.Xml.Serialization.IXmlSerializable> 。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1487">An <xref:System.InvalidOperationException> will be thrown if a column type in the `DataRow` being read from or written to implements <xref:System.Dynamic.IDynamicMetaObjectProvider> and does not implement <xref:System.Xml.Serialization.IXmlSerializable>.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/data/adonet/dataset-datatable-dataview/datatables"><span data-ttu-id="f01f9-1488">DataTables</span><span class="sxs-lookup"><span data-stu-id="f01f9-1488">DataTables</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="WriteXml">
      <MemberSignature Language="C#" Value="public void WriteXml (System.Xml.XmlWriter writer, System.Data.XmlWriteMode mode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteXml(class System.Xml.XmlWriter writer, valuetype System.Data.XmlWriteMode mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter,System.Data.XmlWriteMode)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteXml (writer As XmlWriter, mode As XmlWriteMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteXml(System::Xml::XmlWriter ^ writer, System::Data::XmlWriteMode mode);" />
      <MemberSignature Language="F#" Value="member this.WriteXml : System.Xml.XmlWriter * System.Data.XmlWriteMode -&gt; unit" Usage="dataTable.WriteXml (writer, mode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" Index="0" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="mode" Type="System.Data.XmlWriteMode" Index="1" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="f01f9-1489">用于写入文档的 <see cref="T:System.Xml.XmlWriter" />。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1489">The <see cref="T:System.Xml.XmlWriter" /> used to write the document.</span></span></param>
        <param name="mode"><span data-ttu-id="f01f9-1490"><see cref="T:System.Data.XmlWriteMode" /> 值之一。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1490">One of the <see cref="T:System.Data.XmlWriteMode" /> values.</span></span></param>
        <summary><span data-ttu-id="f01f9-1491">使用指定的 <see cref="T:System.Xml.XmlWriter" /> 和 <see cref="T:System.Data.XmlWriteMode" /> 写入 <see cref="T:System.Data.DataTable" /> 的当前数据和架构（可选）。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1491">Writes the current data, and optionally the schema, for the <see cref="T:System.Data.DataTable" /> using the specified <see cref="T:System.Xml.XmlWriter" /> and <see cref="T:System.Data.XmlWriteMode" />.</span></span> <span data-ttu-id="f01f9-1492">若要写入架构，请将 <paramref name="mode" /> 参数的值设置为 <see langword="WriteSchema" />。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1492">To write the schema, set the value for the <paramref name="mode" /> parameter to <see langword="WriteSchema" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f01f9-1493"><xref:System.Data.DataTable.WriteXml%2A>方法提供了一种方法，用于将数据（或中的数据和架构 <xref:System.Data.DataTable> ）写入 XML 文档，而 <xref:System.Data.DataTable.WriteXmlSchema%2A> 方法只写入架构。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1493">The <xref:System.Data.DataTable.WriteXml%2A> method provides a way to write either data only, or both data and schema from a <xref:System.Data.DataTable> into an XML document, whereas the <xref:System.Data.DataTable.WriteXmlSchema%2A> method writes only the schema.</span></span> <span data-ttu-id="f01f9-1494">若要同时编写数据和架构，请使用包含参数的重载之一 <xref:System.Data.XmlWriteMode> ，并将其值设置为 `WriteSchema` 。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1494">To write both data and schema, use one of the overloads that include the <xref:System.Data.XmlWriteMode> parameter, and set its value to `WriteSchema`.</span></span>  
  
 <span data-ttu-id="f01f9-1495">请注意，对于和方法也是 <xref:System.Data.DataTable.ReadXml%2A> 如此 <xref:System.Data.DataTable.ReadXmlSchema%2A> 。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1495">Note that the same is true for the <xref:System.Data.DataTable.ReadXml%2A> and <xref:System.Data.DataTable.ReadXmlSchema%2A> methods, respectively.</span></span> <span data-ttu-id="f01f9-1496">若要将 XML 数据或架构和数据读入到 `DataTable` 中，请使用 `ReadXml` 方法。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1496">To read XML data, or both schema and data into the `DataTable`, use the `ReadXml` method.</span></span> <span data-ttu-id="f01f9-1497">若要仅读取架构，请使用 `ReadXmlSchema` 方法。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1497">To read just the schema, use the `ReadXmlSchema` method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f01f9-1498"><xref:System.InvalidOperationException>如果在中 `DataRow` 读取或写入的列类型实现 <xref:System.Dynamic.IDynamicMetaObjectProvider> 且不实现，则将引发 <xref:System.Xml.Serialization.IXmlSerializable> 。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1498">An <xref:System.InvalidOperationException> will be thrown if a column type in the `DataRow` being read from or written to implements <xref:System.Dynamic.IDynamicMetaObjectProvider> and does not implement <xref:System.Xml.Serialization.IXmlSerializable>.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/data/adonet/dataset-datatable-dataview/datatables"><span data-ttu-id="f01f9-1499">DataTables</span><span class="sxs-lookup"><span data-stu-id="f01f9-1499">DataTables</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="WriteXml">
      <MemberSignature Language="C#" Value="public void WriteXml (System.IO.Stream stream, System.Data.XmlWriteMode mode, bool writeHierarchy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteXml(class System.IO.Stream stream, valuetype System.Data.XmlWriteMode mode, bool writeHierarchy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.WriteXml(System.IO.Stream,System.Data.XmlWriteMode,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteXml (stream As Stream, mode As XmlWriteMode, writeHierarchy As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteXml(System::IO::Stream ^ stream, System::Data::XmlWriteMode mode, bool writeHierarchy);" />
      <MemberSignature Language="F#" Value="member this.WriteXml : System.IO.Stream * System.Data.XmlWriteMode * bool -&gt; unit" Usage="dataTable.WriteXml (stream, mode, writeHierarchy)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" Index="0" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="mode" Type="System.Data.XmlWriteMode" Index="1" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="writeHierarchy" Type="System.Boolean" Index="2" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="stream"><span data-ttu-id="f01f9-1500">要向其写入数据的流。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1500">The stream to which the data will be written.</span></span></param>
        <param name="mode"><span data-ttu-id="f01f9-1501"><see cref="T:System.Data.XmlWriteMode" /> 值之一。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1501">One of the <see cref="T:System.Data.XmlWriteMode" /> values.</span></span></param>
        <param name="writeHierarchy"><span data-ttu-id="f01f9-1502">如果为 <see langword="true" />，则写入当前表及其所有子代的内容。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1502">If <see langword="true" />, write the contents of the current table and all its descendants.</span></span> <span data-ttu-id="f01f9-1503">如果为 <see langword="false" />（默认值），则只写入当前表的数据。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1503">If <see langword="false" /> (the default value), write the data for the current table only.</span></span></param>
        <summary><span data-ttu-id="f01f9-1504">使用指定的 <see cref="T:System.Data.XmlWriteMode" /> 将 <see cref="T:System.Data.DataTable" /> 的当前数据和架构（可选）写入指定的文件。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1504">Writes the current data, and optionally the schema, for the <see cref="T:System.Data.DataTable" /> to the specified file using the specified <see cref="T:System.Data.XmlWriteMode" />.</span></span> <span data-ttu-id="f01f9-1505">若要写入架构，请将 <paramref name="mode" /> 参数的值设置为 <see langword="WriteSchema" />。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1505">To write the schema, set the value for the <paramref name="mode" /> parameter to <see langword="WriteSchema" />.</span></span> <span data-ttu-id="f01f9-1506">若要保存该表及其所有子代的数据，请将 <paramref name="writeHierarchy" /> 参数设置为 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1506">To save the data for the table and all its descendants, set the <paramref name="writeHierarchy" /> parameter to <see langword="true" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f01f9-1507"><xref:System.Data.DataTable.WriteXml%2A>方法提供了一种方法，用于将数据（或中的数据和架构 `DataTable` ）写入 XML 文档，而 <xref:System.Data.DataTable.WriteXmlSchema%2A> 方法只写入架构。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1507">The <xref:System.Data.DataTable.WriteXml%2A> method provides a way to write either data only, or both data and schema from a `DataTable` into an XML document, whereas the <xref:System.Data.DataTable.WriteXmlSchema%2A> method writes only the schema.</span></span> <span data-ttu-id="f01f9-1508">若要同时编写数据和架构，请使用包含参数的重载之一 `XmlWriteMode` ，并将其值设置为 `WriteSchema` 。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1508">To write both data and schema, use one of the overloads that includes the `XmlWriteMode` parameter, and set its value to `WriteSchema`.</span></span>  
  
 <span data-ttu-id="f01f9-1509">请注意，对于和方法也是 <xref:System.Data.DataTable.ReadXml%2A> 如此 <xref:System.Data.DataTable.ReadXmlSchema%2A> 。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1509">Note that the same is true for the <xref:System.Data.DataTable.ReadXml%2A> and <xref:System.Data.DataTable.ReadXmlSchema%2A> methods, respectively.</span></span> <span data-ttu-id="f01f9-1510">若要将 XML 数据或架构和数据读入到 `DataTable` 中，请使用 `ReadXml` 方法。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1510">To read XML data, or both schema and data into the `DataTable`, use the `ReadXml` method.</span></span> <span data-ttu-id="f01f9-1511">若要仅读取架构，请使用 `ReadXmlSchema` 方法。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1511">To read just the schema, use the `ReadXmlSchema` method.</span></span>  
  
 <span data-ttu-id="f01f9-1512">通常， `WriteXml` 方法仅保存当前表的数据。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1512">Normally, the `WriteXml` method saves data only for the current table.</span></span> <span data-ttu-id="f01f9-1513">`WriteXml`方法提供了一种方法，用于将数据（或中的数据和架构 `DataTable` ）写入 XML 文档，而 `WriteXmlSchema` 方法只写入架构。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1513">The `WriteXml` method provides a way to write either data only, or both data and schema from a `DataTable` into an XML document, whereas the `WriteXmlSchema` method writes only the schema.</span></span> <span data-ttu-id="f01f9-1514">若要同时编写数据和架构，请使用包含参数的重载之一 `XmlWriteMode` ，并将其值设置为 `WriteSchema` 。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1514">To write both data and schema, use one of the overloads that includes the `XmlWriteMode` parameter, and set its value to `WriteSchema`.</span></span>  
  
 <span data-ttu-id="f01f9-1515">请注意，对于和方法也是 <xref:System.Data.DataTable.ReadXml%2A> 如此 <xref:System.Data.DataTable.ReadXmlSchema%2A> 。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1515">Note that the same is true for the <xref:System.Data.DataTable.ReadXml%2A> and <xref:System.Data.DataTable.ReadXmlSchema%2A> methods, respectively.</span></span> <span data-ttu-id="f01f9-1516">若要将 XML 数据或架构和数据读入到 `DataTable` 中，请使用 `ReadXml` 方法。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1516">To read XML data, or both schema and data into the `DataTable`, use the `ReadXml` method.</span></span> <span data-ttu-id="f01f9-1517">若要仅读取架构，请使用 `ReadXmlSchema` 方法。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1517">To read just the schema, use the `ReadXmlSchema` method.</span></span>  
  
 <span data-ttu-id="f01f9-1518">通常， `WriteXml` 方法只写入当前表的数据。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1518">Normally the `WriteXml` method writes the data only for the current table.</span></span> <span data-ttu-id="f01f9-1519">若要写入当前表及其所有子代的相关表的数据，请调用方法，并将 `writeHierarchy` 参数设置为 `true` 。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1519">To write the data for the current table and all of its descendant, related tables, call the method with the `writeHierarchy` parameter set to `true`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f01f9-1520"><xref:System.InvalidOperationException>如果在中 `DataRow` 读取或写入的列类型实现 <xref:System.Dynamic.IDynamicMetaObjectProvider> 且不实现，则将引发 <xref:System.Xml.Serialization.IXmlSerializable> 。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1520">An <xref:System.InvalidOperationException> will be thrown if a column type in the `DataRow` being read from or written to implements <xref:System.Dynamic.IDynamicMetaObjectProvider> and does not implement <xref:System.Xml.Serialization.IXmlSerializable>.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/data/adonet/dataset-datatable-dataview/datatables"><span data-ttu-id="f01f9-1521">DataTables</span><span class="sxs-lookup"><span data-stu-id="f01f9-1521">DataTables</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="WriteXml">
      <MemberSignature Language="C#" Value="public void WriteXml (System.IO.TextWriter writer, System.Data.XmlWriteMode mode, bool writeHierarchy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteXml(class System.IO.TextWriter writer, valuetype System.Data.XmlWriteMode mode, bool writeHierarchy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.WriteXml(System.IO.TextWriter,System.Data.XmlWriteMode,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteXml (writer As TextWriter, mode As XmlWriteMode, writeHierarchy As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteXml(System::IO::TextWriter ^ writer, System::Data::XmlWriteMode mode, bool writeHierarchy);" />
      <MemberSignature Language="F#" Value="member this.WriteXml : System.IO.TextWriter * System.Data.XmlWriteMode * bool -&gt; unit" Usage="dataTable.WriteXml (writer, mode, writeHierarchy)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.IO.TextWriter" Index="0" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="mode" Type="System.Data.XmlWriteMode" Index="1" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="writeHierarchy" Type="System.Boolean" Index="2" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="f01f9-1522">用于写入文档的 <see cref="T:System.IO.TextWriter" />。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1522">The <see cref="T:System.IO.TextWriter" /> used to write the document.</span></span></param>
        <param name="mode"><span data-ttu-id="f01f9-1523"><see cref="T:System.Data.XmlWriteMode" /> 值之一。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1523">One of the <see cref="T:System.Data.XmlWriteMode" /> values.</span></span></param>
        <param name="writeHierarchy"><span data-ttu-id="f01f9-1524">如果为 <see langword="true" />，则写入当前表及其所有子代的内容。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1524">If <see langword="true" />, write the contents of the current table and all its descendants.</span></span> <span data-ttu-id="f01f9-1525">如果为 <see langword="false" />（默认值），则只写入当前表的数据。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1525">If <see langword="false" /> (the default value), write the data for the current table only.</span></span></param>
        <summary><span data-ttu-id="f01f9-1526">使用指定的 <see cref="T:System.IO.TextWriter" /> 和 <see cref="T:System.Data.XmlWriteMode" /> 写入 <see cref="T:System.Data.DataTable" /> 的当前数据和架构（可选）。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1526">Writes the current data, and optionally the schema, for the <see cref="T:System.Data.DataTable" /> using the specified <see cref="T:System.IO.TextWriter" /> and <see cref="T:System.Data.XmlWriteMode" />.</span></span> <span data-ttu-id="f01f9-1527">若要写入架构，请将 <paramref name="mode" /> 参数的值设置为 <see langword="WriteSchema" />。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1527">To write the schema, set the value for the <paramref name="mode" /> parameter to <see langword="WriteSchema" />.</span></span> <span data-ttu-id="f01f9-1528">若要保存该表及其所有子代的数据，请将 <paramref name="writeHierarchy" /> 参数设置为 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1528">To save the data for the table and all its descendants, set the <paramref name="writeHierarchy" /> parameter to <see langword="true" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f01f9-1529"><xref:System.Data.DataTable.WriteXml%2A>方法提供了一种方法，用于将数据（或中的数据和架构 <xref:System.Data.DataTable> ）写入 XML 文档，而 <xref:System.Data.DataTable.WriteXmlSchema%2A> 方法只写入架构。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1529">The <xref:System.Data.DataTable.WriteXml%2A> method provides a way to write either data only, or both data and schema from a <xref:System.Data.DataTable> into an XML document, whereas the <xref:System.Data.DataTable.WriteXmlSchema%2A> method writes only the schema.</span></span> <span data-ttu-id="f01f9-1530">若要同时编写数据和架构，请使用包含参数的重载之一 <xref:System.Data.XmlWriteMode> ，并将其值设置为 `WriteSchema` 。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1530">To write both data and schema, use one of the overloads that includes the <xref:System.Data.XmlWriteMode> parameter, and set its value to `WriteSchema`.</span></span>  
  
 <span data-ttu-id="f01f9-1531">请注意，对于和方法也是 <xref:System.Data.DataTable.ReadXml%2A> 如此 <xref:System.Data.DataTable.ReadXmlSchema%2A> 。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1531">Note that the same is true for the <xref:System.Data.DataTable.ReadXml%2A> and <xref:System.Data.DataTable.ReadXmlSchema%2A> methods, respectively.</span></span> <span data-ttu-id="f01f9-1532">若要将 XML 数据或架构和数据读入到 `DataTable` 中，请使用 `ReadXml` 方法。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1532">To read XML data, or both schema and data into the `DataTable`, use the `ReadXml` method.</span></span> <span data-ttu-id="f01f9-1533">若要仅读取架构，请使用 `ReadXmlSchema` 方法。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1533">To read just the schema, use the `ReadXmlSchema` method.</span></span>  
  
 <span data-ttu-id="f01f9-1534">通常， `WriteXml` 方法仅保存当前表的数据。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1534">Normally, the `WriteXml` method saves data only for the current table.</span></span> <span data-ttu-id="f01f9-1535"><xref:System.Data.DataTable.WriteXml%2A>方法提供了一种方法，用于将数据（或中的数据和架构 <xref:System.Data.DataTable> ）写入 XML 文档，而 <xref:System.Data.DataTable.WriteXmlSchema%2A> 方法只写入架构。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1535">The <xref:System.Data.DataTable.WriteXml%2A> method provides a way to write either data only, or both data and schema from a <xref:System.Data.DataTable> into an XML document, whereas the <xref:System.Data.DataTable.WriteXmlSchema%2A> method writes only the schema.</span></span> <span data-ttu-id="f01f9-1536">若要同时编写数据和架构，请使用包含参数的重载之一 <xref:System.Data.XmlWriteMode> ，并将其值设置为 `WriteSchema` 。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1536">To write both data and schema, use one of the overloads that includes the <xref:System.Data.XmlWriteMode> parameter, and set its value to `WriteSchema`.</span></span>  
  
 <span data-ttu-id="f01f9-1537">请注意，对于和方法也是 <xref:System.Data.DataTable.ReadXml%2A> 如此 <xref:System.Data.DataTable.ReadXmlSchema%2A> 。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1537">Note that the same is true for the <xref:System.Data.DataTable.ReadXml%2A> and <xref:System.Data.DataTable.ReadXmlSchema%2A> methods, respectively.</span></span> <span data-ttu-id="f01f9-1538">若要将 XML 数据或架构和数据读入到 `DataTable` 中，请使用 `ReadXml` 方法。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1538">To read XML data, or both schema and data into the `DataTable`, use the `ReadXml` method.</span></span> <span data-ttu-id="f01f9-1539">若要仅读取架构，请使用 `ReadXmlSchema` 方法。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1539">To read just the schema, use the `ReadXmlSchema` method.</span></span>  
  
 <span data-ttu-id="f01f9-1540">通常， `WriteXml` 方法只写入当前表的数据。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1540">Normally the `WriteXml` method writes the data only for the current table.</span></span> <span data-ttu-id="f01f9-1541">若要写入当前表及其所有子代的相关表的数据，请调用方法，并将 `writeHierarchy` 参数设置为 `true` 。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1541">To write the data for the current table and all of its descendant, related tables, call the method with the `writeHierarchy` parameter set to `true`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f01f9-1542"><xref:System.InvalidOperationException>如果在中 `DataRow` 读取或写入的列类型实现 <xref:System.Dynamic.IDynamicMetaObjectProvider> 且不实现，则将引发 <xref:System.Xml.Serialization.IXmlSerializable> 。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1542">An <xref:System.InvalidOperationException> will be thrown if a column type in the `DataRow` being read from or written to implements <xref:System.Dynamic.IDynamicMetaObjectProvider> and does not implement <xref:System.Xml.Serialization.IXmlSerializable>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f01f9-1543">下面的控制台应用程序创建两个 <xref:System.Data.DataTable> 实例，将每个实例添加到 <xref:System.Data.DataSet> ，创建一个 <xref:System.Data.DataRelation> 与两个表相关的，然后使用 <xref:System.Data.DataTable.WriteXml%2A> 方法将父表中包含的数据写入到中 <xref:System.IO.TextWriter> 。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1543">The following console application creates two <xref:System.Data.DataTable> instances, adds each to a <xref:System.Data.DataSet>, creates a <xref:System.Data.DataRelation> relating the two tables, and then uses the <xref:System.Data.DataTable.WriteXml%2A> method to write the data contained within the parent table to a <xref:System.IO.TextWriter>.</span></span> <span data-ttu-id="f01f9-1544">该示例演示了在将参数设置 `writeHierarchy` 为其每个值时的行为。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1544">The example demonstrates the behavior when setting the `writeHierarchy` parameter to each of its values.</span></span>  
  
 [!code-csharp[DataWorks DataTable.WriteXmlIO#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTable.WriteXmlIO/CS/source.cs#1)]
 [!code-vb[DataWorks DataTable.WriteXmlIO#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTable.WriteXmlIO/VB/source.vb#1)]  
  
 <span data-ttu-id="f01f9-1545">该示例在控制台窗口中显示以下输出：</span><span class="sxs-lookup"><span data-stu-id="f01f9-1545">The example displays the following output in the console window:</span></span>  
  
```  
==============================  
Customer table, without hierarchy  
==============================  
<NewDataSet>  
  <xs:schema id="NewDataSet" xmlns="" xmlns:xs="http://www.w3.org/2001/XMLSchema  
" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">  
    <xs:element name="NewDataSet" msdata:IsDataSet="true" msdata:MainDataTable="Table1">  
      <xs:complexType>  
        <xs:choice minOccurs="0" maxOccurs="unbounded">  
          <xs:element name="Table1">  
            <xs:complexType>  
              <xs:sequence>  
                <xs:element name="ID" type="xs:int" />  
                <xs:element name="Name" type="xs:string" minOccurs="0" />  
              </xs:sequence>  
            </xs:complexType>  
          </xs:element>  
        </xs:choice>  
      </xs:complexType>  
      <xs:unique name="Constraint1" msdata:PrimaryKey="true">  
        <xs:selector xpath=".//Table1" />  
        <xs:field xpath="ID" />  
      </xs:unique>  
    </xs:element>  
  </xs:schema>  
  <Table1>  
    <ID>1</ID>  
    <Name>Mary</Name>  
  </Table1>  
  <Table1>  
    <ID>2</ID>  
    <Name>Andy</Name>  
  </Table1>  
  <Table1>  
    <ID>3</ID>  
    <Name>Peter</Name>  
  </Table1>  
  <Table1>  
    <ID>4</ID>  
    <Name>Russ</Name>  
  </Table1>  
</NewDataSet>  
==============================  
Customer table, with hierarchy  
==============================  
<NewDataSet>  
  <xs:schema id="NewDataSet" xmlns="" xmlns:xs="http://www.w3.org/2001/XMLSchema  
" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">  
    <xs:element name="NewDataSet" msdata:IsDataSet="true" msdata:MainDataTable="Table1">  
      <xs:complexType>  
        <xs:choice minOccurs="0" maxOccurs="unbounded">  
          <xs:element name="Table1">  
            <xs:complexType>  
              <xs:sequence>  
                <xs:element name="ID" type="xs:int" />  
                <xs:element name="Name" type="xs:string" minOccurs="0" />  
              </xs:sequence>  
            </xs:complexType>  
          </xs:element>  
          <xs:element name="Table2">  
            <xs:complexType>  
              <xs:sequence>  
                <xs:element name="OrderID" type="xs:int" />  
                <xs:element name="CustomerID" type="xs:int" minOccurs="0" />  
                <xs:element name="OrderDate" type="xs:dateTime" minOccurs="0" />  
  
              </xs:sequence>  
            </xs:complexType>  
          </xs:element>  
        </xs:choice>  
      </xs:complexType>  
      <xs:unique name="Constraint1" msdata:PrimaryKey="true">  
        <xs:selector xpath=".//Table1" />  
        <xs:field xpath="ID" />  
      </xs:unique>  
      <xs:unique name="Table2_Constraint1" msdata:ConstraintName="Constraint1" m  
sdata:PrimaryKey="true">  
        <xs:selector xpath=".//Table2" />  
        <xs:field xpath="OrderID" />  
      </xs:unique>  
      <xs:keyref name="CustomerOrder" refer="Constraint1">  
        <xs:selector xpath=".//Table2" />  
        <xs:field xpath="CustomerID" />  
      </xs:keyref>  
    </xs:element>  
  </xs:schema>  
  <Table1>  
    <ID>1</ID>  
    <Name>Mary</Name>  
  </Table1>  
  <Table1>  
    <ID>2</ID>  
    <Name>Andy</Name>  
  </Table1>  
  <Table1>  
    <ID>3</ID>  
    <Name>Peter</Name>  
  </Table1>  
  <Table1>  
    <ID>4</ID>  
    <Name>Russ</Name>  
  </Table1>  
  <Table2>  
    <OrderID>1</OrderID>  
    <CustomerID>1</CustomerID>  
    <OrderDate>2003-12-02T00:00:00.0000000-08:00</OrderDate>  
  </Table2>  
  <Table2>  
    <OrderID>2</OrderID>  
    <CustomerID>1</CustomerID>  
    <OrderDate>2004-01-03T00:00:00.0000000-08:00</OrderDate>  
  </Table2>  
  <Table2>  
    <OrderID>3</OrderID>  
    <CustomerID>2</CustomerID>  
    <OrderDate>2004-11-13T00:00:00.0000000-08:00</OrderDate>  
  </Table2>  
  <Table2>  
    <OrderID>4</OrderID>  
    <CustomerID>3</CustomerID>  
    <OrderDate>2004-05-16T00:00:00.0000000-07:00</OrderDate>  
  </Table2>  
  <Table2>  
    <OrderID>5</OrderID>  
    <CustomerID>3</CustomerID>  
    <OrderDate>2004-05-22T00:00:00.0000000-07:00</OrderDate>  
  </Table2>  
  <Table2>  
    <OrderID>6</OrderID>  
    <CustomerID>4</CustomerID>  
    <OrderDate>2004-06-15T00:00:00.0000000-07:00</OrderDate>  
  </Table2>  
</NewDataSet>  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/data/adonet/dataset-datatable-dataview/datatables"><span data-ttu-id="f01f9-1546">DataTables</span><span class="sxs-lookup"><span data-stu-id="f01f9-1546">DataTables</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="WriteXml">
      <MemberSignature Language="C#" Value="public void WriteXml (string fileName, System.Data.XmlWriteMode mode, bool writeHierarchy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteXml(string fileName, valuetype System.Data.XmlWriteMode mode, bool writeHierarchy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.WriteXml(System.String,System.Data.XmlWriteMode,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteXml (fileName As String, mode As XmlWriteMode, writeHierarchy As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteXml(System::String ^ fileName, System::Data::XmlWriteMode mode, bool writeHierarchy);" />
      <MemberSignature Language="F#" Value="member this.WriteXml : string * System.Data.XmlWriteMode * bool -&gt; unit" Usage="dataTable.WriteXml (fileName, mode, writeHierarchy)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" Index="0" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="mode" Type="System.Data.XmlWriteMode" Index="1" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="writeHierarchy" Type="System.Boolean" Index="2" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="fileName"><span data-ttu-id="f01f9-1547">将向其写入数据的文件名称。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1547">The name of the file to which the data will be written.</span></span></param>
        <param name="mode"><span data-ttu-id="f01f9-1548"><see cref="T:System.Data.XmlWriteMode" /> 值之一。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1548">One of the <see cref="T:System.Data.XmlWriteMode" /> values.</span></span></param>
        <param name="writeHierarchy"><span data-ttu-id="f01f9-1549">如果为 <see langword="true" />，则写入当前表及其所有子代的内容。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1549">If <see langword="true" />, write the contents of the current table and all its descendants.</span></span> <span data-ttu-id="f01f9-1550">如果为 <see langword="false" />（默认值），则只写入当前表的数据。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1550">If <see langword="false" /> (the default value), write the data for the current table only.</span></span></param>
        <summary><span data-ttu-id="f01f9-1551">使用指定的文件和 <see cref="T:System.Data.XmlWriteMode" /> 写入 <see cref="T:System.Data.DataTable" /> 的当前数据和架构（可选）。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1551">Writes the current data, and optionally the schema, for the <see cref="T:System.Data.DataTable" /> using the specified file and <see cref="T:System.Data.XmlWriteMode" />.</span></span> <span data-ttu-id="f01f9-1552">若要写入架构，请将 <paramref name="mode" /> 参数的值设置为 <see langword="WriteSchema" />。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1552">To write the schema, set the value for the <paramref name="mode" /> parameter to <see langword="WriteSchema" />.</span></span> <span data-ttu-id="f01f9-1553">若要保存该表及其所有子代的数据，请将 <paramref name="writeHierarchy" /> 参数设置为 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1553">To save the data for the table and all its descendants, set the <paramref name="writeHierarchy" /> parameter to <see langword="true" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f01f9-1554"><xref:System.Data.DataTable.WriteXml%2A>方法提供了一种方法，用于将数据（或中的数据和架构 <xref:System.Data.DataTable> ）写入 XML 文档，而 <xref:System.Data.DataTable.WriteXmlSchema%2A> 方法只写入架构。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1554">The <xref:System.Data.DataTable.WriteXml%2A> method provides a way to write either data only, or both data and schema from a <xref:System.Data.DataTable> into an XML document, whereas the <xref:System.Data.DataTable.WriteXmlSchema%2A> method writes only the schema.</span></span> <span data-ttu-id="f01f9-1555">若要同时编写数据和架构，请使用包含参数的重载之一 <xref:System.Data.XmlWriteMode> ，并将其值设置为 `WriteSchema` 。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1555">To write both data and schema, use one of the overloads that include the <xref:System.Data.XmlWriteMode> parameter, and set its value to `WriteSchema`.</span></span>  
  
 <span data-ttu-id="f01f9-1556">请注意，对于和方法也是 <xref:System.Data.DataTable.ReadXml%2A> 如此 <xref:System.Data.DataTable.ReadXmlSchema%2A> 。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1556">Note that the same is true for the <xref:System.Data.DataTable.ReadXml%2A> and <xref:System.Data.DataTable.ReadXmlSchema%2A> methods, respectively.</span></span> <span data-ttu-id="f01f9-1557">若要将 XML 数据或架构和数据读入到 `DataTable` 中，请使用 `ReadXml` 方法。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1557">To read XML data, or both schema and data into the `DataTable`, use the `ReadXml` method.</span></span> <span data-ttu-id="f01f9-1558">若要仅读取架构，请使用 `ReadXmlSchema` 方法。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1558">To read just the schema, use the `ReadXmlSchema` method.</span></span>  
  
 <span data-ttu-id="f01f9-1559">通常， `WriteXml` 方法仅保存当前表的数据。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1559">Normally, the `WriteXml` method saves data only for the current table.</span></span> <span data-ttu-id="f01f9-1560">如果要保存当前表和所有架构的数据，该 <xref:System.Data.DataTable.WriteXml%2A> 方法提供了一种只将数据写入到 XML 文档或将数据和架构写入 XML 文档的方法 <xref:System.Data.DataTable> ，而 <xref:System.Data.DataTable.WriteXmlSchema%2A> 方法只写入架构。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1560">If you want to save the data for the current table and all of schema, the <xref:System.Data.DataTable.WriteXml%2A> method provides a way to write either data only, or both data and schema from a <xref:System.Data.DataTable> into an XML document, whereas the <xref:System.Data.DataTable.WriteXmlSchema%2A> method writes only the schema.</span></span> <span data-ttu-id="f01f9-1561">若要同时编写数据和架构，请使用包含参数的重载之一 <xref:System.Data.XmlWriteMode> ，并将其值设置为 `WriteSchema` 。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1561">To write both data and schema, use one of the overloads that include the <xref:System.Data.XmlWriteMode> parameter, and set its value to `WriteSchema`.</span></span>  
  
 <span data-ttu-id="f01f9-1562">请注意，对于和方法也是 <xref:System.Data.DataTable.ReadXml%2A> 如此 <xref:System.Data.DataTable.ReadXmlSchema%2A> 。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1562">Note that the same is true for the <xref:System.Data.DataTable.ReadXml%2A> and <xref:System.Data.DataTable.ReadXmlSchema%2A> methods, respectively.</span></span> <span data-ttu-id="f01f9-1563">若要将 XML 数据或架构和数据读入到 `DataTable` 中，请使用 `ReadXml` 方法。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1563">To read XML data, or both schema and data into the `DataTable`, use the `ReadXml` method.</span></span> <span data-ttu-id="f01f9-1564">若要仅读取架构，请使用 `ReadXmlSchema` 方法。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1564">To read just the schema, use the `ReadXmlSchema` method.</span></span>  
  
 <span data-ttu-id="f01f9-1565">通常， `WriteXml` 方法只写入当前表的数据。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1565">Normally the `WriteXml` method writes the data only for the current table.</span></span> <span data-ttu-id="f01f9-1566">若要写入当前表及其所有子代相关表的数据，请调用方法，并将 `writeHierarchy` 参数设置为 `true` 。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1566">To write the data for the current table and all descendant, related tables, call the method with the `writeHierarchy` parameter set to `true`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f01f9-1567"><xref:System.InvalidOperationException>如果在中 `DataRow` 读取或写入的列类型实现 <xref:System.Dynamic.IDynamicMetaObjectProvider> 且不实现，则将引发 <xref:System.Xml.Serialization.IXmlSerializable> 。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1567">An <xref:System.InvalidOperationException> will be thrown if a column type in the `DataRow` being read from or written to implements <xref:System.Dynamic.IDynamicMetaObjectProvider> and does not implement <xref:System.Xml.Serialization.IXmlSerializable>.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/data/adonet/dataset-datatable-dataview/datatables"><span data-ttu-id="f01f9-1568">DataTables</span><span class="sxs-lookup"><span data-stu-id="f01f9-1568">DataTables</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="WriteXml">
      <MemberSignature Language="C#" Value="public void WriteXml (System.Xml.XmlWriter writer, System.Data.XmlWriteMode mode, bool writeHierarchy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteXml(class System.Xml.XmlWriter writer, valuetype System.Data.XmlWriteMode mode, bool writeHierarchy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter,System.Data.XmlWriteMode,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteXml (writer As XmlWriter, mode As XmlWriteMode, writeHierarchy As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteXml(System::Xml::XmlWriter ^ writer, System::Data::XmlWriteMode mode, bool writeHierarchy);" />
      <MemberSignature Language="F#" Value="member this.WriteXml : System.Xml.XmlWriter * System.Data.XmlWriteMode * bool -&gt; unit" Usage="dataTable.WriteXml (writer, mode, writeHierarchy)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" Index="0" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="mode" Type="System.Data.XmlWriteMode" Index="1" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="writeHierarchy" Type="System.Boolean" Index="2" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="f01f9-1569">用于写入文档的 <see cref="T:System.Xml.XmlWriter" />。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1569">The <see cref="T:System.Xml.XmlWriter" /> used to write the document.</span></span></param>
        <param name="mode"><span data-ttu-id="f01f9-1570"><see cref="T:System.Data.XmlWriteMode" /> 值之一。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1570">One of the <see cref="T:System.Data.XmlWriteMode" /> values.</span></span></param>
        <param name="writeHierarchy"><span data-ttu-id="f01f9-1571">如果为 <see langword="true" />，则写入当前表及其所有子代的内容。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1571">If <see langword="true" />, write the contents of the current table and all its descendants.</span></span> <span data-ttu-id="f01f9-1572">如果为 <see langword="false" />（默认值），则只写入当前表的数据。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1572">If <see langword="false" /> (the default value), write the data for the current table only.</span></span></param>
        <summary><span data-ttu-id="f01f9-1573">使用指定的 <see cref="T:System.Xml.XmlWriter" /> 和 <see cref="T:System.Data.XmlWriteMode" /> 写入 <see cref="T:System.Data.DataTable" /> 的当前数据和架构（可选）。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1573">Writes the current data, and optionally the schema, for the <see cref="T:System.Data.DataTable" /> using the specified <see cref="T:System.Xml.XmlWriter" /> and <see cref="T:System.Data.XmlWriteMode" />.</span></span> <span data-ttu-id="f01f9-1574">若要写入架构，请将 <paramref name="mode" /> 参数的值设置为 <see langword="WriteSchema" />。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1574">To write the schema, set the value for the <paramref name="mode" /> parameter to <see langword="WriteSchema" />.</span></span> <span data-ttu-id="f01f9-1575">若要保存该表及其所有子代的数据，请将 <paramref name="writeHierarchy" /> 参数设置为 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1575">To save the data for the table and all its descendants, set the <paramref name="writeHierarchy" /> parameter to <see langword="true" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f01f9-1576"><xref:System.Data.DataTable.WriteXml%2A>方法提供了一种方法，用于将数据（或中的数据和架构 <xref:System.Data.DataTable> ）写入 XML 文档，而 <xref:System.Data.DataTable.WriteXmlSchema%2A> 方法只写入架构。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1576">The <xref:System.Data.DataTable.WriteXml%2A> method provides a way to write either data only, or both data and schema from a <xref:System.Data.DataTable> into an XML document, whereas the <xref:System.Data.DataTable.WriteXmlSchema%2A> method writes only the schema.</span></span> <span data-ttu-id="f01f9-1577">若要同时编写数据和架构，请使用包含参数的重载之一 <xref:System.Data.XmlWriteMode> ，并将其值设置为 `WriteSchema` 。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1577">To write both data and schema, use one of the overloads that include the <xref:System.Data.XmlWriteMode> parameter, and set its value to `WriteSchema`.</span></span>  
  
 <span data-ttu-id="f01f9-1578">请注意，对于和方法也是 <xref:System.Data.DataTable.ReadXml%2A> 如此 <xref:System.Data.DataTable.ReadXmlSchema%2A> 。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1578">Note that the same is true for the <xref:System.Data.DataTable.ReadXml%2A> and <xref:System.Data.DataTable.ReadXmlSchema%2A> methods, respectively.</span></span> <span data-ttu-id="f01f9-1579">若要将 XML 数据或架构和数据读入到 `DataTable` 中，请使用 `ReadXml` 方法。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1579">To read XML data, or both schema and data into the `DataTable`, use the `ReadXml` method.</span></span> <span data-ttu-id="f01f9-1580">若要仅读取架构，请使用 `ReadXmlSchema` 方法。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1580">To read just the schema, use the `ReadXmlSchema` method.</span></span>  
  
 <span data-ttu-id="f01f9-1581">通常， `WriteXml` 方法只写入当前表的数据。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1581">Normally the `WriteXml` method writes the data only for the current table.</span></span> <span data-ttu-id="f01f9-1582">若要写入当前表及其整个子代的相关表的数据，请调用方法，并将 `writeHierarchy` 参数设置为 `true` 。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1582">To write the data for the current table and its entire descendant, related tables, call the method with the `writeHierarchy` parameter set to `true`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f01f9-1583"><xref:System.InvalidOperationException>如果在中 `DataRow` 读取或写入的列类型实现 <xref:System.Dynamic.IDynamicMetaObjectProvider> 且不实现，则将引发 <xref:System.Xml.Serialization.IXmlSerializable> 。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1583">An <xref:System.InvalidOperationException> will be thrown if a column type in the `DataRow` being read from or written to implements <xref:System.Dynamic.IDynamicMetaObjectProvider> and does not implement <xref:System.Xml.Serialization.IXmlSerializable>.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/data/adonet/dataset-datatable-dataview/datatables"><span data-ttu-id="f01f9-1584">DataTables</span><span class="sxs-lookup"><span data-stu-id="f01f9-1584">DataTables</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteXmlSchema">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f01f9-1585">将 <see cref="T:System.Data.DataTable" /> 的当前数据结构以 XML 架构形式写入。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1585">Writes the current data structure of the <see cref="T:System.Data.DataTable" /> as an XML schema.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f01f9-1586">使用 <xref:System.Data.DataTable.WriteXmlSchema%2A> 方法可将的架构写入 <xref:System.Data.DataTable> XML 文档。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1586">Use the <xref:System.Data.DataTable.WriteXmlSchema%2A> method to write the schema for a <xref:System.Data.DataTable> to an XML document.</span></span> <span data-ttu-id="f01f9-1587">此架构包括表、关系和约束定义。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1587">The schema includes table, relation, and constraint definitions.</span></span>  
  
 <span data-ttu-id="f01f9-1588">使用 XSD 标准编写 XML 架构。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1588">The XML schema is written using the XSD standard.</span></span>  
  
 <span data-ttu-id="f01f9-1589">若要将数据写入 XML 文档，请使用 <xref:System.Data.DataTable.WriteXml%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1589">To write the data to an XML document, use the <xref:System.Data.DataTable.WriteXml%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f01f9-1590">下面的控制台应用程序创建两个 <xref:System.Data.DataTable> 实例，将每个实例添加到 <xref:System.Data.DataSet> ，创建一个 <xref:System.Data.DataRelation> 与两个表相关的，然后使用 <xref:System.Data.DataTable.WriteXmlSchema%2A> 方法将父表中包含的数据写入到中 <xref:System.IO.TextWriter> 。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1590">The following console application creates two <xref:System.Data.DataTable> instances, adds each to a <xref:System.Data.DataSet>, creates a <xref:System.Data.DataRelation> relating the two tables, and then uses the <xref:System.Data.DataTable.WriteXmlSchema%2A> method to write the data contained within the parent table to a <xref:System.IO.TextWriter>.</span></span> <span data-ttu-id="f01f9-1591">该示例演示了在将参数设置 `writeHierarchy` 为其每个值时的行为。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1591">The example demonstrates the behavior when setting the `writeHierarchy` parameter to each of its values.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f01f9-1592">此示例演示如何使用的重载版本之一 `WriteXmlSchema` 来了解可能可用的其他示例，请参阅各个重载主题。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1592">This example shows how to use one of the overloaded versions of `WriteXmlSchema` For other examples that might be available, see the individual overload topics.</span></span>  
  
 [!code-csharp[DataWorks DataTable.WriteXmlSchemaOverload#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTable.WriteXmlSchemaOverload/CS/source.cs#1)]
 [!code-vb[DataWorks DataTable.WriteXmlSchemaOverload#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTable.WriteXmlSchemaOverload/VB/source.vb#1)]  
  
 <span data-ttu-id="f01f9-1593">该示例在控制台窗口中显示以下输出：</span><span class="sxs-lookup"><span data-stu-id="f01f9-1593">The example displays the following output in the console window:</span></span>  
  
```  
==============================  
Customer table, without hierarchy  
==============================  
<?xml version="1.0" encoding="utf-16"?>  
<xs:schema id="NewDataSet" xmlns="" xmlns:xs="http://www.w3.org/2001/XMLSchema"  
xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">  
  <xs:element name="NewDataSet" msdata:IsDataSet="true" msdata:MainDataTable="Ta  
ble1">  
    <xs:complexType>  
      <xs:choice minOccurs="0" maxOccurs="unbounded">  
        <xs:element name="Table1">  
          <xs:complexType>  
            <xs:sequence>  
              <xs:element name="ID" type="xs:int" />  
              <xs:element name="Name" type="xs:string" minOccurs="0" />  
            </xs:sequence>  
          </xs:complexType>  
        </xs:element>  
      </xs:choice>  
    </xs:complexType>  
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">  
      <xs:selector xpath=".//Table1" />  
      <xs:field xpath="ID" />  
    </xs:unique>  
  </xs:element>  
</xs:schema>  
==============================  
Customer table, with hierarchy  
==============================  
<?xml version="1.0" encoding="utf-16"?>  
<xs:schema id="NewDataSet" xmlns="" xmlns:xs="http://www.w3.org/2001/XMLSchema"  
xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">  
  <xs:element name="NewDataSet" msdata:IsDataSet="true" msdata:MainDataTable="Table1">  
    <xs:complexType>  
      <xs:choice minOccurs="0" maxOccurs="unbounded">  
        <xs:element name="Table1">  
          <xs:complexType>  
            <xs:sequence>  
              <xs:element name="ID" type="xs:int" />  
              <xs:element name="Name" type="xs:string" minOccurs="0" />  
            </xs:sequence>  
          </xs:complexType>  
        </xs:element>  
        <xs:element name="Table2">  
          <xs:complexType>  
            <xs:sequence>  
              <xs:element name="OrderID" type="xs:int" />  
              <xs:element name="CustomerID" type="xs:int" minOccurs="0" />  
              <xs:element name="OrderDate" type="xs:dateTime" minOccurs="0" />  
            </xs:sequence>  
          </xs:complexType>  
        </xs:element>  
      </xs:choice>  
    </xs:complexType>  
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">  
      <xs:selector xpath=".//Table1" />  
      <xs:field xpath="ID" />  
    </xs:unique>  
    <xs:unique name="Table2_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">  
      <xs:selector xpath=".//Table2" />  
      <xs:field xpath="OrderID" />  
    </xs:unique>  
    <xs:keyref name="CustomerOrder" refer="Constraint1">  
      <xs:selector xpath=".//Table2" />  
      <xs:field xpath="CustomerID" />  
    </xs:keyref>  
  </xs:element>  
</xs:schema>  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/data/adonet/dataset-datatable-dataview/datatables"><span data-ttu-id="f01f9-1594">DataTables</span><span class="sxs-lookup"><span data-stu-id="f01f9-1594">DataTables</span></span></related>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteXmlSchema">
      <MemberSignature Language="C#" Value="public void WriteXmlSchema (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteXmlSchema(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.WriteXmlSchema(System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteXmlSchema (stream As Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteXmlSchema(System::IO::Stream ^ stream);" />
      <MemberSignature Language="F#" Value="member this.WriteXmlSchema : System.IO.Stream -&gt; unit" Usage="dataTable.WriteXmlSchema stream" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" Index="0" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="stream"><span data-ttu-id="f01f9-1595">要向其写入 XML 架构的流。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1595">The stream to which the XML schema will be written.</span></span></param>
        <summary><span data-ttu-id="f01f9-1596">以 XML 架构的形式将 <see cref="T:System.Data.DataTable" /> 的当前数据结构写入指定的流。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1596">Writes the current data structure of the <see cref="T:System.Data.DataTable" /> as an XML schema to the specified stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f01f9-1597">使用 <xref:System.Data.DataTable.WriteXmlSchema%2A> 方法可将的架构写入 <xref:System.Data.DataTable> XML 文档。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1597">Use the <xref:System.Data.DataTable.WriteXmlSchema%2A> method to write the schema for a <xref:System.Data.DataTable> to an XML document.</span></span> <span data-ttu-id="f01f9-1598">此架构包括表、关系和约束定义。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1598">The schema includes table, relation, and constraint definitions.</span></span>  
  
 <span data-ttu-id="f01f9-1599">使用 XSD 标准编写 XML 架构。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1599">The XML schema is written using the XSD standard.</span></span>  
  
 <span data-ttu-id="f01f9-1600">若要将数据写入 XML 文档，请使用 <xref:System.Data.DataTable.WriteXml%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1600">To write the data to an XML document, use the <xref:System.Data.DataTable.WriteXml%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/data/adonet/dataset-datatable-dataview/datatables"><span data-ttu-id="f01f9-1601">DataTables</span><span class="sxs-lookup"><span data-stu-id="f01f9-1601">DataTables</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="WriteXmlSchema">
      <MemberSignature Language="C#" Value="public void WriteXmlSchema (System.IO.TextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteXmlSchema(class System.IO.TextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.WriteXmlSchema(System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteXmlSchema (writer As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteXmlSchema(System::IO::TextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="member this.WriteXmlSchema : System.IO.TextWriter -&gt; unit" Usage="dataTable.WriteXmlSchema writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.IO.TextWriter" Index="0" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="f01f9-1602">用于写入的 <see cref="T:System.IO.TextWriter" />。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1602">The <see cref="T:System.IO.TextWriter" /> with which to write.</span></span></param>
        <summary><span data-ttu-id="f01f9-1603">使用指定的 <see cref="T:System.IO.TextWriter" /> 以 XML 架构的形式写入 <see cref="T:System.Data.DataTable" /> 的当前数据结构。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1603">Writes the current data structure of the <see cref="T:System.Data.DataTable" /> as an XML schema using the specified <see cref="T:System.IO.TextWriter" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f01f9-1604">使用 <xref:System.Data.DataTable.WriteXmlSchema%2A> 方法可将的架构写入 <xref:System.Data.DataTable> XML 文档。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1604">Use the <xref:System.Data.DataTable.WriteXmlSchema%2A> method to write the schema for a <xref:System.Data.DataTable> to an XML document.</span></span> <span data-ttu-id="f01f9-1605">此架构包括表、关系和约束定义。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1605">The schema includes table, relation, and constraint definitions.</span></span>  
  
 <span data-ttu-id="f01f9-1606">使用 XSD 标准编写 XML 架构。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1606">The XML schema is written using the XSD standard.</span></span>  
  
 <span data-ttu-id="f01f9-1607">若要将数据写入 XML 文档，请使用 <xref:System.Data.DataTable.WriteXml%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1607">To write the data to an XML document, use the <xref:System.Data.DataTable.WriteXml%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/data/adonet/dataset-datatable-dataview/datatables"><span data-ttu-id="f01f9-1608">DataTables</span><span class="sxs-lookup"><span data-stu-id="f01f9-1608">DataTables</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="WriteXmlSchema">
      <MemberSignature Language="C#" Value="public void WriteXmlSchema (string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteXmlSchema(string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.WriteXmlSchema(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteXmlSchema (fileName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteXmlSchema(System::String ^ fileName);" />
      <MemberSignature Language="F#" Value="member this.WriteXmlSchema : string -&gt; unit" Usage="dataTable.WriteXmlSchema fileName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" Index="0" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="fileName"><span data-ttu-id="f01f9-1609">要使用的文件的名称。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1609">The name of the file to use.</span></span></param>
        <summary><span data-ttu-id="f01f9-1610">以 XML 架构的形式将 <see cref="T:System.Data.DataTable" /> 的当前数据结构写入指定的文件。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1610">Writes the current data structure of the <see cref="T:System.Data.DataTable" /> as an XML schema to the specified file.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f01f9-1611">使用 <xref:System.Data.DataTable.WriteXmlSchema%2A> 方法可将的架构写入 <xref:System.Data.DataTable> XML 文档。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1611">Use the <xref:System.Data.DataTable.WriteXmlSchema%2A> method to write the schema for a <xref:System.Data.DataTable> to an XML document.</span></span> <span data-ttu-id="f01f9-1612">此架构包括表、关系和约束定义。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1612">The schema includes table, relation, and constraint definitions.</span></span>  
  
 <span data-ttu-id="f01f9-1613">使用 XSD 标准编写 XML 架构。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1613">The XML schema is written using the XSD standard.</span></span>  
  
 <span data-ttu-id="f01f9-1614">若要将数据写入 XML 文档，请使用 <xref:System.Data.DataTable.WriteXml%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1614">To write the data to an XML document, use the <xref:System.Data.DataTable.WriteXml%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/data/adonet/dataset-datatable-dataview/datatables"><span data-ttu-id="f01f9-1615">DataTables</span><span class="sxs-lookup"><span data-stu-id="f01f9-1615">DataTables</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="WriteXmlSchema">
      <MemberSignature Language="C#" Value="public void WriteXmlSchema (System.Xml.XmlWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteXmlSchema(class System.Xml.XmlWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.WriteXmlSchema(System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteXmlSchema (writer As XmlWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteXmlSchema(System::Xml::XmlWriter ^ writer);" />
      <MemberSignature Language="F#" Value="member this.WriteXmlSchema : System.Xml.XmlWriter -&gt; unit" Usage="dataTable.WriteXmlSchema writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" Index="0" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="f01f9-1616">要使用的 <see cref="T:System.Xml.XmlWriter" />。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1616">The <see cref="T:System.Xml.XmlWriter" /> to use.</span></span></param>
        <summary><span data-ttu-id="f01f9-1617">使用指定的 <see cref="T:System.Xml.XmlWriter" /> 以 XML 架构的形式写入 <see cref="T:System.Data.DataTable" /> 的当前数据结构。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1617">Writes the current data structure of the <see cref="T:System.Data.DataTable" /> as an XML schema using the specified <see cref="T:System.Xml.XmlWriter" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f01f9-1618">使用 <xref:System.Data.DataTable.WriteXmlSchema%2A> 方法可将的架构写入 <xref:System.Data.DataTable> XML 文档。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1618">Use the <xref:System.Data.DataTable.WriteXmlSchema%2A> method to write the schema for a <xref:System.Data.DataTable> to an XML document.</span></span> <span data-ttu-id="f01f9-1619">此架构包括表、关系和约束定义。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1619">The schema includes table, relation, and constraint definitions.</span></span>  
  
 <span data-ttu-id="f01f9-1620">使用 XSD 标准编写 XML 架构。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1620">The XML schema is written using the XSD standard.</span></span>  
  
 <span data-ttu-id="f01f9-1621">若要将数据写入 XML 文档，请使用 <xref:System.Data.DataTable.WriteXml%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1621">To write the data to an XML document, use the <xref:System.Data.DataTable.WriteXml%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/data/adonet/dataset-datatable-dataview/datatables"><span data-ttu-id="f01f9-1622">DataTables</span><span class="sxs-lookup"><span data-stu-id="f01f9-1622">DataTables</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="WriteXmlSchema">
      <MemberSignature Language="C#" Value="public void WriteXmlSchema (System.IO.Stream stream, bool writeHierarchy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteXmlSchema(class System.IO.Stream stream, bool writeHierarchy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.WriteXmlSchema(System.IO.Stream,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteXmlSchema (stream As Stream, writeHierarchy As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteXmlSchema(System::IO::Stream ^ stream, bool writeHierarchy);" />
      <MemberSignature Language="F#" Value="member this.WriteXmlSchema : System.IO.Stream * bool -&gt; unit" Usage="dataTable.WriteXmlSchema (stream, writeHierarchy)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" Index="0" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="writeHierarchy" Type="System.Boolean" Index="1" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="stream"><span data-ttu-id="f01f9-1623">要向其写入 XML 架构的流。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1623">The stream to which the XML schema will be written.</span></span></param>
        <param name="writeHierarchy"><span data-ttu-id="f01f9-1624">如果为 <see langword="true" />，则写入当前表及其所有子代的架构。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1624">If <see langword="true" />, write the schema of the current table and all its descendants.</span></span> <span data-ttu-id="f01f9-1625">如果为 <see langword="false" />（默认值），则只写入当前表的架构。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1625">If <see langword="false" /> (the default value), write the schema for the current table only.</span></span></param>
        <summary><span data-ttu-id="f01f9-1626">以 XML 架构的形式将 <see cref="T:System.Data.DataTable" /> 的当前数据结构写入指定的流。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1626">Writes the current data structure of the <see cref="T:System.Data.DataTable" /> as an XML schema to the specified stream.</span></span> <span data-ttu-id="f01f9-1627">若要保存该表及其所有子代的架构，请将 <paramref name="writeHierarchy" /> 参数设置为 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1627">To save the schema for the table and all its descendants, set the <paramref name="writeHierarchy" /> parameter to <see langword="true" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f01f9-1628">使用 <xref:System.Data.DataTable.WriteXmlSchema%2A> 方法可将的架构写入 <xref:System.Data.DataTable> XML 文档。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1628">Use the <xref:System.Data.DataTable.WriteXmlSchema%2A> method to write the schema for a <xref:System.Data.DataTable> to an XML document.</span></span> <span data-ttu-id="f01f9-1629">此架构包括表、关系和约束定义。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1629">The schema includes table, relation, and constraint definitions.</span></span>  
  
 <span data-ttu-id="f01f9-1630">使用 XSD 标准编写 XML 架构。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1630">The XML schema is written using the XSD standard.</span></span>  
  
 <span data-ttu-id="f01f9-1631">若要将数据写入 XML 文档，请使用 <xref:System.Data.DataTable.WriteXml%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1631">To write the data to an XML document, use the <xref:System.Data.DataTable.WriteXml%2A> method.</span></span>  
  
 <span data-ttu-id="f01f9-1632">通常， `WriteXmlSchema` 方法只写入当前表的架构。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1632">Normally the `WriteXmlSchema` method writes the schema only for the current table.</span></span> <span data-ttu-id="f01f9-1633">若要写入当前表及其整个子代的相关表的架构，请调用方法，并将 `writeHierarchy` 参数设置为 `true` 。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1633">To write the schema for the current table and its entire descendant, related tables, call the method with the `writeHierarchy` parameter set to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/data/adonet/dataset-datatable-dataview/datatables"><span data-ttu-id="f01f9-1634">DataTables</span><span class="sxs-lookup"><span data-stu-id="f01f9-1634">DataTables</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="WriteXmlSchema">
      <MemberSignature Language="C#" Value="public void WriteXmlSchema (System.IO.TextWriter writer, bool writeHierarchy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteXmlSchema(class System.IO.TextWriter writer, bool writeHierarchy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.WriteXmlSchema(System.IO.TextWriter,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteXmlSchema (writer As TextWriter, writeHierarchy As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteXmlSchema(System::IO::TextWriter ^ writer, bool writeHierarchy);" />
      <MemberSignature Language="F#" Value="member this.WriteXmlSchema : System.IO.TextWriter * bool -&gt; unit" Usage="dataTable.WriteXmlSchema (writer, writeHierarchy)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.IO.TextWriter" Index="0" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="writeHierarchy" Type="System.Boolean" Index="1" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="f01f9-1635">用于写入的 <see cref="T:System.IO.TextWriter" />。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1635">The <see cref="T:System.IO.TextWriter" /> with which to write.</span></span></param>
        <param name="writeHierarchy"><span data-ttu-id="f01f9-1636">如果为 <see langword="true" />，则写入当前表及其所有子代的架构。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1636">If <see langword="true" />, write the schema of the current table and all its descendants.</span></span> <span data-ttu-id="f01f9-1637">如果为 <see langword="false" />（默认值），则只写入当前表的架构。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1637">If <see langword="false" /> (the default value), write the schema for the current table only.</span></span></param>
        <summary><span data-ttu-id="f01f9-1638">使用指定的 <see cref="T:System.IO.TextWriter" /> 以 XML 架构的形式写入 <see cref="T:System.Data.DataTable" /> 的当前数据结构。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1638">Writes the current data structure of the <see cref="T:System.Data.DataTable" /> as an XML schema using the specified <see cref="T:System.IO.TextWriter" />.</span></span> <span data-ttu-id="f01f9-1639">若要保存该表及其所有子代的架构，请将 <paramref name="writeHierarchy" /> 参数设置为 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1639">To save the schema for the table and all its descendants, set the <paramref name="writeHierarchy" /> parameter to <see langword="true" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f01f9-1640">使用 <xref:System.Data.DataTable.WriteXmlSchema%2A> 方法可将的架构写入 <xref:System.Data.DataTable> XML 文档。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1640">Use the <xref:System.Data.DataTable.WriteXmlSchema%2A> method to write the schema for a <xref:System.Data.DataTable> to an XML document.</span></span> <span data-ttu-id="f01f9-1641">此架构包括表、关系和约束定义。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1641">The schema includes table, relation, and constraint definitions.</span></span>  
  
 <span data-ttu-id="f01f9-1642">使用 XSD 标准编写 XML 架构。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1642">The XML schema is written using the XSD standard.</span></span>  
  
 <span data-ttu-id="f01f9-1643">若要将数据写入 XML 文档，请使用 <xref:System.Data.DataTable.WriteXml%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1643">To write the data to an XML document, use the <xref:System.Data.DataTable.WriteXml%2A> method.</span></span>  
  
 <span data-ttu-id="f01f9-1644">通常， `WriteXmlSchema` 方法只写入当前表的架构。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1644">Normally the `WriteXmlSchema` method writes the schema only for the current table.</span></span> <span data-ttu-id="f01f9-1645">若要写入当前表及其整个子代的相关表的架构，请调用方法，并将 `writeHierarchy` 参数设置为 `true` 。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1645">To write the schema for the current table and its entire descendant, related tables, call the method with the `writeHierarchy` parameter set to `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f01f9-1646">下面的控制台应用程序创建两个 <xref:System.Data.DataTable> 实例，将每个实例添加到 <xref:System.Data.DataSet> ，创建一个 <xref:System.Data.DataRelation> 与两个表相关的，然后使用 <xref:System.Data.DataTable.WriteXmlSchema%2A> 方法将父表中包含的数据写入到中 <xref:System.IO.TextWriter> 。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1646">The following console application creates two <xref:System.Data.DataTable> instances, adds each to a <xref:System.Data.DataSet>, creates a <xref:System.Data.DataRelation> relating the two tables, and then uses the <xref:System.Data.DataTable.WriteXmlSchema%2A> method to write the data contained within the parent table to a <xref:System.IO.TextWriter>.</span></span> <span data-ttu-id="f01f9-1647">该示例演示了在将参数设置 `writeHierarchy` 为其每个值时的行为。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1647">The example demonstrates the behavior when setting the `writeHierarchy` parameter to each of its values.</span></span>  
  
 [!code-csharp[DataWorks DataTable.WriteXmlSchema#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTable.WriteXmlSchema/CS/source.cs#1)]
 [!code-vb[DataWorks DataTable.WriteXmlSchema#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTable.WriteXmlSchema/VB/source.vb#1)]  
  
 <span data-ttu-id="f01f9-1648">该示例在控制台窗口中显示以下输出：</span><span class="sxs-lookup"><span data-stu-id="f01f9-1648">The example displays the following output in the console window:</span></span>  
  
```  
==============================  
Customer table, without hierarchy  
==============================  
<?xml version="1.0" encoding="utf-16"?>  
<xs:schema id="NewDataSet" xmlns="" xmlns:xs="http://www.w3.org/2001/XMLSchema"  
xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">  
  <xs:element name="NewDataSet" msdata:IsDataSet="true" msdata:MainDataTable="Ta  
ble1">  
    <xs:complexType>  
      <xs:choice minOccurs="0" maxOccurs="unbounded">  
        <xs:element name="Table1">  
          <xs:complexType>  
            <xs:sequence>  
              <xs:element name="ID" type="xs:int" />  
              <xs:element name="Name" type="xs:string" minOccurs="0" />  
            </xs:sequence>  
          </xs:complexType>  
        </xs:element>  
      </xs:choice>  
    </xs:complexType>  
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">  
      <xs:selector xpath=".//Table1" />  
      <xs:field xpath="ID" />  
    </xs:unique>  
  </xs:element>  
</xs:schema>  
==============================  
Customer table, with hierarchy  
==============================  
<?xml version="1.0" encoding="utf-16"?>  
<xs:schema id="NewDataSet" xmlns="" xmlns:xs="http://www.w3.org/2001/XMLSchema"  
xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">  
  <xs:element name="NewDataSet" msdata:IsDataSet="true" msdata:MainDataTable="Table1">  
    <xs:complexType>  
      <xs:choice minOccurs="0" maxOccurs="unbounded">  
        <xs:element name="Table1">  
          <xs:complexType>  
            <xs:sequence>  
              <xs:element name="ID" type="xs:int" />  
              <xs:element name="Name" type="xs:string" minOccurs="0" />  
            </xs:sequence>  
          </xs:complexType>  
        </xs:element>  
        <xs:element name="Table2">  
          <xs:complexType>  
            <xs:sequence>  
              <xs:element name="OrderID" type="xs:int" />  
              <xs:element name="CustomerID" type="xs:int" minOccurs="0" />  
              <xs:element name="OrderDate" type="xs:dateTime" minOccurs="0" />  
            </xs:sequence>  
          </xs:complexType>  
        </xs:element>  
      </xs:choice>  
    </xs:complexType>  
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">  
      <xs:selector xpath=".//Table1" />  
      <xs:field xpath="ID" />  
    </xs:unique>  
    <xs:unique name="Table2_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">  
      <xs:selector xpath=".//Table2" />  
      <xs:field xpath="OrderID" />  
    </xs:unique>  
    <xs:keyref name="CustomerOrder" refer="Constraint1">  
      <xs:selector xpath=".//Table2" />  
      <xs:field xpath="CustomerID" />  
    </xs:keyref>  
  </xs:element>  
</xs:schema>  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/data/adonet/dataset-datatable-dataview/datatables"><span data-ttu-id="f01f9-1649">DataTables</span><span class="sxs-lookup"><span data-stu-id="f01f9-1649">DataTables</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="WriteXmlSchema">
      <MemberSignature Language="C#" Value="public void WriteXmlSchema (string fileName, bool writeHierarchy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteXmlSchema(string fileName, bool writeHierarchy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.WriteXmlSchema(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteXmlSchema (fileName As String, writeHierarchy As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteXmlSchema(System::String ^ fileName, bool writeHierarchy);" />
      <MemberSignature Language="F#" Value="member this.WriteXmlSchema : string * bool -&gt; unit" Usage="dataTable.WriteXmlSchema (fileName, writeHierarchy)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" Index="0" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="writeHierarchy" Type="System.Boolean" Index="1" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="fileName"><span data-ttu-id="f01f9-1650">要使用的文件的名称。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1650">The name of the file to use.</span></span></param>
        <param name="writeHierarchy"><span data-ttu-id="f01f9-1651">如果为 <see langword="true" />，则写入当前表及其所有子代的架构。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1651">If <see langword="true" />, write the schema of the current table and all its descendants.</span></span> <span data-ttu-id="f01f9-1652">如果为 <see langword="false" />（默认值），则只写入当前表的架构。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1652">If <see langword="false" /> (the default value), write the schema for the current table only.</span></span></param>
        <summary><span data-ttu-id="f01f9-1653">以 XML 架构的形式将 <see cref="T:System.Data.DataTable" /> 的当前数据结构写入指定的文件。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1653">Writes the current data structure of the <see cref="T:System.Data.DataTable" /> as an XML schema to the specified file.</span></span> <span data-ttu-id="f01f9-1654">若要保存该表及其所有子代的架构，请将 <paramref name="writeHierarchy" /> 参数设置为 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1654">To save the schema for the table and all its descendants, set the <paramref name="writeHierarchy" /> parameter to <see langword="true" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f01f9-1655">使用 <xref:System.Data.DataTable.WriteXmlSchema%2A> 方法可将的架构写入 <xref:System.Data.DataTable> XML 文档。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1655">Use the <xref:System.Data.DataTable.WriteXmlSchema%2A> method to write the schema for a <xref:System.Data.DataTable> to an XML document.</span></span> <span data-ttu-id="f01f9-1656">此架构包括表、关系和约束定义。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1656">The schema includes table, relation, and constraint definitions.</span></span>  
  
 <span data-ttu-id="f01f9-1657">使用 XSD 标准编写 XML 架构。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1657">The XML schema is written using the XSD standard.</span></span>  
  
 <span data-ttu-id="f01f9-1658">若要将数据写入 XML 文档，请使用 <xref:System.Data.DataTable.WriteXml%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1658">To write the data to an XML document, use the <xref:System.Data.DataTable.WriteXml%2A> method.</span></span>  
  
 <span data-ttu-id="f01f9-1659">通常， `WriteXmlSchema` 方法只写入当前表的架构。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1659">Normally the `WriteXmlSchema` method writes the schema only for the current table.</span></span> <span data-ttu-id="f01f9-1660">若要写入当前表及其整个子代的相关表的架构，请调用方法，并将 `writeHierarchy` 参数设置为 `true` 。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1660">To write the schema for the current table and its entire descendant, related tables, call the method with the `writeHierarchy` parameter set to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/data/adonet/dataset-datatable-dataview/datatables"><span data-ttu-id="f01f9-1661">DataTables</span><span class="sxs-lookup"><span data-stu-id="f01f9-1661">DataTables</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="WriteXmlSchema">
      <MemberSignature Language="C#" Value="public void WriteXmlSchema (System.Xml.XmlWriter writer, bool writeHierarchy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteXmlSchema(class System.Xml.XmlWriter writer, bool writeHierarchy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.WriteXmlSchema(System.Xml.XmlWriter,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteXmlSchema (writer As XmlWriter, writeHierarchy As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteXmlSchema(System::Xml::XmlWriter ^ writer, bool writeHierarchy);" />
      <MemberSignature Language="F#" Value="member this.WriteXmlSchema : System.Xml.XmlWriter * bool -&gt; unit" Usage="dataTable.WriteXmlSchema (writer, writeHierarchy)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" Index="0" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="writeHierarchy" Type="System.Boolean" Index="1" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="f01f9-1662">用于写入文档的 <see cref="T:System.Xml.XmlWriter" />。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1662">The <see cref="T:System.Xml.XmlWriter" /> used to write the document.</span></span></param>
        <param name="writeHierarchy"><span data-ttu-id="f01f9-1663">如果为 <see langword="true" />，则写入当前表及其所有子代的架构。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1663">If <see langword="true" />, write the schema of the current table and all its descendants.</span></span> <span data-ttu-id="f01f9-1664">如果为 <see langword="false" />（默认值），则只写入当前表的架构。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1664">If <see langword="false" /> (the default value), write the schema for the current table only.</span></span></param>
        <summary><span data-ttu-id="f01f9-1665">使用指定的 <see cref="T:System.Xml.XmlWriter" /> 以 XML 架构的形式写入 <see cref="T:System.Data.DataTable" /> 的当前数据结构。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1665">Writes the current data structure of the <see cref="T:System.Data.DataTable" /> as an XML schema using the specified <see cref="T:System.Xml.XmlWriter" />.</span></span> <span data-ttu-id="f01f9-1666">若要保存该表及其所有子代的架构，请将 <paramref name="writeHierarchy" /> 参数设置为 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1666">To save the schema for the table and all its descendants, set the <paramref name="writeHierarchy" /> parameter to <see langword="true" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f01f9-1667">使用 <xref:System.Data.DataTable.WriteXmlSchema%2A> 方法可将的架构写入 <xref:System.Data.DataTable> XML 文档。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1667">Use the <xref:System.Data.DataTable.WriteXmlSchema%2A> method to write the schema for a <xref:System.Data.DataTable> to an XML document.</span></span> <span data-ttu-id="f01f9-1668">此架构包括表、关系和约束定义。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1668">The schema includes table, relation, and constraint definitions.</span></span>  
  
 <span data-ttu-id="f01f9-1669">使用 XSD 标准编写 XML 架构。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1669">The XML schema is written using the XSD standard.</span></span>  
  
 <span data-ttu-id="f01f9-1670">若要将数据写入 XML 文档，请使用 <xref:System.Data.DataTable.WriteXml%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1670">To write the data to an XML document, use the <xref:System.Data.DataTable.WriteXml%2A> method.</span></span>  
  
 <span data-ttu-id="f01f9-1671">通常， `WriteXmlSchema` 方法只写入当前表的架构。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1671">Normally the `WriteXmlSchema` method writes the schema only for the current table.</span></span> <span data-ttu-id="f01f9-1672">若要写入当前表及其整个子代的相关表的架构，请调用方法，并将 `writeHierarchy` 参数设置为 `true` 。</span><span class="sxs-lookup"><span data-stu-id="f01f9-1672">To write the schema for the current table and its entire descendant, related tables, call the method with the `writeHierarchy` parameter set to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/data/adonet/dataset-datatable-dataview/datatables"><span data-ttu-id="f01f9-1673">DataTables</span><span class="sxs-lookup"><span data-stu-id="f01f9-1673">DataTables</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>
