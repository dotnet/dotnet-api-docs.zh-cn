<Type Name="DataTableReader" FullName="System.Data.DataTableReader">
  <Metadata><Meta Name="ms.openlocfilehash" Value="c26524b3c9cb3f19bf9b129ceb782ae51aa74dab" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89944555" /></Metadata><TypeSignature Language="C#" Value="public sealed class DataTableReader : System.Data.Common.DbDataReader" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit DataTableReader extends System.Data.Common.DbDataReader" />
  <TypeSignature Language="DocId" Value="T:System.Data.DataTableReader" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class DataTableReader&#xA;Inherits DbDataReader" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataTableReader sealed : System::Data::Common::DbDataReader" />
  <TypeSignature Language="F#" Value="type DataTableReader = class&#xA;    inherit DbDataReader" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data.Common</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.Data.Common" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Data.Common.DbDataReader</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="874d0-101"><see cref="T:System.Data.DataTableReader" /> 以一个或多个只读、只进结果集的形式获取一个或多个 <see cref="T:System.Data.DataTable" /> 对象的内容。</span><span class="sxs-lookup"><span data-stu-id="874d0-101">The <see cref="T:System.Data.DataTableReader" /> obtains the contents of one or more <see cref="T:System.Data.DataTable" /> objects in the form of one or more read-only, forward-only result sets.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="874d0-102">的 <xref:System.Data.DataTableReader> 工作方式与任何其他数据读取器（如）非常相似， <xref:System.Data.SqlClient.SqlDataReader> 不同之处在于， <xref:System.Data.DataTableReader> 可用于循环访问中的行 <xref:System.Data.DataTable> 。</span><span class="sxs-lookup"><span data-stu-id="874d0-102">The <xref:System.Data.DataTableReader> works much like any other data reader, such as the <xref:System.Data.SqlClient.SqlDataReader>, except that the <xref:System.Data.DataTableReader> provides for iterating over rows in a <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="874d0-103">换句话说，它可用于循环访问缓存中的行。</span><span class="sxs-lookup"><span data-stu-id="874d0-103">In other words, it provides for iterating over rows in a cache.</span></span> <span data-ttu-id="874d0-104">当处于活动状态时，可以修改缓存的数据 <xref:System.Data.DataTableReader> ，并且读取器将自动保持其位置。</span><span class="sxs-lookup"><span data-stu-id="874d0-104">The cached data can be modified while the <xref:System.Data.DataTableReader> is active, and the reader automatically maintains its position.</span></span>  
  
 <span data-ttu-id="874d0-105">从创建时 <xref:System.Data.DataTableReader> <xref:System.Data.DataTable> ，生成的对象将 <xref:System.Data.DataTableReader> 包含一个结果集，该结果集的数据与创建它时所用的数据相同 <xref:System.Data.DataTable> ，但任何已标记为已删除的行除外。</span><span class="sxs-lookup"><span data-stu-id="874d0-105">When you create a <xref:System.Data.DataTableReader> from a <xref:System.Data.DataTable>, the resulting <xref:System.Data.DataTableReader> object contains one result set with the same data as the <xref:System.Data.DataTable> from which it was created, except for any rows that have been marked as deleted.</span></span> <span data-ttu-id="874d0-106">列的显示顺序与原始中的顺序相同 <xref:System.Data.DataTable> 。</span><span class="sxs-lookup"><span data-stu-id="874d0-106">The columns appear in the same order as in the original <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="874d0-107">返回的结果的结构在架构和数据上完全相同 <xref:System.Data.DataTable> 。</span><span class="sxs-lookup"><span data-stu-id="874d0-107">The structure of the returned result is identical in schema and data to the original <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="874d0-108"><xref:System.Data.DataTableReader>如果包含多个表，则通过调用对象的方法创建的 <xref:System.Data.DataSet.CreateDataReader*> <xref:System.Data.DataSet> 包含多个结果集 <xref:System.Data.DataSet> 。</span><span class="sxs-lookup"><span data-stu-id="874d0-108">A <xref:System.Data.DataTableReader> that was created by calling the <xref:System.Data.DataSet.CreateDataReader*> method of a <xref:System.Data.DataSet> object contains multiple result sets if the <xref:System.Data.DataSet> contains more than one table.</span></span> <span data-ttu-id="874d0-109">结果与对象的中的对象的序列相同 <xref:System.Data.DataTable> <xref:System.Data.DataTableCollection> <xref:System.Data.DataSet> 。</span><span class="sxs-lookup"><span data-stu-id="874d0-109">The results are in the same sequence as the <xref:System.Data.DataTable> objects in the <xref:System.Data.DataTableCollection> of the <xref:System.Data.DataSet> object.</span></span>  
  
 <span data-ttu-id="874d0-110">返回的结果集仅包含每个的当前版本 <xref:System.Data.DataRow> ; 跳过标记为删除的行。</span><span class="sxs-lookup"><span data-stu-id="874d0-110">The returned result set contains only the current version of each <xref:System.Data.DataRow>; rows that are marked for deletion are skipped.</span></span>  
  
 <span data-ttu-id="874d0-111">`DataTableReader`提供一个稳定的迭代器; 也就是说，如果在迭代期间修改了基础集合的大小，则的内容将 `DataTableReader` 不会失效。</span><span class="sxs-lookup"><span data-stu-id="874d0-111">The `DataTableReader` provides a stable iterator; that is, the contents of the `DataTableReader` are not invalidated if the size of the underlying collection is modified during iteration.</span></span> <span data-ttu-id="874d0-112">例如，如果集合中的一个或多个行在 <xref:System.Data.DataTable.Rows%2A> 迭代期间删除或删除，则中的当前位置 `DataTableReader` 将相应维护，而不会使迭代器失效。</span><span class="sxs-lookup"><span data-stu-id="874d0-112">For example, if one or more rows in the <xref:System.Data.DataTable.Rows%2A> collection are deleted or removed during iteration, the current position within the `DataTableReader` is maintained appropriately and it does not invalidate the iterator.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="874d0-113">初始化 <see cref="T:System.Data.DataTableReader" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="874d0-113">Initializes a new instance of the <see cref="T:System.Data.DataTableReader" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataTableReader (System.Data.DataTable dataTable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Data.DataTable dataTable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.#ctor(System.Data.DataTable)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (dataTable As DataTable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataTableReader(System::Data::DataTable ^ dataTable);" />
      <MemberSignature Language="F#" Value="new System.Data.DataTableReader : System.Data.DataTable -&gt; System.Data.DataTableReader" Usage="new System.Data.DataTableReader dataTable" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="dataTable" Type="System.Data.DataTable" />
      </Parameters>
      <Docs>
        <param name="dataTable"><span data-ttu-id="874d0-114">新的 <see cref="T:System.Data.DataTable" /> 从中获取其结果集的 <see cref="T:System.Data.DataTableReader" />。</span><span class="sxs-lookup"><span data-stu-id="874d0-114">The <see cref="T:System.Data.DataTable" /> from which the new <see cref="T:System.Data.DataTableReader" /> obtains its result set.</span></span></param>
        <summary><span data-ttu-id="874d0-115">通过使用提供的 <see cref="T:System.Data.DataTableReader" /> 中的数据初始化 <see cref="T:System.Data.DataTable" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="874d0-115">Initializes a new instance of the <see cref="T:System.Data.DataTableReader" /> class by using data from the supplied <see cref="T:System.Data.DataTable" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataTableReader (System.Data.DataTable[] dataTables);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Data.DataTable[] dataTables) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.#ctor(System.Data.DataTable[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (dataTables As DataTable())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataTableReader(cli::array &lt;System::Data::DataTable ^&gt; ^ dataTables);" />
      <MemberSignature Language="F#" Value="new System.Data.DataTableReader : System.Data.DataTable[] -&gt; System.Data.DataTableReader" Usage="new System.Data.DataTableReader dataTables" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="dataTables" Type="System.Data.DataTable[]" />
      </Parameters>
      <Docs>
        <param name="dataTables"><span data-ttu-id="874d0-116">用于为新的 <see cref="T:System.Data.DataTable" /> 对象提供结果的 <see cref="T:System.Data.DataTableReader" /> 对象数组。</span><span class="sxs-lookup"><span data-stu-id="874d0-116">The array of <see cref="T:System.Data.DataTable" /> objects that supplies the results for the new <see cref="T:System.Data.DataTableReader" /> object.</span></span></param>
        <summary><span data-ttu-id="874d0-117">使用提供的 <see cref="T:System.Data.DataTableReader" /> 对象的数组初始化 <see cref="T:System.Data.DataTable" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="874d0-117">Initializes a new instance of the <see cref="T:System.Data.DataTableReader" /> class using the supplied array of <see cref="T:System.Data.DataTable" /> objects.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="874d0-118">如果必须 <xref:System.Data.DataTableReader> 基于特定的表中的所有或部分表创建 <xref:System.Data.DataSet> ，请调用 `DataSet` 的 <xref:System.Data.DataSet.CreateDataReader*> 方法。</span><span class="sxs-lookup"><span data-stu-id="874d0-118">If you must create a <xref:System.Data.DataTableReader> based on all or a subset of the tables within a specific <xref:System.Data.DataSet>, call the `DataSet`'s <xref:System.Data.DataSet.CreateDataReader*> method.</span></span> <span data-ttu-id="874d0-119">如果要 <xref:System.Data.DataTableReader> 基于一组不相关的实例创建新的实例 `DataTable` ，请使用此构造函数。</span><span class="sxs-lookup"><span data-stu-id="874d0-119">If you want to create a new <xref:System.Data.DataTableReader> instance based on a group of `DataTable` instances that are not otherwise related, use this constructor.</span></span> <span data-ttu-id="874d0-120">你还可以利用此构造函数在中重新排列的顺序 `DataTables` `DataTableReader` ，前提是它们在其源内的顺序 `DataSet` 并不能满足你的需求。</span><span class="sxs-lookup"><span data-stu-id="874d0-120">You can also take advantage of this constructor to rearrange the ordering of the `DataTables` within the `DataTableReader`, if their ordering within their source `DataSet` does not meet your needs.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="874d0-121">在下面的示例中，TestConstructor 方法创建两个 <xref:System.Data.DataTable> 实例。</span><span class="sxs-lookup"><span data-stu-id="874d0-121">In the following example, the TestConstructor method creates two <xref:System.Data.DataTable> instances.</span></span> <span data-ttu-id="874d0-122">为了演示此类的构造函数 <xref:System.Data.DataTableReader> ，该示例 `DataTableReader` 基于包含两个的数组创建了一个新的， `DataTables` 并执行一个简单的操作，将前几列中的内容打印到控制台窗口。</span><span class="sxs-lookup"><span data-stu-id="874d0-122">In order to demonstrate this constructor for the <xref:System.Data.DataTableReader> class, the sample creates a new `DataTableReader` based on an array that contains the two `DataTables`, and performs a simple operation, printing the contents from the first few columns to the console window.</span></span> <span data-ttu-id="874d0-123">若要测试此应用程序，请创建新的控制台应用程序，并将示例代码粘贴到新创建的文件中。</span><span class="sxs-lookup"><span data-stu-id="874d0-123">In order to test this application, create a new Console application, and paste the sample code into the newly created file.</span></span>  
  
 [!code-csharp[DataWorks DataTableReader.ctor#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.ctor/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.ctor#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.ctor/VB/source.vb#1)]  
  
 <span data-ttu-id="874d0-124">控制台窗口将显示以下结果：</span><span class="sxs-lookup"><span data-stu-id="874d0-124">The Console window displays the following results:</span></span>  
  
```  
1 Mary  
2 Andy  
3 Peter  
4 Russ  
1 Wireless Network Card  
2 Hard Drive  
3 Monitor  
4 CPU  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public override void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Close();" />
      <MemberSignature Language="F#" Value="override this.Close : unit -&gt; unit" Usage="dataTableReader.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="874d0-125">关闭当前的 <see cref="T:System.Data.DataTableReader" />。</span><span class="sxs-lookup"><span data-stu-id="874d0-125">Closes the current <see cref="T:System.Data.DataTableReader" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="874d0-126">`Close()`对已关闭的 `DataTableReader` 对象调用不会引发错误。</span><span class="sxs-lookup"><span data-stu-id="874d0-126">Calling `Close()` on a closed `DataTableReader` object does not raise an error.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Depth">
      <MemberSignature Language="C#" Value="public override int Depth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Depth" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataTableReader.Depth" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Depth As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int Depth { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Depth : int" Usage="System.Data.DataTableReader.Depth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="874d0-127"><see cref="T:System.Data.DataTableReader" /> 的当前行的嵌套深度。</span><span class="sxs-lookup"><span data-stu-id="874d0-127">The depth of nesting for the current row of the <see cref="T:System.Data.DataTableReader" />.</span></span></summary>
        <value><span data-ttu-id="874d0-128">当前行的嵌套深度；始终为零。</span><span class="sxs-lookup"><span data-stu-id="874d0-128">The depth of nesting for the current row; always zero.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="874d0-129">`DataTableReader` 不支持嵌套。</span><span class="sxs-lookup"><span data-stu-id="874d0-129">`DataTableReader` does not support nesting.</span></span> <span data-ttu-id="874d0-130">`Depth`属性始终返回零。</span><span class="sxs-lookup"><span data-stu-id="874d0-130">The `Depth` property always returns zero.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FieldCount">
      <MemberSignature Language="C#" Value="public override int FieldCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 FieldCount" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataTableReader.FieldCount" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property FieldCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int FieldCount { int get(); };" />
      <MemberSignature Language="F#" Value="member this.FieldCount : int" Usage="System.Data.DataTableReader.FieldCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="874d0-131">返回当前行中的列数。</span><span class="sxs-lookup"><span data-stu-id="874d0-131">Returns the number of columns in the current row.</span></span></summary>
        <value><span data-ttu-id="874d0-132">如果未定位在有效的结果集中，则为 0；否则为当前行中的列数。</span><span class="sxs-lookup"><span data-stu-id="874d0-132">When not positioned in a valid result set, 0; otherwise the number of columns in the current row.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="874d0-133">尝试在关闭的 <see cref="T:System.Data.DataTableReader" /> 中检索字段计数。</span><span class="sxs-lookup"><span data-stu-id="874d0-133">An attempt was made to retrieve the field count in a closed <see cref="T:System.Data.DataTableReader" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetBoolean">
      <MemberSignature Language="C#" Value="public override bool GetBoolean (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool GetBoolean(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetBoolean(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetBoolean (ordinal As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool GetBoolean(int ordinal);" />
      <MemberSignature Language="F#" Value="override this.GetBoolean : int -&gt; bool" Usage="dataTableReader.GetBoolean ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal"><span data-ttu-id="874d0-134">从零开始的列序号。</span><span class="sxs-lookup"><span data-stu-id="874d0-134">The zero-based column ordinal.</span></span></param>
        <summary><span data-ttu-id="874d0-135">获取指定列的 <see cref="T:System.Boolean" /> 形式的值。</span><span class="sxs-lookup"><span data-stu-id="874d0-135">Gets the value of the specified column as a <see cref="T:System.Boolean" />.</span></span></summary>
        <returns><span data-ttu-id="874d0-136">指定列的值。</span><span class="sxs-lookup"><span data-stu-id="874d0-136">The value of the specified column.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="874d0-137">不执行任何转换;因此，检索的数据必须已是布尔值或强制转换为布尔值，否则将生成异常。</span><span class="sxs-lookup"><span data-stu-id="874d0-137">No conversions are performed; therefore the data retrieved must either already be a Boolean or coercible to a Boolean, or an exception is generated.</span></span>  
  
 <span data-ttu-id="874d0-138">调用 <xref:System.Data.DataTableReader.IsDBNull%2A> 此方法之前，请调用以查看是否存在 null 值。</span><span class="sxs-lookup"><span data-stu-id="874d0-138">Call <xref:System.Data.DataTableReader.IsDBNull%2A> to see if there are null values before calling this method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="874d0-139">下面的示例在传入的中显示编号为2的列的内容 <xref:System.Data.DataTableReader> 。</span><span class="sxs-lookup"><span data-stu-id="874d0-139">The following example displays the contents of the column numbered 2 within the passed-in <xref:System.Data.DataTableReader>.</span></span> <span data-ttu-id="874d0-140">如果特定行中的列的值为 null，则代码将显示文本 \<NULL> 。</span><span class="sxs-lookup"><span data-stu-id="874d0-140">If the value the column within a particular row is null, the code displays the text \<NULL>.</span></span> <span data-ttu-id="874d0-141">如果列中的数据类型不正确，则此示例将为每一行显示一条错误消息。</span><span class="sxs-lookup"><span data-stu-id="874d0-141">If the data within the column is not the correct type, the example displays an error message for each row.</span></span>  
  
 [!code-csharp[DataWorks DataTableReader.GetBoolean#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetBoolean/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.GetBoolean#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetBoolean/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="874d0-142">传递的索引超出了 0 到 <see cref="P:System.Data.DataTableReader.FieldCount" /> -1 的范围。</span><span class="sxs-lookup"><span data-stu-id="874d0-142">The index passed was outside the range of 0 to <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</span></span></exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException"><span data-ttu-id="874d0-143">尝试从已删除的行中检索数据。</span><span class="sxs-lookup"><span data-stu-id="874d0-143">An attempt was made to retrieve data from a deleted row.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="874d0-144">尝试读取或访问已关闭的 <see cref="T:System.Data.DataTableReader" /> 中的列。</span><span class="sxs-lookup"><span data-stu-id="874d0-144">An attempt was made to read or access a column in a closed <see cref="T:System.Data.DataTableReader" />.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="874d0-145">指定的列不包含 <see langword="Boolean" />。</span><span class="sxs-lookup"><span data-stu-id="874d0-145">The specified column does not contain a <see langword="Boolean" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetByte">
      <MemberSignature Language="C#" Value="public override byte GetByte (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance unsigned int8 GetByte(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetByte(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetByte (ordinal As Integer) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Byte GetByte(int ordinal);" />
      <MemberSignature Language="F#" Value="override this.GetByte : int -&gt; byte" Usage="dataTableReader.GetByte ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal"><span data-ttu-id="874d0-146">从零开始的列序号。</span><span class="sxs-lookup"><span data-stu-id="874d0-146">The zero-based column ordinal.</span></span></param>
        <summary><span data-ttu-id="874d0-147">以字节的形式获取指定列的值。</span><span class="sxs-lookup"><span data-stu-id="874d0-147">Gets the value of the specified column as a byte.</span></span></summary>
        <returns><span data-ttu-id="874d0-148">指定列的值。</span><span class="sxs-lookup"><span data-stu-id="874d0-148">The value of the specified column.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="874d0-149">不执行任何转换;因此，检索的数据必须已是一个字节或强制为一个字节。</span><span class="sxs-lookup"><span data-stu-id="874d0-149">No conversions are performed; therefore the data retrieved must already be a byte or coercible to a byte.</span></span>  
  
 <span data-ttu-id="874d0-150">调用 <xref:System.Data.DataTableReader.IsDBNull%2A> 此方法之前，请调用以查看是否存在 null 值。</span><span class="sxs-lookup"><span data-stu-id="874d0-150">Call <xref:System.Data.DataTableReader.IsDBNull%2A> to see if there are null values before calling this method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="874d0-151">下面的示例在传入的中显示编号为2的列的内容 <xref:System.Data.DataTableReader> 。</span><span class="sxs-lookup"><span data-stu-id="874d0-151">The following example displays the contents of the column numbered 2 within the passed-in <xref:System.Data.DataTableReader>.</span></span> <span data-ttu-id="874d0-152">如果特定行中的列的值为 null，则代码将显示文本 \<NULL> 。</span><span class="sxs-lookup"><span data-stu-id="874d0-152">If the value the column within a particular row is null, the code displays the text \<NULL>.</span></span> <span data-ttu-id="874d0-153">如果列中的数据类型不正确，则此示例将为每一行显示一条错误消息。</span><span class="sxs-lookup"><span data-stu-id="874d0-153">If the data within the column is not of the correct type, the example displays an error message for each row.</span></span>  
  
 [!code-csharp[DataWorks DataTableReader.GetByte#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetByte/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.GetByte#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetByte/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="874d0-154">传递的索引超出了 0 到 <see cref="P:System.Data.DataTableReader.FieldCount" /> -1 的范围。</span><span class="sxs-lookup"><span data-stu-id="874d0-154">The index passed was outside the range of 0 to <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</span></span></exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException"><span data-ttu-id="874d0-155">尝试从已删除的行中检索数据。</span><span class="sxs-lookup"><span data-stu-id="874d0-155">An attempt was made to retrieve data from a deleted row.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="874d0-156">尝试读取或访问已关闭的 <see langword="DataTableReader" /> 中的列。</span><span class="sxs-lookup"><span data-stu-id="874d0-156">An attempt was made to read or access a column in a closed <see langword="DataTableReader" />.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="874d0-157">指定的列不包含字节。</span><span class="sxs-lookup"><span data-stu-id="874d0-157">The specified column does not contain a byte.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public override long GetBytes (int ordinal, long dataIndex, byte[] buffer, int bufferIndex, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int64 GetBytes(int32 ordinal, int64 dataIndex, unsigned int8[] buffer, int32 bufferIndex, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetBytes (ordinal As Integer, dataIndex As Long, buffer As Byte(), bufferIndex As Integer, length As Integer) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override long GetBytes(int ordinal, long dataIndex, cli::array &lt;System::Byte&gt; ^ buffer, int bufferIndex, int length);" />
      <MemberSignature Language="F#" Value="override this.GetBytes : int * int64 * byte[] * int * int -&gt; int64" Usage="dataTableReader.GetBytes (ordinal, dataIndex, buffer, bufferIndex, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
        <Parameter Name="dataIndex" Type="System.Int64" />
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="bufferIndex" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal"><span data-ttu-id="874d0-158">从零开始的列序号。</span><span class="sxs-lookup"><span data-stu-id="874d0-158">The zero-based column ordinal.</span></span></param>
        <param name="dataIndex"><span data-ttu-id="874d0-159">字段中作为读取操作起始位置的索引。</span><span class="sxs-lookup"><span data-stu-id="874d0-159">The index within the field from which to start the read operation.</span></span></param>
        <param name="buffer"><span data-ttu-id="874d0-160">要读入字节流的缓冲区。</span><span class="sxs-lookup"><span data-stu-id="874d0-160">The buffer into which to read the stream of bytes.</span></span></param>
        <param name="bufferIndex"><span data-ttu-id="874d0-161">缓冲区中的索引，从该索引处开始放置数据。</span><span class="sxs-lookup"><span data-stu-id="874d0-161">The index within the buffer at which to start placing the data.</span></span></param>
        <param name="length"><span data-ttu-id="874d0-162">复制到缓冲区中的最大长度。</span><span class="sxs-lookup"><span data-stu-id="874d0-162">The maximum length to copy into the buffer.</span></span></param>
        <summary><span data-ttu-id="874d0-163">将从指定列偏移量开始的字节流作为从指定缓冲区偏移量开始的数组读入缓冲区中。</span><span class="sxs-lookup"><span data-stu-id="874d0-163">Reads a stream of bytes starting at the specified column offset into the buffer as an array starting at the specified buffer offset.</span></span></summary>
        <returns><span data-ttu-id="874d0-164">读取的实际字节数。</span><span class="sxs-lookup"><span data-stu-id="874d0-164">The actual number of bytes read.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="874d0-165">`GetBytes` 返回字段中的可用字节数。</span><span class="sxs-lookup"><span data-stu-id="874d0-165">`GetBytes` returns the number of available bytes in the field.</span></span> <span data-ttu-id="874d0-166">大多数情况下，这是字段的准确长度。</span><span class="sxs-lookup"><span data-stu-id="874d0-166">Most of the time this is the exact length of the field.</span></span> <span data-ttu-id="874d0-167">但是，如果已 `GetBytes` 使用从字段获取字节，则返回的数字可能小于字段的实际长度。</span><span class="sxs-lookup"><span data-stu-id="874d0-167">However, the number returned may be less than the true length of the field if `GetBytes` has already been used to obtain bytes from the field.</span></span> <span data-ttu-id="874d0-168">例如，当将 <xref:System.Data.DataTableReader> 大型数据结构读入缓冲区时，可能会出现这种情况。</span><span class="sxs-lookup"><span data-stu-id="874d0-168">This may be the case, for example, when the <xref:System.Data.DataTableReader> is reading a large data structure into a buffer</span></span>  
  
 <span data-ttu-id="874d0-169">如果传递 `null` `Nothing` 在 Visual Basic) 中 (的缓冲区，则 `GetBytes` 返回整个字段的长度（以字节为单位），而不是基于缓冲区 offset 参数的剩余大小。</span><span class="sxs-lookup"><span data-stu-id="874d0-169">If you pass a buffer that is `null` (`Nothing` in Visual Basic), `GetBytes` returns the length of the entire field in bytes, not the remaining size based on the buffer offset parameter.</span></span>  
  
 <span data-ttu-id="874d0-170">不执行任何转换;因此，检索的数据必须已经是字节数组或强制到字节数组。</span><span class="sxs-lookup"><span data-stu-id="874d0-170">No conversions are performed; therefore the data retrieved must already be a byte array or coercible to a byte array.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="874d0-171">下面的示例 <xref:System.Data.DataTableReader> 基于 AdventureWorks 示例数据库中的数据创建一个，并将检索到的每个图像保存到 C：\ 的单独文件中。folder.</span><span class="sxs-lookup"><span data-stu-id="874d0-171">The following example creates a <xref:System.Data.DataTableReader> based on data in the AdventureWorks sample database, and saves each image retrieved to a separate file in the C:\ folder.</span></span> <span data-ttu-id="874d0-172">若要测试此应用程序，请创建新的控制台应用程序，引用 System.Drawing.dll 程序集，然后将示例代码粘贴到新创建的文件中。</span><span class="sxs-lookup"><span data-stu-id="874d0-172">In order to test this application, create a new Console application, reference the System.Drawing.dll assembly, and paste the sample code into the newly created file.</span></span>  
  
 [!code-csharp[DataWorks DataTableReader.GetBytes#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetBytes/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.GetBytes#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetBytes/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="874d0-173">传递的索引超出了 0 到 <see cref="P:System.Data.DataTableReader.FieldCount" /> -1 的范围。</span><span class="sxs-lookup"><span data-stu-id="874d0-173">The index passed was outside the range of 0 to <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</span></span></exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException"><span data-ttu-id="874d0-174">尝试从已删除的行中检索数据。</span><span class="sxs-lookup"><span data-stu-id="874d0-174">An attempt was made to retrieve data from a deleted row.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="874d0-175">尝试读取或访问已关闭的 <see langword="DataTableReader" /> 中的列。</span><span class="sxs-lookup"><span data-stu-id="874d0-175">An attempt was made to read or access a column in a closed <see langword="DataTableReader" />.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="874d0-176">指定的列不包含字节数组。</span><span class="sxs-lookup"><span data-stu-id="874d0-176">The specified column does not contain a byte array.</span></span></exception>
        <altmember cref="M:System.Data.DataTableReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetChar">
      <MemberSignature Language="C#" Value="public override char GetChar (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance char GetChar(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetChar(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetChar (ordinal As Integer) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override char GetChar(int ordinal);" />
      <MemberSignature Language="F#" Value="override this.GetChar : int -&gt; char" Usage="dataTableReader.GetChar ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal"><span data-ttu-id="874d0-177">从零开始的列序号。</span><span class="sxs-lookup"><span data-stu-id="874d0-177">The zero-based column ordinal.</span></span></param>
        <summary><span data-ttu-id="874d0-178">获取指定列的字符形式的值。</span><span class="sxs-lookup"><span data-stu-id="874d0-178">Gets the value of the specified column as a character.</span></span></summary>
        <returns><span data-ttu-id="874d0-179">列的值。</span><span class="sxs-lookup"><span data-stu-id="874d0-179">The value of the column.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="874d0-180">不执行任何转换;因此，检索的数据必须已是一个字符或强制为一个字符。</span><span class="sxs-lookup"><span data-stu-id="874d0-180">No conversions are performed; therefore the data retrieved must already be a character or coercible to a character.</span></span>  
  
 <span data-ttu-id="874d0-181">调用 <xref:System.Data.DataTableReader.IsDBNull%2A> 此方法之前，请调用以查看是否存在 null 值。</span><span class="sxs-lookup"><span data-stu-id="874d0-181">Call <xref:System.Data.DataTableReader.IsDBNull%2A> to see if there are null values before calling this method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="874d0-182">下面的示例在传入的 DataTableReader 中显示编号为2的列的内容。</span><span class="sxs-lookup"><span data-stu-id="874d0-182">The following example displays the contents of the column numbered 2 within the passed-in DataTableReader.</span></span> <span data-ttu-id="874d0-183">如果特定行中的列的值为 null，则代码将显示文本 \<NULL> 。</span><span class="sxs-lookup"><span data-stu-id="874d0-183">If the value the column within a particular row is null, the code displays the text \<NULL>.</span></span> <span data-ttu-id="874d0-184">如果列中的数据类型不正确，则此示例将为每一行显示一条错误消息。</span><span class="sxs-lookup"><span data-stu-id="874d0-184">If the data within the column is not of the correct type, the example displays an error message for each row.</span></span>  
  
 [!code-csharp[DataWorks DataTableReader.GetChar#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetChar/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.GetChar#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetChar/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="874d0-185">传递的索引超出了 0 到 <see cref="P:System.Data.DataTableReader.FieldCount" /> -1 的范围。</span><span class="sxs-lookup"><span data-stu-id="874d0-185">The index passed was outside the range of 0 to <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</span></span></exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException"><span data-ttu-id="874d0-186">尝试从已删除的行中检索数据。</span><span class="sxs-lookup"><span data-stu-id="874d0-186">An attempt was made to retrieve data from a deleted row.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="874d0-187">尝试读取或访问已关闭的 <see langword="DataTableReader" /> 中的列。</span><span class="sxs-lookup"><span data-stu-id="874d0-187">An attempt was made to read or access a column in a closed <see langword="DataTableReader" />.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="874d0-188">指定的字段不包含字符。</span><span class="sxs-lookup"><span data-stu-id="874d0-188">The specified field does not contain a character.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetChars">
      <MemberSignature Language="C#" Value="public override long GetChars (int ordinal, long dataIndex, char[] buffer, int bufferIndex, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int64 GetChars(int32 ordinal, int64 dataIndex, char[] buffer, int32 bufferIndex, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetChars (ordinal As Integer, dataIndex As Long, buffer As Char(), bufferIndex As Integer, length As Integer) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override long GetChars(int ordinal, long dataIndex, cli::array &lt;char&gt; ^ buffer, int bufferIndex, int length);" />
      <MemberSignature Language="F#" Value="override this.GetChars : int * int64 * char[] * int * int -&gt; int64" Usage="dataTableReader.GetChars (ordinal, dataIndex, buffer, bufferIndex, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
        <Parameter Name="dataIndex" Type="System.Int64" />
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="bufferIndex" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal"><span data-ttu-id="874d0-189">从零开始的列序号。</span><span class="sxs-lookup"><span data-stu-id="874d0-189">The zero-based column ordinal.</span></span></param>
        <param name="dataIndex"><span data-ttu-id="874d0-190">字段中作为读取操作起始位置的索引。</span><span class="sxs-lookup"><span data-stu-id="874d0-190">The index within the field from which to start the read operation.</span></span></param>
        <param name="buffer"><span data-ttu-id="874d0-191">要读入字节流的缓冲区。</span><span class="sxs-lookup"><span data-stu-id="874d0-191">The buffer into which to read the stream of chars.</span></span></param>
        <param name="bufferIndex"><span data-ttu-id="874d0-192">缓冲区中的索引，从该索引处开始放置数据。</span><span class="sxs-lookup"><span data-stu-id="874d0-192">The index within the buffer at which to start placing the data.</span></span></param>
        <param name="length"><span data-ttu-id="874d0-193">复制到缓冲区中的最大长度。</span><span class="sxs-lookup"><span data-stu-id="874d0-193">The maximum length to copy into the buffer.</span></span></param>
        <summary><span data-ttu-id="874d0-194">以字符数组的形式返回指定列的值。</span><span class="sxs-lookup"><span data-stu-id="874d0-194">Returns the value of the specified column as a character array.</span></span></summary>
        <returns><span data-ttu-id="874d0-195">读取的实际字符数。</span><span class="sxs-lookup"><span data-stu-id="874d0-195">The actual number of characters read.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="874d0-196">`GetChars` 返回字段中的可用字符数。</span><span class="sxs-lookup"><span data-stu-id="874d0-196">`GetChars` returns the number of available characters in the field.</span></span> <span data-ttu-id="874d0-197">大多数情况下，这是字段的准确长度。</span><span class="sxs-lookup"><span data-stu-id="874d0-197">Most of the time this is the exact length of the field.</span></span> <span data-ttu-id="874d0-198">但是，如果 `GetChars` 已用于从字段获取字符，则返回的数字可能小于字段的真实长度。</span><span class="sxs-lookup"><span data-stu-id="874d0-198">However, the number returned may be less than the true length of the field if `GetChars` has already been used to obtain characters from the field.</span></span>  
  
 <span data-ttu-id="874d0-199">如果到达了字段的末尾，则读取的实际字符数可以小于请求的长度。</span><span class="sxs-lookup"><span data-stu-id="874d0-199">The actual number of characters read can be less than the requested length, if the end of the field is reached.</span></span> <span data-ttu-id="874d0-200">如果传递 Visual Basic) 中为 null (的缓冲区 `Nothing` ，则 `GetChars` 返回整个字段的长度（字符），而不是基于缓冲区 offset 参数的剩余大小。</span><span class="sxs-lookup"><span data-stu-id="874d0-200">If you pass a buffer that is null (`Nothing` in Visual Basic), `GetChars` returns the length of the entire field in characters, not the remaining size based on the buffer offset parameter.</span></span>  
  
 <span data-ttu-id="874d0-201">不执行任何转换;因此，要检索的数据必须已是字符数组或强制为字符数组。</span><span class="sxs-lookup"><span data-stu-id="874d0-201">No conversions are performed; therefore the data to be retrieved must already be a character array or coercible to a character array.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="874d0-202">下面的示例演示 `GetChars` 方法。</span><span class="sxs-lookup"><span data-stu-id="874d0-202">The following example demonstrates the `GetChars` method.</span></span> <span data-ttu-id="874d0-203">此 `TestGetChars` 方法期望向传递一个 `DataTableReader` 填充了两列数据的：第一列中的文件名和第二列中的字符数组。</span><span class="sxs-lookup"><span data-stu-id="874d0-203">The `TestGetChars` method expects to be passed a `DataTableReader` filled with two columns of data: a file name in the first column, and an array of characters in the second.</span></span> <span data-ttu-id="874d0-204">此外， `TestGetChars` 还可以指定要在读取中字符数组中的数据时使用的缓冲区大小 `DataTableReader` 。</span><span class="sxs-lookup"><span data-stu-id="874d0-204">In addition, `TestGetChars` lets you specify the buffer size to be used as it reads the data from the character array in the `DataTableReader`.</span></span> <span data-ttu-id="874d0-205">`TestGetChars``DataTableReader`使用的第一列中提供的数据作为文件名，创建对应于中每个数据行的文件 `DataTableReader` 。</span><span class="sxs-lookup"><span data-stu-id="874d0-205">`TestGetChars` creates a file corresponding to each row of data in the `DataTableReader`, using the supplied data in the first column of the `DataTableReader` as the file name.</span></span>  
  
 <span data-ttu-id="874d0-206">此过程演示如何使用将 `GetChars` 存储在中的数据读取 `DataTable` 为字符数组。</span><span class="sxs-lookup"><span data-stu-id="874d0-206">This procedure demonstrates the use of the `GetChars` method reading data that was stored in the `DataTable` as a character array.</span></span> <span data-ttu-id="874d0-207">任何其他类型的数据都会导致 `GetChars` 方法引发 `InvalidCastException` 。</span><span class="sxs-lookup"><span data-stu-id="874d0-207">Any other type of data causes the `GetChars` method to throw an `InvalidCastException`.</span></span>  
  
 [!code-csharp[DataWorks DataTableReader.GetChars#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetChars/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.GetChars#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetChars/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="874d0-208">传递的索引超出了 0 到 <see cref="P:System.Data.DataTableReader.FieldCount" /> -1 的范围。</span><span class="sxs-lookup"><span data-stu-id="874d0-208">The index passed was outside the range of 0 to <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</span></span></exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException"><span data-ttu-id="874d0-209">尝试从已删除的行中检索数据。</span><span class="sxs-lookup"><span data-stu-id="874d0-209">An attempt was made to retrieve data from a deleted row.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="874d0-210">尝试读取或访问已关闭的 <see langword="DataTableReader" /> 中的列。</span><span class="sxs-lookup"><span data-stu-id="874d0-210">An attempt was made to read or access a column in a closed <see langword="DataTableReader" />.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="874d0-211">指定的列不包含字符数组。</span><span class="sxs-lookup"><span data-stu-id="874d0-211">The specified column does not contain a character array.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetDataTypeName">
      <MemberSignature Language="C#" Value="public override string GetDataTypeName (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetDataTypeName(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetDataTypeName(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDataTypeName (ordinal As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ GetDataTypeName(int ordinal);" />
      <MemberSignature Language="F#" Value="override this.GetDataTypeName : int -&gt; string" Usage="dataTableReader.GetDataTypeName ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal"><span data-ttu-id="874d0-212">从零开始的列序号。</span><span class="sxs-lookup"><span data-stu-id="874d0-212">The zero-based column ordinal.</span></span></param>
        <summary><span data-ttu-id="874d0-213">获取一个表示指定列的数据类型的字符串。</span><span class="sxs-lookup"><span data-stu-id="874d0-213">Gets a string representing the data type of the specified column.</span></span></summary>
        <returns><span data-ttu-id="874d0-214">一个表示列的数据类型的字符串。</span><span class="sxs-lookup"><span data-stu-id="874d0-214">A string representing the column's data type.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="874d0-215"><xref:System.Data.DataTableReader.GetDataTypeName%2A>方法始终返回基础类型， <xref:System.Data.DataColumn> 而不是特定于提供程序的类型。</span><span class="sxs-lookup"><span data-stu-id="874d0-215">The <xref:System.Data.DataTableReader.GetDataTypeName%2A> method always returns the type of the underlying <xref:System.Data.DataColumn> instead of a provider-specific type.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="874d0-216">下面的控制台应用程序从简单的中显示字段列表及其类型名称 <xref:System.Data.DataTable> ：</span><span class="sxs-lookup"><span data-stu-id="874d0-216">The following console application displays a list of fields and their type names from a simple <xref:System.Data.DataTable>:</span></span>  
  
 [!code-csharp[DataWorks DataTableReader.GetDataTypeName#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetDataTypeName/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.GetDataTypeName#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetDataTypeName/VB/source.vb#1)]  
  
 <span data-ttu-id="874d0-217">控制台窗口将显示以下结果：</span><span class="sxs-lookup"><span data-stu-id="874d0-217">The Console window displays the following results:</span></span>  
  
```  
ID: Int32  
Name: String  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="874d0-218">传递的索引超出了 0 到 <see cref="P:System.Data.DataTableReader.FieldCount" /> -1 的范围。</span><span class="sxs-lookup"><span data-stu-id="874d0-218">The index passed was outside the range of 0 to <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="874d0-219">尝试读取或访问已关闭的 <see cref="T:System.Data.DataTableReader" /> 中的列。</span><span class="sxs-lookup"><span data-stu-id="874d0-219">An attempt was made to read or access a column in a closed <see cref="T:System.Data.DataTableReader" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetDateTime">
      <MemberSignature Language="C#" Value="public override DateTime GetDateTime (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.DateTime GetDateTime(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetDateTime(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDateTime (ordinal As Integer) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override DateTime GetDateTime(int ordinal);" />
      <MemberSignature Language="F#" Value="override this.GetDateTime : int -&gt; DateTime" Usage="dataTableReader.GetDateTime ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal"><span data-ttu-id="874d0-220">从零开始的列序号。</span><span class="sxs-lookup"><span data-stu-id="874d0-220">The zero-based column ordinal.</span></span></param>
        <summary><span data-ttu-id="874d0-221">以 <see cref="T:System.DateTime" /> 对象的形式获取指定列的值。</span><span class="sxs-lookup"><span data-stu-id="874d0-221">Gets the value of the specified column as a <see cref="T:System.DateTime" /> object.</span></span></summary>
        <returns><span data-ttu-id="874d0-222">指定列的值。</span><span class="sxs-lookup"><span data-stu-id="874d0-222">The value of the specified column.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="874d0-223">不执行任何转换;因此，检索到的数据必须已经是 <xref:System.DateTime> 或强制的 `DataTime` 。</span><span class="sxs-lookup"><span data-stu-id="874d0-223">No conversions are performed; therefore the data retrieved must already be a <xref:System.DateTime> or coercible to a `DataTime`.</span></span>  
  
 <span data-ttu-id="874d0-224">调用 <xref:System.Data.DataTableReader.IsDBNull%2A> 此方法之前，请调用以查看是否存在 null 值。</span><span class="sxs-lookup"><span data-stu-id="874d0-224">Call <xref:System.Data.DataTableReader.IsDBNull%2A> to see if there are null values before calling this method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="874d0-225">下面的示例在传入的中显示编号为2的列的内容 <xref:System.Data.DataTableReader> 。</span><span class="sxs-lookup"><span data-stu-id="874d0-225">The following example displays the contents of the column numbered 2 within the passed-in <xref:System.Data.DataTableReader>.</span></span> <span data-ttu-id="874d0-226">如果特定行中的列的值为 null，则代码将显示文本 \<NULL> 。</span><span class="sxs-lookup"><span data-stu-id="874d0-226">If the value the column within a particular row is null, the code displays the text \<NULL>.</span></span> <span data-ttu-id="874d0-227">如果列中的数据类型不正确，则此示例将为每一行显示一条错误消息。</span><span class="sxs-lookup"><span data-stu-id="874d0-227">If the data within the column is not of the correct type, the example displays an error message for each row.</span></span>  
  
 [!code-csharp[DataWorks DataTableReader.GetDateTime#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetDateTime/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.GetDateTime#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetDateTime/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="874d0-228">传递的索引超出了 0 到 <see cref="P:System.Data.DataTableReader.FieldCount" /> -1 的范围。</span><span class="sxs-lookup"><span data-stu-id="874d0-228">The index passed was outside the range of 0 to <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</span></span></exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException"><span data-ttu-id="874d0-229">尝试从已删除的行中检索数据。</span><span class="sxs-lookup"><span data-stu-id="874d0-229">An attempt was made to retrieve data from a deleted row.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="874d0-230">尝试读取或访问已关闭的 <see langword="DataTableReader" /> 中的列。</span><span class="sxs-lookup"><span data-stu-id="874d0-230">An attempt was made to read or access a column in a closed <see langword="DataTableReader" />.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="874d0-231">指定的列不包含 DateTime 值。</span><span class="sxs-lookup"><span data-stu-id="874d0-231">The specified column does not contain a DateTime value.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetDecimal">
      <MemberSignature Language="C#" Value="public override decimal GetDecimal (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.Decimal GetDecimal(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetDecimal(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDecimal (ordinal As Integer) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Decimal GetDecimal(int ordinal);" />
      <MemberSignature Language="F#" Value="override this.GetDecimal : int -&gt; decimal" Usage="dataTableReader.GetDecimal ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal"><span data-ttu-id="874d0-232">从零开始的列序号。</span><span class="sxs-lookup"><span data-stu-id="874d0-232">The zero-based column ordinal.</span></span></param>
        <summary><span data-ttu-id="874d0-233">获取指定列的 <see cref="T:System.Decimal" /> 形式的值。</span><span class="sxs-lookup"><span data-stu-id="874d0-233">Gets the value of the specified column as a <see cref="T:System.Decimal" />.</span></span></summary>
        <returns><span data-ttu-id="874d0-234">指定列的值。</span><span class="sxs-lookup"><span data-stu-id="874d0-234">The value of the specified column.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="874d0-235">不执行任何转换;因此，检索到的数据必须已经是 <xref:System.Decimal> 或强制的 `Decimal` 。</span><span class="sxs-lookup"><span data-stu-id="874d0-235">No conversions are performed; therefore the data retrieved must already be a <xref:System.Decimal> or coercible to a `Decimal`.</span></span>  
  
 <span data-ttu-id="874d0-236">调用 <xref:System.Data.DataTableReader.IsDBNull%2A> 此方法之前，请调用以查看是否存在 null 值。</span><span class="sxs-lookup"><span data-stu-id="874d0-236">Call <xref:System.Data.DataTableReader.IsDBNull%2A> to see if there are null values before calling this method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="874d0-237">下面的示例在传入的中显示编号为2的列的内容 <xref:System.Data.DataTableReader> 。</span><span class="sxs-lookup"><span data-stu-id="874d0-237">The following example displays the contents of the column numbered 2 within the passed-in <xref:System.Data.DataTableReader>.</span></span> <span data-ttu-id="874d0-238">如果特定行中的列的值为 null，则代码将显示文本 \<NULL> 。</span><span class="sxs-lookup"><span data-stu-id="874d0-238">If the value the column within a particular row is null, the code displays the text \<NULL>.</span></span> <span data-ttu-id="874d0-239">如果列中的数据类型不正确，则此示例将为每一行显示一条错误消息。</span><span class="sxs-lookup"><span data-stu-id="874d0-239">If the data within the column is not of the correct type, the example displays an error message for each row.</span></span>  
  
 [!code-csharp[DataWorks DataTableReader.GetDecimal#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetDecimal/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.GetDecimal#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetDecimal/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="874d0-240">传递的索引超出了 0 到 <see cref="P:System.Data.DataTableReader.FieldCount" /> -1 的范围。</span><span class="sxs-lookup"><span data-stu-id="874d0-240">The index passed was outside the range of 0 to <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</span></span></exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException"><span data-ttu-id="874d0-241">尝试从已删除的行中检索数据。</span><span class="sxs-lookup"><span data-stu-id="874d0-241">An attempt was made to retrieve data from a deleted row.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="874d0-242">尝试读取或访问已关闭的 <see langword="DataTableReader" /> 中的列。</span><span class="sxs-lookup"><span data-stu-id="874d0-242">An attempt was made to read or access a column in a closed <see langword="DataTableReader" />.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="874d0-243">指定的列不包含 <see langword="Decimal" /> 值。</span><span class="sxs-lookup"><span data-stu-id="874d0-243">The specified column does not contain a <see langword="Decimal" /> value.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetDouble">
      <MemberSignature Language="C#" Value="public override double GetDouble (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance float64 GetDouble(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetDouble(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDouble (ordinal As Integer) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override double GetDouble(int ordinal);" />
      <MemberSignature Language="F#" Value="override this.GetDouble : int -&gt; double" Usage="dataTableReader.GetDouble ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal"><span data-ttu-id="874d0-244">从零开始的列序号。</span><span class="sxs-lookup"><span data-stu-id="874d0-244">The zero-based ordinal of the column.</span></span></param>
        <summary><span data-ttu-id="874d0-245">获取双精度浮点数形式的列值。</span><span class="sxs-lookup"><span data-stu-id="874d0-245">Gets the value of the column as a double-precision floating point number.</span></span></summary>
        <returns><span data-ttu-id="874d0-246">指定列的值。</span><span class="sxs-lookup"><span data-stu-id="874d0-246">The value of the specified column.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="874d0-247">不执行任何转换;因此，检索的数据必须已经是双精度浮点数，或者必须强制为双精度浮点数。</span><span class="sxs-lookup"><span data-stu-id="874d0-247">No conversions are performed; therefore the data retrieved must already be a double-precision floating point number or must be coercible to a double-precision floating point number.</span></span>  
  
 <span data-ttu-id="874d0-248">调用 <xref:System.Data.DataTableReader.IsDBNull%2A> 此方法之前，请调用以查看是否存在 null 值。</span><span class="sxs-lookup"><span data-stu-id="874d0-248">Call <xref:System.Data.DataTableReader.IsDBNull%2A> to see if there are null values before calling this method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="874d0-249">下面的示例在传入的中显示编号为2的列的内容 <xref:System.Data.DataTableReader> 。</span><span class="sxs-lookup"><span data-stu-id="874d0-249">The following example displays the contents of the column numbered 2 within the passed-in <xref:System.Data.DataTableReader>.</span></span> <span data-ttu-id="874d0-250">如果特定行中的列的值为 null，则代码将显示文本 \<NULL> 。</span><span class="sxs-lookup"><span data-stu-id="874d0-250">If the value the column within a particular row is null, the code displays the text \<NULL>.</span></span> <span data-ttu-id="874d0-251">如果列中的数据类型不正确，则此示例将为每一行显示一条错误消息。</span><span class="sxs-lookup"><span data-stu-id="874d0-251">If the data within the column is not of the correct type, the example displays an error message for each row.</span></span>  
  
 [!code-csharp[DataWorks DataTableReader.GetDouble#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetDouble/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.GetDouble#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetDouble/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="874d0-252">传递的索引超出了 0 到 <see cref="P:System.Data.DataTableReader.FieldCount" /> -1 的范围。</span><span class="sxs-lookup"><span data-stu-id="874d0-252">The index passed was outside the range of 0 to <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</span></span></exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException"><span data-ttu-id="874d0-253">尝试从已删除的行中检索数据。</span><span class="sxs-lookup"><span data-stu-id="874d0-253">An attempt was made to retrieve data from a deleted row.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="874d0-254">尝试读取或访问已关闭的 <see langword="DataTableReader" /> 中的列。</span><span class="sxs-lookup"><span data-stu-id="874d0-254">An attempt was made to read or access a column in a closed <see langword="DataTableReader" />.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="874d0-255">指定的列不包含双精度浮点数。</span><span class="sxs-lookup"><span data-stu-id="874d0-255">The specified column does not contain a double-precision floating point number.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public override System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="override this.GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="dataTableReader.GetEnumerator " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="874d0-256">返回一个可用于循环访问项集合的枚举数。</span><span class="sxs-lookup"><span data-stu-id="874d0-256">Returns an enumerator that can be used to iterate through the item collection.</span></span></summary>
        <returns><span data-ttu-id="874d0-257">一个 <see cref="T:System.Collections.IEnumerator" /> 对象，它代表项集合。</span><span class="sxs-lookup"><span data-stu-id="874d0-257">An <see cref="T:System.Collections.IEnumerator" /> object that represents the item collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="874d0-258">枚举器仅允许读取中的数据 <xref:System.Data.DataTableReader> 。</span><span class="sxs-lookup"><span data-stu-id="874d0-258">Enumerators only allow for reading the data in the <xref:System.Data.DataTableReader>.</span></span> <span data-ttu-id="874d0-259">枚举器不能用于修改基础集合。</span><span class="sxs-lookup"><span data-stu-id="874d0-259">Enumerators cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="874d0-260">首先，枚举器位于集合中第一个元素之前。</span><span class="sxs-lookup"><span data-stu-id="874d0-260">At first, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="874d0-261">在此位置，调用会 <xref:System.Collections.IEnumerator.Current%2A> 引发异常。</span><span class="sxs-lookup"><span data-stu-id="874d0-261">At this position, calling <xref:System.Collections.IEnumerator.Current%2A> throws an exception.</span></span> <span data-ttu-id="874d0-262">因此，在读取 `MoveNext` 的值之前，必须调用 `Current` 将枚举器向前移动到集合的第一个元素。</span><span class="sxs-lookup"><span data-stu-id="874d0-262">Therefore, you must call `MoveNext` to advance the enumerator to the first element of the collection before reading the value of `Current`.</span></span>  
  
 <span data-ttu-id="874d0-263">`Current` 返回 <xref:System.Data.Common.DbDataRecord> ，在调用或之前，返回相同的 <xref:System.Collections.IEnumerator.MoveNext%2A> 对象 <xref:System.Collections.IEnumerator.Reset%2A> 。</span><span class="sxs-lookup"><span data-stu-id="874d0-263">`Current` returns a <xref:System.Data.Common.DbDataRecord>, and returns the same object until either <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> is called.</span></span> <span data-ttu-id="874d0-264">`MoveNext` 将 `Current` 设置为下一个元素。</span><span class="sxs-lookup"><span data-stu-id="874d0-264">`MoveNext` sets `Current` to the next element.</span></span>  
  
 <span data-ttu-id="874d0-265">在集合的末尾之后，枚举数将定位在集合中最后一个元素的后面，并且调用将 `MoveNext` 返回 false。</span><span class="sxs-lookup"><span data-stu-id="874d0-265">After the end of the collection is passed, the enumerator is positioned after the last element in the collection, and calling `MoveNext` returns false.</span></span> <span data-ttu-id="874d0-266">如果最后一次调用 `MoveNext` 返回 `false` ，则调用会 `Current` 引发异常。</span><span class="sxs-lookup"><span data-stu-id="874d0-266">If the last call to `MoveNext` returned `false`, calling `Current` throws an exception.</span></span> <span data-ttu-id="874d0-267">此外，因为 <xref:System.Data.DataTableReader> 提供对其数据的只进访问，所以调用 IEnumerator 的 <xref:System.Collections.IEnumerator.Reset%2A> 方法会引发 <xref:System.NotSupportedException> 。</span><span class="sxs-lookup"><span data-stu-id="874d0-267">In addition, because the <xref:System.Data.DataTableReader> provides forward-only access to its data, calling the <xref:System.Collections.IEnumerator.Reset%2A> method of the IEnumerator throws a <xref:System.NotSupportedException>.</span></span>  
  
 <span data-ttu-id="874d0-268"><xref:System.Data.DataTableReader>提供稳定的枚举器。</span><span class="sxs-lookup"><span data-stu-id="874d0-268">The <xref:System.Data.DataTableReader> provides a stable enumerator.</span></span> <span data-ttu-id="874d0-269">这意味着，即使基础数据中发生行删除或添加，对的调用返回的枚举数 <xref:System.Data.DataTableReader.GetEnumerator%2A> 仍有效。</span><span class="sxs-lookup"><span data-stu-id="874d0-269">This means that even if row deletions or additions occur within the underlying data, the enumerator returned by a call to <xref:System.Data.DataTableReader.GetEnumerator%2A> is still valid.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="874d0-270">下面的示例演示 <xref:System.Data.DataTableReader.GetEnumerator%2A> 方法的用法。</span><span class="sxs-lookup"><span data-stu-id="874d0-270">The following example demonstrates the use of the <xref:System.Data.DataTableReader.GetEnumerator%2A> method.</span></span> <span data-ttu-id="874d0-271">这包括枚举器处于活动状态时从基础删除行时枚举器的行为 <xref:System.Data.DataTable> 。</span><span class="sxs-lookup"><span data-stu-id="874d0-271">This includes the behavior of the enumerator when rows are deleted from the underlying <xref:System.Data.DataTable> while the enumerator is active.</span></span>  
  
 [!code-csharp[DataWorks DataTableReader.GetEnumerator#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetEnumerator/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.GetEnumerator#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetEnumerator/VB/source.vb#1)]  
  
 <span data-ttu-id="874d0-272">此过程会在控制台窗口中显示以下文本：</span><span class="sxs-lookup"><span data-stu-id="874d0-272">The procedure displays the following text in the Console window:</span></span>  
  
```  
Peter  
Mary  
Russ  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="874d0-273">尝试读取或访问已关闭的 <see cref="T:System.Data.DataTableReader" /> 中的列。</span><span class="sxs-lookup"><span data-stu-id="874d0-273">An attempt was made to read or access a column in a closed <see cref="T:System.Data.DataTableReader" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetFieldType">
      <MemberSignature Language="C#" Value="public override Type GetFieldType (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Type GetFieldType(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetFieldType(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetFieldType (ordinal As Integer) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override Type ^ GetFieldType(int ordinal);" />
      <MemberSignature Language="F#" Value="override this.GetFieldType : int -&gt; Type" Usage="dataTableReader.GetFieldType ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal"><span data-ttu-id="874d0-274">从零开始的列序号。</span><span class="sxs-lookup"><span data-stu-id="874d0-274">The zero-based column ordinal.</span></span></param>
        <summary><span data-ttu-id="874d0-275">获取作为对象的数据类型的 <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="874d0-275">Gets the <see cref="T:System.Type" /> that is the data type of the object.</span></span></summary>
        <returns><span data-ttu-id="874d0-276">作为对象的数据类型的 <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="874d0-276">The <see cref="T:System.Type" /> that is the data type of the object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="874d0-277">调用以下过程，并传入实例， <xref:System.Data.DataTableReader> 以便在控制台窗口中显示所有字段的列表和每个类型的完整名称。</span><span class="sxs-lookup"><span data-stu-id="874d0-277">Call the following procedure, passing in a <xref:System.Data.DataTableReader> instance in order to display a list of all the fields and the full name for each type in the Console window.</span></span>  
  
 [!code-csharp[DataWorks DataTableReader.GetFieldType#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetFieldType/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.GetFieldType#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetFieldType/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="874d0-278">传递的索引超出了 0 到 <see cref="P:System.Data.DataTableReader.FieldCount" /> -1 的范围。</span><span class="sxs-lookup"><span data-stu-id="874d0-278">The index passed was outside the range of 0 to <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="874d0-279">尝试读取或访问已关闭 <see cref="T:System.Data.DataTableReader" /> 中的列。</span><span class="sxs-lookup"><span data-stu-id="874d0-279">An attempt was made to read or access a column in a closed <see cref="T:System.Data.DataTableReader" /> .</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetFloat">
      <MemberSignature Language="C#" Value="public override float GetFloat (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance float32 GetFloat(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetFloat(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetFloat (ordinal As Integer) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override float GetFloat(int ordinal);" />
      <MemberSignature Language="F#" Value="override this.GetFloat : int -&gt; single" Usage="dataTableReader.GetFloat ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal"><span data-ttu-id="874d0-280">从零开始的列序号。</span><span class="sxs-lookup"><span data-stu-id="874d0-280">The zero-based column ordinal.</span></span></param>
        <summary><span data-ttu-id="874d0-281">以单精度浮点数字的形式获取指定列的值。</span><span class="sxs-lookup"><span data-stu-id="874d0-281">Gets the value of the specified column as a single-precision floating point number.</span></span></summary>
        <returns><span data-ttu-id="874d0-282">列的值。</span><span class="sxs-lookup"><span data-stu-id="874d0-282">The value of the column.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="874d0-283">不执行任何转换;因此，检索的数据必须已经是单精度浮点数，或者必须强制为单精度浮点数字。</span><span class="sxs-lookup"><span data-stu-id="874d0-283">No conversions are performed; therefore the data retrieved must already be a single-precision floating point number or must be coercible to a single-precision floating point number.</span></span>  
  
 <span data-ttu-id="874d0-284">调用 <xref:System.Data.DataTableReader.IsDBNull%2A> 此方法之前，请调用以查看是否存在 null 值。</span><span class="sxs-lookup"><span data-stu-id="874d0-284">Call <xref:System.Data.DataTableReader.IsDBNull%2A> to see if there are null values before calling this method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="874d0-285">下面的示例在传入的中显示编号为2的列的内容 <xref:System.Data.DataTableReader> 。</span><span class="sxs-lookup"><span data-stu-id="874d0-285">The following example displays the contents of the column numbered 2 within the passed-in <xref:System.Data.DataTableReader>.</span></span> <span data-ttu-id="874d0-286">如果特定行中的列的值为 null，则代码将显示文本 \<NULL> 。</span><span class="sxs-lookup"><span data-stu-id="874d0-286">If the value the column within a particular row is null, the code displays the text \<NULL>.</span></span> <span data-ttu-id="874d0-287">如果列中的数据类型不正确，则此示例将为每一行显示一条错误消息。</span><span class="sxs-lookup"><span data-stu-id="874d0-287">If the data within the column is not of the correct type, the example displays an error message for each row.</span></span>  
  
 [!code-csharp[DataWorks DataTableReader.GetFloat#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetFloat/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.GetFloat#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetFloat/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="874d0-288">传递的索引超出了 0 到 <see cref="P:System.Data.DataTableReader.FieldCount" /> -1 的范围。</span><span class="sxs-lookup"><span data-stu-id="874d0-288">The index passed was outside the range of 0 to <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</span></span></exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException"><span data-ttu-id="874d0-289">尝试从已删除的行中检索数据。</span><span class="sxs-lookup"><span data-stu-id="874d0-289">An attempt was made to retrieve data from a deleted row.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="874d0-290">尝试读取或访问已关闭的 <see cref="T:System.Data.DataTableReader" /> 中的列。</span><span class="sxs-lookup"><span data-stu-id="874d0-290">An attempt was made to read or access a column in a closed <see cref="T:System.Data.DataTableReader" />.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="874d0-291">指定的列不包含单精度浮点数。</span><span class="sxs-lookup"><span data-stu-id="874d0-291">The specified column does not contain a single-precision floating point number.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetGuid">
      <MemberSignature Language="C#" Value="public override Guid GetGuid (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.Guid GetGuid(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetGuid(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetGuid (ordinal As Integer) As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override Guid GetGuid(int ordinal);" />
      <MemberSignature Language="F#" Value="override this.GetGuid : int -&gt; Guid" Usage="dataTableReader.GetGuid ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal"><span data-ttu-id="874d0-292">从零开始的列序号。</span><span class="sxs-lookup"><span data-stu-id="874d0-292">The zero-based column ordinal.</span></span></param>
        <summary><span data-ttu-id="874d0-293">以全局唯一标识符 (GUID) 的形式获取指定列的值。</span><span class="sxs-lookup"><span data-stu-id="874d0-293">Gets the value of the specified column as a globally-unique identifier (GUID).</span></span></summary>
        <returns><span data-ttu-id="874d0-294">指定列的值。</span><span class="sxs-lookup"><span data-stu-id="874d0-294">The value of the specified column.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="874d0-295">不执行任何转换;因此，检索到的数据必须已经是 <xref:System.Guid> 或强制的 `Guid` 。</span><span class="sxs-lookup"><span data-stu-id="874d0-295">No conversions are performed; therefore the data retrieved must already be a <xref:System.Guid> or coercible to a `Guid`.</span></span>  
  
 <span data-ttu-id="874d0-296">调用 <xref:System.Data.DataTableReader.IsDBNull%2A> 此方法之前，请调用以查看是否存在 null 值。</span><span class="sxs-lookup"><span data-stu-id="874d0-296">Call <xref:System.Data.DataTableReader.IsDBNull%2A> to see if there are null values before calling this method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="874d0-297">下面的示例在传入的 DataTableReader 中显示编号为2的列的内容。</span><span class="sxs-lookup"><span data-stu-id="874d0-297">The following example displays the contents of the column numbered 2 within the passed-in DataTableReader.</span></span> <span data-ttu-id="874d0-298">如果特定行中的列的值为 null，则代码将显示文本 \<NULL> 。</span><span class="sxs-lookup"><span data-stu-id="874d0-298">If the value the column within a particular row is null, the code displays the text \<NULL>.</span></span> <span data-ttu-id="874d0-299">如果列中的数据类型不正确，则此示例将为每一行显示一条错误消息。</span><span class="sxs-lookup"><span data-stu-id="874d0-299">If the data within the column is not of the correct type, the example displays an error message for each row.</span></span>  
  
 [!code-csharp[DataWorks DataTableReader.GetGuid#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetGuid/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.GetGuid#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetGuid/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="874d0-300">传递的索引超出了 0 到 <see cref="P:System.Data.DataTableReader.FieldCount" /> -1 的范围。</span><span class="sxs-lookup"><span data-stu-id="874d0-300">The index passed was outside the range of 0 to <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</span></span></exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException"><span data-ttu-id="874d0-301">尝试从已删除的行中检索数据。</span><span class="sxs-lookup"><span data-stu-id="874d0-301">An attempt was made to retrieve data from a deleted row.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="874d0-302">尝试读取或访问已关闭的 <see cref="T:System.Data.DataTableReader" /> 中的列。</span><span class="sxs-lookup"><span data-stu-id="874d0-302">An attempt was made to read or access a column in a closed <see cref="T:System.Data.DataTableReader" />.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="874d0-303">指定的列不包含 GUID。</span><span class="sxs-lookup"><span data-stu-id="874d0-303">The specified column does not contain a GUID.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetInt16">
      <MemberSignature Language="C#" Value="public override short GetInt16 (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int16 GetInt16(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetInt16(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetInt16 (ordinal As Integer) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override short GetInt16(int ordinal);" />
      <MemberSignature Language="F#" Value="override this.GetInt16 : int -&gt; int16" Usage="dataTableReader.GetInt16 ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal"><span data-ttu-id="874d0-304">从零开始的列序号</span><span class="sxs-lookup"><span data-stu-id="874d0-304">The zero-based column ordinal</span></span></param>
        <summary><span data-ttu-id="874d0-305">获取指定列的 16 位有符号整数形式的值。</span><span class="sxs-lookup"><span data-stu-id="874d0-305">Gets the value of the specified column as a 16-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="874d0-306">指定列的值。</span><span class="sxs-lookup"><span data-stu-id="874d0-306">The value of the specified column.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="874d0-307">不执行任何转换;因此，检索的数据必须已是 <xref:System.Int16> 或强制的 `Int16` 。</span><span class="sxs-lookup"><span data-stu-id="874d0-307">No conversions are performed; therefore, the data retrieved must already be an <xref:System.Int16> or coercible to an `Int16`.</span></span>  
  
 <span data-ttu-id="874d0-308">调用 <xref:System.Data.DataTableReader.IsDBNull%2A> 此方法之前，请调用以查看是否存在 null 值。</span><span class="sxs-lookup"><span data-stu-id="874d0-308">Call <xref:System.Data.DataTableReader.IsDBNull%2A> to see if there are null values before calling this method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="874d0-309">下面的示例在传入的中显示编号为2的列的内容 <xref:System.Data.DataTableReader> 。</span><span class="sxs-lookup"><span data-stu-id="874d0-309">The following example displays the contents of the column numbered 2 within the passed-in <xref:System.Data.DataTableReader>.</span></span> <span data-ttu-id="874d0-310">如果特定行中的列的值为 null，则代码将显示文本 \<NULL> 。</span><span class="sxs-lookup"><span data-stu-id="874d0-310">If the value the column within a particular row is null, the code displays the text \<NULL>.</span></span> <span data-ttu-id="874d0-311">如果列中的数据类型不正确，则此示例将为每一行显示一条错误消息。</span><span class="sxs-lookup"><span data-stu-id="874d0-311">If the data within the column is not of the correct type, the example displays an error message for each row.</span></span>  
  
 [!code-csharp[DataWorks DataTableReader.GetInt16#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetInt16/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.GetInt16#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetInt16/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="874d0-312">传递的索引超出了 0 到 <see cref="P:System.Data.DataTableReader.FieldCount" /> -1 的范围。</span><span class="sxs-lookup"><span data-stu-id="874d0-312">The index passed was outside the range of 0 to <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</span></span></exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException"><span data-ttu-id="874d0-313">尝试从已删除的行中检索数据。</span><span class="sxs-lookup"><span data-stu-id="874d0-313">An attempt was made to retrieve data from a deleted row.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="874d0-314">尝试读取或访问已关闭的 <see cref="T:System.Data.DataTableReader" /> 中的列。</span><span class="sxs-lookup"><span data-stu-id="874d0-314">An attempt was made to read or access a column in a closed <see cref="T:System.Data.DataTableReader" />.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="874d0-315">指定的列不包含 16 位带符号整数。</span><span class="sxs-lookup"><span data-stu-id="874d0-315">The specified column does not contain a 16-bit signed integer.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetInt32">
      <MemberSignature Language="C#" Value="public override int GetInt32 (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetInt32(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetInt32(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetInt32 (ordinal As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetInt32(int ordinal);" />
      <MemberSignature Language="F#" Value="override this.GetInt32 : int -&gt; int" Usage="dataTableReader.GetInt32 ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal"><span data-ttu-id="874d0-316">从零开始的列序号</span><span class="sxs-lookup"><span data-stu-id="874d0-316">The zero-based column ordinal</span></span></param>
        <summary><span data-ttu-id="874d0-317">获取指定列的 32 位带符号整数形式的值。</span><span class="sxs-lookup"><span data-stu-id="874d0-317">Gets the value of the specified column as a 32-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="874d0-318">指定列的值。</span><span class="sxs-lookup"><span data-stu-id="874d0-318">The value of the specified column.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="874d0-319">不执行任何转换;因此，检索的数据必须已是 <xref:System.Int32> 或强制的 `Int32` 。</span><span class="sxs-lookup"><span data-stu-id="874d0-319">No conversions are performed; therefore, the data retrieved must already be an <xref:System.Int32> or coercible to an `Int32`.</span></span>  
  
 <span data-ttu-id="874d0-320">调用 <xref:System.Data.DataTableReader.IsDBNull%2A> 此方法之前，请调用以查看是否存在 null 值。</span><span class="sxs-lookup"><span data-stu-id="874d0-320">Call <xref:System.Data.DataTableReader.IsDBNull%2A> to see if there are null values before calling this method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="874d0-321">下面的示例在传入的中显示编号为2的列的内容 <xref:System.Data.DataTableReader> 。</span><span class="sxs-lookup"><span data-stu-id="874d0-321">The following example displays the contents of the column numbered 2 within the passed-in <xref:System.Data.DataTableReader>.</span></span> <span data-ttu-id="874d0-322">如果特定行中的列的值为 null，则代码将显示文本 \<NULL> 。</span><span class="sxs-lookup"><span data-stu-id="874d0-322">If the value the column within a particular row is null, the code displays the text \<NULL>.</span></span> <span data-ttu-id="874d0-323">如果列中的数据类型不正确，则此示例将为每一行显示一条错误消息。</span><span class="sxs-lookup"><span data-stu-id="874d0-323">If the data within the column is not of the correct type, the example displays an error message for each row.</span></span>  
  
 [!code-csharp[DataWorks DataTableReader.GetInt32#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetInt32/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.GetInt32#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetInt32/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="874d0-324">传递的索引超出了 0 到 <see cref="P:System.Data.DataTableReader.FieldCount" /> -1 的范围。</span><span class="sxs-lookup"><span data-stu-id="874d0-324">The index passed was outside the range of 0 to <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</span></span></exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException"><span data-ttu-id="874d0-325">尝试从已删除的行中检索数据。</span><span class="sxs-lookup"><span data-stu-id="874d0-325">An attempt was made to retrieve data from a deleted row.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="874d0-326">尝试读取或访问已关闭 <see cref="T:System.Data.DataTableReader" /> 中的列。</span><span class="sxs-lookup"><span data-stu-id="874d0-326">An attempt was made to read or access a column in a closed <see cref="T:System.Data.DataTableReader" /> .</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="874d0-327">指定的列不包含 32 位带符号整数值。</span><span class="sxs-lookup"><span data-stu-id="874d0-327">The specified column does not contain a 32-bit signed integer value.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetInt64">
      <MemberSignature Language="C#" Value="public override long GetInt64 (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int64 GetInt64(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetInt64(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetInt64 (ordinal As Integer) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override long GetInt64(int ordinal);" />
      <MemberSignature Language="F#" Value="override this.GetInt64 : int -&gt; int64" Usage="dataTableReader.GetInt64 ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal"><span data-ttu-id="874d0-328">从零开始的列序号</span><span class="sxs-lookup"><span data-stu-id="874d0-328">The zero-based column ordinal</span></span></param>
        <summary><span data-ttu-id="874d0-329">以 64 位有符号整数的形式获取指定列的值。</span><span class="sxs-lookup"><span data-stu-id="874d0-329">Gets the value of the specified column as a 64-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="874d0-330">指定列的值。</span><span class="sxs-lookup"><span data-stu-id="874d0-330">The value of the specified column.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="874d0-331">不执行任何转换;因此，检索的数据必须已是 <xref:System.Int64> 或强制的 `Int64` 。</span><span class="sxs-lookup"><span data-stu-id="874d0-331">No conversions are performed; therefore, the data retrieved must already be an <xref:System.Int64> or coercible to an `Int64`.</span></span>  
  
 <span data-ttu-id="874d0-332">调用 <xref:System.Data.DataTableReader.IsDBNull%2A> 此方法之前，请调用以查看是否存在 null 值。</span><span class="sxs-lookup"><span data-stu-id="874d0-332">Call <xref:System.Data.DataTableReader.IsDBNull%2A> to see if there are null values before calling this method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="874d0-333">下面的示例在传入的中显示编号为2的列的内容 <xref:System.Data.DataTableReader> 。</span><span class="sxs-lookup"><span data-stu-id="874d0-333">The following example displays the contents of the column numbered 2 within the passed-in <xref:System.Data.DataTableReader>.</span></span> <span data-ttu-id="874d0-334">如果特定行中的列的值为 null，则代码将显示文本 \<NULL> 。</span><span class="sxs-lookup"><span data-stu-id="874d0-334">If the value the column within a particular row is null, the code displays the text \<NULL>.</span></span> <span data-ttu-id="874d0-335">如果列中的数据类型不正确，则此示例将为每一行显示一条错误消息。</span><span class="sxs-lookup"><span data-stu-id="874d0-335">If the data within the column is not of the correct type, the example displays an error message for each row.</span></span>  
  
 [!code-csharp[DataWorks DataTableReader.GetInt64#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetInt64/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.GetInt64#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetInt64/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="874d0-336">传递的索引超出了 0 到 <see cref="P:System.Data.DataTableReader.FieldCount" /> -1 的范围。</span><span class="sxs-lookup"><span data-stu-id="874d0-336">The index passed was outside the range of 0 to <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</span></span></exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException"><span data-ttu-id="874d0-337">尝试从已删除的行中检索数据。</span><span class="sxs-lookup"><span data-stu-id="874d0-337">An attempt was made to retrieve data from a deleted row.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="874d0-338">尝试读取或访问已关闭 <see cref="T:System.Data.DataTableReader" /> 中的列。</span><span class="sxs-lookup"><span data-stu-id="874d0-338">An attempt was made to read or access a column in a closed <see cref="T:System.Data.DataTableReader" /> .</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="874d0-339">指定的列不包含 64 位带符号整数值。</span><span class="sxs-lookup"><span data-stu-id="874d0-339">The specified column does not contain a 64-bit signed integer value.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetName">
      <MemberSignature Language="C#" Value="public override string GetName (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetName(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetName(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetName (ordinal As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ GetName(int ordinal);" />
      <MemberSignature Language="F#" Value="override this.GetName : int -&gt; string" Usage="dataTableReader.GetName ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal"><span data-ttu-id="874d0-340">从零开始的列序号</span><span class="sxs-lookup"><span data-stu-id="874d0-340">The zero-based column ordinal</span></span></param>
        <summary><span data-ttu-id="874d0-341">获取指定列的 <see cref="T:System.String" /> 形式的值。</span><span class="sxs-lookup"><span data-stu-id="874d0-341">Gets the value of the specified column as a <see cref="T:System.String" />.</span></span></summary>
        <returns><span data-ttu-id="874d0-342">指定列的名称。</span><span class="sxs-lookup"><span data-stu-id="874d0-342">The name of the specified column.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="874d0-343">`GetName`和 <xref:System.Data.DataTableReader.GetOrdinal%2A> 方法提供了反转功能。</span><span class="sxs-lookup"><span data-stu-id="874d0-343">The `GetName` and <xref:System.Data.DataTableReader.GetOrdinal%2A> methods provide inverse functionality.</span></span> <span data-ttu-id="874d0-344">也就是说，调用的 `GetOrdinal` 返回值 `GetName` 应返回传递给的原始参数 `GetName` ; 这同样适用于以相反顺序调用过程。</span><span class="sxs-lookup"><span data-stu-id="874d0-344">That is, calling `GetOrdinal` on the return value of calling `GetName` should return the original parameter passed to `GetName`; the same applies to calling the procedures in the opposite order.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="874d0-345">下面的简单示例包含一个过程，该过程列出指定的中的所有列的名称 `DataTableReader` 和列的序号位置，并到控制台窗口。</span><span class="sxs-lookup"><span data-stu-id="874d0-345">The following simple example includes a procedure that lists the names of all the columns within the specified `DataTableReader`, and the column's ordinal position, to the Console window.</span></span>  
  
 [!code-csharp[DataWorks DataTableReader.GetName#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetName/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.GetName#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetName/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="874d0-346">传递的索引超出了 0 到 <see cref="P:System.Data.DataTableReader.FieldCount" /> -1 的范围。</span><span class="sxs-lookup"><span data-stu-id="874d0-346">The index passed was outside the range of 0 to <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="874d0-347">尝试读取或访问已关闭的 <see cref="T:System.Data.DataTableReader" /> 中的列。</span><span class="sxs-lookup"><span data-stu-id="874d0-347">An attempt was made to read or access a column in a closed <see cref="T:System.Data.DataTableReader" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetOrdinal">
      <MemberSignature Language="C#" Value="public override int GetOrdinal (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetOrdinal(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetOrdinal(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetOrdinal (name As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetOrdinal(System::String ^ name);" />
      <MemberSignature Language="F#" Value="override this.GetOrdinal : string -&gt; int" Usage="dataTableReader.GetOrdinal name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="874d0-348">列的名称。</span><span class="sxs-lookup"><span data-stu-id="874d0-348">The name of the column.</span></span></param>
        <summary><span data-ttu-id="874d0-349">在给定列名时获取相应的列序号。</span><span class="sxs-lookup"><span data-stu-id="874d0-349">Gets the column ordinal, given the name of the column.</span></span></summary>
        <returns><span data-ttu-id="874d0-350">从零开始的列序号。</span><span class="sxs-lookup"><span data-stu-id="874d0-350">The zero-based column ordinal.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="874d0-351">由于类提供的大多数方法 <xref:System.Data.DataTableReader> 都必须提供序号列号，因此，在给定列名称的情况下，可以使用 `GetOrdinal` 方法检索列号。</span><span class="sxs-lookup"><span data-stu-id="874d0-351">Because most of the methods provided by the <xref:System.Data.DataTableReader> class must be provided with an ordinal column number, you can use the `GetOrdinal` method to retrieve the column number, given the name of the column.</span></span>  
  
 <span data-ttu-id="874d0-352">`GetOrdinal` 首先执行区分大小写的查找。</span><span class="sxs-lookup"><span data-stu-id="874d0-352">`GetOrdinal` performs a case-sensitive lookup first.</span></span> <span data-ttu-id="874d0-353">如果失败，将进行第二个不区分大小写的搜索。</span><span class="sxs-lookup"><span data-stu-id="874d0-353">If it fails, a second case-insensitive search is made.</span></span> <span data-ttu-id="874d0-354">如果找不到列号， `IndexOutOfRangeException` 则会引发。</span><span class="sxs-lookup"><span data-stu-id="874d0-354">If the column number is not found an `IndexOutOfRangeException` is thrown.</span></span>  
  
 <span data-ttu-id="874d0-355">`GetOrdinal` 不区分假名宽度。</span><span class="sxs-lookup"><span data-stu-id="874d0-355">`GetOrdinal` is kana-width insensitive.</span></span>  
  
 <span data-ttu-id="874d0-356">因为基于序号的查找比命名查找更高效，因此在循环内调用 `GetOrdinal` 效率低下。</span><span class="sxs-lookup"><span data-stu-id="874d0-356">Because ordinal-based lookups are more efficient than named lookups, it is inefficient to call `GetOrdinal` within a loop.</span></span> <span data-ttu-id="874d0-357">通过调用 `GetOrdinal` 一次并将结果分配给整数变量以便在循环中使用，从而节省时间</span><span class="sxs-lookup"><span data-stu-id="874d0-357">Save time by calling `GetOrdinal` one time and assigning the results to an integer variable for use within the loop</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="874d0-358">如果只有一个列名，在这种情况下，列名称是用户提供的，并且必须从该列中检索信息，则可以使用如下所示的过程来提取所需的信息。</span><span class="sxs-lookup"><span data-stu-id="874d0-358">If you have only a column name, in which case the column name is user supplied, and you must retrieve information from the column, you can use a procedure like the following to extract the required information.</span></span> <span data-ttu-id="874d0-359">在此示例中，该过程接受列名，并为中的当前行返回列中包含的数据 <xref:System.Data.DataTableReader> ：</span><span class="sxs-lookup"><span data-stu-id="874d0-359">In this example, the procedure accepts a column name and returns the data that is contained within that column for the current row in the <xref:System.Data.DataTableReader> :</span></span>  
  
 [!code-csharp[DataWorks DataTableReader.GetOrdinal#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetOrdinal/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.GetOrdinal#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetOrdinal/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="874d0-360">尝试读取或访问已关闭的 <see cref="T:System.Data.DataTableReader" /> 中的列。</span><span class="sxs-lookup"><span data-stu-id="874d0-360">An attempt was made to read or access a column in a closed <see cref="T:System.Data.DataTableReader" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="874d0-361">指定的名称不是有效的列名。</span><span class="sxs-lookup"><span data-stu-id="874d0-361">The name specified is not a valid column name.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetProviderSpecificFieldType">
      <MemberSignature Language="C#" Value="public override Type GetProviderSpecificFieldType (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Type GetProviderSpecificFieldType(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetProviderSpecificFieldType(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetProviderSpecificFieldType (ordinal As Integer) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override Type ^ GetProviderSpecificFieldType(int ordinal);" />
      <MemberSignature Language="F#" Value="override this.GetProviderSpecificFieldType : int -&gt; Type" Usage="dataTableReader.GetProviderSpecificFieldType ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal"><span data-ttu-id="874d0-362">从零开始的列序号。</span><span class="sxs-lookup"><span data-stu-id="874d0-362">The zero-based column ordinal.</span></span></param>
        <summary><span data-ttu-id="874d0-363">获取指定列特定于提供程序的格式的类型。</span><span class="sxs-lookup"><span data-stu-id="874d0-363">Gets the type of the specified column in provider-specific format.</span></span></summary>
        <returns><span data-ttu-id="874d0-364">作为对象的数据类型的 <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="874d0-364">The <see cref="T:System.Type" /> that is the data type of the object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="874d0-365">由于 <xref:System.Data.DataTableReader> 总是返回存储在基础内的类型 <xref:System.Data.DataColumn> ，因此调用方法返回的值 <xref:System.Data.DataTableReader.GetProviderSpecificFieldType%2A> 始终返回与存储在中的类型相同的类型 <xref:System.Data.DataTable> 。</span><span class="sxs-lookup"><span data-stu-id="874d0-365">Because the <xref:System.Data.DataTableReader> always returns the type stored within the underlying <xref:System.Data.DataColumn>, the value returned by calling the <xref:System.Data.DataTableReader.GetProviderSpecificFieldType%2A> method always returns the same type as the type stored within the <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="874d0-366">使用 <xref:System.Data.DataTableReader> 类时，调用 <xref:System.Data.DataTableReader.GetProviderSpecificFieldType%2A> 方法将返回与调用方法相同的类型 <xref:System.Type.GetType%2A> 。</span><span class="sxs-lookup"><span data-stu-id="874d0-366">When you work with the <xref:System.Data.DataTableReader> class, calling the <xref:System.Data.DataTableReader.GetProviderSpecificFieldType%2A> method returns the same type as calling the <xref:System.Type.GetType%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="874d0-367">传递的索引超出了 0 到 <see cref="P:System.Data.DataTableReader.FieldCount" /> -1 的范围。</span><span class="sxs-lookup"><span data-stu-id="874d0-367">The index passed was outside the range of 0 to <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="874d0-368">尝试读取或访问已关闭的 <see cref="T:System.Data.DataTableReader" /> 中的列。</span><span class="sxs-lookup"><span data-stu-id="874d0-368">An attempt was made to read or access a column in a closed <see cref="T:System.Data.DataTableReader" />.</span></span></exception>
        <altmember cref="M:System.Data.DataTableReader.GetFieldType(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetProviderSpecificValue">
      <MemberSignature Language="C#" Value="public override object GetProviderSpecificValue (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object GetProviderSpecificValue(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetProviderSpecificValue(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetProviderSpecificValue (ordinal As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ GetProviderSpecificValue(int ordinal);" />
      <MemberSignature Language="F#" Value="override this.GetProviderSpecificValue : int -&gt; obj" Usage="dataTableReader.GetProviderSpecificValue ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal"><span data-ttu-id="874d0-369">值被检索的列的从零开始的编号。</span><span class="sxs-lookup"><span data-stu-id="874d0-369">The zero-based number of the column whose value is retrieved.</span></span></param>
        <summary><span data-ttu-id="874d0-370">获取指定列特定于提供程序的格式的值。</span><span class="sxs-lookup"><span data-stu-id="874d0-370">Gets the value of the specified column in provider-specific format.</span></span></summary>
        <returns><span data-ttu-id="874d0-371">指定列特定于提供程序的格式的值。</span><span class="sxs-lookup"><span data-stu-id="874d0-371">The value of the specified column in provider-specific format.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="874d0-372">由于 <xref:System.Data.DataTableReader> 总是返回存储在基础内的类型 <xref:System.Data.DataColumn> ，因此调用方法返回的值 <xref:System.Data.DataTableReader.GetProviderSpecificValue%2A> 始终返回与存储在中的数据类型相同的数据 <xref:System.Data.DataTable> 。</span><span class="sxs-lookup"><span data-stu-id="874d0-372">Because the <xref:System.Data.DataTableReader> always returns the type stored within the underlying <xref:System.Data.DataColumn>, the value returned by calling the <xref:System.Data.DataTableReader.GetProviderSpecificValue%2A> method always returns data of the same type as the data stored within the <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="874d0-373">使用 <xref:System.Data.DataTableReader> 类时，调用方法将返回与 <xref:System.Data.DataTableReader.GetProviderSpecificValue%2A> 调用方法相同的值和类型 <xref:System.Data.DataTableReader.GetValue%2A> 。</span><span class="sxs-lookup"><span data-stu-id="874d0-373">When you work with the <xref:System.Data.DataTableReader> class, calling the <xref:System.Data.DataTableReader.GetProviderSpecificValue%2A> method returns the same value and type as calling the <xref:System.Data.DataTableReader.GetValue%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="874d0-374">传递的索引超出了 0 到 <see cref="P:System.Data.DataTableReader.FieldCount" /> -1 的范围。</span><span class="sxs-lookup"><span data-stu-id="874d0-374">The index passed was outside the range of 0 to <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</span></span></exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException"><span data-ttu-id="874d0-375">尝试从已删除的行中检索数据。</span><span class="sxs-lookup"><span data-stu-id="874d0-375">An attempt was made to retrieve data from a deleted row.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="874d0-376">尝试读取或访问已关闭 <see cref="T:System.Data.DataTableReader" /> 中的列</span><span class="sxs-lookup"><span data-stu-id="874d0-376">An attempt was made to read or access a column in a closed <see cref="T:System.Data.DataTableReader" /></span></span></exception>
        <altmember cref="M:System.Data.DataTableReader.GetValue(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetProviderSpecificValues">
      <MemberSignature Language="C#" Value="public override int GetProviderSpecificValues (object[] values);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetProviderSpecificValues(object[] values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetProviderSpecificValues(System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetProviderSpecificValues (values As Object()) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetProviderSpecificValues(cli::array &lt;System::Object ^&gt; ^ values);" />
      <MemberSignature Language="F#" Value="override this.GetProviderSpecificValues : obj[] -&gt; int" Usage="dataTableReader.GetProviderSpecificValues values" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="values" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="values"><span data-ttu-id="874d0-377">要使用 <see cref="T:System.Data.DataTableReader" /> 中列的类型信息填充的对象数组。</span><span class="sxs-lookup"><span data-stu-id="874d0-377">An array of objects to be filled in with type information for the columns in the <see cref="T:System.Data.DataTableReader" />.</span></span></param>
        <summary><span data-ttu-id="874d0-378">使用 <see cref="T:System.Data.DataTableReader" /> 中所有列的特定于提供程序的类型信息填充提供的数组。</span><span class="sxs-lookup"><span data-stu-id="874d0-378">Fills the supplied array with provider-specific type information for all the columns in the <see cref="T:System.Data.DataTableReader" />.</span></span></summary>
        <returns><span data-ttu-id="874d0-379">复制到数组中的列值个数。</span><span class="sxs-lookup"><span data-stu-id="874d0-379">The number of column values copied into the array.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="874d0-380">由于 <xref:System.Data.DataTableReader> 总是返回存储在基础内的类型的数据，因此 <xref:System.Data.DataColumn> 通过调用方法返回的值 <xref:System.Data.DataTableReader.GetProviderSpecificValues%2A> 始终与存储在中的数据具有相同的类型 <xref:System.Data.DataTable> 。</span><span class="sxs-lookup"><span data-stu-id="874d0-380">Because the <xref:System.Data.DataTableReader> always returns the data of the type stored within the underlying <xref:System.Data.DataColumn>, the values returned by calling the <xref:System.Data.DataTableReader.GetProviderSpecificValues%2A> method is always of the same types as the data stored within the <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="874d0-381">使用 <xref:System.Data.DataTableReader> 类时，调用 <xref:System.Data.DataTableReader.GetProviderSpecificValues%2A> 方法将返回与调用方法相同的值和类型 <xref:System.Data.DataTableReader.GetValues%2A> 。</span><span class="sxs-lookup"><span data-stu-id="874d0-381">When you work with the <xref:System.Data.DataTableReader> class, calling the <xref:System.Data.DataTableReader.GetProviderSpecificValues%2A> method returns the same values and types as calling the <xref:System.Data.DataTableReader.GetValues%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Data.DeletedRowInaccessibleException"><span data-ttu-id="874d0-382">尝试从已删除的行中检索数据。</span><span class="sxs-lookup"><span data-stu-id="874d0-382">An attempt was made to retrieve data from a deleted row.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="874d0-383">尝试读取或访问已关闭的 <see cref="T:System.Data.DataTableReader" /> 中的列。</span><span class="sxs-lookup"><span data-stu-id="874d0-383">An attempt was made to read or access a column in a closed <see cref="T:System.Data.DataTableReader" />.</span></span></exception>
        <altmember cref="M:System.Data.DataTableReader.GetValues(System.Object[])" />
      </Docs>
    </Member>
    <Member MemberName="GetSchemaTable">
      <MemberSignature Language="C#" Value="public override System.Data.DataTable GetSchemaTable ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.DataTable GetSchemaTable() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetSchemaTable" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetSchemaTable () As DataTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Data::DataTable ^ GetSchemaTable();" />
      <MemberSignature Language="F#" Value="override this.GetSchemaTable : unit -&gt; System.Data.DataTable" Usage="dataTableReader.GetSchemaTable " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="874d0-384">返回一个 <see cref="T:System.Data.DataTable" />，它描述 <see cref="T:System.Data.DataTableReader" /> 的列元数据。</span><span class="sxs-lookup"><span data-stu-id="874d0-384">Returns a <see cref="T:System.Data.DataTable" /> that describes the column metadata of the <see cref="T:System.Data.DataTableReader" />.</span></span></summary>
        <returns><span data-ttu-id="874d0-385">一个描述列元数据的 <see cref="T:System.Data.DataTable" />。</span><span class="sxs-lookup"><span data-stu-id="874d0-385">A <see cref="T:System.Data.DataTable" /> that describes the column metadata.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="874d0-386">GetSchemaTable 方法按以下顺序返回有关每个列的元数据：</span><span class="sxs-lookup"><span data-stu-id="874d0-386">The GetSchemaTable method returns metadata about each column in the following order:</span></span>  
  
|<span data-ttu-id="874d0-387">DataReader 列</span><span class="sxs-lookup"><span data-stu-id="874d0-387">DataReader column</span></span>|<span data-ttu-id="874d0-388">说明</span><span class="sxs-lookup"><span data-stu-id="874d0-388">Description</span></span>|  
|-----------------------|-----------------|  
|<span data-ttu-id="874d0-389">ColumnName</span><span class="sxs-lookup"><span data-stu-id="874d0-389">ColumnName</span></span>|<span data-ttu-id="874d0-390">显示在中的列的名称 <xref:System.Data.DataTable> 。</span><span class="sxs-lookup"><span data-stu-id="874d0-390">The name of the column as it appears in the <xref:System.Data.DataTable>.</span></span>|  
|<span data-ttu-id="874d0-391">ColumnOrdinal</span><span class="sxs-lookup"><span data-stu-id="874d0-391">ColumnOrdinal</span></span>|<span data-ttu-id="874d0-392">列的序号</span><span class="sxs-lookup"><span data-stu-id="874d0-392">The ordinal of the column</span></span>|  
|<span data-ttu-id="874d0-393">ColumnSize</span><span class="sxs-lookup"><span data-stu-id="874d0-393">ColumnSize</span></span>|<span data-ttu-id="874d0-394">如果 <xref:System.Data.Common.SchemaTableColumn.ColumnSize> <xref:System.Data.DataColumn.MaxLength%2A> 无法确定的 (或) 属性或该属性 <xref:System.Data.DataColumn> 不相关，则为-1; 否则为0或包含该值的正整数 `MaxLength` 。</span><span class="sxs-lookup"><span data-stu-id="874d0-394">-1 if the <xref:System.Data.Common.SchemaTableColumn.ColumnSize> (or <xref:System.Data.DataColumn.MaxLength%2A>) property of the <xref:System.Data.DataColumn> cannot be determined or is not relevant; otherwise, 0 or a positive integer that contains the `MaxLength` value.</span></span>|  
|<span data-ttu-id="874d0-395">NumericPrecision</span><span class="sxs-lookup"><span data-stu-id="874d0-395">NumericPrecision</span></span>|<span data-ttu-id="874d0-396">如果列类型是数值类型，则这是列的最大精度。</span><span class="sxs-lookup"><span data-stu-id="874d0-396">If the column type is a numeric type, this is the maximum precision of the column.</span></span> <span data-ttu-id="874d0-397">如果列类型不是数值数据类型，则此值为 null 值。</span><span class="sxs-lookup"><span data-stu-id="874d0-397">If the column type is not a numeric data type, this is a null value.</span></span>|  
|<span data-ttu-id="874d0-398">NumericScale</span><span class="sxs-lookup"><span data-stu-id="874d0-398">NumericScale</span></span>|<span data-ttu-id="874d0-399">如果列数据类型具有缩放组件，则返回小数点右侧的数字位数。</span><span class="sxs-lookup"><span data-stu-id="874d0-399">If column data type has a scale component, return the number of digits to the right of the decimal point.</span></span> <span data-ttu-id="874d0-400">否则，返回 null 值。</span><span class="sxs-lookup"><span data-stu-id="874d0-400">Otherwise, return a null value.</span></span>|  
|<span data-ttu-id="874d0-401">数据类型</span><span class="sxs-lookup"><span data-stu-id="874d0-401">DataType</span></span>|<span data-ttu-id="874d0-402">列的基础类型。</span><span class="sxs-lookup"><span data-stu-id="874d0-402">The underlying type of the column.</span></span>|  
|<span data-ttu-id="874d0-403">ProviderType</span><span class="sxs-lookup"><span data-stu-id="874d0-403">ProviderType</span></span>|<span data-ttu-id="874d0-404">列的数据类型的指示符。</span><span class="sxs-lookup"><span data-stu-id="874d0-404">The indicator of the column's data type.</span></span> <span data-ttu-id="874d0-405">如果列的数据类型不同于行的数据类型，则此值为 <xref:System.Object> 。</span><span class="sxs-lookup"><span data-stu-id="874d0-405">If the data type of the column varies from row to row, this value is <xref:System.Object>.</span></span> <span data-ttu-id="874d0-406">此列不能包含 NULL 值。</span><span class="sxs-lookup"><span data-stu-id="874d0-406">This column cannot contain a null value.</span></span>|  
|<span data-ttu-id="874d0-407">IsLong</span><span class="sxs-lookup"><span data-stu-id="874d0-407">IsLong</span></span>|<span data-ttu-id="874d0-408">`true` 如果列的数据类型为 <xref:System.String> 并且其 <xref:System.Data.DataColumn.MaxLength%2A> 属性为-1，则为。</span><span class="sxs-lookup"><span data-stu-id="874d0-408">`true` if the data type of the column is <xref:System.String> and its <xref:System.Data.DataColumn.MaxLength%2A> property is -1.</span></span> <span data-ttu-id="874d0-409">否则为 `false`。</span><span class="sxs-lookup"><span data-stu-id="874d0-409">Otherwise, `false`.</span></span>|  
|<span data-ttu-id="874d0-410">AllowDBNull</span><span class="sxs-lookup"><span data-stu-id="874d0-410">AllowDBNull</span></span>|<span data-ttu-id="874d0-411">`true` 如果列的 AllowDbNull 约束设置为 true，则为; 否则为。否则为 `false` 。</span><span class="sxs-lookup"><span data-stu-id="874d0-411">`true` if the AllowDbNull constraint is set to true for the column; otherwise, `false`.</span></span>|  
|<span data-ttu-id="874d0-412">IsReadOnly</span><span class="sxs-lookup"><span data-stu-id="874d0-412">IsReadOnly</span></span>|<span data-ttu-id="874d0-413">`true` 如果无法修改列，则为;否则为 `false` 。</span><span class="sxs-lookup"><span data-stu-id="874d0-413">`true` if the column cannot be modified; otherwise `false`.</span></span>|  
|<span data-ttu-id="874d0-414">IsRowVersion</span><span class="sxs-lookup"><span data-stu-id="874d0-414">IsRowVersion</span></span>|<span data-ttu-id="874d0-415">`false`，针对每个列。</span><span class="sxs-lookup"><span data-stu-id="874d0-415">`false`, for every column.</span></span>|  
|<span data-ttu-id="874d0-416">IsUnique</span><span class="sxs-lookup"><span data-stu-id="874d0-416">IsUnique</span></span>|<span data-ttu-id="874d0-417">`true`：中没有两行 <xref:System.Data.DataTable> 可在此列中具有相同的值。</span><span class="sxs-lookup"><span data-stu-id="874d0-417">`true`: No two rows in the <xref:System.Data.DataTable> can have the same value in this column.</span></span> <span data-ttu-id="874d0-418">`IsUnique` 如果列本身表示键，或者存在仅适用于此列的 UNIQUE 类型的约束，则保证为 true。</span><span class="sxs-lookup"><span data-stu-id="874d0-418">`IsUnique` is guaranteed to be true if the column represents a key by itself or if there is a constraint of type UNIQUE that applies only to this column.</span></span> <span data-ttu-id="874d0-419">`false`：列可以包含中的重复值 `DataTable` 。</span><span class="sxs-lookup"><span data-stu-id="874d0-419">`false`: The column can contain duplicate values in the `DataTable`.</span></span> <span data-ttu-id="874d0-420">此列的默认值为 `false`。</span><span class="sxs-lookup"><span data-stu-id="874d0-420">The default of this column is `false`.</span></span>|  
|<span data-ttu-id="874d0-421">IsKey</span><span class="sxs-lookup"><span data-stu-id="874d0-421">IsKey</span></span>|<span data-ttu-id="874d0-422">`true`：列是一组列中的一列，这些列一起使用，以唯一标识中的行 <xref:System.Data.DataTable> 。</span><span class="sxs-lookup"><span data-stu-id="874d0-422">`true`: The column is one of a set of columns that, taken together, uniquely identify the row in the <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="874d0-423">设置为的一组列 `IsKey` `true` 必须唯一地标识中的行 `DataTable` 。</span><span class="sxs-lookup"><span data-stu-id="874d0-423">The set of columns with `IsKey` set to `true` must uniquely identify a row in the `DataTable`.</span></span> <span data-ttu-id="874d0-424">不要求这组列是最小组列。</span><span class="sxs-lookup"><span data-stu-id="874d0-424">There is no requirement that this set of columns is a minimal set of columns.</span></span> <span data-ttu-id="874d0-425">这组列可以从 `DataTable` 主键、唯一约束或唯一索引生成。</span><span class="sxs-lookup"><span data-stu-id="874d0-425">This set of columns may be generated from a `DataTable` primary key, a unique constraint or a unique index.</span></span> <span data-ttu-id="874d0-426">`false`：唯一标识行不需要此列。</span><span class="sxs-lookup"><span data-stu-id="874d0-426">`false`: The column is not required to uniquely identify the row.</span></span> <span data-ttu-id="874d0-427">`true`如果该列参与单个或复合主键，则此值为。</span><span class="sxs-lookup"><span data-stu-id="874d0-427">This value is `true` if the column participates in a single or composite primary key.</span></span> <span data-ttu-id="874d0-428">否则，其值为 `false` 。</span><span class="sxs-lookup"><span data-stu-id="874d0-428">Otherwise, its value is `false`.</span></span>|  
|<span data-ttu-id="874d0-429">IsAutoIncrement</span><span class="sxs-lookup"><span data-stu-id="874d0-429">IsAutoIncrement</span></span>|<span data-ttu-id="874d0-430">`true`：列以固定增量将值分配给新行。</span><span class="sxs-lookup"><span data-stu-id="874d0-430">`true`: The column assigns values to new rows in fixed increments.</span></span> <span data-ttu-id="874d0-431">`false`：列不以固定增量为新行赋值。</span><span class="sxs-lookup"><span data-stu-id="874d0-431">`false`: The column does not assign values to new rows in fixed increments.</span></span> <span data-ttu-id="874d0-432">此列的默认值为 `false`。</span><span class="sxs-lookup"><span data-stu-id="874d0-432">The default of this column is `false`.</span></span>|  
|<span data-ttu-id="874d0-433">BaseCatalogName</span><span class="sxs-lookup"><span data-stu-id="874d0-433">BaseCatalogName</span></span>|<span data-ttu-id="874d0-434">包含该列的数据存储区中的目录的名称。</span><span class="sxs-lookup"><span data-stu-id="874d0-434">The name of the catalog in the data store that contains the column.</span></span> <span data-ttu-id="874d0-435">`Null` 如果无法确定基本目录名称，则为。</span><span class="sxs-lookup"><span data-stu-id="874d0-435">`Null` if the base catalog name cannot be determined.</span></span> <span data-ttu-id="874d0-436">此列的默认值是一个 `null` 值。</span><span class="sxs-lookup"><span data-stu-id="874d0-436">The default value for this column is a `null` value.</span></span>|  
|<span data-ttu-id="874d0-437">BaseSchemaName</span><span class="sxs-lookup"><span data-stu-id="874d0-437">BaseSchemaName</span></span>|<span data-ttu-id="874d0-438">此值始终为 `Null`。</span><span class="sxs-lookup"><span data-stu-id="874d0-438">This value is always `Null`.</span></span>|  
|<span data-ttu-id="874d0-439">BaseTableName</span><span class="sxs-lookup"><span data-stu-id="874d0-439">BaseTableName</span></span>|<span data-ttu-id="874d0-440"><xref:System.Data.DataTable> 的名称。</span><span class="sxs-lookup"><span data-stu-id="874d0-440">The name of the <xref:System.Data.DataTable>.</span></span>|  
|<span data-ttu-id="874d0-441">BaseColumnName</span><span class="sxs-lookup"><span data-stu-id="874d0-441">BaseColumnName</span></span>|<span data-ttu-id="874d0-442">中列的名称 <xref:System.Data.DataTable> 。</span><span class="sxs-lookup"><span data-stu-id="874d0-442">The name of the column in the <xref:System.Data.DataTable>.</span></span>|  
|<span data-ttu-id="874d0-443">AutoIncrementSeed</span><span class="sxs-lookup"><span data-stu-id="874d0-443">AutoIncrementSeed</span></span>|<span data-ttu-id="874d0-444">的属性的值 <xref:System.Data.DataTable> <xref:System.Data.DataColumn.AutoIncrementSeed%2A> 。</span><span class="sxs-lookup"><span data-stu-id="874d0-444">The value of the <xref:System.Data.DataTable>'s <xref:System.Data.DataColumn.AutoIncrementSeed%2A> property.</span></span>|  
|<span data-ttu-id="874d0-445">AutoIncrementStep</span><span class="sxs-lookup"><span data-stu-id="874d0-445">AutoIncrementStep</span></span>|<span data-ttu-id="874d0-446">的属性的值 <xref:System.Data.DataTable> <xref:System.Data.DataColumn.AutoIncrementStep%2A> 。</span><span class="sxs-lookup"><span data-stu-id="874d0-446">The value of the <xref:System.Data.DataTable>'s <xref:System.Data.DataColumn.AutoIncrementStep%2A> property.</span></span>|  
|<span data-ttu-id="874d0-447">DefaultValue</span><span class="sxs-lookup"><span data-stu-id="874d0-447">DefaultValue</span></span>|<span data-ttu-id="874d0-448">的属性的值 <xref:System.Data.DataColumn> <xref:System.Data.DataColumn.DefaultValue%2A> 。</span><span class="sxs-lookup"><span data-stu-id="874d0-448">The value of the <xref:System.Data.DataColumn>'s <xref:System.Data.DataColumn.DefaultValue%2A> property.</span></span>|  
|<span data-ttu-id="874d0-449">Expression</span><span class="sxs-lookup"><span data-stu-id="874d0-449">Expression</span></span>|<span data-ttu-id="874d0-450">表达式字符串，如果当前列是表达式列，并且表达式中使用的所有列都属于包含表达式列的同一列，则为 `T:System.Data.DataTable` ; 否则为 `null` 。</span><span class="sxs-lookup"><span data-stu-id="874d0-450">The expression string, if the current column is an expression column and all columns used in the expression belong to the same `T:System.Data.DataTable` that contains the expression column; otherwise `null`.</span></span>|  
|<span data-ttu-id="874d0-451">ColumnMapping</span><span class="sxs-lookup"><span data-stu-id="874d0-451">ColumnMapping</span></span>|<span data-ttu-id="874d0-452"><xref:System.Data.MappingType>与关联的值 <xref:System.Data.DataColumn> 。</span><span class="sxs-lookup"><span data-stu-id="874d0-452">The <xref:System.Data.MappingType> value associated with the <xref:System.Data.DataColumn>.</span></span> <span data-ttu-id="874d0-453">类型可以是 `Attribute` 、、或之一 `Element` `Hidden` `SimpleContent` 。</span><span class="sxs-lookup"><span data-stu-id="874d0-453">The type can be one of `Attribute`, `Element`, `Hidden`, or `SimpleContent`.</span></span> <span data-ttu-id="874d0-454">默认值是 `Element`。</span><span class="sxs-lookup"><span data-stu-id="874d0-454">The default value is `Element`.</span></span>|  
|<span data-ttu-id="874d0-455">BaseTableNamespace</span><span class="sxs-lookup"><span data-stu-id="874d0-455">BaseTableNamespace</span></span>|<span data-ttu-id="874d0-456">的属性的值 <xref:System.Data.DataTable> <xref:System.Data.DataTable.Namespace%2A> 。</span><span class="sxs-lookup"><span data-stu-id="874d0-456">The value of the <xref:System.Data.DataTable>'s <xref:System.Data.DataTable.Namespace%2A> property.</span></span>|  
|<span data-ttu-id="874d0-457">BaseColumnNamespace</span><span class="sxs-lookup"><span data-stu-id="874d0-457">BaseColumnNamespace</span></span>|<span data-ttu-id="874d0-458">的属性的值 <xref:System.Data.DataColumn> <xref:System.Data.DataColumn.Namespace%2A> 。</span><span class="sxs-lookup"><span data-stu-id="874d0-458">The value of the <xref:System.Data.DataColumn>'s <xref:System.Data.DataColumn.Namespace%2A> property.</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="874d0-459">下面的控制台应用程序示例检索有关指定列的架构信息。</span><span class="sxs-lookup"><span data-stu-id="874d0-459">The following console application example retrieves schema information about the specified column.</span></span> <span data-ttu-id="874d0-460">传递 `DisplaySchemaTableInfo` 过程 a <xref:System.Data.DataTableReader> 和一个整数，该整数表示中列的序号位置 `DataTableReader` ，该过程将架构信息输出到控制台窗口。</span><span class="sxs-lookup"><span data-stu-id="874d0-460">Pass the `DisplaySchemaTableInfo` procedure a <xref:System.Data.DataTableReader> and an integer representing the ordinal position of a column within the `DataTableReader`, and the procedure outputs schema information to the console window.</span></span>  
  
 [!code-csharp[DataWorks DataTableReader.GetSchemaTable#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetSchemaTable/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.GetSchemaTable#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetSchemaTable/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="874d0-461"><see cref="T:System.Data.DataTableReader" /> 是关闭的。</span><span class="sxs-lookup"><span data-stu-id="874d0-461">The <see cref="T:System.Data.DataTableReader" /> is closed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetString">
      <MemberSignature Language="C#" Value="public override string GetString (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetString(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetString(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetString (ordinal As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ GetString(int ordinal);" />
      <MemberSignature Language="F#" Value="override this.GetString : int -&gt; string" Usage="dataTableReader.GetString ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal"><span data-ttu-id="874d0-462">从零开始的列序号</span><span class="sxs-lookup"><span data-stu-id="874d0-462">The zero-based column ordinal</span></span></param>
        <summary><span data-ttu-id="874d0-463">获取指定列的字符串形式的值。</span><span class="sxs-lookup"><span data-stu-id="874d0-463">Gets the value of the specified column as a string.</span></span></summary>
        <returns><span data-ttu-id="874d0-464">指定列的值。</span><span class="sxs-lookup"><span data-stu-id="874d0-464">The value of the specified column.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="874d0-465">调用 <xref:System.Data.DataTableReader.IsDBNull%2A> 此方法之前，请调用以查看是否存在 null 值。</span><span class="sxs-lookup"><span data-stu-id="874d0-465">Call <xref:System.Data.DataTableReader.IsDBNull%2A> to see if there are null values before calling this method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="874d0-466">下面的示例在传入的中显示编号为2的列的内容 <xref:System.Data.DataTableReader> 。</span><span class="sxs-lookup"><span data-stu-id="874d0-466">The following example displays the contents of the column numbered 2 within the passed-in <xref:System.Data.DataTableReader>.</span></span> <span data-ttu-id="874d0-467">如果特定行中的列的值为 null，则代码将显示文本 \<NULL> 。</span><span class="sxs-lookup"><span data-stu-id="874d0-467">If the value the column within a particular row is null, the code displays the text \<NULL>.</span></span> <span data-ttu-id="874d0-468">如果列中的数据属于正确类型，则此示例将为每一行显示一条错误消息。</span><span class="sxs-lookup"><span data-stu-id="874d0-468">If the data within the column of the correct type, the example displays an error message for each row.</span></span>  
  
 [!code-csharp[DataWorks DataTableReader.GetString#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetString/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.GetString#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetString/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="874d0-469">传递的索引超出了 0 到 <see cref="P:System.Data.DataTableReader.FieldCount" /> -1 的范围。</span><span class="sxs-lookup"><span data-stu-id="874d0-469">The index passed was outside the range of 0 to <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</span></span></exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException"><span data-ttu-id="874d0-470">尝试从已删除的行中检索数据。</span><span class="sxs-lookup"><span data-stu-id="874d0-470">An attempt was made to retrieve data from a deleted row.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="874d0-471">尝试读取或访问已关闭的 <see cref="T:System.Data.DataTableReader" /> 中的列。</span><span class="sxs-lookup"><span data-stu-id="874d0-471">An attempt was made to read or access a column in a closed <see cref="T:System.Data.DataTableReader" />.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="874d0-472">指定的列不包含字符串。</span><span class="sxs-lookup"><span data-stu-id="874d0-472">The specified column does not contain a string.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="public override object GetValue (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object GetValue(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetValue(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetValue (ordinal As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ GetValue(int ordinal);" />
      <MemberSignature Language="F#" Value="override this.GetValue : int -&gt; obj" Usage="dataTableReader.GetValue ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal"><span data-ttu-id="874d0-473">从零开始的列序号</span><span class="sxs-lookup"><span data-stu-id="874d0-473">The zero-based column ordinal</span></span></param>
        <summary><span data-ttu-id="874d0-474">获取指定列以本机格式表示的值。</span><span class="sxs-lookup"><span data-stu-id="874d0-474">Gets the value of the specified column in its native format.</span></span></summary>
        <returns><span data-ttu-id="874d0-475">指定列的值。</span><span class="sxs-lookup"><span data-stu-id="874d0-475">The value of the specified column.</span></span> <span data-ttu-id="874d0-476">此方法为 null 列返回 <see langword="DBNull" />。</span><span class="sxs-lookup"><span data-stu-id="874d0-476">This method returns <see langword="DBNull" /> for null columns.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="874d0-477">尽管可以在 <xref:System.Data.DataTableReader.IsDBNull%2A> 调用此方法之前调用来查看是否存在 null 值，但你不必执行此操作。</span><span class="sxs-lookup"><span data-stu-id="874d0-477">Although you can call <xref:System.Data.DataTableReader.IsDBNull%2A> to see if there are null values before calling this method, you do not have to do this.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="874d0-478">下面的示例循环访问中的当前行内的所有列 <xref:System.Data.DataTableReader> ，并显示每个列的内容和列名称。</span><span class="sxs-lookup"><span data-stu-id="874d0-478">The following example iterates through all the columns within the current row in a <xref:System.Data.DataTableReader>, displaying the contents of each column and the column name.</span></span> <span data-ttu-id="874d0-479">通常，如果您的目的是使用检索的行中的所有列 <xref:System.Data.DataTableReader> ，请考虑 <xref:System.Data.DataTableReader.GetValues%2A> 改用方法，因为它更有效。</span><span class="sxs-lookup"><span data-stu-id="874d0-479">Generally, if your intent is to work with all the columns within a row retrieved by a <xref:System.Data.DataTableReader>, consider using the <xref:System.Data.DataTableReader.GetValues%2A> method instead, because it is more efficient.</span></span>  
  
 [!code-csharp[DataWorks DataTableReader.GetValue#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetValue/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.GetValue#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetValue/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="874d0-480">传递的索引超出了 0 到 <see cref="P:System.Data.DataTableReader.FieldCount" /> -1 的范围。</span><span class="sxs-lookup"><span data-stu-id="874d0-480">The index passed was outside the range of 0 to <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</span></span></exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException"><span data-ttu-id="874d0-481">尝试从已删除的行中检索数据。</span><span class="sxs-lookup"><span data-stu-id="874d0-481">An attempt was made to retrieve data from a deleted row.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="874d0-482">尝试读取或访问关闭的 <see cref="T:System.Data.DataTableReader" /> 中的列。</span><span class="sxs-lookup"><span data-stu-id="874d0-482">An attempt was made to read or access columns in a closed <see cref="T:System.Data.DataTableReader" /> .</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetValues">
      <MemberSignature Language="C#" Value="public override int GetValues (object[] values);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetValues(object[] values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetValues(System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetValues (values As Object()) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetValues(cli::array &lt;System::Object ^&gt; ^ values);" />
      <MemberSignature Language="F#" Value="override this.GetValues : obj[] -&gt; int" Usage="dataTableReader.GetValues values" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="values" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="values"><span data-ttu-id="874d0-483">要将 <see cref="T:System.Object" /> 中的列值复制到其中的 <see cref="T:System.Data.DataTableReader" /> 数组。</span><span class="sxs-lookup"><span data-stu-id="874d0-483">An array of <see cref="T:System.Object" /> into which to copy the column values from the <see cref="T:System.Data.DataTableReader" />.</span></span></param>
        <summary><span data-ttu-id="874d0-484">使用当前行的列值来填充对象数组。</span><span class="sxs-lookup"><span data-stu-id="874d0-484">Populates an array of objects with the column values of the current row.</span></span></summary>
        <returns><span data-ttu-id="874d0-485">复制到数组中的列值个数。</span><span class="sxs-lookup"><span data-stu-id="874d0-485">The number of column values copied into the array.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="874d0-486">对于大多数应用程序，此方法提供了一种有效的方法来检索所有列，而不是单独检索每个列。</span><span class="sxs-lookup"><span data-stu-id="874d0-486">For most applications, this method provides an efficient means for retrieving all columns, instead of retrieving each column individually.</span></span> <span data-ttu-id="874d0-487">如果您的目的是从内的行中检索所有列值 <xref:System.Data.DataTableReader> ，则方法将 `GetValues` 提供最有效的解决方案。</span><span class="sxs-lookup"><span data-stu-id="874d0-487">If your intent is to retrieve all the column values from a row within the <xref:System.Data.DataTableReader>, the `GetValues` method provides the most efficient solution.</span></span>  
  
 <span data-ttu-id="874d0-488">可以传递一个 <xref:System.Object> 数组，该数组包含的列数少于所产生行中包含的列数。</span><span class="sxs-lookup"><span data-stu-id="874d0-488">You can pass an <xref:System.Object> array that contains fewer than the number of columns that are contained in the resulting row.</span></span> <span data-ttu-id="874d0-489">只有 `Object` 数组可以保存的数据量会复制到数组中。</span><span class="sxs-lookup"><span data-stu-id="874d0-489">Only the amount of data the `Object` array can hold is copied to the array.</span></span> <span data-ttu-id="874d0-490">还可以传递 `Object` 其长度大于结果行中包含的列数的数组，在这种情况下，其他数组元素将在方法调用中保持不变。</span><span class="sxs-lookup"><span data-stu-id="874d0-490">You can also pass an `Object` array whose length is more than the number of columns that are contained in the resulting row, in which case the additional array elements remains unchanged by the method call.</span></span>  
  
 <span data-ttu-id="874d0-491">此方法 `DBNull` 在输出数组中放置 null 列。</span><span class="sxs-lookup"><span data-stu-id="874d0-491">This method places `DBNull` in the output array for null columns.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="874d0-492">下面的示例演示如何使用大小正确的数组从提供的中读取当前行中的所有值 <xref:System.Data.DataTableReader> 。</span><span class="sxs-lookup"><span data-stu-id="874d0-492">The following example demonstrates using an array that is the correct size, to read all values from the current row in the supplied <xref:System.Data.DataTableReader>.</span></span> <span data-ttu-id="874d0-493">此外，该示例还演示了如何使用大小固定的数组，该数组可以小于或大于可用列数。</span><span class="sxs-lookup"><span data-stu-id="874d0-493">In addition, the sample demonstrates using a fixed-sized array that could be either smaller or larger than the number of available columns.</span></span>  
  
 [!code-csharp[DataWorks DataTableReader.GetValueObject#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetValueObject/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.GetValueObject#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetValueObject/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="874d0-494">传递的索引超出了 0 到 <see cref="P:System.Data.DataTableReader.FieldCount" /> -1 的范围。</span><span class="sxs-lookup"><span data-stu-id="874d0-494">The index passed was outside the range of 0 to <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</span></span></exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException"><span data-ttu-id="874d0-495">尝试从已删除的行中检索数据。</span><span class="sxs-lookup"><span data-stu-id="874d0-495">An attempt was made to retrieve data from a deleted row.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="874d0-496">尝试读取或访问已关闭 <see cref="T:System.Data.DataTableReader" /> 中的列。</span><span class="sxs-lookup"><span data-stu-id="874d0-496">An attempt was made to read or access a column in a closed <see cref="T:System.Data.DataTableReader" /> .</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="HasRows">
      <MemberSignature Language="C#" Value="public override bool HasRows { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasRows" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataTableReader.HasRows" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property HasRows As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool HasRows { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasRows : bool" Usage="System.Data.DataTableReader.HasRows" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="874d0-497">获取一个值，该值指示 <see cref="T:System.Data.DataTableReader" /> 是否包含一行还是多行。</span><span class="sxs-lookup"><span data-stu-id="874d0-497">Gets a value that indicates whether the <see cref="T:System.Data.DataTableReader" /> contains one or more rows.</span></span></summary>
        <value><span data-ttu-id="874d0-498">如果 <see cref="T:System.Data.DataTableReader" /> 包含一行或多行，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="874d0-498"><see langword="true" /> if the <see cref="T:System.Data.DataTableReader" /> contains one or more rows; otherwise <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="874d0-499">`HasRows`属性返回有关当前结果集的信息。</span><span class="sxs-lookup"><span data-stu-id="874d0-499">The `HasRows` property returns information about the current result set.</span></span> <span data-ttu-id="874d0-500">如果 <xref:System.Data.DataTableReader> 包含多个结果集，则可以 `HasRows` 在调用方法之后立即检查属性的值， <xref:System.Data.DataTableReader.NextResult%2A> 以确定新的结果集是否包含行。</span><span class="sxs-lookup"><span data-stu-id="874d0-500">If the <xref:System.Data.DataTableReader> contains multiple result sets, you can examine the value of the `HasRows` property immediately after you call the <xref:System.Data.DataTableReader.NextResult%2A> method in order to determine whether the new result set contains rows.</span></span>  
  
 <span data-ttu-id="874d0-501">`HasRows` <xref:System.Data.DataTableReader.Read%2A> <xref:System.Data.DataTableReader> 如果当前结果集中没有任何行，请使用属性以避免要求调用的方法。</span><span class="sxs-lookup"><span data-stu-id="874d0-501">Use the `HasRows` property to avoid the requirement to call the <xref:System.Data.DataTableReader.Read%2A> method of the <xref:System.Data.DataTableReader> if there are no rows within the current result set.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="874d0-502">下面的示例 <xref:System.Data.DataTable> 用数据填充了两个实例。</span><span class="sxs-lookup"><span data-stu-id="874d0-502">The following example fills two <xref:System.Data.DataTable> instances with data.</span></span> <span data-ttu-id="874d0-503">第一个 <xref:System.Data.DataTable> 包含一行，第二个包含行。</span><span class="sxs-lookup"><span data-stu-id="874d0-503">The first <xref:System.Data.DataTable> contains one row, and the second contains no rows.</span></span> <span data-ttu-id="874d0-504">然后，该示例创建一个 <xref:System.Data.DataTableReader> 包含两个对象的， <xref:System.Data.DataTable> 并调用 PrintData 方法来显示每个对象的内容，并在 <xref:System.Data.DataTableReader.HasRows%2A> 调用 PrintData 之前检查每个对象的属性的值。</span><span class="sxs-lookup"><span data-stu-id="874d0-504">The example then creates a <xref:System.Data.DataTableReader> that contains both <xref:System.Data.DataTable> objects, and calls the PrintData method to display the contents of each, checking the value of the <xref:System.Data.DataTableReader.HasRows%2A> property of each before it makes the call to PrintData.</span></span>  
  
 [!code-csharp[DataWorks DataTableReader.HasRows#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.HasRows/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.HasRows#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.HasRows/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="874d0-505">尝试检索有关已关闭的 <see cref="T:System.Data.DataTableReader" /> 的信息。</span><span class="sxs-lookup"><span data-stu-id="874d0-505">An attempt was made to retrieve information about a closed <see cref="T:System.Data.DataTableReader" />.</span></span></exception>
        <altmember cref="M:System.Data.DataTableReader.NextResult" />
        <altmember cref="M:System.Data.DataTableReader.Read" />
      </Docs>
    </Member>
    <Member MemberName="IsClosed">
      <MemberSignature Language="C#" Value="public override bool IsClosed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsClosed" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataTableReader.IsClosed" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsClosed As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsClosed { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsClosed : bool" Usage="System.Data.DataTableReader.IsClosed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="874d0-506">获取一个值，该值指示 <see cref="T:System.Data.DataTableReader" /> 是否已关闭。</span><span class="sxs-lookup"><span data-stu-id="874d0-506">Gets a value that indicates whether the <see cref="T:System.Data.DataTableReader" /> is closed.</span></span></summary>
        <value><span data-ttu-id="874d0-507">如果 <see cref="T:System.Data.DataTableReader" /> 已关闭，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="874d0-507"><see langword="true" /> if the <see cref="T:System.Data.DataTableReader" /> is closed; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="874d0-508"><xref:System.Data.DataTableReader.Close%2A> 是唯一的方法， `IsClosed` 并且 <xref:System.Data.DataTableReader.RecordsAffected%2A> 是在关闭后可访问的唯一属性 <xref:System.Data.DataTableReader> 。</span><span class="sxs-lookup"><span data-stu-id="874d0-508"><xref:System.Data.DataTableReader.Close%2A> is the only method and `IsClosed` and <xref:System.Data.DataTableReader.RecordsAffected%2A> are the only properties that can be accessed after the <xref:System.Data.DataTableReader> has been closed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDBNull">
      <MemberSignature Language="C#" Value="public override bool IsDBNull (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsDBNull(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.IsDBNull(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsDBNull (ordinal As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsDBNull(int ordinal);" />
      <MemberSignature Language="F#" Value="override this.IsDBNull : int -&gt; bool" Usage="dataTableReader.IsDBNull ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal"><span data-ttu-id="874d0-509">从零开始的列序号</span><span class="sxs-lookup"><span data-stu-id="874d0-509">The zero-based column ordinal</span></span></param>
        <summary><span data-ttu-id="874d0-510">获取一个值，该值指示列中是否包含不存在的或缺少的值。</span><span class="sxs-lookup"><span data-stu-id="874d0-510">Gets a value that indicates whether the column contains non-existent or missing values.</span></span></summary>
        <returns><span data-ttu-id="874d0-511">如果指定的列值与 <see cref="T:System.DBNull" /> 等效，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="874d0-511"><see langword="true" /> if the specified column value is equivalent to <see cref="T:System.DBNull" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="874d0-512">调用此方法以查看在调用类型化 get 方法之前是否存在 null 列值 (例如，、 <xref:System.Data.DataTableReader.GetByte%2A> <xref:System.Data.DataTableReader.GetChar%2A> 等) 避免引发错误。</span><span class="sxs-lookup"><span data-stu-id="874d0-512">Call this method to see if there are null column values before calling the typed get methods (for example, <xref:System.Data.DataTableReader.GetByte%2A>, <xref:System.Data.DataTableReader.GetChar%2A>, and so on) to avoid raising an error.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="874d0-513">下面的示例在传入的中显示编号为2的列的内容 <xref:System.Data.DataTableReader> 。</span><span class="sxs-lookup"><span data-stu-id="874d0-513">The following example displays the contents of the column numbered 2 within the passed-in <xref:System.Data.DataTableReader>.</span></span> <span data-ttu-id="874d0-514">如果特定行中的列的值为 null，则代码将显示文本 \<NULL> 。</span><span class="sxs-lookup"><span data-stu-id="874d0-514">If the value the column within a particular row is null, the code displays the text \<NULL>.</span></span> <span data-ttu-id="874d0-515">如果列中的数据属于正确类型，则此示例将为每一行显示一条错误消息。</span><span class="sxs-lookup"><span data-stu-id="874d0-515">If the data within the column of the correct type, the example displays an error message for each row.</span></span>  
  
 [!code-csharp[DataWorks DataTableReader.IsDbNull#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.IsDbNull/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.IsDbNull#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.IsDbNull/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="874d0-516">传递的索引超出了 0 到 <see cref="P:System.Data.DataTableReader.FieldCount" /> -1 的范围。</span><span class="sxs-lookup"><span data-stu-id="874d0-516">The index passed was outside the range of 0 to <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</span></span></exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException"><span data-ttu-id="874d0-517">尝试从已删除的行中检索数据。</span><span class="sxs-lookup"><span data-stu-id="874d0-517">An attempt was made to retrieve data from a deleted row.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="874d0-518">尝试读取或访问已关闭 <see cref="T:System.Data.DataTableReader" /> 中的列。</span><span class="sxs-lookup"><span data-stu-id="874d0-518">An attempt was made to read or access a column in a closed <see cref="T:System.Data.DataTableReader" /> .</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Item">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="874d0-519">获取指定列以本机格式表示的值。</span><span class="sxs-lookup"><span data-stu-id="874d0-519">Gets the value of the specified column in its native format.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public override object this[int ordinal] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataTableReader.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overrides ReadOnly Property Item(ordinal As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ default[int] { System::Object ^ get(int ordinal); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : obj" Usage="System.Data.DataTableReader.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal"><span data-ttu-id="874d0-520">从零开始的列序号。</span><span class="sxs-lookup"><span data-stu-id="874d0-520">The zero-based column ordinal.</span></span></param>
        <summary><span data-ttu-id="874d0-521">在给定列序号的情况下，获取指定列的以本机格式表示的值。</span><span class="sxs-lookup"><span data-stu-id="874d0-521">Gets the value of the specified column in its native format given the column ordinal.</span></span></summary>
        <value><span data-ttu-id="874d0-522">以本机格式表示的指定列的值。</span><span class="sxs-lookup"><span data-stu-id="874d0-522">The value of the specified column in its native format.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="874d0-523">的此重载的 <xref:System.Data.DataTableReader.Item%2A> 行为与 <xref:System.Data.DataTableReader.GetValue%2A> 方法相同。</span><span class="sxs-lookup"><span data-stu-id="874d0-523">This overload for <xref:System.Data.DataTableReader.Item%2A> behaves identically to the <xref:System.Data.DataTableReader.GetValue%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="874d0-524">下面的示例显示了所提供的所有行中的所有列的内容 <xref:System.Data.DataTableReader> 。</span><span class="sxs-lookup"><span data-stu-id="874d0-524">The following example displays the contents of all the columns, in all the rows from the supplied <xref:System.Data.DataTableReader>.</span></span> <span data-ttu-id="874d0-525">代码使用 <xref:System.Data.DataTableReader.Item%2A> (索引器的方法在 Microsoft c # ) 中检索每个列中包含的值。</span><span class="sxs-lookup"><span data-stu-id="874d0-525">The code uses the <xref:System.Data.DataTableReader.Item%2A> method (the indexer, in Microsoft C#) to retrieve the value that is contained in each column.</span></span>  
  
 [!code-csharp[DataWorks DataTableReader.Item#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.Item/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.Item#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.Item/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException"><span data-ttu-id="874d0-526">传递的索引超出了 0 到 <see cref="P:System.Data.DataTableReader.FieldCount" /> -1 的范围。</span><span class="sxs-lookup"><span data-stu-id="874d0-526">The index passed was outside the range of 0 to <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</span></span></exception>
        <altmember cref="M:System.Data.DataTableReader.GetValue(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public override object this[string name] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataTableReader.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overrides ReadOnly Property Item(name As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ default[System::String ^] { System::Object ^ get(System::String ^ name); };" />
      <MemberSignature Language="F#" Value="member this.Item(string) : obj" Usage="System.Data.DataTableReader.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="874d0-527">列的名称。</span><span class="sxs-lookup"><span data-stu-id="874d0-527">The name of the column.</span></span></param>
        <summary><span data-ttu-id="874d0-528">在给定列名称的情况下，获取指定列的以本机格式表示的值。</span><span class="sxs-lookup"><span data-stu-id="874d0-528">Gets the value of the specified column in its native format given the column name.</span></span></summary>
        <value><span data-ttu-id="874d0-529">以本机格式表示的指定列的值。</span><span class="sxs-lookup"><span data-stu-id="874d0-529">The value of the specified column in its native format.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="874d0-530">首先执行区分大小写的查找。</span><span class="sxs-lookup"><span data-stu-id="874d0-530">A case-sensitive lookup is performed first.</span></span> <span data-ttu-id="874d0-531">如果失败，将进行第二个不区分大小写的搜索。</span><span class="sxs-lookup"><span data-stu-id="874d0-531">If it fails, a second case-insensitive search is made.</span></span>  
  
 <span data-ttu-id="874d0-532">此方法不区分假名宽度。</span><span class="sxs-lookup"><span data-stu-id="874d0-532">This method is kana-width insensitive.</span></span>  
  
 <span data-ttu-id="874d0-533">此重载版本 <xref:System.Data.DataTableReader.Item%2A> 对应于调用 <xref:System.Data.DataTableReader.GetOrdinal%2A> 方法，随后调用 <xref:System.Data.DataTableReader.GetValue%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="874d0-533">This overloaded version of <xref:System.Data.DataTableReader.Item%2A> corresponds to calling the <xref:System.Data.DataTableReader.GetOrdinal%2A> method, and then subsequently calling the <xref:System.Data.DataTableReader.GetValue%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="874d0-534">给定一个 <xref:System.Data.DataTableReader> 和列名，GetValueByName 过程返回指定列的值。</span><span class="sxs-lookup"><span data-stu-id="874d0-534">Given a <xref:System.Data.DataTableReader> and a column name, the GetValueByName procedure returns the value of the specified column.</span></span> <span data-ttu-id="874d0-535">在调用此过程之前，您必须创建一个新的 <xref:System.Data.DataTableReader> 实例，并调用其 Read 方法至少一次，以便将行指针放置在数据行上。</span><span class="sxs-lookup"><span data-stu-id="874d0-535">Before calling this procedure, you must create a new <xref:System.Data.DataTableReader> instance and call its Read method at least one time to position the row pointer on a row of data.</span></span>  
  
 [!code-csharp[DataWorks DataTableReader.ItemName#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.ItemName/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.ItemName#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.ItemName/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="874d0-536">指定的名称不是有效的列名。</span><span class="sxs-lookup"><span data-stu-id="874d0-536">The name specified is not a valid column name.</span></span></exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException"><span data-ttu-id="874d0-537">尝试从已删除的行中检索数据。</span><span class="sxs-lookup"><span data-stu-id="874d0-537">An attempt was made to retrieve data from a deleted row.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="874d0-538">尝试读取或访问已关闭的 <see cref="T:System.Data.DataTableReader" /> 中的列。</span><span class="sxs-lookup"><span data-stu-id="874d0-538">An attempt was made to read or access a column in a closed <see cref="T:System.Data.DataTableReader" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="NextResult">
      <MemberSignature Language="C#" Value="public override bool NextResult ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool NextResult() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.NextResult" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function NextResult () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool NextResult();" />
      <MemberSignature Language="F#" Value="override this.NextResult : unit -&gt; bool" Usage="dataTableReader.NextResult " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="874d0-539">使 <see cref="T:System.Data.DataTableReader" /> 前进到下一个结果集（如果有）。</span><span class="sxs-lookup"><span data-stu-id="874d0-539">Advances the <see cref="T:System.Data.DataTableReader" /> to the next result set, if any.</span></span></summary>
        <returns><span data-ttu-id="874d0-540">如果有另一个结果集，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="874d0-540"><see langword="true" /> if there was another result set; otherwise <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="874d0-541">用于处理多个结果，这些结果可通过创建一个 <xref:System.Data.DataTableReader> <xref:System.Data.DataSet> 包含两个或多个表的，或者包含两个或更多实例的数组生成 <xref:System.Data.DataTable> 。</span><span class="sxs-lookup"><span data-stu-id="874d0-541">Used to process multiple results that can be generated by creating a <xref:System.Data.DataTableReader> over a <xref:System.Data.DataSet> that contains two or more tables, or an array that contains two or more <xref:System.Data.DataTable> instances.</span></span>  
  
 <span data-ttu-id="874d0-542">一个新的 <xref:System.Data.DataTableReader> 定位在第一个结果上。</span><span class="sxs-lookup"><span data-stu-id="874d0-542">A new <xref:System.Data.DataTableReader> is positioned on the first result.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="874d0-543">在下面的示例中，TestConstructor 方法创建两个 <xref:System.Data.DataTable> 实例。</span><span class="sxs-lookup"><span data-stu-id="874d0-543">In the following example, the TestConstructor method creates two <xref:System.Data.DataTable> instances.</span></span> <span data-ttu-id="874d0-544">为了演示此类的构造函数 <xref:System.Data.DataTableReader> ，该示例 `DataTableReader` 基于包含两个的数组创建了一个新的， `DataTables` 并执行一个简单的操作，将前几列中的内容打印到控制台窗口。</span><span class="sxs-lookup"><span data-stu-id="874d0-544">In order to demonstrate this constructor for the <xref:System.Data.DataTableReader> class, the sample creates a new `DataTableReader` based on an array that contains the two `DataTables`, and performs a simple operation, printing the contents from the first few columns to the console window.</span></span> <span data-ttu-id="874d0-545">若要测试此应用程序，请创建新的控制台应用程序，并将示例代码粘贴到新创建的文件中。</span><span class="sxs-lookup"><span data-stu-id="874d0-545">In order to test this application, create a new Console application, and paste the sample code into the newly created file.</span></span>  
  
 [!code-csharp[DataWorks DataTableReader.NextResult#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.NextResult/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.NextResult#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.NextResult/VB/source.vb#1)]  
  
 <span data-ttu-id="874d0-546">控制台窗口将显示以下结果：</span><span class="sxs-lookup"><span data-stu-id="874d0-546">The Console window displays the following results:</span></span>  
  
```  
1 Mary  
2 Andy  
3 Peter  
4 Russ  
1 Wireless Network Card  
2 Hard Drive  
3 Monitor  
4 CPU  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="874d0-547">尝试在已关闭的 <see cref="T:System.Data.DataTableReader" /> 中进行导航。</span><span class="sxs-lookup"><span data-stu-id="874d0-547">An attempt was made to navigate within a closed <see cref="T:System.Data.DataTableReader" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public override bool Read ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Read() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.Read" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Read () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Read();" />
      <MemberSignature Language="F#" Value="override this.Read : unit -&gt; bool" Usage="dataTableReader.Read " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="874d0-548">让 <see cref="T:System.Data.DataTableReader" /> 前进到下一条记录。</span><span class="sxs-lookup"><span data-stu-id="874d0-548">Advances the <see cref="T:System.Data.DataTableReader" /> to the next record.</span></span></summary>
        <returns><span data-ttu-id="874d0-549">如果有另一行要读取，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="874d0-549"><see langword="true" /> if there was another row to read; otherwise <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="874d0-550">的默认位置 <xref:System.Data.DataTableReader> 位于第一条记录之前。</span><span class="sxs-lookup"><span data-stu-id="874d0-550">The default position of the <xref:System.Data.DataTableReader> is before the first record.</span></span> <span data-ttu-id="874d0-551">因此，您必须调用 `Read` 以开始访问任何数据。</span><span class="sxs-lookup"><span data-stu-id="874d0-551">Therefore, you must call `Read` to start accessing any data.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="874d0-552">PrintColumns 过程循环遍历中的所有行，并 <xref:System.Data.DataTableReader> 在控制台窗口中显示每个列的内容。</span><span class="sxs-lookup"><span data-stu-id="874d0-552">The PrintColumns procedure loops through all the rows in the <xref:System.Data.DataTableReader>, displaying the contents of each column in the Console window.</span></span>  
  
 [!code-csharp[DataWorks DataTableReader.Read#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.Read/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.Read#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.Read/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="874d0-553">尝试读取或访问已关闭 <see cref="T:System.Data.DataTableReader" /> 中的列。</span><span class="sxs-lookup"><span data-stu-id="874d0-553">An attempt was made to read or access a column in a closed <see cref="T:System.Data.DataTableReader" /> .</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="RecordsAffected">
      <MemberSignature Language="C#" Value="public override int RecordsAffected { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 RecordsAffected" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataTableReader.RecordsAffected" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property RecordsAffected As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int RecordsAffected { int get(); };" />
      <MemberSignature Language="F#" Value="member this.RecordsAffected : int" Usage="System.Data.DataTableReader.RecordsAffected" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="874d0-554">通过执行 SQL 语句获取插入、更改或删除的行数。</span><span class="sxs-lookup"><span data-stu-id="874d0-554">Gets the number of rows inserted, changed, or deleted by execution of the SQL statement.</span></span></summary>
        <value><span data-ttu-id="874d0-555"><see cref="T:System.Data.DataTableReader" /> 不支持此属性，并且始终返回 0。</span><span class="sxs-lookup"><span data-stu-id="874d0-555">The <see cref="T:System.Data.DataTableReader" /> does not support this property and always returns 0.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
