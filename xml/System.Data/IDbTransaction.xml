<Type Name="IDbTransaction" FullName="System.Data.IDbTransaction">
  <Metadata><Meta Name="ms.openlocfilehash" Value="775c71c5f10fffcd78cbb7c5c56c07a128645e6d" /><Meta Name="ms.sourcegitcommit" Value="45d7745d094b38af5ccba8a4ca47efe84a312ef0" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="10/27/2020" /><Meta Name="ms.locfileid" Value="92686630" /></Metadata><TypeSignature Language="C#" Value="public interface IDbTransaction : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDbTransaction implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Data.IDbTransaction" />
  <TypeSignature Language="VB.NET" Value="Public Interface IDbTransaction&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public interface class IDbTransaction : IDisposable" />
  <TypeSignature Language="F#" Value="type IDbTransaction = interface&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Common</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.Data.Common" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
  </TypeForwardingChain>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="5195e-101">表示要在数据源上执行的事务，并由访问关系数据库的 .NET 数据提供程序实现。</span><span class="sxs-lookup"><span data-stu-id="5195e-101">Represents a transaction to be performed at a data source, and is implemented by .NET data providers that access relational databases.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5195e-102"><xref:System.Data.IDbTransaction>接口允许继承类实现 transaction 类，该类表示要在数据源上执行的事务。</span><span class="sxs-lookup"><span data-stu-id="5195e-102">The <xref:System.Data.IDbTransaction> interface allows an inheriting class to implement a Transaction class, which represents the transaction to be performed at a data source.</span></span> <span data-ttu-id="5195e-103">有关事务类的详细信息，请参阅 [事务和并发](/dotnet/framework/data/adonet/transactions-and-concurrency)。</span><span class="sxs-lookup"><span data-stu-id="5195e-103">For more information about Transaction classes, see [Transactions and Concurrency](/dotnet/framework/data/adonet/transactions-and-concurrency).</span></span>  
  
 <span data-ttu-id="5195e-104">应用程序不会直接创建接口的实例 <xref:System.Data.IDbTransaction> ，而是创建继承的类的实例 <xref:System.Data.IDbTransaction> 。</span><span class="sxs-lookup"><span data-stu-id="5195e-104">An application does not create an instance of the <xref:System.Data.IDbTransaction> interface directly, but creates an instance of a class that inherits <xref:System.Data.IDbTransaction>.</span></span>  
  
 <span data-ttu-id="5195e-105">继承的类 <xref:System.Data.IDbTransaction> 必须实现继承成员，并且通常定义其他成员来添加特定于提供程序的功能。</span><span class="sxs-lookup"><span data-stu-id="5195e-105">Classes that inherit <xref:System.Data.IDbTransaction> must implement the inherited members, and typically define additional members to add provider-specific functionality.</span></span> <span data-ttu-id="5195e-106">例如， <xref:System.Data.IDbTransaction> 接口定义 <xref:System.Data.IDbTransaction.Commit%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="5195e-106">For example, the <xref:System.Data.IDbTransaction> interface defines the <xref:System.Data.IDbTransaction.Commit%2A> method.</span></span> <span data-ttu-id="5195e-107">反过来， <xref:System.Data.OleDb.OleDbTransaction> 该类继承此属性，并定义 <xref:System.Data.OleDb.OleDbTransaction.Begin%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="5195e-107">In turn, the <xref:System.Data.OleDb.OleDbTransaction> class inherits this property, and also defines the <xref:System.Data.OleDb.OleDbTransaction.Begin%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5195e-108">下面的示例创建派生类和的实例 <xref:System.Data.SqlClient.SqlConnection> <xref:System.Data.SqlClient.SqlTransaction> 。</span><span class="sxs-lookup"><span data-stu-id="5195e-108">The following example creates instances of the derived classes, <xref:System.Data.SqlClient.SqlConnection> and <xref:System.Data.SqlClient.SqlTransaction>.</span></span> <span data-ttu-id="5195e-109">它还演示了如何使用 <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A> 、 <xref:System.Data.SqlClient.SqlTransaction.Commit%2A> 和 <xref:System.Data.SqlClient.SqlTransaction.Rollback%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="5195e-109">It also demonstrates how to use the <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A>, <xref:System.Data.SqlClient.SqlTransaction.Commit%2A>, and <xref:System.Data.SqlClient.SqlTransaction.Rollback%2A> methods.</span></span>  
  
 [!code-csharp[Classic WebData SqlConnection.BeginTransaction Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlConnection.BeginTransaction Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlConnection.BeginTransaction Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlConnection.BeginTransaction Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para><span data-ttu-id="5195e-110">若要提升 .NET Framework 数据提供程序之间的一致性，请将该继承类命名为 <paramref name="Prv" /> Transaction，其中 <paramref name="Prv" /> 是为特定 .NET Framework 数据提供程序命名空间中的所有类指定的统一前缀。</span><span class="sxs-lookup"><span data-stu-id="5195e-110">To promote consistency among .NET Framework data providers, name the inheriting class in the form <paramref name="Prv" /> Transaction where <paramref name="Prv" /> is the uniform prefix given to all classes in a specific .NET Framework data provider namespace.</span></span> <span data-ttu-id="5195e-111">例如， <paramref name="Sql" /> 是 <see cref="T:System.Data.SqlClient.SqlTransaction" /> 命名空间中类的前缀 <see langword="System.Data.SqlClient" /> 。</span><span class="sxs-lookup"><span data-stu-id="5195e-111">For example, <paramref name="Sql" /> is the prefix of the <see cref="T:System.Data.SqlClient.SqlTransaction" /> class in the <see langword="System.Data.SqlClient" /> namespace.</span></span></para></block>
  </Docs>
  <Members>
    <Member MemberName="Commit">
      <MemberSignature Language="C#" Value="public void Commit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Commit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.IDbTransaction.Commit" />
      <MemberSignature Language="VB.NET" Value="Public Sub Commit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Commit();" />
      <MemberSignature Language="F#" Value="abstract member Commit : unit -&gt; unit" Usage="iDbTransaction.Commit " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="5195e-112">提交数据库事务。</span><span class="sxs-lookup"><span data-stu-id="5195e-112">Commits the database transaction.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="5195e-113">下面的示例创建派生类 <xref:System.Data.SqlClient.SqlConnection> 和的实例 <xref:System.Data.SqlClient.SqlTransaction> 。</span><span class="sxs-lookup"><span data-stu-id="5195e-113">The following example creates instances of the derived classes, <xref:System.Data.SqlClient.SqlConnection> and a <xref:System.Data.SqlClient.SqlTransaction>.</span></span> <span data-ttu-id="5195e-114">它还演示了如何使用 <xref:System.Data.SqlClient.SqlTransaction.Commit%2A> 、 <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A> 和 <xref:System.Data.SqlClient.SqlTransaction.Rollback%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="5195e-114">It also demonstrates how to use the <xref:System.Data.SqlClient.SqlTransaction.Commit%2A>, <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A>, and <xref:System.Data.SqlClient.SqlTransaction.Rollback%2A> methods.</span></span>  
  
 [!code-csharp[Classic WebData SqlConnection.BeginTransaction Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlConnection.BeginTransaction Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlConnection.BeginTransaction Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlConnection.BeginTransaction Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception"><span data-ttu-id="5195e-115">在尝试提交事务时出错。</span><span class="sxs-lookup"><span data-stu-id="5195e-115">An error occurred while trying to commit the transaction.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="5195e-116">已提交或回滚事务。</span><span class="sxs-lookup"><span data-stu-id="5195e-116">The transaction has already been committed or rolled back.</span></span>  
  
 <span data-ttu-id="5195e-117">或</span><span class="sxs-lookup"><span data-stu-id="5195e-117">-or-</span></span>  
  
 <span data-ttu-id="5195e-118">连接已断开。</span><span class="sxs-lookup"><span data-stu-id="5195e-118">The connection is broken.</span></span></exception>
        <altmember cref="M:System.Data.SqlClient.SqlConnection.BeginTransaction" />
        <altmember cref="M:System.Data.SqlClient.SqlTransaction.Save(System.String)" />
        <altmember cref="M:System.Data.SqlClient.SqlTransaction.Rollback" />
      </Docs>
    </Member>
    <Member MemberName="Connection">
      <MemberSignature Language="C#" Value="public System.Data.IDbConnection Connection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.IDbConnection Connection" />
      <MemberSignature Language="DocId" Value="P:System.Data.IDbTransaction.Connection" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Connection As IDbConnection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::IDbConnection ^ Connection { System::Data::IDbConnection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Connection : System.Data.IDbConnection" Usage="System.Data.IDbTransaction.Connection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbConnection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5195e-119">指定要与事务关联的 Connection 对象。</span><span class="sxs-lookup"><span data-stu-id="5195e-119">Specifies the Connection object to associate with the transaction.</span></span></summary>
        <value><span data-ttu-id="5195e-120">要与事务关联的 Connection 对象。</span><span class="sxs-lookup"><span data-stu-id="5195e-120">The Connection object to associate with the transaction.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5195e-121">单个应用程序可以有多个数据库连接，每个连接都有零个或多个事务。</span><span class="sxs-lookup"><span data-stu-id="5195e-121">A single application may have multiple database connections, each with zero or more transactions.</span></span> <span data-ttu-id="5195e-122">此属性使您可以确定与特定事务关联的连接对象。</span><span class="sxs-lookup"><span data-stu-id="5195e-122">This property enables you to determine the connection object associated with a particular transaction.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsolationLevel">
      <MemberSignature Language="C#" Value="public System.Data.IsolationLevel IsolationLevel { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.IsolationLevel IsolationLevel" />
      <MemberSignature Language="DocId" Value="P:System.Data.IDbTransaction.IsolationLevel" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsolationLevel As IsolationLevel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::IsolationLevel IsolationLevel { System::Data::IsolationLevel get(); };" />
      <MemberSignature Language="F#" Value="member this.IsolationLevel : System.Data.IsolationLevel" Usage="System.Data.IDbTransaction.IsolationLevel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IsolationLevel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5195e-123">为该事务指定 <see cref="T:System.Data.IsolationLevel" />。</span><span class="sxs-lookup"><span data-stu-id="5195e-123">Specifies the <see cref="T:System.Data.IsolationLevel" /> for this transaction.</span></span></summary>
        <value><span data-ttu-id="5195e-124">该事务的 <see cref="T:System.Data.IsolationLevel" />。</span><span class="sxs-lookup"><span data-stu-id="5195e-124">The <see cref="T:System.Data.IsolationLevel" /> for this transaction.</span></span> <span data-ttu-id="5195e-125">默认值为 <see langword="ReadCommitted" />。</span><span class="sxs-lookup"><span data-stu-id="5195e-125">The default is <see langword="ReadCommitted" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5195e-126">不支持并行事务。</span><span class="sxs-lookup"><span data-stu-id="5195e-126">Parallel transactions are not supported.</span></span> <span data-ttu-id="5195e-127">因此， <xref:System.Data.IsolationLevel> 适用于整个事务。</span><span class="sxs-lookup"><span data-stu-id="5195e-127">Therefore, the <xref:System.Data.IsolationLevel> applies to the entire transaction.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Rollback">
      <MemberSignature Language="C#" Value="public void Rollback ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Rollback() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.IDbTransaction.Rollback" />
      <MemberSignature Language="VB.NET" Value="Public Sub Rollback ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Rollback();" />
      <MemberSignature Language="F#" Value="abstract member Rollback : unit -&gt; unit" Usage="iDbTransaction.Rollback " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="5195e-128">从挂起状态回滚事务。</span><span class="sxs-lookup"><span data-stu-id="5195e-128">Rolls back a transaction from a pending state.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5195e-129">仅在调用之后但在) 之前，事务才能从挂起状态回滚 (<xref:System.Data.IDbConnection.BeginTransaction%2A> <xref:System.Data.IDbTransaction.Commit%2A> 。</span><span class="sxs-lookup"><span data-stu-id="5195e-129">The transaction can only be rolled back from a pending state (after <xref:System.Data.IDbConnection.BeginTransaction%2A> has been called, but before <xref:System.Data.IDbTransaction.Commit%2A> is called).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5195e-130">下面的示例创建派生类 <xref:System.Data.SqlClient.SqlConnection> 和的实例 <xref:System.Data.SqlClient.SqlTransaction> 。</span><span class="sxs-lookup"><span data-stu-id="5195e-130">The following example creates instances of the derived classes, <xref:System.Data.SqlClient.SqlConnection> and a <xref:System.Data.SqlClient.SqlTransaction>.</span></span> <span data-ttu-id="5195e-131">它还演示了如何使用 <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A> 、 <xref:System.Data.SqlClient.SqlTransaction.Commit%2A> 和 <xref:System.Data.SqlClient.SqlTransaction.Rollback%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="5195e-131">It also demonstrates how to use the <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A>, <xref:System.Data.SqlClient.SqlTransaction.Commit%2A>, and <xref:System.Data.SqlClient.SqlTransaction.Rollback%2A> methods.</span></span>  
  
 [!code-csharp[Classic WebData SqlConnection.BeginTransaction Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlConnection.BeginTransaction Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlConnection.BeginTransaction Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlConnection.BeginTransaction Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception"><span data-ttu-id="5195e-132">在尝试提交事务时出错。</span><span class="sxs-lookup"><span data-stu-id="5195e-132">An error occurred while trying to commit the transaction.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="5195e-133">已提交或回滚事务。</span><span class="sxs-lookup"><span data-stu-id="5195e-133">The transaction has already been committed or rolled back.</span></span>  
  
 <span data-ttu-id="5195e-134">或</span><span class="sxs-lookup"><span data-stu-id="5195e-134">-or-</span></span>  
  
 <span data-ttu-id="5195e-135">连接已断开。</span><span class="sxs-lookup"><span data-stu-id="5195e-135">The connection is broken.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="5195e-136">当 <see cref="M:System.Data.IDbTransaction.Rollback" /> 在派生类中重写时，请确保调用基类的 <see langword="Rollback" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="5195e-136">When overriding <see cref="M:System.Data.IDbTransaction.Rollback" /> in a derived class, be sure to call the base class's <see langword="Rollback" /> method.</span></span></para></block>
        <altmember cref="M:System.Data.IDbTransaction.Commit" />
        <altmember cref="M:System.Data.IDbConnection.BeginTransaction" />
      </Docs>
    </Member>
  </Members>
</Type>
