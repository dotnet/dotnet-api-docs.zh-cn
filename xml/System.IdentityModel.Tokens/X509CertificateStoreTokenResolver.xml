<Type Name="X509CertificateStoreTokenResolver" FullName="System.IdentityModel.Tokens.X509CertificateStoreTokenResolver">
  <Metadata><Meta Name="ms.openlocfilehash" Value="76fc8c120ec808ea86f6f6e3a0342539af8f0908" /><Meta Name="ms.sourcegitcommit" Value="397961a0164281b579f68064c3bb66c071f374d9" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/14/2020" /><Meta Name="ms.locfileid" Value="78823399" /></Metadata><TypeSignature Language="C#" Value="public class X509CertificateStoreTokenResolver : System.IdentityModel.Selectors.SecurityTokenResolver" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit X509CertificateStoreTokenResolver extends System.IdentityModel.Selectors.SecurityTokenResolver" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.Tokens.X509CertificateStoreTokenResolver" />
  <TypeSignature Language="VB.NET" Value="Public Class X509CertificateStoreTokenResolver&#xA;Inherits SecurityTokenResolver" />
  <TypeSignature Language="C++ CLI" Value="public ref class X509CertificateStoreTokenResolver : System::IdentityModel::Selectors::SecurityTokenResolver" />
  <TypeSignature Language="F#" Value="type X509CertificateStoreTokenResolver = class&#xA;    inherit SecurityTokenResolver" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.IdentityModel.Selectors.SecurityTokenResolver</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="a15a8-101">表示标记解析程序，其了对照指定的 X.509 证书存储解析 <see cref="T:System.IdentityModel.Tokens.X509SecurityToken" /> 类型的标记。</span><span class="sxs-lookup"><span data-stu-id="a15a8-101">Represents a token resolver that can resolve tokens of type <see cref="T:System.IdentityModel.Tokens.X509SecurityToken" /> against a specified X.509 certificate store.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a15a8-102">初始化 <see cref="T:System.IdentityModel.Tokens.X509CertificateStoreTokenResolver" /> 类的实例。</span><span class="sxs-lookup"><span data-stu-id="a15a8-102">Initializes an instance of the <see cref="T:System.IdentityModel.Tokens.X509CertificateStoreTokenResolver" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public X509CertificateStoreTokenResolver ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.X509CertificateStoreTokenResolver.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; X509CertificateStoreTokenResolver();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a15a8-103">使用指定的默认 X.509 证书存储初始化 <see cref="T:System.IdentityModel.Tokens.X509CertificateStoreTokenResolver" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="a15a8-103">Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.X509CertificateStoreTokenResolver" /> class with a default X.509 certificate store.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a15a8-104">默认存储位置为 <xref:System.Security.Cryptography.X509Certificates.StoreLocation.LocalMachine> 。</span><span class="sxs-lookup"><span data-stu-id="a15a8-104">The default store location is <xref:System.Security.Cryptography.X509Certificates.StoreLocation.LocalMachine>.</span></span> <span data-ttu-id="a15a8-105">默认存储名称是 <xref:System.Security.Cryptography.X509Certificates.StoreName.My> 。</span><span class="sxs-lookup"><span data-stu-id="a15a8-105">The default store name is <xref:System.Security.Cryptography.X509Certificates.StoreName.My>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public X509CertificateStoreTokenResolver (System.Security.Cryptography.X509Certificates.StoreName storeName, System.Security.Cryptography.X509Certificates.StoreLocation storeLocation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Security.Cryptography.X509Certificates.StoreName storeName, valuetype System.Security.Cryptography.X509Certificates.StoreLocation storeLocation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.X509CertificateStoreTokenResolver.#ctor(System.Security.Cryptography.X509Certificates.StoreName,System.Security.Cryptography.X509Certificates.StoreLocation)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (storeName As StoreName, storeLocation As StoreLocation)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; X509CertificateStoreTokenResolver(System::Security::Cryptography::X509Certificates::StoreName storeName, System::Security::Cryptography::X509Certificates::StoreLocation storeLocation);" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Tokens.X509CertificateStoreTokenResolver : System.Security.Cryptography.X509Certificates.StoreName * System.Security.Cryptography.X509Certificates.StoreLocation -&gt; System.IdentityModel.Tokens.X509CertificateStoreTokenResolver" Usage="new System.IdentityModel.Tokens.X509CertificateStoreTokenResolver (storeName, storeLocation)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="storeName" Type="System.Security.Cryptography.X509Certificates.StoreName" />
        <Parameter Name="storeLocation" Type="System.Security.Cryptography.X509Certificates.StoreLocation" />
      </Parameters>
      <Docs>
        <param name="storeName"><span data-ttu-id="a15a8-106">指定 X.509 证书存储区名称的枚举值之一。</span><span class="sxs-lookup"><span data-stu-id="a15a8-106">One of the enumeration values that specify the name of the X.509 certificate store.</span></span></param>
        <param name="storeLocation"><span data-ttu-id="a15a8-107">指定 X.509 证书存储区位置的枚举值之一。</span><span class="sxs-lookup"><span data-stu-id="a15a8-107">One of the enumeration values that specify the location of the X.509 certificate store.</span></span></param>
        <summary><span data-ttu-id="a15a8-108">使用用以令牌解析程序的指定位置和名称的 X.509 证书储存区来初始化 <see cref="T:System.IdentityModel.Tokens.X509CertificateStoreTokenResolver" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="a15a8-108">Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.X509CertificateStoreTokenResolver" /> class that uses the X.509 certificate store with the specified location and name to resolve tokens.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public X509CertificateStoreTokenResolver (string storeName, System.Security.Cryptography.X509Certificates.StoreLocation storeLocation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string storeName, valuetype System.Security.Cryptography.X509Certificates.StoreLocation storeLocation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.X509CertificateStoreTokenResolver.#ctor(System.String,System.Security.Cryptography.X509Certificates.StoreLocation)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (storeName As String, storeLocation As StoreLocation)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; X509CertificateStoreTokenResolver(System::String ^ storeName, System::Security::Cryptography::X509Certificates::StoreLocation storeLocation);" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Tokens.X509CertificateStoreTokenResolver : string * System.Security.Cryptography.X509Certificates.StoreLocation -&gt; System.IdentityModel.Tokens.X509CertificateStoreTokenResolver" Usage="new System.IdentityModel.Tokens.X509CertificateStoreTokenResolver (storeName, storeLocation)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="storeName" Type="System.String" />
        <Parameter Name="storeLocation" Type="System.Security.Cryptography.X509Certificates.StoreLocation" />
      </Parameters>
      <Docs>
        <param name="storeName"><span data-ttu-id="a15a8-109">X.509 证书存储区的名称。</span><span class="sxs-lookup"><span data-stu-id="a15a8-109">The name of the X.509 certificate store.</span></span></param>
        <param name="storeLocation"><span data-ttu-id="a15a8-110">指定 X.509 证书存储区位置的枚举值之一。</span><span class="sxs-lookup"><span data-stu-id="a15a8-110">One of the enumeration values that specify the location of an X.509 certificate store.</span></span></param>
        <summary><span data-ttu-id="a15a8-111">使用用以令牌解析程序的指定位置和名称的 X.509 证书储存区来初始化 <see cref="T:System.IdentityModel.Tokens.X509CertificateStoreTokenResolver" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="a15a8-111">Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.X509CertificateStoreTokenResolver" /> class that uses the X.509 certificate store with the specified location and name to resolve tokens.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a15a8-112"><paramref name="storeLocation" /> 为 <see langword="null" /> 或空字符串。</span><span class="sxs-lookup"><span data-stu-id="a15a8-112"><paramref name="storeLocation" /> is <see langword="null" /> or an empty string.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="StoreLocation">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.X509Certificates.StoreLocation StoreLocation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.Cryptography.X509Certificates.StoreLocation StoreLocation" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.X509CertificateStoreTokenResolver.StoreLocation" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property StoreLocation As StoreLocation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::X509Certificates::StoreLocation StoreLocation { System::Security::Cryptography::X509Certificates::StoreLocation get(); };" />
      <MemberSignature Language="F#" Value="member this.StoreLocation : System.Security.Cryptography.X509Certificates.StoreLocation" Usage="System.IdentityModel.Tokens.X509CertificateStoreTokenResolver.StoreLocation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.StoreLocation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a15a8-113">获取被该标记解析器使用的 X.509 证书存储区的位置。</span><span class="sxs-lookup"><span data-stu-id="a15a8-113">Gets the location of the X.509 certificate store that is used by this token resolver.</span></span></summary>
        <value><span data-ttu-id="a15a8-114">指定 X.509 证书存储区位置的枚举值之一。</span><span class="sxs-lookup"><span data-stu-id="a15a8-114">One of the enumeration values that specify the location of an X.509 certificate store.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StoreName">
      <MemberSignature Language="C#" Value="public string StoreName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StoreName" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.X509CertificateStoreTokenResolver.StoreName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property StoreName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ StoreName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.StoreName : string" Usage="System.IdentityModel.Tokens.X509CertificateStoreTokenResolver.StoreName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a15a8-115">获取被该标记解析器使用的 X.509 证书存储区的名称。</span><span class="sxs-lookup"><span data-stu-id="a15a8-115">Gets the name of the X.509 certificate store that is used by this token resolver.</span></span></summary>
        <value><span data-ttu-id="a15a8-116">被此令牌解析器所使用的 X.509 证书存储的名称。</span><span class="sxs-lookup"><span data-stu-id="a15a8-116">The name of the X.509 certificate store that is used by this token resolver.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryResolveSecurityKeyCore">
      <MemberSignature Language="C#" Value="protected override bool TryResolveSecurityKeyCore (System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause, out System.IdentityModel.Tokens.SecurityKey key);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool TryResolveSecurityKeyCore(class System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause, [out] class System.IdentityModel.Tokens.SecurityKey&amp; key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.X509CertificateStoreTokenResolver.TryResolveSecurityKeyCore(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityKey@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function TryResolveSecurityKeyCore (keyIdentifierClause As SecurityKeyIdentifierClause, ByRef key As SecurityKey) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool TryResolveSecurityKeyCore(System::IdentityModel::Tokens::SecurityKeyIdentifierClause ^ keyIdentifierClause, [Runtime::InteropServices::Out] System::IdentityModel::Tokens::SecurityKey ^ % key);" />
      <MemberSignature Language="F#" Value="override this.TryResolveSecurityKeyCore : System.IdentityModel.Tokens.SecurityKeyIdentifierClause * SecurityKey -&gt; bool" Usage="x509CertificateStoreTokenResolver.TryResolveSecurityKeyCore (keyIdentifierClause, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyIdentifierClause" Type="System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />
        <Parameter Name="key" Type="System.IdentityModel.Tokens.SecurityKey" RefType="out" />
      </Parameters>
      <Docs>
        <param name="keyIdentifierClause"><span data-ttu-id="a15a8-117">从密钥标识符子句解析安全密钥。</span><span class="sxs-lookup"><span data-stu-id="a15a8-117">The key identifier clause from which to resolve the security key.</span></span></param>
        <param name="key"><span data-ttu-id="a15a8-118">当此方法返回时，包含从密钥标识符子句解析的安全密钥。</span><span class="sxs-lookup"><span data-stu-id="a15a8-118">When this method returns, contains the security key that was resolved from the key identifier clause.</span></span> <span data-ttu-id="a15a8-119">该参数未经初始化即被处理。</span><span class="sxs-lookup"><span data-stu-id="a15a8-119">This parameter is treated as uninitialized.</span></span></param>
        <summary><span data-ttu-id="a15a8-120">尝试解析指定的密钥标识符字句为一个安全密钥。</span><span class="sxs-lookup"><span data-stu-id="a15a8-120">Attempts to resolve the specified key identifier clause to a security key.</span></span></summary>
        <returns><span data-ttu-id="a15a8-121">如果已成功解析密钥标识符子句，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a15a8-121"><see langword="true" /> if the key identifier clause is successfully resolved; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a15a8-122"><paramref name="keyIdentifierClause" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="a15a8-122"><paramref name="keyIdentifierClause" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="TryResolveTokenCore">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a15a8-123">将指定的密钥标识符或密钥标识符子句解析为安全令牌。</span><span class="sxs-lookup"><span data-stu-id="a15a8-123">Resolves the specified key identifier or key identifier clause to a security token.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TryResolveTokenCore">
      <MemberSignature Language="C#" Value="protected override bool TryResolveTokenCore (System.IdentityModel.Tokens.SecurityKeyIdentifier keyIdentifier, out System.IdentityModel.Tokens.SecurityToken token);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool TryResolveTokenCore(class System.IdentityModel.Tokens.SecurityKeyIdentifier keyIdentifier, [out] class System.IdentityModel.Tokens.SecurityToken&amp; token) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.X509CertificateStoreTokenResolver.TryResolveTokenCore(System.IdentityModel.Tokens.SecurityKeyIdentifier,System.IdentityModel.Tokens.SecurityToken@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function TryResolveTokenCore (keyIdentifier As SecurityKeyIdentifier, ByRef token As SecurityToken) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool TryResolveTokenCore(System::IdentityModel::Tokens::SecurityKeyIdentifier ^ keyIdentifier, [Runtime::InteropServices::Out] System::IdentityModel::Tokens::SecurityToken ^ % token);" />
      <MemberSignature Language="F#" Value="override this.TryResolveTokenCore : System.IdentityModel.Tokens.SecurityKeyIdentifier * SecurityToken -&gt; bool" Usage="x509CertificateStoreTokenResolver.TryResolveTokenCore (keyIdentifier, token)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyIdentifier" Type="System.IdentityModel.Tokens.SecurityKeyIdentifier" />
        <Parameter Name="token" Type="System.IdentityModel.Tokens.SecurityToken" RefType="out" />
      </Parameters>
      <Docs>
        <param name="keyIdentifier"><span data-ttu-id="a15a8-124">要解决的密钥标识符。</span><span class="sxs-lookup"><span data-stu-id="a15a8-124">The key identifier to resolve.</span></span></param>
        <param name="token"><span data-ttu-id="a15a8-125">当此方法返回时，包含从密钥标识符解析的安全标记。</span><span class="sxs-lookup"><span data-stu-id="a15a8-125">When this method returns, contains the security token that was resolved from the key identifier.</span></span> <span data-ttu-id="a15a8-126">该参数未经初始化即被处理。</span><span class="sxs-lookup"><span data-stu-id="a15a8-126">This parameter is treated as uninitialized.</span></span></param>
        <summary><span data-ttu-id="a15a8-127">将指定的密钥标识符解析为安全令牌。</span><span class="sxs-lookup"><span data-stu-id="a15a8-127">Resolves the specified key identifier to a security token.</span></span></summary>
        <returns><span data-ttu-id="a15a8-128">如果已成功解析密钥标识符，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a15a8-128"><see langword="true" /> if the key identifier is successfully resolved; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a15a8-129"><paramref name="keyIdentifier" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="a15a8-129"><paramref name="keyIdentifier" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="TryResolveTokenCore">
      <MemberSignature Language="C#" Value="protected override bool TryResolveTokenCore (System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause, out System.IdentityModel.Tokens.SecurityToken token);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool TryResolveTokenCore(class System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause, [out] class System.IdentityModel.Tokens.SecurityToken&amp; token) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.X509CertificateStoreTokenResolver.TryResolveTokenCore(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityToken@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function TryResolveTokenCore (keyIdentifierClause As SecurityKeyIdentifierClause, ByRef token As SecurityToken) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool TryResolveTokenCore(System::IdentityModel::Tokens::SecurityKeyIdentifierClause ^ keyIdentifierClause, [Runtime::InteropServices::Out] System::IdentityModel::Tokens::SecurityToken ^ % token);" />
      <MemberSignature Language="F#" Value="override this.TryResolveTokenCore : System.IdentityModel.Tokens.SecurityKeyIdentifierClause * SecurityToken -&gt; bool" Usage="x509CertificateStoreTokenResolver.TryResolveTokenCore (keyIdentifierClause, token)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyIdentifierClause" Type="System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />
        <Parameter Name="token" Type="System.IdentityModel.Tokens.SecurityToken" RefType="out" />
      </Parameters>
      <Docs>
        <param name="keyIdentifierClause"><span data-ttu-id="a15a8-130">要解决的密钥标识符子句。</span><span class="sxs-lookup"><span data-stu-id="a15a8-130">The key identifier clause to resolve.</span></span></param>
        <param name="token"><span data-ttu-id="a15a8-131">当此方法返回时，包含从密钥标识符子句解析的安全标记。</span><span class="sxs-lookup"><span data-stu-id="a15a8-131">When this method returns, contains the security token that was resolved from the key identifier clause.</span></span> <span data-ttu-id="a15a8-132">该参数未经初始化即被处理。</span><span class="sxs-lookup"><span data-stu-id="a15a8-132">This parameter is treated as uninitialized.</span></span></param>
        <summary><span data-ttu-id="a15a8-133">将指定的密钥标识符子句解析为安全令牌。</span><span class="sxs-lookup"><span data-stu-id="a15a8-133">Resolves the specified key identifier clause to a security token.</span></span></summary>
        <returns><span data-ttu-id="a15a8-134">如果已成功解析密钥标识符子句，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a15a8-134"><see langword="true" /> if the key identifier clause is successfully resolved; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a15a8-135"><paramref name="keyIdentifierClause" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="a15a8-135"><paramref name="keyIdentifierClause" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
