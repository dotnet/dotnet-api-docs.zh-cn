<Type Name="SamlAttribute" FullName="System.IdentityModel.Tokens.SamlAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="87edd9291c5051c69e262e6fa3ae9c643efb7190" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89916289" /></Metadata><TypeSignature Language="C#" Value="public class SamlAttribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SamlAttribute extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.Tokens.SamlAttribute" />
  <TypeSignature Language="VB.NET" Value="Public Class SamlAttribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class SamlAttribute" />
  <TypeSignature Language="F#" Value="type SamlAttribute = class" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>表示与 <see cref="T:System.IdentityModel.Tokens.SamlAttributeStatement" /> 的主题相关联的属性。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IdentityModel.Tokens.SamlAttribute> 类对应于 OASIS SAML 1.1 规范中定义的 `<saml:Attribute>` XML 元素。  
  
 <xref:System.IdentityModel.Tokens.SamlAttribute> 实例包含 <xref:System.IdentityModel.Claims.Rights.PossessProperty%2A> 的主题的 <xref:System.IdentityModel.Tokens.SamlAttributeStatement> 声明。 例如，<xref:System.IdentityModel.Tokens.SamlAttribute> 可能包含一个 `Over21` 声明，其类型在 <xref:System.IdentityModel.Tokens.SamlAttribute.Namespace%2A> 属性中指定，其资源作为集合的成员在 <xref:System.IdentityModel.Tokens.SamlAttribute.AttributeValues%2A> 属性中指定。 调用 <xref:System.IdentityModel.Tokens.SamlStatement.CreatePolicy%2A> 方法时，此 `Over21` 声明被添加到由 <xref:System.IdentityModel.Tokens.SamlAttributeStatement> 返回的授权策略中。 如果 <xref:System.IdentityModel.Tokens.SamlAttribute.AttributeValues%2A> 属性包含多个元素，则为每一个元素返回一个声明。  
  
 <xref:System.IdentityModel.Tokens.SamlAttribute> SAML 对象层次结构中的位置是：  
  
 <xref:System.IdentityModel.Tokens.SamlSecurityToken>  
  
 <xref:System.IdentityModel.Tokens.SamlAssertion>  
  
 <xref:System.IdentityModel.Tokens.SamlAttributeStatement>  
  
 <xref:System.IdentityModel.Tokens.SamlAttribute>  
  
   
  
## Examples  
 [!code-csharp[SamlAttribute#1](~/samples/snippets/csharp/VS_Snippets_CFX/samlattribute/cs/source.cs#1)]
 [!code-vb[SamlAttribute#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/samlattribute/vb/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>初始化 <see cref="T:System.IdentityModel.Tokens.SamlAttribute" /> 类的新实例。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SamlAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SamlAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SamlAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.IdentityModel.Tokens.SamlAttribute" /> 类的新实例。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SamlAttribute (System.IdentityModel.Claims.Claim claim);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IdentityModel.Claims.Claim claim) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SamlAttribute.#ctor(System.IdentityModel.Claims.Claim)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (claim As Claim)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SamlAttribute(System::IdentityModel::Claims::Claim ^ claim);" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Tokens.SamlAttribute : System.IdentityModel.Claims.Claim -&gt; System.IdentityModel.Tokens.SamlAttribute" Usage="new System.IdentityModel.Tokens.SamlAttribute claim" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="claim" Type="System.IdentityModel.Claims.Claim" />
      </Parameters>
      <Docs>
        <param name="claim">一个 <see cref="T:System.IdentityModel.Claims.Claim" />，它表示 <see cref="T:System.IdentityModel.Tokens.SamlSecurityToken" /> 安全令牌的主题的属性。</param>
        <summary>使用指定的声明初始化 <see cref="T:System.IdentityModel.Tokens.SamlAttribute" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用此构造函数将声明转换为 SAML 属性。 若要转换为 SAML 属性 (attribute)，<xref:System.IdentityModel.Claims.Claim.Right%2A> 属性 (property) 必须为 <xref:System.IdentityModel.Claims.Rights.PossessProperty%2A>，<xref:System.IdentityModel.Claims.Claim.Resource%2A> 属性 (property) 的类型必须为 <xref:System.String>，并且 <xref:System.IdentityModel.Claims.Claim.ClaimType%2A> 属性 (property) 的格式必须为 `namespace/name`。  
  
 下表指定 `claim` 参数如何设置 <xref:System.IdentityModel.Tokens.SamlAttribute.Name%2A>、<xref:System.IdentityModel.Tokens.SamlAttribute.Namespace%2A> 和 <xref:System.IdentityModel.Tokens.SamlAttribute.AttributeValues%2A> 属性。  
  
|properties|用于设置属性的 `claim` 参数的属性|  
|--------------|----------------------------------------------------------------|  
|<xref:System.IdentityModel.Tokens.SamlAttribute.AttributeValues%2A>|添加到集合中的 <xref:System.IdentityModel.Claims.Claim.Resource%2A> 属性的值。|  
|<xref:System.IdentityModel.Tokens.SamlAttribute.Name%2A>|<xref:System.IdentityModel.Claims.Claim.ClaimType%2A> 属性中字符串的最后一个“/”字符之后的部分。|  
|<xref:System.IdentityModel.Tokens.SamlAttribute.Namespace%2A>|<xref:System.IdentityModel.Claims.Claim.ClaimType%2A> 属性中字符串的最后一个“/”字符之前的部分。|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="claim" /> 为 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentException"><paramref name="claim" /> 的 <see cref="P:System.IdentityModel.Claims.Claim.Resource" /> 属性的类型不是 <see cref="T:System.String" />。  
  
- 或 - 
<paramref name="claim" /> 的 <see cref="P:System.IdentityModel.Claims.Claim.Right" /> 属性不是 <see cref="P:System.IdentityModel.Claims.Rights.PossessProperty" />。  
  
- 或 - 
<paramref name="claim" /> 的 <see cref="P:System.IdentityModel.Claims.Claim.ClaimType" /> 属性不含有“/”字符，或者它位于第一个或最后一个索引位置。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SamlAttribute (string attributeNamespace, string attributeName, System.Collections.Generic.IEnumerable&lt;string&gt; attributeValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string attributeNamespace, string attributeName, class System.Collections.Generic.IEnumerable`1&lt;string&gt; attributeValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SamlAttribute.#ctor(System.String,System.String,System.Collections.Generic.IEnumerable{System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (attributeNamespace As String, attributeName As String, attributeValues As IEnumerable(Of String))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SamlAttribute(System::String ^ attributeNamespace, System::String ^ attributeName, System::Collections::Generic::IEnumerable&lt;System::String ^&gt; ^ attributeValues);" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Tokens.SamlAttribute : string * string * seq&lt;string&gt; -&gt; System.IdentityModel.Tokens.SamlAttribute" Usage="new System.IdentityModel.Tokens.SamlAttribute (attributeNamespace, attributeName, attributeValues)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="attributeNamespace" Type="System.String" />
        <Parameter Name="attributeName" Type="System.String" />
        <Parameter Name="attributeValues" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="attributeNamespace">在其中定义 <paramref name="attributeName" /> 参数的 XML 命名空间。</param>
        <param name="attributeName">SAML 属性的名称。</param>
        <param name="attributeValues">一个 <see cref="T:System.Collections.Generic.IEnumerable`1" />，它包含 SAML 属性的值。</param>
        <summary>使用指定的属性名称、XML 命名空间和属性值来初始化 <see cref="T:System.IdentityModel.Tokens.SamlAttribute" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 下表指定了此构造函数的参数所设置的属性。  
  
|properties|参数|  
|--------------|---------------|  
|<xref:System.IdentityModel.Tokens.SamlAttribute.AttributeValues%2A>|`attributeValues`|  
|<xref:System.IdentityModel.Tokens.SamlAttribute.Name%2A>|`attributeName`|  
|<xref:System.IdentityModel.Tokens.SamlAttribute.Namespace%2A>|`attributeNamespace`|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="attributeNamespace" /> 为 <see langword="null" />。  
  
- 或 - 
 <paramref name="attributeName" /> 为 <see langword="null" />。  
  
- 或 - 
 <paramref name="attributeValues" /> 为 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentException"><paramref name="claim" /> 的 <see cref="P:System.IdentityModel.Claims.Claim.Resource" /> 属性的类型不是 <see cref="T:System.String" />。  
  
- 或 - 
<paramref name="claim" /> 的 <see cref="P:System.IdentityModel.Claims.Claim.Right" /> 属性不是 <see cref="P:System.IdentityModel.Claims.Rights.PossessProperty" />。  
  
- 或 - 
<paramref name="claim" /> 的 <see cref="P:System.IdentityModel.Claims.Claim.ClaimType" /> 属性不含有“/”字符，或者它位于第一个或最后一个索引位置。</exception>
      </Docs>
    </Member>
    <Member MemberName="AttributeValues">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;string&gt; AttributeValues { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;string&gt; AttributeValues" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SamlAttribute.AttributeValues" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AttributeValues As IList(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IList&lt;System::String ^&gt; ^ AttributeValues { System::Collections::Generic::IList&lt;System::String ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AttributeValues : System.Collections.Generic.IList&lt;string&gt;" Usage="System.IdentityModel.Tokens.SamlAttribute.AttributeValues" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取 SAML 属性的属性值集合。</summary>
        <value>一个 <see cref="T:System.Collections.Generic.IList`1" />，它包含 SAML 属性的属性值集合。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 一个 SAML 属性可以包含多个属性值。  
  
 <xref:System.IdentityModel.Tokens.SamlAttribute.AttributeValues%2A> 属性对应于在 OASIS 安全断言标记语言 (SAML) 断言和协议规范中定义的 `<saml:AttributeValue>` 元素。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AttributeValueXsiType">
      <MemberSignature Language="C#" Value="public string AttributeValueXsiType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AttributeValueXsiType" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SamlAttribute.AttributeValueXsiType" />
      <MemberSignature Language="VB.NET" Value="Public Property AttributeValueXsiType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ AttributeValueXsiType { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AttributeValueXsiType : string with get, set" Usage="System.IdentityModel.Tokens.SamlAttribute.AttributeValueXsiType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置包含在 SAML 特性中的值的 xsi:type。</summary>
        <value>包含 xsi:type 的字符串。 默认值为 <see cref="F:System.Security.Claims.ClaimValueTypes.String" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IdentityModel.Tokens.SamlAttribute.AttributeValueXsiType%2A> 属性 (Property) 对应于 OASIS 安全断言标记语言 (SAML) 断言和协议规范中定义的 `type` 元素的 `<saml:AttributeValue>` 属性 (Attribute)。 该属性是必选项。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">尝试设置一个为 <see langword="null" /> 或空字符串的值。  
  
- 或 - 
尝试设置一个格式不正确的值。</exception>
      </Docs>
    </Member>
    <Member MemberName="ExtractClaims">
      <MemberSignature Language="C#" Value="public virtual System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.Claims.Claim&gt; ExtractClaims ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.IdentityModel.Claims.Claim&gt; ExtractClaims() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SamlAttribute.ExtractClaims" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ExtractClaims () As ReadOnlyCollection(Of Claim)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::ObjectModel::ReadOnlyCollection&lt;System::IdentityModel::Claims::Claim ^&gt; ^ ExtractClaims();" />
      <MemberSignature Language="F#" Value="abstract member ExtractClaims : unit -&gt; System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.Claims.Claim&gt;&#xA;override this.ExtractClaims : unit -&gt; System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.Claims.Claim&gt;" Usage="samlAttribute.ExtractClaims " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.Claims.Claim&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>获取该 SAML 属性表示的声明的集合。</summary>
        <returns>一个类型为 <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> 的 <see cref="T:System.IdentityModel.Claims.Claim" />，它包含该 SAML 属性表示的声明集。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IdentityModel.Tokens.SamlSecurityToken> 安全令牌使用 SAML 断言指定其声明，这些断言可指定有关安全令牌所表示的使用者的属性。 使用 <xref:System.IdentityModel.Tokens.SamlAttribute.ExtractClaims%2A> 方法将 SAML 属性转换为一组声明。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SamlAttribute.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="System.IdentityModel.Tokens.SamlAttribute.IsReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个值，该值指示此实例的属性是否是只读的。</summary>
        <value>如果此实例的属性是只读的，则为 <see langword="true" />；否则为 <see langword="false" />。 默认值为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 若要将 <xref:System.IdentityModel.Tokens.SamlAttribute> 类的此实例设为只读，请调用 <xref:System.IdentityModel.Tokens.SamlAttribute.MakeReadOnly%2A> 方法。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MakeReadOnly">
      <MemberSignature Language="C#" Value="public void MakeReadOnly ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void MakeReadOnly() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SamlAttribute.MakeReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public Sub MakeReadOnly ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void MakeReadOnly();" />
      <MemberSignature Language="F#" Value="member this.MakeReadOnly : unit -&gt; unit" Usage="samlAttribute.MakeReadOnly " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>将此实例设置为只读的。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 调用 <xref:System.IdentityModel.Tokens.SamlAttribute.MakeReadOnly%2A> 方法时，<xref:System.IdentityModel.Tokens.SamlAttribute.IsReadOnly%2A> 属性被设置为 `true`，并且不能再设置此实例的属性。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SamlAttribute.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.IdentityModel.Tokens.SamlAttribute.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置 SAML 属性的名称。</summary>
        <value>SAML 属性的名称。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 若要指定与该 SAML 属性相关联的值，请设置 <xref:System.IdentityModel.Tokens.SamlAttribute.AttributeValues%2A> 属性。  
  
 <xref:System.IdentityModel.Tokens.SamlAttribute.Name%2A> 属性 (Property) 对应于 OASIS 安全断言标记语言 (SAML) 断言和协议规范中定义的 `AttributeName` 元素的 `<Attribute>` 属性 (Attribute)。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">设置了 <see cref="P:System.IdentityModel.Tokens.SamlAttribute.Name" /> 属性，而 <see cref="P:System.IdentityModel.Tokens.SamlAttribute.IsReadOnly" /> 属性为 <see langword="true" />。</exception>
        <exception cref="T:System.ArgumentNullException">将 <see cref="P:System.IdentityModel.Tokens.SamlAttribute.Name" /> 属性设置为 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="Namespace">
      <MemberSignature Language="C#" Value="public string Namespace { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Namespace" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SamlAttribute.Namespace" />
      <MemberSignature Language="VB.NET" Value="Public Property Namespace As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Namespace { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Namespace : string with get, set" Usage="System.IdentityModel.Tokens.SamlAttribute.Namespace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置在其中定义 SAML 属性的名称的 XML 命名空间。</summary>
        <value>在其中定义 SAML 属性的名称的 XML 命名空间。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 若要设置 SAML 属性的名称，请设置 <xref:System.IdentityModel.Tokens.SamlAttribute.Name%2A> 属性。  
  
 <xref:System.IdentityModel.Tokens.SamlAttribute.Namespace%2A> 属性 (Property) 对应于 OASIS 安全断言标记语言 (SAML) 断言和协议规范中定义的 `AttributeNamespace` 元素的 `<AttributeDesignator>` 属性 (Attribute)。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OriginalIssuer">
      <MemberSignature Language="C#" Value="public string OriginalIssuer { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OriginalIssuer" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SamlAttribute.OriginalIssuer" />
      <MemberSignature Language="VB.NET" Value="Public Property OriginalIssuer As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OriginalIssuer { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.OriginalIssuer : string with get, set" Usage="System.IdentityModel.Tokens.SamlAttribute.OriginalIssuer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置字符串表示 SAML 特性原始颁发者的字符串的名称。</summary>
        <value>SAML 特性的原始颁发者。</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">尝试设置一个引发空字符串的值。</exception>
      </Docs>
    </Member>
    <Member MemberName="ReadXml">
      <MemberSignature Language="C#" Value="public virtual void ReadXml (System.Xml.XmlDictionaryReader reader, System.IdentityModel.Tokens.SamlSerializer samlSerializer, System.IdentityModel.Selectors.SecurityTokenSerializer keyInfoSerializer, System.IdentityModel.Selectors.SecurityTokenResolver outOfBandTokenResolver);" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReadXml(class System.Xml.XmlDictionaryReader reader, class System.IdentityModel.Tokens.SamlSerializer samlSerializer, class System.IdentityModel.Selectors.SecurityTokenSerializer keyInfoSerializer, class System.IdentityModel.Selectors.SecurityTokenResolver outOfBandTokenResolver) cil managed" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SamlAttribute.ReadXml(System.Xml.XmlDictionaryReader,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ReadXml (reader As XmlDictionaryReader, samlSerializer As SamlSerializer, keyInfoSerializer As SecurityTokenSerializer, outOfBandTokenResolver As SecurityTokenResolver)" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ReadXml(System::Xml::XmlDictionaryReader ^ reader, System::IdentityModel::Tokens::SamlSerializer ^ samlSerializer, System::IdentityModel::Selectors::SecurityTokenSerializer ^ keyInfoSerializer, System::IdentityModel::Selectors::SecurityTokenResolver ^ outOfBandTokenResolver);" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="F#" Value="abstract member ReadXml : System.Xml.XmlDictionaryReader * System.IdentityModel.Tokens.SamlSerializer * System.IdentityModel.Selectors.SecurityTokenSerializer * System.IdentityModel.Selectors.SecurityTokenResolver -&gt; unit&#xA;override this.ReadXml : System.Xml.XmlDictionaryReader * System.IdentityModel.Tokens.SamlSerializer * System.IdentityModel.Selectors.SecurityTokenSerializer * System.IdentityModel.Selectors.SecurityTokenResolver -&gt; unit" Usage="samlAttribute.ReadXml (reader, samlSerializer, keyInfoSerializer, outOfBandTokenResolver)" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C#" Value="public virtual void ReadXml (System.Xml.XmlDictionaryReader reader, System.IdentityModel.Tokens.SamlSerializer samlSerializer, System.IdentityModel.Selectors.SecurityTokenSerializer keyInfoTokenSerializer, System.IdentityModel.Selectors.SecurityTokenResolver outOfBandTokenResolver);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReadXml(class System.Xml.XmlDictionaryReader reader, class System.IdentityModel.Tokens.SamlSerializer samlSerializer, class System.IdentityModel.Selectors.SecurityTokenSerializer keyInfoTokenSerializer, class System.IdentityModel.Selectors.SecurityTokenResolver outOfBandTokenResolver) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ReadXml (reader As XmlDictionaryReader, samlSerializer As SamlSerializer, keyInfoTokenSerializer As SecurityTokenSerializer, outOfBandTokenResolver As SecurityTokenResolver)" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ReadXml(System::Xml::XmlDictionaryReader ^ reader, System::IdentityModel::Tokens::SamlSerializer ^ samlSerializer, System::IdentityModel::Selectors::SecurityTokenSerializer ^ keyInfoTokenSerializer, System::IdentityModel::Selectors::SecurityTokenResolver ^ outOfBandTokenResolver);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="abstract member ReadXml : System.Xml.XmlDictionaryReader * System.IdentityModel.Tokens.SamlSerializer * System.IdentityModel.Selectors.SecurityTokenSerializer * System.IdentityModel.Selectors.SecurityTokenResolver -&gt; unit&#xA;override this.ReadXml : System.Xml.XmlDictionaryReader * System.IdentityModel.Tokens.SamlSerializer * System.IdentityModel.Selectors.SecurityTokenSerializer * System.IdentityModel.Selectors.SecurityTokenResolver -&gt; unit" Usage="samlAttribute.ReadXml (reader, samlSerializer, keyInfoTokenSerializer, outOfBandTokenResolver)" FrameworkAlternate="xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlDictionaryReader" Index="0" />
        <Parameter Name="samlSerializer" Type="System.IdentityModel.Tokens.SamlSerializer" Index="1" />
        <Parameter Name="keyInfoSerializer" Type="System.IdentityModel.Selectors.SecurityTokenSerializer" Index="2" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="keyInfoTokenSerializer" Type="System.IdentityModel.Selectors.SecurityTokenSerializer" Index="2" FrameworkAlternate="xamarinmac-3.0" />
        <Parameter Name="outOfBandTokenResolver" Type="System.IdentityModel.Selectors.SecurityTokenResolver" Index="3" />
      </Parameters>
      <Docs>
        <param name="reader">一个用于读取 SAML 属性的 <see cref="T:System.Xml.XmlDictionaryReader" />。</param>
        <param name="samlSerializer">一个 <see cref="T:System.IdentityModel.Tokens.SamlSerializer" />，它能够读取 SAML 规范中的 XML 元素。</param>
        <param name="keyInfoSerializer">一个 <see cref="T:System.IdentityModel.Selectors.SecurityTokenSerializer" />，它读取数字签名的 <see langword="KeyInfo" /> 子句。</param>
        <param name="keyInfoTokenSerializer">一个 <see cref="T:System.IdentityModel.Selectors.SecurityTokenSerializer" />，它读取数字签名的 <see langword="KeyInfo" /> 子句。</param>
        <param name="outOfBandTokenResolver">一个 <see cref="T:System.IdentityModel.Selectors.SecurityTokenResolver" />，它确定是哪个安全令牌创建了数字签名。</param>
        <summary>从指定的 XML 读取器读取 SAML 属性。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IdentityModel.Tokens.SamlAttribute.ReadXml%28System.Xml.XmlDictionaryReader%2CSystem.IdentityModel.Tokens.SamlSerializer%2CSystem.IdentityModel.Selectors.SecurityTokenSerializer%2CSystem.IdentityModel.Selectors.SecurityTokenResolver%29> 方法设置 <xref:System.IdentityModel.Tokens.SamlAttribute.AttributeValues%2A>、<xref:System.IdentityModel.Tokens.SamlAttribute.Name%2A> 和 <xref:System.IdentityModel.Tokens.SamlAttribute.Namespace%2A> 属性。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="reader" /> 为 <see langword="null" />。  
  
- 或 - 
 <paramref name="samlSerializer" /> 为 <see langword="null" />。</exception>
        <exception cref="T:System.IdentityModel.Tokens.SecurityTokenException"><paramref name="reader" /> 引用不具有 <see langword="AttributeName" /> 和 <see langword="AttributeNamespace" /> 属性的 XML 元素。</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteXml">
      <MemberSignature Language="C#" Value="public virtual void WriteXml (System.Xml.XmlDictionaryWriter writer, System.IdentityModel.Tokens.SamlSerializer samlSerializer, System.IdentityModel.Selectors.SecurityTokenSerializer keyInfoSerializer);" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteXml(class System.Xml.XmlDictionaryWriter writer, class System.IdentityModel.Tokens.SamlSerializer samlSerializer, class System.IdentityModel.Selectors.SecurityTokenSerializer keyInfoSerializer) cil managed" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SamlAttribute.WriteXml(System.Xml.XmlDictionaryWriter,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteXml (writer As XmlDictionaryWriter, samlSerializer As SamlSerializer, keyInfoSerializer As SecurityTokenSerializer)" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteXml(System::Xml::XmlDictionaryWriter ^ writer, System::IdentityModel::Tokens::SamlSerializer ^ samlSerializer, System::IdentityModel::Selectors::SecurityTokenSerializer ^ keyInfoSerializer);" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="F#" Value="abstract member WriteXml : System.Xml.XmlDictionaryWriter * System.IdentityModel.Tokens.SamlSerializer * System.IdentityModel.Selectors.SecurityTokenSerializer -&gt; unit&#xA;override this.WriteXml : System.Xml.XmlDictionaryWriter * System.IdentityModel.Tokens.SamlSerializer * System.IdentityModel.Selectors.SecurityTokenSerializer -&gt; unit" Usage="samlAttribute.WriteXml (writer, samlSerializer, keyInfoSerializer)" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C#" Value="public virtual void WriteXml (System.Xml.XmlDictionaryWriter writer, System.IdentityModel.Tokens.SamlSerializer samlSerializer, System.IdentityModel.Selectors.SecurityTokenSerializer keyInfoTokenSerializer);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteXml(class System.Xml.XmlDictionaryWriter writer, class System.IdentityModel.Tokens.SamlSerializer samlSerializer, class System.IdentityModel.Selectors.SecurityTokenSerializer keyInfoTokenSerializer) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteXml (writer As XmlDictionaryWriter, samlSerializer As SamlSerializer, keyInfoTokenSerializer As SecurityTokenSerializer)" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteXml(System::Xml::XmlDictionaryWriter ^ writer, System::IdentityModel::Tokens::SamlSerializer ^ samlSerializer, System::IdentityModel::Selectors::SecurityTokenSerializer ^ keyInfoTokenSerializer);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="abstract member WriteXml : System.Xml.XmlDictionaryWriter * System.IdentityModel.Tokens.SamlSerializer * System.IdentityModel.Selectors.SecurityTokenSerializer -&gt; unit&#xA;override this.WriteXml : System.Xml.XmlDictionaryWriter * System.IdentityModel.Tokens.SamlSerializer * System.IdentityModel.Selectors.SecurityTokenSerializer -&gt; unit" Usage="samlAttribute.WriteXml (writer, samlSerializer, keyInfoTokenSerializer)" FrameworkAlternate="xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlDictionaryWriter" Index="0" />
        <Parameter Name="samlSerializer" Type="System.IdentityModel.Tokens.SamlSerializer" Index="1" />
        <Parameter Name="keyInfoSerializer" Type="System.IdentityModel.Selectors.SecurityTokenSerializer" Index="2" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="keyInfoTokenSerializer" Type="System.IdentityModel.Selectors.SecurityTokenSerializer" Index="2" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="writer">一个用于写入 SAML 属性的 <see cref="T:System.Xml.XmlDictionaryWriter" />。</param>
        <param name="samlSerializer">一个 <see cref="T:System.IdentityModel.Tokens.SamlSerializer" />，它能够写入 SAML 断言中的 XML 元素。</param>
        <param name="keyInfoSerializer">一个 <see cref="T:System.IdentityModel.Selectors.SecurityTokenSerializer" />，它能够写入 <see langword="KeyInfo" /> 子句。</param>
        <param name="keyInfoTokenSerializer">一个 <see cref="T:System.IdentityModel.Selectors.SecurityTokenSerializer" />，它能够写入 <see langword="KeyInfo" /> 子句。</param>
        <summary>将 SAML 属性写入指定的 XML 序列化程序。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="writer" /> 为 <see langword="null" />。  
  
- 或 - 
 <paramref name="samlSerializer" /> 为 <see langword="null" />。</exception>
      </Docs>
    </Member>
  </Members>
</Type>
