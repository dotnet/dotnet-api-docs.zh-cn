<Type Name="SecurityToken" FullName="System.IdentityModel.Tokens.SecurityToken">
  <Metadata><Meta Name="ms.openlocfilehash" Value="89e3cb83ffcaabbe9da7de8eea01f5d1cec35eeb" /><Meta Name="ms.sourcegitcommit" Value="397961a0164281b579f68064c3bb66c071f374d9" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/14/2020" /><Meta Name="ms.locfileid" Value="86322463" /></Metadata><TypeSignature Language="C#" Value="public abstract class SecurityToken" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit SecurityToken extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.Tokens.SecurityToken" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class SecurityToken" />
  <TypeSignature Language="C++ CLI" Value="public ref class SecurityToken abstract" />
  <TypeSignature Language="F#" Value="type SecurityToken = class" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
    <AssemblyVersion>4.7.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="3ab22-101">表示用于实现所有安全令牌的基类。</span><span class="sxs-lookup"><span data-stu-id="3ab22-101">Represents a base class used to implement all security tokens.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3ab22-102">使用安全令牌可提供身份验证凭据，也可以保护消息。</span><span class="sxs-lookup"><span data-stu-id="3ab22-102">Use a security token to provide authentication credentials or to protect a message.</span></span>  
  
 <span data-ttu-id="3ab22-103">安全令牌可用于提供身份验证凭据、加密密钥材料，如果 security token service (STS) 颁发安全令牌，则可以使用安全令牌来提供有关使用者的声明的集合。</span><span class="sxs-lookup"><span data-stu-id="3ab22-103">A security token can be used to provide authentication credentials, cryptographic key material, or, in the case of a security token issued by a security token service (STS), a collection of claims about a subject.</span></span> <span data-ttu-id="3ab22-104">所有安全令牌均派生自 <xref:System.IdentityModel.Tokens.SecurityToken> 类。</span><span class="sxs-lookup"><span data-stu-id="3ab22-104">All security tokens derive from the <xref:System.IdentityModel.Tokens.SecurityToken> class.</span></span>  
  
 <span data-ttu-id="3ab22-105">从 .NET 4.5 开始，Windows Identity Foundation (WIF) 已完全集成到 .NET Framework 中，WIF 公开的类是在代码中处理安全令牌的首选方法。</span><span class="sxs-lookup"><span data-stu-id="3ab22-105">Beginning with .NET 4.5, Windows Identity Foundation (WIF) has been fully integrated into the .NET Framework and the classes exposed by WIF are the preferred method of handling security tokens in your code.</span></span> <span data-ttu-id="3ab22-106">在 WIF 中，安全令牌从其 XML 表示形式进行序列化和反序列化，并通过使用派生自基类的类进行验证 <xref:System.IdentityModel.Tokens.SecurityTokenHandler> 。</span><span class="sxs-lookup"><span data-stu-id="3ab22-106">In WIF, security tokens are serialized and deserialized to and from their XML representation and are validated by using classes derived from the <xref:System.IdentityModel.Tokens.SecurityTokenHandler> base class.</span></span> <span data-ttu-id="3ab22-107">验证令牌不仅涉及确保令牌的有效性，还会 <xref:System.Security.Claims.ClaimsIdentity> 从令牌返回可用于进行身份验证和授权决策的实例。</span><span class="sxs-lookup"><span data-stu-id="3ab22-107">Validating a token involves not just ensuring that the token is valid, but also returning a <xref:System.Security.Claims.ClaimsIdentity> instance from the token that can be used in making authentication and authorization decisions.</span></span> <span data-ttu-id="3ab22-108"><xref:System.Security.Claims.ClaimsIdentity>是由标记处理程序的方法实现的，该 <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken%2A> 方法由标记中包含的声明以及标记类型本身的内部声明来构造。</span><span class="sxs-lookup"><span data-stu-id="3ab22-108">The <xref:System.Security.Claims.ClaimsIdentity> is constructed by the token handler's implementation of the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken%2A> method from the claims contained in the token as well as from claims that are intrinsic to the token type itself.</span></span>  
  
 <span data-ttu-id="3ab22-109">WIF 附带了对以下类型的安全令牌的支持：</span><span class="sxs-lookup"><span data-stu-id="3ab22-109">WIF ships with support for the following types of security tokens:</span></span>  
  
-   <span data-ttu-id="3ab22-110"><xref:System.IdentityModel.Tokens.Saml2SecurityToken>：表示基于 SAML 2.0 断言的安全令牌。</span><span class="sxs-lookup"><span data-stu-id="3ab22-110"><xref:System.IdentityModel.Tokens.Saml2SecurityToken>: Represents a security token that is based upon a SAML 2.0 Assertion.</span></span> <span data-ttu-id="3ab22-111">此标记类型通常由 security token service 颁发，以响应 WS 信任或 WS 联合身份验证安全令牌请求 (RST) 。</span><span class="sxs-lookup"><span data-stu-id="3ab22-111">This token type is typically issued by a security token service in response to a WS-Trust or WS-Federation security token request (RST).</span></span>  
  
-   <span data-ttu-id="3ab22-112"><xref:System.IdentityModel.Tokens.SamlSecurityToken>：表示基于 SAML 1.1 断言的安全令牌。</span><span class="sxs-lookup"><span data-stu-id="3ab22-112"><xref:System.IdentityModel.Tokens.SamlSecurityToken>:  Represents a security token that is based upon a SAML 1.1 Assertion.</span></span> <span data-ttu-id="3ab22-113">此标记类型通常由 security token service 颁发，以响应 WS 信任或 WS 联合身份验证安全令牌请求 (RST) 。</span><span class="sxs-lookup"><span data-stu-id="3ab22-113">This token type is typically issued by a security token service in response to a WS-Trust or WS-Federation security token request (RST).</span></span>  
  
-   <span data-ttu-id="3ab22-114"><xref:System.IdentityModel.Tokens.KerberosRequestorSecurityToken> 和 <xref:System.IdentityModel.Tokens.KerberosReceiverSecurityToken> ：表示基于在 SOAP 消息中接收或发送的 Kerberos 票证的安全令牌</span><span class="sxs-lookup"><span data-stu-id="3ab22-114"><xref:System.IdentityModel.Tokens.KerberosRequestorSecurityToken> and <xref:System.IdentityModel.Tokens.KerberosReceiverSecurityToken>: Represents a security token that is based upon a Kerberos ticket that is received or sent in a SOAP message</span></span>  
  
-   <span data-ttu-id="3ab22-115"><xref:System.IdentityModel.Tokens.RsaSecurityToken>：表示一个安全令牌，它基于使用 RSA 算法创建的密钥。</span><span class="sxs-lookup"><span data-stu-id="3ab22-115"><xref:System.IdentityModel.Tokens.RsaSecurityToken>: Represents a security token that is based upon key that is created using the RSA algorithm.</span></span>  
  
-   <span data-ttu-id="3ab22-116"><xref:System.IdentityModel.Tokens.SessionSecurityToken>：表示包含会话相关信息的安全令牌。</span><span class="sxs-lookup"><span data-stu-id="3ab22-116"><xref:System.IdentityModel.Tokens.SessionSecurityToken>: Represents a security token that contains information about a session.</span></span>  
  
-   <span data-ttu-id="3ab22-117"><xref:System.IdentityModel.Tokens.UserNameSecurityToken>：表示基于用户名和密码的安全令牌。</span><span class="sxs-lookup"><span data-stu-id="3ab22-117"><xref:System.IdentityModel.Tokens.UserNameSecurityToken>: Represents a security token that is based on a username and password.</span></span>  
  
-   <span data-ttu-id="3ab22-118"><xref:System.IdentityModel.Tokens.WindowsSecurityToken>：表示基于 Windows 域或用户帐户标识的安全令牌。</span><span class="sxs-lookup"><span data-stu-id="3ab22-118"><xref:System.IdentityModel.Tokens.WindowsSecurityToken>: Represents a security token that is based on the identity of a Windows domain or user account.</span></span>  
  
-   <span data-ttu-id="3ab22-119"><xref:System.IdentityModel.Tokens.X509SecurityToken>：表示基于 x.509 证书的安全令牌。</span><span class="sxs-lookup"><span data-stu-id="3ab22-119"><xref:System.IdentityModel.Tokens.X509SecurityToken>: Represents a security token that is based on an X.509 certificate.</span></span>  
  
-   <span data-ttu-id="3ab22-120"><xref:System.IdentityModel.Tokens.X509WindowsSecurityToken>：表示一个安全令牌，该令牌基于映射到 Windows 域用户或本地计算机用户帐户的 x.509 证书。</span><span class="sxs-lookup"><span data-stu-id="3ab22-120"><xref:System.IdentityModel.Tokens.X509WindowsSecurityToken>: Represents a security token that is based upon an X.509 certificate that is mapped to a Windows domain user or local computer user account.</span></span>  
  
 <span data-ttu-id="3ab22-121">另外两个安全令牌类（ <xref:System.IdentityModel.Tokens.GenericXmlSecurityToken> 和 <xref:System.IdentityModel.Tokens.EncryptedSecurityToken> ）可用于帮助处理一般情况。</span><span class="sxs-lookup"><span data-stu-id="3ab22-121">Two other security token classes, <xref:System.IdentityModel.Tokens.GenericXmlSecurityToken> and <xref:System.IdentityModel.Tokens.EncryptedSecurityToken>, can be used to help handle general cases.</span></span>  
  
 <span data-ttu-id="3ab22-122">广泛讲述的安全令牌分为三个主要类别：</span><span class="sxs-lookup"><span data-stu-id="3ab22-122">Broadly speaking security tokens fall into three major categories:</span></span>  
  
-   <span data-ttu-id="3ab22-123">带有或引用加密密钥材料的令牌。</span><span class="sxs-lookup"><span data-stu-id="3ab22-123">Tokens that carry or reference cryptographic key material.</span></span> <span data-ttu-id="3ab22-124">例如 <xref:System.IdentityModel.Tokens.RsaSecurityToken> ，和 <xref:System.IdentityModel.Tokens.X509SecurityToken> 类型通常用于此目的。</span><span class="sxs-lookup"><span data-stu-id="3ab22-124">For example the <xref:System.IdentityModel.Tokens.RsaSecurityToken> and <xref:System.IdentityModel.Tokens.X509SecurityToken> types are often used for this purpose.</span></span>  
  
-   <span data-ttu-id="3ab22-125">表示已进行身份验证的用户的凭据的令牌。</span><span class="sxs-lookup"><span data-stu-id="3ab22-125">Tokens that represent credentials for users that have already been authenticated.</span></span> <span data-ttu-id="3ab22-126">例如， <xref:System.IdentityModel.Tokens.UserNameSecurityToken> <xref:System.IdentityModel.Tokens.WindowsSecurityToken> 如果用户使用证书进行身份验证，则为、和 <xref:System.IdentityModel.Tokens.X509SecurityToken> 类型。</span><span class="sxs-lookup"><span data-stu-id="3ab22-126">For example, the <xref:System.IdentityModel.Tokens.UserNameSecurityToken>, <xref:System.IdentityModel.Tokens.WindowsSecurityToken>, and, in the case of a user authenticated using a certificate, the <xref:System.IdentityModel.Tokens.X509SecurityToken> types.</span></span>  
  
-   <span data-ttu-id="3ab22-127">Security token service (STS) 颁发的令牌，以响应使用 WS-TRUST 或 WS 联合身份验证协议的安全令牌请求。</span><span class="sxs-lookup"><span data-stu-id="3ab22-127">Tokens that are issued by a security token service (STS) in response to a security token request using either the WS-Trust or WS-Federation protocol.</span></span> <span data-ttu-id="3ab22-128">通常，它们在 `wst:RequestSecurityTokenResponse` XML 片段中返回。</span><span class="sxs-lookup"><span data-stu-id="3ab22-128">These are typically returned in a `wst:RequestSecurityTokenResponse` XML fragment.</span></span> <span data-ttu-id="3ab22-129"><xref:System.IdentityModel.Tokens.Saml2SecurityToken>和 <xref:System.IdentityModel.Tokens.SamlSecurityToken> 类型通常用于表示这些标记。</span><span class="sxs-lookup"><span data-stu-id="3ab22-129">The <xref:System.IdentityModel.Tokens.Saml2SecurityToken> and <xref:System.IdentityModel.Tokens.SamlSecurityToken> types are most often used to represent these tokens.</span></span>  
  
 <span data-ttu-id="3ab22-130">特殊的标记类型， <xref:System.IdentityModel.Tokens.SessionSecurityToken> 包含在主动或被动方案中使用会话时重新创建主体所需的信息。</span><span class="sxs-lookup"><span data-stu-id="3ab22-130">A special token type, the <xref:System.IdentityModel.Tokens.SessionSecurityToken>, contains information necessary to recreate a principal when using sessions in active or passive scenarios.</span></span>  
  
 <span data-ttu-id="3ab22-131">若要向现有的标记类型添加功能，可以从特定类型及其关联的令牌处理程序派生，以支持添加到令牌中的任何新元素。</span><span class="sxs-lookup"><span data-stu-id="3ab22-131">To add functionality to existing token types you can derive from the specific type and its associated token handler to support any new elements that you add to the token.</span></span> <span data-ttu-id="3ab22-132">若要添加对新标记类型的支持，可以直接从 <xref:System.IdentityModel.Tokens.SecurityToken> 类派生。</span><span class="sxs-lookup"><span data-stu-id="3ab22-132">To add support for new token types, you can derive directly from the <xref:System.IdentityModel.Tokens.SecurityToken> class.</span></span> <span data-ttu-id="3ab22-133">当你执行此操作时，你还需要通过从类派生来创建令牌处理程序类 <xref:System.IdentityModel.Tokens.SecurityTokenHandler> 。</span><span class="sxs-lookup"><span data-stu-id="3ab22-133">When you do this, you will also need to create a token handler class by deriving from the <xref:System.IdentityModel.Tokens.SecurityTokenHandler> class.</span></span> <span data-ttu-id="3ab22-134">根据你使用令牌的方式，你可能还需要通过从类派生，并通过从类派生来创建自定义令牌解析程序，还需要创建 <xref:System.IdentityModel.Tokens.IssuerTokenResolver> 一个或多个自定义密钥标识符子句类型 <xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause> 。</span><span class="sxs-lookup"><span data-stu-id="3ab22-134">Depending on how your token is to be used, you may also need to create a custom token resolver by deriving from the <xref:System.IdentityModel.Tokens.IssuerTokenResolver> class as well as one or more custom key identifier clause types by deriving from the <xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3ab22-135">本主题中使用的代码示例 <xref:System.IdentityModel.Tokens.SecurityToken> 摘自 `Custom Token` 示例。</span><span class="sxs-lookup"><span data-stu-id="3ab22-135">The code examples that are used in the <xref:System.IdentityModel.Tokens.SecurityToken> topics are taken from the `Custom Token` sample.</span></span> <span data-ttu-id="3ab22-136">此示例提供了自定义类，这些类可用于处理简单 Web 标记 (SWT) 。</span><span class="sxs-lookup"><span data-stu-id="3ab22-136">This sample provides custom classes that enable processing of Simple Web Tokens (SWT).</span></span> <span data-ttu-id="3ab22-137">它包含 `SimpleWebToken` 类和 `SimpleWebTokenHandler` 类以及支持 SWT 标记的其他类的实现。</span><span class="sxs-lookup"><span data-stu-id="3ab22-137">It includes an implementation of a `SimpleWebToken` class and a `SimpleWebTokenHandler` class, as well as other classes that support SWT tokens.</span></span> <span data-ttu-id="3ab22-138">有关此示例和可供 WIF 使用的其他示例的信息，请参阅 [WIF 代码示例索引](https://docs.microsoft.com/previous-versions/dotnet/framework/security/wif-code-sample-index)。</span><span class="sxs-lookup"><span data-stu-id="3ab22-138">For information about this sample and other samples available for WIF and about where to download them, see [WIF Code Sample Index](https://docs.microsoft.com/previous-versions/dotnet/framework/security/wif-code-sample-index).</span></span> <span data-ttu-id="3ab22-139">下面的代码演示类的实现 `SimpleWebToken` 。</span><span class="sxs-lookup"><span data-stu-id="3ab22-139">The following code shows the implementation of the `SimpleWebToken` class.</span></span> <span data-ttu-id="3ab22-140">此类扩展 <xref:System.IdentityModel.Tokens.SecurityToken> 。</span><span class="sxs-lookup"><span data-stu-id="3ab22-140">This class extends <xref:System.IdentityModel.Tokens.SecurityToken>.</span></span>  
  
 [!code-csharp[WifCustomTokenST#1](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokenst/cs/simplewebtoken/simplewebtokenconstants.cs#1)]  
[!code-csharp[WifCustomTokenST#2](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokenst/cs/simplewebtoken/simplewebtoken.cs#2)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para><span data-ttu-id="3ab22-141">必须重写 <see cref="P:System.IdentityModel.Tokens.SecurityToken.Id" /> 、 <see cref="P:System.IdentityModel.Tokens.SecurityToken.SecurityKeys" /> 、 <see cref="P:System.IdentityModel.Tokens.SecurityToken.ValidFrom" /> 和 <see cref="P:System.IdentityModel.Tokens.SecurityToken.ValidTo" /> 属性。</span><span class="sxs-lookup"><span data-stu-id="3ab22-141">You must override the <see cref="P:System.IdentityModel.Tokens.SecurityToken.Id" />, <see cref="P:System.IdentityModel.Tokens.SecurityToken.SecurityKeys" />, <see cref="P:System.IdentityModel.Tokens.SecurityToken.ValidFrom" />, and <see cref="P:System.IdentityModel.Tokens.SecurityToken.ValidTo" /> properties.</span></span> <span data-ttu-id="3ab22-142"><see cref="M:System.IdentityModel.Tokens.SecurityToken.CanCreateKeyIdentifierClause``1" />、、 <see cref="M:System.IdentityModel.Tokens.SecurityToken.CreateKeyIdentifierClause``1" /> <see cref="M:System.IdentityModel.Tokens.SecurityToken.MatchesKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" /> 和 <see cref="M:System.IdentityModel.Tokens.SecurityToken.ResolveKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" /> 方法都支持类型为的键标识符 <see cref="T:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause" /> 。</span><span class="sxs-lookup"><span data-stu-id="3ab22-142">The <see cref="M:System.IdentityModel.Tokens.SecurityToken.CanCreateKeyIdentifierClause``1" />, <see cref="M:System.IdentityModel.Tokens.SecurityToken.CreateKeyIdentifierClause``1" />, <see cref="M:System.IdentityModel.Tokens.SecurityToken.MatchesKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />, and <see cref="M:System.IdentityModel.Tokens.SecurityToken.ResolveKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" /> methods all support key identifiers of type <see cref="T:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause" />.</span></span> <span data-ttu-id="3ab22-143">必须重写这些方法，以支持派生类中的其他密钥标识符类型。</span><span class="sxs-lookup"><span data-stu-id="3ab22-143">You must override these methods to support other key identifier types in your derived class.</span></span></para></block>
    <altmember cref="T:System.IdentityModel.Tokens.SecurityTokenHandler" />
    <altmember cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />
    <altmember cref="T:System.IdentityModel.Tokens.IssuerTokenResolver" />
    <altmember cref="T:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SecurityToken ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityToken.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; SecurityToken();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3ab22-144">由派生类中的构造函数调用，用于初始化 <see cref="T:System.IdentityModel.Tokens.SecurityToken" /> 类。</span><span class="sxs-lookup"><span data-stu-id="3ab22-144">Called by constructors in derived classes to initialize the <see cref="T:System.IdentityModel.Tokens.SecurityToken" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanCreateKeyIdentifierClause&lt;T&gt;">
      <MemberSignature Language="C#" Value="public virtual bool CanCreateKeyIdentifierClause&lt;T&gt; () where T : System.IdentityModel.Tokens.SecurityKeyIdentifierClause;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanCreateKeyIdentifierClause&lt;(class System.IdentityModel.Tokens.SecurityKeyIdentifierClause) T&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityToken.CanCreateKeyIdentifierClause``1" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CanCreateKeyIdentifierClause(Of T As SecurityKeyIdentifierClause) () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : System::IdentityModel::Tokens::SecurityKeyIdentifierClause virtual bool CanCreateKeyIdentifierClause();" />
      <MemberSignature Language="F#" Value="abstract member CanCreateKeyIdentifierClause : unit -&gt; bool (requires 'T :&gt; System.IdentityModel.Tokens.SecurityKeyIdentifierClause)&#xA;override this.CanCreateKeyIdentifierClause : unit -&gt; bool (requires 'T :&gt; System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" Usage="securityToken.CanCreateKeyIdentifierClause " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <BaseTypeName>System.IdentityModel.Tokens.SecurityKeyIdentifierClause</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="T"><span data-ttu-id="3ab22-145">一个 <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />，指定要创建的密钥标识符。</span><span class="sxs-lookup"><span data-stu-id="3ab22-145">A <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> that specifies the key identifier to create.</span></span></typeparam>
        <summary><span data-ttu-id="3ab22-146">获取一个值，该值指示此安全令牌能否创建指定的密钥标识符。</span><span class="sxs-lookup"><span data-stu-id="3ab22-146">Gets a value that indicates whether this security token is capable of creating the specified key identifier.</span></span></summary>
        <returns><span data-ttu-id="3ab22-147">如果 <see langword="true" /> 的类型为 <paramref name="T" />，则为 <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="3ab22-147"><see langword="true" /> when <paramref name="T" /> is of type <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3ab22-148">使用 <xref:System.IdentityModel.Tokens.SecurityToken.CanCreateKeyIdentifierClause%2A> 方法可确定安全令牌能否创建特定密钥标识符。</span><span class="sxs-lookup"><span data-stu-id="3ab22-148">Use the <xref:System.IdentityModel.Tokens.SecurityToken.CanCreateKeyIdentifierClause%2A> method to determine whether a security token can create a specific key identifier.</span></span> <span data-ttu-id="3ab22-149">若要创建密钥标识符，请调用 <xref:System.IdentityModel.Tokens.SecurityToken.CreateKeyIdentifierClause%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="3ab22-149">To create the key identifier call the <xref:System.IdentityModel.Tokens.SecurityToken.CreateKeyIdentifierClause%2A> method.</span></span>  
  
 <span data-ttu-id="3ab22-150">默认实现支持类型为的密钥标识符子句 <xref:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause> 。</span><span class="sxs-lookup"><span data-stu-id="3ab22-150">The default implementation supports key identifier clauses of type <xref:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.IdentityModel.Tokens.SecurityToken.CreateKeyIdentifierClause``1" />
        <altmember cref="T:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause" />
      </Docs>
    </Member>
    <Member MemberName="CreateKeyIdentifierClause&lt;T&gt;">
      <MemberSignature Language="C#" Value="public virtual T CreateKeyIdentifierClause&lt;T&gt; () where T : System.IdentityModel.Tokens.SecurityKeyIdentifierClause;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !!T CreateKeyIdentifierClause&lt;(class System.IdentityModel.Tokens.SecurityKeyIdentifierClause) T&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityToken.CreateKeyIdentifierClause``1" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateKeyIdentifierClause(Of T As SecurityKeyIdentifierClause) () As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : System::IdentityModel::Tokens::SecurityKeyIdentifierClause virtual T CreateKeyIdentifierClause();" />
      <MemberSignature Language="F#" Value="abstract member CreateKeyIdentifierClause : unit -&gt; 'T (requires 'T :&gt; System.IdentityModel.Tokens.SecurityKeyIdentifierClause)&#xA;override this.CreateKeyIdentifierClause : unit -&gt; 'T (requires 'T :&gt; System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" Usage="securityToken.CreateKeyIdentifierClause " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <BaseTypeName>System.IdentityModel.Tokens.SecurityKeyIdentifierClause</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="T"><span data-ttu-id="3ab22-151">一个 <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />，指定要创建的密钥标识符。</span><span class="sxs-lookup"><span data-stu-id="3ab22-151">A <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> that specifies the key identifier to create.</span></span></typeparam>
        <summary><span data-ttu-id="3ab22-152">创建指定的密钥标识符子句。</span><span class="sxs-lookup"><span data-stu-id="3ab22-152">Creates the specified key identifier clause.</span></span></summary>
        <returns><span data-ttu-id="3ab22-153">一个 <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />，它是安全令牌的密钥标识符子句。</span><span class="sxs-lookup"><span data-stu-id="3ab22-153">A <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> that is a key identifier clause for the security token.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3ab22-154">使用 <xref:System.IdentityModel.Tokens.SecurityToken.CanCreateKeyIdentifierClause%2A> 方法可确定安全令牌能否创建特定密钥标识符。</span><span class="sxs-lookup"><span data-stu-id="3ab22-154">Use the <xref:System.IdentityModel.Tokens.SecurityToken.CanCreateKeyIdentifierClause%2A> method to determine whether a security token can create a specific key identifier.</span></span> <span data-ttu-id="3ab22-155">若要创建密钥标识符，请调用 <xref:System.IdentityModel.Tokens.SecurityToken.CreateKeyIdentifierClause%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="3ab22-155">To create the key identifier call the <xref:System.IdentityModel.Tokens.SecurityToken.CreateKeyIdentifierClause%2A> method.</span></span>  
  
 <span data-ttu-id="3ab22-156">默认实现支持类型为的密钥标识符子句 <xref:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause> 。</span><span class="sxs-lookup"><span data-stu-id="3ab22-156">The default implementation supports key identifier clauses of type <xref:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause>.</span></span> <span data-ttu-id="3ab22-157">如果无法创建类型的密钥标识符子句 <xref:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause> ， <xref:System.NotSupportedException> 则会引发。</span><span class="sxs-lookup"><span data-stu-id="3ab22-157">If a key identifier clause of type <xref:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause> cannot be created, a <xref:System.NotSupportedException> is thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.IdentityModel.Tokens.SecurityToken.CanCreateKeyIdentifierClause``1" />
        <altmember cref="T:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause" />
      </Docs>
    </Member>
    <Member MemberName="Id">
      <MemberSignature Language="C#" Value="public abstract string Id { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Id" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SecurityToken.Id" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Id As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ Id { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Id : string" Usage="System.IdentityModel.Tokens.SecurityToken.Id" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3ab22-158">获取安全令牌的唯一标识符。</span><span class="sxs-lookup"><span data-stu-id="3ab22-158">Gets a unique identifier of the security token.</span></span></summary>
        <value><span data-ttu-id="3ab22-159">安全令牌的唯一标识符。</span><span class="sxs-lookup"><span data-stu-id="3ab22-159">The unique identifier of the security token.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3ab22-160">通常，当安全令牌序列化为 XML 时，安全令牌的 `Id` 属性 (Attribute) 设置为 <xref:System.IdentityModel.Tokens.SecurityToken.Id%2A> 属性 (Property) 的值。</span><span class="sxs-lookup"><span data-stu-id="3ab22-160">Typically, when a security token is serialized into XML, the `Id` attribute for the security token is set to the value of the <xref:System.IdentityModel.Tokens.SecurityToken.Id%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3ab22-161">本主题中使用的代码示例 <xref:System.IdentityModel.Tokens.SecurityToken> 摘自 `Custom Token` 示例。</span><span class="sxs-lookup"><span data-stu-id="3ab22-161">The code examples that are used in the <xref:System.IdentityModel.Tokens.SecurityToken> topics are taken from the `Custom Token` sample.</span></span> <span data-ttu-id="3ab22-162">此示例提供了自定义类，这些类可用于处理简单 Web 标记 (SWT) 。</span><span class="sxs-lookup"><span data-stu-id="3ab22-162">This sample provides custom classes that enable processing of Simple Web Tokens (SWT).</span></span> <span data-ttu-id="3ab22-163">它包含 `SimpleWebToken` 类和 `SimpleWebTokenHandler` 类以及支持 SWT 标记的其他类的实现。</span><span class="sxs-lookup"><span data-stu-id="3ab22-163">It includes an implementation of a `SimpleWebToken` class and a `SimpleWebTokenHandler` class, as well as other classes that support SWT tokens.</span></span> <span data-ttu-id="3ab22-164">有关此示例和可供 WIF 使用的其他示例的信息，请参阅 [WIF 代码示例索引](https://docs.microsoft.com/previous-versions/dotnet/framework/security/wif-code-sample-index)。</span><span class="sxs-lookup"><span data-stu-id="3ab22-164">For information about this sample and other samples available for WIF and about where to download them, see [WIF Code Sample Index](https://docs.microsoft.com/previous-versions/dotnet/framework/security/wif-code-sample-index).</span></span> <span data-ttu-id="3ab22-165">下面的代码演示了属性的重写 <xref:System.IdentityModel.Tokens.SecurityToken.Id%2A> 。</span><span class="sxs-lookup"><span data-stu-id="3ab22-165">The following code shows the override of the <xref:System.IdentityModel.Tokens.SecurityToken.Id%2A> property.</span></span>  
  
 [!code-csharp[WifCustomTokenST#1](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokenst/cs/simplewebtoken/simplewebtokenconstants.cs#1)]  
[!code-csharp[WifCustomTokenST#3](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokenst/cs/simplewebtoken/simplewebtoken.cs#3)]  
[!code-csharp[WifCustomTokenST#4](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokenst/cs/simplewebtoken/simplewebtoken.cs#4)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="3ab22-166">必须重写 <see cref="P:System.IdentityModel.Tokens.SecurityToken.Id" /> 属性。</span><span class="sxs-lookup"><span data-stu-id="3ab22-166">You must override the <see cref="P:System.IdentityModel.Tokens.SecurityToken.Id" /> property.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="MatchesKeyIdentifierClause">
      <MemberSignature Language="C#" Value="public virtual bool MatchesKeyIdentifierClause (System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause);" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MatchesKeyIdentifierClause(class System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause) cil managed" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityToken.MatchesKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function MatchesKeyIdentifierClause (keyIdentifierClause As SecurityKeyIdentifierClause) As Boolean" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool MatchesKeyIdentifierClause(System::IdentityModel::Tokens::SecurityKeyIdentifierClause ^ keyIdentifierClause);" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="F#" Value="abstract member MatchesKeyIdentifierClause : System.IdentityModel.Tokens.SecurityKeyIdentifierClause -&gt; bool&#xA;override this.MatchesKeyIdentifierClause : System.IdentityModel.Tokens.SecurityKeyIdentifierClause -&gt; bool" Usage="securityToken.MatchesKeyIdentifierClause keyIdentifierClause" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C#" Value="public virtual bool MatchesKeyIdentifierClause (System.IdentityModel.Tokens.SecurityKeyIdentifierClause skiClause);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MatchesKeyIdentifierClause(class System.IdentityModel.Tokens.SecurityKeyIdentifierClause skiClause) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function MatchesKeyIdentifierClause (skiClause As SecurityKeyIdentifierClause) As Boolean" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool MatchesKeyIdentifierClause(System::IdentityModel::Tokens::SecurityKeyIdentifierClause ^ skiClause);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="abstract member MatchesKeyIdentifierClause : System.IdentityModel.Tokens.SecurityKeyIdentifierClause -&gt; bool&#xA;override this.MatchesKeyIdentifierClause : System.IdentityModel.Tokens.SecurityKeyIdentifierClause -&gt; bool" Usage="securityToken.MatchesKeyIdentifierClause skiClause" FrameworkAlternate="xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyIdentifierClause" Type="System.IdentityModel.Tokens.SecurityKeyIdentifierClause" Index="0" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="skiClause" Type="System.IdentityModel.Tokens.SecurityKeyIdentifierClause" Index="0" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="keyIdentifierClause"><span data-ttu-id="3ab22-167">要与此实例进行比较的 <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />。</span><span class="sxs-lookup"><span data-stu-id="3ab22-167">A <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> to compare to this instance.</span></span></param>
        <param name="skiClause"><span data-ttu-id="3ab22-168">要与此实例进行比较的 <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />。</span><span class="sxs-lookup"><span data-stu-id="3ab22-168">A <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> to compare to this instance.</span></span></param>
        <summary><span data-ttu-id="3ab22-169">返回一个值，该值指示此实例的密钥标识符能否解析为指定的密钥标识符。</span><span class="sxs-lookup"><span data-stu-id="3ab22-169">Returns a value that indicates whether the key identifier for this instance can be resolved to the specified key identifier.</span></span></summary>
        <returns><span data-ttu-id="3ab22-170">如果 <see langword="true" /> 为 <paramref name="keyIdentifierClause" />，并且具有与 <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> 属性相同的唯一标识符，则为 <see cref="P:System.IdentityModel.Tokens.SecurityToken.Id" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="3ab22-170"><see langword="true" /> if <paramref name="keyIdentifierClause" /> is a <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> and it has the same unique identifier as the <see cref="P:System.IdentityModel.Tokens.SecurityToken.Id" /> property; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3ab22-171">默认实现支持类型为的密钥标识符子句 <xref:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause></span><span class="sxs-lookup"><span data-stu-id="3ab22-171">The default implementation supports key identifier clauses of type <xref:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause></span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause" />
      </Docs>
    </Member>
    <Member MemberName="ResolveKeyIdentifierClause">
      <MemberSignature Language="C#" Value="public virtual System.IdentityModel.Tokens.SecurityKey ResolveKeyIdentifierClause (System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause);" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IdentityModel.Tokens.SecurityKey ResolveKeyIdentifierClause(class System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause) cil managed" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityToken.ResolveKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ResolveKeyIdentifierClause (keyIdentifierClause As SecurityKeyIdentifierClause) As SecurityKey" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IdentityModel::Tokens::SecurityKey ^ ResolveKeyIdentifierClause(System::IdentityModel::Tokens::SecurityKeyIdentifierClause ^ keyIdentifierClause);" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="F#" Value="abstract member ResolveKeyIdentifierClause : System.IdentityModel.Tokens.SecurityKeyIdentifierClause -&gt; System.IdentityModel.Tokens.SecurityKey&#xA;override this.ResolveKeyIdentifierClause : System.IdentityModel.Tokens.SecurityKeyIdentifierClause -&gt; System.IdentityModel.Tokens.SecurityKey" Usage="securityToken.ResolveKeyIdentifierClause keyIdentifierClause" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C#" Value="public virtual System.IdentityModel.Tokens.SecurityKey ResolveKeyIdentifierClause (System.IdentityModel.Tokens.SecurityKeyIdentifierClause skiClause);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IdentityModel.Tokens.SecurityKey ResolveKeyIdentifierClause(class System.IdentityModel.Tokens.SecurityKeyIdentifierClause skiClause) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ResolveKeyIdentifierClause (skiClause As SecurityKeyIdentifierClause) As SecurityKey" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IdentityModel::Tokens::SecurityKey ^ ResolveKeyIdentifierClause(System::IdentityModel::Tokens::SecurityKeyIdentifierClause ^ skiClause);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="abstract member ResolveKeyIdentifierClause : System.IdentityModel.Tokens.SecurityKeyIdentifierClause -&gt; System.IdentityModel.Tokens.SecurityKey&#xA;override this.ResolveKeyIdentifierClause : System.IdentityModel.Tokens.SecurityKeyIdentifierClause -&gt; System.IdentityModel.Tokens.SecurityKey" Usage="securityToken.ResolveKeyIdentifierClause skiClause" FrameworkAlternate="xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityKey</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyIdentifierClause" Type="System.IdentityModel.Tokens.SecurityKeyIdentifierClause" Index="0" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="skiClause" Type="System.IdentityModel.Tokens.SecurityKeyIdentifierClause" Index="0" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="keyIdentifierClause"><span data-ttu-id="3ab22-172">要为其获取密钥的 <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />。</span><span class="sxs-lookup"><span data-stu-id="3ab22-172">A <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> to get the key for.</span></span></param>
        <param name="skiClause"><span data-ttu-id="3ab22-173">要为其获取密钥的 <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />。</span><span class="sxs-lookup"><span data-stu-id="3ab22-173">A <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> to get the key for.</span></span></param>
        <summary><span data-ttu-id="3ab22-174">为指定的密钥标识符子句获取密钥。</span><span class="sxs-lookup"><span data-stu-id="3ab22-174">Gets the key for the specified key identifier clause.</span></span></summary>
        <returns><span data-ttu-id="3ab22-175">一个表示密钥的 <see cref="T:System.IdentityModel.Tokens.SecurityKey" />。</span><span class="sxs-lookup"><span data-stu-id="3ab22-175">A <see cref="T:System.IdentityModel.Tokens.SecurityKey" /> that represents the key.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3ab22-176"><xref:System.IdentityModel.Tokens.SecurityToken.ResolveKeyIdentifierClause%2A> 方法调用 <xref:System.IdentityModel.Tokens.SecurityToken.MatchesKeyIdentifierClause%2A> 可首先确定指定的密钥标识符子句是否与此实例相同。</span><span class="sxs-lookup"><span data-stu-id="3ab22-176">The <xref:System.IdentityModel.Tokens.SecurityToken.ResolveKeyIdentifierClause%2A> method calls the <xref:System.IdentityModel.Tokens.SecurityToken.MatchesKeyIdentifierClause%2A> to first determine whether the specified key identifier clause is the same as this instance.</span></span>  
  
 <span data-ttu-id="3ab22-177"><xref:System.IdentityModel.Tokens.SecurityToken.SecurityKeys%2A>如果集合不为空且返回，则默认实现将返回集合的第一个元素 <xref:System.IdentityModel.Tokens.SecurityToken.MatchesKeyIdentifierClause%2A> `true` ; 否则返回 `null` 。</span><span class="sxs-lookup"><span data-stu-id="3ab22-177">The default implementation returns the first element of the <xref:System.IdentityModel.Tokens.SecurityToken.SecurityKeys%2A> collection if the collection is not empty and if <xref:System.IdentityModel.Tokens.SecurityToken.MatchesKeyIdentifierClause%2A> returns `true`; otherwise, it returns `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="3ab22-178">当从 <see cref="T:System.IdentityModel.Tokens.SecurityToken" /> 继承并实现 <see cref="M:System.IdentityModel.Tokens.SecurityToken.ResolveKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" /> 方法，且无法解析 <paramref name="keyIdentifierClause" /> 时，返回 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="3ab22-178">When you inherit from <see cref="T:System.IdentityModel.Tokens.SecurityToken" />, and implement the <see cref="M:System.IdentityModel.Tokens.SecurityToken.ResolveKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" /> method and <paramref name="keyIdentifierClause" /> cannot be resolved, return <see langword="null" />.</span></span> <span data-ttu-id="3ab22-179">不应从 <see cref="M:System.IdentityModel.Tokens.SecurityToken.ResolveKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" /> 方法引发异常。</span><span class="sxs-lookup"><span data-stu-id="3ab22-179">An exception should not be thrown from the <see cref="M:System.IdentityModel.Tokens.SecurityToken.ResolveKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" /> method.</span></span></para></block>
        <altmember cref="M:System.IdentityModel.Tokens.SecurityToken.MatchesKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
        <altmember cref="T:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause" />
      </Docs>
    </Member>
    <Member MemberName="SecurityKeys">
      <MemberSignature Language="C#" Value="public abstract System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.Tokens.SecurityKey&gt; SecurityKeys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.IdentityModel.Tokens.SecurityKey&gt; SecurityKeys" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SecurityToken.SecurityKeys" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property SecurityKeys As ReadOnlyCollection(Of SecurityKey)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Collections::ObjectModel::ReadOnlyCollection&lt;System::IdentityModel::Tokens::SecurityKey ^&gt; ^ SecurityKeys { System::Collections::ObjectModel::ReadOnlyCollection&lt;System::IdentityModel::Tokens::SecurityKey ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SecurityKeys : System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.Tokens.SecurityKey&gt;" Usage="System.IdentityModel.Tokens.SecurityToken.SecurityKeys" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.Tokens.SecurityKey&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3ab22-180">获取与安全令牌相关联的加密密钥。</span><span class="sxs-lookup"><span data-stu-id="3ab22-180">Gets the cryptographic keys associated with the security token.</span></span></summary>
        <value><span data-ttu-id="3ab22-181">一个类型为 <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> 的 <see cref="T:System.IdentityModel.Tokens.SecurityKey" />，包含与安全令牌相关联的密钥集。</span><span class="sxs-lookup"><span data-stu-id="3ab22-181">A <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> of type <see cref="T:System.IdentityModel.Tokens.SecurityKey" /> that contains the set of keys associated with the security token.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3ab22-182">使用 <xref:System.IdentityModel.Tokens.SamlSecurityToken.SecurityKeys%2A> 属性设置此安全令牌的加密密钥，以保护令牌或 SOAP 消息。</span><span class="sxs-lookup"><span data-stu-id="3ab22-182">Use the <xref:System.IdentityModel.Tokens.SamlSecurityToken.SecurityKeys%2A> property to set the cryptographic keys for this security token to protect tokens or a SOAP message.</span></span> <span data-ttu-id="3ab22-183">可以使用这些密钥来对令牌或 SOAP 消息进行数字签名或加密。</span><span class="sxs-lookup"><span data-stu-id="3ab22-183">The keys can be used, among other things, to digitally sign or encrypt either tokens or SOAP messages.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3ab22-184">本主题中使用的代码示例 <xref:System.IdentityModel.Tokens.SecurityToken> 摘自 `Custom Token` 示例。</span><span class="sxs-lookup"><span data-stu-id="3ab22-184">The code examples that are used in the <xref:System.IdentityModel.Tokens.SecurityToken> topics are taken from the `Custom Token` sample.</span></span> <span data-ttu-id="3ab22-185">此示例提供了自定义类，这些类可用于处理简单 Web 标记 (SWT) 。</span><span class="sxs-lookup"><span data-stu-id="3ab22-185">This sample provides custom classes that enable processing of Simple Web Tokens (SWT).</span></span> <span data-ttu-id="3ab22-186">它包含 `SimpleWebToken` 类和 `SimpleWebTokenHandler` 类以及支持 SWT 标记的其他类的实现。</span><span class="sxs-lookup"><span data-stu-id="3ab22-186">It includes an implementation of a `SimpleWebToken` class and a `SimpleWebTokenHandler` class, as well as other classes that support SWT tokens.</span></span> <span data-ttu-id="3ab22-187">有关此示例和可供 WIF 使用的其他示例的信息，请参阅 [WIF 代码示例索引](https://docs.microsoft.com/previous-versions/dotnet/framework/security/wif-code-sample-index)。</span><span class="sxs-lookup"><span data-stu-id="3ab22-187">For information about this sample and other samples available for WIF and about where to download them, see [WIF Code Sample Index](https://docs.microsoft.com/previous-versions/dotnet/framework/security/wif-code-sample-index).</span></span> <span data-ttu-id="3ab22-188">下面的代码演示了属性的重写 <xref:System.IdentityModel.Tokens.SecurityToken.SecurityKeys%2A> 。</span><span class="sxs-lookup"><span data-stu-id="3ab22-188">The following code shows the override of the <xref:System.IdentityModel.Tokens.SecurityToken.SecurityKeys%2A> property.</span></span>  
  
 [!code-csharp[WifCustomTokenST#1](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokenst/cs/simplewebtoken/simplewebtokenconstants.cs#1)]  
[!code-csharp[WifCustomTokenST#3](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokenst/cs/simplewebtoken/simplewebtoken.cs#3)]  
[!code-csharp[WifCustomTokenST#5](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokenst/cs/simplewebtoken/simplewebtoken.cs#5)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="3ab22-189">必须重写 <see cref="P:System.IdentityModel.Tokens.SecurityToken.SecurityKeys" /> 属性。</span><span class="sxs-lookup"><span data-stu-id="3ab22-189">You must override the <see cref="P:System.IdentityModel.Tokens.SecurityToken.SecurityKeys" /> property.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="ValidFrom">
      <MemberSignature Language="C#" Value="public abstract DateTime ValidFrom { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime ValidFrom" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SecurityToken.ValidFrom" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property ValidFrom As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property DateTime ValidFrom { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.ValidFrom : DateTime" Usage="System.IdentityModel.Tokens.SecurityToken.ValidFrom" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3ab22-190">获取此安全令牌有效的最初时刻。</span><span class="sxs-lookup"><span data-stu-id="3ab22-190">Gets the first instant in time at which this security token is valid.</span></span></summary>
        <value><span data-ttu-id="3ab22-191">一个 <see cref="T:System.DateTime" />，表示此安全令牌有效的最初时刻。</span><span class="sxs-lookup"><span data-stu-id="3ab22-191">A <see cref="T:System.DateTime" /> that represents the instant in time at which this security token is first valid.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3ab22-192">使用 <xref:System.IdentityModel.Tokens.SecurityToken.ValidFrom%2A> 和 <xref:System.IdentityModel.Tokens.SecurityToken.ValidTo%2A> 属性可确定 <xref:System.IdentityModel.Tokens.SecurityToken> 令牌有效的时间段。</span><span class="sxs-lookup"><span data-stu-id="3ab22-192">Use the <xref:System.IdentityModel.Tokens.SecurityToken.ValidFrom%2A> and <xref:System.IdentityModel.Tokens.SecurityToken.ValidTo%2A> properties to determine the time period in which a <xref:System.IdentityModel.Tokens.SecurityToken> token is valid.</span></span> <span data-ttu-id="3ab22-193"><xref:System.IdentityModel.Tokens.SecurityToken.ValidFrom%2A> 和 <xref:System.IdentityModel.Tokens.SecurityToken.ValidTo%2A> 属性分别表示此安全令牌有效的最初时刻和最后时刻。</span><span class="sxs-lookup"><span data-stu-id="3ab22-193">The <xref:System.IdentityModel.Tokens.SecurityToken.ValidFrom%2A> and <xref:System.IdentityModel.Tokens.SecurityToken.ValidTo%2A> properties represent the first and last instants in time in which the security token is valid, respectively.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3ab22-194">本主题中使用的代码示例 <xref:System.IdentityModel.Tokens.SecurityToken> 摘自 `Custom Token` 示例。</span><span class="sxs-lookup"><span data-stu-id="3ab22-194">The code examples that are used in the <xref:System.IdentityModel.Tokens.SecurityToken> topics are taken from the `Custom Token` sample.</span></span> <span data-ttu-id="3ab22-195">此示例提供了自定义类，这些类可用于处理简单 Web 标记 (SWT) 。</span><span class="sxs-lookup"><span data-stu-id="3ab22-195">This sample provides custom classes that enable processing of Simple Web Tokens (SWT).</span></span> <span data-ttu-id="3ab22-196">它包含 `SimpleWebToken` 类和 `SimpleWebTokenHandler` 类以及支持 SWT 标记的其他类的实现。</span><span class="sxs-lookup"><span data-stu-id="3ab22-196">It includes an implementation of a `SimpleWebToken` class and a `SimpleWebTokenHandler` class, as well as other classes that support SWT tokens.</span></span> <span data-ttu-id="3ab22-197">有关此示例和可供 WIF 使用的其他示例的信息，请参阅 [WIF 代码示例索引](https://docs.microsoft.com/previous-versions/dotnet/framework/security/wif-code-sample-index)。</span><span class="sxs-lookup"><span data-stu-id="3ab22-197">For information about this sample and other samples available for WIF and about where to download them, see [WIF Code Sample Index](https://docs.microsoft.com/previous-versions/dotnet/framework/security/wif-code-sample-index).</span></span> <span data-ttu-id="3ab22-198">下面的代码演示了属性的重写 <xref:System.IdentityModel.Tokens.SecurityToken.ValidFrom%2A> 。</span><span class="sxs-lookup"><span data-stu-id="3ab22-198">The following code shows the override of the <xref:System.IdentityModel.Tokens.SecurityToken.ValidFrom%2A> property.</span></span>  
  
 [!code-csharp[WifCustomTokenST#1](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokenst/cs/simplewebtoken/simplewebtokenconstants.cs#1)]  
[!code-csharp[WifCustomTokenST#3](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokenst/cs/simplewebtoken/simplewebtoken.cs#3)]  
[!code-csharp[WifCustomTokenST#6](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokenst/cs/simplewebtoken/simplewebtoken.cs#6)]  
[!code-csharp[WifCustomTokenST#8](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokenst/cs/simplewebtoken/simplewebtoken.cs#8)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="3ab22-199">必须重写 <see cref="P:System.IdentityModel.Tokens.SecurityToken.ValidFrom" /> 属性。</span><span class="sxs-lookup"><span data-stu-id="3ab22-199">You must override the <see cref="P:System.IdentityModel.Tokens.SecurityToken.ValidFrom" /> property.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="ValidTo">
      <MemberSignature Language="C#" Value="public abstract DateTime ValidTo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime ValidTo" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SecurityToken.ValidTo" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property ValidTo As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property DateTime ValidTo { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.ValidTo : DateTime" Usage="System.IdentityModel.Tokens.SecurityToken.ValidTo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3ab22-200">获取此安全令牌有效的最后时刻。</span><span class="sxs-lookup"><span data-stu-id="3ab22-200">Gets the last instant in time at which this security token is valid.</span></span></summary>
        <value><span data-ttu-id="3ab22-201">一个 <see cref="T:System.DateTime" />，表示此安全令牌有效的最后时刻。</span><span class="sxs-lookup"><span data-stu-id="3ab22-201">A <see cref="T:System.DateTime" /> that represents the last instant in time at which this security token is valid.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3ab22-202">使用 <xref:System.IdentityModel.Tokens.SecurityToken.ValidFrom%2A> 和 <xref:System.IdentityModel.Tokens.SecurityToken.ValidTo%2A> 属性可确定 <xref:System.IdentityModel.Tokens.SecurityToken> 令牌有效的时间段。</span><span class="sxs-lookup"><span data-stu-id="3ab22-202">Use the <xref:System.IdentityModel.Tokens.SecurityToken.ValidFrom%2A> and <xref:System.IdentityModel.Tokens.SecurityToken.ValidTo%2A> properties to determine the time period in which a <xref:System.IdentityModel.Tokens.SecurityToken> token is valid.</span></span> <span data-ttu-id="3ab22-203"><xref:System.IdentityModel.Tokens.SecurityToken.ValidFrom%2A> 和 <xref:System.IdentityModel.Tokens.SecurityToken.ValidTo%2A> 属性分别表示此安全令牌有效的最初时刻和最后时刻。</span><span class="sxs-lookup"><span data-stu-id="3ab22-203">The <xref:System.IdentityModel.Tokens.SecurityToken.ValidFrom%2A> and <xref:System.IdentityModel.Tokens.SecurityToken.ValidTo%2A> properties represent the first and last instants in time in which the security token is valid, respectively.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3ab22-204">本主题中使用的代码示例 <xref:System.IdentityModel.Tokens.SecurityToken> 摘自 `Custom Token` 示例。</span><span class="sxs-lookup"><span data-stu-id="3ab22-204">The code examples that are used in the <xref:System.IdentityModel.Tokens.SecurityToken> topics are taken from the `Custom Token` sample.</span></span> <span data-ttu-id="3ab22-205">此示例提供了自定义类，这些类可用于处理简单 Web 标记 (SWT) 。</span><span class="sxs-lookup"><span data-stu-id="3ab22-205">This sample provides custom classes that enable processing of Simple Web Tokens (SWT).</span></span> <span data-ttu-id="3ab22-206">它包含 `SimpleWebToken` 类和 `SimpleWebTokenHandler` 类以及支持 SWT 标记的其他类的实现。</span><span class="sxs-lookup"><span data-stu-id="3ab22-206">It includes an implementation of a `SimpleWebToken` class and a `SimpleWebTokenHandler` class, as well as other classes that support SWT tokens.</span></span> <span data-ttu-id="3ab22-207">有关此示例和可供 WIF 使用的其他示例的信息，请参阅 [WIF 代码示例索引](https://docs.microsoft.com/previous-versions/dotnet/framework/security/wif-code-sample-index)。</span><span class="sxs-lookup"><span data-stu-id="3ab22-207">For information about this sample and other samples available for WIF and about where to download them, see [WIF Code Sample Index](https://docs.microsoft.com/previous-versions/dotnet/framework/security/wif-code-sample-index).</span></span> <span data-ttu-id="3ab22-208">下面的代码演示了属性的重写 <xref:System.IdentityModel.Tokens.SecurityToken.ValidTo%2A> 。</span><span class="sxs-lookup"><span data-stu-id="3ab22-208">The following code shows the override of the <xref:System.IdentityModel.Tokens.SecurityToken.ValidTo%2A> property.</span></span>  
  
 [!code-csharp[WifCustomTokenST#1](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokenst/cs/simplewebtoken/simplewebtokenconstants.cs#1)]  
[!code-csharp[WifCustomTokenST#3](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokenst/cs/simplewebtoken/simplewebtoken.cs#3)]  
[!code-csharp[WifCustomTokenST#7](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokenst/cs/simplewebtoken/simplewebtoken.cs#7)]  
[!code-csharp[WifCustomTokenST#8](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokenst/cs/simplewebtoken/simplewebtoken.cs#8)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="3ab22-209">必须重写 <see cref="P:System.IdentityModel.Tokens.SecurityToken.ValidTo" /> 属性。</span><span class="sxs-lookup"><span data-stu-id="3ab22-209">You must override the <see cref="P:System.IdentityModel.Tokens.SecurityToken.ValidTo" /> property.</span></span></para></block>
      </Docs>
    </Member>
  </Members>
</Type>
