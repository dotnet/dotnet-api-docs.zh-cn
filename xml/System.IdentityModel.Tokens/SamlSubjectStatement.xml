<Type Name="SamlSubjectStatement" FullName="System.IdentityModel.Tokens.SamlSubjectStatement">
  <Metadata><Meta Name="ms.openlocfilehash" Value="3ac56cde420ee88ac2be6304184eef89614e3e8d" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89894757" /></Metadata><TypeSignature Language="C#" Value="public abstract class SamlSubjectStatement : System.IdentityModel.Tokens.SamlStatement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit SamlSubjectStatement extends System.IdentityModel.Tokens.SamlStatement" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.Tokens.SamlSubjectStatement" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class SamlSubjectStatement&#xA;Inherits SamlStatement" />
  <TypeSignature Language="C++ CLI" Value="public ref class SamlSubjectStatement abstract : System::IdentityModel::Tokens::SamlStatement" />
  <TypeSignature Language="F#" Value="type SamlSubjectStatement = class&#xA;    inherit SamlStatement" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.IdentityModel.Tokens.SamlStatement</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>表示 <see cref="T:System.IdentityModel.Tokens.SamlSecurityToken" /> 安全令牌的声明。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IdentityModel.Tokens.SamlSecurityToken> 安全令牌使用 SAML 断言指定其声明，这些断言可指定安全令牌的主题。 SAML 断言中的声明由 SAML 语句表示。 SAML 规范定义了一组 SAML 语句类型，其中一个类型为 <xref:System.IdentityModel.Tokens.SamlSubjectStatement>。 <xref:System.IdentityModel.Tokens.SamlSubjectStatement> 断言作为 <xref:System.IdentityModel.Tokens.SamlSecurityToken> 安全令牌的主题的主体。 该主体在 <xref:System.IdentityModel.Tokens.SamlSubjectStatement.SamlSubject%2A> 属性中指定。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>初始化 <see cref="T:System.IdentityModel.Tokens.SamlSubjectStatement" /> 类的新实例。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SamlSubjectStatement ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SamlSubjectStatement.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; SamlSubjectStatement();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.IdentityModel.Tokens.SamlSubjectStatement" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此构造函数初始化了 <xref:System.IdentityModel.Tokens.SamlSubjectStatement.IsReadOnly%2A> 属性。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SamlSubjectStatement (System.IdentityModel.Tokens.SamlSubject samlSubject);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.IdentityModel.Tokens.SamlSubject samlSubject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SamlSubjectStatement.#ctor(System.IdentityModel.Tokens.SamlSubject)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (samlSubject As SamlSubject)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; SamlSubjectStatement(System::IdentityModel::Tokens::SamlSubject ^ samlSubject);" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Tokens.SamlSubjectStatement : System.IdentityModel.Tokens.SamlSubject -&gt; System.IdentityModel.Tokens.SamlSubjectStatement" Usage="new System.IdentityModel.Tokens.SamlSubjectStatement samlSubject" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="samlSubject" Type="System.IdentityModel.Tokens.SamlSubject" />
      </Parameters>
      <Docs>
        <param name="samlSubject">一个 <see cref="T:System.IdentityModel.Tokens.SamlSubject" />，它标识 <see cref="T:System.IdentityModel.Tokens.SamlSecurityToken" /> 安全令牌的主题。 设置 <see cref="P:System.IdentityModel.Tokens.SamlSubjectStatement.SamlSubject" /> 属性。</param>
        <summary>使用指定的主题初始化 <see cref="T:System.IdentityModel.Tokens.SamlSubjectStatement" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此构造函数初始化了 <xref:System.IdentityModel.Tokens.SamlSubjectStatement.IsReadOnly%2A> 属性。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddClaimsToList">
      <MemberSignature Language="C#" Value="protected abstract void AddClaimsToList (System.Collections.Generic.IList&lt;System.IdentityModel.Claims.Claim&gt; claims);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void AddClaimsToList(class System.Collections.Generic.IList`1&lt;class System.IdentityModel.Claims.Claim&gt; claims) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SamlSubjectStatement.AddClaimsToList(System.Collections.Generic.IList{System.IdentityModel.Claims.Claim})" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub AddClaimsToList (claims As IList(Of Claim))" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void AddClaimsToList(System::Collections::Generic::IList&lt;System::IdentityModel::Claims::Claim ^&gt; ^ claims);" />
      <MemberSignature Language="F#" Value="abstract member AddClaimsToList : System.Collections.Generic.IList&lt;System.IdentityModel.Claims.Claim&gt; -&gt; unit" Usage="samlSubjectStatement.AddClaimsToList claims" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="claims" Type="System.Collections.Generic.IList&lt;System.IdentityModel.Claims.Claim&gt;" />
      </Parameters>
      <Docs>
        <param name="claims">一个类型为 <see cref="T:System.Collections.Generic.IList`1" /> 的 <see cref="T:System.IdentityModel.Claims.Claim" />，包含添加操作的目标声明集。</param>
        <summary>根据此实例的属性将声明添加到指定的声明集合。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IdentityModel.Tokens.SamlSubjectStatement.AddClaimsToList%2A> 方法根据 `claims` 属性将声明添加到 <xref:System.IdentityModel.Tokens.SamlSubjectStatement.SamlSubject%2A> 参数。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="claims" /> 为 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="CreatePolicy">
      <MemberSignature Language="C#" Value="public override System.IdentityModel.Policy.IAuthorizationPolicy CreatePolicy (System.IdentityModel.Claims.ClaimSet issuer, System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator samlAuthenticator);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IdentityModel.Policy.IAuthorizationPolicy CreatePolicy(class System.IdentityModel.Claims.ClaimSet issuer, class System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator samlAuthenticator) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SamlSubjectStatement.CreatePolicy(System.IdentityModel.Claims.ClaimSet,System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CreatePolicy (issuer As ClaimSet, samlAuthenticator As SamlSecurityTokenAuthenticator) As IAuthorizationPolicy" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::IdentityModel::Policy::IAuthorizationPolicy ^ CreatePolicy(System::IdentityModel::Claims::ClaimSet ^ issuer, System::IdentityModel::Selectors::SamlSecurityTokenAuthenticator ^ samlAuthenticator);" />
      <MemberSignature Language="F#" Value="override this.CreatePolicy : System.IdentityModel.Claims.ClaimSet * System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator -&gt; System.IdentityModel.Policy.IAuthorizationPolicy" Usage="samlSubjectStatement.CreatePolicy (issuer, samlAuthenticator)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Policy.IAuthorizationPolicy</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="issuer" Type="System.IdentityModel.Claims.ClaimSet" />
        <Parameter Name="samlAuthenticator" Type="System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator" />
      </Parameters>
      <Docs>
        <param name="issuer">一个 <see cref="T:System.IdentityModel.Claims.ClaimSet" />，表示 <see cref="T:System.IdentityModel.Tokens.SamlSecurityToken" /> 安全令牌的颁发者。</param>
        <param name="samlAuthenticator">一个用来对 <see cref="T:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator" /> 安全令牌进行身份验证的 <see cref="T:System.IdentityModel.Tokens.SamlSecurityToken" />。</param>
        <summary>为 <see cref="T:System.IdentityModel.Tokens.SamlSecurityToken" /> 安全令牌创建授权策略。</summary>
        <returns>一个 <see cref="T:System.IdentityModel.Policy.IAuthorizationPolicy" />，表示 <see cref="T:System.IdentityModel.Tokens.SamlSecurityToken" /> 安全令牌的授权策略。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用 <xref:System.IdentityModel.Tokens.SamlSubjectStatement.CreatePolicy%2A> 方法可获取 <xref:System.IdentityModel.Tokens.SamlSecurityToken> 安全令牌的授权策略。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public override bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SamlSubjectStatement.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="System.IdentityModel.Tokens.SamlSubjectStatement.IsReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个值，该值指示此实例的属性是否是只读的。</summary>
        <value>如果此实例的属性是只读的，则为 <see langword="true" />；否则为 <see langword="false" />。 默认值为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 若要将 <xref:System.IdentityModel.Tokens.SamlSubjectStatement> 类的此实例设为只读，请调用 <xref:System.IdentityModel.Tokens.SamlSubjectStatement.MakeReadOnly%2A> 方法。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MakeReadOnly">
      <MemberSignature Language="C#" Value="public override void MakeReadOnly ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void MakeReadOnly() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SamlSubjectStatement.MakeReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub MakeReadOnly ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void MakeReadOnly();" />
      <MemberSignature Language="F#" Value="override this.MakeReadOnly : unit -&gt; unit" Usage="samlSubjectStatement.MakeReadOnly " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>将此实例设置为只读的。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 调用 <xref:System.IdentityModel.Tokens.SamlSubjectStatement.MakeReadOnly%2A> 方法时，<xref:System.IdentityModel.Tokens.SamlSubjectStatement.IsReadOnly%2A> 属性被设置为 `true`，并且不能再设置此实例的属性。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SamlSubject">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Tokens.SamlSubject SamlSubject { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IdentityModel.Tokens.SamlSubject SamlSubject" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SamlSubjectStatement.SamlSubject" />
      <MemberSignature Language="VB.NET" Value="Public Property SamlSubject As SamlSubject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IdentityModel::Tokens::SamlSubject ^ SamlSubject { System::IdentityModel::Tokens::SamlSubject ^ get(); void set(System::IdentityModel::Tokens::SamlSubject ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SamlSubject : System.IdentityModel.Tokens.SamlSubject with get, set" Usage="System.IdentityModel.Tokens.SamlSubjectStatement.SamlSubject" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SamlSubject</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置 <see cref="T:System.IdentityModel.Tokens.SamlSecurityToken" /> 安全令牌的主题。</summary>
        <value>一个 <see cref="T:System.IdentityModel.Tokens.SamlSubject" />，它标识 <see cref="T:System.IdentityModel.Tokens.SamlSecurityToken" /> 安全令牌的主题。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IdentityModel.Tokens.SamlSubjectStatement.SamlSubject%2A> 属性与 OASIS SAML 断言和协议规范中定义的 `<saml:Subject>` 元素相对应。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">设置了 <see cref="P:System.IdentityModel.Tokens.SamlSubjectStatement.SamlSubject" /> 属性，而 <see cref="P:System.IdentityModel.Tokens.SamlSubjectStatement.IsReadOnly" /> 属性为 <see langword="true" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="SetSubject">
      <MemberSignature Language="C#" Value="protected void SetSubject (System.IdentityModel.Tokens.SamlSubject samlSubject);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SetSubject(class System.IdentityModel.Tokens.SamlSubject samlSubject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SamlSubjectStatement.SetSubject(System.IdentityModel.Tokens.SamlSubject)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub SetSubject (samlSubject As SamlSubject)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void SetSubject(System::IdentityModel::Tokens::SamlSubject ^ samlSubject);" />
      <MemberSignature Language="F#" Value="member this.SetSubject : System.IdentityModel.Tokens.SamlSubject -&gt; unit" Usage="samlSubjectStatement.SetSubject samlSubject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="samlSubject" Type="System.IdentityModel.Tokens.SamlSubject" />
      </Parameters>
      <Docs>
        <param name="samlSubject">一个 <see cref="T:System.IdentityModel.Tokens.SamlSubject" />，它标识 <see cref="T:System.IdentityModel.Tokens.SamlSecurityToken" /> 安全令牌的主题。</param>
        <summary>设置 <see cref="T:System.IdentityModel.Tokens.SamlSecurityToken" /> 安全令牌的主题。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 与 <xref:System.IdentityModel.Tokens.SamlSubjectStatement.SamlSubject%2A> 属性不同，当 <xref:System.IdentityModel.Tokens.SamlSubjectStatement.SetSubject%2A> 属性为 <xref:System.IdentityModel.Tokens.SamlSecurityToken> 时，可以调用 <xref:System.IdentityModel.Tokens.SamlSubjectStatement.IsReadOnly%2A> 方法来设置 `true` 安全令牌的主题。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="samlSubject" /> 为 <see langword="null" />。</exception>
      </Docs>
    </Member>
  </Members>
</Type>
