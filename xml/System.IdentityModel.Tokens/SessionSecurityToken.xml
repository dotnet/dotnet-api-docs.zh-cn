<Type Name="SessionSecurityToken" FullName="System.IdentityModel.Tokens.SessionSecurityToken">
  <Metadata><Meta Name="ms.openlocfilehash" Value="0cf6e610d277c54c85eae56d91ede3e5c2fa0c9d" /><Meta Name="ms.sourcegitcommit" Value="11d168140aa8fade0768c2a9dde3e3bcacfdfb7d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="05/27/2020" /><Meta Name="ms.locfileid" Value="83967603" /></Metadata><TypeSignature Language="C#" Value="public class SessionSecurityToken : System.IdentityModel.Tokens.SecurityToken, System.Runtime.Serialization.ISerializable" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit SessionSecurityToken extends System.IdentityModel.Tokens.SecurityToken implements class System.Runtime.Serialization.ISerializable" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.Tokens.SessionSecurityToken" />
  <TypeSignature Language="VB.NET" Value="Public Class SessionSecurityToken&#xA;Inherits SecurityToken&#xA;Implements ISerializable" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <TypeSignature Language="C++ CLI" Value="public ref class SessionSecurityToken : System::IdentityModel::Tokens::SecurityToken, System::Runtime::Serialization::ISerializable" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <TypeSignature Language="F#" Value="type SessionSecurityToken = class&#xA;    inherit SecurityToken&#xA;    interface ISerializable" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <TypeSignature Language="C#" Value="public class SessionSecurityToken : System.IdentityModel.Tokens.SecurityToken" FrameworkAlternate="xamarinmac-3.0" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit SessionSecurityToken extends System.IdentityModel.Tokens.SecurityToken" FrameworkAlternate="xamarinmac-3.0" />
  <TypeSignature Language="VB.NET" Value="Public Class SessionSecurityToken&#xA;Inherits SecurityToken" FrameworkAlternate="xamarinmac-3.0" />
  <TypeSignature Language="C++ CLI" Value="public ref class SessionSecurityToken : System::IdentityModel::Tokens::SecurityToken" FrameworkAlternate="xamarinmac-3.0" />
  <TypeSignature Language="F#" Value="type SessionSecurityToken = class&#xA;    inherit SecurityToken" FrameworkAlternate="xamarinmac-3.0" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.IdentityModel.Tokens.SecurityToken</BaseTypeName>
  </Base>
  <Interfaces>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="2dd4c-101">定义包含数据与会话相关的安全标记。</span><span class="sxs-lookup"><span data-stu-id="2dd4c-101">Defines a security token that contains data associated with a session.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2dd4c-102">会话令牌存储与会话关联的用户 <xref:System.Security.Claims.ClaimsPrincipal>，以及用于定义会话的其他参数;例如会话的开始时间和结束时间。</span><span class="sxs-lookup"><span data-stu-id="2dd4c-102">A session token stores the <xref:System.Security.Claims.ClaimsPrincipal> of the user that is associated with a session as well as other parameters that define the session; for example the session start and end times.</span></span>  
  
 <span data-ttu-id="2dd4c-103">在被动方案中，<xref:System.IdentityModel.Services.WSFederationAuthenticationModule> 从身份验证管道调用到 <xref:System.IdentityModel.Services.SessionAuthenticationModule> （SAM），以从表示经过身份验证的用户的 <xref:System.Security.Claims.ClaimsPrincipal> 创建会话令牌。</span><span class="sxs-lookup"><span data-stu-id="2dd4c-103">In passive scenarios, the <xref:System.IdentityModel.Services.WSFederationAuthenticationModule> calls into the <xref:System.IdentityModel.Services.SessionAuthenticationModule> (SAM) from the authentication pipeline to create a session token from the <xref:System.Security.Claims.ClaimsPrincipal> that represents the authenticated user.</span></span> <span data-ttu-id="2dd4c-104">SAM 使用其配置的 <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> 来创建令牌并将其序列化为 cookie （并在后续请求中从 cookie 反序列化令牌）。</span><span class="sxs-lookup"><span data-stu-id="2dd4c-104">The SAM uses its configured <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> to create the token and to serialize it into a cookie (and to deserialize the token from a cookie on subsequent requests).</span></span> <span data-ttu-id="2dd4c-105">SAM 使用其配置的 <xref:System.IdentityModel.Services.CookieHandler> 类的实例将 cookie 写回 HTTP 响应。</span><span class="sxs-lookup"><span data-stu-id="2dd4c-105">The SAM uses an instance of its configured <xref:System.IdentityModel.Services.CookieHandler> class to write the cookie back to the HTTP Response.</span></span> <span data-ttu-id="2dd4c-106">然后，将此 cookie 返回给客户端，并在后续的请求中，客户端可以提供 cookie，而不是向标识提供程序重新获取安全令牌。</span><span class="sxs-lookup"><span data-stu-id="2dd4c-106">This cookie is then returned to the client and on subsequent requests the client can present the cookie rather than making a round trip back to the identity provider to re-obtain a security token.</span></span> <span data-ttu-id="2dd4c-107">有关会话如何与 WIF 操作的详细信息，请参阅[WIF 会话管理](/dotnet/framework/security/wif-session-management)。</span><span class="sxs-lookup"><span data-stu-id="2dd4c-107">For more information about how sessions operate with WIF, see [WIF Session Management](/dotnet/framework/security/wif-session-management).</span></span> <span data-ttu-id="2dd4c-108">有关在 Web 场方案中使用会话的信息，请参阅[WIF 和 Web 场](/dotnet/framework/security/wif-and-web-farms)。</span><span class="sxs-lookup"><span data-stu-id="2dd4c-108">For information about using sessions in Web farm scenarios, see [WIF and Web Farms](/dotnet/framework/security/wif-and-web-farms).</span></span>  
  
 <span data-ttu-id="2dd4c-109">会话令牌可以在引用模式下运行。</span><span class="sxs-lookup"><span data-stu-id="2dd4c-109">A session token can operate in either reference mode or not.</span></span> <span data-ttu-id="2dd4c-110">如果会话令牌不是在引用模式下操作，则会将整个令牌序列化为存储在客户端上的会话 cookie。</span><span class="sxs-lookup"><span data-stu-id="2dd4c-110">If the session token is not operating in reference mode, the entire token is serialized into the session cookie that is stored on the client.</span></span> <span data-ttu-id="2dd4c-111">序列化会话令牌可能相当大，因此，存储在客户端上的 cookie 也可能非常就前往。</span><span class="sxs-lookup"><span data-stu-id="2dd4c-111">The serialized session token can be quite large and thus the cookie stored on the client can also be quite sizeable.</span></span> <span data-ttu-id="2dd4c-112">在引用模式下，不会将整个会话令牌序列化为 cookie，而是将令牌存储在会话安全令牌缓存中，而只有用于生成从缓存中检索令牌所必需的密钥的信息存储在 cookie 中。</span><span class="sxs-lookup"><span data-stu-id="2dd4c-112">In reference mode, rather than serializing the entire session token into the cookie, the token is stored in a session security token cache and only the information used to generate the key necessary to retrieve the token from the cache is stored in the cookie.</span></span> <span data-ttu-id="2dd4c-113">这样可以极大地减少 cookie 的大小。</span><span class="sxs-lookup"><span data-stu-id="2dd4c-113">This can greatly reduce the size of the cookie.</span></span> <span data-ttu-id="2dd4c-114">会话令牌缓存由派生自 <xref:System.IdentityModel.Tokens.SessionSecurityTokenCache> 的类实现，缓存键由 <xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey> 类实现。</span><span class="sxs-lookup"><span data-stu-id="2dd4c-114">The session token cache is implemented by a class derived from <xref:System.IdentityModel.Tokens.SessionSecurityTokenCache> and the cache key is implemented by the <xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey> class.</span></span> <span data-ttu-id="2dd4c-115"><xref:System.IdentityModel.Tokens.SessionSecurityToken.ContextId%2A> 和 <xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyGeneration%2A> 属性在 <xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey> 类中用于生成缓存密钥。</span><span class="sxs-lookup"><span data-stu-id="2dd4c-115">The <xref:System.IdentityModel.Tokens.SessionSecurityToken.ContextId%2A> and <xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyGeneration%2A> properties are used in the <xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey> class to generate the cache key.</span></span>  
  
 <span data-ttu-id="2dd4c-116"><xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A> 属性确定会话令牌是否处于引用模式。</span><span class="sxs-lookup"><span data-stu-id="2dd4c-116">The <xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A> property determines whether the session token is in reference mode or not.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="2dd4c-117">若要在引用模式下操作，Microsoft 建议为 global.asax.cs 文件中的 <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SessionSecurityTokenCreated?displayProperty=nameWithType> 事件提供处理程序，并在 <xref:System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs.SessionToken%2A?displayProperty=nameWithType> 属性中传递的标记上设置 <xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="2dd4c-117">To operate in reference mode, Microsoft recommends providing a handler for the <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SessionSecurityTokenCreated?displayProperty=nameWithType> event in the global.asax.cs file and setting the <xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A> property on the token passed in the <xref:System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs.SessionToken%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="2dd4c-118">这将确保会话令牌在每个请求的引用模式下运行，并且优于仅设置会话身份验证模块上的 <xref:System.IdentityModel.Services.SessionAuthenticationModule.IsReferenceMode%2A?displayProperty=nameWithType> 属性。</span><span class="sxs-lookup"><span data-stu-id="2dd4c-118">This will ensure that the session token operates in reference mode for every request and is favored over merely setting the <xref:System.IdentityModel.Services.SessionAuthenticationModule.IsReferenceMode%2A?displayProperty=nameWithType> property on the Session Authentication Module.</span></span>  
  
 <span data-ttu-id="2dd4c-119">WIF 提供的 <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> 类将会话令牌序列化为 WS 安全对话 `<wsc:SecurityContextToken>` 元素。</span><span class="sxs-lookup"><span data-stu-id="2dd4c-119">The <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> class provided with WIF serializes the session token as a WS-Secure Conversation `<wsc:SecurityContextToken>` element.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey" />
    <altmember cref="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler" />
    <altmember cref="T:System.IdentityModel.Tokens.SessionSecurityTokenCache" />
    <altmember cref="T:System.IdentityModel.Services.SessionAuthenticationModule" />
    <related type="Article" href="https://msdn.microsoft.com/library/98bce126-18a9-401b-b20d-67ee462a5f8a"><span data-ttu-id="2dd4c-120">WIF 会话管理</span><span class="sxs-lookup"><span data-stu-id="2dd4c-120">WIF Session Management</span></span></related>
    <related type="Article" href="https://msdn.microsoft.com/library/fc3cd7fa-2b45-4614-a44f-8fa9b9d15284"><span data-ttu-id="2dd4c-121">WIF 和 Web 场</span><span class="sxs-lookup"><span data-stu-id="2dd4c-121">WIF and Web Farms</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2dd4c-122">初始化 <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="2dd4c-122">Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SessionSecurityToken (System.Security.Claims.ClaimsPrincipal claimsPrincipal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Claims.ClaimsPrincipal claimsPrincipal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SessionSecurityToken.#ctor(System.Security.Claims.ClaimsPrincipal)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (claimsPrincipal As ClaimsPrincipal)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SessionSecurityToken(System::Security::Claims::ClaimsPrincipal ^ claimsPrincipal);" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Tokens.SessionSecurityToken : System.Security.Claims.ClaimsPrincipal -&gt; System.IdentityModel.Tokens.SessionSecurityToken" Usage="new System.IdentityModel.Tokens.SessionSecurityToken claimsPrincipal" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="claimsPrincipal" Type="System.Security.Claims.ClaimsPrincipal" />
      </Parameters>
      <Docs>
        <param name="claimsPrincipal"><span data-ttu-id="2dd4c-123">初始化标记的声明主体。</span><span class="sxs-lookup"><span data-stu-id="2dd4c-123">The claims principal from which to initialize the token.</span></span></param>
        <summary><span data-ttu-id="2dd4c-124">从指定的主体初始化 <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="2dd4c-124">Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> class from the specified principal.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2dd4c-125">下表显示了 <xref:System.IdentityModel.Tokens.SessionSecurityToken> 类的某个实例的初始属性值。</span><span class="sxs-lookup"><span data-stu-id="2dd4c-125">The following table shows initial property values for an instance of the <xref:System.IdentityModel.Tokens.SessionSecurityToken> class.</span></span>  
  
|<span data-ttu-id="2dd4c-126">属性</span><span class="sxs-lookup"><span data-stu-id="2dd4c-126">Property</span></span>|<span data-ttu-id="2dd4c-127">初始值</span><span class="sxs-lookup"><span data-stu-id="2dd4c-127">Initial Value</span></span>|  
|--------------|-------------------|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.ClaimsPrincipal%2A>|`claimsPrincipal`|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.Context%2A>|`null`|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.ContextId%2A>|<span data-ttu-id="2dd4c-128">设置为生成的唯一 ID。</span><span class="sxs-lookup"><span data-stu-id="2dd4c-128">Set to a generated unique ID.</span></span>|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.EndpointId%2A>|<xref:System.String.Empty?displayProperty=nameWithType>|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.Id%2A>|<span data-ttu-id="2dd4c-129">设置为生成的唯一 ID。</span><span class="sxs-lookup"><span data-stu-id="2dd4c-129">Set to a generated unique ID.</span></span>|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.IsPersistent%2A>|`false`|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A>|`false`|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyEffectiveTime%2A>|<xref:System.DateTime.UtcNow%2A>|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyExpirationTime%2A>|<span data-ttu-id="2dd4c-130"><xref:System.DateTime.UtcNow%2A> 加上 <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultTokenLifetime%2A?displayProperty=nameWithType> 属性。</span><span class="sxs-lookup"><span data-stu-id="2dd4c-130"><xref:System.DateTime.UtcNow%2A> plus the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultTokenLifetime%2A?displayProperty=nameWithType> property.</span></span>|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyGeneration%2A>|`null`|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.SecurityKeys%2A>|<span data-ttu-id="2dd4c-131">包含生成的128位对称密钥。</span><span class="sxs-lookup"><span data-stu-id="2dd4c-131">Contains a generated 128 bit symmetric key.</span></span> <span data-ttu-id="2dd4c-132">**注意：** 默认实现不使用此属性。</span><span class="sxs-lookup"><span data-stu-id="2dd4c-132">**Note:**  The default implementation does not use this property.</span></span> <span data-ttu-id="2dd4c-133">签名和加密密钥由处理令牌的 <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> 应用的 cookie 转换决定。</span><span class="sxs-lookup"><span data-stu-id="2dd4c-133">Signing and encryption keys are dictated by the cookie transforms applied by the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> that processes the token.</span></span>|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidFrom%2A>|<xref:System.DateTime.UtcNow%2A>|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidTo%2A>|<span data-ttu-id="2dd4c-134"><xref:System.DateTime.UtcNow%2A> 加上 <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultTokenLifetime%2A?displayProperty=nameWithType> 属性。</span><span class="sxs-lookup"><span data-stu-id="2dd4c-134"><xref:System.DateTime.UtcNow%2A> plus the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultTokenLifetime%2A?displayProperty=nameWithType> property.</span></span>|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2dd4c-135"><paramref name="claimsPrincipal" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="2dd4c-135"><paramref name="claimsPrincipal" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="2dd4c-136">- 或 -</span><span class="sxs-lookup"><span data-stu-id="2dd4c-136">-or-</span></span> 
<span data-ttu-id="2dd4c-137"><paramref name="claimsPrincipal" /> 的 <see cref="P:System.Security.Claims.ClaimsPrincipal.Identities" /> 属性为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="2dd4c-137">The <see cref="P:System.Security.Claims.ClaimsPrincipal.Identities" /> property of <paramref name="claimsPrincipal" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SessionSecurityToken (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SessionSecurityToken.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; SessionSecurityToken(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Tokens.SessionSecurityToken : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; System.IdentityModel.Tokens.SessionSecurityToken" Usage="new System.IdentityModel.Tokens.SessionSecurityToken (info, context)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info"><span data-ttu-id="2dd4c-138">序列化的对象数据。</span><span class="sxs-lookup"><span data-stu-id="2dd4c-138">The serialized object data.</span></span></param>
        <param name="context"><span data-ttu-id="2dd4c-139">有关源的上下文信息。</span><span class="sxs-lookup"><span data-stu-id="2dd4c-139">Contextual information about the source.</span></span></param>
        <summary><span data-ttu-id="2dd4c-140">使用序列化数据初始化 <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="2dd4c-140">Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> class with serialized data.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SessionSecurityToken (System.Security.Claims.ClaimsPrincipal claimsPrincipal, string context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Claims.ClaimsPrincipal claimsPrincipal, string context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SessionSecurityToken.#ctor(System.Security.Claims.ClaimsPrincipal,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (claimsPrincipal As ClaimsPrincipal, context As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SessionSecurityToken(System::Security::Claims::ClaimsPrincipal ^ claimsPrincipal, System::String ^ context);" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Tokens.SessionSecurityToken : System.Security.Claims.ClaimsPrincipal * string -&gt; System.IdentityModel.Tokens.SessionSecurityToken" Usage="new System.IdentityModel.Tokens.SessionSecurityToken (claimsPrincipal, context)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="claimsPrincipal" Type="System.Security.Claims.ClaimsPrincipal" />
        <Parameter Name="context" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="claimsPrincipal"><span data-ttu-id="2dd4c-141">从引导标记生成的声明主体。</span><span class="sxs-lookup"><span data-stu-id="2dd4c-141">The claims principal that was generated from the bootstrap token.</span></span></param>
        <param name="context"><span data-ttu-id="2dd4c-142">一个应用程序特定的可选上下文字符串。</span><span class="sxs-lookup"><span data-stu-id="2dd4c-142">An optional, application-specific context string.</span></span></param>
        <summary><span data-ttu-id="2dd4c-143">用指定的主体和启动令牌初始化 <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="2dd4c-143">Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> class from the specified principal and bootstrap token.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2dd4c-144">下表显示了 <xref:System.IdentityModel.Tokens.SessionSecurityToken> 类的某个实例的初始属性值。</span><span class="sxs-lookup"><span data-stu-id="2dd4c-144">The following table shows initial property values for an instance of the <xref:System.IdentityModel.Tokens.SessionSecurityToken> class.</span></span>  
  
|<span data-ttu-id="2dd4c-145">属性</span><span class="sxs-lookup"><span data-stu-id="2dd4c-145">Property</span></span>|<span data-ttu-id="2dd4c-146">初始值</span><span class="sxs-lookup"><span data-stu-id="2dd4c-146">Initial Value</span></span>|  
|--------------|-------------------|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.ClaimsPrincipal%2A>|`claimsPrincipal`|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.Context%2A>|`context`|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.ContextId%2A>|<span data-ttu-id="2dd4c-147">设置为生成的唯一 ID。</span><span class="sxs-lookup"><span data-stu-id="2dd4c-147">Set to a generated unique ID.</span></span>|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.EndpointId%2A>|<xref:System.String.Empty?displayProperty=nameWithType>|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.Id%2A>|<span data-ttu-id="2dd4c-148">设置为生成的唯一 ID。</span><span class="sxs-lookup"><span data-stu-id="2dd4c-148">Set to a generated unique ID.</span></span>|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.IsPersistent%2A>|`false`|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A>|`false`|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyEffectiveTime%2A>|<xref:System.DateTime.UtcNow%2A>|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyExpirationTime%2A>|<span data-ttu-id="2dd4c-149"><xref:System.DateTime.UtcNow%2A> 加上 <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultTokenLifetime%2A?displayProperty=nameWithType> 属性。</span><span class="sxs-lookup"><span data-stu-id="2dd4c-149"><xref:System.DateTime.UtcNow%2A> plus the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultTokenLifetime%2A?displayProperty=nameWithType> property.</span></span>|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyGeneration%2A>|`null`|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.SecurityKeys%2A>|<span data-ttu-id="2dd4c-150">包含生成的128位对称密钥。</span><span class="sxs-lookup"><span data-stu-id="2dd4c-150">Contains a generated 128 bit symmetric key.</span></span> <span data-ttu-id="2dd4c-151">**注意：** 默认实现不使用此属性。</span><span class="sxs-lookup"><span data-stu-id="2dd4c-151">**Note:**  The default implementation does not use this property.</span></span> <span data-ttu-id="2dd4c-152">签名和加密密钥由处理令牌的 <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> 应用的 cookie 转换决定。</span><span class="sxs-lookup"><span data-stu-id="2dd4c-152">Signing and encryption keys are dictated by the cookie transforms applied by the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> that processes the token.</span></span>|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidFrom%2A>|<xref:System.DateTime.UtcNow%2A>|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidTo%2A>|<span data-ttu-id="2dd4c-153"><xref:System.DateTime.UtcNow%2A> 加上 <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultTokenLifetime%2A?displayProperty=nameWithType> 属性。</span><span class="sxs-lookup"><span data-stu-id="2dd4c-153"><xref:System.DateTime.UtcNow%2A> plus the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultTokenLifetime%2A?displayProperty=nameWithType> property.</span></span>|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2dd4c-154"><paramref name="claimsPrincipal" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="2dd4c-154"><paramref name="claimsPrincipal" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="2dd4c-155">- 或 -</span><span class="sxs-lookup"><span data-stu-id="2dd4c-155">-or-</span></span> 
<span data-ttu-id="2dd4c-156"><paramref name="claimsPrincipal" /> 的 <see cref="P:System.Security.Claims.ClaimsPrincipal.Identities" /> 属性为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="2dd4c-156">The <see cref="P:System.Security.Claims.ClaimsPrincipal.Identities" /> property of <paramref name="claimsPrincipal" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SessionSecurityToken (System.Security.Claims.ClaimsPrincipal claimsPrincipal, TimeSpan lifetime);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Claims.ClaimsPrincipal claimsPrincipal, valuetype System.TimeSpan lifetime) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SessionSecurityToken.#ctor(System.Security.Claims.ClaimsPrincipal,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (claimsPrincipal As ClaimsPrincipal, lifetime As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SessionSecurityToken(System::Security::Claims::ClaimsPrincipal ^ claimsPrincipal, TimeSpan lifetime);" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Tokens.SessionSecurityToken : System.Security.Claims.ClaimsPrincipal * TimeSpan -&gt; System.IdentityModel.Tokens.SessionSecurityToken" Usage="new System.IdentityModel.Tokens.SessionSecurityToken (claimsPrincipal, lifetime)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="claimsPrincipal" Type="System.Security.Claims.ClaimsPrincipal" />
        <Parameter Name="lifetime" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="claimsPrincipal"><span data-ttu-id="2dd4c-157">初始化标记的声明主体。</span><span class="sxs-lookup"><span data-stu-id="2dd4c-157">The claims principal from which to initialize the token.</span></span></param>
        <param name="lifetime"><span data-ttu-id="2dd4c-158">当令牌有效期间从当前时间开始的期间。</span><span class="sxs-lookup"><span data-stu-id="2dd4c-158">The period from the current time during which the token is valid.</span></span> <span data-ttu-id="2dd4c-159"><see cref="P:System.IdentityModel.Tokens.SessionSecurityToken.ValidFrom" /> 属性将设置为 <see cref="P:System.DateTime.UtcNow" /> ，并且 <see cref="P:System.IdentityModel.Tokens.SessionSecurityToken.ValidTo" /> 属性将设置为 <see cref="P:System.IdentityModel.Tokens.SessionSecurityToken.ValidFrom" /> 加上该参数指定的时期。</span><span class="sxs-lookup"><span data-stu-id="2dd4c-159">The <see cref="P:System.IdentityModel.Tokens.SessionSecurityToken.ValidFrom" /> property will be set to <see cref="P:System.DateTime.UtcNow" /> and the <see cref="P:System.IdentityModel.Tokens.SessionSecurityToken.ValidTo" /> property will be set to <see cref="P:System.IdentityModel.Tokens.SessionSecurityToken.ValidFrom" /> plus the period specified by this parameter.</span></span></param>
        <summary><span data-ttu-id="2dd4c-160">从指定的主体初始化 <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="2dd4c-160">Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> class from the specified principal.</span></span> <span data-ttu-id="2dd4c-161">在指定生命期间从 <see cref="P:System.DateTime.UtcNow" /> 开始是合法的新的标识。</span><span class="sxs-lookup"><span data-stu-id="2dd4c-161">The new token is valid from <see cref="P:System.DateTime.UtcNow" /> through the specified lifetime.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2dd4c-162">下表显示了 <xref:System.IdentityModel.Tokens.SessionSecurityToken> 类的某个实例的初始属性值。</span><span class="sxs-lookup"><span data-stu-id="2dd4c-162">The following table shows initial property values for an instance of the <xref:System.IdentityModel.Tokens.SessionSecurityToken> class.</span></span>  
  
|<span data-ttu-id="2dd4c-163">属性</span><span class="sxs-lookup"><span data-stu-id="2dd4c-163">Property</span></span>|<span data-ttu-id="2dd4c-164">初始值</span><span class="sxs-lookup"><span data-stu-id="2dd4c-164">Initial Value</span></span>|  
|--------------|-------------------|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.ClaimsPrincipal%2A>|`claimsPrincipal`|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.Context%2A>|`null`|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.ContextId%2A>|<span data-ttu-id="2dd4c-165">设置为生成的唯一 ID。</span><span class="sxs-lookup"><span data-stu-id="2dd4c-165">Set to a generated unique ID.</span></span>|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.EndpointId%2A>|<xref:System.String.Empty?displayProperty=nameWithType>|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.Id%2A>|<span data-ttu-id="2dd4c-166">设置为生成的唯一 ID。</span><span class="sxs-lookup"><span data-stu-id="2dd4c-166">Set to a generated unique ID.</span></span>|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.IsPersistent%2A>|`false`|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A>|`false`|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyEffectiveTime%2A>|<xref:System.DateTime.UtcNow%2A>|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyExpirationTime%2A>|<span data-ttu-id="2dd4c-167"><xref:System.DateTime.UtcNow%2A> 加 `lifetime`。</span><span class="sxs-lookup"><span data-stu-id="2dd4c-167"><xref:System.DateTime.UtcNow%2A> plus `lifetime`.</span></span>|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyGeneration%2A>|`null`|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.SecurityKeys%2A>|<span data-ttu-id="2dd4c-168">包含生成的128位对称密钥。</span><span class="sxs-lookup"><span data-stu-id="2dd4c-168">Contains a generated 128 bit symmetric key.</span></span> <span data-ttu-id="2dd4c-169">**注意：** 默认实现不使用此属性。</span><span class="sxs-lookup"><span data-stu-id="2dd4c-169">**Note:**  The default implementation does not use this property.</span></span> <span data-ttu-id="2dd4c-170">签名和加密密钥由处理令牌的 <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> 应用的 cookie 转换决定。</span><span class="sxs-lookup"><span data-stu-id="2dd4c-170">Signing and encryption keys are dictated by the cookie transforms applied by the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> that processes the token.</span></span>|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidFrom%2A>|<xref:System.DateTime.UtcNow%2A>|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidTo%2A>|<span data-ttu-id="2dd4c-171"><xref:System.DateTime.UtcNow%2A> 加 `lifetime`。</span><span class="sxs-lookup"><span data-stu-id="2dd4c-171"><xref:System.DateTime.UtcNow%2A> plus `lifetime`.</span></span>|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2dd4c-172"><paramref name="claimsPrincipal" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="2dd4c-172"><paramref name="claimsPrincipal" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="2dd4c-173">- 或 -</span><span class="sxs-lookup"><span data-stu-id="2dd4c-173">-or-</span></span> 
<span data-ttu-id="2dd4c-174"><paramref name="claimsPrincipal" /> 的 <see cref="P:System.Security.Claims.ClaimsPrincipal.Identities" /> 属性为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="2dd4c-174">The <see cref="P:System.Security.Claims.ClaimsPrincipal.Identities" /> property of <paramref name="claimsPrincipal" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="2dd4c-175"><paramref name="lifetime" /> 小于或等于 <see cref="F:System.TimeSpan.Zero" />。</span><span class="sxs-lookup"><span data-stu-id="2dd4c-175"><paramref name="lifetime" /> is less than or equal to <see cref="F:System.TimeSpan.Zero" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SessionSecurityToken (System.Security.Claims.ClaimsPrincipal claimsPrincipal, string context, DateTime? validFrom, DateTime? validTo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Claims.ClaimsPrincipal claimsPrincipal, string context, valuetype System.Nullable`1&lt;valuetype System.DateTime&gt; validFrom, valuetype System.Nullable`1&lt;valuetype System.DateTime&gt; validTo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SessionSecurityToken.#ctor(System.Security.Claims.ClaimsPrincipal,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (claimsPrincipal As ClaimsPrincipal, context As String, validFrom As Nullable(Of DateTime), validTo As Nullable(Of DateTime))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SessionSecurityToken(System::Security::Claims::ClaimsPrincipal ^ claimsPrincipal, System::String ^ context, Nullable&lt;DateTime&gt; validFrom, Nullable&lt;DateTime&gt; validTo);" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Tokens.SessionSecurityToken : System.Security.Claims.ClaimsPrincipal * string * Nullable&lt;DateTime&gt; * Nullable&lt;DateTime&gt; -&gt; System.IdentityModel.Tokens.SessionSecurityToken" Usage="new System.IdentityModel.Tokens.SessionSecurityToken (claimsPrincipal, context, validFrom, validTo)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="claimsPrincipal" Type="System.Security.Claims.ClaimsPrincipal" />
        <Parameter Name="context" Type="System.String" />
        <Parameter Name="validFrom" Type="System.Nullable&lt;System.DateTime&gt;" />
        <Parameter Name="validTo" Type="System.Nullable&lt;System.DateTime&gt;" />
      </Parameters>
      <Docs>
        <param name="claimsPrincipal"><span data-ttu-id="2dd4c-176">从引导标记生成的声明主体。</span><span class="sxs-lookup"><span data-stu-id="2dd4c-176">The claims principal that was generated from the bootstrap token.</span></span></param>
        <param name="context"><span data-ttu-id="2dd4c-177">一个应用程序特定的可选上下文字符串。</span><span class="sxs-lookup"><span data-stu-id="2dd4c-177">An optional, application-specific context string.</span></span></param>
        <param name="validFrom"><span data-ttu-id="2dd4c-178">标记变为有效的时间时刻。</span><span class="sxs-lookup"><span data-stu-id="2dd4c-178">The time instant at which the token becomes valid.</span></span> <span data-ttu-id="2dd4c-179">如果为 <see langword="null" />，则指定 <see cref="P:System.DateTime.UtcNow" /></span><span class="sxs-lookup"><span data-stu-id="2dd4c-179"><see langword="null" /> to specify <see cref="P:System.DateTime.UtcNow" /></span></span></param>
        <param name="validTo"><span data-ttu-id="2dd4c-180">其后时间不再有效的时间时刻。</span><span class="sxs-lookup"><span data-stu-id="2dd4c-180">The time instant after which the token is no longer valid.</span></span> <span data-ttu-id="2dd4c-181">如果为 <see langword="null" />，则指定应通过将 <see cref="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultTokenLifetime" /> 属性的值添加到 <paramref name="validFrom" /> 参数指定的时间来确定值。</span><span class="sxs-lookup"><span data-stu-id="2dd4c-181"><see langword="null" /> to specify that the value should be determined by adding the value of the <see cref="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultTokenLifetime" /> property to the time specified by the <paramref name="validFrom" /> parameter.</span></span></param>
        <summary><span data-ttu-id="2dd4c-182">用指定的主体和启动令牌，并结合指定的开始时间和过期时间来初始化 <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="2dd4c-182">Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> class from the specified principal and bootstrap token; and with the specified start time and expiration time.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2dd4c-183">下表显示了 <xref:System.IdentityModel.Tokens.SessionSecurityToken> 类的某个实例的初始属性值。</span><span class="sxs-lookup"><span data-stu-id="2dd4c-183">The following table shows initial property values for an instance of the <xref:System.IdentityModel.Tokens.SessionSecurityToken> class.</span></span>  
  
|<span data-ttu-id="2dd4c-184">属性</span><span class="sxs-lookup"><span data-stu-id="2dd4c-184">Property</span></span>|<span data-ttu-id="2dd4c-185">初始值</span><span class="sxs-lookup"><span data-stu-id="2dd4c-185">Initial Value</span></span>|  
|--------------|-------------------|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.ClaimsPrincipal%2A>|`claimsPrincipal`|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.Context%2A>|`context`|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.ContextId%2A>|<span data-ttu-id="2dd4c-186">设置为生成的唯一 ID。</span><span class="sxs-lookup"><span data-stu-id="2dd4c-186">Set to a generated unique ID.</span></span>|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.EndpointId%2A>|<xref:System.String.Empty?displayProperty=nameWithType>|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.Id%2A>|<span data-ttu-id="2dd4c-187">设置为生成的唯一 ID。</span><span class="sxs-lookup"><span data-stu-id="2dd4c-187">Set to a generated unique ID.</span></span>|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.IsPersistent%2A>|`false`|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A>|`false`|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyEffectiveTime%2A>|<span data-ttu-id="2dd4c-188">设置为由 `ValidFrom` 参数确定的 <xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidFrom%2A> 属性的值。</span><span class="sxs-lookup"><span data-stu-id="2dd4c-188">Set to the value of the <xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidFrom%2A> property as determined by the `ValidFrom` parameter.</span></span>|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyExpirationTime%2A>|<span data-ttu-id="2dd4c-189">由 `ValidTo` 参数确定的 <xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidTo%2A> 属性的值。</span><span class="sxs-lookup"><span data-stu-id="2dd4c-189">The value of the <xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidTo%2A> property as determined by the `ValidTo` parameter.</span></span>|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyGeneration%2A>|`null`|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.SecurityKeys%2A>|<span data-ttu-id="2dd4c-190">包含生成的128位对称密钥。</span><span class="sxs-lookup"><span data-stu-id="2dd4c-190">Contains a generated 128 bit symmetric key.</span></span> <span data-ttu-id="2dd4c-191">**注意：** 默认实现不使用此属性。</span><span class="sxs-lookup"><span data-stu-id="2dd4c-191">**Note:**  The default implementation does not use this property.</span></span> <span data-ttu-id="2dd4c-192">签名和加密密钥由处理令牌的 <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> 应用的 cookie 转换决定。</span><span class="sxs-lookup"><span data-stu-id="2dd4c-192">Signing and encryption keys are dictated by the cookie transforms applied by the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> that processes the token.</span></span>|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidFrom%2A>|<span data-ttu-id="2dd4c-193">`validFrom` 参数的值，或者，如果 `validFrom` `null`<xref:System.DateTime.UtcNow%2A>，则为。</span><span class="sxs-lookup"><span data-stu-id="2dd4c-193">The value of the `validFrom` parameter, or, if `validFrom` is `null`, <xref:System.DateTime.UtcNow%2A>.</span></span>|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidTo%2A>|<span data-ttu-id="2dd4c-194">`validFrom` 参数的值。</span><span class="sxs-lookup"><span data-stu-id="2dd4c-194">The value of the `validFrom` parameter.</span></span> <span data-ttu-id="2dd4c-195">如果 `validFrom` `null`，则 <xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidFrom%2A> 属性的值（由 `validFrom` 参数确定）加上 <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultTokenLifetime%2A?displayProperty=nameWithType> 属性。</span><span class="sxs-lookup"><span data-stu-id="2dd4c-195">If `validFrom` is `null`, the value of the <xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidFrom%2A> property (as determined by the `validFrom` parameter) plus the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultTokenLifetime%2A?displayProperty=nameWithType> property.</span></span>|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2dd4c-196"><paramref name="claimsPrincipal" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="2dd4c-196"><paramref name="claimsPrincipal" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="2dd4c-197">- 或 -</span><span class="sxs-lookup"><span data-stu-id="2dd4c-197">-or-</span></span> 
<span data-ttu-id="2dd4c-198"><paramref name="claimsPrincipal" /> 的 <see cref="P:System.Security.Claims.ClaimsPrincipal.Identities" /> 属性为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="2dd4c-198">The <see cref="P:System.Security.Claims.ClaimsPrincipal.Identities" /> property of <paramref name="claimsPrincipal" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="2dd4c-199">无法验证 <paramref name="validFrom" /> 和 <paramref name="validTo" /> 参数；例如，<paramref name="validTo" /> 指定早于 <paramref name="validFrom" /> 发生的时间。</span><span class="sxs-lookup"><span data-stu-id="2dd4c-199">The <paramref name="validFrom" /> and <paramref name="validTo" /> parameters cannot be validated; for example, <paramref name="validTo" /> specifies a time that occurs earlier than <paramref name="validFrom" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SessionSecurityToken (System.Security.Claims.ClaimsPrincipal claimsPrincipal, string context, string endpointId, DateTime? validFrom, DateTime? validTo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Claims.ClaimsPrincipal claimsPrincipal, string context, string endpointId, valuetype System.Nullable`1&lt;valuetype System.DateTime&gt; validFrom, valuetype System.Nullable`1&lt;valuetype System.DateTime&gt; validTo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SessionSecurityToken.#ctor(System.Security.Claims.ClaimsPrincipal,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (claimsPrincipal As ClaimsPrincipal, context As String, endpointId As String, validFrom As Nullable(Of DateTime), validTo As Nullable(Of DateTime))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SessionSecurityToken(System::Security::Claims::ClaimsPrincipal ^ claimsPrincipal, System::String ^ context, System::String ^ endpointId, Nullable&lt;DateTime&gt; validFrom, Nullable&lt;DateTime&gt; validTo);" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Tokens.SessionSecurityToken : System.Security.Claims.ClaimsPrincipal * string * string * Nullable&lt;DateTime&gt; * Nullable&lt;DateTime&gt; -&gt; System.IdentityModel.Tokens.SessionSecurityToken" Usage="new System.IdentityModel.Tokens.SessionSecurityToken (claimsPrincipal, context, endpointId, validFrom, validTo)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="claimsPrincipal" Type="System.Security.Claims.ClaimsPrincipal" />
        <Parameter Name="context" Type="System.String" />
        <Parameter Name="endpointId" Type="System.String" />
        <Parameter Name="validFrom" Type="System.Nullable&lt;System.DateTime&gt;" />
        <Parameter Name="validTo" Type="System.Nullable&lt;System.DateTime&gt;" />
      </Parameters>
      <Docs>
        <param name="claimsPrincipal"><span data-ttu-id="2dd4c-200">从引导标记生成的声明主体。</span><span class="sxs-lookup"><span data-stu-id="2dd4c-200">The claims principal that was generated from the bootstrap token.</span></span></param>
        <param name="context"><span data-ttu-id="2dd4c-201">一个应用程序特定的可选上下文字符串。</span><span class="sxs-lookup"><span data-stu-id="2dd4c-201">An optional, application-specific context string.</span></span></param>
        <param name="endpointId"><span data-ttu-id="2dd4c-202">此标记所绑定的终点结。</span><span class="sxs-lookup"><span data-stu-id="2dd4c-202">The endpoint to which this token is bound.</span></span> <span data-ttu-id="2dd4c-203">空字符串将创建未区分范围的标记。</span><span class="sxs-lookup"><span data-stu-id="2dd4c-203">An empty string creates an unscoped token.</span></span></param>
        <param name="validFrom"><span data-ttu-id="2dd4c-204">标记变为有效的时间时刻。</span><span class="sxs-lookup"><span data-stu-id="2dd4c-204">The time instant at which the token becomes valid.</span></span> <span data-ttu-id="2dd4c-205">如果为 <see langword="null" />，则指定 <see cref="P:System.DateTime.UtcNow" />。</span><span class="sxs-lookup"><span data-stu-id="2dd4c-205"><see langword="null" /> to specify <see cref="P:System.DateTime.UtcNow" />.</span></span></param>
        <param name="validTo"><span data-ttu-id="2dd4c-206">其后时间不再有效的时间时刻。</span><span class="sxs-lookup"><span data-stu-id="2dd4c-206">The time instant after which the token is no longer valid.</span></span> <span data-ttu-id="2dd4c-207">如果为 <see langword="null" />，则指定应通过将 <see cref="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultTokenLifetime" /> 属性的值添加到 <paramref name="validFrom" /> 参数指定的时间来确定值。</span><span class="sxs-lookup"><span data-stu-id="2dd4c-207"><see langword="null" /> to specify that the value should be determined by adding the value of the <see cref="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultTokenLifetime" /> property to the time specified by the  <paramref name="validFrom" /> parameter.</span></span></param>
        <summary><span data-ttu-id="2dd4c-208">用指定的主体和启动令牌，并结合指定的开始时间和过期时间来初始化 <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="2dd4c-208">Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> class from the specified principal and bootstrap token; and with the specified start time and expiration time.</span></span> <span data-ttu-id="2dd4c-209">限定范围为指定的终点的新的标识。</span><span class="sxs-lookup"><span data-stu-id="2dd4c-209">The new token is scoped to the specified endpoint.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2dd4c-210">下表显示了 <xref:System.IdentityModel.Tokens.SessionSecurityToken> 类的某个实例的初始属性值。</span><span class="sxs-lookup"><span data-stu-id="2dd4c-210">The following table shows initial property values for an instance of the <xref:System.IdentityModel.Tokens.SessionSecurityToken> class.</span></span>  
  
|<span data-ttu-id="2dd4c-211">属性</span><span class="sxs-lookup"><span data-stu-id="2dd4c-211">Property</span></span>|<span data-ttu-id="2dd4c-212">初始值</span><span class="sxs-lookup"><span data-stu-id="2dd4c-212">Initial Value</span></span>|  
|--------------|-------------------|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.ClaimsPrincipal%2A>|`claimsPrincipal`|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.Context%2A>|`context`|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.ContextId%2A>|<span data-ttu-id="2dd4c-213">设置为生成的唯一 ID。</span><span class="sxs-lookup"><span data-stu-id="2dd4c-213">Set to a generated unique ID.</span></span>|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.EndpointId%2A>|`endpointId`|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.Id%2A>|<span data-ttu-id="2dd4c-214">设置为生成的唯一 ID。</span><span class="sxs-lookup"><span data-stu-id="2dd4c-214">Set to a generated unique ID.</span></span>|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.IsPersistent%2A>|`false`|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A>|`false`|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyEffectiveTime%2A>|<span data-ttu-id="2dd4c-215">设置为由 `ValidFrom` 参数确定的 <xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidFrom%2A> 属性的值。</span><span class="sxs-lookup"><span data-stu-id="2dd4c-215">Set to the value of the <xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidFrom%2A> property as determined by the `ValidFrom` parameter.</span></span>|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyExpirationTime%2A>|<span data-ttu-id="2dd4c-216">由 `ValidTo` 参数确定的 <xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidTo%2A> 属性的值。</span><span class="sxs-lookup"><span data-stu-id="2dd4c-216">The value of the <xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidTo%2A> property as determined by the `ValidTo` parameter.</span></span>|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyGeneration%2A>|`null`|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.SecurityKeys%2A>|<span data-ttu-id="2dd4c-217">包含生成的128位对称密钥。</span><span class="sxs-lookup"><span data-stu-id="2dd4c-217">Contains a generated 128 bit symmetric key.</span></span> <span data-ttu-id="2dd4c-218">**注意：** 默认实现不使用此属性。</span><span class="sxs-lookup"><span data-stu-id="2dd4c-218">**Note:**  The default implementation does not use this property.</span></span> <span data-ttu-id="2dd4c-219">签名和加密密钥由处理令牌的 <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> 应用的 cookie 转换决定。</span><span class="sxs-lookup"><span data-stu-id="2dd4c-219">Signing and encryption keys are dictated by the cookie transforms applied by the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> that processes the token.</span></span>|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidFrom%2A>|<span data-ttu-id="2dd4c-220">`validFrom` 参数的值，或者，如果 `validFrom` `null`<xref:System.DateTime.UtcNow%2A>，则为。</span><span class="sxs-lookup"><span data-stu-id="2dd4c-220">The value of the `validFrom` parameter, or, if `validFrom` is `null`, <xref:System.DateTime.UtcNow%2A>.</span></span>|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidTo%2A>|<span data-ttu-id="2dd4c-221">`validFrom` 参数的值。</span><span class="sxs-lookup"><span data-stu-id="2dd4c-221">The value of the `validFrom` parameter.</span></span> <span data-ttu-id="2dd4c-222">如果 `validFrom` `null`，则 <xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidFrom%2A> 属性的值（由 `validFrom` 参数确定）加上 <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultTokenLifetime%2A?displayProperty=nameWithType> 属性。</span><span class="sxs-lookup"><span data-stu-id="2dd4c-222">If `validFrom` is `null`, the value of the <xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidFrom%2A> property (as determined by the `validFrom` parameter) plus the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultTokenLifetime%2A?displayProperty=nameWithType> property.</span></span>|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2dd4c-223"><paramref name="claimsPrincipal" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="2dd4c-223"><paramref name="claimsPrincipal" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="2dd4c-224">- 或 -</span><span class="sxs-lookup"><span data-stu-id="2dd4c-224">-or-</span></span> 
<span data-ttu-id="2dd4c-225"><paramref name="claimsPrincipal" /> 的 <see cref="P:System.Security.Claims.ClaimsPrincipal.Identities" /> 属性为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="2dd4c-225">The <see cref="P:System.Security.Claims.ClaimsPrincipal.Identities" /> property of <paramref name="claimsPrincipal" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="2dd4c-226">- 或 -</span><span class="sxs-lookup"><span data-stu-id="2dd4c-226">-or-</span></span> 
 <span data-ttu-id="2dd4c-227"><paramref name="endpointId" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="2dd4c-227"><paramref name="endpointId" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="2dd4c-228">无法验证 <paramref name="validFrom" /> 和 <paramref name="validTo" /> 参数；例如，<paramref name="validTo" /> 指定早于 <paramref name="validFrom" /> 发生的时间。</span><span class="sxs-lookup"><span data-stu-id="2dd4c-228">The <paramref name="validFrom" /> and <paramref name="validTo" /> parameters cannot be validated; for example, <paramref name="validTo" /> specifies a time that occurs earlier than <paramref name="validFrom" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SessionSecurityToken (System.Security.Claims.ClaimsPrincipal claimsPrincipal, System.Xml.UniqueId contextId, string context, string endpointId, TimeSpan lifetime, System.IdentityModel.Tokens.SymmetricSecurityKey key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Claims.ClaimsPrincipal claimsPrincipal, class System.Xml.UniqueId contextId, string context, string endpointId, valuetype System.TimeSpan lifetime, class System.IdentityModel.Tokens.SymmetricSecurityKey key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SessionSecurityToken.#ctor(System.Security.Claims.ClaimsPrincipal,System.Xml.UniqueId,System.String,System.String,System.TimeSpan,System.IdentityModel.Tokens.SymmetricSecurityKey)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (claimsPrincipal As ClaimsPrincipal, contextId As UniqueId, context As String, endpointId As String, lifetime As TimeSpan, key As SymmetricSecurityKey)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SessionSecurityToken(System::Security::Claims::ClaimsPrincipal ^ claimsPrincipal, System::Xml::UniqueId ^ contextId, System::String ^ context, System::String ^ endpointId, TimeSpan lifetime, System::IdentityModel::Tokens::SymmetricSecurityKey ^ key);" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Tokens.SessionSecurityToken : System.Security.Claims.ClaimsPrincipal * System.Xml.UniqueId * string * string * TimeSpan * System.IdentityModel.Tokens.SymmetricSecurityKey -&gt; System.IdentityModel.Tokens.SessionSecurityToken" Usage="new System.IdentityModel.Tokens.SessionSecurityToken (claimsPrincipal, contextId, context, endpointId, lifetime, key)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="claimsPrincipal" Type="System.Security.Claims.ClaimsPrincipal" />
        <Parameter Name="contextId" Type="System.Xml.UniqueId" />
        <Parameter Name="context" Type="System.String" />
        <Parameter Name="endpointId" Type="System.String" />
        <Parameter Name="lifetime" Type="System.TimeSpan" />
        <Parameter Name="key" Type="System.IdentityModel.Tokens.SymmetricSecurityKey" />
      </Parameters>
      <Docs>
        <param name="claimsPrincipal"><span data-ttu-id="2dd4c-229">与此会话关联的声明主体。</span><span class="sxs-lookup"><span data-stu-id="2dd4c-229">The claims principal that is associated with this session.</span></span></param>
        <param name="contextId"><span data-ttu-id="2dd4c-230">与此标志关联的一个上下文标识符。</span><span class="sxs-lookup"><span data-stu-id="2dd4c-230">The context identifier associated with this token.</span></span></param>
        <param name="context"><span data-ttu-id="2dd4c-231">一个应用程序特定的可选上下文字符串。</span><span class="sxs-lookup"><span data-stu-id="2dd4c-231">An optional, application-specific context string.</span></span></param>
        <param name="endpointId"><span data-ttu-id="2dd4c-232">此标记所绑定的终点结。</span><span class="sxs-lookup"><span data-stu-id="2dd4c-232">The endpoint to which this token is bound.</span></span> <span data-ttu-id="2dd4c-233">空字符串将创建未区分范围的标记。</span><span class="sxs-lookup"><span data-stu-id="2dd4c-233">An empty string creates an unscoped token.</span></span></param>
        <param name="lifetime"><span data-ttu-id="2dd4c-234">会话令牌的生存期。</span><span class="sxs-lookup"><span data-stu-id="2dd4c-234">The lifetime of the session token.</span></span> <span data-ttu-id="2dd4c-235"><see cref="P:System.IdentityModel.Tokens.SessionSecurityToken.ValidFrom" /> 属性将设置为 <see cref="P:System.DateTime.UtcNow" /> ，并且 <see cref="P:System.IdentityModel.Tokens.SessionSecurityToken.ValidTo" /> 属性将设置为 <see cref="P:System.IdentityModel.Tokens.SessionSecurityToken.ValidFrom" /> 加上该参数指定的时期。</span><span class="sxs-lookup"><span data-stu-id="2dd4c-235">The <see cref="P:System.IdentityModel.Tokens.SessionSecurityToken.ValidFrom" /> property will be set to <see cref="P:System.DateTime.UtcNow" /> and the <see cref="P:System.IdentityModel.Tokens.SessionSecurityToken.ValidTo" /> property will be set to <see cref="P:System.IdentityModel.Tokens.SessionSecurityToken.ValidFrom" /> plus the period specified by this parameter.</span></span></param>
        <param name="key"><span data-ttu-id="2dd4c-236">一个可选的对称会话密钥。</span><span class="sxs-lookup"><span data-stu-id="2dd4c-236">An optional symmetric session key.</span></span></param>
        <summary><span data-ttu-id="2dd4c-237">使用指定的主体、上下文 ID、上下文、终结点、生存期和密钥初始化 <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="2dd4c-237">Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> class by using the specified principal, context ID, context, endpoint, lifetime, and key.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2dd4c-238">下表显示了 <xref:System.IdentityModel.Tokens.SessionSecurityToken> 类的某个实例的初始属性值。</span><span class="sxs-lookup"><span data-stu-id="2dd4c-238">The following table shows initial property values for an instance of the <xref:System.IdentityModel.Tokens.SessionSecurityToken> class.</span></span>  
  
|<span data-ttu-id="2dd4c-239">属性</span><span class="sxs-lookup"><span data-stu-id="2dd4c-239">Property</span></span>|<span data-ttu-id="2dd4c-240">初始值</span><span class="sxs-lookup"><span data-stu-id="2dd4c-240">Initial Value</span></span>|  
|--------------|-------------------|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.ClaimsPrincipal%2A>|`claimsPrincipal`|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.Context%2A>|`context`|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.ContextId%2A>|`contextId`|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.EndpointId%2A>|`endpointId`|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.Id%2A>|<span data-ttu-id="2dd4c-241">设置为生成的唯一 ID。</span><span class="sxs-lookup"><span data-stu-id="2dd4c-241">Set to a generated unique ID.</span></span>|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.IsPersistent%2A>|`false`|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A>|`false`|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyEffectiveTime%2A>|<xref:System.DateTime.UtcNow%2A>|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyExpirationTime%2A>|<span data-ttu-id="2dd4c-242"><xref:System.DateTime.UtcNow%2A> 加 `lifetime`</span><span class="sxs-lookup"><span data-stu-id="2dd4c-242"><xref:System.DateTime.UtcNow%2A> plus `lifetime`</span></span>|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyGeneration%2A>|`null`|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.SecurityKeys%2A>|<span data-ttu-id="2dd4c-243">包含 `key` 的单个元素，如果 `key` `null`，则为生成的128位对称密钥。</span><span class="sxs-lookup"><span data-stu-id="2dd4c-243">Contains single element that is either `key` or, if `key` is `null`, a generated 128 bit symmetric key.</span></span> <span data-ttu-id="2dd4c-244">**注意：** 默认实现不使用此属性。</span><span class="sxs-lookup"><span data-stu-id="2dd4c-244">**Note:**  The default implementation does not use this property.</span></span> <span data-ttu-id="2dd4c-245">签名和加密密钥由处理令牌的 <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> 应用的 cookie 转换决定。</span><span class="sxs-lookup"><span data-stu-id="2dd4c-245">Signing and encryption keys are dictated by the cookie transforms applied by the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> that processes the token.</span></span>|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidFrom%2A>|<xref:System.DateTime.UtcNow%2A>|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidTo%2A>|<span data-ttu-id="2dd4c-246"><xref:System.DateTime.UtcNow%2A> 加 `lifetime`</span><span class="sxs-lookup"><span data-stu-id="2dd4c-246"><xref:System.DateTime.UtcNow%2A> plus `lifetime`</span></span>|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2dd4c-247"><paramref name="claimsPrincipal" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="2dd4c-247"><paramref name="claimsPrincipal" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="2dd4c-248">- 或 -</span><span class="sxs-lookup"><span data-stu-id="2dd4c-248">-or-</span></span> 
<span data-ttu-id="2dd4c-249"><paramref name="claimsPrincipal" /> 的 <see cref="P:System.Security.Claims.ClaimsPrincipal.Identities" /> 属性为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="2dd4c-249">The <see cref="P:System.Security.Claims.ClaimsPrincipal.Identities" /> property of <paramref name="claimsPrincipal" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="2dd4c-250">- 或 -</span><span class="sxs-lookup"><span data-stu-id="2dd4c-250">-or-</span></span> 
 <span data-ttu-id="2dd4c-251"><paramref name="contextId" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="2dd4c-251"><paramref name="contextId" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="2dd4c-252">- 或 -</span><span class="sxs-lookup"><span data-stu-id="2dd4c-252">-or-</span></span> 
 <span data-ttu-id="2dd4c-253"><paramref name="endpointId" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="2dd4c-253"><paramref name="endpointId" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="2dd4c-254"><paramref name="lifetime" /> 小于或等于 <see cref="F:System.TimeSpan.Zero" />。</span><span class="sxs-lookup"><span data-stu-id="2dd4c-254"><paramref name="lifetime" /> is less than or equal to <see cref="F:System.TimeSpan.Zero" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SessionSecurityToken (System.Security.Claims.ClaimsPrincipal claimsPrincipal, System.Xml.UniqueId contextId, string context, string endpointId, DateTime validFrom, TimeSpan lifetime, System.IdentityModel.Tokens.SymmetricSecurityKey key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Claims.ClaimsPrincipal claimsPrincipal, class System.Xml.UniqueId contextId, string context, string endpointId, valuetype System.DateTime validFrom, valuetype System.TimeSpan lifetime, class System.IdentityModel.Tokens.SymmetricSecurityKey key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SessionSecurityToken.#ctor(System.Security.Claims.ClaimsPrincipal,System.Xml.UniqueId,System.String,System.String,System.DateTime,System.TimeSpan,System.IdentityModel.Tokens.SymmetricSecurityKey)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (claimsPrincipal As ClaimsPrincipal, contextId As UniqueId, context As String, endpointId As String, validFrom As DateTime, lifetime As TimeSpan, key As SymmetricSecurityKey)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SessionSecurityToken(System::Security::Claims::ClaimsPrincipal ^ claimsPrincipal, System::Xml::UniqueId ^ contextId, System::String ^ context, System::String ^ endpointId, DateTime validFrom, TimeSpan lifetime, System::IdentityModel::Tokens::SymmetricSecurityKey ^ key);" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Tokens.SessionSecurityToken : System.Security.Claims.ClaimsPrincipal * System.Xml.UniqueId * string * string * DateTime * TimeSpan * System.IdentityModel.Tokens.SymmetricSecurityKey -&gt; System.IdentityModel.Tokens.SessionSecurityToken" Usage="new System.IdentityModel.Tokens.SessionSecurityToken (claimsPrincipal, contextId, context, endpointId, validFrom, lifetime, key)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="claimsPrincipal" Type="System.Security.Claims.ClaimsPrincipal" />
        <Parameter Name="contextId" Type="System.Xml.UniqueId" />
        <Parameter Name="context" Type="System.String" />
        <Parameter Name="endpointId" Type="System.String" />
        <Parameter Name="validFrom" Type="System.DateTime" />
        <Parameter Name="lifetime" Type="System.TimeSpan" />
        <Parameter Name="key" Type="System.IdentityModel.Tokens.SymmetricSecurityKey" />
      </Parameters>
      <Docs>
        <param name="claimsPrincipal"><span data-ttu-id="2dd4c-255">与此会话关联的声明主体。</span><span class="sxs-lookup"><span data-stu-id="2dd4c-255">The claims principal that is associated with this session.</span></span></param>
        <param name="contextId"><span data-ttu-id="2dd4c-256">与此标志关联的一个上下文标识符。</span><span class="sxs-lookup"><span data-stu-id="2dd4c-256">The context identifier associated with this token.</span></span></param>
        <param name="context"><span data-ttu-id="2dd4c-257">一个应用程序特定的可选上下文字符串。</span><span class="sxs-lookup"><span data-stu-id="2dd4c-257">An optional, application-specific context string.</span></span></param>
        <param name="endpointId"><span data-ttu-id="2dd4c-258">此标记所绑定的终点结。</span><span class="sxs-lookup"><span data-stu-id="2dd4c-258">The endpoint to which this token is bound.</span></span> <span data-ttu-id="2dd4c-259">空字符串将创建未区分范围的标记。</span><span class="sxs-lookup"><span data-stu-id="2dd4c-259">An empty string creates an unscoped token.</span></span></param>
        <param name="validFrom"><span data-ttu-id="2dd4c-260">标记变为有效的时间。</span><span class="sxs-lookup"><span data-stu-id="2dd4c-260">The time at which the token becomes valid.</span></span></param>
        <param name="lifetime"><span data-ttu-id="2dd4c-261">会话令牌的生存期。</span><span class="sxs-lookup"><span data-stu-id="2dd4c-261">The lifetime of the session token.</span></span> <span data-ttu-id="2dd4c-262"><see cref="P:System.IdentityModel.Tokens.SessionSecurityToken.ValidTo" /> 属性将设置为 <see cref="P:System.IdentityModel.Tokens.SessionSecurityToken.ValidFrom" /> 加上该参数指定的时期。</span><span class="sxs-lookup"><span data-stu-id="2dd4c-262">The <see cref="P:System.IdentityModel.Tokens.SessionSecurityToken.ValidTo" /> property will be set to <see cref="P:System.IdentityModel.Tokens.SessionSecurityToken.ValidFrom" /> plus the period specified by this parameter.</span></span></param>
        <param name="key"><span data-ttu-id="2dd4c-263">一个可选的对称会话密钥。</span><span class="sxs-lookup"><span data-stu-id="2dd4c-263">An optional symmetric session key.</span></span></param>
        <summary><span data-ttu-id="2dd4c-264">使用指定的主体、上下文 ID、上下文、终结点、有效时间戳、生存期和密钥初始化 <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="2dd4c-264">Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> class by using the specified principal, context ID, context, endpoint, valid timestamp, lifetime, and key.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2dd4c-265">下表显示了 <xref:System.IdentityModel.Tokens.SessionSecurityToken> 类的某个实例的初始属性值。</span><span class="sxs-lookup"><span data-stu-id="2dd4c-265">The following table shows initial property values for an instance of the <xref:System.IdentityModel.Tokens.SessionSecurityToken> class.</span></span>  
  
|<span data-ttu-id="2dd4c-266">属性</span><span class="sxs-lookup"><span data-stu-id="2dd4c-266">Property</span></span>|<span data-ttu-id="2dd4c-267">初始值</span><span class="sxs-lookup"><span data-stu-id="2dd4c-267">Initial Value</span></span>|  
|--------------|-------------------|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.ClaimsPrincipal%2A>|`claimsPrincipal`|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.Context%2A>|`context`|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.ContextId%2A>|<span data-ttu-id="2dd4c-268">如果 `contextId` 为 `null`，则为 `contextId` 或生成的唯一 ID。</span><span class="sxs-lookup"><span data-stu-id="2dd4c-268">`contextId` or, if `contextId` is `null`, a generated unique ID.</span></span>|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.EndpointId%2A>|`endpointId`|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.Id%2A>|<span data-ttu-id="2dd4c-269">设置为生成的唯一 ID。</span><span class="sxs-lookup"><span data-stu-id="2dd4c-269">Set to a generated unique ID.</span></span>|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.IsPersistent%2A>|`false`|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A>|`false`|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyEffectiveTime%2A>|`validFrom`|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyExpirationTime%2A>|<span data-ttu-id="2dd4c-270">`validFrom` 加 `lifetime`。</span><span class="sxs-lookup"><span data-stu-id="2dd4c-270">`validFrom` plus `lifetime`.</span></span>|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyGeneration%2A>|`null`|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.SecurityKeys%2A>|<span data-ttu-id="2dd4c-271">包含 `key` 的单个元素，如果 `key` `null`，则为生成的128位对称密钥。</span><span class="sxs-lookup"><span data-stu-id="2dd4c-271">Contains single element that is either `key` or, if `key` is `null`, a generated 128 bit symmetric key.</span></span> <span data-ttu-id="2dd4c-272">**注意：** 默认实现不使用此属性。</span><span class="sxs-lookup"><span data-stu-id="2dd4c-272">**Note:**  The default implementation does not use this property.</span></span> <span data-ttu-id="2dd4c-273">签名和加密密钥由处理令牌的 <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> 应用的 cookie 转换决定。</span><span class="sxs-lookup"><span data-stu-id="2dd4c-273">Signing and encryption keys are dictated by the cookie transforms applied by the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> that processes the token.</span></span>|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidFrom%2A>|`validFrom`|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidTo%2A>|<span data-ttu-id="2dd4c-274">`validFrom` 加 `lifetime`。</span><span class="sxs-lookup"><span data-stu-id="2dd4c-274">`validFrom` plus `lifetime`.</span></span>|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2dd4c-275"><paramref name="claimsPrincipal" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="2dd4c-275"><paramref name="claimsPrincipal" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="2dd4c-276">- 或 -</span><span class="sxs-lookup"><span data-stu-id="2dd4c-276">-or-</span></span> 
<span data-ttu-id="2dd4c-277"><paramref name="claimsPrincipal" /> 的 <see cref="P:System.Security.Claims.ClaimsPrincipal.Identities" /> 属性为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="2dd4c-277">The <see cref="P:System.Security.Claims.ClaimsPrincipal.Identities" /> property of <paramref name="claimsPrincipal" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="2dd4c-278">- 或 -</span><span class="sxs-lookup"><span data-stu-id="2dd4c-278">-or-</span></span> 
 <span data-ttu-id="2dd4c-279"><paramref name="contextId" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="2dd4c-279"><paramref name="contextId" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="2dd4c-280">- 或 -</span><span class="sxs-lookup"><span data-stu-id="2dd4c-280">-or-</span></span> 
 <span data-ttu-id="2dd4c-281"><paramref name="endpointId" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="2dd4c-281"><paramref name="endpointId" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="2dd4c-282"><paramref name="lifetime" /> 小于或等于 <see cref="F:System.TimeSpan.Zero" />。</span><span class="sxs-lookup"><span data-stu-id="2dd4c-282"><paramref name="lifetime" /> is less than or equal to <see cref="F:System.TimeSpan.Zero" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SessionSecurityToken (System.Security.Claims.ClaimsPrincipal claimsPrincipal, System.Xml.UniqueId contextId, string context, string endpointId, DateTime? validFrom, DateTime? validTo, System.IdentityModel.Tokens.SymmetricSecurityKey key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Claims.ClaimsPrincipal claimsPrincipal, class System.Xml.UniqueId contextId, string context, string endpointId, valuetype System.Nullable`1&lt;valuetype System.DateTime&gt; validFrom, valuetype System.Nullable`1&lt;valuetype System.DateTime&gt; validTo, class System.IdentityModel.Tokens.SymmetricSecurityKey key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SessionSecurityToken.#ctor(System.Security.Claims.ClaimsPrincipal,System.Xml.UniqueId,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.IdentityModel.Tokens.SymmetricSecurityKey)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (claimsPrincipal As ClaimsPrincipal, contextId As UniqueId, context As String, endpointId As String, validFrom As Nullable(Of DateTime), validTo As Nullable(Of DateTime), key As SymmetricSecurityKey)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SessionSecurityToken(System::Security::Claims::ClaimsPrincipal ^ claimsPrincipal, System::Xml::UniqueId ^ contextId, System::String ^ context, System::String ^ endpointId, Nullable&lt;DateTime&gt; validFrom, Nullable&lt;DateTime&gt; validTo, System::IdentityModel::Tokens::SymmetricSecurityKey ^ key);" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Tokens.SessionSecurityToken : System.Security.Claims.ClaimsPrincipal * System.Xml.UniqueId * string * string * Nullable&lt;DateTime&gt; * Nullable&lt;DateTime&gt; * System.IdentityModel.Tokens.SymmetricSecurityKey -&gt; System.IdentityModel.Tokens.SessionSecurityToken" Usage="new System.IdentityModel.Tokens.SessionSecurityToken (claimsPrincipal, contextId, context, endpointId, validFrom, validTo, key)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="claimsPrincipal" Type="System.Security.Claims.ClaimsPrincipal" />
        <Parameter Name="contextId" Type="System.Xml.UniqueId" />
        <Parameter Name="context" Type="System.String" />
        <Parameter Name="endpointId" Type="System.String" />
        <Parameter Name="validFrom" Type="System.Nullable&lt;System.DateTime&gt;" />
        <Parameter Name="validTo" Type="System.Nullable&lt;System.DateTime&gt;" />
        <Parameter Name="key" Type="System.IdentityModel.Tokens.SymmetricSecurityKey" />
      </Parameters>
      <Docs>
        <param name="claimsPrincipal"><span data-ttu-id="2dd4c-283">与此会话关联的声明主体。</span><span class="sxs-lookup"><span data-stu-id="2dd4c-283">The claims principal that is associated with this session.</span></span></param>
        <param name="contextId"><span data-ttu-id="2dd4c-284">与此标志关联的一个上下文标识符。</span><span class="sxs-lookup"><span data-stu-id="2dd4c-284">The context identifier associated with this token.</span></span></param>
        <param name="context"><span data-ttu-id="2dd4c-285">一个应用程序特定的可选上下文字符串。</span><span class="sxs-lookup"><span data-stu-id="2dd4c-285">An optional, application-specific context string.</span></span></param>
        <param name="endpointId"><span data-ttu-id="2dd4c-286">此标记所绑定的终点结。</span><span class="sxs-lookup"><span data-stu-id="2dd4c-286">The endpoint to which this token is bound.</span></span> <span data-ttu-id="2dd4c-287">空字符串将创建未区分范围的标记。</span><span class="sxs-lookup"><span data-stu-id="2dd4c-287">An empty string creates an unscoped token.</span></span></param>
        <param name="validFrom"><span data-ttu-id="2dd4c-288">标记变为有效的时间时刻。</span><span class="sxs-lookup"><span data-stu-id="2dd4c-288">The time instant at which the token becomes valid.</span></span> <span data-ttu-id="2dd4c-289">如果为 <see langword="null" />，则指定 <see cref="P:System.DateTime.UtcNow" /></span><span class="sxs-lookup"><span data-stu-id="2dd4c-289"><see langword="null" /> to specify <see cref="P:System.DateTime.UtcNow" /></span></span></param>
        <param name="validTo"><span data-ttu-id="2dd4c-290">其后时间不再有效的时间时刻。</span><span class="sxs-lookup"><span data-stu-id="2dd4c-290">The time instant after which the token is no longer valid.</span></span> <span data-ttu-id="2dd4c-291">如果为 <see langword="null" />，则指定应通过将 <see cref="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultTokenLifetime" /> 属性的值添加到 <paramref name="validFrom" /> 参数指定的时间来确定值。</span><span class="sxs-lookup"><span data-stu-id="2dd4c-291"><see langword="null" /> to specify that the value should be determined by adding the value of the <see cref="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultTokenLifetime" /> property to the time specified by the <paramref name="validFrom" /> parameter.</span></span></param>
        <param name="key"><span data-ttu-id="2dd4c-292">一个可选的对称会话密钥。</span><span class="sxs-lookup"><span data-stu-id="2dd4c-292">An optional symmetric session key.</span></span></param>
        <summary><span data-ttu-id="2dd4c-293">使用指定的主体、上下文 ID、上下文、终结点、开始时间、过期时间和密钥初始化 <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="2dd4c-293">Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> class by using the specified principal, context ID, context, endpoint, start time, expiration time, and key.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2dd4c-294">下表显示了 <xref:System.IdentityModel.Tokens.SessionSecurityToken> 类的某个实例的初始属性值。</span><span class="sxs-lookup"><span data-stu-id="2dd4c-294">The following table shows initial property values for an instance of the <xref:System.IdentityModel.Tokens.SessionSecurityToken> class.</span></span>  
  
|<span data-ttu-id="2dd4c-295">属性</span><span class="sxs-lookup"><span data-stu-id="2dd4c-295">Property</span></span>|<span data-ttu-id="2dd4c-296">初始值</span><span class="sxs-lookup"><span data-stu-id="2dd4c-296">Initial Value</span></span>|  
|--------------|-------------------|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.ClaimsPrincipal%2A>|`claimsPrincipal`|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.Context%2A>|`context`|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.ContextId%2A>|`contextId`|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.EndpointId%2A>|`endpointId`|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.Id%2A>|<span data-ttu-id="2dd4c-297">设置为生成的唯一 ID。</span><span class="sxs-lookup"><span data-stu-id="2dd4c-297">Set to a generated unique ID.</span></span>|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.IsPersistent%2A>|`false`|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A>|`false`|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyEffectiveTime%2A>|<span data-ttu-id="2dd4c-298">设置为由 `ValidFrom` 参数确定的 <xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidFrom%2A> 属性的值。</span><span class="sxs-lookup"><span data-stu-id="2dd4c-298">Set to the value of the <xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidFrom%2A> property as determined by the `ValidFrom` parameter.</span></span>|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyExpirationTime%2A>|<span data-ttu-id="2dd4c-299">由 `ValidTo` 参数确定的 <xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidTo%2A> 属性的值。</span><span class="sxs-lookup"><span data-stu-id="2dd4c-299">The value of the <xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidTo%2A> property as determined by the `ValidTo` parameter.</span></span>|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyGeneration%2A>|`null`|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.SecurityKeys%2A>|<span data-ttu-id="2dd4c-300">包含 `key` 的单个元素，如果 `key` `null`，则为生成的128位对称密钥。</span><span class="sxs-lookup"><span data-stu-id="2dd4c-300">Contains single element that is either `key` or, if `key` is `null`, a generated 128 bit symmetric key.</span></span> <span data-ttu-id="2dd4c-301">**注意：** 默认实现不使用此属性。</span><span class="sxs-lookup"><span data-stu-id="2dd4c-301">**Note:**  The default implementation does not use this property.</span></span> <span data-ttu-id="2dd4c-302">签名和加密密钥由处理令牌的 <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> 应用的 cookie 转换决定。</span><span class="sxs-lookup"><span data-stu-id="2dd4c-302">Signing and encryption keys are dictated by the cookie transforms applied by the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> that processes the token.</span></span>|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidFrom%2A>|<span data-ttu-id="2dd4c-303">`validFrom` 参数的值，或者，如果 `validFrom` `null`<xref:System.DateTime.UtcNow%2A>，则为。</span><span class="sxs-lookup"><span data-stu-id="2dd4c-303">The value of the `validFrom` parameter, or, if `validFrom` is `null`, <xref:System.DateTime.UtcNow%2A>.</span></span>|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidTo%2A>|<span data-ttu-id="2dd4c-304">`validFrom` 参数的值。</span><span class="sxs-lookup"><span data-stu-id="2dd4c-304">The value of the `validFrom` parameter.</span></span> <span data-ttu-id="2dd4c-305">如果 `validFrom` `null`，则 <xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidFrom%2A> 属性的值（由 `validFrom` 参数确定）加上 <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultTokenLifetime%2A?displayProperty=nameWithType> 属性。</span><span class="sxs-lookup"><span data-stu-id="2dd4c-305">If `validFrom` is `null`, the value of the <xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidFrom%2A> property (as determined by the `validFrom` parameter) plus the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultTokenLifetime%2A?displayProperty=nameWithType> property.</span></span>|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2dd4c-306"><paramref name="claimsPrincipal" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="2dd4c-306"><paramref name="claimsPrincipal" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="2dd4c-307">- 或 -</span><span class="sxs-lookup"><span data-stu-id="2dd4c-307">-or-</span></span> 
<span data-ttu-id="2dd4c-308"><paramref name="claimsPrincipal" /> 的 <see cref="P:System.Security.Claims.ClaimsPrincipal.Identities" /> 属性为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="2dd4c-308">The <see cref="P:System.Security.Claims.ClaimsPrincipal.Identities" /> property of <paramref name="claimsPrincipal" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="2dd4c-309">- 或 -</span><span class="sxs-lookup"><span data-stu-id="2dd4c-309">-or-</span></span> 
 <span data-ttu-id="2dd4c-310"><paramref name="contextId" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="2dd4c-310"><paramref name="contextId" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="2dd4c-311"><paramref name="validFrom" /> 大于或等于 <paramref name="validTo" />。</span><span class="sxs-lookup"><span data-stu-id="2dd4c-311"><paramref name="validFrom" /> is greater than or equal to <paramref name="validTo" />.</span></span>  
  
<span data-ttu-id="2dd4c-312">- 或 -</span><span class="sxs-lookup"><span data-stu-id="2dd4c-312">-or-</span></span> 
 <span data-ttu-id="2dd4c-313">当前时间小于 <paramref name="validTo" />。</span><span class="sxs-lookup"><span data-stu-id="2dd4c-313"><paramref name="validTo" /> is less than the current time.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ClaimsPrincipal">
      <MemberSignature Language="C#" Value="public System.Security.Claims.ClaimsPrincipal ClaimsPrincipal { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Claims.ClaimsPrincipal ClaimsPrincipal" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SessionSecurityToken.ClaimsPrincipal" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ClaimsPrincipal As ClaimsPrincipal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Claims::ClaimsPrincipal ^ ClaimsPrincipal { System::Security::Claims::ClaimsPrincipal ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ClaimsPrincipal : System.Security.Claims.ClaimsPrincipal" Usage="System.IdentityModel.Tokens.SessionSecurityToken.ClaimsPrincipal" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Claims.ClaimsPrincipal</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2dd4c-314">获取与此会话关联的声明主体。</span><span class="sxs-lookup"><span data-stu-id="2dd4c-314">Gets the claims principal associated with the session.</span></span></summary>
        <value><span data-ttu-id="2dd4c-315">声明主体。</span><span class="sxs-lookup"><span data-stu-id="2dd4c-315">The claims principal.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Context">
      <MemberSignature Language="C#" Value="public string Context { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Context" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SessionSecurityToken.Context" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Context As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Context { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Context : string" Usage="System.IdentityModel.Tokens.SessionSecurityToken.Context" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2dd4c-316">获取用户指定上下文的值。</span><span class="sxs-lookup"><span data-stu-id="2dd4c-316">Gets a user specified context value.</span></span></summary>
        <value><span data-ttu-id="2dd4c-317">用户指定上下文的值。</span><span class="sxs-lookup"><span data-stu-id="2dd4c-317">The user specified context value.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2dd4c-318">您可以使用此属性来存储特定于应用程序的上下文。</span><span class="sxs-lookup"><span data-stu-id="2dd4c-318">You can use this property to store application-specific context.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContextId">
      <MemberSignature Language="C#" Value="public System.Xml.UniqueId ContextId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.UniqueId ContextId" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SessionSecurityToken.ContextId" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContextId As UniqueId" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::UniqueId ^ ContextId { System::Xml::UniqueId ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ContextId : System.Xml.UniqueId" Usage="System.IdentityModel.Tokens.SessionSecurityToken.ContextId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.UniqueId</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2dd4c-319">获取会话上下文标识符。</span><span class="sxs-lookup"><span data-stu-id="2dd4c-319">Gets the session context identifier.</span></span></summary>
        <value><span data-ttu-id="2dd4c-320">会话上下文标识符。</span><span class="sxs-lookup"><span data-stu-id="2dd4c-320">The session context identifier.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2dd4c-321">上下文标识符在所有会话令牌中是唯一的。</span><span class="sxs-lookup"><span data-stu-id="2dd4c-321">The context identifier is unique across all session tokens.</span></span>  
  
 <span data-ttu-id="2dd4c-322"><xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey> 类使用上下文 ID 和密钥生成来生成 <xref:System.IdentityModel.Tokens.SessionSecurityTokenCache>中的令牌的密钥。</span><span class="sxs-lookup"><span data-stu-id="2dd4c-322">The <xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey> class uses both the context ID and the key generation to generate a key for the token in the <xref:System.IdentityModel.Tokens.SessionSecurityTokenCache>.</span></span>  
  
 <span data-ttu-id="2dd4c-323"><xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> 类将此属性序列化为 `<wsc:SecurityContextToken>` 元素的 `<Identifier>` 子元素。</span><span class="sxs-lookup"><span data-stu-id="2dd4c-323">The <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> class serializes this property as the `<Identifier>` child element of the `<wsc:SecurityContextToken>` element.</span></span> <span data-ttu-id="2dd4c-324">有关详细信息，请参阅 <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken%2A?displayProperty=nameWithType> 方法的文档。</span><span class="sxs-lookup"><span data-stu-id="2dd4c-324">For more information, see the documentation for the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey" />
      </Docs>
    </Member>
    <Member MemberName="EndpointId">
      <MemberSignature Language="C#" Value="public string EndpointId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string EndpointId" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SessionSecurityToken.EndpointId" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EndpointId As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ EndpointId { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EndpointId : string" Usage="System.IdentityModel.Tokens.SessionSecurityToken.EndpointId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2dd4c-325">获取限定此标识范围的终点 ID。</span><span class="sxs-lookup"><span data-stu-id="2dd4c-325">Gets the ID of the endpoint to which this token is scoped.</span></span></summary>
        <value><span data-ttu-id="2dd4c-326">终点的 ID。</span><span class="sxs-lookup"><span data-stu-id="2dd4c-326">The ID of the endpoint.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="2dd4c-327">如果 `null`<xref:System.IdentityModel.Tokens.SessionSecurityToken.EndpointId%2A> 属性，则会按 <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> 类处理会话令牌的全局作用域。</span><span class="sxs-lookup"><span data-stu-id="2dd4c-327">If the <xref:System.IdentityModel.Tokens.SessionSecurityToken.EndpointId%2A> property is `null`, the session token is treated as globally scoped by the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> class.</span></span> <span data-ttu-id="2dd4c-328">这可能会带来潜在的安全风险。</span><span class="sxs-lookup"><span data-stu-id="2dd4c-328">This can present a potential security risk.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetObjectData">
      <MemberSignature Language="C#" Value="public virtual void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SessionSecurityToken.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub GetObjectData (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="abstract member GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit&#xA;override this.GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit" Usage="sessionSecurityToken.GetObjectData (info, context)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info"><span data-ttu-id="2dd4c-329">序列化的对象数据。</span><span class="sxs-lookup"><span data-stu-id="2dd4c-329">The serialized object data.</span></span></param>
        <param name="context"><span data-ttu-id="2dd4c-330">与源或目标有关的上下文信息。</span><span class="sxs-lookup"><span data-stu-id="2dd4c-330">The contextual information about the source or destination.</span></span></param>
        <summary><span data-ttu-id="2dd4c-331">设置需要序列化会话安全标记的信息 <see cref="T:System.Runtime.Serialization.SerializationInfo" />。</span><span class="sxs-lookup"><span data-stu-id="2dd4c-331">Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information necessary to serialize the session security token.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Id">
      <MemberSignature Language="C#" Value="public override string Id { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Id" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SessionSecurityToken.Id" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Id As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Id { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Id : string" Usage="System.IdentityModel.Tokens.SessionSecurityToken.Id" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2dd4c-332">获取此标记的唯一标识符。</span><span class="sxs-lookup"><span data-stu-id="2dd4c-332">Gets the unique identifier of this token.</span></span></summary>
        <value><span data-ttu-id="2dd4c-333">令牌 ID。</span><span class="sxs-lookup"><span data-stu-id="2dd4c-333">The token ID.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2dd4c-334"><xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> 类将此属性序列化为 `<wsc:SecurityContextToken>` 元素的 `Id` 属性。</span><span class="sxs-lookup"><span data-stu-id="2dd4c-334">The <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> class serializes this property as the `Id` attribute of the `<wsc:SecurityContextToken>` element.</span></span> <span data-ttu-id="2dd4c-335">有关详细信息，请参阅 <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken%2A?displayProperty=nameWithType> 方法的文档。</span><span class="sxs-lookup"><span data-stu-id="2dd4c-335">For more information, see the documentation for the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPersistent">
      <MemberSignature Language="C#" Value="public bool IsPersistent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPersistent" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SessionSecurityToken.IsPersistent" />
      <MemberSignature Language="VB.NET" Value="Public Property IsPersistent As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsPersistent { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsPersistent : bool with get, set" Usage="System.IdentityModel.Tokens.SessionSecurityToken.IsPersistent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2dd4c-336">获取或设置指示是否保留此标记表示的 Cookie 的值。</span><span class="sxs-lookup"><span data-stu-id="2dd4c-336">Gets or sets a value that indicates whether the cookie represented by this token is persistent.</span></span></summary>
        <value><span data-ttu-id="2dd4c-337">如果 cookie 为持久的，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="2dd4c-337"><see langword="true" /> if the cookie is persistent; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2dd4c-338">如果 `true`<xref:System.IdentityModel.Tokens.SessionSecurityToken.IsPersistent%2A> 属性，则会将 cookie 编写为永久性 cookie。</span><span class="sxs-lookup"><span data-stu-id="2dd4c-338">If the <xref:System.IdentityModel.Tokens.SessionSecurityToken.IsPersistent%2A> property is `true`, the cookie is written as a persistent cookie.</span></span> <span data-ttu-id="2dd4c-339">永久性 cookie 在关闭浏览器后保持有效状态，直到其过期。</span><span class="sxs-lookup"><span data-stu-id="2dd4c-339">Persistent cookies remain valid after the browser is closed until they expire.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReferenceMode">
      <MemberSignature Language="C#" Value="public bool IsReferenceMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReferenceMode" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode" />
      <MemberSignature Language="VB.NET" Value="Public Property IsReferenceMode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReferenceMode { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsReferenceMode : bool with get, set" Usage="System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2dd4c-340">获取或设置指示引用安全令牌是否在会话模式下运行的值。</span><span class="sxs-lookup"><span data-stu-id="2dd4c-340">Gets or sets a value that indicates whether the session security token is operating in reference mode.</span></span></summary>
        <value><span data-ttu-id="2dd4c-341">如果标记在会话模式操作，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="2dd4c-341"><see langword="true" /> if the token is operating in session mode; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2dd4c-342">在引用模式下，在序列化过程中生成一个简单的项目，令牌材料存储在与令牌处理程序关联的令牌缓存中。</span><span class="sxs-lookup"><span data-stu-id="2dd4c-342">In reference mode, a simple artifact is produced during serialization and the token material is stored in the token cache that is associated with the token handler.</span></span> <span data-ttu-id="2dd4c-343">令牌缓存是派生自 <xref:System.IdentityModel.Tokens.SessionSecurityTokenCache>的类的实例。</span><span class="sxs-lookup"><span data-stu-id="2dd4c-343">The token cache is an instance of a class that derives from <xref:System.IdentityModel.Tokens.SessionSecurityTokenCache>.</span></span> <span data-ttu-id="2dd4c-344">对于 Web 场方案，令牌缓存必须在场中的所有节点上运行。</span><span class="sxs-lookup"><span data-stu-id="2dd4c-344">For Web Farm scenarios, the token cache must operate across all nodes in the farm.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="2dd4c-345">若要在引用模式下操作，Microsoft 建议为 global.asax.cs 文件中的 <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SessionSecurityTokenCreated?displayProperty=nameWithType> 事件提供处理程序，并在 <xref:System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs.SessionToken%2A?displayProperty=nameWithType> 属性中传递的标记上设置 <xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="2dd4c-345">To operate in reference mode, Microsoft recommends providing a handler for the <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SessionSecurityTokenCreated?displayProperty=nameWithType> event in the global.asax.cs file and setting the <xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A> property on the token passed in the <xref:System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs.SessionToken%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="2dd4c-346">这将确保会话令牌在每个请求的引用模式下运行，并且优于仅设置会话身份验证模块上的 <xref:System.IdentityModel.Services.SessionAuthenticationModule.IsReferenceMode%2A?displayProperty=nameWithType> 属性。</span><span class="sxs-lookup"><span data-stu-id="2dd4c-346">This will ensure that the session token operates in reference mode for every request and is favored over merely setting the <xref:System.IdentityModel.Services.SessionAuthenticationModule.IsReferenceMode%2A?displayProperty=nameWithType> property on the Session Authentication Module.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IdentityModel.Tokens.SessionSecurityTokenCache" />
        <altmember cref="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler" />
        <altmember cref="P:System.IdentityModel.Services.SessionAuthenticationModule.IsReferenceMode" />
      </Docs>
    </Member>
    <Member MemberName="KeyEffectiveTime">
      <MemberSignature Language="C#" Value="public DateTime KeyEffectiveTime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime KeyEffectiveTime" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SessionSecurityToken.KeyEffectiveTime" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property KeyEffectiveTime As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime KeyEffectiveTime { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.KeyEffectiveTime : DateTime" Usage="System.IdentityModel.Tokens.SessionSecurityToken.KeyEffectiveTime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2dd4c-347">获取此安全令牌有效的时间。</span><span class="sxs-lookup"><span data-stu-id="2dd4c-347">Gets the time instant from which the key in this token is valid.</span></span></summary>
        <value><span data-ttu-id="2dd4c-348">密钥生效的有效时间。</span><span class="sxs-lookup"><span data-stu-id="2dd4c-348">The time instant from which the key is effective.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyExpirationTime">
      <MemberSignature Language="C#" Value="public DateTime KeyExpirationTime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime KeyExpirationTime" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SessionSecurityToken.KeyExpirationTime" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property KeyExpirationTime As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime KeyExpirationTime { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.KeyExpirationTime : DateTime" Usage="System.IdentityModel.Tokens.SessionSecurityToken.KeyExpirationTime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2dd4c-349">获取此安全令牌失效之后的有效的时间。</span><span class="sxs-lookup"><span data-stu-id="2dd4c-349">Gets the time instant after which the key in this token is no longer valid.</span></span></summary>
        <value><span data-ttu-id="2dd4c-350">密钥到期的有效时间。</span><span class="sxs-lookup"><span data-stu-id="2dd4c-350">The time instant at which the key expires.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyGeneration">
      <MemberSignature Language="C#" Value="public System.Xml.UniqueId KeyGeneration { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.UniqueId KeyGeneration" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SessionSecurityToken.KeyGeneration" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property KeyGeneration As UniqueId" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::UniqueId ^ KeyGeneration { System::Xml::UniqueId ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.KeyGeneration : System.Xml.UniqueId" Usage="System.IdentityModel.Tokens.SessionSecurityToken.KeyGeneration" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.UniqueId</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2dd4c-351">获取该标记中用于密钥生成的标识符。</span><span class="sxs-lookup"><span data-stu-id="2dd4c-351">Gets the identifier for the key generation in this token.</span></span></summary>
        <value><span data-ttu-id="2dd4c-352">标记中生成密钥的唯一标识符。</span><span class="sxs-lookup"><span data-stu-id="2dd4c-352">The unique identifier for the key generation in this token.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2dd4c-353"><xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyGeneration%2A> 属性在会话令牌中是唯一的。</span><span class="sxs-lookup"><span data-stu-id="2dd4c-353">The <xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyGeneration%2A> property is unique within a session token.</span></span> <span data-ttu-id="2dd4c-354">发出会话令牌时，它只有上下文 ID，可以通过 <xref:System.IdentityModel.Tokens.SessionSecurityToken.ContextId%2A> 属性访问该 ID。</span><span class="sxs-lookup"><span data-stu-id="2dd4c-354">When a session token is issued it has only a context ID, which is accessible through the <xref:System.IdentityModel.Tokens.SessionSecurityToken.ContextId%2A> property.</span></span> <span data-ttu-id="2dd4c-355">续订会话令牌后，会添加密钥生成。</span><span class="sxs-lookup"><span data-stu-id="2dd4c-355">When the session token is renewed, the key generation is added.</span></span>  
  
 <span data-ttu-id="2dd4c-356"><xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey> 类使用上下文 ID 和密钥生成来生成 <xref:System.IdentityModel.Tokens.SessionSecurityTokenCache>中的令牌的密钥。</span><span class="sxs-lookup"><span data-stu-id="2dd4c-356">The <xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey> class uses both the context ID and the key generation to generate a key for the token in the <xref:System.IdentityModel.Tokens.SessionSecurityTokenCache>.</span></span>  
  
 <span data-ttu-id="2dd4c-357"><xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> 类将此属性序列化为 `<wsc:SecurityContextToken>` 元素的 `<Instance>` 子元素。</span><span class="sxs-lookup"><span data-stu-id="2dd4c-357">The <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> class serializes this property as the `<Instance>` child element of the `<wsc:SecurityContextToken>` element.</span></span> <span data-ttu-id="2dd4c-358">有关详细信息，请参阅 <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken%2A?displayProperty=nameWithType> 方法的文档。</span><span class="sxs-lookup"><span data-stu-id="2dd4c-358">For more information, see the documentation for the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey" />
      </Docs>
    </Member>
    <Member MemberName="SecureConversationVersion">
      <MemberSignature Language="C#" Value="public Uri SecureConversationVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri SecureConversationVersion" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SessionSecurityToken.SecureConversationVersion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SecureConversationVersion As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ SecureConversationVersion { Uri ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SecureConversationVersion : Uri" Usage="System.IdentityModel.Tokens.SessionSecurityToken.SecureConversationVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2dd4c-359">获取一个 URI，标识用于序列化此会话安全令牌的 WS 安全会话的版本。</span><span class="sxs-lookup"><span data-stu-id="2dd4c-359">Gets a URI that identifies the version of WS-Secure Conversation that is used to serialize this session security token.</span></span></summary>
        <value><span data-ttu-id="2dd4c-360">一个 URI，标识用于序列化此令牌的 WS 安全会话的版本。</span><span class="sxs-lookup"><span data-stu-id="2dd4c-360">The URI that identifies the version of WS-Secure Conversation that is used to serialize this token.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2dd4c-361"><xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> 基类支持 WS 安全会话 Feb2005 和 WS 安全会话1.3。</span><span class="sxs-lookup"><span data-stu-id="2dd4c-361">The <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> base class supports WS-Secure Conversation Feb2005 and WS-Secure Conversation 1.3.</span></span> <span data-ttu-id="2dd4c-362">这些版本的 WS 安全会话的 Uri 分别为 "<http://schemas.xmlsoap.org/ws/2005/02/sc>" 和 "<http://docs.oasis-open.org/ws-sx/ws-secureconversation/200512>"。</span><span class="sxs-lookup"><span data-stu-id="2dd4c-362">The URIs for these versions of WS-Secure Conversation are "<http://schemas.xmlsoap.org/ws/2005/02/sc>" and "<http://docs.oasis-open.org/ws-sx/ws-secureconversation/200512>", respectively.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SecurityKeys">
      <MemberSignature Language="C#" Value="public override System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.Tokens.SecurityKey&gt; SecurityKeys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.IdentityModel.Tokens.SecurityKey&gt; SecurityKeys" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SessionSecurityToken.SecurityKeys" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property SecurityKeys As ReadOnlyCollection(Of SecurityKey)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::ObjectModel::ReadOnlyCollection&lt;System::IdentityModel::Tokens::SecurityKey ^&gt; ^ SecurityKeys { System::Collections::ObjectModel::ReadOnlyCollection&lt;System::IdentityModel::Tokens::SecurityKey ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SecurityKeys : System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.Tokens.SecurityKey&gt;" Usage="System.IdentityModel.Tokens.SessionSecurityToken.SecurityKeys" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.Tokens.SecurityKey&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2dd4c-363">获取与此会话关联的键 。</span><span class="sxs-lookup"><span data-stu-id="2dd4c-363">Gets the keys associated with this session.</span></span> <span data-ttu-id="2dd4c-364">这通常是一个唯一密钥。</span><span class="sxs-lookup"><span data-stu-id="2dd4c-364">This is usually a single key.</span></span></summary>
        <value><span data-ttu-id="2dd4c-365">与会话关联的密钥。</span><span class="sxs-lookup"><span data-stu-id="2dd4c-365">The keys associated with the session.</span></span> <span data-ttu-id="2dd4c-366">这通常是一个唯一密钥。</span><span class="sxs-lookup"><span data-stu-id="2dd4c-366">There is usually a single key.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="2dd4c-367">默认实现不使用此属性。</span><span class="sxs-lookup"><span data-stu-id="2dd4c-367">The default implementation does not use this property.</span></span> <span data-ttu-id="2dd4c-368">签名和加密密钥由处理令牌的 <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> 应用的 cookie 转换决定。</span><span class="sxs-lookup"><span data-stu-id="2dd4c-368">Signing and encryption keys are dictated by the cookie transforms applied by the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> that processes the token.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidFrom">
      <MemberSignature Language="C#" Value="public override DateTime ValidFrom { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime ValidFrom" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SessionSecurityToken.ValidFrom" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ValidFrom As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property DateTime ValidFrom { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.ValidFrom : DateTime" Usage="System.IdentityModel.Tokens.SessionSecurityToken.ValidFrom" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2dd4c-369">获取此标记有效的时间。</span><span class="sxs-lookup"><span data-stu-id="2dd4c-369">Gets the time instant from which the token is valid.</span></span></summary>
        <value><span data-ttu-id="2dd4c-370">从标记变为有效的时间。</span><span class="sxs-lookup"><span data-stu-id="2dd4c-370">The time from which the token is valid.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidTo">
      <MemberSignature Language="C#" Value="public override DateTime ValidTo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime ValidTo" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SessionSecurityToken.ValidTo" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ValidTo As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property DateTime ValidTo { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.ValidTo : DateTime" Usage="System.IdentityModel.Tokens.SessionSecurityToken.ValidTo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2dd4c-371">获取时间不再有效之后的有效的时间。</span><span class="sxs-lookup"><span data-stu-id="2dd4c-371">Gets the time instant after which the token is no longer valid.</span></span></summary>
        <value><span data-ttu-id="2dd4c-372">标记之后的时间不再有效。</span><span class="sxs-lookup"><span data-stu-id="2dd4c-372">The time after which the token is no longer valid.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
