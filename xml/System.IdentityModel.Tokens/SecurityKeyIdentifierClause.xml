<Type Name="SecurityKeyIdentifierClause" FullName="System.IdentityModel.Tokens.SecurityKeyIdentifierClause">
  <Metadata><Meta Name="ms.openlocfilehash" Value="ba776f6f8a2b6f20f50d2f9ee22992a9a7d9878a" /><Meta Name="ms.sourcegitcommit" Value="b6b9d5f3f9c7eb43f14a8a1a68d044603cb8ed73" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="05/18/2020" /><Meta Name="ms.locfileid" Value="83537566" /></Metadata><TypeSignature Language="C#" Value="public abstract class SecurityKeyIdentifierClause" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit SecurityKeyIdentifierClause extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class SecurityKeyIdentifierClause" />
  <TypeSignature Language="C++ CLI" Value="public ref class SecurityKeyIdentifierClause abstract" />
  <TypeSignature Language="F#" Value="type SecurityKeyIdentifierClause = class" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
    <AssemblyVersion>4.7.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="0f329-101">表示密钥标识符子句的抽象基类。</span><span class="sxs-lookup"><span data-stu-id="0f329-101">Represents an abstract base class for a key identifier clause.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f329-102">除非创建自定义安全令牌服务，否则，通常不需要使用 <xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause>。</span><span class="sxs-lookup"><span data-stu-id="0f329-102">Typically, the <xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause> does not need to be used, other than when a custom security token service is created.</span></span> <span data-ttu-id="0f329-103">当安全令牌服务返回安全令牌时，已颁发的安全令牌包含对附加的和未附加的安全令牌的引用。</span><span class="sxs-lookup"><span data-stu-id="0f329-103">When a security token service returns a security token, the issued security token contains references to attached and unattached security tokens.</span></span> <span data-ttu-id="0f329-104">附加引用所引用的是包含在 SOAP 消息的安全标头中的安全令牌，而未附加引用则引用未包含在 SOAP 消息的安全标头中的安全令牌。</span><span class="sxs-lookup"><span data-stu-id="0f329-104">Attached references refer to security tokens that are contained within the security header of a SOAP message and unattached references reference security tokens that are not included within the security header of a SOAP message.</span></span> <span data-ttu-id="0f329-105">这些引用通常确认已颁发的安全令牌的真实性。</span><span class="sxs-lookup"><span data-stu-id="0f329-105">These references typically affirm the authenticity of the issued security token.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="0f329-106">初始化 <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="0f329-106">Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SecurityKeyIdentifierClause (string clauseType);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(string clauseType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (clauseType As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; SecurityKeyIdentifierClause(System::String ^ clauseType);" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Tokens.SecurityKeyIdentifierClause : string -&gt; System.IdentityModel.Tokens.SecurityKeyIdentifierClause" Usage="new System.IdentityModel.Tokens.SecurityKeyIdentifierClause clauseType" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="clauseType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="clauseType"><span data-ttu-id="0f329-107">密钥标识符子句类型。</span><span class="sxs-lookup"><span data-stu-id="0f329-107">The key identifier clause type.</span></span> <span data-ttu-id="0f329-108">设置 <see cref="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.ClauseType" /> 属性的值。</span><span class="sxs-lookup"><span data-stu-id="0f329-108">Sets the value of the <see cref="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.ClauseType" /> property.</span></span></param>
        <summary><span data-ttu-id="0f329-109">使用指定的密钥标识符子句类型初始化 <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="0f329-109">Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> class using the specified key identifier clause type.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f329-110">在此安全密钥标识符序列化为 XML 时，`clauseType` 参数将序列化为 `ValueType` 元素的 `<SecurityTokenReference>` 属性。</span><span class="sxs-lookup"><span data-stu-id="0f329-110">When this security key identifier is serialized into XML, the `clauseType` parameter is serialized as the `ValueType` attribute of the `<SecurityTokenReference>` element.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SecurityKeyIdentifierClause (string clauseType, byte[] nonce, int length);" FrameworkAlternate="dotnet-plat-ext-3.1;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(string clauseType, unsigned int8[] nonce, int32 length) cil managed" FrameworkAlternate="dotnet-plat-ext-3.1;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.#ctor(System.String,System.Byte[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (clauseType As String, nonce As Byte(), length As Integer)" FrameworkAlternate="dotnet-plat-ext-3.1;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; SecurityKeyIdentifierClause(System::String ^ clauseType, cli::array &lt;System::Byte&gt; ^ nonce, int length);" FrameworkAlternate="dotnet-plat-ext-3.1;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Tokens.SecurityKeyIdentifierClause : string * byte[] * int -&gt; System.IdentityModel.Tokens.SecurityKeyIdentifierClause" Usage="new System.IdentityModel.Tokens.SecurityKeyIdentifierClause (clauseType, nonce, length)" FrameworkAlternate="dotnet-plat-ext-3.1;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C#" Value="protected SecurityKeyIdentifierClause (string clauseType, byte[] derivationNonce, int derivationLength);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(string clauseType, unsigned int8[] derivationNonce, int32 derivationLength) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (clauseType As String, derivationNonce As Byte(), derivationLength As Integer)" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; SecurityKeyIdentifierClause(System::String ^ clauseType, cli::array &lt;System::Byte&gt; ^ derivationNonce, int derivationLength);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Tokens.SecurityKeyIdentifierClause : string * byte[] * int -&gt; System.IdentityModel.Tokens.SecurityKeyIdentifierClause" Usage="new System.IdentityModel.Tokens.SecurityKeyIdentifierClause (clauseType, derivationNonce, derivationLength)" FrameworkAlternate="xamarinmac-3.0" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="clauseType" Type="System.String" Index="0" />
        <Parameter Name="nonce" Type="System.Byte[]" Index="1" FrameworkAlternate="dotnet-plat-ext-3.1;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="derivationNonce" Type="System.Byte[]" Index="1" FrameworkAlternate="xamarinmac-3.0" />
        <Parameter Name="length" Type="System.Int32" Index="2" FrameworkAlternate="dotnet-plat-ext-3.1;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="derivationLength" Type="System.Int32" Index="2" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="clauseType"><span data-ttu-id="0f329-111">密钥标识符子句类型。</span><span class="sxs-lookup"><span data-stu-id="0f329-111">The key identifier clause type.</span></span> <span data-ttu-id="0f329-112">设置 <see cref="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.ClauseType" /> 属性的值。</span><span class="sxs-lookup"><span data-stu-id="0f329-112">Sets the value of the <see cref="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.ClauseType" /> property.</span></span></param>
        <param name="nonce"><span data-ttu-id="0f329-113">一个 <see cref="T:System.Byte" /> 数组，包含用于创建派生密钥的 Nonce。</span><span class="sxs-lookup"><span data-stu-id="0f329-113">An array of <see cref="T:System.Byte" /> that contains the nonce that was used to create a derived key.</span></span> <span data-ttu-id="0f329-114">设置 <see cref="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.GetDerivationNonce" /> 方法所返回的值。</span><span class="sxs-lookup"><span data-stu-id="0f329-114">Sets the value that is returned by the <see cref="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.GetDerivationNonce" /> method.</span></span></param>
        <param name="derivationNonce"><span data-ttu-id="0f329-115">一个 <see cref="T:System.Byte" /> 数组，包含用于创建派生密钥的 Nonce。</span><span class="sxs-lookup"><span data-stu-id="0f329-115">An array of <see cref="T:System.Byte" /> that contains the nonce that was used to create a derived key.</span></span> <span data-ttu-id="0f329-116">设置 <see cref="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.GetDerivationNonce" /> 方法所返回的值。</span><span class="sxs-lookup"><span data-stu-id="0f329-116">Sets the value that is returned by the <see cref="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.GetDerivationNonce" /> method.</span></span></param>
        <param name="length"><span data-ttu-id="0f329-117">派生密钥的大小。</span><span class="sxs-lookup"><span data-stu-id="0f329-117">The size of the derived key.</span></span> <span data-ttu-id="0f329-118">设置 <see cref="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.DerivationLength" /> 属性的值。</span><span class="sxs-lookup"><span data-stu-id="0f329-118">Sets the value of the <see cref="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.DerivationLength" /> property.</span></span></param>
        <param name="derivationLength"><span data-ttu-id="0f329-119">派生密钥的大小。</span><span class="sxs-lookup"><span data-stu-id="0f329-119">The size of the derived key.</span></span> <span data-ttu-id="0f329-120">设置 <see cref="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.DerivationLength" /> 属性的值。</span><span class="sxs-lookup"><span data-stu-id="0f329-120">Sets the value of the <see cref="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.DerivationLength" /> property.</span></span></param>
        <summary><span data-ttu-id="0f329-121">使用指定的密钥标识符子句类型、Nonce 和派生密钥长度来初始化 <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="0f329-121">Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> class using the specified key identifier clause type, nonce, and the derived key length.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f329-122">Windows Communication Foundation （WCF）不支持创建隐含的派生密钥标识符。</span><span class="sxs-lookup"><span data-stu-id="0f329-122">Windows Communication Foundation (WCF) does not support the creation of implied derived key identifiers.</span></span> <span data-ttu-id="0f329-123">不过，WCF 处理包含隐含密钥标识符的传入 SOAP 消息。</span><span class="sxs-lookup"><span data-stu-id="0f329-123">However, WCF processes incoming SOAP messages that contain implied key identifier.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanCreateKey">
      <MemberSignature Language="C#" Value="public virtual bool CanCreateKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanCreateKey" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CanCreateKey" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CanCreateKey As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanCreateKey { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanCreateKey : bool" Usage="System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CanCreateKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0f329-124">获取一个值，该值指示是否可以创建密钥。</span><span class="sxs-lookup"><span data-stu-id="0f329-124">Gets a value that indicates whether a key can be created.</span></span></summary>
        <value><span data-ttu-id="0f329-125">如果可以创建密钥，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="0f329-125"><see langword="true" /> if a key can be created; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="0f329-126">默认为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="0f329-126">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f329-127">当可以使用传入构造函数的参数创建密钥时，应重写 <xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CanCreateKey%2A> 方法以返回 `true` 并实现 <xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CreateKey%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="0f329-127">When a key can be created using the parameters passed into a constructor, override the <xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CanCreateKey%2A> method to return `true` and implement the <xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CreateKey%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClauseType">
      <MemberSignature Language="C#" Value="public string ClauseType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ClauseType" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.ClauseType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ClauseType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ClauseType { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ClauseType : string" Usage="System.IdentityModel.Tokens.SecurityKeyIdentifierClause.ClauseType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0f329-128">获取密钥标识符子句类型。</span><span class="sxs-lookup"><span data-stu-id="0f329-128">Gets the key identifier clause type.</span></span></summary>
        <value><span data-ttu-id="0f329-129">密钥标识符子句类型。</span><span class="sxs-lookup"><span data-stu-id="0f329-129">The key identifier clause type.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateKey">
      <MemberSignature Language="C#" Value="public virtual System.IdentityModel.Tokens.SecurityKey CreateKey ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IdentityModel.Tokens.SecurityKey CreateKey() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CreateKey" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateKey () As SecurityKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IdentityModel::Tokens::SecurityKey ^ CreateKey();" />
      <MemberSignature Language="F#" Value="abstract member CreateKey : unit -&gt; System.IdentityModel.Tokens.SecurityKey&#xA;override this.CreateKey : unit -&gt; System.IdentityModel.Tokens.SecurityKey" Usage="securityKeyIdentifierClause.CreateKey " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityKey</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0f329-130">基于传入构造函数的参数创建密钥。</span><span class="sxs-lookup"><span data-stu-id="0f329-130">Creates a key based on the parameters passed into the constructor.</span></span></summary>
        <returns><span data-ttu-id="0f329-131">一个包含已创建的密钥的 <see cref="T:System.IdentityModel.Tokens.SecurityKey" />。</span><span class="sxs-lookup"><span data-stu-id="0f329-131">A <see cref="T:System.IdentityModel.Tokens.SecurityKey" /> that contains the created key.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f329-132">当可以使用传入构造函数的参数创建密钥时，应重写 <xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CanCreateKey%2A> 方法以返回 `true` 并实现 <xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CreateKey%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="0f329-132">When a key can be created using the parameters passed into a constructor, override the <xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CanCreateKey%2A> method to return `true` and implement the <xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CreateKey%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DerivationLength">
      <MemberSignature Language="C#" Value="public int DerivationLength { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 DerivationLength" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.DerivationLength" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DerivationLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int DerivationLength { int get(); };" />
      <MemberSignature Language="F#" Value="member this.DerivationLength : int" Usage="System.IdentityModel.Tokens.SecurityKeyIdentifierClause.DerivationLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0f329-133">获取派生密钥的大小。</span><span class="sxs-lookup"><span data-stu-id="0f329-133">Gets the size of the derived key.</span></span></summary>
        <value><span data-ttu-id="0f329-134">派生密钥的大小。</span><span class="sxs-lookup"><span data-stu-id="0f329-134">The size of the derived key.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f329-135">Windows Communication Foundation （WCF）不支持创建隐含的派生密钥标识符。</span><span class="sxs-lookup"><span data-stu-id="0f329-135">Windows Communication Foundation (WCF) does not support the creation of implied derived key identifiers.</span></span> <span data-ttu-id="0f329-136">不过，WCF 处理包含隐含密钥标识符的传入 SOAP 消息。</span><span class="sxs-lookup"><span data-stu-id="0f329-136">However, WCF processes incoming SOAP messages that contain implied key identifier.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDerivationNonce">
      <MemberSignature Language="C#" Value="public byte[] GetDerivationNonce ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] GetDerivationNonce() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.GetDerivationNonce" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDerivationNonce () As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ GetDerivationNonce();" />
      <MemberSignature Language="F#" Value="member this.GetDerivationNonce : unit -&gt; byte[]" Usage="securityKeyIdentifierClause.GetDerivationNonce " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0f329-137">获取用于生成派生密钥的 Nonce。</span><span class="sxs-lookup"><span data-stu-id="0f329-137">Gets the nonce that was used to generate the derived key.</span></span></summary>
        <returns><span data-ttu-id="0f329-138">一个 <see cref="T:System.Byte" /> 数组，包含用于生成派生密钥的 Nonce。</span><span class="sxs-lookup"><span data-stu-id="0f329-138">An array of <see cref="T:System.Byte" /> that contains the nonce that was used to generate the derived key.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f329-139">Windows Communication Foundation （WCF）不支持创建隐含的派生密钥标识符。</span><span class="sxs-lookup"><span data-stu-id="0f329-139">Windows Communication Foundation (WCF) does not support the creation of implied derived key identifiers.</span></span> <span data-ttu-id="0f329-140">不过，WCF 处理包含隐含密钥标识符的传入 SOAP 消息。</span><span class="sxs-lookup"><span data-stu-id="0f329-140">However, WCF processes incoming SOAP messages that contain implied key identifier.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Id">
      <MemberSignature Language="C#" Value="public string Id { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Id" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.Id" />
      <MemberSignature Language="VB.NET" Value="Public Property Id As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Id { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Id : string with get, set" Usage="System.IdentityModel.Tokens.SecurityKeyIdentifierClause.Id" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0f329-141">获取或设置密钥标识符子句 ID。</span><span class="sxs-lookup"><span data-stu-id="0f329-141">Gets or sets the key identifier clause ID.</span></span></summary>
        <value><span data-ttu-id="0f329-142">密钥标识符子句 ID。</span><span class="sxs-lookup"><span data-stu-id="0f329-142">The key identifier clause ID.</span></span> <span data-ttu-id="0f329-143">默认为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="0f329-143">The default is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f329-144">如果将此安全密钥标识符序列化为 XML，则 <xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.Id%2A> 属性将序列化为 `<SecurityTokenReference>` 元素的 `Id` 属性。</span><span class="sxs-lookup"><span data-stu-id="0f329-144">When this security key identifier is serialized into XML, the <xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.Id%2A> property is serialized as the `Id` attribute of the `<SecurityTokenReference>` element.</span></span> <span data-ttu-id="0f329-145">如果 `null`属性，则不会在 `<SecurityTokenReference>` 元素中包含 `Id` 特性。</span><span class="sxs-lookup"><span data-stu-id="0f329-145">If the property is `null`, an `Id` attribute is not included in the `<SecurityTokenReference>` element.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Matches">
      <MemberSignature Language="C#" Value="public virtual bool Matches (System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause);" FrameworkAlternate="dotnet-plat-ext-3.1;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Matches(class System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause) cil managed" FrameworkAlternate="dotnet-plat-ext-3.1;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.Matches(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Matches (keyIdentifierClause As SecurityKeyIdentifierClause) As Boolean" FrameworkAlternate="dotnet-plat-ext-3.1;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Matches(System::IdentityModel::Tokens::SecurityKeyIdentifierClause ^ keyIdentifierClause);" FrameworkAlternate="dotnet-plat-ext-3.1;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="F#" Value="abstract member Matches : System.IdentityModel.Tokens.SecurityKeyIdentifierClause -&gt; bool&#xA;override this.Matches : System.IdentityModel.Tokens.SecurityKeyIdentifierClause -&gt; bool" Usage="securityKeyIdentifierClause.Matches keyIdentifierClause" FrameworkAlternate="dotnet-plat-ext-3.1;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C#" Value="public virtual bool Matches (System.IdentityModel.Tokens.SecurityKeyIdentifierClause clause);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Matches(class System.IdentityModel.Tokens.SecurityKeyIdentifierClause clause) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Matches (clause As SecurityKeyIdentifierClause) As Boolean" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Matches(System::IdentityModel::Tokens::SecurityKeyIdentifierClause ^ clause);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="abstract member Matches : System.IdentityModel.Tokens.SecurityKeyIdentifierClause -&gt; bool&#xA;override this.Matches : System.IdentityModel.Tokens.SecurityKeyIdentifierClause -&gt; bool" Usage="securityKeyIdentifierClause.Matches clause" FrameworkAlternate="xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyIdentifierClause" Type="System.IdentityModel.Tokens.SecurityKeyIdentifierClause" Index="0" FrameworkAlternate="dotnet-plat-ext-3.1;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="clause" Type="System.IdentityModel.Tokens.SecurityKeyIdentifierClause" Index="0" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="keyIdentifierClause"><span data-ttu-id="0f329-146">要进行比较的 <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />。</span><span class="sxs-lookup"><span data-stu-id="0f329-146">A <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> to compare to.</span></span></param>
        <param name="clause"><span data-ttu-id="0f329-147">要进行比较的 <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />。</span><span class="sxs-lookup"><span data-stu-id="0f329-147">A <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> to compare to.</span></span></param>
        <summary><span data-ttu-id="0f329-148">返回一个值，该值指示此实例的密钥标识符是否等效于指定的密钥标识符子句。</span><span class="sxs-lookup"><span data-stu-id="0f329-148">Returns a value that indicates whether the key identifier for this instance is equivalent to the specified key identifier clause.</span></span></summary>
        <returns><span data-ttu-id="0f329-149">如果 <paramref name="keyIdentifierClause" /> 是与当前实例相同的实例，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="0f329-149"><see langword="true" /> if <paramref name="keyIdentifierClause" /> is the same instance as the current instance; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="0f329-150"><paramref name="keyIdentifierClause" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="0f329-150"><paramref name="keyIdentifierClause" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
