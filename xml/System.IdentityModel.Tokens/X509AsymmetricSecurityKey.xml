<Type Name="X509AsymmetricSecurityKey" FullName="System.IdentityModel.Tokens.X509AsymmetricSecurityKey">
  <Metadata><Meta Name="ms.openlocfilehash" Value="c13aad8595880d705fcb9a049366346130733304" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="70705132" /></Metadata><TypeSignature Language="C#" Value="public class X509AsymmetricSecurityKey : System.IdentityModel.Tokens.AsymmetricSecurityKey" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit X509AsymmetricSecurityKey extends System.IdentityModel.Tokens.AsymmetricSecurityKey" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.Tokens.X509AsymmetricSecurityKey" />
  <TypeSignature Language="VB.NET" Value="Public Class X509AsymmetricSecurityKey&#xA;Inherits AsymmetricSecurityKey" />
  <TypeSignature Language="C++ CLI" Value="public ref class X509AsymmetricSecurityKey : System::IdentityModel::Tokens::AsymmetricSecurityKey" />
  <TypeSignature Language="F#" Value="type X509AsymmetricSecurityKey = class&#xA;    inherit AsymmetricSecurityKey" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.IdentityModel.Tokens.AsymmetricSecurityKey</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="473ef-101">表示 X.509 证书的非对称密钥。</span><span class="sxs-lookup"><span data-stu-id="473ef-101">Represents an asymmetric key for X.509 certificates.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public X509AsymmetricSecurityKey (System.Security.Cryptography.X509Certificates.X509Certificate2 certificate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Cryptography.X509Certificates.X509Certificate2 certificate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (certificate As X509Certificate2)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; X509AsymmetricSecurityKey(System::Security::Cryptography::X509Certificates::X509Certificate2 ^ certificate);" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Tokens.X509AsymmetricSecurityKey : System.Security.Cryptography.X509Certificates.X509Certificate2 -&gt; System.IdentityModel.Tokens.X509AsymmetricSecurityKey" Usage="new System.IdentityModel.Tokens.X509AsymmetricSecurityKey certificate" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="certificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate2" />
      </Parameters>
      <Docs>
        <param name="certificate"><span data-ttu-id="473ef-102">表示 X.509 证书的 <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" />。</span><span class="sxs-lookup"><span data-stu-id="473ef-102">The <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> that represents the X.509 certificate.</span></span></param>
        <summary><span data-ttu-id="473ef-103">使用指定的 X.509 证书初始化 <see cref="T:System.IdentityModel.Tokens.X509AsymmetricSecurityKey" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="473ef-103">Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.X509AsymmetricSecurityKey" /> class using the specified X.509 certificate.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="473ef-104"><paramref name="certificate" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="473ef-104"><paramref name="certificate" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DecryptKey">
      <MemberSignature Language="C#" Value="public override byte[] DecryptKey (string algorithm, byte[] keyData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance unsigned int8[] DecryptKey(string algorithm, unsigned int8[] keyData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.DecryptKey(System.String,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function DecryptKey (algorithm As String, keyData As Byte()) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Byte&gt; ^ DecryptKey(System::String ^ algorithm, cli::array &lt;System::Byte&gt; ^ keyData);" />
      <MemberSignature Language="F#" Value="override this.DecryptKey : string * byte[] -&gt; byte[]" Usage="x509AsymmetricSecurityKey.DecryptKey (algorithm, keyData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="System.String" />
        <Parameter Name="keyData" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="algorithm"><span data-ttu-id="473ef-105">用于解密密钥的加密算法。</span><span class="sxs-lookup"><span data-stu-id="473ef-105">The cryptographic algorithm to decrypt the key.</span></span></param>
        <param name="keyData"><span data-ttu-id="473ef-106">包含加密密钥的 <see cref="T:System.Byte" /> 数组。</span><span class="sxs-lookup"><span data-stu-id="473ef-106">An array of <see cref="T:System.Byte" /> that contains the encrypted key.</span></span></param>
        <summary><span data-ttu-id="473ef-107">使用指定的加密算法解密指定的加密密钥。</span><span class="sxs-lookup"><span data-stu-id="473ef-107">Decrypts the specified encrypted key using the specified cryptographic algorithm.</span></span></summary>
        <returns><span data-ttu-id="473ef-108">包含解密密钥的 <see cref="T:System.Byte" /> 数组。</span><span class="sxs-lookup"><span data-stu-id="473ef-108">An array of <see cref="T:System.Byte" /> that contains the decrypted key.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="473ef-109">使用 <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSA15Url> 或 <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSAOAEPUrl> 字段指定算法。</span><span class="sxs-lookup"><span data-stu-id="473ef-109">Use the <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSA15Url> or <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSAOAEPUrl> fields to specify the algorithm.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="473ef-110">构造函数中指定的 X.509 证书不具有私钥。</span><span class="sxs-lookup"><span data-stu-id="473ef-110">The X.509 certificate specified in the constructor does not have a private key.</span></span>  
  
<span data-ttu-id="473ef-111">- 或 -</span><span class="sxs-lookup"><span data-stu-id="473ef-111">-or-</span></span> 
<span data-ttu-id="473ef-112">X.509 证书具有私钥，但它不是使用 <see cref="T:System.Security.Cryptography.RSA" /> 算法生成的。</span><span class="sxs-lookup"><span data-stu-id="473ef-112">The X.509 certificate has a private key, but it was not generated using the <see cref="T:System.Security.Cryptography.RSA" /> algorithm.</span></span>  
  
<span data-ttu-id="473ef-113">- 或 -</span><span class="sxs-lookup"><span data-stu-id="473ef-113">-or-</span></span> 
<span data-ttu-id="473ef-114">X.509 证书具有私钥，并且是使用 <see cref="T:System.Security.Cryptography.RSA" /> 算法生成的，但是 <see cref="P:System.Security.Cryptography.AsymmetricAlgorithm.KeyExchangeAlgorithm" /> 属性为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="473ef-114">The X.509 certificate has a private key, it was generated using the <see cref="T:System.Security.Cryptography.RSA" /> algorithm, but the <see cref="P:System.Security.Cryptography.AsymmetricAlgorithm.KeyExchangeAlgorithm" /> property is <see langword="null" />.</span></span>  
  
<span data-ttu-id="473ef-115">- 或 -</span><span class="sxs-lookup"><span data-stu-id="473ef-115">-or-</span></span> 
<span data-ttu-id="473ef-116">不支持 <paramref name="algorithm" /> 参数。</span><span class="sxs-lookup"><span data-stu-id="473ef-116">The <paramref name="algorithm" /> parameter is not supported.</span></span> <span data-ttu-id="473ef-117">支持的算法为 <see cref="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSA15Url" /> 和 <see cref="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSAOAEPUrl" />。</span><span class="sxs-lookup"><span data-stu-id="473ef-117">The supported algorithms are <see cref="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSA15Url" /> and <see cref="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSAOAEPUrl" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="EncryptKey">
      <MemberSignature Language="C#" Value="public override byte[] EncryptKey (string algorithm, byte[] keyData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance unsigned int8[] EncryptKey(string algorithm, unsigned int8[] keyData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.EncryptKey(System.String,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function EncryptKey (algorithm As String, keyData As Byte()) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Byte&gt; ^ EncryptKey(System::String ^ algorithm, cli::array &lt;System::Byte&gt; ^ keyData);" />
      <MemberSignature Language="F#" Value="override this.EncryptKey : string * byte[] -&gt; byte[]" Usage="x509AsymmetricSecurityKey.EncryptKey (algorithm, keyData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="System.String" />
        <Parameter Name="keyData" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="algorithm"><span data-ttu-id="473ef-118">用于加密密钥的加密算法。</span><span class="sxs-lookup"><span data-stu-id="473ef-118">The cryptographic algorithm to encrypt the key.</span></span></param>
        <param name="keyData"><span data-ttu-id="473ef-119">包含要加密的密钥的 <see cref="T:System.Byte" /> 数组。</span><span class="sxs-lookup"><span data-stu-id="473ef-119">An array of <see cref="T:System.Byte" /> that contains the key to encrypt.</span></span></param>
        <summary><span data-ttu-id="473ef-120">使用指定的加密算法加密指定的加密密钥。</span><span class="sxs-lookup"><span data-stu-id="473ef-120">Encrypts the specified encrypted key using the specified cryptographic algorithm.</span></span></summary>
        <returns><span data-ttu-id="473ef-121">包含加密密钥的 <see cref="T:System.Byte" /> 数组。</span><span class="sxs-lookup"><span data-stu-id="473ef-121">An array of <see cref="T:System.Byte" /> that contains the encrypted key.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="473ef-122">使用 <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSA15Url> 或 <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSAOAEPUrl> 字段指定算法。</span><span class="sxs-lookup"><span data-stu-id="473ef-122">Use the <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSA15Url> or <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSAOAEPUrl> fields to specify the algorithm.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="473ef-123">构造函数中指定的 X.509 证书所具有的公钥不是使用 <see cref="T:System.Security.Cryptography.RSA" /> 算法生成的。</span><span class="sxs-lookup"><span data-stu-id="473ef-123">The X.509 certificate specified in the constructor has a public key that was not generated using the <see cref="T:System.Security.Cryptography.RSA" /> algorithm.</span></span>  
  
<span data-ttu-id="473ef-124">- 或 -</span><span class="sxs-lookup"><span data-stu-id="473ef-124">-or-</span></span> 
<span data-ttu-id="473ef-125">不支持 <paramref name="algorithm" /> 参数。</span><span class="sxs-lookup"><span data-stu-id="473ef-125">The <paramref name="algorithm" /> parameter is not supported.</span></span> <span data-ttu-id="473ef-126">支持的算法为 <see cref="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSA15Url" /> 和 <see cref="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSAOAEPUrl" />。</span><span class="sxs-lookup"><span data-stu-id="473ef-126">The supported algorithms are <see cref="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSA15Url" /> and <see cref="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSAOAEPUrl" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetAsymmetricAlgorithm">
      <MemberSignature Language="C#" Value="public override System.Security.Cryptography.AsymmetricAlgorithm GetAsymmetricAlgorithm (string algorithm, bool privateKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.Cryptography.AsymmetricAlgorithm GetAsymmetricAlgorithm(string algorithm, bool privateKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.GetAsymmetricAlgorithm(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetAsymmetricAlgorithm (algorithm As String, privateKey As Boolean) As AsymmetricAlgorithm" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::Cryptography::AsymmetricAlgorithm ^ GetAsymmetricAlgorithm(System::String ^ algorithm, bool privateKey);" />
      <MemberSignature Language="F#" Value="override this.GetAsymmetricAlgorithm : string * bool -&gt; System.Security.Cryptography.AsymmetricAlgorithm" Usage="x509AsymmetricSecurityKey.GetAsymmetricAlgorithm (algorithm, privateKey)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.AsymmetricAlgorithm</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="System.String" />
        <Parameter Name="privateKey" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="algorithm"><span data-ttu-id="473ef-127">要创建的非对称算法。</span><span class="sxs-lookup"><span data-stu-id="473ef-127">The asymmetric algorithm to create.</span></span></param>
        <param name="privateKey"><span data-ttu-id="473ef-128">如果需要使用私钥来创建算法，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="473ef-128"><see langword="true" /> when a private key is required to create the algorithm; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="473ef-129">获取指定的非对称加密算法。</span><span class="sxs-lookup"><span data-stu-id="473ef-129">Gets the specified asymmetric cryptographic algorithm.</span></span></summary>
        <returns><span data-ttu-id="473ef-130">一个 <see cref="T:System.Security.Cryptography.AsymmetricAlgorithm" />，表示指定的非对称加密算法。</span><span class="sxs-lookup"><span data-stu-id="473ef-130">An <see cref="T:System.Security.Cryptography.AsymmetricAlgorithm" /> that represents the specified asymmetric cryptographic algorithm.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="473ef-131">使用 <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl>、<xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSA15Url>、<xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSAOAEPUrl>、<xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url> 或 <xref:System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature> 字段指定 `algorithm` 参数。</span><span class="sxs-lookup"><span data-stu-id="473ef-131">Use the <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl>, <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSA15Url>, <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSAOAEPUrl>, <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url> or <xref:System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature> fields to specify the `algorithm` parameter.</span></span>  

 <span data-ttu-id="473ef-132">由于 SHA1 出现冲突问题，Microsoft 建议使用基于 SHA256 或更好的安全模型。</span><span class="sxs-lookup"><span data-stu-id="473ef-132">Due to collision problems with SHA1, Microsoft recommends a security model based on SHA256 or better.</span></span>

 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="473ef-133"><paramref name="privateKey" /> 为 <see langword="true" />，并且构造函数中指定的 X.509 证书不具有私钥。</span><span class="sxs-lookup"><span data-stu-id="473ef-133"><paramref name="privateKey" /> is <see langword="true" /> and the X.509 certificate specified in the constructor does not have a private key.</span></span>  
  
<span data-ttu-id="473ef-134">- 或 -</span><span class="sxs-lookup"><span data-stu-id="473ef-134">-or-</span></span> 
 <span data-ttu-id="473ef-135"><paramref name="algorithm" /> 为 <see cref="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl" />，并且构造函数中指定的 X.509 证书的公钥或私钥类型不是 <see cref="T:System.Security.Cryptography.DSA" />。</span><span class="sxs-lookup"><span data-stu-id="473ef-135"><paramref name="algorithm" /> is <see cref="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl" /> and the public or private key for the X.509 certificate specified in the constructor is not of type <see cref="T:System.Security.Cryptography.DSA" />.</span></span>  
  
<span data-ttu-id="473ef-136">- 或 -</span><span class="sxs-lookup"><span data-stu-id="473ef-136">-or-</span></span> 
 <span data-ttu-id="473ef-137"><paramref name="algorithm" /> 为 <see cref="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSA15Url" />、<see cref="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSAOAEPUrl" />、<see cref="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url" /> 或 <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature" />，并且构造函数中指定的 X.509 证书的公钥或私钥类型不是 <see cref="T:System.Security.Cryptography.RSA" />。</span><span class="sxs-lookup"><span data-stu-id="473ef-137"><paramref name="algorithm" /> is <see cref="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSA15Url" />, <see cref="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSAOAEPUrl" />, <see cref="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url" /> or <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature" /> and the public or private key for the X.509 certificate specified in the constructor is not of type <see cref="T:System.Security.Cryptography.RSA" />.</span></span>  
  
<span data-ttu-id="473ef-138">- 或 -</span><span class="sxs-lookup"><span data-stu-id="473ef-138">-or-</span></span> 
 <span data-ttu-id="473ef-139">不支持 <paramref name="algorithm" />。</span><span class="sxs-lookup"><span data-stu-id="473ef-139"><paramref name="algorithm" /> is not supported.</span></span> <span data-ttu-id="473ef-140">支持的算法为 <see cref="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl" />、<see cref="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSA15Url" />、<see cref="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSAOAEPUrl" />、<see cref="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url" /> 和 <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature" />。</span><span class="sxs-lookup"><span data-stu-id="473ef-140">The supported algorithms are <see cref="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl" />, <see cref="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSA15Url" />, <see cref="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSAOAEPUrl" />, <see cref="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url" />, and <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetHashAlgorithmForSignature">
      <MemberSignature Language="C#" Value="public override System.Security.Cryptography.HashAlgorithm GetHashAlgorithmForSignature (string algorithm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.Cryptography.HashAlgorithm GetHashAlgorithmForSignature(string algorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.GetHashAlgorithmForSignature(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashAlgorithmForSignature (algorithm As String) As HashAlgorithm" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::Cryptography::HashAlgorithm ^ GetHashAlgorithmForSignature(System::String ^ algorithm);" />
      <MemberSignature Language="F#" Value="override this.GetHashAlgorithmForSignature : string -&gt; System.Security.Cryptography.HashAlgorithm" Usage="x509AsymmetricSecurityKey.GetHashAlgorithmForSignature algorithm" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.HashAlgorithm</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="algorithm"><span data-ttu-id="473ef-141">哈希算法。</span><span class="sxs-lookup"><span data-stu-id="473ef-141">The hash algorithm.</span></span></param>
        <summary><span data-ttu-id="473ef-142">获取用于生成数字签名的哈希值的加密算法。</span><span class="sxs-lookup"><span data-stu-id="473ef-142">Gets a cryptographic algorithm that generates a hash for a digital signature.</span></span></summary>
        <returns><span data-ttu-id="473ef-143">一个 <see cref="T:System.Security.Cryptography.HashAlgorithm" />，它生成数字签名的哈希值。</span><span class="sxs-lookup"><span data-stu-id="473ef-143">A <see cref="T:System.Security.Cryptography.HashAlgorithm" /> that generates hashes for digital signatures.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="473ef-144">使用 <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl>、<xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url> 或 <xref:System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature> 字段指定 `algorithm` 参数。</span><span class="sxs-lookup"><span data-stu-id="473ef-144">Use the <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl>, <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url> or <xref:System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature> fields to specify the `algorithm` parameter.</span></span>  

 <span data-ttu-id="473ef-145">由于 SHA1 出现冲突问题，Microsoft 建议使用基于 SHA256 或更好的安全模型。</span><span class="sxs-lookup"><span data-stu-id="473ef-145">Due to collision problems with SHA1, Microsoft recommends a security model based on SHA256 or better.</span></span>

 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="473ef-146">不支持 <paramref name="algorithm" />。</span><span class="sxs-lookup"><span data-stu-id="473ef-146"><paramref name="algorithm" /> is not supported.</span></span> <span data-ttu-id="473ef-147">支持的算法为 <see cref="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl" />、<see cref="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url" /> 和 <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature" />。</span><span class="sxs-lookup"><span data-stu-id="473ef-147">The supported algorithms are <see cref="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl" />, <see cref="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url" />, and <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetSignatureDeformatter">
      <MemberSignature Language="C#" Value="public override System.Security.Cryptography.AsymmetricSignatureDeformatter GetSignatureDeformatter (string algorithm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.Cryptography.AsymmetricSignatureDeformatter GetSignatureDeformatter(string algorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.GetSignatureDeformatter(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetSignatureDeformatter (algorithm As String) As AsymmetricSignatureDeformatter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::Cryptography::AsymmetricSignatureDeformatter ^ GetSignatureDeformatter(System::String ^ algorithm);" />
      <MemberSignature Language="F#" Value="override this.GetSignatureDeformatter : string -&gt; System.Security.Cryptography.AsymmetricSignatureDeformatter" Usage="x509AsymmetricSecurityKey.GetSignatureDeformatter algorithm" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.AsymmetricSignatureDeformatter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="algorithm"><span data-ttu-id="473ef-148">要获取其实例的数字签名的反格式化程序算法。</span><span class="sxs-lookup"><span data-stu-id="473ef-148">The de-formatter algorithm for the digital signature to get an instance of.</span></span></param>
        <summary><span data-ttu-id="473ef-149">获取数字签名的反格式化程序算法。</span><span class="sxs-lookup"><span data-stu-id="473ef-149">Gets the de-formatter algorithm for the digital signature.</span></span></summary>
        <returns><span data-ttu-id="473ef-150">一个 <see cref="T:System.Security.Cryptography.AsymmetricSignatureDeformatter" />，它表示数字签名的反格式化程序算法。</span><span class="sxs-lookup"><span data-stu-id="473ef-150">An <see cref="T:System.Security.Cryptography.AsymmetricSignatureDeformatter" /> that represents the de-formatter algorithm for the digital signature.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="473ef-151">使用 <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl>、<xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url> 或 <xref:System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature> 字段指定 `algorithm` 参数。</span><span class="sxs-lookup"><span data-stu-id="473ef-151">Use the <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl>, <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url> or <xref:System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature> fields to specify the `algorithm` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="473ef-152"><paramref name="algorithm" /> 为 <see cref="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl" />，并且构造函数中指定的 X.509 证书的公钥类型不是 <see cref="T:System.Security.Cryptography.DSA" />。</span><span class="sxs-lookup"><span data-stu-id="473ef-152"><paramref name="algorithm" /> is <see cref="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl" /> and the public key for the X.509 certificate specified in the constructor is not of type <see cref="T:System.Security.Cryptography.DSA" />.</span></span>  
  
<span data-ttu-id="473ef-153">- 或 -</span><span class="sxs-lookup"><span data-stu-id="473ef-153">-or-</span></span> 
 <span data-ttu-id="473ef-154"><paramref name="algorithm" /> 为 <see cref="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url" /> 或 <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature" />，并且构造函数中指定的 X.509 证书的公钥类型不是 <see cref="T:System.Security.Cryptography.RSA" />。</span><span class="sxs-lookup"><span data-stu-id="473ef-154"><paramref name="algorithm" /> is <see cref="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url" /> or <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature" /> and the public key for the X.509 certificate specified in the constructor is not of type <see cref="T:System.Security.Cryptography.RSA" />.</span></span>  
  
<span data-ttu-id="473ef-155">- 或 -</span><span class="sxs-lookup"><span data-stu-id="473ef-155">-or-</span></span> 
 <span data-ttu-id="473ef-156">不支持 <paramref name="algorithm" />。</span><span class="sxs-lookup"><span data-stu-id="473ef-156"><paramref name="algorithm" /> is not supported.</span></span> <span data-ttu-id="473ef-157">支持的算法为 <see cref="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl" />、</span><span class="sxs-lookup"><span data-stu-id="473ef-157">The supported algorithms are <see cref="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl" />,</span></span> 
 <span data-ttu-id="473ef-158"><see cref="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url" /> 和 <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature" />。</span><span class="sxs-lookup"><span data-stu-id="473ef-158"><see cref="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url" />, and <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetSignatureFormatter">
      <MemberSignature Language="C#" Value="public override System.Security.Cryptography.AsymmetricSignatureFormatter GetSignatureFormatter (string algorithm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.Cryptography.AsymmetricSignatureFormatter GetSignatureFormatter(string algorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.GetSignatureFormatter(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetSignatureFormatter (algorithm As String) As AsymmetricSignatureFormatter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::Cryptography::AsymmetricSignatureFormatter ^ GetSignatureFormatter(System::String ^ algorithm);" />
      <MemberSignature Language="F#" Value="override this.GetSignatureFormatter : string -&gt; System.Security.Cryptography.AsymmetricSignatureFormatter" Usage="x509AsymmetricSecurityKey.GetSignatureFormatter algorithm" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.AsymmetricSignatureFormatter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="algorithm"><span data-ttu-id="473ef-159">要获取其实例的数字签名的格式化程序算法。</span><span class="sxs-lookup"><span data-stu-id="473ef-159">The formatter algorithm for the digital signature to get an instance of.</span></span></param>
        <summary><span data-ttu-id="473ef-160">获取数字签名的格式化程序算法。</span><span class="sxs-lookup"><span data-stu-id="473ef-160">Gets the formatter algorithm for the digital signature.</span></span></summary>
        <returns><span data-ttu-id="473ef-161">一个 <see cref="T:System.Security.Cryptography.AsymmetricSignatureDeformatter" />，它表示数字签名的格式化程序算法。</span><span class="sxs-lookup"><span data-stu-id="473ef-161">An <see cref="T:System.Security.Cryptography.AsymmetricSignatureDeformatter" /> that represents the formatter algorithm for the digital signature.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="473ef-162">使用 <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl>、<xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url> 或 <xref:System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature> 字段指定 `algorithm` 参数。</span><span class="sxs-lookup"><span data-stu-id="473ef-162">Use the <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl>, <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url> or <xref:System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature> fields to specify the `algorithm` parameter.</span></span>  

 <span data-ttu-id="473ef-163">由于 SHA1 出现冲突问题，Microsoft 建议使用基于 SHA256 或更好的安全模型。</span><span class="sxs-lookup"><span data-stu-id="473ef-163">Due to collision problems with SHA1, Microsoft recommends a security model based on SHA256 or better.</span></span>

 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="473ef-164">构造函数中指定的 X.509 证书不具有私钥。</span><span class="sxs-lookup"><span data-stu-id="473ef-164">The X.509 certificate specified in the constructor does not have a private key.</span></span>  
  
<span data-ttu-id="473ef-165">- 或 -</span><span class="sxs-lookup"><span data-stu-id="473ef-165">-or-</span></span> 
 <span data-ttu-id="473ef-166"><paramref name="algorithm" /> 为 <see cref="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl" />，并且构造函数中指定的 X.509 证书的私钥类型不是 <see cref="T:System.Security.Cryptography.DSA" />。</span><span class="sxs-lookup"><span data-stu-id="473ef-166"><paramref name="algorithm" /> is <see cref="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl" /> and the private key for the X.509 certificate specified in the constructor is not of type <see cref="T:System.Security.Cryptography.DSA" />.</span></span>  
  
<span data-ttu-id="473ef-167">- 或 -</span><span class="sxs-lookup"><span data-stu-id="473ef-167">-or-</span></span> 
 <span data-ttu-id="473ef-168"><paramref name="algorithm" /> 为 <see cref="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url" /> 或 <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature" />，并且构造函数中指定的 X.509 证书的私钥类型不是 <see cref="T:System.Security.Cryptography.RSA" />。</span><span class="sxs-lookup"><span data-stu-id="473ef-168"><paramref name="algorithm" /> is <see cref="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url" /> or <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature" /> and the private key for the X.509 certificate specified in the constructor is not of type <see cref="T:System.Security.Cryptography.RSA" />.</span></span>  
  
<span data-ttu-id="473ef-169">- 或 -</span><span class="sxs-lookup"><span data-stu-id="473ef-169">-or-</span></span> 
 <span data-ttu-id="473ef-170">不支持 <paramref name="algorithm" />。</span><span class="sxs-lookup"><span data-stu-id="473ef-170"><paramref name="algorithm" /> is not supported.</span></span> <span data-ttu-id="473ef-171">支持的算法为 <see cref="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl" />、</span><span class="sxs-lookup"><span data-stu-id="473ef-171">The supported algorithms are <see cref="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl" />,</span></span> 
 <span data-ttu-id="473ef-172"><see cref="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url" /> 和 <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature" />。</span><span class="sxs-lookup"><span data-stu-id="473ef-172"><see cref="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url" />, and <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="HasPrivateKey">
      <MemberSignature Language="C#" Value="public override bool HasPrivateKey ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool HasPrivateKey() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.HasPrivateKey" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function HasPrivateKey () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool HasPrivateKey();" />
      <MemberSignature Language="F#" Value="override this.HasPrivateKey : unit -&gt; bool" Usage="x509AsymmetricSecurityKey.HasPrivateKey " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="473ef-173">获取一个值，该值指示该私钥是否可用。</span><span class="sxs-lookup"><span data-stu-id="473ef-173">Gets a value that indicates whether the private key is a available.</span></span></summary>
        <returns><span data-ttu-id="473ef-174">如果私钥可用，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="473ef-174"><see langword="true" /> when the private key is available; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAsymmetricAlgorithm">
      <MemberSignature Language="C#" Value="public override bool IsAsymmetricAlgorithm (string algorithm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsAsymmetricAlgorithm(string algorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.IsAsymmetricAlgorithm(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsAsymmetricAlgorithm (algorithm As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsAsymmetricAlgorithm(System::String ^ algorithm);" />
      <MemberSignature Language="F#" Value="override this.IsAsymmetricAlgorithm : string -&gt; bool" Usage="x509AsymmetricSecurityKey.IsAsymmetricAlgorithm algorithm" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="algorithm"><span data-ttu-id="473ef-175">加密算法。</span><span class="sxs-lookup"><span data-stu-id="473ef-175">The cryptographic algorithm.</span></span></param>
        <summary><span data-ttu-id="473ef-176">获取一个值，该值指示指定的算法是否使用非对称密钥。</span><span class="sxs-lookup"><span data-stu-id="473ef-176">Gets a value that indicates whether the specified algorithm uses asymmetric keys.</span></span></summary>
        <returns><span data-ttu-id="473ef-177">如果指定的算法为 <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.DsaSha1Signature" />、<see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha1Signature" />、<see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature" />、<see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.RsaOaepKeyWrap" /> 或 <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.RsaV15KeyWrap" />，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="473ef-177"><see langword="true" /> when the specified algorithm is <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.DsaSha1Signature" />, <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha1Signature" />, <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature" />, <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.RsaOaepKeyWrap" />, or <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.RsaV15KeyWrap" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks><span data-ttu-id="473ef-178">由于 SHA1 出现冲突问题，Microsoft 建议使用基于 SHA256 或更好的安全模型。</span><span class="sxs-lookup"><span data-stu-id="473ef-178">Due to collision problems with SHA1, Microsoft recommends a security model based on SHA256 or better.</span></span></remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSupportedAlgorithm">
      <MemberSignature Language="C#" Value="public override bool IsSupportedAlgorithm (string algorithm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsSupportedAlgorithm(string algorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.IsSupportedAlgorithm(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsSupportedAlgorithm (algorithm As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsSupportedAlgorithm(System::String ^ algorithm);" />
      <MemberSignature Language="F#" Value="override this.IsSupportedAlgorithm : string -&gt; bool" Usage="x509AsymmetricSecurityKey.IsSupportedAlgorithm algorithm" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="algorithm"><span data-ttu-id="473ef-179">加密算法。</span><span class="sxs-lookup"><span data-stu-id="473ef-179">The cryptographic algorithm.</span></span></param>
        <summary><span data-ttu-id="473ef-180">获取一个值，该值指示此类是否支持指定的算法。</span><span class="sxs-lookup"><span data-stu-id="473ef-180">Gets a value that indicates whether the specified algorithm is supported by this class.</span></span></summary>
        <returns><span data-ttu-id="473ef-181">如果指定的算法为 <see cref="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl" />、<see cref="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSA15Url" />、<see cref="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSAOAEPUrl" />、<see cref="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url" /> 或 <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature" />，并且公钥的类型是正确的，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="473ef-181"><see langword="true" /> when the specified algorithm is <see cref="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl" />, <see cref="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSA15Url" />, <see cref="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSAOAEPUrl" />, <see cref="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url" />, or <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature" /> and the public key is of the right type; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="473ef-182">当下列条件之一为 true 时 <xref:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.IsSupportedAlgorithm%2A> 方法返回 `true`：</span><span class="sxs-lookup"><span data-stu-id="473ef-182">The <xref:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.IsSupportedAlgorithm%2A> method returns `true` when one of the following is true:</span></span>  
  
-   <span data-ttu-id="473ef-183">`algorithm` 参数为 <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl>，并且构造函数中指定的 X.509 证书的公钥类型为 <xref:System.Security.Cryptography.DSA>。</span><span class="sxs-lookup"><span data-stu-id="473ef-183">The `algorithm` parameter is <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl> and the public key for the X.509 certificate specified in the constructor is of type <xref:System.Security.Cryptography.DSA>.</span></span>  
  
-   <span data-ttu-id="473ef-184">`algorithm` 参数为 <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSA15Url>、<xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSAOAEPUrl>、<xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url> 或 <xref:System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature>，并且构造函数中指定的 X.509 证书的公钥类型为 <xref:System.Security.Cryptography.RSA>。</span><span class="sxs-lookup"><span data-stu-id="473ef-184">The `algorithm` parameter is <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSA15Url>, <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSAOAEPUrl>, <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url> or <xref:System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature> and the public key for the X.509 certificate specified in the constructor is of type <xref:System.Security.Cryptography.RSA>.</span></span>  

<span data-ttu-id="473ef-185">由于 SHA1 出现冲突问题，Microsoft 建议使用基于 SHA256 或更好的安全模型。</span><span class="sxs-lookup"><span data-stu-id="473ef-185">Due to collision problems with SHA1, Microsoft recommends a security model based on SHA256 or better.</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSymmetricAlgorithm">
      <MemberSignature Language="C#" Value="public override bool IsSymmetricAlgorithm (string algorithm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsSymmetricAlgorithm(string algorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.IsSymmetricAlgorithm(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsSymmetricAlgorithm (algorithm As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsSymmetricAlgorithm(System::String ^ algorithm);" />
      <MemberSignature Language="F#" Value="override this.IsSymmetricAlgorithm : string -&gt; bool" Usage="x509AsymmetricSecurityKey.IsSymmetricAlgorithm algorithm" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="algorithm"><span data-ttu-id="473ef-186">加密算法。</span><span class="sxs-lookup"><span data-stu-id="473ef-186">The cryptographic algorithm.</span></span></param>
        <summary><span data-ttu-id="473ef-187">获取一个值，该值指示指定的算法是否使用对称密钥。</span><span class="sxs-lookup"><span data-stu-id="473ef-187">Gets a value that indicates whether the specified algorithm uses symmetric keys.</span></span></summary>
        <returns><span data-ttu-id="473ef-188">如果指定的算法为 <see langword="true" />、<see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.HmacSha1Signature" />、<see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes128Encryption" />、<see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes192Encryption" />、<see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes256Encryption" />、<see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.TripleDesEncryption" />、<see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes128KeyWrap" />、<see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes192KeyWrap" />、<see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes256KeyWrap" /> 或 <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.TripleDesKeyWrap" />，则为 <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Psha1KeyDerivation" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="473ef-188"><see langword="true" /> when the specified algorithm is <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.HmacSha1Signature" />, <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes128Encryption" />, <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes192Encryption" />, <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes256Encryption" />, <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.TripleDesEncryption" />, <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes128KeyWrap" />, <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes192KeyWrap" />, <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes256KeyWrap" />, <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.TripleDesKeyWrap" />, or <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Psha1KeyDerivation" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="KeySize">
      <MemberSignature Language="C#" Value="public override int KeySize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 KeySize" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.KeySize" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property KeySize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int KeySize { int get(); };" />
      <MemberSignature Language="F#" Value="member this.KeySize : int" Usage="System.IdentityModel.Tokens.X509AsymmetricSecurityKey.KeySize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="473ef-189">获取与 X.509 证书关联的公钥的大小（以位为单位）。</span><span class="sxs-lookup"><span data-stu-id="473ef-189">Gets the size, in bits, of the public key associated with the X.509 certificate.</span></span></summary>
        <value><span data-ttu-id="473ef-190">与 X.509 证书关联的公钥的大小（以位为单位）。</span><span class="sxs-lookup"><span data-stu-id="473ef-190">The size, in bits, of the public key associated with the X.509 certificate.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
