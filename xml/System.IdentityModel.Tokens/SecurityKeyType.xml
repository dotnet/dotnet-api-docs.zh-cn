<Type Name="SecurityKeyType" FullName="System.IdentityModel.Tokens.SecurityKeyType">
  <Metadata><Meta Name="ms.openlocfilehash" Value="ddc44f64a5032cc00d913c43c920d9263e99b374" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89805515" /></Metadata><TypeSignature Language="C#" Value="public enum SecurityKeyType" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed SecurityKeyType extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.Tokens.SecurityKeyType" />
  <TypeSignature Language="VB.NET" Value="Public Enum SecurityKeyType" />
  <TypeSignature Language="C++ CLI" Value="public enum class SecurityKeyType" />
  <TypeSignature Language="F#" Value="type SecurityKeyType = " />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Security</AssemblyName>
    <AssemblyVersion>4.7.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary><span data-ttu-id="5fec5-101">指定与安全令牌关联的密钥的类型。</span><span class="sxs-lookup"><span data-stu-id="5fec5-101">Specifies the type of key that is associated with a security token.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5fec5-102">使用 <xref:System.IdentityModel.Tokens.SecurityKeyType> 枚举可设置 <xref:System.IdentityModel.Selectors.SecurityTokenRequirement.KeyType%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="5fec5-102">Use the <xref:System.IdentityModel.Tokens.SecurityKeyType> enumeration to set the <xref:System.IdentityModel.Selectors.SecurityTokenRequirement.KeyType%2A> property.</span></span>  
  
 <span data-ttu-id="5fec5-103">`BearerKey` 字段与 <xref:System.ServiceModel.Configuration.IssuedTokenParametersElement.KeyType%2A> 属性一起使用。</span><span class="sxs-lookup"><span data-stu-id="5fec5-103">The `BearerKey` field is used with the <xref:System.ServiceModel.Configuration.IssuedTokenParametersElement.KeyType%2A> property.</span></span>  
  
### <a name="bearerkey-requires-wsuid-or-transport-security-with-message-credentials"></a><span data-ttu-id="5fec5-104">BearerKey 需要 Wsu:Id 或使用消息凭据的传输安全</span><span class="sxs-lookup"><span data-stu-id="5fec5-104">BearerKey Requires Wsu:Id or Transport Security with Message Credentials</span></span>  
 <span data-ttu-id="5fec5-105">在联合方案中，通常将颁发的令牌配置为保证客户端和依赖方之间消息安全的认可支持令牌。</span><span class="sxs-lookup"><span data-stu-id="5fec5-105">In federation scenarios, an issued token is generally configured as an endorsing supporting token for message security between a client and the relying parties.</span></span> <span data-ttu-id="5fec5-106">但是，当安全令牌服务 (STS) 颁发没有密钥 (为 bearerkey 并且) 的令牌时，WCF 会将其配置为 <xref:System.ServiceModel.Security.SecurityTokenAttachmentMode.SignedEncrypted?displayProperty=nameWithType> 支持令牌， (wcf 在没有密钥) 的情况下无法签署。</span><span class="sxs-lookup"><span data-stu-id="5fec5-106">However, when a Security Token Service (STS) issues a token with no key (BearerKey), WCF configures it as a <xref:System.ServiceModel.Security.SecurityTokenAttachmentMode.SignedEncrypted?displayProperty=nameWithType> supporting token (WCF cannot endorse without a key).</span></span> <span data-ttu-id="5fec5-107">这要求在签名中引用颁发的令牌。</span><span class="sxs-lookup"><span data-stu-id="5fec5-107">This requires the issued token to be referenced in the signature.</span></span> <span data-ttu-id="5fec5-108">WCF 当前使用以下内容： `http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd:Id` 作为参考机制 (Wsu： Id) 。</span><span class="sxs-lookup"><span data-stu-id="5fec5-108">WCF currently uses the following: `http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd:Id` as a reference mechanism (Wsu:Id).</span></span>  
  
 <span data-ttu-id="5fec5-109">如果颁发的令牌没有此类属性，则会在客户端上引发 <xref:System.ServiceModel.Security.MessageSecurityException> 并显示文本“要签名的元素必须有 ID”。</span><span class="sxs-lookup"><span data-stu-id="5fec5-109">If an issued token does not have such an attribute, on a client, a <xref:System.ServiceModel.Security.MessageSecurityException> is thrown with the text "Element to sign must have id".</span></span> <span data-ttu-id="5fec5-110">将 SAML 1.1 令牌用作颁发的令牌时，就会发生这种情况（SAML 1.1 规范中没有定义 Wsu:Id）。</span><span class="sxs-lookup"><span data-stu-id="5fec5-110">This happens when a SAML 1.1 token is used as an issued token (the Wsu:Id is not defined in the SAML 1.1 specification).</span></span>  
  
 <span data-ttu-id="5fec5-111">若要解决这种情况，请使用带有消息凭据的传输安全 (例如 <xref:System.ServiceModel.Configuration.AuthenticationMode.IssuedTokenOverTransport?displayProperty=nameWithType>) ，或者 STS 必须将 `http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd:Id` (Wsu： Id) 添加到已颁发的令牌。</span><span class="sxs-lookup"><span data-stu-id="5fec5-111">To work around this situation, either use transport security with message credentials (for example, <xref:System.ServiceModel.Configuration.AuthenticationMode.IssuedTokenOverTransport?displayProperty=nameWithType>), or an STS must add the `http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd:Id` (Wsu:Id) to the issued token.</span></span>  
  
 <span data-ttu-id="5fec5-112">请注意，如果将 Wsu:Id 添加到 SAML 1.1 令牌中，生成的 XML 将不符合 SAML 1.1 规范。</span><span class="sxs-lookup"><span data-stu-id="5fec5-112">Note that if the Wsu:Id is added to a SAML 1.1 token, the resulting XML does not comply to the SAML 1.1 specification.</span></span> <span data-ttu-id="5fec5-113">一种替代办法是将 Wsu:Id 添加到 `EncryptedData` 中，后者是在加密颁发的令牌时生成的。</span><span class="sxs-lookup"><span data-stu-id="5fec5-113">The alternative is to add a Wsu:Id to the `EncryptedData` which is a result of encrypting the issued token.</span></span> <span data-ttu-id="5fec5-114">此过程符合 SAML 1.1 规范，因为 `EncryptedData` 元素支持 Wsu:Id 属性。</span><span class="sxs-lookup"><span data-stu-id="5fec5-114">This procedure complies with the SAML 1.1 specification, because the `EncryptedData` element supports the Wsu:Id attribute.</span></span>  
  
 <span data-ttu-id="5fec5-115">因此，为了与规范保持一致，STS 必须对持有者令牌进行加密。</span><span class="sxs-lookup"><span data-stu-id="5fec5-115">So to be compliant with the specification, the bearer token must be encrypted by the STS.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AsymmetricKey">
      <MemberSignature Language="C#" Value="AsymmetricKey" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.IdentityModel.Tokens.SecurityKeyType AsymmetricKey = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.IdentityModel.Tokens.SecurityKeyType.AsymmetricKey" />
      <MemberSignature Language="VB.NET" Value="AsymmetricKey" />
      <MemberSignature Language="C++ CLI" Value="AsymmetricKey" />
      <MemberSignature Language="F#" Value="AsymmetricKey = 1" Usage="System.IdentityModel.Tokens.SecurityKeyType.AsymmetricKey" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Security</AssemblyName>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityKeyType</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary><span data-ttu-id="5fec5-116">指定密钥是非对称密钥。</span><span class="sxs-lookup"><span data-stu-id="5fec5-116">Specifies that the key is an asymmetric key.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="BearerKey">
      <MemberSignature Language="C#" Value="BearerKey" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.IdentityModel.Tokens.SecurityKeyType BearerKey = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.IdentityModel.Tokens.SecurityKeyType.BearerKey" />
      <MemberSignature Language="VB.NET" Value="BearerKey" />
      <MemberSignature Language="C++ CLI" Value="BearerKey" />
      <MemberSignature Language="F#" Value="BearerKey = 2" Usage="System.IdentityModel.Tokens.SecurityKeyType.BearerKey" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Security</AssemblyName>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityKeyType</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary><span data-ttu-id="5fec5-117">指定安全令牌不包含所有权证明密钥。</span><span class="sxs-lookup"><span data-stu-id="5fec5-117">Specifies that the security token does not contain a proof-of-possession key.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="SymmetricKey">
      <MemberSignature Language="C#" Value="SymmetricKey" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.IdentityModel.Tokens.SecurityKeyType SymmetricKey = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.IdentityModel.Tokens.SecurityKeyType.SymmetricKey" />
      <MemberSignature Language="VB.NET" Value="SymmetricKey" />
      <MemberSignature Language="C++ CLI" Value="SymmetricKey" />
      <MemberSignature Language="F#" Value="SymmetricKey = 0" Usage="System.IdentityModel.Tokens.SecurityKeyType.SymmetricKey" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Security</AssemblyName>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityKeyType</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary><span data-ttu-id="5fec5-118">指定密钥是对称密钥。</span><span class="sxs-lookup"><span data-stu-id="5fec5-118">Specifies that the key is a symmetric key.</span></span></summary>
      </Docs>
    </Member>
  </Members>
</Type>
