<Type Name="SecurityKeyElement" FullName="System.IdentityModel.Tokens.SecurityKeyElement">
  <Metadata><Meta Name="ms.openlocfilehash" Value="c817d6cbf6de6a0c4e6c2f1e8225dff006d8ca77" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89805571" /></Metadata><TypeSignature Language="C#" Value="public class SecurityKeyElement : System.IdentityModel.Tokens.SecurityKey" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SecurityKeyElement extends System.IdentityModel.Tokens.SecurityKey" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.Tokens.SecurityKeyElement" />
  <TypeSignature Language="VB.NET" Value="Public Class SecurityKeyElement&#xA;Inherits SecurityKey" />
  <TypeSignature Language="C++ CLI" Value="public ref class SecurityKeyElement : System::IdentityModel::Tokens::SecurityKey" />
  <TypeSignature Language="F#" Value="type SecurityKeyElement = class&#xA;    inherit SecurityKey" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.IdentityModel.Tokens.SecurityKey</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="f073a-101">仅当需要加密功能时，通过解析 <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> 或 <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" /> 提供延迟的安全密钥解析。</span><span class="sxs-lookup"><span data-stu-id="f073a-101">Provides delayed resolution of security keys by resolving the <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> or <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" /> only when cryptographic functions are needed.</span></span> <span data-ttu-id="f073a-102">这允许对应用程序从未使用过的密钥标识符子句或密钥标识符进行在线或离线序列化和反序列化，而不会出现任何问题。</span><span class="sxs-lookup"><span data-stu-id="f073a-102">This allows a key identifier clause or key identifier that is never used by an application to be serialized and deserialized on and off the wire without issues.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f073a-103">初始化 <see cref="T:System.IdentityModel.Tokens.SecurityKeyElement" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="f073a-103">Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.SecurityKeyElement" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SecurityKeyElement (System.IdentityModel.Tokens.SecurityKeyIdentifier securityKeyIdentifier, System.IdentityModel.Selectors.SecurityTokenResolver securityTokenResolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IdentityModel.Tokens.SecurityKeyIdentifier securityKeyIdentifier, class System.IdentityModel.Selectors.SecurityTokenResolver securityTokenResolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityKeyElement.#ctor(System.IdentityModel.Tokens.SecurityKeyIdentifier,System.IdentityModel.Selectors.SecurityTokenResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (securityKeyIdentifier As SecurityKeyIdentifier, securityTokenResolver As SecurityTokenResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SecurityKeyElement(System::IdentityModel::Tokens::SecurityKeyIdentifier ^ securityKeyIdentifier, System::IdentityModel::Selectors::SecurityTokenResolver ^ securityTokenResolver);" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Tokens.SecurityKeyElement : System.IdentityModel.Tokens.SecurityKeyIdentifier * System.IdentityModel.Selectors.SecurityTokenResolver -&gt; System.IdentityModel.Tokens.SecurityKeyElement" Usage="new System.IdentityModel.Tokens.SecurityKeyElement (securityKeyIdentifier, securityTokenResolver)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="securityKeyIdentifier" Type="System.IdentityModel.Tokens.SecurityKeyIdentifier" />
        <Parameter Name="securityTokenResolver" Type="System.IdentityModel.Selectors.SecurityTokenResolver" />
      </Parameters>
      <Docs>
        <param name="securityKeyIdentifier"><span data-ttu-id="f073a-104">一个表示 <see cref="T:System.IdentityModel.Tokens.SecurityKey" /> 的密钥标识符。</span><span class="sxs-lookup"><span data-stu-id="f073a-104">A key identifier that represents a <see cref="T:System.IdentityModel.Tokens.SecurityKey" />.</span></span></param>
        <param name="securityTokenResolver"><span data-ttu-id="f073a-105">可以解决 <see cref="T:System.IdentityModel.Tokens.SecurityKey" />的一个标志解析器。</span><span class="sxs-lookup"><span data-stu-id="f073a-105">A token resolver that can be resolved to a <see cref="T:System.IdentityModel.Tokens.SecurityKey" />.</span></span></param>
        <summary><span data-ttu-id="f073a-106">使用指定的密钥标识符子句初始化 <see cref="T:System.IdentityModel.Tokens.SecurityKeyElement" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="f073a-106">Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.SecurityKeyElement" /> class from the specified key identifier.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="f073a-107"><paramref name="securityKeyIdentifier" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="f073a-107"><paramref name="securityKeyIdentifier" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SecurityKeyElement (System.IdentityModel.Tokens.SecurityKeyIdentifierClause securityKeyIdentifierClause, System.IdentityModel.Selectors.SecurityTokenResolver securityTokenResolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IdentityModel.Tokens.SecurityKeyIdentifierClause securityKeyIdentifierClause, class System.IdentityModel.Selectors.SecurityTokenResolver securityTokenResolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityKeyElement.#ctor(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Selectors.SecurityTokenResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (securityKeyIdentifierClause As SecurityKeyIdentifierClause, securityTokenResolver As SecurityTokenResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SecurityKeyElement(System::IdentityModel::Tokens::SecurityKeyIdentifierClause ^ securityKeyIdentifierClause, System::IdentityModel::Selectors::SecurityTokenResolver ^ securityTokenResolver);" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Tokens.SecurityKeyElement : System.IdentityModel.Tokens.SecurityKeyIdentifierClause * System.IdentityModel.Selectors.SecurityTokenResolver -&gt; System.IdentityModel.Tokens.SecurityKeyElement" Usage="new System.IdentityModel.Tokens.SecurityKeyElement (securityKeyIdentifierClause, securityTokenResolver)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="securityKeyIdentifierClause" Type="System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />
        <Parameter Name="securityTokenResolver" Type="System.IdentityModel.Selectors.SecurityTokenResolver" />
      </Parameters>
      <Docs>
        <param name="securityKeyIdentifierClause"><span data-ttu-id="f073a-108">一个表示 <see cref="T:System.IdentityModel.Tokens.SecurityKey" /> 的密钥标识符子句。</span><span class="sxs-lookup"><span data-stu-id="f073a-108">A key identifier clause that represents a <see cref="T:System.IdentityModel.Tokens.SecurityKey" />.</span></span></param>
        <param name="securityTokenResolver"><span data-ttu-id="f073a-109">可以解决 <see cref="T:System.IdentityModel.Tokens.SecurityKey" />的一个标志解析器。</span><span class="sxs-lookup"><span data-stu-id="f073a-109">A token resolver that can be resolved to a <see cref="T:System.IdentityModel.Tokens.SecurityKey" />.</span></span></param>
        <summary><span data-ttu-id="f073a-110">使用指定的密钥标识符子句初始化 <see cref="T:System.IdentityModel.Tokens.SecurityKeyElement" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="f073a-110">Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.SecurityKeyElement" /> class from the specified key identifier clause.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="f073a-111"><paramref name="securityKeyIdentifierClause" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="f073a-111"><paramref name="securityKeyIdentifierClause" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DecryptKey">
      <MemberSignature Language="C#" Value="public override byte[] DecryptKey (string algorithm, byte[] keyData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance unsigned int8[] DecryptKey(string algorithm, unsigned int8[] keyData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityKeyElement.DecryptKey(System.String,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function DecryptKey (algorithm As String, keyData As Byte()) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Byte&gt; ^ DecryptKey(System::String ^ algorithm, cli::array &lt;System::Byte&gt; ^ keyData);" />
      <MemberSignature Language="F#" Value="override this.DecryptKey : string * byte[] -&gt; byte[]" Usage="securityKeyElement.DecryptKey (algorithm, keyData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="System.String" />
        <Parameter Name="keyData" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="algorithm"><span data-ttu-id="f073a-112">用于解密密钥的算法。</span><span class="sxs-lookup"><span data-stu-id="f073a-112">The algorithm to use to decrypt the key.</span></span></param>
        <param name="keyData"><span data-ttu-id="f073a-113">包含加密密钥的数组。</span><span class="sxs-lookup"><span data-stu-id="f073a-113">An array that contains the encrypted key.</span></span></param>
        <summary><span data-ttu-id="f073a-114">使用指定的算法解密指定的密钥。</span><span class="sxs-lookup"><span data-stu-id="f073a-114">Decrypts the specified key by using the specified algorithm.</span></span></summary>
        <returns><span data-ttu-id="f073a-115">包含解密密钥的数组。</span><span class="sxs-lookup"><span data-stu-id="f073a-115">An array that contains the decrypted key.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EncryptKey">
      <MemberSignature Language="C#" Value="public override byte[] EncryptKey (string algorithm, byte[] keyData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance unsigned int8[] EncryptKey(string algorithm, unsigned int8[] keyData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityKeyElement.EncryptKey(System.String,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function EncryptKey (algorithm As String, keyData As Byte()) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Byte&gt; ^ EncryptKey(System::String ^ algorithm, cli::array &lt;System::Byte&gt; ^ keyData);" />
      <MemberSignature Language="F#" Value="override this.EncryptKey : string * byte[] -&gt; byte[]" Usage="securityKeyElement.EncryptKey (algorithm, keyData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="System.String" />
        <Parameter Name="keyData" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="algorithm"><span data-ttu-id="f073a-116">用于解密密钥的算法。</span><span class="sxs-lookup"><span data-stu-id="f073a-116">The algorithm to use to decrypt the key.</span></span></param>
        <param name="keyData"><span data-ttu-id="f073a-117">包含要加密的密钥的数组。</span><span class="sxs-lookup"><span data-stu-id="f073a-117">An array that contains the key to encrypt.</span></span></param>
        <summary><span data-ttu-id="f073a-118">使用指定的算法加密指定的密钥。</span><span class="sxs-lookup"><span data-stu-id="f073a-118">Encrypts the specified key by using the specified algorithm.</span></span></summary>
        <returns><span data-ttu-id="f073a-119">包含加密密钥的数组。</span><span class="sxs-lookup"><span data-stu-id="f073a-119">An array that contains the encrypted key.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAsymmetricAlgorithm">
      <MemberSignature Language="C#" Value="public override bool IsAsymmetricAlgorithm (string algorithm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsAsymmetricAlgorithm(string algorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityKeyElement.IsAsymmetricAlgorithm(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsAsymmetricAlgorithm (algorithm As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsAsymmetricAlgorithm(System::String ^ algorithm);" />
      <MemberSignature Language="F#" Value="override this.IsAsymmetricAlgorithm : string -&gt; bool" Usage="securityKeyElement.IsAsymmetricAlgorithm algorithm" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="algorithm"><span data-ttu-id="f073a-120">要检查的算法。</span><span class="sxs-lookup"><span data-stu-id="f073a-120">The algorithm to check.</span></span></param>
        <summary><span data-ttu-id="f073a-121">返回一个值，该值指示指定算法是否为非对称。</span><span class="sxs-lookup"><span data-stu-id="f073a-121">Returns a value that indicates whether the specified algorithm is asymmetric.</span></span></summary>
        <returns><span data-ttu-id="f073a-122">如果该算法将在运行时作为不对称处理，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="f073a-122"><see langword="true" /> if the algorithm will be processed by the runtime as asymmetric; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSupportedAlgorithm">
      <MemberSignature Language="C#" Value="public override bool IsSupportedAlgorithm (string algorithm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsSupportedAlgorithm(string algorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityKeyElement.IsSupportedAlgorithm(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsSupportedAlgorithm (algorithm As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsSupportedAlgorithm(System::String ^ algorithm);" />
      <MemberSignature Language="F#" Value="override this.IsSupportedAlgorithm : string -&gt; bool" Usage="securityKeyElement.IsSupportedAlgorithm algorithm" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="algorithm"><span data-ttu-id="f073a-123">要检查的算法。</span><span class="sxs-lookup"><span data-stu-id="f073a-123">The algorithm to check.</span></span></param>
        <summary><span data-ttu-id="f073a-124">返回一个值，该值指示此键是否支持指定的算法。</span><span class="sxs-lookup"><span data-stu-id="f073a-124">Returns a value that indicates whether the specified algorithm is supported by this key.</span></span></summary>
        <returns><span data-ttu-id="f073a-125">如果此密钥支持对称密钥换行算法，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="f073a-125"><see langword="true" /> if the algorithm is supported by this key; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSymmetricAlgorithm">
      <MemberSignature Language="C#" Value="public override bool IsSymmetricAlgorithm (string algorithm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsSymmetricAlgorithm(string algorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityKeyElement.IsSymmetricAlgorithm(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsSymmetricAlgorithm (algorithm As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsSymmetricAlgorithm(System::String ^ algorithm);" />
      <MemberSignature Language="F#" Value="override this.IsSymmetricAlgorithm : string -&gt; bool" Usage="securityKeyElement.IsSymmetricAlgorithm algorithm" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="algorithm"><span data-ttu-id="f073a-126">要检查的算法。</span><span class="sxs-lookup"><span data-stu-id="f073a-126">The algorithm to check.</span></span></param>
        <summary><span data-ttu-id="f073a-127">返回一个值，该值指示指定算法是否为对称。</span><span class="sxs-lookup"><span data-stu-id="f073a-127">Returns a value that indicates whether the specified algorithm is symmetric.</span></span></summary>
        <returns><span data-ttu-id="f073a-128">如果该算法将在运行时作为对称处理，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="f073a-128"><see langword="true" /> if the algorithm will be processed by the runtime as symmetric; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="KeySize">
      <MemberSignature Language="C#" Value="public override int KeySize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 KeySize" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SecurityKeyElement.KeySize" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property KeySize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int KeySize { int get(); };" />
      <MemberSignature Language="F#" Value="member this.KeySize : int" Usage="System.IdentityModel.Tokens.SecurityKeyElement.KeySize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f073a-129">获取密钥的大小（以位为单位）。</span><span class="sxs-lookup"><span data-stu-id="f073a-129">Gets the key size, in bits.</span></span></summary>
        <value><span data-ttu-id="f073a-130">密钥大小（以位为单位）。</span><span class="sxs-lookup"><span data-stu-id="f073a-130">The key size, in bits.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
