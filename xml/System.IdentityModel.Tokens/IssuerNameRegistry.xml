<Type Name="IssuerNameRegistry" FullName="System.IdentityModel.Tokens.IssuerNameRegistry">
  <Metadata><Meta Name="ms.openlocfilehash" Value="15ebca02bda16dfc2a568a9e5d221f2a27553d8f" /><Meta Name="ms.sourcegitcommit" Value="9506e50ec7beb4fa30206b9840dc546b035a6600" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/23/2020" /><Meta Name="ms.locfileid" Value="83959048" /></Metadata><TypeSignature Language="C#" Value="public abstract class IssuerNameRegistry : System.IdentityModel.Configuration.ICustomIdentityConfiguration" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit IssuerNameRegistry extends System.Object implements class System.IdentityModel.Configuration.ICustomIdentityConfiguration" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.Tokens.IssuerNameRegistry" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class IssuerNameRegistry&#xA;Implements ICustomIdentityConfiguration" />
  <TypeSignature Language="C++ CLI" Value="public ref class IssuerNameRegistry abstract : System::IdentityModel::Configuration::ICustomIdentityConfiguration" />
  <TypeSignature Language="F#" Value="type IssuerNameRegistry = class&#xA;    interface ICustomIdentityConfiguration" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IdentityModel.Configuration.ICustomIdentityConfiguration</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="0ef10-101">发布者名称注册表的抽象基类。</span><span class="sxs-lookup"><span data-stu-id="0ef10-101">The abstract base class for an issuer name registry.</span></span> <span data-ttu-id="0ef10-102">发行人名称注册表用于加密材料的关联助记名称，需要验证由相应发行人生成的标志签名。</span><span class="sxs-lookup"><span data-stu-id="0ef10-102">An issuer name registry is used to associate a mnemonic name to the cryptographic material that is needed to verify the signatures of tokens produced by the corresponding issuer.</span></span> <span data-ttu-id="0ef10-103">颁布者名称注册表维护了一个受依赖一方 （RP） 应用程序信赖的颁布者列表。</span><span class="sxs-lookup"><span data-stu-id="0ef10-103">The issuer name registry maintains a list of issuers that are trusted by a relying party (RP) application.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0ef10-104">颁发者名称注册表用于将助记键名称关联到所需的加密材料，以验证相应颁发者生成的令牌签名。</span><span class="sxs-lookup"><span data-stu-id="0ef10-104">The issuer name registry is used to associate a mnemonic name to the cryptographic material needed to verify signatures of tokens produced by the corresponding issuer.</span></span> <span data-ttu-id="0ef10-105">然后，将使用此名称来设置 <xref:System.Security.Claims.Claim.Issuer%2A> 声明的或 <xref:System.Security.Claims.Claim.OriginalIssuer%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="0ef10-105">This name is then used to set the <xref:System.Security.Claims.Claim.Issuer%2A> or the <xref:System.Security.Claims.Claim.OriginalIssuer%2A> property of a claim.</span></span> <span data-ttu-id="0ef10-106">类公开的方法 <xref:System.IdentityModel.Tokens.IssuerNameRegistry> 由正在处理令牌的安全令牌处理程序从管道调用。</span><span class="sxs-lookup"><span data-stu-id="0ef10-106">The methods exposed by the <xref:System.IdentityModel.Tokens.IssuerNameRegistry> class are called from the pipeline by the security token handler that is processing the token.</span></span> <span data-ttu-id="0ef10-107">由未被颁发者名称注册表映射的材料签署的令牌将被丢弃为不受信任。</span><span class="sxs-lookup"><span data-stu-id="0ef10-107">Tokens signed by material that is not mapped by an issuer name registry are discarded as untrusted.</span></span> <span data-ttu-id="0ef10-108">颁发者名称注册表返回的名称在 RP 应用程序的上下文中应该是唯一的。</span><span class="sxs-lookup"><span data-stu-id="0ef10-108">The name returned by the issuer name registry should be unique within the context of an RP application.</span></span>  
  
 <span data-ttu-id="0ef10-109">在代码中，可以通过设置属性来指定要使用的颁发者名称注册表 <xref:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration.IssuerNameRegistry%2A?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="0ef10-109">In code, you can specify the issuer name registry to use by setting the <xref:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration.IssuerNameRegistry%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="0ef10-110">在配置文件中，可以通过在[ &lt; securityTokenHandlerConfiguration &gt; ](/dotnet/framework/configure-apps/file-schema/windows-identity-foundation/securitytokenhandlerconfiguration)元素下指定[ &lt; issuerNameRegistry &gt; ](/dotnet/framework/configure-apps/file-schema/windows-identity-foundation/issuernameregistry)元素来指定颁发者名称注册表。</span><span class="sxs-lookup"><span data-stu-id="0ef10-110">In a configuration file, the issuer name registry can be specified by specifying the [&lt;issuerNameRegistry&gt;](/dotnet/framework/configure-apps/file-schema/windows-identity-foundation/issuernameregistry) element under the [&lt;securityTokenHandlerConfiguration&gt;](/dotnet/framework/configure-apps/file-schema/windows-identity-foundation/securitytokenhandlerconfiguration) element.</span></span>  
  
 <span data-ttu-id="0ef10-111">Windows Identity Foundation （WIF）提供类的实现 <xref:System.IdentityModel.Tokens.IssuerNameRegistry> 类： <xref:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry> 类。</span><span class="sxs-lookup"><span data-stu-id="0ef10-111">Windows Identity Foundation (WIF) provides an implementation of the <xref:System.IdentityModel.Tokens.IssuerNameRegistry> class out of the box: the <xref:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry> class.</span></span> <span data-ttu-id="0ef10-112">使用此实现时，可在[ &lt; s &gt; ](/dotnet/framework/configure-apps/file-schema/windows-identity-foundation/trustedissuers)元素下的 RP 应用程序的配置文件中指定受信任的颁发者列表，该元素是在 `<issuerNameRegistry>` <xref:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry> 该元素的属性中引用类时该元素的子元素。 `type`</span><span class="sxs-lookup"><span data-stu-id="0ef10-112">When you use this implementation you can specify the list of trusted issuers in the configuration file of the RP application under the [&lt;trustedIssuers&gt;](/dotnet/framework/configure-apps/file-schema/windows-identity-foundation/trustedissuers) element, which is a child element of the `<issuerNameRegistry>` element when the <xref:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry>.class is referenced in that element's `type` attribute.</span></span> <span data-ttu-id="0ef10-113">在 `<trustedIssuers>` 元素下，每个颁发者名称将映射到应用于验证其签名的 x.509 证书。</span><span class="sxs-lookup"><span data-stu-id="0ef10-113">Under the `<trustedIssuers>` element, each issuer name is mapped to the X.509 certificate that should be used to verify its signature.</span></span>  
  
 <span data-ttu-id="0ef10-114">若要创建自定义颁发者名称注册表，必须重写 <xref:System.IdentityModel.Tokens.IssuerNameRegistry.GetIssuerName%28System.IdentityModel.Tokens.SecurityToken%29?displayProperty=nameWithType> 方法。</span><span class="sxs-lookup"><span data-stu-id="0ef10-114">To create a custom issuer name registry, you must override the <xref:System.IdentityModel.Tokens.IssuerNameRegistry.GetIssuerName%28System.IdentityModel.Tokens.SecurityToken%29?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="0ef10-115">此方法返回指定安全令牌的颁发者名称。</span><span class="sxs-lookup"><span data-stu-id="0ef10-115">This method returns the issuer name for the specified security token.</span></span> <span data-ttu-id="0ef10-116"><xref:System.IdentityModel.Tokens.IssuerNameRegistry.GetIssuerName%28System.IdentityModel.Tokens.SecurityToken%2CSystem.String%29?displayProperty=nameWithType> <xref:System.IdentityModel.Tokens.IssuerNameRegistry.GetWindowsIssuerName%2A> 如果要为不同于的 Windows 令牌提供颁发者名称，则可以选择重写方法，以便在检索颁发者名称和方法时提供提示机制 <xref:System.Security.Claims.ClaimsIdentity.DefaultIssuer> 。</span><span class="sxs-lookup"><span data-stu-id="0ef10-116">You can optionally override the <xref:System.IdentityModel.Tokens.IssuerNameRegistry.GetIssuerName%28System.IdentityModel.Tokens.SecurityToken%2CSystem.String%29?displayProperty=nameWithType> method to provide a hinting mechanism when retrieving issuer names and the <xref:System.IdentityModel.Tokens.IssuerNameRegistry.GetWindowsIssuerName%2A> method if you want to provide an issuer name for Windows tokens that is different from <xref:System.Security.Claims.ClaimsIdentity.DefaultIssuer>.</span></span> <span data-ttu-id="0ef10-117">重写 <xref:System.IdentityModel.Tokens.IssuerNameRegistry.LoadCustomConfiguration%2A> 方法以使颁发者名称注册表可以从配置文件中进行初始化。</span><span class="sxs-lookup"><span data-stu-id="0ef10-117">Override the <xref:System.IdentityModel.Tokens.IssuerNameRegistry.LoadCustomConfiguration%2A> method to enable your issuer name registry to be initialized from a configuration file.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0ef10-118">下面的代码演示 <xref:System.IdentityModel.Tokens.IssuerNameRegistry> 类的实现，该实现仅接受使用主题为 "CN = localhost" 的证书的颁发者。</span><span class="sxs-lookup"><span data-stu-id="0ef10-118">The following code shows an implementation of the <xref:System.IdentityModel.Tokens.IssuerNameRegistry> class that only accepts issuers that use certificates with subject "CN=localhost".</span></span>  
  
> [!WARNING]
>  <span data-ttu-id="0ef10-119">下面的代码仅用于说明目的。</span><span class="sxs-lookup"><span data-stu-id="0ef10-119">The following code is for illustrative purposes only.</span></span> <span data-ttu-id="0ef10-120">验证基于使用者名称的证书不是一种好的做法。</span><span class="sxs-lookup"><span data-stu-id="0ef10-120">Validating certificates based on subject name is not a good practice.</span></span> <span data-ttu-id="0ef10-121">不应在生产中使用此代码。</span><span class="sxs-lookup"><span data-stu-id="0ef10-121">This code should not be used as is in production.</span></span>  
  
 [!code-csharp[WifIssuerNameRegistry#1](~/samples/snippets/csharp/VS_Snippets_Misc/wifissuernameregistry/cs/mvcwepapp/trustedissuernameregistry.cs#1)]  
  
 <span data-ttu-id="0ef10-122">下面显示了使用可信颁发者名称注册表配置应用程序所需的 XML。</span><span class="sxs-lookup"><span data-stu-id="0ef10-122">The following shows the XML necessary to configure an application with the trusted issuer name registry.</span></span>  
  
```xml  
<system.identityModel>  
  <identityConfiguration>  
    <issuerNameRegistry type="System.IdentityModel.Samples.TrustedIssuerNameRegistry, MyApp" />  
  </identityConfiguration>  
</system.identityModel>  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry" />
    <altmember cref="T:System.IdentityModel.Tokens.SecurityTokenHandler" />
    <related type="Article" href="/dotnet/framework/configure-apps/file-schema/windows-identity-foundation/issuernameregistry"><span data-ttu-id="0ef10-123">&lt;issuerNameRegistry&gt;</span><span class="sxs-lookup"><span data-stu-id="0ef10-123">&lt;issuerNameRegistry&gt;</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected IssuerNameRegistry ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.IssuerNameRegistry.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; IssuerNameRegistry();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0ef10-124">初始化 <see cref="T:System.IdentityModel.Tokens.IssuerNameRegistry" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="0ef10-124">Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.IssuerNameRegistry" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetIssuerName">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="0ef10-125">当在派生类中重写时，返回指定安全令牌的颁发者名称。</span><span class="sxs-lookup"><span data-stu-id="0ef10-125">When overridden in a derived class, returns the issuer name for the specified security token.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0ef10-126">由正在处理令牌的安全令牌处理程序从处理管道中调用。</span><span class="sxs-lookup"><span data-stu-id="0ef10-126">Called from the processing pipeline by the security token handler that is processing the token.</span></span> <span data-ttu-id="0ef10-127">方法应在 RP 应用程序的上下文中返回颁发者的唯一名称。</span><span class="sxs-lookup"><span data-stu-id="0ef10-127">The method should return a unique name for the issuer within the context of the RP application.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetIssuerName">
      <MemberSignature Language="C#" Value="public abstract string GetIssuerName (System.IdentityModel.Tokens.SecurityToken securityToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetIssuerName(class System.IdentityModel.Tokens.SecurityToken securityToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.IssuerNameRegistry.GetIssuerName(System.IdentityModel.Tokens.SecurityToken)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetIssuerName (securityToken As SecurityToken) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::String ^ GetIssuerName(System::IdentityModel::Tokens::SecurityToken ^ securityToken);" />
      <MemberSignature Language="F#" Value="abstract member GetIssuerName : System.IdentityModel.Tokens.SecurityToken -&gt; string" Usage="issuerNameRegistry.GetIssuerName securityToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="securityToken" Type="System.IdentityModel.Tokens.SecurityToken" />
      </Parameters>
      <Docs>
        <param name="securityToken"><span data-ttu-id="0ef10-128">返回颁布者名称的安全令牌。</span><span class="sxs-lookup"><span data-stu-id="0ef10-128">The security token for which to return the issuer name.</span></span></param>
        <summary><span data-ttu-id="0ef10-129">当在派生类中重写时，返回指定安全令牌的颁发者名称。</span><span class="sxs-lookup"><span data-stu-id="0ef10-129">When overridden in a derived class, returns the name of the issuer of the specified security token.</span></span></summary>
        <returns><span data-ttu-id="0ef10-130">发行人名称。</span><span class="sxs-lookup"><span data-stu-id="0ef10-130">The issuer name.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0ef10-131">实现应返回一个非 null 和非空字符串来标识已识别的颁发者，或返回一个 null 字符串来标识无法识别的颁发者。</span><span class="sxs-lookup"><span data-stu-id="0ef10-131">Implementations should return a non-null and non-empty string to identify a recognized issuer, or a null string to identify an unrecognized issuer.</span></span>  
  
 <span data-ttu-id="0ef10-132">由正在处理令牌的安全令牌处理程序从处理管道中调用。</span><span class="sxs-lookup"><span data-stu-id="0ef10-132">Called from the processing pipeline by the security token handler that is processing the token.</span></span> <span data-ttu-id="0ef10-133">方法应在 RP 应用程序的上下文中返回颁发者的唯一名称。</span><span class="sxs-lookup"><span data-stu-id="0ef10-133">The method should return a unique name for the issuer within the context of the RP application.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0ef10-134">下面的代码演示 <xref:System.IdentityModel.Tokens.IssuerNameRegistry.GetIssuerName%2A> 颁发者名称注册表的方法。</span><span class="sxs-lookup"><span data-stu-id="0ef10-134">The following code shows the <xref:System.IdentityModel.Tokens.IssuerNameRegistry.GetIssuerName%2A> method for an issuer name registry.</span></span> <span data-ttu-id="0ef10-135">完整示例位于 <xref:System.IdentityModel.Tokens.IssuerNameRegistry> 类概述主题中。</span><span class="sxs-lookup"><span data-stu-id="0ef10-135">The full sample is in the <xref:System.IdentityModel.Tokens.IssuerNameRegistry> class overview topic.</span></span>  
  
> [!WARNING]
>  <span data-ttu-id="0ef10-136">下面的代码仅用于说明目的。</span><span class="sxs-lookup"><span data-stu-id="0ef10-136">The following code is for illustrative purposes only.</span></span> <span data-ttu-id="0ef10-137">验证基于使用者名称的证书不是一种好的做法。</span><span class="sxs-lookup"><span data-stu-id="0ef10-137">Validating certificates based on subject name is not a good practice.</span></span> <span data-ttu-id="0ef10-138">不应在生产中使用此代码。</span><span class="sxs-lookup"><span data-stu-id="0ef10-138">This code should not be used as is in production.</span></span>  
  
 [!code-csharp[WifIssuerNameRegistry#2](~/samples/snippets/csharp/VS_Snippets_Misc/wifissuernameregistry/cs/mvcwepapp/trustedissuernameregistry.cs#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IdentityModel.Tokens.SecurityTokenHandler" />
      </Docs>
    </Member>
    <Member MemberName="GetIssuerName">
      <MemberSignature Language="C#" Value="public virtual string GetIssuerName (System.IdentityModel.Tokens.SecurityToken securityToken, string requestedIssuerName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetIssuerName(class System.IdentityModel.Tokens.SecurityToken securityToken, string requestedIssuerName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.IssuerNameRegistry.GetIssuerName(System.IdentityModel.Tokens.SecurityToken,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetIssuerName (securityToken As SecurityToken, requestedIssuerName As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetIssuerName(System::IdentityModel::Tokens::SecurityToken ^ securityToken, System::String ^ requestedIssuerName);" />
      <MemberSignature Language="F#" Value="abstract member GetIssuerName : System.IdentityModel.Tokens.SecurityToken * string -&gt; string&#xA;override this.GetIssuerName : System.IdentityModel.Tokens.SecurityToken * string -&gt; string" Usage="issuerNameRegistry.GetIssuerName (securityToken, requestedIssuerName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="securityToken" Type="System.IdentityModel.Tokens.SecurityToken" />
        <Parameter Name="requestedIssuerName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="securityToken"><span data-ttu-id="0ef10-139">返回颁布者名称的安全令牌。</span><span class="sxs-lookup"><span data-stu-id="0ef10-139">The security token for which to return the issuer name.</span></span></param>
        <param name="requestedIssuerName"><span data-ttu-id="0ef10-140">要考虑请求的发行人名称。</span><span class="sxs-lookup"><span data-stu-id="0ef10-140">An issuer name to consider in the request.</span></span></param>
        <summary><span data-ttu-id="0ef10-141">当在派生类中重写时，返回指定安全令牌的颁发者名称。</span><span class="sxs-lookup"><span data-stu-id="0ef10-141">When overridden in a derived class, returns the name of the issuer of the specified security token.</span></span> <span data-ttu-id="0ef10-142">在确定要返回的颁布者名称中要考虑的指定的颁布者名称。</span><span class="sxs-lookup"><span data-stu-id="0ef10-142">The specified issuer name may be considered in determining the issuer name to return.</span></span></summary>
        <returns><span data-ttu-id="0ef10-143">发行人名称。</span><span class="sxs-lookup"><span data-stu-id="0ef10-143">The issuer name.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0ef10-144">默认实现将忽略 `requestedIssuerName` 参数，并只调用 <xref:System.IdentityModel.Tokens.IssuerNameRegistry.GetIssuerName%28System.IdentityModel.Tokens.SecurityToken%29?displayProperty=nameWithType> 方法。</span><span class="sxs-lookup"><span data-stu-id="0ef10-144">The default implementation ignores the `requestedIssuerName` parameter and simply calls the <xref:System.IdentityModel.Tokens.IssuerNameRegistry.GetIssuerName%28System.IdentityModel.Tokens.SecurityToken%29?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="0ef10-145">由正在处理令牌的安全令牌处理程序从处理管道中调用。</span><span class="sxs-lookup"><span data-stu-id="0ef10-145">Called from the processing pipeline by the security token handler that is processing the token.</span></span> <span data-ttu-id="0ef10-146">方法应在 RP 应用程序的上下文中返回颁发者的唯一名称。</span><span class="sxs-lookup"><span data-stu-id="0ef10-146">The method should return a unique name for the issuer within the context of the RP application.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IdentityModel.Tokens.SecurityTokenHandler" />
      </Docs>
    </Member>
    <Member MemberName="GetWindowsIssuerName">
      <MemberSignature Language="C#" Value="public virtual string GetWindowsIssuerName ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetWindowsIssuerName() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.IssuerNameRegistry.GetWindowsIssuerName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetWindowsIssuerName () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetWindowsIssuerName();" />
      <MemberSignature Language="F#" Value="abstract member GetWindowsIssuerName : unit -&gt; string&#xA;override this.GetWindowsIssuerName : unit -&gt; string" Usage="issuerNameRegistry.GetWindowsIssuerName " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0ef10-147">返回用于 Windows 声明的默认颁发者名称。</span><span class="sxs-lookup"><span data-stu-id="0ef10-147">Returns the default issuer name to be used for Windows claims.</span></span></summary>
        <returns><span data-ttu-id="0ef10-148">Windows 声明的默认颁发者名称。</span><span class="sxs-lookup"><span data-stu-id="0ef10-148">The default issuer name for Windows claims.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0ef10-149">默认实现返回 <xref:System.Security.Claims.ClaimsIdentity.DefaultIssuer>。</span><span class="sxs-lookup"><span data-stu-id="0ef10-149">The default implementation returns <xref:System.Security.Claims.ClaimsIdentity.DefaultIssuer>.</span></span>  
  
 <span data-ttu-id="0ef10-150">由正在处理令牌的安全令牌处理程序从处理管道中调用。</span><span class="sxs-lookup"><span data-stu-id="0ef10-150">Called from the processing pipeline by the security token handler that is processing the token.</span></span> <span data-ttu-id="0ef10-151">方法应在 RP 应用程序的上下文中返回颁发者的唯一名称。</span><span class="sxs-lookup"><span data-stu-id="0ef10-151">The method should return a unique name for the issuer within the context of the RP application.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IdentityModel.Tokens.SecurityTokenHandler" />
      </Docs>
    </Member>
    <Member MemberName="LoadCustomConfiguration">
      <MemberSignature Language="C#" Value="public virtual void LoadCustomConfiguration (System.Xml.XmlNodeList nodelist);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void LoadCustomConfiguration(class System.Xml.XmlNodeList nodelist) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.IssuerNameRegistry.LoadCustomConfiguration(System.Xml.XmlNodeList)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub LoadCustomConfiguration (nodelist As XmlNodeList)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void LoadCustomConfiguration(System::Xml::XmlNodeList ^ nodelist);" />
      <MemberSignature Language="F#" Value="abstract member LoadCustomConfiguration : System.Xml.XmlNodeList -&gt; unit&#xA;override this.LoadCustomConfiguration : System.Xml.XmlNodeList -&gt; unit" Usage="issuerNameRegistry.LoadCustomConfiguration nodelist" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IdentityModel.Configuration.ICustomIdentityConfiguration.LoadCustomConfiguration(System.Xml.XmlNodeList)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nodelist" Type="System.Xml.XmlNodeList" />
      </Parameters>
      <Docs>
        <param name="nodelist"><span data-ttu-id="0ef10-152">配置 XML 元素。</span><span class="sxs-lookup"><span data-stu-id="0ef10-152">The configuration XML elements.</span></span> <span data-ttu-id="0ef10-153">列表中的每个节点都属于 <see cref="T:System.Xml.XmlElement" /> 类型。</span><span class="sxs-lookup"><span data-stu-id="0ef10-153">Each node in the list is of type <see cref="T:System.Xml.XmlElement" />.</span></span></param>
        <summary><span data-ttu-id="0ef10-154">在派生类中重写时，将从 XML 中加载自定义配置。</span><span class="sxs-lookup"><span data-stu-id="0ef10-154">When overridden in a derived class, loads custom configuration from XML.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0ef10-155">此 <xref:System.IdentityModel.Tokens.IssuerNameRegistry.LoadCustomConfiguration%2A> 方法由配置基础结构调用。</span><span class="sxs-lookup"><span data-stu-id="0ef10-155">The <xref:System.IdentityModel.Tokens.IssuerNameRegistry.LoadCustomConfiguration%2A> method is called by the configuration infrastructure.</span></span> <span data-ttu-id="0ef10-156">调用此方法时， `nodelist` 将包含配置文件中的[ &lt; issuerNameRegistry &gt; ](/dotnet/framework/configure-apps/file-schema/windows-identity-foundation/issuernameregistry)元素的顶级子元素。</span><span class="sxs-lookup"><span data-stu-id="0ef10-156">When this method is called, the `nodelist` will contain the top-level child elements of the [&lt;issuerNameRegistry&gt;](/dotnet/framework/configure-apps/file-schema/windows-identity-foundation/issuernameregistry) element from the configuration file.</span></span> <span data-ttu-id="0ef10-157">其中每个反过来可能包含特性或子元素，具体取决于为派生类定义的配置架构。</span><span class="sxs-lookup"><span data-stu-id="0ef10-157">Each of these may, in turn, contain attributes or child elements depending on the configuration schema you define for your derived class.</span></span>  
  
 <span data-ttu-id="0ef10-158">默认实现引发 <xref:System.NotImplementedException> 。</span><span class="sxs-lookup"><span data-stu-id="0ef10-158">The default implementation throws a <xref:System.NotImplementedException>.</span></span> <span data-ttu-id="0ef10-159">在派生类中重写此方法可以从配置文件中初始化颁发者名称注册表。</span><span class="sxs-lookup"><span data-stu-id="0ef10-159">Override this method in your derived class to enable initialization of your issuer name registry from a configuration file.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/configure-apps/file-schema/windows-identity-foundation/issuernameregistry"><span data-ttu-id="0ef10-160">&lt;issuerNameRegistry&gt;</span><span class="sxs-lookup"><span data-stu-id="0ef10-160">&lt;issuerNameRegistry&gt;</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>
