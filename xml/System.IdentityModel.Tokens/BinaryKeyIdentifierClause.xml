<Type Name="BinaryKeyIdentifierClause" FullName="System.IdentityModel.Tokens.BinaryKeyIdentifierClause">
  <Metadata><Meta Name="ms.openlocfilehash" Value="384f5fc41977185c1355a361ee37cd84be99e063" /><Meta Name="ms.sourcegitcommit" Value="397961a0164281b579f68064c3bb66c071f374d9" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/14/2020" /><Meta Name="ms.locfileid" Value="70333543" /></Metadata><TypeSignature Language="C#" Value="public abstract class BinaryKeyIdentifierClause : System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit BinaryKeyIdentifierClause extends System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.Tokens.BinaryKeyIdentifierClause" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class BinaryKeyIdentifierClause&#xA;Inherits SecurityKeyIdentifierClause" />
  <TypeSignature Language="C++ CLI" Value="public ref class BinaryKeyIdentifierClause abstract : System::IdentityModel::Tokens::SecurityKeyIdentifierClause" />
  <TypeSignature Language="F#" Value="type BinaryKeyIdentifierClause = class&#xA;    inherit SecurityKeyIdentifierClause" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.IdentityModel.Tokens.SecurityKeyIdentifierClause</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="197b8-101">表示基于二进制数据的密钥标识符子句的基类。</span><span class="sxs-lookup"><span data-stu-id="197b8-101">Represents a base class for key identifier clauses that are based upon binary data.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="197b8-102">除非创建自定义安全令牌服务，否则，通常不需要使用 <xref:System.IdentityModel.Tokens.BinaryKeyIdentifierClause>。</span><span class="sxs-lookup"><span data-stu-id="197b8-102">Typically, the <xref:System.IdentityModel.Tokens.BinaryKeyIdentifierClause> does not need to be used, other than when a custom security token service is created.</span></span> <span data-ttu-id="197b8-103">当安全令牌服务返回安全令牌时，已颁发的安全令牌包含对附加的和未附加的安全令牌的引用。</span><span class="sxs-lookup"><span data-stu-id="197b8-103">When a security token service returns a security token, the issued security token contains references to attached and unattached security tokens.</span></span> <span data-ttu-id="197b8-104">附加引用指包含在 SOAP 消息的安全标头中的安全令牌，而未附加引用是未包含在 SOAP 消息的安全标头中的安全令牌。</span><span class="sxs-lookup"><span data-stu-id="197b8-104">Attached references refer to security tokens that are contained within the security header of a SOAP message and unattached references are security tokens that are not included within the security header of the SOAP message.</span></span> <span data-ttu-id="197b8-105">这些引用通常确认已颁发的安全令牌的真实性。</span><span class="sxs-lookup"><span data-stu-id="197b8-105">These references typically affirm the authenticity of the issued security token.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="197b8-106">初始化 <see cref="T:System.IdentityModel.Tokens.BinaryKeyIdentifierClause" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="197b8-106">Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.BinaryKeyIdentifierClause" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected BinaryKeyIdentifierClause (string clauseType, byte[] identificationData, bool cloneBuffer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(string clauseType, unsigned int8[] identificationData, bool cloneBuffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.#ctor(System.String,System.Byte[],System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (clauseType As String, identificationData As Byte(), cloneBuffer As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; BinaryKeyIdentifierClause(System::String ^ clauseType, cli::array &lt;System::Byte&gt; ^ identificationData, bool cloneBuffer);" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Tokens.BinaryKeyIdentifierClause : string * byte[] * bool -&gt; System.IdentityModel.Tokens.BinaryKeyIdentifierClause" Usage="new System.IdentityModel.Tokens.BinaryKeyIdentifierClause (clauseType, identificationData, cloneBuffer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="clauseType" Type="System.String" />
        <Parameter Name="identificationData" Type="System.Byte[]" />
        <Parameter Name="cloneBuffer" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="clauseType"><span data-ttu-id="197b8-107">密钥标识符子句类型。</span><span class="sxs-lookup"><span data-stu-id="197b8-107">The key identifier clause type.</span></span> <span data-ttu-id="197b8-108">设置 <see cref="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.ClauseType" /> 属性的值。</span><span class="sxs-lookup"><span data-stu-id="197b8-108">Sets the value of the <see cref="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.ClauseType" /> property.</span></span></param>
        <param name="identificationData"><span data-ttu-id="197b8-109">一个 <see cref="T:System.Byte" /> 数组，包含表示密钥标识符的二进制数据。</span><span class="sxs-lookup"><span data-stu-id="197b8-109">An array of <see cref="T:System.Byte" /> that contains the binary data that represents the key identifier.</span></span></param>
        <param name="cloneBuffer"><span data-ttu-id="197b8-110">如果要克隆传入 <see langword="true" /> 参数的数组，则为 <paramref name="identificationData" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="197b8-110"><see langword="true" /> to clone the array passed into the <paramref name="identificationData" /> parameter; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="197b8-111">使用指定的密钥标识符子句类型、二进制数据以及一个指示是否必须克隆二进制数据的值来初始化 <see cref="T:System.IdentityModel.Tokens.BinaryKeyIdentifierClause" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="197b8-111">Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.BinaryKeyIdentifierClause" /> class using the specified key identifier clause type, binary data and a value that indicates whether the binary data must be cloned.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="197b8-112"><paramref name="identificationData" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="197b8-112"><paramref name="identificationData" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="197b8-113"><paramref name="identificationData" /> 的长度为零。</span><span class="sxs-lookup"><span data-stu-id="197b8-113"><paramref name="identificationData" /> is zero length.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected BinaryKeyIdentifierClause (string clauseType, byte[] identificationData, bool cloneBuffer, byte[] derivationNonce, int derivationLength);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(string clauseType, unsigned int8[] identificationData, bool cloneBuffer, unsigned int8[] derivationNonce, int32 derivationLength) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.#ctor(System.String,System.Byte[],System.Boolean,System.Byte[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (clauseType As String, identificationData As Byte(), cloneBuffer As Boolean, derivationNonce As Byte(), derivationLength As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; BinaryKeyIdentifierClause(System::String ^ clauseType, cli::array &lt;System::Byte&gt; ^ identificationData, bool cloneBuffer, cli::array &lt;System::Byte&gt; ^ derivationNonce, int derivationLength);" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Tokens.BinaryKeyIdentifierClause : string * byte[] * bool * byte[] * int -&gt; System.IdentityModel.Tokens.BinaryKeyIdentifierClause" Usage="new System.IdentityModel.Tokens.BinaryKeyIdentifierClause (clauseType, identificationData, cloneBuffer, derivationNonce, derivationLength)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="clauseType" Type="System.String" />
        <Parameter Name="identificationData" Type="System.Byte[]" />
        <Parameter Name="cloneBuffer" Type="System.Boolean" />
        <Parameter Name="derivationNonce" Type="System.Byte[]" />
        <Parameter Name="derivationLength" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="clauseType"><span data-ttu-id="197b8-114">密钥标识符子句类型。</span><span class="sxs-lookup"><span data-stu-id="197b8-114">The key identifier clause type.</span></span> <span data-ttu-id="197b8-115">设置 <see cref="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.ClauseType" /> 属性的值。</span><span class="sxs-lookup"><span data-stu-id="197b8-115">Sets the value of the <see cref="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.ClauseType" /> property.</span></span></param>
        <param name="identificationData"><span data-ttu-id="197b8-116">一个 <see cref="T:System.Byte" /> 数组，包含表示密钥标识符的二进制数据。</span><span class="sxs-lookup"><span data-stu-id="197b8-116">An array of <see cref="T:System.Byte" /> that contains the binary data that represents the key identifier.</span></span> <span data-ttu-id="197b8-117">设置 <see cref="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer" /> 方法所返回的二进制数据。</span><span class="sxs-lookup"><span data-stu-id="197b8-117">Sets the binary data that is returned by the <see cref="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer" /> method.</span></span></param>
        <param name="cloneBuffer"><span data-ttu-id="197b8-118">如果要克隆传入 <see langword="true" /> 参数的数组，则为 <paramref name="identificationData" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="197b8-118"><see langword="true" /> to clone the array passed into the <paramref name="identificationData" /> parameter; otherwise, <see langword="false" />.</span></span></param>
        <param name="derivationNonce"><span data-ttu-id="197b8-119">一个 <see cref="T:System.Byte" /> 数组，包含用于创建派生密钥的 Nonce。</span><span class="sxs-lookup"><span data-stu-id="197b8-119">An array of <see cref="T:System.Byte" /> that contains the nonce that was used to create a derived key.</span></span> <span data-ttu-id="197b8-120">设置 <see cref="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.GetDerivationNonce" /> 方法所返回的值。</span><span class="sxs-lookup"><span data-stu-id="197b8-120">Sets the value that is returned by the <see cref="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.GetDerivationNonce" /> method.</span></span></param>
        <param name="derivationLength"><span data-ttu-id="197b8-121">派生密钥的大小。</span><span class="sxs-lookup"><span data-stu-id="197b8-121">The size of the derived key.</span></span> <span data-ttu-id="197b8-122">设置 <see cref="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.DerivationLength" /> 属性的值。</span><span class="sxs-lookup"><span data-stu-id="197b8-122">Sets the value of the <see cref="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.DerivationLength" /> property.</span></span></param>
        <summary><span data-ttu-id="197b8-123">使用指定的密钥标识符子句类型、二进制数据、一个指示是否必须克隆二进制数据的值、一个 Nonce 和密钥长度来初始化 <see cref="T:System.IdentityModel.Tokens.BinaryKeyIdentifierClause" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="197b8-123">Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.BinaryKeyIdentifierClause" /> class using the specified key identifier clause type, binary data, a value that indicates whether the binary data must be cloned, a nonce and the key length.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="197b8-124">如果指定 `derivationNonce` 和 `derivationLength` 参数，则使用隐含的派生密钥，而不是令牌的直接安全密钥。</span><span class="sxs-lookup"><span data-stu-id="197b8-124">When the `derivationNonce` and `derivationLength` parameters are specified, the implied derived key is used instead of the direct security key of the token.</span></span>  
  
 <span data-ttu-id="197b8-125">无论传入 `cloneBuffer` 参数的值是什么，<xref:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer%2A> 方法总是返回传入 `identificationData` 参数的数组的克隆。</span><span class="sxs-lookup"><span data-stu-id="197b8-125">Regardless of the value passed into the `cloneBuffer` parameter, the <xref:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer%2A> method always returns a clone of the array passed into the `identificationData` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="197b8-126"><paramref name="identificationData" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="197b8-126"><paramref name="identificationData" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="197b8-127"><paramref name="identificationData" /> 的长度为零。</span><span class="sxs-lookup"><span data-stu-id="197b8-127"><paramref name="identificationData" /> is zero length.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetBuffer">
      <MemberSignature Language="C#" Value="public byte[] GetBuffer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] GetBuffer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer" />
      <MemberSignature Language="VB.NET" Value="Public Function GetBuffer () As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ GetBuffer();" />
      <MemberSignature Language="F#" Value="member this.GetBuffer : unit -&gt; byte[]" Usage="binaryKeyIdentifierClause.GetBuffer " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="197b8-128">获取表示密钥标识符的二进制数据。</span><span class="sxs-lookup"><span data-stu-id="197b8-128">Gets the binary data that represents the key identifier.</span></span></summary>
        <returns><span data-ttu-id="197b8-129">一个 <see cref="T:System.Byte" /> 数组，包含表示密钥标识符的二进制数据。</span><span class="sxs-lookup"><span data-stu-id="197b8-129">An array of <see cref="T:System.Byte" /> that contains the binary data that represents the key identifier.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="197b8-130">无论传入构造函数的 `cloneBuffer` 参数的值是什么，<xref:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer%2A> 方法总是返回传入 `identificationData` 参数的数组的克隆。</span><span class="sxs-lookup"><span data-stu-id="197b8-130">Regardless of the value passed into the constructor's `cloneBuffer` parameter, the <xref:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer%2A> method always returns a clone of the array passed into the constructor's `identificationData` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetRawBuffer" />
      </Docs>
    </Member>
    <Member MemberName="GetRawBuffer">
      <MemberSignature Language="C#" Value="protected byte[] GetRawBuffer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance unsigned int8[] GetRawBuffer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetRawBuffer" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetRawBuffer () As Byte()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; cli::array &lt;System::Byte&gt; ^ GetRawBuffer();" />
      <MemberSignature Language="F#" Value="member this.GetRawBuffer : unit -&gt; byte[]" Usage="binaryKeyIdentifierClause.GetRawBuffer " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="197b8-131">获取表示密钥标识符的二进制数据。</span><span class="sxs-lookup"><span data-stu-id="197b8-131">Gets the binary data that represents the key identifier.</span></span></summary>
        <returns><span data-ttu-id="197b8-132">一个 <see cref="T:System.Byte" /> 数组，包含表示密钥标识符的二进制数据。</span><span class="sxs-lookup"><span data-stu-id="197b8-132">An array of <see cref="T:System.Byte" /> that contains the binary data that represents the key identifier.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="197b8-133">如果传入 <xref:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetRawBuffer%2A> 的值为 `identificationData`，则 `cloneBuffer` 方法返回的数组是构造函数的 `true` 参数的克隆；否则为原数组。</span><span class="sxs-lookup"><span data-stu-id="197b8-133">The array returned by the <xref:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetRawBuffer%2A> method is a clone of the constructor's `identificationData` parameter when the value passed into the `cloneBuffer` is `true`; otherwise it is same array.</span></span>  
  
 <span data-ttu-id="197b8-134"><xref:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer%2A> 方法总是返回传入构造函数的 `identificationData` 参数的数组的克隆。</span><span class="sxs-lookup"><span data-stu-id="197b8-134">The <xref:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer%2A> method always returns a clone of the array passed into the constructor's `identificationData` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Matches">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="197b8-135">返回一个值，该值指示此实例的密钥标识符是否与指定的对象相匹配。</span><span class="sxs-lookup"><span data-stu-id="197b8-135">Returns a value that indicates whether the key identifier for this instance matches the specified object.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Matches">
      <MemberSignature Language="C#" Value="public bool Matches (byte[] data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Matches(unsigned int8[] data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Matches (data As Byte()) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Matches(cli::array &lt;System::Byte&gt; ^ data);" />
      <MemberSignature Language="F#" Value="override this.Matches : byte[] -&gt; bool" Usage="binaryKeyIdentifierClause.Matches data" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="197b8-136">要进行比较的 <see cref="T:System.Byte" /> 数组。</span><span class="sxs-lookup"><span data-stu-id="197b8-136">An array of <see cref="T:System.Byte" /> to compare to.</span></span></param>
        <summary><span data-ttu-id="197b8-137">返回一个值，该值指示当前实例的二进制数据是否与指定的二进制数据相匹配。</span><span class="sxs-lookup"><span data-stu-id="197b8-137">Returns a value that indicates whether the binary data for the current instance matches the specified binary data.</span></span></summary>
        <returns><span data-ttu-id="197b8-138">如果 <paramref name="data" /> 等效于 <see cref="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer" /> 方法所返回的二进制数据，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="197b8-138"><see langword="true" /> if <paramref name="data" /> is equivalent to the binary data returned by the <see cref="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer" /> method; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Matches">
      <MemberSignature Language="C#" Value="public bool Matches (byte[] data, int offset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Matches(unsigned int8[] data, int32 offset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.Byte[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Matches (data As Byte(), offset As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Matches(cli::array &lt;System::Byte&gt; ^ data, int offset);" />
      <MemberSignature Language="F#" Value="override this.Matches : byte[] * int -&gt; bool" Usage="binaryKeyIdentifierClause.Matches (data, offset)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="197b8-139">要进行比较的 <see cref="T:System.Byte" /> 数组。</span><span class="sxs-lookup"><span data-stu-id="197b8-139">An array of <see cref="T:System.Byte" /> to compare to.</span></span></param>
        <param name="offset"><span data-ttu-id="197b8-140">数组中的索引，从此处开始比较。</span><span class="sxs-lookup"><span data-stu-id="197b8-140">The index in the array at which the comparison starts.</span></span></param>
        <summary><span data-ttu-id="197b8-141">返回一个值，该值指示当前实例的二进制数据是否与指定偏移处的指定二进制数据等效。</span><span class="sxs-lookup"><span data-stu-id="197b8-141">Returns a value that indicates whether the binary data for the current instance is equivalent to the specified binary data at the specified offset.</span></span></summary>
        <returns><span data-ttu-id="197b8-142">如果从 <paramref name="data" /> 参数中指定的索引处开始，<paramref name="offset" /> 参数中的二进制数据与 <see cref="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer" /> 方法（从索引零开始）所返回的二进制数据等效，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="197b8-142"><see langword="true" /> if the binary data in the <paramref name="data" /> parameter starting at the index specified in the <paramref name="offset" /> parameter is equivalent to the binary data returned by the <see cref="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer" /> method (starting at index zero); otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Matches">
      <MemberSignature Language="C#" Value="public override bool Matches (System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause);" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Matches(class System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause) cil managed" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Matches (keyIdentifierClause As SecurityKeyIdentifierClause) As Boolean" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Matches(System::IdentityModel::Tokens::SecurityKeyIdentifierClause ^ keyIdentifierClause);" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="F#" Value="override this.Matches : System.IdentityModel.Tokens.SecurityKeyIdentifierClause -&gt; bool" Usage="binaryKeyIdentifierClause.Matches keyIdentifierClause" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C#" Value="public override bool Matches (System.IdentityModel.Tokens.SecurityKeyIdentifierClause clause);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Matches(class System.IdentityModel.Tokens.SecurityKeyIdentifierClause clause) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Matches (clause As SecurityKeyIdentifierClause) As Boolean" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Matches(System::IdentityModel::Tokens::SecurityKeyIdentifierClause ^ clause);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="override this.Matches : System.IdentityModel.Tokens.SecurityKeyIdentifierClause -&gt; bool" Usage="binaryKeyIdentifierClause.Matches clause" FrameworkAlternate="xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyIdentifierClause" Type="System.IdentityModel.Tokens.SecurityKeyIdentifierClause" Index="0" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="clause" Type="System.IdentityModel.Tokens.SecurityKeyIdentifierClause" Index="0" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="keyIdentifierClause"><span data-ttu-id="197b8-143">要进行比较的 <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />。</span><span class="sxs-lookup"><span data-stu-id="197b8-143">A <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> to compare to.</span></span></param>
        <param name="clause"><span data-ttu-id="197b8-144">要进行比较的 <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />。</span><span class="sxs-lookup"><span data-stu-id="197b8-144">A <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> to compare to.</span></span></param>
        <summary><span data-ttu-id="197b8-145">返回一个值，该值指示此实例的密钥标识符是否等效于指定的密钥标识符子句。</span><span class="sxs-lookup"><span data-stu-id="197b8-145">Returns a value that indicates whether the key identifier for this instance is equivalent to the specified key identifier clause.</span></span></summary>
        <returns><span data-ttu-id="197b8-146">如果 <paramref name="keyIdentifierClause" /> 为 <see cref="T:System.IdentityModel.Tokens.BinaryKeyIdentifierClause" /> 类型并且 <see cref="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer" /> 方法所返回的二进制数据对于 <paramref name="keyIdentifierClause" /> 参数和当前实例是相同的，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="197b8-146"><see langword="true" /> if <paramref name="keyIdentifierClause" /> is of type <see cref="T:System.IdentityModel.Tokens.BinaryKeyIdentifierClause" /> and the binary data returned by the <see cref="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer" /> method is identical for the <paramref name="keyIdentifierClause" /> parameter and the current instance; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
