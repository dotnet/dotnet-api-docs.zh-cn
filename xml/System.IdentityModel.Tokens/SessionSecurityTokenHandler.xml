<Type Name="SessionSecurityTokenHandler" FullName="System.IdentityModel.Tokens.SessionSecurityTokenHandler">
  <Metadata><Meta Name="ms.openlocfilehash" Value="a0398e86acdddfc1d5076e294aae91b22088c374" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89805486" /></Metadata><TypeSignature Language="C#" Value="public class SessionSecurityTokenHandler : System.IdentityModel.Tokens.SecurityTokenHandler" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SessionSecurityTokenHandler extends System.IdentityModel.Tokens.SecurityTokenHandler" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler" />
  <TypeSignature Language="VB.NET" Value="Public Class SessionSecurityTokenHandler&#xA;Inherits SecurityTokenHandler" />
  <TypeSignature Language="C++ CLI" Value="public ref class SessionSecurityTokenHandler : System::IdentityModel::Tokens::SecurityTokenHandler" />
  <TypeSignature Language="F#" Value="type SessionSecurityTokenHandler = class&#xA;    inherit SecurityTokenHandler" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.IdentityModel.Tokens.SecurityTokenHandler</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="2d2c9-101"><see cref="T:System.IdentityModel.Tokens.SecurityTokenHandler" />类型的 <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> 进程安全标志。</span><span class="sxs-lookup"><span data-stu-id="2d2c9-101">A <see cref="T:System.IdentityModel.Tokens.SecurityTokenHandler" /> that processes security tokens of type <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" />.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d2c9-102"><xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler>类序列化、反序列化和验证会话令牌。</span><span class="sxs-lookup"><span data-stu-id="2d2c9-102">The <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> class serializes, deserializes, and validates session tokens.</span></span> <span data-ttu-id="2d2c9-103">会话令牌是类型为的令牌 <xref:System.IdentityModel.Tokens.SessionSecurityToken> 。</span><span class="sxs-lookup"><span data-stu-id="2d2c9-103">Session tokens are tokens of type <xref:System.IdentityModel.Tokens.SessionSecurityToken>.</span></span> <span data-ttu-id="2d2c9-104"><xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler>类将标记序列化为 cookie 格式。</span><span class="sxs-lookup"><span data-stu-id="2d2c9-104">The <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> class serializes the tokens to and from cookie format.</span></span> <span data-ttu-id="2d2c9-105">默认情况下，类将标记序列化为 WS 安全会话 Feb2005 或 WS 安全会话 1.3 `<wsc:SecurityContextToken>` 元素。</span><span class="sxs-lookup"><span data-stu-id="2d2c9-105">By default, the class serializes tokens into WS-Secure Conversation Feb2005 or WS-Secure Conversation 1.3 `<wsc:SecurityContextToken>` elements.</span></span> <span data-ttu-id="2d2c9-106">会话令牌由 <xref:System.IdentityModel.Services.WSFederationAuthenticationModule> (WSFAM) 和 <xref:System.IdentityModel.Services.SessionAuthenticationModule> (SAM) 用于存储有关会话的信息，这主要是 <xref:System.Security.Claims.ClaimsPrincipal> 与经过身份验证的用户和会话开始时间和过期时间关联的。</span><span class="sxs-lookup"><span data-stu-id="2d2c9-106">Session tokens are used by the <xref:System.IdentityModel.Services.WSFederationAuthenticationModule> (WSFAM) and the <xref:System.IdentityModel.Services.SessionAuthenticationModule> (SAM) to store information about a session, this is primarily the <xref:System.Security.Claims.ClaimsPrincipal> associated with the authenticated user and the session start and expiration times.</span></span>  
  
 <span data-ttu-id="2d2c9-107">在被动方案中， <xref:System.IdentityModel.Services.WSFederationAuthenticationModule> <xref:System.IdentityModel.Services.SessionAuthenticationModule> 从身份验证管道调用 (SAM) ，以便从 <xref:System.Security.Claims.ClaimsPrincipal> 表示经过身份验证的用户的中创建会话令牌。</span><span class="sxs-lookup"><span data-stu-id="2d2c9-107">In passive scenarios, the <xref:System.IdentityModel.Services.WSFederationAuthenticationModule> calls into the <xref:System.IdentityModel.Services.SessionAuthenticationModule> (SAM) from the authentication pipeline to create a session token from the <xref:System.Security.Claims.ClaimsPrincipal> that represents the authenticated user.</span></span> <span data-ttu-id="2d2c9-108">SAM 使用其配置 <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> 来创建令牌并将其序列化为 cookie (并在后续请求) 上反序列化 cookie 中的令牌。</span><span class="sxs-lookup"><span data-stu-id="2d2c9-108">The SAM uses its configured <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> to create the token and to serialize it into a cookie (and to deserialize the token from a cookie on subsequent requests).</span></span> <span data-ttu-id="2d2c9-109">SAM 使用其已配置类的实例 <xref:System.IdentityModel.Services.CookieHandler> 将 cookie 写入 HTTP 响应。</span><span class="sxs-lookup"><span data-stu-id="2d2c9-109">The SAM uses an instance of its configured <xref:System.IdentityModel.Services.CookieHandler> class to write the cookie back to the HTTP Response.</span></span> <span data-ttu-id="2d2c9-110">然后，将此 cookie 返回给客户端，并在后续的请求中，客户端可以提供 cookie，而不是向标识提供程序重新获取安全令牌。</span><span class="sxs-lookup"><span data-stu-id="2d2c9-110">This cookie is then returned to the client and on subsequent requests the client can present the cookie rather than making a round trip back to the identity provider to re-obtain a security token.</span></span> <span data-ttu-id="2d2c9-111">有关会话如何与 WIF 操作的详细信息，请参阅 [WIF 会话管理](/dotnet/framework/security/wif-session-management)。</span><span class="sxs-lookup"><span data-stu-id="2d2c9-111">For more information about how sessions operate with WIF, see [WIF Session Management](/dotnet/framework/security/wif-session-management).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2d2c9-112">\<securityTokenHandlers>配置元素可用于指定 <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> 负责保护应用程序会话的。</span><span class="sxs-lookup"><span data-stu-id="2d2c9-112">The \<securityTokenHandlers> configuration element can be used to specify a <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> that has the responsibility for securing the application's sessions.</span></span> <span data-ttu-id="2d2c9-113">在更改此配置设置时，开发人员应小心，因为配置错误的系统可能会导致应用程序受到损害。</span><span class="sxs-lookup"><span data-stu-id="2d2c9-113">Developers should use caution when changing this configuration setting, as a misconfigured system could result in application compromise.</span></span> <span data-ttu-id="2d2c9-114">例如，指定派生并将 <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> 空转换 (CookieTransform) 集合传递给基，会导致将用户标识序列化为未受保护的 cookie。</span><span class="sxs-lookup"><span data-stu-id="2d2c9-114">For example, specifying a derived <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> and passing an empty Transforms (CookieTransform) collection to the base, would result in the users identity being serialized into a cookie that was not protected.</span></span> <span data-ttu-id="2d2c9-115">这会使攻击者能够修改身份，从而更改访问权限。</span><span class="sxs-lookup"><span data-stu-id="2d2c9-115">This could allow an attacker to modify the identity and therefore change access privileges.</span></span>  
  
 <span data-ttu-id="2d2c9-116">如果会话令牌处于引用模式，即其 <xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A?displayProperty=nameWithType> 属性为 `true` ，则会话令牌处理程序只会序列化在中重新生成其密钥所需的会话令牌的属性 <xref:System.IdentityModel.Tokens.SessionSecurityTokenCache> 。</span><span class="sxs-lookup"><span data-stu-id="2d2c9-116">If the session token is in reference mode, that is, its <xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A?displayProperty=nameWithType> property is `true`, the session token handler only serializes properties of the session token that are needed to regenerate its key in the <xref:System.IdentityModel.Tokens.SessionSecurityTokenCache>.</span></span> <span data-ttu-id="2d2c9-117">默认情况下， <xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey> 类用于表示缓存键，而标记处理程序则写入 <xref:System.IdentityModel.Tokens.SessionSecurityToken.ContextId%2A?displayProperty=nameWithType> 令牌的和 <xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyGeneration%2A?displayProperty=nameWithType> 属性。</span><span class="sxs-lookup"><span data-stu-id="2d2c9-117">In the default case, the <xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey> class is used to represent cache keys, and the token handler writes the <xref:System.IdentityModel.Tokens.SessionSecurityToken.ContextId%2A?displayProperty=nameWithType> and <xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyGeneration%2A?displayProperty=nameWithType> properties of the token.</span></span> <span data-ttu-id="2d2c9-118">如果会话令牌不在引用模式下（即， <xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A?displayProperty=nameWithType> 属性为 `false` ，则除了前面提到的属性），处理程序还会 <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ApplyTransforms%2A> 从标记序列化的字节数组调用方法，并将生成的值存储在 cookie 中。</span><span class="sxs-lookup"><span data-stu-id="2d2c9-118">If the session token is not in reference mode, that is, the <xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A?displayProperty=nameWithType> property is `false`, then, in addition to the properties mentioned previously, the handler invokes the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ApplyTransforms%2A> method on a byte array serialized from the token and stores the resulting value in the cookie as well.</span></span> <span data-ttu-id="2d2c9-119">有关如何序列化令牌的更多详细信息，请参阅 <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken%28System.Xml.XmlWriter%2CSystem.IdentityModel.Tokens.SecurityToken%29?displayProperty=nameWithType> 方法。</span><span class="sxs-lookup"><span data-stu-id="2d2c9-119">For more details about how the token is serialized, see the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken%28System.Xml.XmlWriter%2CSystem.IdentityModel.Tokens.SecurityToken%29?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="2d2c9-120"><xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms%2A>属性获取在方法中应用到会话令牌的转换的列表 <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ApplyTransforms%2A> 。</span><span class="sxs-lookup"><span data-stu-id="2d2c9-120">The <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms%2A> property gets the list of transforms that are applied to the session token in the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ApplyTransforms%2A> method.</span></span> <span data-ttu-id="2d2c9-121">所有转换均派生自 <xref:System.IdentityModel.CookieTransform> 类。</span><span class="sxs-lookup"><span data-stu-id="2d2c9-121">All transforms derive from the <xref:System.IdentityModel.CookieTransform> class.</span></span> <span data-ttu-id="2d2c9-122">在默认情况下，将 <xref:System.IdentityModel.DeflateCookieTransform> <xref:System.IdentityModel.ProtectedDataCookieTransform> 应用和。</span><span class="sxs-lookup"><span data-stu-id="2d2c9-122">In the default case the <xref:System.IdentityModel.DeflateCookieTransform> and the <xref:System.IdentityModel.ProtectedDataCookieTransform> are applied.</span></span> <span data-ttu-id="2d2c9-123"><xref:System.IdentityModel.ProtectedDataCookieTransform>使用数据保护 API (DPAPI) 来保护 cookie 材料。</span><span class="sxs-lookup"><span data-stu-id="2d2c9-123">The <xref:System.IdentityModel.ProtectedDataCookieTransform> uses the Data Protection API (DPAPI) to protect the cookie material.</span></span> <span data-ttu-id="2d2c9-124">DPAPI 使用特定于计算机的密钥，该密钥在其保护算法中运行。</span><span class="sxs-lookup"><span data-stu-id="2d2c9-124">DPAPI uses a key that is specific to the computer on which it is running in its protection algorithms.</span></span> <span data-ttu-id="2d2c9-125">出于此原因，默认会话令牌处理程序在 Web 场方案中不可用，因为在这种情况下，在一台计算机上写入的令牌可能需要在另一台计算机上进行读取。</span><span class="sxs-lookup"><span data-stu-id="2d2c9-125">For this reason, the default session token handler is not usable in Web farm scenarios because, in such scenarios, tokens written on one computer may need to be read on another computer.</span></span> <span data-ttu-id="2d2c9-126">您可以使用多种策略来避免此问题。</span><span class="sxs-lookup"><span data-stu-id="2d2c9-126">You can use many strategies to circumvent this issue.</span></span> <span data-ttu-id="2d2c9-127">例如，你能够：</span><span class="sxs-lookup"><span data-stu-id="2d2c9-127">For example, you can:</span></span>  
  
-   <span data-ttu-id="2d2c9-128">用替换默认值 <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> <xref:System.IdentityModel.Services.Tokens.MachineKeySessionSecurityTokenHandler> 。</span><span class="sxs-lookup"><span data-stu-id="2d2c9-128">Replace the default <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> with the <xref:System.IdentityModel.Services.Tokens.MachineKeySessionSecurityTokenHandler>.</span></span> <span data-ttu-id="2d2c9-129"><xref:System.IdentityModel.Services.Tokens.MachineKeySessionSecurityTokenHandler>允许你在配置文件中的 ASP.NET 元素下指定签名和加密密钥 `<machineKey>` 。</span><span class="sxs-lookup"><span data-stu-id="2d2c9-129">The <xref:System.IdentityModel.Services.Tokens.MachineKeySessionSecurityTokenHandler> enables you to specify signing and encryption keys under the ASP.NET `<machineKey>` element in the configuration file.</span></span>  
  
-   <span data-ttu-id="2d2c9-130">为 <xref:System.IdentityModel.Services.FederatedAuthentication.FederationConfigurationCreated?displayProperty=nameWithType> global.asax.cs 文件中的事件提供处理程序，并将默认会话标记处理程序替换为 <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> 具有包含和的转换列表的实例 <xref:System.IdentityModel.RsaSignatureCookieTransform> <xref:System.IdentityModel.RsaEncryptionCookieTransform> 。</span><span class="sxs-lookup"><span data-stu-id="2d2c9-130">Provide a handler for the <xref:System.IdentityModel.Services.FederatedAuthentication.FederationConfigurationCreated?displayProperty=nameWithType> event in the global.asax.cs file and replace the default session token handler with an instance of <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> that has a list of transforms that includes the <xref:System.IdentityModel.RsaSignatureCookieTransform> and the <xref:System.IdentityModel.RsaEncryptionCookieTransform>.</span></span> <span data-ttu-id="2d2c9-131">可以通过调用采用转换列表的构造函数之一来创建新的实例。</span><span class="sxs-lookup"><span data-stu-id="2d2c9-131">You can create the new instance by invoking one of the constructors that takes a list of transforms.</span></span>  
  
-   <span data-ttu-id="2d2c9-132">从基类派生自定义转换 <xref:System.IdentityModel.CookieTransform> ，并使用上面的方法将其包含在要应用的转换的列表中。</span><span class="sxs-lookup"><span data-stu-id="2d2c9-132">Derive a custom transform from the <xref:System.IdentityModel.CookieTransform> base class and use the method above to include it in the list of transforms to be applied.</span></span>  
  
-   <span data-ttu-id="2d2c9-133">从派生自定义令牌处理程序 <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> 并实现你自己的机制。</span><span class="sxs-lookup"><span data-stu-id="2d2c9-133">Derive a custom token handler from <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> and implement your own mechanism.</span></span>  
  
 <span data-ttu-id="2d2c9-134">有关在 Web 场方案中使用会话的详细信息，请参阅 [WIF 和 Web 场](/dotnet/framework/security/wif-and-web-farms)。</span><span class="sxs-lookup"><span data-stu-id="2d2c9-134">For more information about using sessions in Web farm scenarios, see [WIF and Web Farms](/dotnet/framework/security/wif-and-web-farms).</span></span>  
  
 <span data-ttu-id="2d2c9-135"><xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler>包含在默认标记处理程序集合中; 但是，你可以将其替换为自定义会话标记处理程序，方法是先在[ &lt; securityTokenHandlers &gt; ](/dotnet/framework/configure-apps/file-schema/windows-identity-foundation/securitytokenhandlers)元素下指定一个[ &lt; &gt; remove](/dotnet/framework/configure-apps/file-schema/windows-identity-foundation/remove)元素，以从集合中删除默认处理程序，然后使用[ &lt; add &gt; ](/dotnet/framework/configure-apps/file-schema/windows-identity-foundation/add)元素添加自定义令牌处理程序。</span><span class="sxs-lookup"><span data-stu-id="2d2c9-135">The <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> is included in the default token handler collection; however, you can replace it with a custom session token handler by first specifying a [&lt;remove&gt;](/dotnet/framework/configure-apps/file-schema/windows-identity-foundation/remove) element under the [&lt;securityTokenHandlers&gt;](/dotnet/framework/configure-apps/file-schema/windows-identity-foundation/securitytokenhandlers) element to remove the default handler from the collection and then adding your custom token handler using the [&lt;add&gt;](/dotnet/framework/configure-apps/file-schema/windows-identity-foundation/add) element.</span></span> <span data-ttu-id="2d2c9-136">默认情况下，你可以通过在元素下包含[ &lt; &gt; sessionTokenRequirement](/dotnet/framework/configure-apps/file-schema/windows-identity-foundation/sessiontokenrequirement)元素来指定默认的令牌生存期 `<add>` 。</span><span class="sxs-lookup"><span data-stu-id="2d2c9-136">By default, you can specify the default token lifetime by including the [&lt;sessionTokenRequirement&gt;](/dotnet/framework/configure-apps/file-schema/windows-identity-foundation/sessiontokenrequirement) element under the `<add>` element.</span></span> <span data-ttu-id="2d2c9-137">可以通过重写方法来设计自定义标记处理程序，以便在元素下采用自定义配置元素，从而 `<add>` <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.LoadCustomConfiguration%2A> 提供处理它们的逻辑。</span><span class="sxs-lookup"><span data-stu-id="2d2c9-137">You can design a custom token handler to take custom configuration elements under the `<add>` element by overriding the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.LoadCustomConfiguration%2A> method to provide the logic to process them.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2d2c9-138">下面的 XML 演示如何在配置中使用类的实例替换标记处理程序集合中的默认会话安全标记处理程序 <xref:System.IdentityModel.Services.Tokens.MachineKeySessionSecurityTokenHandler> 。</span><span class="sxs-lookup"><span data-stu-id="2d2c9-138">The following XML shows how to replace the default session security token handler in a token handler collection with an instance of the <xref:System.IdentityModel.Services.Tokens.MachineKeySessionSecurityTokenHandler> class in configuration.</span></span>  
  
```xml  
<securityTokenHandlers>  
  <remove type="System.IdentityModel.Tokens.SessionSecurityTokenHandler, System.IdentityModel, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />  
  <add type="System.IdentityModel.Services.Tokens.MachineKeySessionSecurityTokenHandler, System.IdentityModel.Services, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />  
</securityTokenHandlers>  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.IdentityModel.Tokens.SessionSecurityTokenCache" />
    <altmember cref="T:System.IdentityModel.Tokens.SessionSecurityToken" />
    <altmember cref="T:System.IdentityModel.Services.Tokens.MachineKeySessionSecurityTokenHandler" />
    <altmember cref="T:System.IdentityModel.CookieTransform" />
    <related type="Article" href="/dotnet/framework/configure-apps/file-schema/windows-identity-foundation/sessiontokenrequirement"><span data-ttu-id="2d2c9-139">&lt;sessionTokenRequirement&gt;</span><span class="sxs-lookup"><span data-stu-id="2d2c9-139">&lt;sessionTokenRequirement&gt;</span></span></related>
    <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/framework/security/wif-and-web-farms"><span data-ttu-id="2d2c9-140">WIF 和 Web 场</span><span class="sxs-lookup"><span data-stu-id="2d2c9-140">WIF and Web Farms</span></span></related>
    <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/framework/security/wif-session-management"><span data-ttu-id="2d2c9-141">WIF 会话管理</span><span class="sxs-lookup"><span data-stu-id="2d2c9-141">WIF Session Management</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2d2c9-142">初始化 <see cref="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="2d2c9-142">Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SessionSecurityTokenHandler ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SessionSecurityTokenHandler();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2d2c9-143">初始化使用默认 Cookie 转换和令牌生存期的 <see cref="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="2d2c9-143">Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler" /> class that uses the default cookie transforms and token lifetime.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d2c9-144"><xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.TokenLifetime%2A>和 <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms%2A> 属性初始化为 <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultLifetime> 和 <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultCookieTransforms> 。</span><span class="sxs-lookup"><span data-stu-id="2d2c9-144">The <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.TokenLifetime%2A> and <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms%2A> properties are initialized to <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultLifetime> and <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultCookieTransforms>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SessionSecurityTokenHandler (System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.CookieTransform&gt; transforms);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.IdentityModel.CookieTransform&gt; transforms) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.#ctor(System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.CookieTransform})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (transforms As ReadOnlyCollection(Of CookieTransform))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SessionSecurityTokenHandler(System::Collections::ObjectModel::ReadOnlyCollection&lt;System::IdentityModel::CookieTransform ^&gt; ^ transforms);" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Tokens.SessionSecurityTokenHandler : System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.CookieTransform&gt; -&gt; System.IdentityModel.Tokens.SessionSecurityTokenHandler" Usage="new System.IdentityModel.Tokens.SessionSecurityTokenHandler transforms" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="transforms" Type="System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.CookieTransform&gt;" />
      </Parameters>
      <Docs>
        <param name="transforms"><span data-ttu-id="2d2c9-145">要在编码或解码 Cookie 时应用的转换。</span><span class="sxs-lookup"><span data-stu-id="2d2c9-145">The transforms to apply when encoding or decoding the cookie.</span></span> <span data-ttu-id="2d2c9-146">设置 <see cref="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms" /> 属性。</span><span class="sxs-lookup"><span data-stu-id="2d2c9-146">Sets the <see cref="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms" /> property.</span></span></param>
        <summary><span data-ttu-id="2d2c9-147">初始化使用指定的 cookie 转换  <see cref="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="2d2c9-147">Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler" /> class that uses the specified cookie transforms.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d2c9-148">将 <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.TokenLifetime%2A> 属性初始化为 <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultLifetime>。</span><span class="sxs-lookup"><span data-stu-id="2d2c9-148">The <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.TokenLifetime%2A> property is initialized to <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultLifetime>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2d2c9-149"><paramref name="transforms" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="2d2c9-149"><paramref name="transforms" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SessionSecurityTokenHandler (System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.CookieTransform&gt; transforms, TimeSpan tokenLifetime);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.IdentityModel.CookieTransform&gt; transforms, valuetype System.TimeSpan tokenLifetime) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.#ctor(System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.CookieTransform},System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (transforms As ReadOnlyCollection(Of CookieTransform), tokenLifetime As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SessionSecurityTokenHandler(System::Collections::ObjectModel::ReadOnlyCollection&lt;System::IdentityModel::CookieTransform ^&gt; ^ transforms, TimeSpan tokenLifetime);" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Tokens.SessionSecurityTokenHandler : System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.CookieTransform&gt; * TimeSpan -&gt; System.IdentityModel.Tokens.SessionSecurityTokenHandler" Usage="new System.IdentityModel.Tokens.SessionSecurityTokenHandler (transforms, tokenLifetime)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="transforms" Type="System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.CookieTransform&gt;" />
        <Parameter Name="tokenLifetime" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="transforms"><span data-ttu-id="2d2c9-150">要在编码或解码 Cookie 时应用的转换。</span><span class="sxs-lookup"><span data-stu-id="2d2c9-150">The transforms to apply when encoding or decoding the cookie.</span></span> <span data-ttu-id="2d2c9-151">设置 <see cref="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms" /> 属性。</span><span class="sxs-lookup"><span data-stu-id="2d2c9-151">Sets the <see cref="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms" /> property.</span></span></param>
        <param name="tokenLifetime"><span data-ttu-id="2d2c9-152">标牌的默认生存期。</span><span class="sxs-lookup"><span data-stu-id="2d2c9-152">The default lifetime for a token.</span></span> <span data-ttu-id="2d2c9-153">设置 <see cref="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.TokenLifetime" /> 属性。</span><span class="sxs-lookup"><span data-stu-id="2d2c9-153">Sets the <see cref="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.TokenLifetime" /> property.</span></span></param>
        <summary><span data-ttu-id="2d2c9-154">初始化使用指定 Cookie 转换和令牌生存期的 <see cref="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="2d2c9-154">Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler" /> class that uses the specified cookie transforms and token lifetime.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2d2c9-155"><paramref name="transforms" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="2d2c9-155"><paramref name="transforms" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="2d2c9-156"><paramref name="tokenLifetime" /> 小于或等于 <see cref="F:System.TimeSpan.Zero" />。</span><span class="sxs-lookup"><span data-stu-id="2d2c9-156"><paramref name="tokenLifetime" /> is less than or equal to <see cref="F:System.TimeSpan.Zero" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ApplyTransforms">
      <MemberSignature Language="C#" Value="protected virtual byte[] ApplyTransforms (byte[] cookie, bool outbound);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance unsigned int8[] ApplyTransforms(unsigned int8[] cookie, bool outbound) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ApplyTransforms(System.Byte[],System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function ApplyTransforms (cookie As Byte(), outbound As Boolean) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual cli::array &lt;System::Byte&gt; ^ ApplyTransforms(cli::array &lt;System::Byte&gt; ^ cookie, bool outbound);" />
      <MemberSignature Language="F#" Value="abstract member ApplyTransforms : byte[] * bool -&gt; byte[]&#xA;override this.ApplyTransforms : byte[] * bool -&gt; byte[]" Usage="sessionSecurityTokenHandler.ApplyTransforms (cookie, outbound)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cookie" Type="System.Byte[]" />
        <Parameter Name="outbound" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="cookie"><span data-ttu-id="2d2c9-157">将转换的 cookie。</span><span class="sxs-lookup"><span data-stu-id="2d2c9-157">The cookie that will be transformed.</span></span></param>
        <param name="outbound"><span data-ttu-id="2d2c9-158">如果应编码 cookie，则为 <see langword="true" />；如果应解码 cookie，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="2d2c9-158"><see langword="true" /> if the cookie should be encoded; <see langword="false" /> if the cookie should be decoded.</span></span></param>
        <summary><span data-ttu-id="2d2c9-159">将 <see cref="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms" /> 属性指定的转换应用于对指定 Cookie 进行编码或解码。</span><span class="sxs-lookup"><span data-stu-id="2d2c9-159">Applies the transforms specified by the <see cref="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms" /> property to either encode or decode the specified cookie.</span></span></summary>
        <returns><span data-ttu-id="2d2c9-160">编码或解码的 cookie。</span><span class="sxs-lookup"><span data-stu-id="2d2c9-160">The encoded or decoded cookie.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d2c9-161">当对 cookie 转换进行编码时，将按照它们在属性中出现的顺序应用 <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms%2A> 。</span><span class="sxs-lookup"><span data-stu-id="2d2c9-161">When encoding a cookie transforms are applied in the order in which they appear in the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms%2A> property.</span></span> <span data-ttu-id="2d2c9-162">当对 cookie 进行解码时，它们将按相反的顺序应用。</span><span class="sxs-lookup"><span data-stu-id="2d2c9-162">When decoding a cookie, they are applied in the reverse order.</span></span>  
  
 <span data-ttu-id="2d2c9-163">从 <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken%2A> 和方法调用 <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken%2A> 以对 cookie 材料进行编码和解码。</span><span class="sxs-lookup"><span data-stu-id="2d2c9-163">Called from the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken%2A> and <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken%2A> methods to encode and decode the cookie material.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="2d2c9-164"><see cref="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms" /> 属性为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="2d2c9-164">The <see cref="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms" /> property is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CanReadToken">
      <MemberSignature Language="C#" Value="public override bool CanReadToken (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanReadToken(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CanReadToken(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanReadToken (reader As XmlReader) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanReadToken(System::Xml::XmlReader ^ reader);" />
      <MemberSignature Language="F#" Value="override this.CanReadToken : System.Xml.XmlReader -&gt; bool" Usage="sessionSecurityTokenHandler.CanReadToken reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="2d2c9-165">在 <see cref="T:System.Xml.XmlReader" /> 上传入 <see cref="T:System.IdentityModel.Tokens.SecurityToken" />。</span><span class="sxs-lookup"><span data-stu-id="2d2c9-165">The <see cref="T:System.Xml.XmlReader" /> over the incoming <see cref="T:System.IdentityModel.Tokens.SecurityToken" />.</span></span> <span data-ttu-id="2d2c9-166">读取器应定位在 <see langword="&lt;wsc:SecurityContextToken&gt;" /> 元素。</span><span class="sxs-lookup"><span data-stu-id="2d2c9-166">The reader should be positioned at a <see langword="&lt;wsc:SecurityContextToken&gt;" /> element.</span></span></param>
        <summary><span data-ttu-id="2d2c9-167">返回一个值，该值指示读取器是否放置于 <see langword="&lt;wsc:SecurityContextToken&gt;" /> 元素处。</span><span class="sxs-lookup"><span data-stu-id="2d2c9-167">Returns a value that indicates whether the reader is positioned at a <see langword="&lt;wsc:SecurityContextToken&gt;" /> element.</span></span></summary>
        <returns><span data-ttu-id="2d2c9-168">如果该读取器指向 <see langword="true" /> 元素，则为 <see langword="&lt;wsc:SecurityContextToken&gt;" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="2d2c9-168"><see langword="true" /> if the reader points to a <see langword="&lt;wsc:SecurityContextToken&gt;" /> element; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2d2c9-169"><paramref name="reader" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="2d2c9-169"><paramref name="reader" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CanValidateToken">
      <MemberSignature Language="C#" Value="public override bool CanValidateToken { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanValidateToken" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CanValidateToken" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanValidateToken As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanValidateToken { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanValidateToken : bool" Usage="System.IdentityModel.Tokens.SessionSecurityTokenHandler.CanValidateToken" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2d2c9-170">获取一个值，该值指示此处理程序是否支持对 <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> 类型的标记进行验证。</span><span class="sxs-lookup"><span data-stu-id="2d2c9-170">Gets a value that indicates whether this handler supports validation of tokens of type <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" />.</span></span></summary>
        <value><span data-ttu-id="2d2c9-171">如果该处理器支持类型 <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> 标记的验证，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="2d2c9-171"><see langword="true" /> if the handler supports validation of tokens of type <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" />; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="2d2c9-172">总是为 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="2d2c9-172">Always <see langword="true" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanWriteToken">
      <MemberSignature Language="C#" Value="public override bool CanWriteToken { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanWriteToken" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CanWriteToken" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanWriteToken As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanWriteToken { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanWriteToken : bool" Usage="System.IdentityModel.Tokens.SessionSecurityTokenHandler.CanWriteToken" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2d2c9-173">获取指示此处理程序能否写入 <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> 类型的标记的值。</span><span class="sxs-lookup"><span data-stu-id="2d2c9-173">Gets a value that indicates whether this handler can write tokens of type <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" />.</span></span></summary>
        <value><span data-ttu-id="2d2c9-174">如果处理程序现在可以写入类型 <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> 的标记，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="2d2c9-174"><see langword="true" /> if the handler can write tokens of type <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" />; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="2d2c9-175">总是为 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="2d2c9-175">Always <see langword="true" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CookieElementName">
      <MemberSignature Language="C#" Value="public virtual string CookieElementName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CookieElementName" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CookieElementName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CookieElementName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ CookieElementName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CookieElementName : string" Usage="System.IdentityModel.Tokens.SessionSecurityTokenHandler.CookieElementName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2d2c9-176">获取 Cookie 元素的名称。</span><span class="sxs-lookup"><span data-stu-id="2d2c9-176">Gets the name for the cookie element.</span></span></summary>
        <value><span data-ttu-id="2d2c9-177">Cookie 元素的名称。</span><span class="sxs-lookup"><span data-stu-id="2d2c9-177">The name for the cookie element.</span></span> <span data-ttu-id="2d2c9-178">默认元素名称为 "Cookie"。</span><span class="sxs-lookup"><span data-stu-id="2d2c9-178">The default element name is "Cookie".</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d2c9-179">在和方法中使用此 <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken%2A> 属性 <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken%2A> 来确定应在其下写入或读取编码标记材料的元素。</span><span class="sxs-lookup"><span data-stu-id="2d2c9-179">This property is used in the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken%2A> and <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken%2A> methods to determine the element under which the encoded token material should be written or read.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CookieNamespace" />
        <altmember cref="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken(System.IdentityModel.Tokens.SessionSecurityToken)" />
        <altmember cref="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken(System.Byte[],System.IdentityModel.Selectors.SecurityTokenResolver)" />
      </Docs>
    </Member>
    <Member MemberName="CookieNamespace">
      <MemberSignature Language="C#" Value="public virtual string CookieNamespace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CookieNamespace" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CookieNamespace" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CookieNamespace As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ CookieNamespace { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CookieNamespace : string" Usage="System.IdentityModel.Tokens.SessionSecurityTokenHandler.CookieNamespace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2d2c9-180">获取 Cookie 元素的命名空间。</span><span class="sxs-lookup"><span data-stu-id="2d2c9-180">Gets the namespace for the cookie element.</span></span></summary>
        <value><span data-ttu-id="2d2c9-181">Cookie 元素的命名空间。</span><span class="sxs-lookup"><span data-stu-id="2d2c9-181">The namespace for the cookie element.</span></span> <span data-ttu-id="2d2c9-182">默认命名空间为 <c>" http://schemas.microsoft.com/ws/2006/05/security "</c>。</span><span class="sxs-lookup"><span data-stu-id="2d2c9-182">The default namespace is <c>"http://schemas.microsoft.com/ws/2006/05/security"</c>.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d2c9-183">在和方法中使用此 <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken%2A> 属性 <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken%2A> 来确定应在其下写入或读取编码标记材料的元素的命名空间。</span><span class="sxs-lookup"><span data-stu-id="2d2c9-183">This property is used in the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken%2A> and <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken%2A> methods to determine the namespace of the element under which the encoded token material should be written or read.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CookieElementName" />
        <altmember cref="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken(System.IdentityModel.Tokens.SessionSecurityToken)" />
        <altmember cref="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken(System.Byte[],System.IdentityModel.Selectors.SecurityTokenResolver)" />
      </Docs>
    </Member>
    <Member MemberName="CreateSessionSecurityToken">
      <MemberSignature Language="C#" Value="public virtual System.IdentityModel.Tokens.SessionSecurityToken CreateSessionSecurityToken (System.Security.Claims.ClaimsPrincipal principal, string context, string endpointId, DateTime validFrom, DateTime validTo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IdentityModel.Tokens.SessionSecurityToken CreateSessionSecurityToken(class System.Security.Claims.ClaimsPrincipal principal, string context, string endpointId, valuetype System.DateTime validFrom, valuetype System.DateTime validTo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CreateSessionSecurityToken(System.Security.Claims.ClaimsPrincipal,System.String,System.String,System.DateTime,System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateSessionSecurityToken (principal As ClaimsPrincipal, context As String, endpointId As String, validFrom As DateTime, validTo As DateTime) As SessionSecurityToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IdentityModel::Tokens::SessionSecurityToken ^ CreateSessionSecurityToken(System::Security::Claims::ClaimsPrincipal ^ principal, System::String ^ context, System::String ^ endpointId, DateTime validFrom, DateTime validTo);" />
      <MemberSignature Language="F#" Value="abstract member CreateSessionSecurityToken : System.Security.Claims.ClaimsPrincipal * string * string * DateTime * DateTime -&gt; System.IdentityModel.Tokens.SessionSecurityToken&#xA;override this.CreateSessionSecurityToken : System.Security.Claims.ClaimsPrincipal * string * string * DateTime * DateTime -&gt; System.IdentityModel.Tokens.SessionSecurityToken" Usage="sessionSecurityTokenHandler.CreateSessionSecurityToken (principal, context, endpointId, validFrom, validTo)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SessionSecurityToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="principal" Type="System.Security.Claims.ClaimsPrincipal" />
        <Parameter Name="context" Type="System.String" />
        <Parameter Name="endpointId" Type="System.String" />
        <Parameter Name="validFrom" Type="System.DateTime" />
        <Parameter Name="validTo" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="principal"><span data-ttu-id="2d2c9-184">声明主体。</span><span class="sxs-lookup"><span data-stu-id="2d2c9-184">The claims principal.</span></span></param>
        <param name="context"><span data-ttu-id="2d2c9-185">调用方定义的上下文字符串。</span><span class="sxs-lookup"><span data-stu-id="2d2c9-185">A caller-defined context string.</span></span></param>
        <param name="endpointId"><span data-ttu-id="2d2c9-186">限定标识范围的终点的标示符。</span><span class="sxs-lookup"><span data-stu-id="2d2c9-186">The identifier of the endpoint to which the token is scoped.</span></span></param>
        <param name="validFrom"><span data-ttu-id="2d2c9-187">标记变为有效的时间时刻。</span><span class="sxs-lookup"><span data-stu-id="2d2c9-187">The time instant at which the token becomes valid.</span></span></param>
        <param name="validTo"><span data-ttu-id="2d2c9-188">其后时间不再有效的时间时刻。</span><span class="sxs-lookup"><span data-stu-id="2d2c9-188">The time instant after which the token is no longer valid.</span></span></param>
        <summary><span data-ttu-id="2d2c9-189">创建基于指定声明主体和时间范围（在此时间范围内标记有效）的 <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> 。</span><span class="sxs-lookup"><span data-stu-id="2d2c9-189">Creates a <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> based on the specified claims principal and time range during which the token is valid.</span></span></summary>
        <returns><span data-ttu-id="2d2c9-190">生成的会话安全令牌。</span><span class="sxs-lookup"><span data-stu-id="2d2c9-190">The session security token that was created.</span></span> <span data-ttu-id="2d2c9-191">将根据指定的参数设置新会话令牌上的属性。</span><span class="sxs-lookup"><span data-stu-id="2d2c9-191">The properties on the new session token are set according to the specified parameters.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2d2c9-192"><paramref name="principal" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="2d2c9-192"><paramref name="principal" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="2d2c9-193"><see cref="P:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration" /> 属性为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="2d2c9-193">The <see cref="P:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration" /> property is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateToken">
      <MemberSignature Language="C#" Value="public override System.IdentityModel.Tokens.SecurityToken CreateToken (System.IdentityModel.Tokens.SecurityTokenDescriptor tokenDescriptor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IdentityModel.Tokens.SecurityToken CreateToken(class System.IdentityModel.Tokens.SecurityTokenDescriptor tokenDescriptor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CreateToken(System.IdentityModel.Tokens.SecurityTokenDescriptor)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CreateToken (tokenDescriptor As SecurityTokenDescriptor) As SecurityToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::IdentityModel::Tokens::SecurityToken ^ CreateToken(System::IdentityModel::Tokens::SecurityTokenDescriptor ^ tokenDescriptor);" />
      <MemberSignature Language="F#" Value="override this.CreateToken : System.IdentityModel.Tokens.SecurityTokenDescriptor -&gt; System.IdentityModel.Tokens.SecurityToken" Usage="sessionSecurityTokenHandler.CreateToken tokenDescriptor" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tokenDescriptor" Type="System.IdentityModel.Tokens.SecurityTokenDescriptor" />
      </Parameters>
      <Docs>
        <param name="tokenDescriptor"><span data-ttu-id="2d2c9-194">用于创建标记的标记说明符。</span><span class="sxs-lookup"><span data-stu-id="2d2c9-194">The token descriptor from which to create the token.</span></span></param>
        <summary><span data-ttu-id="2d2c9-195">创建基于指定标记描述符的安全令牌。</span><span class="sxs-lookup"><span data-stu-id="2d2c9-195">Creates a security token based on the specified token descriptor.</span></span></summary>
        <returns><span data-ttu-id="2d2c9-196">创建的安全令牌。</span><span class="sxs-lookup"><span data-stu-id="2d2c9-196">The security token that was created.</span></span> <span data-ttu-id="2d2c9-197">这将是 <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> 的实例。</span><span class="sxs-lookup"><span data-stu-id="2d2c9-197">This will be an instance of <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d2c9-198">通过在标记描述符中使用以下属性，创建并返回会话安全令牌： <xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.Subject%2A?displayProperty=nameWithType> 和 <xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.Lifetime%2A?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="2d2c9-198">Creates and returns a session security token by using the following properties in the token descriptor: <xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.Subject%2A?displayProperty=nameWithType>, and <xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.Lifetime%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="2d2c9-199">如果在 <xref:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration.SaveBootstrapContext%2A?displayProperty=nameWithType> `true` 属性指定的令牌处理程序配置上设置了该属性 <xref:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration%2A> ，则会从该属性创建引导上下文，并将其 <xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.Token%2A?displayProperty=nameWithType> 保存在会话令牌中。</span><span class="sxs-lookup"><span data-stu-id="2d2c9-199">If the <xref:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration.SaveBootstrapContext%2A?displayProperty=nameWithType> property is set `true` on the token handler configuration specified by the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration%2A> property, the bootstrap context is created from the <xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.Token%2A?displayProperty=nameWithType> property and is saved in the session token.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2d2c9-200"><paramref name="tokenDescriptor" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="2d2c9-200"><paramref name="tokenDescriptor" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="2d2c9-201"><see cref="P:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration" /> 属性为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="2d2c9-201">The <see cref="P:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration" /> property is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DefaultCookieTransforms">
      <MemberSignature Language="C#" Value="public static readonly System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.CookieTransform&gt; DefaultCookieTransforms;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.IdentityModel.CookieTransform&gt; DefaultCookieTransforms" />
      <MemberSignature Language="DocId" Value="F:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultCookieTransforms" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DefaultCookieTransforms As ReadOnlyCollection(Of CookieTransform) " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Collections::ObjectModel::ReadOnlyCollection&lt;System::IdentityModel::CookieTransform ^&gt; ^ DefaultCookieTransforms;" />
      <MemberSignature Language="F#" Value=" staticval mutable DefaultCookieTransforms : System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.CookieTransform&gt;" Usage="System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultCookieTransforms" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.CookieTransform&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2d2c9-202">一个只读集合，它包含要应用于 Cookie（<see cref="T:System.IdentityModel.DeflateCookieTransform" /> 和 <see cref="T:System.IdentityModel.ProtectedDataCookieTransform" />）的默认转换的列表。</span><span class="sxs-lookup"><span data-stu-id="2d2c9-202">A read only collection that contains the list of default transforms to be applied to cookies, the <see cref="T:System.IdentityModel.DeflateCookieTransform" /> and the <see cref="T:System.IdentityModel.ProtectedDataCookieTransform" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultLifetime">
      <MemberSignature Language="C#" Value="public static readonly TimeSpan DefaultLifetime;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype System.TimeSpan DefaultLifetime" />
      <MemberSignature Language="DocId" Value="F:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultLifetime" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DefaultLifetime As TimeSpan " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly TimeSpan DefaultLifetime;" />
      <MemberSignature Language="F#" Value=" staticval mutable DefaultLifetime : TimeSpan" Usage="System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultLifetime" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2d2c9-203">一个常量，它指定 Cookie 的默认生存期为 10 小时。</span><span class="sxs-lookup"><span data-stu-id="2d2c9-203">A constant that specifies the default lifetime for cookies, ten hours.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultTokenLifetime">
      <MemberSignature Language="C#" Value="public static TimeSpan DefaultTokenLifetime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.TimeSpan DefaultTokenLifetime" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultTokenLifetime" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property DefaultTokenLifetime As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property TimeSpan DefaultTokenLifetime { TimeSpan get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultTokenLifetime : TimeSpan" Usage="System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultTokenLifetime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2d2c9-204">获取默认的令牌生存期。</span><span class="sxs-lookup"><span data-stu-id="2d2c9-204">Gets the default token lifetime.</span></span></summary>
        <value><span data-ttu-id="2d2c9-205">默认的令牌生存期。</span><span class="sxs-lookup"><span data-stu-id="2d2c9-205">The default token lifetime.</span></span> <span data-ttu-id="2d2c9-206">总是为 <see cref="F:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultLifetime" />。</span><span class="sxs-lookup"><span data-stu-id="2d2c9-206">Always <see cref="F:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultLifetime" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTokenTypeIdentifiers">
      <MemberSignature Language="C#" Value="public override string[] GetTokenTypeIdentifiers ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string[] GetTokenTypeIdentifiers() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.GetTokenTypeIdentifiers" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetTokenTypeIdentifiers () As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::String ^&gt; ^ GetTokenTypeIdentifiers();" />
      <MemberSignature Language="F#" Value="override this.GetTokenTypeIdentifiers : unit -&gt; string[]" Usage="sessionSecurityTokenHandler.GetTokenTypeIdentifiers " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2d2c9-207">获取由处理程序处理的标记类型的标记标识符 URI。</span><span class="sxs-lookup"><span data-stu-id="2d2c9-207">Gets the token type URIs for the token types that can be processed by this handler.</span></span></summary>
        <returns><span data-ttu-id="2d2c9-208">由处理程序处理的标记类型的标识符 URI。</span><span class="sxs-lookup"><span data-stu-id="2d2c9-208">The token type identifier URIs for token types that can be processed by this handler.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d2c9-209">支持以下类型的 Uri：</span><span class="sxs-lookup"><span data-stu-id="2d2c9-209">The following type URIs are supported:</span></span> 
 
 - `http://schemas.microsoft.com/ws/2006/05/servicemodel/tokens/SecureConversation`
 - `http://docs.oasis-open.org/ws-sx/ws-secureconversation/200512/sct`
 - <span data-ttu-id="2d2c9-210">`http://schemas.xmlsoap.org/ws/2005/02/sc/sct`.</span><span class="sxs-lookup"><span data-stu-id="2d2c9-210">`http://schemas.xmlsoap.org/ws/2005/02/sc/sct`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadCustomConfiguration">
      <MemberSignature Language="C#" Value="public override void LoadCustomConfiguration (System.Xml.XmlNodeList customConfigElements);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void LoadCustomConfiguration(class System.Xml.XmlNodeList customConfigElements) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.LoadCustomConfiguration(System.Xml.XmlNodeList)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub LoadCustomConfiguration (customConfigElements As XmlNodeList)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void LoadCustomConfiguration(System::Xml::XmlNodeList ^ customConfigElements);" />
      <MemberSignature Language="F#" Value="override this.LoadCustomConfiguration : System.Xml.XmlNodeList -&gt; unit" Usage="sessionSecurityTokenHandler.LoadCustomConfiguration customConfigElements" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="customConfigElements" Type="System.Xml.XmlNodeList" />
      </Parameters>
      <Docs>
        <param name="customConfigElements"><span data-ttu-id="2d2c9-211">自定义配置元素。</span><span class="sxs-lookup"><span data-stu-id="2d2c9-211">The custom configuration elements.</span></span></param>
        <summary><span data-ttu-id="2d2c9-212">从 XML 加载自定义的配置。</span><span class="sxs-lookup"><span data-stu-id="2d2c9-212">Loads custom configuration from XML.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d2c9-213">由配置基础结构调用以初始化 <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> 实例。</span><span class="sxs-lookup"><span data-stu-id="2d2c9-213">Called by the configuration infrastructure to initialize the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> instance.</span></span> <span data-ttu-id="2d2c9-214"><xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.TokenLifetime%2A>从 `lifetime` 配置文件中的[ &lt; sessionTokenRequirement &gt; ](/dotnet/framework/configure-apps/file-schema/windows-identity-foundation/sessiontokenrequirement)元素的属性初始化属性。</span><span class="sxs-lookup"><span data-stu-id="2d2c9-214">Initializes the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.TokenLifetime%2A> property from the `lifetime` attribute of the [&lt;sessionTokenRequirement&gt;](/dotnet/framework/configure-apps/file-schema/windows-identity-foundation/sessiontokenrequirement) element in the configuration file.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2d2c9-215"><paramref name="customConfigElements" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="2d2c9-215"><paramref name="customConfigElements" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="2d2c9-216"><paramref name="customConfigElements" /> 指定的配置无效。</span><span class="sxs-lookup"><span data-stu-id="2d2c9-216">The configuration specified by <paramref name="customConfigElements" /> is not valid.</span></span> <span data-ttu-id="2d2c9-217">例如，它不包含 <see langword="&lt;sessionTokenRequirement&gt;" /> 元素，而包含多个 <see langword="&lt;sessionTokenRequirement&gt;" /> 元素，不能从 <see langword="lifetime" /> 特性中读取有效 <see cref="T:System.TimeSpan" /> 值，否则 <see langword="lifetime" /> 特性将指定小于 <see cref="F:System.TimeSpan.Zero" /> 的值。</span><span class="sxs-lookup"><span data-stu-id="2d2c9-217">For example, it does not contain a <see langword="&lt;sessionTokenRequirement&gt;" /> element, it contains more than one <see langword="&lt;sessionTokenRequirement&gt;" /> element, a valid <see cref="T:System.TimeSpan" /> value cannot be read from the <see langword="lifetime" /> attribute, or the <see langword="lifetime" /> attribute specifies a value that is less than <see cref="F:System.TimeSpan.Zero" />.</span></span></exception>
        <related type="Article" href="/dotnet/framework/configure-apps/file-schema/windows-identity-foundation/sessiontokenrequirement"><span data-ttu-id="2d2c9-218">&lt;sessionTokenRequirement&gt;</span><span class="sxs-lookup"><span data-stu-id="2d2c9-218">&lt;sessionTokenRequirement&gt;</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="ReadToken">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2d2c9-219">读取 <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" />。</span><span class="sxs-lookup"><span data-stu-id="2d2c9-219">Reads a <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks

[!INCLUDE [untrusted-data-method-note](~/includes/untrusted-data-method-note.md)]

 <span data-ttu-id="2d2c9-220">默认实现从 WS 安全对话 Feb2005 或 WS 安全会话1.3 元素反序列化令牌 `<wsc:SecurityContextToken>` 。</span><span class="sxs-lookup"><span data-stu-id="2d2c9-220">The default implementation deserializes the token from either a WS-Secure Conversation Feb2005 or WS-Secure Conversation 1.3 `<wsc:SecurityContextToken>` element.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="ReadToken">
      <MemberSignature Language="C#" Value="public override System.IdentityModel.Tokens.SecurityToken ReadToken (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IdentityModel.Tokens.SecurityToken ReadToken(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadToken (reader As XmlReader) As SecurityToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::IdentityModel::Tokens::SecurityToken ^ ReadToken(System::Xml::XmlReader ^ reader);" />
      <MemberSignature Language="F#" Value="override this.ReadToken : System.Xml.XmlReader -&gt; System.IdentityModel.Tokens.SecurityToken" Usage="sessionSecurityTokenHandler.ReadToken reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="2d2c9-221">在 <see cref="T:System.Xml.XmlReader" /> 上传入 <see cref="T:System.IdentityModel.Tokens.SecurityToken" />。</span><span class="sxs-lookup"><span data-stu-id="2d2c9-221">The <see cref="T:System.Xml.XmlReader" /> over the incoming <see cref="T:System.IdentityModel.Tokens.SecurityToken" />.</span></span></param>
        <summary><span data-ttu-id="2d2c9-222">使用指定的 XML 读取器读取 <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" />。</span><span class="sxs-lookup"><span data-stu-id="2d2c9-222">Reads the <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> using the specified XML reader.</span></span></summary>
        <returns><span data-ttu-id="2d2c9-223">读取的会话安全令牌，<see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> 的一个实例。</span><span class="sxs-lookup"><span data-stu-id="2d2c9-223">The session security token that was read, an instance of <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks

[!INCLUDE [untrusted-data-method-note](~/includes/untrusted-data-method-note.md)]

 <span data-ttu-id="2d2c9-224">读取器必须位于 WS 安全对话 Feb2005 或 WS 安全会话 1.3 `<wsc:SecurityContextToken>` 元素上。</span><span class="sxs-lookup"><span data-stu-id="2d2c9-224">The reader must be positioned at either a WS-Secure Conversation Feb2005 or a WS-Secure Conversation 1.3 `<wsc:SecurityContextToken>` element.</span></span>  
  
 <span data-ttu-id="2d2c9-225">默认实现 <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken%28System.Xml.XmlReader%2CSystem.IdentityModel.Selectors.SecurityTokenResolver%29?displayProperty=nameWithType> 使用默认的标记解析器调用方法。</span><span class="sxs-lookup"><span data-stu-id="2d2c9-225">The default implementation invokes the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken%28System.Xml.XmlReader%2CSystem.IdentityModel.Selectors.SecurityTokenResolver%29?displayProperty=nameWithType> method using a default token resolver.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2d2c9-226"><paramref name="reader" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="2d2c9-226"><paramref name="reader" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IdentityModel.Tokens.SecurityTokenException"><span data-ttu-id="2d2c9-227">读取器不放置在 <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> 或 <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> 无法读取。</span><span class="sxs-lookup"><span data-stu-id="2d2c9-227">The reader is not positioned at a <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> or the <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> cannot be read.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReadToken">
      <MemberSignature Language="C#" Value="public virtual System.IdentityModel.Tokens.SecurityToken ReadToken (byte[] token, System.IdentityModel.Selectors.SecurityTokenResolver tokenResolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IdentityModel.Tokens.SecurityToken ReadToken(unsigned int8[] token, class System.IdentityModel.Selectors.SecurityTokenResolver tokenResolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken(System.Byte[],System.IdentityModel.Selectors.SecurityTokenResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadToken (token As Byte(), tokenResolver As SecurityTokenResolver) As SecurityToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IdentityModel::Tokens::SecurityToken ^ ReadToken(cli::array &lt;System::Byte&gt; ^ token, System::IdentityModel::Selectors::SecurityTokenResolver ^ tokenResolver);" />
      <MemberSignature Language="F#" Value="override this.ReadToken : byte[] * System.IdentityModel.Selectors.SecurityTokenResolver -&gt; System.IdentityModel.Tokens.SecurityToken" Usage="sessionSecurityTokenHandler.ReadToken (token, tokenResolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="System.Byte[]" />
        <Parameter Name="tokenResolver" Type="System.IdentityModel.Selectors.SecurityTokenResolver" />
      </Parameters>
      <Docs>
        <param name="token"><span data-ttu-id="2d2c9-228">包含令牌的字节流。</span><span class="sxs-lookup"><span data-stu-id="2d2c9-228">The stream of bytes that contains the token.</span></span></param>
        <param name="tokenResolver"><span data-ttu-id="2d2c9-229">要使用的令牌解析器。</span><span class="sxs-lookup"><span data-stu-id="2d2c9-229">The token resolver to use.</span></span></param>
        <summary><span data-ttu-id="2d2c9-230">通过使用指定的标记解析器从字节流读取 <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" />。</span><span class="sxs-lookup"><span data-stu-id="2d2c9-230">Reads the <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> from a stream of bytes by using the specified token resolver.</span></span></summary>
        <returns><span data-ttu-id="2d2c9-231">读取的 <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" />。</span><span class="sxs-lookup"><span data-stu-id="2d2c9-231">The <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> that was read.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks

[!INCLUDE [untrusted-data-method-note](~/includes/untrusted-data-method-note.md)]

 <span data-ttu-id="2d2c9-232">默认实现 <xref:System.Xml.XmlDictionaryReader> 通过标记创建，并调用 <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken%28System.Xml.XmlReader%2CSystem.IdentityModel.Selectors.SecurityTokenResolver%29?displayProperty=nameWithType> 方法。</span><span class="sxs-lookup"><span data-stu-id="2d2c9-232">The default implementation creates an <xref:System.Xml.XmlDictionaryReader> over the token and invokes the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken%28System.Xml.XmlReader%2CSystem.IdentityModel.Selectors.SecurityTokenResolver%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadToken">
      <MemberSignature Language="C#" Value="public override System.IdentityModel.Tokens.SecurityToken ReadToken (System.Xml.XmlReader reader, System.IdentityModel.Selectors.SecurityTokenResolver tokenResolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IdentityModel.Tokens.SecurityToken ReadToken(class System.Xml.XmlReader reader, class System.IdentityModel.Selectors.SecurityTokenResolver tokenResolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadToken (reader As XmlReader, tokenResolver As SecurityTokenResolver) As SecurityToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::IdentityModel::Tokens::SecurityToken ^ ReadToken(System::Xml::XmlReader ^ reader, System::IdentityModel::Selectors::SecurityTokenResolver ^ tokenResolver);" />
      <MemberSignature Language="F#" Value="override this.ReadToken : System.Xml.XmlReader * System.IdentityModel.Selectors.SecurityTokenResolver -&gt; System.IdentityModel.Tokens.SecurityToken" Usage="sessionSecurityTokenHandler.ReadToken (reader, tokenResolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
        <Parameter Name="tokenResolver" Type="System.IdentityModel.Selectors.SecurityTokenResolver" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="2d2c9-233">在 <see cref="T:System.Xml.XmlReader" /> 上传入 <see cref="T:System.IdentityModel.Tokens.SecurityToken" />。</span><span class="sxs-lookup"><span data-stu-id="2d2c9-233">The <see cref="T:System.Xml.XmlReader" /> over the incoming <see cref="T:System.IdentityModel.Tokens.SecurityToken" />.</span></span></param>
        <param name="tokenResolver"><span data-ttu-id="2d2c9-234">可用来解决 <see cref="T:System.IdentityModel.Selectors.SecurityTokenResolver" /> 的 <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" />。</span><span class="sxs-lookup"><span data-stu-id="2d2c9-234">A <see cref="T:System.IdentityModel.Selectors.SecurityTokenResolver" /> that can used to resolve the <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" />.</span></span></param>
        <summary><span data-ttu-id="2d2c9-235">使用指定的 XML 读取器和标记解析程序读取 <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" />。</span><span class="sxs-lookup"><span data-stu-id="2d2c9-235">Reads the <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> using the specified XML reader and token resolver.</span></span></summary>
        <returns><span data-ttu-id="2d2c9-236">读取的会话安全令牌，<see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> 的一个实例。</span><span class="sxs-lookup"><span data-stu-id="2d2c9-236">The session security token that was read, an instance of <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks

[!INCLUDE [untrusted-data-method-note](~/includes/untrusted-data-method-note.md)]

 <span data-ttu-id="2d2c9-237">读取器必须位于 WS 安全对话 Feb2005 或 WS 安全会话 1.3 `<wsc:SecurityContextToken>` 元素上。</span><span class="sxs-lookup"><span data-stu-id="2d2c9-237">The reader must be positioned at either a WS-Secure Conversation Feb2005 or a WS-Secure Conversation 1.3 `<wsc:SecurityContextToken>` element.</span></span>  
  
 <span data-ttu-id="2d2c9-238">如果缓存了令牌材料，则会从令牌缓存（类的实例）中读取令牌 <xref:System.IdentityModel.Tokens.SessionSecurityTokenCache> 。</span><span class="sxs-lookup"><span data-stu-id="2d2c9-238">If the token material is cached, it is read from the token cache, which is an instance of the <xref:System.IdentityModel.Tokens.SessionSecurityTokenCache> class.</span></span> <span data-ttu-id="2d2c9-239">否则，将从和属性指定的元素的子元素读取令牌材料， `<wsc:SecurityContextToken>` <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CookieElementName%2A> <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CookieNamespace%2A> 并 <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ApplyTransforms%2A> 调用方法来解码 cookie。</span><span class="sxs-lookup"><span data-stu-id="2d2c9-239">Otherwise, the token material is read from the child element of the `<wsc:SecurityContextToken>` element that is specified by the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CookieElementName%2A> and <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CookieNamespace%2A> properties and the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ApplyTransforms%2A> method is invoked to decode the cookie.</span></span>  
  
 <span data-ttu-id="2d2c9-240">有关如何将会话令牌序列化为元素的详细信息 `<SecurityContextToken` ，请参阅 <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken%28System.Xml.XmlWriter%2CSystem.IdentityModel.Tokens.SecurityToken%29?displayProperty=nameWithType> 方法。</span><span class="sxs-lookup"><span data-stu-id="2d2c9-240">For more information about how session tokens are serialized into a `<SecurityContextToken` element, see the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken%28System.Xml.XmlWriter%2CSystem.IdentityModel.Tokens.SecurityToken%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2d2c9-241"><paramref name="reader" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="2d2c9-241"><paramref name="reader" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="2d2c9-242">- 或 -</span><span class="sxs-lookup"><span data-stu-id="2d2c9-242">-or-</span></span> 
 <span data-ttu-id="2d2c9-243"><paramref name="tokenResolver" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="2d2c9-243"><paramref name="tokenResolver" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IdentityModel.Tokens.SecurityTokenException"><span data-ttu-id="2d2c9-244">读取器不放置在 <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> 或 <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> 无法读取。</span><span class="sxs-lookup"><span data-stu-id="2d2c9-244">The reader is not positioned at a <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> or the <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> cannot be read.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SetTransforms">
      <MemberSignature Language="C#" Value="protected void SetTransforms (System.Collections.Generic.IEnumerable&lt;System.IdentityModel.CookieTransform&gt; transforms);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SetTransforms(class System.Collections.Generic.IEnumerable`1&lt;class System.IdentityModel.CookieTransform&gt; transforms) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.SetTransforms(System.Collections.Generic.IEnumerable{System.IdentityModel.CookieTransform})" />
      <MemberSignature Language="VB.NET" Value="Protected Sub SetTransforms (transforms As IEnumerable(Of CookieTransform))" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void SetTransforms(System::Collections::Generic::IEnumerable&lt;System::IdentityModel::CookieTransform ^&gt; ^ transforms);" />
      <MemberSignature Language="F#" Value="member this.SetTransforms : seq&lt;System.IdentityModel.CookieTransform&gt; -&gt; unit" Usage="sessionSecurityTokenHandler.SetTransforms transforms" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="transforms" Type="System.Collections.Generic.IEnumerable&lt;System.IdentityModel.CookieTransform&gt;" />
      </Parameters>
      <Docs>
        <param name="transforms"><span data-ttu-id="2d2c9-245">要使用的转换。</span><span class="sxs-lookup"><span data-stu-id="2d2c9-245">The transforms to use.</span></span></param>
        <summary><span data-ttu-id="2d2c9-246">设置要应用在 cookie 上的转换。</span><span class="sxs-lookup"><span data-stu-id="2d2c9-246">Sets the transforms that will be applied to cookies.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d2c9-247">设置由属性返回的转换的列表 <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms%2A> 。</span><span class="sxs-lookup"><span data-stu-id="2d2c9-247">Sets the list of transforms returned by the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms%2A> property.</span></span> <span data-ttu-id="2d2c9-248">当对 cookie 进行编码时，转换将按照它们在列表中的显示顺序进行应用。</span><span class="sxs-lookup"><span data-stu-id="2d2c9-248">Transforms will be applied in the order in which they appear in the list when encoding a cookie and in the reverse order when decoding a cookie.</span></span>  
  
> [!WARNING]
>  <span data-ttu-id="2d2c9-249">如果 `transforms` 参数为 `null` ，则 <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ApplyTransforms%2A> 在调用以对 cookie 进行编码或解码时，方法将引发异常。</span><span class="sxs-lookup"><span data-stu-id="2d2c9-249">If the `transforms` parameter is `null`, an exception will be thrown from the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ApplyTransforms%2A> method when it is called to encode or decode the cookie.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TokenLifetime">
      <MemberSignature Language="C#" Value="public virtual TimeSpan TokenLifetime { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan TokenLifetime" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.TokenLifetime" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property TokenLifetime As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property TimeSpan TokenLifetime { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberSignature Language="F#" Value="member this.TokenLifetime : TimeSpan with get, set" Usage="System.IdentityModel.Tokens.SessionSecurityTokenHandler.TokenLifetime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2d2c9-250">获取或设置标记生存期。</span><span class="sxs-lookup"><span data-stu-id="2d2c9-250">Gets or sets the token lifetime.</span></span></summary>
        <value><span data-ttu-id="2d2c9-251">标记生存期。</span><span class="sxs-lookup"><span data-stu-id="2d2c9-251">The token lifetime.</span></span> <span data-ttu-id="2d2c9-252">默认值为 <see cref="F:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultLifetime" />。</span><span class="sxs-lookup"><span data-stu-id="2d2c9-252">The default is <see cref="F:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultLifetime" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d2c9-253">默认情况下，如果在配置文件中指定[ &lt; sessionTokenRequirement &gt; ](/dotnet/framework/configure-apps/file-schema/windows-identity-foundation/sessiontokenrequirement)元素，则 <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.TokenLifetime%2A> 通过方法将属性初始化为属性的值 `lifetime` <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.LoadCustomConfiguration%2A> 。</span><span class="sxs-lookup"><span data-stu-id="2d2c9-253">By default, if the [&lt;sessionTokenRequirement&gt;](/dotnet/framework/configure-apps/file-schema/windows-identity-foundation/sessiontokenrequirement) element is specified in the configuration file, the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.TokenLifetime%2A> property is initialized to the value of the `lifetime` attribute by the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.LoadCustomConfiguration%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="2d2c9-254">发生设置小于或等于零的时间范围的尝试。</span><span class="sxs-lookup"><span data-stu-id="2d2c9-254">An attempt to set a time span that is less than or equal to zero occurs.</span></span></exception>
        <related type="Article" href="/dotnet/framework/configure-apps/file-schema/windows-identity-foundation/sessiontokenrequirement"><span data-ttu-id="2d2c9-255">&lt;sessionTokenRequirement&gt;</span><span class="sxs-lookup"><span data-stu-id="2d2c9-255">&lt;sessionTokenRequirement&gt;</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="TokenType">
      <MemberSignature Language="C#" Value="public override Type TokenType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type TokenType" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.TokenType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property TokenType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Type ^ TokenType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TokenType : Type" Usage="System.IdentityModel.Tokens.SessionSecurityTokenHandler.TokenType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2d2c9-256">获取此处理程序处理的标记的类型。</span><span class="sxs-lookup"><span data-stu-id="2d2c9-256">Gets the type of the tokens that this handler processes.</span></span></summary>
        <value><span data-ttu-id="2d2c9-257"><see cref="T:System.Type" /> 的 <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" />。</span><span class="sxs-lookup"><span data-stu-id="2d2c9-257">The <see cref="T:System.Type" /> of <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Transforms">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.CookieTransform&gt; Transforms { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.IdentityModel.CookieTransform&gt; Transforms" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Transforms As ReadOnlyCollection(Of CookieTransform)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::ReadOnlyCollection&lt;System::IdentityModel::CookieTransform ^&gt; ^ Transforms { System::Collections::ObjectModel::ReadOnlyCollection&lt;System::IdentityModel::CookieTransform ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Transforms : System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.CookieTransform&gt;" Usage="System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.CookieTransform&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2d2c9-258">获取要应用在 cookie 上的转换。</span><span class="sxs-lookup"><span data-stu-id="2d2c9-258">Gets the transforms that will be applied to the cookie.</span></span></summary>
        <value><span data-ttu-id="2d2c9-259">要要应用在 cookie 上的转换列表。</span><span class="sxs-lookup"><span data-stu-id="2d2c9-259">The list of transforms that will be applied to the cookie.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d2c9-260">转换在方法中应用 <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ApplyTransforms%2A> 。</span><span class="sxs-lookup"><span data-stu-id="2d2c9-260">The transforms are applied in the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ApplyTransforms%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidateSession">
      <MemberSignature Language="C#" Value="protected virtual void ValidateSession (System.IdentityModel.Tokens.SessionSecurityToken securityToken);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ValidateSession(class System.IdentityModel.Tokens.SessionSecurityToken securityToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateSession(System.IdentityModel.Tokens.SessionSecurityToken)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub ValidateSession (securityToken As SessionSecurityToken)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void ValidateSession(System::IdentityModel::Tokens::SessionSecurityToken ^ securityToken);" />
      <MemberSignature Language="F#" Value="abstract member ValidateSession : System.IdentityModel.Tokens.SessionSecurityToken -&gt; unit&#xA;override this.ValidateSession : System.IdentityModel.Tokens.SessionSecurityToken -&gt; unit" Usage="sessionSecurityTokenHandler.ValidateSession securityToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="securityToken" Type="System.IdentityModel.Tokens.SessionSecurityToken" />
      </Parameters>
      <Docs>
        <param name="securityToken"><span data-ttu-id="2d2c9-261">要检查的标记。</span><span class="sxs-lookup"><span data-stu-id="2d2c9-261">The token to be checked.</span></span></param>
        <summary><span data-ttu-id="2d2c9-262">确定与指定标记相关联的会话是否有效。</span><span class="sxs-lookup"><span data-stu-id="2d2c9-262">Determines whether the session associated with the specified token is still valid.</span></span> <span data-ttu-id="2d2c9-263">通过检查指定标记的 <see cref="P:System.IdentityModel.Tokens.SecurityToken.ValidFrom" /> 和 <see cref="P:System.IdentityModel.Tokens.SecurityToken.ValidTo" /> 确定有效性。</span><span class="sxs-lookup"><span data-stu-id="2d2c9-263">Validity is determined by checking the <see cref="P:System.IdentityModel.Tokens.SecurityToken.ValidFrom" /> and <see cref="P:System.IdentityModel.Tokens.SecurityToken.ValidTo" /> properties of the specified token.</span></span> <span data-ttu-id="2d2c9-264">如果该会话不再有效，则引发异常。</span><span class="sxs-lookup"><span data-stu-id="2d2c9-264">An exception is thrown if the session is no longer valid.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d2c9-265">如果标记的 <xref:System.IdentityModel.Tokens.SecurityToken.ValidFrom%2A> 属性设置为晚于的值 <xref:System.DateTime.UtcNow%2A> ，或者其 <xref:System.IdentityModel.Tokens.SecurityToken.ValidTo%2A> 属性设置为早于的值，则该标记无效 <xref:System.DateTime.UtcNow%2A> 。</span><span class="sxs-lookup"><span data-stu-id="2d2c9-265">The token is not valid if its <xref:System.IdentityModel.Tokens.SecurityToken.ValidFrom%2A> property is set to a value that occurs later than <xref:System.DateTime.UtcNow%2A>, or if its <xref:System.IdentityModel.Tokens.SecurityToken.ValidTo%2A> property is set to a value that occurs earlier than <xref:System.DateTime.UtcNow%2A>.</span></span>  
  
 <span data-ttu-id="2d2c9-266">从方法调用 <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateToken%2A> 以验证会话。</span><span class="sxs-lookup"><span data-stu-id="2d2c9-266">Called from the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateToken%2A> methods to validate the session.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2d2c9-267"><paramref name="securityToken" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="2d2c9-267"><paramref name="securityToken" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="2d2c9-268"><see cref="P:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration" /> 属性为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="2d2c9-268">The <see cref="P:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration" /> property is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IdentityModel.Tokens.SecurityTokenNotYetValidException"><span data-ttu-id="2d2c9-269">令牌的 <see cref="P:System.IdentityModel.Tokens.SecurityToken.ValidFrom" /> 属性迟于 <see cref="P:System.DateTime.UtcNow" />。</span><span class="sxs-lookup"><span data-stu-id="2d2c9-269">The <see cref="P:System.IdentityModel.Tokens.SecurityToken.ValidFrom" /> property of the token is later than <see cref="P:System.DateTime.UtcNow" />.</span></span></exception>
        <exception cref="T:System.IdentityModel.Tokens.SecurityTokenExpiredException"><span data-ttu-id="2d2c9-270">该令牌的 <see cref="P:System.IdentityModel.Tokens.SecurityToken.ValidTo" /> 属性早于 <see cref="P:System.DateTime.UtcNow" />。</span><span class="sxs-lookup"><span data-stu-id="2d2c9-270">The <see cref="P:System.IdentityModel.Tokens.SecurityToken.ValidTo" /> property of the token is earlier than <see cref="P:System.DateTime.UtcNow" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ValidateToken">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2d2c9-271">确认一个象征和后退它的要求。</span><span class="sxs-lookup"><span data-stu-id="2d2c9-271">Validates a token and returns its claims.</span></span></summary>
        <altmember cref="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CanValidateToken" />
      </Docs>
    </MemberGroup>
    <Member MemberName="ValidateToken">
      <MemberSignature Language="C#" Value="public override System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Security.Claims.ClaimsIdentity&gt; ValidateToken (System.IdentityModel.Tokens.SecurityToken token);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Security.Claims.ClaimsIdentity&gt; ValidateToken(class System.IdentityModel.Tokens.SecurityToken token) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SecurityToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ValidateToken (token As SecurityToken) As ReadOnlyCollection(Of ClaimsIdentity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Security::Claims::ClaimsIdentity ^&gt; ^ ValidateToken(System::IdentityModel::Tokens::SecurityToken ^ token);" />
      <MemberSignature Language="F#" Value="override this.ValidateToken : System.IdentityModel.Tokens.SecurityToken -&gt; System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Security.Claims.ClaimsIdentity&gt;" Usage="sessionSecurityTokenHandler.ValidateToken token" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Security.Claims.ClaimsIdentity&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="System.IdentityModel.Tokens.SecurityToken" />
      </Parameters>
      <Docs>
        <param name="token"><span data-ttu-id="2d2c9-272">要验证的令牌。</span><span class="sxs-lookup"><span data-stu-id="2d2c9-272">The token to be validated.</span></span> <span data-ttu-id="2d2c9-273">必须可从 <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> 中指定。</span><span class="sxs-lookup"><span data-stu-id="2d2c9-273">Must be assignable from <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" />.</span></span></param>
        <summary><span data-ttu-id="2d2c9-274">验证指定的令牌并返回其声明。</span><span class="sxs-lookup"><span data-stu-id="2d2c9-274">Validates the specified token and returns its claims.</span></span></summary>
        <returns><span data-ttu-id="2d2c9-275">令牌中包含的标识。</span><span class="sxs-lookup"><span data-stu-id="2d2c9-275">The identities that are contained in the token.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d2c9-276">调用 <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateSession%2A> 方法以验证令牌。</span><span class="sxs-lookup"><span data-stu-id="2d2c9-276">Invokes the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateSession%2A> method to validate the token.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2d2c9-277"><paramref name="token" />
          <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="2d2c9-277"><paramref name="token" />
          <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="2d2c9-278"><paramref name="token" /> 无法从 <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> 赋值。</span><span class="sxs-lookup"><span data-stu-id="2d2c9-278"><paramref name="token" /> is not assignable from <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" />.</span></span></exception>
        <altmember cref="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CanValidateToken" />
      </Docs>
    </Member>
    <Member MemberName="ValidateToken">
      <MemberSignature Language="C#" Value="public virtual System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Security.Claims.ClaimsIdentity&gt; ValidateToken (System.IdentityModel.Tokens.SessionSecurityToken token, string endpointId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Security.Claims.ClaimsIdentity&gt; ValidateToken(class System.IdentityModel.Tokens.SessionSecurityToken token, string endpointId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SessionSecurityToken,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ValidateToken (token As SessionSecurityToken, endpointId As String) As ReadOnlyCollection(Of ClaimsIdentity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Security::Claims::ClaimsIdentity ^&gt; ^ ValidateToken(System::IdentityModel::Tokens::SessionSecurityToken ^ token, System::String ^ endpointId);" />
      <MemberSignature Language="F#" Value="override this.ValidateToken : System.IdentityModel.Tokens.SessionSecurityToken * string -&gt; System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Security.Claims.ClaimsIdentity&gt;" Usage="sessionSecurityTokenHandler.ValidateToken (token, endpointId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Security.Claims.ClaimsIdentity&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="System.IdentityModel.Tokens.SessionSecurityToken" />
        <Parameter Name="endpointId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="token"><span data-ttu-id="2d2c9-279">要验证的令牌。</span><span class="sxs-lookup"><span data-stu-id="2d2c9-279">The token to be validated.</span></span> <span data-ttu-id="2d2c9-280">必须可从 <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> 中指定。</span><span class="sxs-lookup"><span data-stu-id="2d2c9-280">Must be assignable from <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" />.</span></span></param>
        <param name="endpointId"><span data-ttu-id="2d2c9-281">限定标识范围的终点的标示符。</span><span class="sxs-lookup"><span data-stu-id="2d2c9-281">The identifier of the endpoint to which the token is scoped.</span></span></param>
        <summary><span data-ttu-id="2d2c9-282">验证指定的会话令牌并返回其声明。</span><span class="sxs-lookup"><span data-stu-id="2d2c9-282">Validates the specified session token and returns its claims.</span></span></summary>
        <returns><span data-ttu-id="2d2c9-283">令牌中包含的标识。</span><span class="sxs-lookup"><span data-stu-id="2d2c9-283">The identities that are contained in the token.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d2c9-284">执行检查以确保指定的标记的作用域为指定的终结点 ID，如果是，则调用 <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateToken%28System.IdentityModel.Tokens.SecurityToken%29?displayProperty=nameWithType> 方法; 否则，将引发 <xref:System.IdentityModel.Tokens.SecurityTokenException> 。</span><span class="sxs-lookup"><span data-stu-id="2d2c9-284">Performs a check to make sure that the specified token is scoped for the specified endpoint ID and, if so, invokes the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateToken%28System.IdentityModel.Tokens.SecurityToken%29?displayProperty=nameWithType> method; otherwise, throws a <xref:System.IdentityModel.Tokens.SecurityTokenException>.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="2d2c9-285">具有 <xref:System.IdentityModel.Tokens.SessionSecurityToken.EndpointId%2A> 或空属性的会话令牌被 `null` 视为全局范围。</span><span class="sxs-lookup"><span data-stu-id="2d2c9-285">Session tokens that have an <xref:System.IdentityModel.Tokens.SessionSecurityToken.EndpointId%2A> property that is `null` or empty are considered to be globally scoped.</span></span> <span data-ttu-id="2d2c9-286">这会带来潜在的安全风险。</span><span class="sxs-lookup"><span data-stu-id="2d2c9-286">This presents a potential security risk.</span></span> <span data-ttu-id="2d2c9-287">出于此原因，应确保 <xref:System.IdentityModel.Tokens.SessionSecurityToken.EndpointId%2A> 在会话令牌中设置属性。</span><span class="sxs-lookup"><span data-stu-id="2d2c9-287">For this reason you should make sure that the <xref:System.IdentityModel.Tokens.SessionSecurityToken.EndpointId%2A> property is set in your session tokens.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2d2c9-288"><paramref name="token" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="2d2c9-288"><paramref name="token" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="2d2c9-289">- 或 -</span><span class="sxs-lookup"><span data-stu-id="2d2c9-289">-or-</span></span> 
 <span data-ttu-id="2d2c9-290"><paramref name="endpointId" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="2d2c9-290"><paramref name="endpointId" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="2d2c9-291"><paramref name="token" /> 无法从 <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> 赋值。</span><span class="sxs-lookup"><span data-stu-id="2d2c9-291"><paramref name="token" /> is not assignable from <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" />.</span></span></exception>
        <exception cref="T:System.IdentityModel.Tokens.SecurityTokenException"><span data-ttu-id="2d2c9-292">指定令牌的 <see cref="P:System.IdentityModel.Tokens.SessionSecurityToken.EndpointId" /> 属性不为 <see langword="null" /> 或空并且其值不同于 <paramref name="endpointId" /> 参数指定的值。</span><span class="sxs-lookup"><span data-stu-id="2d2c9-292">The <see cref="P:System.IdentityModel.Tokens.SessionSecurityToken.EndpointId" /> property of the specified token is not <see langword="null" /> or empty and its value is different than that specified by the <paramref name="endpointId" /> parameter.</span></span></exception>
        <altmember cref="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CanValidateToken" />
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteToken">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2d2c9-293">序列化标记。</span><span class="sxs-lookup"><span data-stu-id="2d2c9-293">Serializes a token.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d2c9-294">默认实现将令牌序列化为 WS 安全会话 Feb2005 或 WS 安全会话 1.3 `<wsc:SecurityContextToken>` 元素。</span><span class="sxs-lookup"><span data-stu-id="2d2c9-294">The default implementation serializes the token into either a WS-Secure Conversation Feb2005 or WS-Secure Conversation 1.3 `<wsc:SecurityContextToken>` element.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CanWriteToken" />
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteToken">
      <MemberSignature Language="C#" Value="public virtual byte[] WriteToken (System.IdentityModel.Tokens.SessionSecurityToken sessionToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance unsigned int8[] WriteToken(class System.IdentityModel.Tokens.SessionSecurityToken sessionToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken(System.IdentityModel.Tokens.SessionSecurityToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WriteToken (sessionToken As SessionSecurityToken) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Byte&gt; ^ WriteToken(System::IdentityModel::Tokens::SessionSecurityToken ^ sessionToken);" />
      <MemberSignature Language="F#" Value="override this.WriteToken : System.IdentityModel.Tokens.SessionSecurityToken -&gt; byte[]" Usage="sessionSecurityTokenHandler.WriteToken sessionToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sessionToken" Type="System.IdentityModel.Tokens.SessionSecurityToken" />
      </Parameters>
      <Docs>
        <param name="sessionToken"><span data-ttu-id="2d2c9-295">要写入的标记。</span><span class="sxs-lookup"><span data-stu-id="2d2c9-295">The token to write.</span></span></param>
        <summary><span data-ttu-id="2d2c9-296">将指定令牌序列化为字节数组。</span><span class="sxs-lookup"><span data-stu-id="2d2c9-296">Serializes the specified token into a byte array.</span></span></summary>
        <returns><span data-ttu-id="2d2c9-297">编码的字节数组。</span><span class="sxs-lookup"><span data-stu-id="2d2c9-297">An encoded byte array.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d2c9-298">通过创建和 XML 编写器 <xref:System.IO.MemoryStream> 并调用方法，对指定的标记进行序列化 <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken%28System.Xml.XmlWriter%2CSystem.IdentityModel.Tokens.SecurityToken%29?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="2d2c9-298">Serializes the specified token by creating and XML writer over a <xref:System.IO.MemoryStream> and invoking the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken%28System.Xml.XmlWriter%2CSystem.IdentityModel.Tokens.SecurityToken%29?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="2d2c9-299">有关更多详细信息，请参阅此重载。</span><span class="sxs-lookup"><span data-stu-id="2d2c9-299">See that overload for more details.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2d2c9-300"><paramref name="sessiontoken" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="2d2c9-300"><paramref name="sessiontoken" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CanWriteToken" />
      </Docs>
    </Member>
    <Member MemberName="WriteToken">
      <MemberSignature Language="C#" Value="public override void WriteToken (System.Xml.XmlWriter writer, System.IdentityModel.Tokens.SecurityToken token);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteToken(class System.Xml.XmlWriter writer, class System.IdentityModel.Tokens.SecurityToken token) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteToken (writer As XmlWriter, token As SecurityToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteToken(System::Xml::XmlWriter ^ writer, System::IdentityModel::Tokens::SecurityToken ^ token);" />
      <MemberSignature Language="F#" Value="override this.WriteToken : System.Xml.XmlWriter * System.IdentityModel.Tokens.SecurityToken -&gt; unit" Usage="sessionSecurityTokenHandler.WriteToken (writer, token)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
        <Parameter Name="token" Type="System.IdentityModel.Tokens.SecurityToken" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="2d2c9-301">用于序列化令牌的 XML 编写器。</span><span class="sxs-lookup"><span data-stu-id="2d2c9-301">The XML writer with which to serialize the token.</span></span></param>
        <param name="token"><span data-ttu-id="2d2c9-302">要序列化的标记。</span><span class="sxs-lookup"><span data-stu-id="2d2c9-302">The token to serialize.</span></span> <span data-ttu-id="2d2c9-303"><see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> 的一个实例。</span><span class="sxs-lookup"><span data-stu-id="2d2c9-303">An instance of <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" />.</span></span></param>
        <summary><span data-ttu-id="2d2c9-304">使用指定 XML 编写器序列化指定令牌。</span><span class="sxs-lookup"><span data-stu-id="2d2c9-304">Serializes the specified token by using the specified XML writer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d2c9-305">默认实现将指定的令牌序列化为 WS 安全会话 Feb2005 或 WS 安全会话 1.3 `<wsc:SecurityContextToken>` 元素，具体取决于属性的值 <xref:System.IdentityModel.Tokens.SessionSecurityToken.SecureConversationVersion%2A?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="2d2c9-305">The default implementation serializes the specified token as either a WS-Secure Conversation Feb2005 or WS-Secure Conversation 1.3 `<wsc:SecurityContextToken>` element, depending on the value of the <xref:System.IdentityModel.Tokens.SessionSecurityToken.SecureConversationVersion%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="2d2c9-306"><xref:System.IdentityModel.Tokens.SessionSecurityToken.Id%2A?displayProperty=nameWithType>属性序列化为 `Id` 特性。</span><span class="sxs-lookup"><span data-stu-id="2d2c9-306">The <xref:System.IdentityModel.Tokens.SessionSecurityToken.Id%2A?displayProperty=nameWithType> property is serialized as the `Id` attribute.</span></span> <span data-ttu-id="2d2c9-307"><xref:System.IdentityModel.Tokens.SessionSecurityToken.ContextId%2A?displayProperty=nameWithType>属性序列化为 `<Identifier>` 子元素。</span><span class="sxs-lookup"><span data-stu-id="2d2c9-307">The <xref:System.IdentityModel.Tokens.SessionSecurityToken.ContextId%2A?displayProperty=nameWithType> property is serialized as the `<Identifier>` child element.</span></span> <span data-ttu-id="2d2c9-308">如果不 `null` 是，则将 <xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyGeneration%2A?displayProperty=nameWithType> 属性序列化为 `<Instance>` 元素。</span><span class="sxs-lookup"><span data-stu-id="2d2c9-308">If not `null` the <xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyGeneration%2A?displayProperty=nameWithType> property is serialized as an `<Instance>` element.</span></span> <span data-ttu-id="2d2c9-309">最后，如果 <xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A?displayProperty=nameWithType> 属性为 `false` ，则将整个标记序列化为二进制数组，并将其传递给要 <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ApplyTransforms%2A> 编码的方法。</span><span class="sxs-lookup"><span data-stu-id="2d2c9-309">Finally, if the <xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A?displayProperty=nameWithType> property is `false`, the entire token is serialized into binary array which is passed to the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ApplyTransforms%2A> method to be encoded.</span></span> <span data-ttu-id="2d2c9-310">然后，将编码的令牌作为 base64 编码值写入到由和属性指定的元素和命名空间 <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CookieElementName%2A> <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CookieNamespace%2A> 。</span><span class="sxs-lookup"><span data-stu-id="2d2c9-310">The encoded token is then written as a base64 encoded value to the element and namespace specified by the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CookieElementName%2A> and <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CookieNamespace%2A> properties.</span></span> <span data-ttu-id="2d2c9-311">如果 <xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A?displayProperty=nameWithType> 属性为 `true` ，则不序列化令牌。</span><span class="sxs-lookup"><span data-stu-id="2d2c9-311">If the <xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A?displayProperty=nameWithType> property is `true`, the token is not serialized.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2d2c9-312"><paramref name="writer" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="2d2c9-312"><paramref name="writer" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="2d2c9-313">- 或 -</span><span class="sxs-lookup"><span data-stu-id="2d2c9-313">-or-</span></span> 
 <span data-ttu-id="2d2c9-314"><paramref name="token" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="2d2c9-314"><paramref name="token" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="2d2c9-315"><paramref name="token" /> 无法从 <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> 赋值。</span><span class="sxs-lookup"><span data-stu-id="2d2c9-315"><paramref name="token" /> is not assignable from <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" />.</span></span>  
  
<span data-ttu-id="2d2c9-316">- 或 -</span><span class="sxs-lookup"><span data-stu-id="2d2c9-316">-or-</span></span> 
<span data-ttu-id="2d2c9-317">令牌的 <see cref="P:System.IdentityModel.Tokens.SessionSecurityToken.SecureConversationVersion" /> 指定处理程序不支持的 WS 安全对话的版本。</span><span class="sxs-lookup"><span data-stu-id="2d2c9-317">The <see cref="P:System.IdentityModel.Tokens.SessionSecurityToken.SecureConversationVersion" /> of the token specifies a version of WS-Secure Conversation that is not supported by the handler.</span></span></exception>
        <altmember cref="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CanWriteToken" />
      </Docs>
    </Member>
  </Members>
</Type>
