<Type Name="X509SecurityTokenHandler" FullName="System.IdentityModel.Tokens.X509SecurityTokenHandler">
  <Metadata><Meta Name="ms.openlocfilehash" Value="0a9fe49035447609537599f666a042cd8e971671" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89820086" /></Metadata><TypeSignature Language="C#" Value="public class X509SecurityTokenHandler : System.IdentityModel.Tokens.SecurityTokenHandler" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit X509SecurityTokenHandler extends System.IdentityModel.Tokens.SecurityTokenHandler" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.Tokens.X509SecurityTokenHandler" />
  <TypeSignature Language="VB.NET" Value="Public Class X509SecurityTokenHandler&#xA;Inherits SecurityTokenHandler" />
  <TypeSignature Language="C++ CLI" Value="public ref class X509SecurityTokenHandler : System::IdentityModel::Tokens::SecurityTokenHandler" />
  <TypeSignature Language="F#" Value="type X509SecurityTokenHandler = class&#xA;    inherit SecurityTokenHandler" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.IdentityModel.Tokens.SecurityTokenHandler</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="0151f-101">表示安全标记处理程序，请处理 <see cref="T:System.IdentityModel.Tokens.X509SecurityToken" /> 类型的标记。</span><span class="sxs-lookup"><span data-stu-id="0151f-101">Represents a security token handler that processes tokens of type <see cref="T:System.IdentityModel.Tokens.X509SecurityToken" />.</span></span> <span data-ttu-id="0151f-102">默认情况下，该处理程序将执行 X.509 证书的链信任验证。</span><span class="sxs-lookup"><span data-stu-id="0151f-102">By default, the handler will perform chain-trust validation of the X.509 certificate.</span></span></summary>
    <remarks>To be added.</remarks>
    <related type="Article" href="/dotnet/framework/configure-apps/file-schema/windows-identity-foundation/x509securitytokenhandlerrequirement"><span data-ttu-id="0151f-103">&lt;x509SecurityTokenHandlerRequirement&gt;</span><span class="sxs-lookup"><span data-stu-id="0151f-103">&lt;x509SecurityTokenHandlerRequirement&gt;</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="0151f-104">初始化 <see cref="T:System.IdentityModel.Tokens.X509SecurityTokenHandler" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="0151f-104">Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.X509SecurityTokenHandler" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public X509SecurityTokenHandler ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.X509SecurityTokenHandler.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; X509SecurityTokenHandler();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0151f-105">使用默认值初始化 <see cref="T:System.IdentityModel.Tokens.X509SecurityTokenHandler" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="0151f-105">Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.X509SecurityTokenHandler" /> class with default values.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0151f-106"><xref:System.IdentityModel.Tokens.X509SecurityTokenHandler.MapToWindows%2A>属性设置为 `false` ，并且该 <xref:System.IdentityModel.Selectors.X509CertificateValidator.PeerOrChainTrust%2A> 验证程序用作默认证书验证程序。</span><span class="sxs-lookup"><span data-stu-id="0151f-106">The <xref:System.IdentityModel.Tokens.X509SecurityTokenHandler.MapToWindows%2A> property is set to `false` and the <xref:System.IdentityModel.Selectors.X509CertificateValidator.PeerOrChainTrust%2A> validator is used as the default certificate validator.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public X509SecurityTokenHandler (bool mapToWindows);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool mapToWindows) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.X509SecurityTokenHandler.#ctor(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (mapToWindows As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; X509SecurityTokenHandler(bool mapToWindows);" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Tokens.X509SecurityTokenHandler : bool -&gt; System.IdentityModel.Tokens.X509SecurityTokenHandler" Usage="new System.IdentityModel.Tokens.X509SecurityTokenHandler mapToWindows" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="mapToWindows" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="mapToWindows"><span data-ttu-id="0151f-107">如果证书应映射到 Windows 帐户，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="0151f-107"><see langword="true" /> if the certificate should be mapped to a Windows account; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="0151f-108">设置 <see cref="P:System.IdentityModel.Tokens.X509SecurityTokenHandler.MapToWindows" /> 属性。</span><span class="sxs-lookup"><span data-stu-id="0151f-108">Sets the <see cref="P:System.IdentityModel.Tokens.X509SecurityTokenHandler.MapToWindows" /> property.</span></span></param>
        <summary><span data-ttu-id="0151f-109">使用指定的证书验证方法初始化 <see cref="T:System.IdentityModel.Tokens.X509SecurityTokenHandler" /> 类的新实例，并指示是否将证书标识映射到 Windows 账户。</span><span class="sxs-lookup"><span data-stu-id="0151f-109">Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.X509SecurityTokenHandler" /> class by using a value that indicates whether the certificate should be mapped to a Windows account.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0151f-110"><xref:System.IdentityModel.Selectors.X509CertificateValidator.PeerOrChainTrust%2A>验证程序用作默认证书验证程序。</span><span class="sxs-lookup"><span data-stu-id="0151f-110">The <xref:System.IdentityModel.Selectors.X509CertificateValidator.PeerOrChainTrust%2A> validator is used as the default certificate validator.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public X509SecurityTokenHandler (System.IdentityModel.Selectors.X509CertificateValidator certificateValidator);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IdentityModel.Selectors.X509CertificateValidator certificateValidator) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.X509SecurityTokenHandler.#ctor(System.IdentityModel.Selectors.X509CertificateValidator)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (certificateValidator As X509CertificateValidator)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; X509SecurityTokenHandler(System::IdentityModel::Selectors::X509CertificateValidator ^ certificateValidator);" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Tokens.X509SecurityTokenHandler : System.IdentityModel.Selectors.X509CertificateValidator -&gt; System.IdentityModel.Tokens.X509SecurityTokenHandler" Usage="new System.IdentityModel.Tokens.X509SecurityTokenHandler certificateValidator" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="certificateValidator" Type="System.IdentityModel.Selectors.X509CertificateValidator" />
      </Parameters>
      <Docs>
        <param name="certificateValidator"><span data-ttu-id="0151f-111">要使用的证书验证程序。</span><span class="sxs-lookup"><span data-stu-id="0151f-111">The certificate validator to use.</span></span> <span data-ttu-id="0151f-112">设置 <see cref="P:System.IdentityModel.Tokens.X509SecurityTokenHandler.CertificateValidator" /> 属性。</span><span class="sxs-lookup"><span data-stu-id="0151f-112">Sets the <see cref="P:System.IdentityModel.Tokens.X509SecurityTokenHandler.CertificateValidator" /> property.</span></span></param>
        <summary><span data-ttu-id="0151f-113">使用指定的证书验证程序初始化 <see cref="T:System.IdentityModel.Tokens.X509SecurityTokenHandler" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="0151f-113">Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.X509SecurityTokenHandler" /> class by using the specified certificate validator.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0151f-114">将 <xref:System.IdentityModel.Tokens.X509SecurityTokenHandler.MapToWindows%2A> 属性设置为 `false`。</span><span class="sxs-lookup"><span data-stu-id="0151f-114">The <xref:System.IdentityModel.Tokens.X509SecurityTokenHandler.MapToWindows%2A> property is set to `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public X509SecurityTokenHandler (bool mapToWindows, System.IdentityModel.Selectors.X509CertificateValidator certificateValidator);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool mapToWindows, class System.IdentityModel.Selectors.X509CertificateValidator certificateValidator) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.X509SecurityTokenHandler.#ctor(System.Boolean,System.IdentityModel.Selectors.X509CertificateValidator)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (mapToWindows As Boolean, certificateValidator As X509CertificateValidator)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; X509SecurityTokenHandler(bool mapToWindows, System::IdentityModel::Selectors::X509CertificateValidator ^ certificateValidator);" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Tokens.X509SecurityTokenHandler : bool * System.IdentityModel.Selectors.X509CertificateValidator -&gt; System.IdentityModel.Tokens.X509SecurityTokenHandler" Usage="new System.IdentityModel.Tokens.X509SecurityTokenHandler (mapToWindows, certificateValidator)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="mapToWindows" Type="System.Boolean" />
        <Parameter Name="certificateValidator" Type="System.IdentityModel.Selectors.X509CertificateValidator" />
      </Parameters>
      <Docs>
        <param name="mapToWindows"><span data-ttu-id="0151f-115">如果证书应映射到 Windows 帐户，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="0151f-115"><see langword="true" /> if the certificate should be mapped to a Windows account; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="0151f-116">设置 <see cref="P:System.IdentityModel.Tokens.X509SecurityTokenHandler.MapToWindows" /> 属性。</span><span class="sxs-lookup"><span data-stu-id="0151f-116">Sets the <see cref="P:System.IdentityModel.Tokens.X509SecurityTokenHandler.MapToWindows" /> property.</span></span></param>
        <param name="certificateValidator"><span data-ttu-id="0151f-117">要使用的证书验证程序。</span><span class="sxs-lookup"><span data-stu-id="0151f-117">The certificate validator to use.</span></span> <span data-ttu-id="0151f-118">设置 <see cref="P:System.IdentityModel.Tokens.X509SecurityTokenHandler.CertificateValidator" /> 属性。</span><span class="sxs-lookup"><span data-stu-id="0151f-118">Sets the <see cref="P:System.IdentityModel.Tokens.X509SecurityTokenHandler.CertificateValidator" /> property.</span></span></param>
        <summary><span data-ttu-id="0151f-119">使用指定的证书验证方法初始化 <see cref="T:System.IdentityModel.Tokens.X509SecurityTokenHandler" /> 类的新实例，并指示是否将证书标识映射到 Windows 账户和指定的证书验证程序。</span><span class="sxs-lookup"><span data-stu-id="0151f-119">Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.X509SecurityTokenHandler" /> class by using a value that indicates whether the certificate should be mapped to a Windows account and the specified certificate validator.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanReadKeyIdentifierClause">
      <MemberSignature Language="C#" Value="public override bool CanReadKeyIdentifierClause (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanReadKeyIdentifierClause(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.X509SecurityTokenHandler.CanReadKeyIdentifierClause(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanReadKeyIdentifierClause (reader As XmlReader) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanReadKeyIdentifierClause(System::Xml::XmlReader ^ reader);" />
      <MemberSignature Language="F#" Value="override this.CanReadKeyIdentifierClause : System.Xml.XmlReader -&gt; bool" Usage="x509SecurityTokenHandler.CanReadKeyIdentifierClause reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="0151f-120">放置在密匙标识符子句的开始元素的位置的一个 XML 读取器。</span><span class="sxs-lookup"><span data-stu-id="0151f-120">An XML reader positioned at the start element of the key identifier clause.</span></span></param>
        <summary><span data-ttu-id="0151f-121">返回一个值，该值指示指定读取器是否引用 <see langword="&lt;ds:X509Data&gt;" /> 元素。</span><span class="sxs-lookup"><span data-stu-id="0151f-121">Returns a value that indicates whether the specified reader is referring to an <see langword="&lt;ds:X509Data&gt;" /> element.</span></span></summary>
        <returns><span data-ttu-id="0151f-122">如果在一 <see langword="true" /> 元素中引用了该读取器，则为 <see langword="&lt;ds:X509Data&gt;" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="0151f-122"><see langword="true" /> if the reader is referring to an <see langword="&lt;ds:X509Data&gt;" /> element; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="0151f-123"><paramref name="reader" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="0151f-123"><paramref name="reader" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CanReadToken">
      <MemberSignature Language="C#" Value="public override bool CanReadToken (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanReadToken(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.X509SecurityTokenHandler.CanReadToken(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanReadToken (reader As XmlReader) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanReadToken(System::Xml::XmlReader ^ reader);" />
      <MemberSignature Language="F#" Value="override this.CanReadToken : System.Xml.XmlReader -&gt; bool" Usage="x509SecurityTokenHandler.CanReadToken reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="0151f-124">指向标记 XML 的读者。</span><span class="sxs-lookup"><span data-stu-id="0151f-124">A reader pointing to the token XML.</span></span></param>
        <summary><span data-ttu-id="0151f-125">返回指示该读者是否指向在 ws-security 规范定义的 X.509 安全标记的值。</span><span class="sxs-lookup"><span data-stu-id="0151f-125">Returns a value that indicates whether the reader points to an X.509 security token as defined in the WS-Security specification.</span></span></summary>
        <returns><span data-ttu-id="0151f-126">如果读取器正指向 X.509 安全标记，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="0151f-126"><see langword="true" /> if the reader is pointing to an X.509 security token; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="0151f-127"><paramref name="reader" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="0151f-127"><paramref name="reader" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CanValidateToken">
      <MemberSignature Language="C#" Value="public override bool CanValidateToken { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanValidateToken" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.X509SecurityTokenHandler.CanValidateToken" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanValidateToken As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanValidateToken { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanValidateToken : bool" Usage="System.IdentityModel.Tokens.X509SecurityTokenHandler.CanValidateToken" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0151f-128">获取一个值，该值指示此处理程序是否支持对 <see cref="T:System.IdentityModel.Tokens.X509SecurityToken" /> 类型的标记进行验证。</span><span class="sxs-lookup"><span data-stu-id="0151f-128">Gets a value that indicates whether this handler supports validation of tokens of type <see cref="T:System.IdentityModel.Tokens.X509SecurityToken" />.</span></span></summary>
        <value><span data-ttu-id="0151f-129">如果该处理器支持类型 <see cref="T:System.IdentityModel.Tokens.X509SecurityToken" /> 标记的验证，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="0151f-129"><see langword="true" /> if the handler supports validation of tokens of type <see cref="T:System.IdentityModel.Tokens.X509SecurityToken" />; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="0151f-130">总是为 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="0151f-130">Always <see langword="true" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanWriteKeyIdentifierClause">
      <MemberSignature Language="C#" Value="public override bool CanWriteKeyIdentifierClause (System.IdentityModel.Tokens.SecurityKeyIdentifierClause securityKeyIdentifierClause);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanWriteKeyIdentifierClause(class System.IdentityModel.Tokens.SecurityKeyIdentifierClause securityKeyIdentifierClause) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.X509SecurityTokenHandler.CanWriteKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanWriteKeyIdentifierClause (securityKeyIdentifierClause As SecurityKeyIdentifierClause) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanWriteKeyIdentifierClause(System::IdentityModel::Tokens::SecurityKeyIdentifierClause ^ securityKeyIdentifierClause);" />
      <MemberSignature Language="F#" Value="override this.CanWriteKeyIdentifierClause : System.IdentityModel.Tokens.SecurityKeyIdentifierClause -&gt; bool" Usage="x509SecurityTokenHandler.CanWriteKeyIdentifierClause securityKeyIdentifierClause" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="securityKeyIdentifierClause" Type="System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />
      </Parameters>
      <Docs>
        <param name="securityKeyIdentifierClause"><span data-ttu-id="0151f-131">要序列化的密钥标识符子句。</span><span class="sxs-lookup"><span data-stu-id="0151f-131">The key identifier clause to be serialized.</span></span></param>
        <summary><span data-ttu-id="0151f-132">返回指示指定的密钥标识符子句是否可以由此处理程序序列化的值。</span><span class="sxs-lookup"><span data-stu-id="0151f-132">Returns a value that indicates whether the specified key identifier clause can be serialized by this handler.</span></span></summary>
        <returns><span data-ttu-id="0151f-133">如果支持 <paramref name="securityKeyIdentifierClause" /> 且如果将 <see cref="P:System.IdentityModel.Tokens.X509SecurityTokenHandler.WriteXmlDSigDefinedClauseTypes" /> 属性设置为 <see langword="true" />，则为 <see langword="true" />，否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="0151f-133"><see langword="true" /> if the <paramref name="securityKeyIdentifierClause" /> is supported and if the <see cref="P:System.IdentityModel.Tokens.X509SecurityTokenHandler.WriteXmlDSigDefinedClauseTypes" /> property is set to <see langword="true" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0151f-134">支持的密钥标识符子句类型为：</span><span class="sxs-lookup"><span data-stu-id="0151f-134">The supported key identifier clause types are:</span></span>  
  
1.  <xref:System.IdentityModel.Tokens.X509IssuerSerialKeyIdentifierClause>  
  
2.  <xref:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause>  
  
3.  <xref:System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="0151f-135"><paramref name="securityKeyIdentifierClause" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="0151f-135"><paramref name="securityKeyIdentifierClause" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CanWriteToken">
      <MemberSignature Language="C#" Value="public override bool CanWriteToken { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanWriteToken" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.X509SecurityTokenHandler.CanWriteToken" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanWriteToken As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanWriteToken { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanWriteToken : bool" Usage="System.IdentityModel.Tokens.X509SecurityTokenHandler.CanWriteToken" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0151f-136">获取指示此处理程序能否写入 <see cref="T:System.IdentityModel.Tokens.X509SecurityToken" /> 类型的标记的值。</span><span class="sxs-lookup"><span data-stu-id="0151f-136">Gets a value that indicates whether this handler can write tokens of type <see cref="T:System.IdentityModel.Tokens.X509SecurityToken" />.</span></span></summary>
        <value><span data-ttu-id="0151f-137">如果处理程序现在可以写入类型 <see cref="T:System.IdentityModel.Tokens.X509SecurityToken" /> 的标记，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="0151f-137"><see langword="true" /> if the handler can write tokens of type <see cref="T:System.IdentityModel.Tokens.X509SecurityToken" />; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="0151f-138">总是为 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="0151f-138">Always <see langword="true" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CertificateValidator">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Selectors.X509CertificateValidator CertificateValidator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IdentityModel.Selectors.X509CertificateValidator CertificateValidator" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.X509SecurityTokenHandler.CertificateValidator" />
      <MemberSignature Language="VB.NET" Value="Public Property CertificateValidator As X509CertificateValidator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IdentityModel::Selectors::X509CertificateValidator ^ CertificateValidator { System::IdentityModel::Selectors::X509CertificateValidator ^ get(); void set(System::IdentityModel::Selectors::X509CertificateValidator ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CertificateValidator : System.IdentityModel.Selectors.X509CertificateValidator with get, set" Usage="System.IdentityModel.Tokens.X509SecurityTokenHandler.CertificateValidator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Selectors.X509CertificateValidator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0151f-139">获取或设置当前实例所使用的 <see cref="T:System.IdentityModel.Selectors.X509CertificateValidator" /> 。</span><span class="sxs-lookup"><span data-stu-id="0151f-139">Gets or sets the <see cref="T:System.IdentityModel.Selectors.X509CertificateValidator" /> that is used by the current instance.</span></span></summary>
        <value><span data-ttu-id="0151f-140">当前实例使用的 X.509 证书验证程序。</span><span class="sxs-lookup"><span data-stu-id="0151f-140">The X.509 certificate validator that is used by the current instance.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTokenTypeIdentifiers">
      <MemberSignature Language="C#" Value="public override string[] GetTokenTypeIdentifiers ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string[] GetTokenTypeIdentifiers() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.X509SecurityTokenHandler.GetTokenTypeIdentifiers" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetTokenTypeIdentifiers () As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::String ^&gt; ^ GetTokenTypeIdentifiers();" />
      <MemberSignature Language="F#" Value="override this.GetTokenTypeIdentifiers : unit -&gt; string[]" Usage="x509SecurityTokenHandler.GetTokenTypeIdentifiers " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0151f-141">获取 WS-Security X.509 标记配置文件中定义的 X.509 安全标记类型。</span><span class="sxs-lookup"><span data-stu-id="0151f-141">Gets the X.509 security token type defined in the WS-Security X.509 Token Profile.</span></span></summary>
        <returns><span data-ttu-id="0151f-142">X.509 令牌类型 URI。</span><span class="sxs-lookup"><span data-stu-id="0151f-142">The X.509 token type URI.</span></span> <span data-ttu-id="0151f-143">默认情况下，<see cref="P:System.IdentityModel.Tokens.SecurityTokenTypes.X509Certificate" /> 属性的值。</span><span class="sxs-lookup"><span data-stu-id="0151f-143">By default, the value of the <see cref="P:System.IdentityModel.Tokens.SecurityTokenTypes.X509Certificate" /> property.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadCustomConfiguration">
      <MemberSignature Language="C#" Value="public override void LoadCustomConfiguration (System.Xml.XmlNodeList customConfigElements);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void LoadCustomConfiguration(class System.Xml.XmlNodeList customConfigElements) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.X509SecurityTokenHandler.LoadCustomConfiguration(System.Xml.XmlNodeList)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub LoadCustomConfiguration (customConfigElements As XmlNodeList)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void LoadCustomConfiguration(System::Xml::XmlNodeList ^ customConfigElements);" />
      <MemberSignature Language="F#" Value="override this.LoadCustomConfiguration : System.Xml.XmlNodeList -&gt; unit" Usage="x509SecurityTokenHandler.LoadCustomConfiguration customConfigElements" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="customConfigElements" Type="System.Xml.XmlNodeList" />
      </Parameters>
      <Docs>
        <param name="customConfigElements"><span data-ttu-id="0151f-144">包含自定义配置的 XML 元素。</span><span class="sxs-lookup"><span data-stu-id="0151f-144">The XML elements that contain the custom configuration.</span></span></param>
        <summary><span data-ttu-id="0151f-145">从 XML 加载自定义的配置。</span><span class="sxs-lookup"><span data-stu-id="0151f-145">Loads custom configuration from XML.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="0151f-146"><paramref name="customConfigElements" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="0151f-146"><paramref name="customConfigElements" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="0151f-147">指定自定义配置无效。</span><span class="sxs-lookup"><span data-stu-id="0151f-147">The custom configuration specified is not valid.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="MapToWindows">
      <MemberSignature Language="C#" Value="public bool MapToWindows { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool MapToWindows" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.X509SecurityTokenHandler.MapToWindows" />
      <MemberSignature Language="VB.NET" Value="Public Property MapToWindows As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool MapToWindows { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.MapToWindows : bool with get, set" Usage="System.IdentityModel.Tokens.X509SecurityTokenHandler.MapToWindows" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0151f-148">获取或设置指示验证令牌是否应映射到 Windows 帐户的值。</span><span class="sxs-lookup"><span data-stu-id="0151f-148">Gets or sets a value that indicates whether the validating token should be mapped to a Windows account.</span></span></summary>
        <value><span data-ttu-id="0151f-149">如果验证标记应映射到 Windows 帐户，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="0151f-149"><see langword="true" /> if the validating token should be mapped to a Windows account; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadKeyIdentifierClause">
      <MemberSignature Language="C#" Value="public override System.IdentityModel.Tokens.SecurityKeyIdentifierClause ReadKeyIdentifierClause (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IdentityModel.Tokens.SecurityKeyIdentifierClause ReadKeyIdentifierClause(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.X509SecurityTokenHandler.ReadKeyIdentifierClause(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadKeyIdentifierClause (reader As XmlReader) As SecurityKeyIdentifierClause" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::IdentityModel::Tokens::SecurityKeyIdentifierClause ^ ReadKeyIdentifierClause(System::Xml::XmlReader ^ reader);" />
      <MemberSignature Language="F#" Value="override this.ReadKeyIdentifierClause : System.Xml.XmlReader -&gt; System.IdentityModel.Tokens.SecurityKeyIdentifierClause" Usage="x509SecurityTokenHandler.ReadKeyIdentifierClause reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityKeyIdentifierClause</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="0151f-150">XML 读取器引用的密钥标识符子句。</span><span class="sxs-lookup"><span data-stu-id="0151f-150">The XML reader referencing the key identifier clause.</span></span></param>
        <summary><span data-ttu-id="0151f-151">指定 XML 读取器所引用的反序列化密钥标识符子句。</span><span class="sxs-lookup"><span data-stu-id="0151f-151">Deserializes a key identifier clause referenced by the specified XML reader.</span></span></summary>
        <returns><span data-ttu-id="0151f-152">从 XML 反序列化的密钥标识符子句。</span><span class="sxs-lookup"><span data-stu-id="0151f-152">The key identifier clause that was deserialized from the XML.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="0151f-153"><paramref name="reader" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="0151f-153"><paramref name="reader" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReadToken">
      <MemberSignature Language="C#" Value="public override System.IdentityModel.Tokens.SecurityToken ReadToken (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IdentityModel.Tokens.SecurityToken ReadToken(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.X509SecurityTokenHandler.ReadToken(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadToken (reader As XmlReader) As SecurityToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::IdentityModel::Tokens::SecurityToken ^ ReadToken(System::Xml::XmlReader ^ reader);" />
      <MemberSignature Language="F#" Value="override this.ReadToken : System.Xml.XmlReader -&gt; System.IdentityModel.Tokens.SecurityToken" Usage="x509SecurityTokenHandler.ReadToken reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="0151f-154">一个 XML 读取器指向 X.509 安全标记。</span><span class="sxs-lookup"><span data-stu-id="0151f-154">An XML reader that is pointing to an X.509 security token.</span></span></param>
        <summary><span data-ttu-id="0151f-155">反序列化指定 XML 读取器所引用的 X.509 安全标记。</span><span class="sxs-lookup"><span data-stu-id="0151f-155">Deserializes the X.509 security token referenced by the specified XML reader.</span></span></summary>
        <returns><span data-ttu-id="0151f-156">从 XML 反序列化的安全标记。</span><span class="sxs-lookup"><span data-stu-id="0151f-156">The security token deserialized from the XML.</span></span> <span data-ttu-id="0151f-157"><see cref="T:System.IdentityModel.Tokens.X509SecurityToken" /> 的一个实例。</span><span class="sxs-lookup"><span data-stu-id="0151f-157">An instance of <see cref="T:System.IdentityModel.Tokens.X509SecurityToken" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="0151f-158"><paramref name="reader" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="0151f-158"><paramref name="reader" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Xml.XmlException"><span data-ttu-id="0151f-159"><paramref name="reader" /> 不指向一个合法的 X.509 安全标记（如 ws-security X.509 标记配置文件定义）。</span><span class="sxs-lookup"><span data-stu-id="0151f-159"><paramref name="reader" /> is not pointing to a valid X.509 security token as defined in the WS-Security X.509 Token Profile.</span></span> <span data-ttu-id="0151f-160">或则除了指定的 encodingType 是 Base64 or HexBinary 之外。</span><span class="sxs-lookup"><span data-stu-id="0151f-160">Or the encodingType specified is other than Base64 or HexBinary.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="TokenType">
      <MemberSignature Language="C#" Value="public override Type TokenType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type TokenType" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.X509SecurityTokenHandler.TokenType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property TokenType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Type ^ TokenType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TokenType : Type" Usage="System.IdentityModel.Tokens.X509SecurityTokenHandler.TokenType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0151f-161">获取此处理程序处理的 <see cref="T:System.Type" /> 的标记。</span><span class="sxs-lookup"><span data-stu-id="0151f-161">Gets the <see cref="T:System.Type" /> of the tokens that this handler processes.</span></span></summary>
        <value><span data-ttu-id="0151f-162">默认情况下，<see cref="T:System.IdentityModel.Tokens.X509SecurityToken" /> 类的类型。</span><span class="sxs-lookup"><span data-stu-id="0151f-162">By default, the type of the <see cref="T:System.IdentityModel.Tokens.X509SecurityToken" /> class.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidateToken">
      <MemberSignature Language="C#" Value="public override System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Security.Claims.ClaimsIdentity&gt; ValidateToken (System.IdentityModel.Tokens.SecurityToken token);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Security.Claims.ClaimsIdentity&gt; ValidateToken(class System.IdentityModel.Tokens.SecurityToken token) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.X509SecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SecurityToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ValidateToken (token As SecurityToken) As ReadOnlyCollection(Of ClaimsIdentity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Security::Claims::ClaimsIdentity ^&gt; ^ ValidateToken(System::IdentityModel::Tokens::SecurityToken ^ token);" />
      <MemberSignature Language="F#" Value="override this.ValidateToken : System.IdentityModel.Tokens.SecurityToken -&gt; System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Security.Claims.ClaimsIdentity&gt;" Usage="x509SecurityTokenHandler.ValidateToken token" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Security.Claims.ClaimsIdentity&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="System.IdentityModel.Tokens.SecurityToken" />
      </Parameters>
      <Docs>
        <param name="token"><span data-ttu-id="0151f-163">要验证的令牌。</span><span class="sxs-lookup"><span data-stu-id="0151f-163">The token to be validated.</span></span></param>
        <summary><span data-ttu-id="0151f-164">验证指定的 X.509 安全标记。</span><span class="sxs-lookup"><span data-stu-id="0151f-164">Validates the specified X.509 security token.</span></span></summary>
        <returns><span data-ttu-id="0151f-165">标记中包含的值标识。</span><span class="sxs-lookup"><span data-stu-id="0151f-165">The identities contained in the token.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="0151f-166"><paramref name="token" /> 无法从 <see cref="T:System.IdentityModel.Tokens.X509SecurityToken" /> 赋值。</span><span class="sxs-lookup"><span data-stu-id="0151f-166"><paramref name="token" /> is not assignable from <see cref="T:System.IdentityModel.Tokens.X509SecurityToken" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="0151f-167"><paramref name="token" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="0151f-167"><paramref name="token" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="0151f-168"><see cref="P:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration" /> 属性为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="0151f-168">The <see cref="P:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration" /> property is <see langword="null" />.</span></span>  
  
<span data-ttu-id="0151f-169">- 或 -</span><span class="sxs-lookup"><span data-stu-id="0151f-169">-or-</span></span> 
<span data-ttu-id="0151f-170">没有 (<see cref="T:System.IdentityModel.Tokens.IssuerNameRegistry" />) 的颁发者名称注册表配置。</span><span class="sxs-lookup"><span data-stu-id="0151f-170">There is no issuer name registry (<see cref="T:System.IdentityModel.Tokens.IssuerNameRegistry" />) configured.</span></span> <span data-ttu-id="0151f-171"><see cref="P:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration.IssuerNameRegistry" /> 属性所引用的 <see cref="T:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration" /> 的 <see cref="P:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration" /> 属性为 <see langword="null" />。       </span><span class="sxs-lookup"><span data-stu-id="0151f-171">(The <see cref="P:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration.IssuerNameRegistry" /> property of the <see cref="T:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration" /> referenced by the <see cref="P:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration" /> property is <see langword="null" />.)</span></span></exception>
        <exception cref="T:System.IdentityModel.Tokens.SecurityTokenValidationException"><span data-ttu-id="0151f-172">当前 <see cref="T:System.IdentityModel.Selectors.X509CertificateValidator" /> 无法验证标记中的证书。</span><span class="sxs-lookup"><span data-stu-id="0151f-172">The current <see cref="T:System.IdentityModel.Selectors.X509CertificateValidator" /> was unable to validate the certificate in the token.</span></span></exception>
        <exception cref="T:System.IdentityModel.Tokens.SecurityTokenException"><span data-ttu-id="0151f-173">在尝试解析标记中的证书颁发者时，当前 <see cref="T:System.IdentityModel.Tokens.IssuerNameRegistry" /> 返回 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="0151f-173">The current <see cref="T:System.IdentityModel.Tokens.IssuerNameRegistry" /> returned <see langword="null" /> when trying to resolve the issuer of the certificate in the token.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteKeyIdentifierClause">
      <MemberSignature Language="C#" Value="public override void WriteKeyIdentifierClause (System.Xml.XmlWriter writer, System.IdentityModel.Tokens.SecurityKeyIdentifierClause securityKeyIdentifierClause);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteKeyIdentifierClause(class System.Xml.XmlWriter writer, class System.IdentityModel.Tokens.SecurityKeyIdentifierClause securityKeyIdentifierClause) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.X509SecurityTokenHandler.WriteKeyIdentifierClause(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteKeyIdentifierClause (writer As XmlWriter, securityKeyIdentifierClause As SecurityKeyIdentifierClause)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteKeyIdentifierClause(System::Xml::XmlWriter ^ writer, System::IdentityModel::Tokens::SecurityKeyIdentifierClause ^ securityKeyIdentifierClause);" />
      <MemberSignature Language="F#" Value="override this.WriteKeyIdentifierClause : System.Xml.XmlWriter * System.IdentityModel.Tokens.SecurityKeyIdentifierClause -&gt; unit" Usage="x509SecurityTokenHandler.WriteKeyIdentifierClause (writer, securityKeyIdentifierClause)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
        <Parameter Name="securityKeyIdentifierClause" Type="System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="0151f-174">应位于序列化密钥标识符子句的 XML 编写器。</span><span class="sxs-lookup"><span data-stu-id="0151f-174">The XML writer to which the key identifier clause should be serialized.</span></span></param>
        <param name="securityKeyIdentifierClause"><span data-ttu-id="0151f-175">要序列化的密钥标识符子句 。</span><span class="sxs-lookup"><span data-stu-id="0151f-175">The key identifier clause to serialize.</span></span></param>
        <summary><span data-ttu-id="0151f-176">序列化指定密钥标识符子句到 XML 编写器。</span><span class="sxs-lookup"><span data-stu-id="0151f-176">Serializes the specified key identifier clause to the XML writer.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="0151f-177"><paramref name="securityKeyIdentifierClause" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="0151f-177"><paramref name="securityKeyIdentifierClause" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="0151f-178">- 或 -</span><span class="sxs-lookup"><span data-stu-id="0151f-178">-or-</span></span> 
 <span data-ttu-id="0151f-179"><paramref name="writer" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="0151f-179"><paramref name="writer" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="0151f-180"><see cref="P:System.IdentityModel.Tokens.X509SecurityTokenHandler.WriteXmlDSigDefinedClauseTypes" /> 属性为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="0151f-180">The <see cref="P:System.IdentityModel.Tokens.X509SecurityTokenHandler.WriteXmlDSigDefinedClauseTypes" /> property is <see langword="false" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteToken">
      <MemberSignature Language="C#" Value="public override void WriteToken (System.Xml.XmlWriter writer, System.IdentityModel.Tokens.SecurityToken token);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteToken(class System.Xml.XmlWriter writer, class System.IdentityModel.Tokens.SecurityToken token) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.X509SecurityTokenHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteToken (writer As XmlWriter, token As SecurityToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteToken(System::Xml::XmlWriter ^ writer, System::IdentityModel::Tokens::SecurityToken ^ token);" />
      <MemberSignature Language="F#" Value="override this.WriteToken : System.Xml.XmlWriter * System.IdentityModel.Tokens.SecurityToken -&gt; unit" Usage="x509SecurityTokenHandler.WriteToken (writer, token)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
        <Parameter Name="token" Type="System.IdentityModel.Tokens.SecurityToken" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="0151f-181">应将令牌序列化为的 XML 编写器 。</span><span class="sxs-lookup"><span data-stu-id="0151f-181">The XML writer to which the token should be serialized.</span></span></param>
        <param name="token"><span data-ttu-id="0151f-182">X.509 安全令牌将进行序列化。</span><span class="sxs-lookup"><span data-stu-id="0151f-182">The X.509 security token to serialize.</span></span> <span data-ttu-id="0151f-183"><see cref="T:System.IdentityModel.Tokens.X509SecurityToken" /> 的一个实例。</span><span class="sxs-lookup"><span data-stu-id="0151f-183">An instance of <see cref="T:System.IdentityModel.Tokens.X509SecurityToken" />.</span></span></param>
        <summary><span data-ttu-id="0151f-184">将指定的 X.509 安全标记序列化到指定的 XML 编写器。</span><span class="sxs-lookup"><span data-stu-id="0151f-184">Serializes the specified X.509 security token to the specified XML writer.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="0151f-185"><paramref name="token" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="0151f-185"><paramref name="token" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="0151f-186">- 或 -</span><span class="sxs-lookup"><span data-stu-id="0151f-186">-or-</span></span> 
 <span data-ttu-id="0151f-187"><paramref name="writer" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="0151f-187"><paramref name="writer" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="0151f-188"><paramref name="token" /> 无法从 <see cref="T:System.IdentityModel.Tokens.X509SecurityToken" /> 赋值。</span><span class="sxs-lookup"><span data-stu-id="0151f-188"><paramref name="token" /> is not assignable from <see cref="T:System.IdentityModel.Tokens.X509SecurityToken" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteXmlDSigDefinedClauseTypes">
      <MemberSignature Language="C#" Value="public bool WriteXmlDSigDefinedClauseTypes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool WriteXmlDSigDefinedClauseTypes" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.X509SecurityTokenHandler.WriteXmlDSigDefinedClauseTypes" />
      <MemberSignature Language="VB.NET" Value="Public Property WriteXmlDSigDefinedClauseTypes As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool WriteXmlDSigDefinedClauseTypes { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.WriteXmlDSigDefinedClauseTypes : bool with get, set" Usage="System.IdentityModel.Tokens.X509SecurityTokenHandler.WriteXmlDSigDefinedClauseTypes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0151f-189">获取或设置指定 XmlDsig-defined 子句类型是否是首选项的值。</span><span class="sxs-lookup"><span data-stu-id="0151f-189">Gets or Sets the value that specifies whether XmlDsig-defined clause types are preferred.</span></span></summary>
        <value><span data-ttu-id="0151f-190">如果优先 XmlDsig 定义的项类型，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="0151f-190"><see langword="true" /> if XmlDsig-defined clause types are preferred; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0151f-191">支持的 XmlDSig 定义 <xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause> 类型为：</span><span class="sxs-lookup"><span data-stu-id="0151f-191">Supported XmlDSig-defined <xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause> types are:</span></span>  
  
-   <span data-ttu-id="0151f-192">X509IssuerSerial</span><span class="sxs-lookup"><span data-stu-id="0151f-192">X509IssuerSerial</span></span>  
  
-   <span data-ttu-id="0151f-193">X509SKI</span><span class="sxs-lookup"><span data-stu-id="0151f-193">X509SKI</span></span>  
  
-   <span data-ttu-id="0151f-194">X509Certificate</span><span class="sxs-lookup"><span data-stu-id="0151f-194">X509Certificate</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="X509NTAuthChainTrustValidator">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Tokens.X509NTAuthChainTrustValidator X509NTAuthChainTrustValidator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IdentityModel.Tokens.X509NTAuthChainTrustValidator X509NTAuthChainTrustValidator" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.X509SecurityTokenHandler.X509NTAuthChainTrustValidator" />
      <MemberSignature Language="VB.NET" Value="Public Property X509NTAuthChainTrustValidator As X509NTAuthChainTrustValidator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IdentityModel::Tokens::X509NTAuthChainTrustValidator ^ X509NTAuthChainTrustValidator { System::IdentityModel::Tokens::X509NTAuthChainTrustValidator ^ get(); void set(System::IdentityModel::Tokens::X509NTAuthChainTrustValidator ^ value); };" />
      <MemberSignature Language="F#" Value="member this.X509NTAuthChainTrustValidator : System.IdentityModel.Tokens.X509NTAuthChainTrustValidator with get, set" Usage="System.IdentityModel.Tokens.X509SecurityTokenHandler.X509NTAuthChainTrustValidator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.X509NTAuthChainTrustValidator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0151f-195">获取或设置当传入 X.509 证书映射至 windows 帐户时，证书验证过程中当前实例使用的 <see cref="T:System.IdentityModel.Tokens.X509NTAuthChainTrustValidator" />。</span><span class="sxs-lookup"><span data-stu-id="0151f-195">Gets or sets the <see cref="T:System.IdentityModel.Tokens.X509NTAuthChainTrustValidator" /> that is used by the current instance during certificate validation when the incoming X.509 certificate is mapped to a Windows account.</span></span></summary>
        <value><span data-ttu-id="0151f-196">X.509 证书验证程序，其将验证指定的 X.509 证书并验证证书是否可映射至 Windows 帐户以及证书链是否可信。</span><span class="sxs-lookup"><span data-stu-id="0151f-196">An X.509 certificate validator that will validate a specified X.509 certificate and verify whether the certificate can be mapped to a Windows account and whether the certificate chain is trusted.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
