<Type Name="SymmetricProofDescriptor" FullName="System.IdentityModel.Tokens.SymmetricProofDescriptor">
  <Metadata><Meta Name="ms.openlocfilehash" Value="991cc17f85eb0504a7e3227f44693b091858d2f4" /><Meta Name="ms.sourcegitcommit" Value="397961a0164281b579f68064c3bb66c071f374d9" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/14/2020" /><Meta Name="ms.locfileid" Value="72406398" /></Metadata><TypeSignature Language="C#" Value="public class SymmetricProofDescriptor : System.IdentityModel.Tokens.ProofDescriptor" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SymmetricProofDescriptor extends System.IdentityModel.Tokens.ProofDescriptor" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.Tokens.SymmetricProofDescriptor" />
  <TypeSignature Language="VB.NET" Value="Public Class SymmetricProofDescriptor&#xA;Inherits ProofDescriptor" />
  <TypeSignature Language="C++ CLI" Value="public ref class SymmetricProofDescriptor : System::IdentityModel::Tokens::ProofDescriptor" />
  <TypeSignature Language="F#" Value="type SymmetricProofDescriptor = class&#xA;    inherit ProofDescriptor" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.IdentityModel.Tokens.ProofDescriptor</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="9cb6b-101">这种可用于发布基于标记的对称密钥。</span><span class="sxs-lookup"><span data-stu-id="9cb6b-101">This class can be used for issuing the symmetric key based token.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="9cb6b-102">初始化 <see cref="T:System.IdentityModel.Tokens.SymmetricProofDescriptor" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="9cb6b-102">Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.SymmetricProofDescriptor" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SymmetricProofDescriptor (System.IdentityModel.Tokens.EncryptingCredentials targetWrappingCredentials);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IdentityModel.Tokens.EncryptingCredentials targetWrappingCredentials) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor(System.IdentityModel.Tokens.EncryptingCredentials)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (targetWrappingCredentials As EncryptingCredentials)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SymmetricProofDescriptor(System::IdentityModel::Tokens::EncryptingCredentials ^ targetWrappingCredentials);" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Tokens.SymmetricProofDescriptor : System.IdentityModel.Tokens.EncryptingCredentials -&gt; System.IdentityModel.Tokens.SymmetricProofDescriptor" Usage="new System.IdentityModel.Tokens.SymmetricProofDescriptor targetWrappingCredentials" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="targetWrappingCredentials" Type="System.IdentityModel.Tokens.EncryptingCredentials" />
      </Parameters>
      <Docs>
        <param name="targetWrappingCredentials"><span data-ttu-id="9cb6b-103">要使用的 <see cref="T:System.IdentityModel.Tokens.EncryptingCredentials" />。</span><span class="sxs-lookup"><span data-stu-id="9cb6b-103">The <see cref="T:System.IdentityModel.Tokens.EncryptingCredentials" /> to be used.</span></span></param>
        <summary><span data-ttu-id="9cb6b-104">使用指定的加密凭据初始化 <see cref="T:System.IdentityModel.Tokens.SymmetricProofDescriptor" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="9cb6b-104">Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.SymmetricProofDescriptor" /> class with the specified encrypting credentials.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9cb6b-105">如果你希望 STS 使用指定的，请使用此构造函数 <xref:System.IdentityModel.Tokens.EncryptingCredentials> 。</span><span class="sxs-lookup"><span data-stu-id="9cb6b-105">Use this constructor if you want the STS to use the specified <xref:System.IdentityModel.Tokens.EncryptingCredentials>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SymmetricProofDescriptor (byte[] key, System.IdentityModel.Tokens.EncryptingCredentials targetWrappingCredentials);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int8[] key, class System.IdentityModel.Tokens.EncryptingCredentials targetWrappingCredentials) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor(System.Byte[],System.IdentityModel.Tokens.EncryptingCredentials)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (key As Byte(), targetWrappingCredentials As EncryptingCredentials)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SymmetricProofDescriptor(cli::array &lt;System::Byte&gt; ^ key, System::IdentityModel::Tokens::EncryptingCredentials ^ targetWrappingCredentials);" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Tokens.SymmetricProofDescriptor : byte[] * System.IdentityModel.Tokens.EncryptingCredentials -&gt; System.IdentityModel.Tokens.SymmetricProofDescriptor" Usage="new System.IdentityModel.Tokens.SymmetricProofDescriptor (key, targetWrappingCredentials)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="key" Type="System.Byte[]" />
        <Parameter Name="targetWrappingCredentials" Type="System.IdentityModel.Tokens.EncryptingCredentials" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="9cb6b-106">在发布令牌内部使用的对称密钥。</span><span class="sxs-lookup"><span data-stu-id="9cb6b-106">The symmetric key that is used inside the issued token.</span></span></param>
        <param name="targetWrappingCredentials"><span data-ttu-id="9cb6b-107">依赖的一方的密钥加密凭据。</span><span class="sxs-lookup"><span data-stu-id="9cb6b-107">The key encrypting credentials for the relying party.</span></span></param>
        <summary><span data-ttu-id="9cb6b-108">使用指定密钥材料初始化 <see cref="T:System.IdentityModel.Tokens.SymmetricProofDescriptor" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="9cb6b-108">Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.SymmetricProofDescriptor" /> class with the specified key material.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9cb6b-109">如果你希望 STS 使用指定的密钥字节，请使用此构造函数。</span><span class="sxs-lookup"><span data-stu-id="9cb6b-109">Use this constructor if you want the STS to use the specified key bytes.</span></span> <span data-ttu-id="9cb6b-110">如果客户端发送熵，STS 只是将其用作已颁发令牌的密钥，则会发生这种情况。</span><span class="sxs-lookup"><span data-stu-id="9cb6b-110">This happens when client sends the entropy, and the STS would just use that as the key for the issued token.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9cb6b-111"><paramref name="key" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="9cb6b-111"><paramref name="key" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SymmetricProofDescriptor (int keySizeInBits, System.IdentityModel.Tokens.EncryptingCredentials targetWrappingCredentials);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 keySizeInBits, class System.IdentityModel.Tokens.EncryptingCredentials targetWrappingCredentials) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor(System.Int32,System.IdentityModel.Tokens.EncryptingCredentials)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (keySizeInBits As Integer, targetWrappingCredentials As EncryptingCredentials)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SymmetricProofDescriptor(int keySizeInBits, System::IdentityModel::Tokens::EncryptingCredentials ^ targetWrappingCredentials);" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Tokens.SymmetricProofDescriptor : int * System.IdentityModel.Tokens.EncryptingCredentials -&gt; System.IdentityModel.Tokens.SymmetricProofDescriptor" Usage="new System.IdentityModel.Tokens.SymmetricProofDescriptor (keySizeInBits, targetWrappingCredentials)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="keySizeInBits" Type="System.Int32" />
        <Parameter Name="targetWrappingCredentials" Type="System.IdentityModel.Tokens.EncryptingCredentials" />
      </Parameters>
      <Docs>
        <param name="keySizeInBits"><span data-ttu-id="9cb6b-112">对称密钥的大小。</span><span class="sxs-lookup"><span data-stu-id="9cb6b-112">The size of the symmetric key.</span></span></param>
        <param name="targetWrappingCredentials"><span data-ttu-id="9cb6b-113">请求目标的密钥加密凭据。</span><span class="sxs-lookup"><span data-stu-id="9cb6b-113">The key encrypting credentials for the target of the request.</span></span></param>
        <summary><span data-ttu-id="9cb6b-114">使用自动生成的密钥初始化 <see cref="T:System.IdentityModel.Tokens.SymmetricProofDescriptor" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="9cb6b-114">Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.SymmetricProofDescriptor" /> class with an auto-generated key.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9cb6b-115">如果你希望 STS 使用随机数生成器自动生成密钥并将其作为二进制机密发送到证明令牌，请使用此构造函数。</span><span class="sxs-lookup"><span data-stu-id="9cb6b-115">Use this constructor if you want the STS to auto-generate the key using a random number generator and send it in the proof token as a binary secret.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SymmetricProofDescriptor (int keySizeInBits, System.IdentityModel.Tokens.EncryptingCredentials targetWrappingCredentials, System.IdentityModel.Tokens.EncryptingCredentials requestorWrappingCredentials);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 keySizeInBits, class System.IdentityModel.Tokens.EncryptingCredentials targetWrappingCredentials, class System.IdentityModel.Tokens.EncryptingCredentials requestorWrappingCredentials) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor(System.Int32,System.IdentityModel.Tokens.EncryptingCredentials,System.IdentityModel.Tokens.EncryptingCredentials)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (keySizeInBits As Integer, targetWrappingCredentials As EncryptingCredentials, requestorWrappingCredentials As EncryptingCredentials)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SymmetricProofDescriptor(int keySizeInBits, System::IdentityModel::Tokens::EncryptingCredentials ^ targetWrappingCredentials, System::IdentityModel::Tokens::EncryptingCredentials ^ requestorWrappingCredentials);" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Tokens.SymmetricProofDescriptor : int * System.IdentityModel.Tokens.EncryptingCredentials * System.IdentityModel.Tokens.EncryptingCredentials -&gt; System.IdentityModel.Tokens.SymmetricProofDescriptor" Usage="new System.IdentityModel.Tokens.SymmetricProofDescriptor (keySizeInBits, targetWrappingCredentials, requestorWrappingCredentials)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="keySizeInBits" Type="System.Int32" />
        <Parameter Name="targetWrappingCredentials" Type="System.IdentityModel.Tokens.EncryptingCredentials" />
        <Parameter Name="requestorWrappingCredentials" Type="System.IdentityModel.Tokens.EncryptingCredentials" />
      </Parameters>
      <Docs>
        <param name="keySizeInBits"><span data-ttu-id="9cb6b-116">对称密钥的大小。</span><span class="sxs-lookup"><span data-stu-id="9cb6b-116">The size of the symmetric key.</span></span></param>
        <param name="targetWrappingCredentials"><span data-ttu-id="9cb6b-117">请求目标的密钥加密凭据。</span><span class="sxs-lookup"><span data-stu-id="9cb6b-117">The key encrypting credentials for the target of the request.</span></span></param>
        <param name="requestorWrappingCredentials"><span data-ttu-id="9cb6b-118">请求者的密钥加密凭据。</span><span class="sxs-lookup"><span data-stu-id="9cb6b-118">The key encrypting credentials for the requestor.</span></span></param>
        <summary><span data-ttu-id="9cb6b-119">使用自动生成的密钥初始化 <see cref="T:System.IdentityModel.Tokens.SymmetricProofDescriptor" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="9cb6b-119">Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.SymmetricProofDescriptor" /> class with an auto-generated key.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9cb6b-120">如果你希望 STS 自动生成密钥并将其作为加密密钥发送到证明令牌，请使用此构造函数。</span><span class="sxs-lookup"><span data-stu-id="9cb6b-120">Use this constructor if you want the STS to auto-generate the key and send it in the proof token as encrypted key.</span></span> <span data-ttu-id="9cb6b-121">使用此构造函数可以覆盖两种情况：</span><span class="sxs-lookup"><span data-stu-id="9cb6b-121">Two cases can be covered by using this constructor:</span></span>  
  
1.  <span data-ttu-id="9cb6b-122">客户端发送熵，但服务器拒绝这种情况。</span><span class="sxs-lookup"><span data-stu-id="9cb6b-122">The client sends the entropy, but the server rejects it.</span></span>  
  
2.  <span data-ttu-id="9cb6b-123">客户端不发送熵，因此使用服务器的平均信息量。</span><span class="sxs-lookup"><span data-stu-id="9cb6b-123">The client does not send the entropy, so the server's entropy is used.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="9cb6b-124"><paramref name="keySizeInBits" /> 小于或等于零。</span><span class="sxs-lookup"><span data-stu-id="9cb6b-124"><paramref name="keySizeInBits" /> is less than or equal to zero.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SymmetricProofDescriptor (int keySizeInBits, System.IdentityModel.Tokens.EncryptingCredentials targetWrappingCredentials, System.IdentityModel.Tokens.EncryptingCredentials requestorWrappingCredentials, byte[] sourceEntropy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 keySizeInBits, class System.IdentityModel.Tokens.EncryptingCredentials targetWrappingCredentials, class System.IdentityModel.Tokens.EncryptingCredentials requestorWrappingCredentials, unsigned int8[] sourceEntropy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor(System.Int32,System.IdentityModel.Tokens.EncryptingCredentials,System.IdentityModel.Tokens.EncryptingCredentials,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (keySizeInBits As Integer, targetWrappingCredentials As EncryptingCredentials, requestorWrappingCredentials As EncryptingCredentials, sourceEntropy As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SymmetricProofDescriptor(int keySizeInBits, System::IdentityModel::Tokens::EncryptingCredentials ^ targetWrappingCredentials, System::IdentityModel::Tokens::EncryptingCredentials ^ requestorWrappingCredentials, cli::array &lt;System::Byte&gt; ^ sourceEntropy);" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Tokens.SymmetricProofDescriptor : int * System.IdentityModel.Tokens.EncryptingCredentials * System.IdentityModel.Tokens.EncryptingCredentials * byte[] -&gt; System.IdentityModel.Tokens.SymmetricProofDescriptor" Usage="new System.IdentityModel.Tokens.SymmetricProofDescriptor (keySizeInBits, targetWrappingCredentials, requestorWrappingCredentials, sourceEntropy)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="keySizeInBits" Type="System.Int32" />
        <Parameter Name="targetWrappingCredentials" Type="System.IdentityModel.Tokens.EncryptingCredentials" />
        <Parameter Name="requestorWrappingCredentials" Type="System.IdentityModel.Tokens.EncryptingCredentials" />
        <Parameter Name="sourceEntropy" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="keySizeInBits"><span data-ttu-id="9cb6b-125">对称密钥的大小。</span><span class="sxs-lookup"><span data-stu-id="9cb6b-125">The size of the symmetric key.</span></span></param>
        <param name="targetWrappingCredentials"><span data-ttu-id="9cb6b-126">请求目标的密钥加密凭据。</span><span class="sxs-lookup"><span data-stu-id="9cb6b-126">The key encrypting credentials for the target of the request.</span></span></param>
        <param name="requestorWrappingCredentials"><span data-ttu-id="9cb6b-127">请求者的加密的凭据用于加密平均信息量或证明标识。</span><span class="sxs-lookup"><span data-stu-id="9cb6b-127">The encrypting credentials for the requestor used to encrypt the entropy or the proof token.</span></span></param>
        <param name="sourceEntropy"><span data-ttu-id="9cb6b-128">请求者的平均信息量。</span><span class="sxs-lookup"><span data-stu-id="9cb6b-128">The requestor's entropy.</span></span></param>
        <summary><span data-ttu-id="9cb6b-129">初始化 <see cref="T:System.IdentityModel.Tokens.SymmetricProofDescriptor" /> 类的新实例用以发送联合的平均信息量。</span><span class="sxs-lookup"><span data-stu-id="9cb6b-129">Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.SymmetricProofDescriptor" /> class to use for sending combined entropy.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9cb6b-130">如果要发送组合的熵，请使用此构造函数。</span><span class="sxs-lookup"><span data-stu-id="9cb6b-130">Use this constructor if you want to send a combined entropy.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9cb6b-131"><paramref name="sourceEntropy" /> 为 <see langword="null" /> 或是空数组。</span><span class="sxs-lookup"><span data-stu-id="9cb6b-131"><paramref name="sourceEntropy" /> is <see langword="null" /> or an empty array.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="9cb6b-132"><paramref name="keySize" /> 小于零。</span><span class="sxs-lookup"><span data-stu-id="9cb6b-132"><paramref name="keySize" /> is less than zero.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SymmetricProofDescriptor (int keySizeInBits, System.IdentityModel.Tokens.EncryptingCredentials targetWrappingCredentials, System.IdentityModel.Tokens.EncryptingCredentials requestorWrappingCredentials, string encryptWith);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 keySizeInBits, class System.IdentityModel.Tokens.EncryptingCredentials targetWrappingCredentials, class System.IdentityModel.Tokens.EncryptingCredentials requestorWrappingCredentials, string encryptWith) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor(System.Int32,System.IdentityModel.Tokens.EncryptingCredentials,System.IdentityModel.Tokens.EncryptingCredentials,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (keySizeInBits As Integer, targetWrappingCredentials As EncryptingCredentials, requestorWrappingCredentials As EncryptingCredentials, encryptWith As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SymmetricProofDescriptor(int keySizeInBits, System::IdentityModel::Tokens::EncryptingCredentials ^ targetWrappingCredentials, System::IdentityModel::Tokens::EncryptingCredentials ^ requestorWrappingCredentials, System::String ^ encryptWith);" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Tokens.SymmetricProofDescriptor : int * System.IdentityModel.Tokens.EncryptingCredentials * System.IdentityModel.Tokens.EncryptingCredentials * string -&gt; System.IdentityModel.Tokens.SymmetricProofDescriptor" Usage="new System.IdentityModel.Tokens.SymmetricProofDescriptor (keySizeInBits, targetWrappingCredentials, requestorWrappingCredentials, encryptWith)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="keySizeInBits" Type="System.Int32" />
        <Parameter Name="targetWrappingCredentials" Type="System.IdentityModel.Tokens.EncryptingCredentials" />
        <Parameter Name="requestorWrappingCredentials" Type="System.IdentityModel.Tokens.EncryptingCredentials" />
        <Parameter Name="encryptWith" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="keySizeInBits"><span data-ttu-id="9cb6b-133">对称密钥的大小。</span><span class="sxs-lookup"><span data-stu-id="9cb6b-133">The size of the symmetric key.</span></span></param>
        <param name="targetWrappingCredentials"><span data-ttu-id="9cb6b-134">依赖的一方的密钥加密凭据。</span><span class="sxs-lookup"><span data-stu-id="9cb6b-134">The key encrypting credentials for the relying party.</span></span></param>
        <param name="requestorWrappingCredentials"><span data-ttu-id="9cb6b-135">请求者的密钥加密凭据。</span><span class="sxs-lookup"><span data-stu-id="9cb6b-135">The key encrypting credentials for the requestor.</span></span></param>
        <param name="encryptWith"><span data-ttu-id="9cb6b-136">RST 的 <see langword="&lt;EncryptWith&gt;" /> 元素中指定的算法 (URI)。</span><span class="sxs-lookup"><span data-stu-id="9cb6b-136">The algorithm (URI) specified in the <see langword="&lt;EncryptWith&gt;" /> element of the RST.</span></span></param>
        <summary><span data-ttu-id="9cb6b-137">使用此构造函数包含自动生成的 STS 密钥并将其作为加密密钥在证明标记中发送。</span><span class="sxs-lookup"><span data-stu-id="9cb6b-137">Use this constructor to have the STS autogenerate a key and send it in the proof token as encrypted key.</span></span> <span data-ttu-id="9cb6b-138">包括以下两种情况：1.</span><span class="sxs-lookup"><span data-stu-id="9cb6b-138">Two cases are covered here 1.</span></span> <span data-ttu-id="9cb6b-139">客户端发送熵，但服务器会拒绝它。2.</span><span class="sxs-lookup"><span data-stu-id="9cb6b-139">client sends the entropy, but server rejects it 2.</span></span> <span data-ttu-id="9cb6b-140">客户端不会发送熵，因此仅使用服务器的熵。</span><span class="sxs-lookup"><span data-stu-id="9cb6b-140">client did not send a entropy, so just use server's entropy.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9cb6b-141">如果 `encryptWith` 是 DES 算法，则保证密钥不是弱 DES 密钥。</span><span class="sxs-lookup"><span data-stu-id="9cb6b-141">If `encryptWith` is a DES algorithm, the key is guaranteed not to be a weak DES key.</span></span>  
  
 <span data-ttu-id="9cb6b-142">如果你希望 STS 自动生成密钥并将其作为加密密钥发送到证明令牌，请使用此构造函数。</span><span class="sxs-lookup"><span data-stu-id="9cb6b-142">Use this constructor if you want the STS to auto-generate the key and send it in the proof token as encrypted key.</span></span> <span data-ttu-id="9cb6b-143">使用此构造函数可以覆盖两种情况：</span><span class="sxs-lookup"><span data-stu-id="9cb6b-143">Two cases can be covered by using this constructor:</span></span>  
  
1.  <span data-ttu-id="9cb6b-144">客户端发送熵，但服务器拒绝这种情况。</span><span class="sxs-lookup"><span data-stu-id="9cb6b-144">The client sends the entropy, but the server rejects it.</span></span>  
  
2.  <span data-ttu-id="9cb6b-145">客户端不发送熵，因此使用服务器的平均信息量。</span><span class="sxs-lookup"><span data-stu-id="9cb6b-145">The client does not send the entropy, so the server's entropy is used.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="9cb6b-146"><paramref name="keySizeInBits" /> 小于或等于零。</span><span class="sxs-lookup"><span data-stu-id="9cb6b-146"><paramref name="keySizeInBits" /> is less than or equal to zero.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SymmetricProofDescriptor (int keySizeInBits, System.IdentityModel.Tokens.EncryptingCredentials targetWrappingCredentials, System.IdentityModel.Tokens.EncryptingCredentials requestorWrappingCredentials, byte[] sourceEntropy, string encryptWith);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 keySizeInBits, class System.IdentityModel.Tokens.EncryptingCredentials targetWrappingCredentials, class System.IdentityModel.Tokens.EncryptingCredentials requestorWrappingCredentials, unsigned int8[] sourceEntropy, string encryptWith) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor(System.Int32,System.IdentityModel.Tokens.EncryptingCredentials,System.IdentityModel.Tokens.EncryptingCredentials,System.Byte[],System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (keySizeInBits As Integer, targetWrappingCredentials As EncryptingCredentials, requestorWrappingCredentials As EncryptingCredentials, sourceEntropy As Byte(), encryptWith As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SymmetricProofDescriptor(int keySizeInBits, System::IdentityModel::Tokens::EncryptingCredentials ^ targetWrappingCredentials, System::IdentityModel::Tokens::EncryptingCredentials ^ requestorWrappingCredentials, cli::array &lt;System::Byte&gt; ^ sourceEntropy, System::String ^ encryptWith);" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Tokens.SymmetricProofDescriptor : int * System.IdentityModel.Tokens.EncryptingCredentials * System.IdentityModel.Tokens.EncryptingCredentials * byte[] * string -&gt; System.IdentityModel.Tokens.SymmetricProofDescriptor" Usage="new System.IdentityModel.Tokens.SymmetricProofDescriptor (keySizeInBits, targetWrappingCredentials, requestorWrappingCredentials, sourceEntropy, encryptWith)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="keySizeInBits" Type="System.Int32" />
        <Parameter Name="targetWrappingCredentials" Type="System.IdentityModel.Tokens.EncryptingCredentials" />
        <Parameter Name="requestorWrappingCredentials" Type="System.IdentityModel.Tokens.EncryptingCredentials" />
        <Parameter Name="sourceEntropy" Type="System.Byte[]" />
        <Parameter Name="encryptWith" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="keySizeInBits"><span data-ttu-id="9cb6b-147">对称密钥的大小。</span><span class="sxs-lookup"><span data-stu-id="9cb6b-147">The size of the symmetric key.</span></span></param>
        <param name="targetWrappingCredentials"><span data-ttu-id="9cb6b-148">信赖方的加密凭据用于加密在 SecurityKeyIdentifier 属性中的键。</span><span class="sxs-lookup"><span data-stu-id="9cb6b-148">The encrypting credentials for the relying party used to encrypt the key in the SecurityKeyIdentifier property.</span></span></param>
        <param name="requestorWrappingCredentials"><span data-ttu-id="9cb6b-149">请求者的加密的凭据用于加密平均信息量或证明标识。</span><span class="sxs-lookup"><span data-stu-id="9cb6b-149">The encrypting credentials for the requestor used to encrypt the entropy or the proof token.</span></span></param>
        <param name="sourceEntropy"><span data-ttu-id="9cb6b-150">请求者的平均信息量。</span><span class="sxs-lookup"><span data-stu-id="9cb6b-150">The requestor's entropy.</span></span></param>
        <param name="encryptWith"><span data-ttu-id="9cb6b-151">使用加密校验密钥的 URI 算法。</span><span class="sxs-lookup"><span data-stu-id="9cb6b-151">The URI of the algorithm to use to encrypt the proof key.</span></span></param>
        <summary><span data-ttu-id="9cb6b-152">初始化 <see cref="T:System.IdentityModel.Tokens.SymmetricProofDescriptor" /> 类的新实例用以发送联合的平均信息量。</span><span class="sxs-lookup"><span data-stu-id="9cb6b-152">Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.SymmetricProofDescriptor" /> class to use for sending combined entropy.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9cb6b-153">使用此构造函数发送组合熵。</span><span class="sxs-lookup"><span data-stu-id="9cb6b-153">Use this constructor to send combined entropy.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="9cb6b-154"><paramref name="keySizeInBits" /> 小于或等于零。</span><span class="sxs-lookup"><span data-stu-id="9cb6b-154"><paramref name="keySizeInBits" /> is less than or equal to zero.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9cb6b-155"><paramref name="sourceEntropy" /> 为 <see langword="null" /> 或是空数组。</span><span class="sxs-lookup"><span data-stu-id="9cb6b-155"><paramref name="sourceEntropy" /> is <see langword="null" /> or an empty array.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ApplyTo">
      <MemberSignature Language="C#" Value="public override void ApplyTo (System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse response);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ApplyTo(class System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse response) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SymmetricProofDescriptor.ApplyTo(System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub ApplyTo (response As RequestSecurityTokenResponse)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void ApplyTo(System::IdentityModel::Protocols::WSTrust::RequestSecurityTokenResponse ^ response);" />
      <MemberSignature Language="F#" Value="override this.ApplyTo : System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse -&gt; unit" Usage="symmetricProofDescriptor.ApplyTo response" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="response" Type="System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse" />
      </Parameters>
      <Docs>
        <param name="response"><span data-ttu-id="9cb6b-156">要向其应用证明说明符的 RSTR。</span><span class="sxs-lookup"><span data-stu-id="9cb6b-156">The RSTR to which to apply the proof descriptor.</span></span></param>
        <summary><span data-ttu-id="9cb6b-157">基于证明说明符中的设置修改指定的 RSTR。</span><span class="sxs-lookup"><span data-stu-id="9cb6b-157">Modifies the specified RSTR based on the settings in this proof descriptor.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9cb6b-158">根据证明描述符实例内的内容，在 RSTR 内设置相应的项目，例如请求的证明令牌。</span><span class="sxs-lookup"><span data-stu-id="9cb6b-158">Sets the appropriate artifacts, such as the requested proof token, inside the RSTR based on what is inside the proof descriptor instance.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9cb6b-159"><paramref name="response" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="9cb6b-159"><paramref name="response" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetKeyBytes">
      <MemberSignature Language="C#" Value="public byte[] GetKeyBytes ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] GetKeyBytes() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SymmetricProofDescriptor.GetKeyBytes" />
      <MemberSignature Language="VB.NET" Value="Public Function GetKeyBytes () As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ GetKeyBytes();" />
      <MemberSignature Language="F#" Value="member this.GetKeyBytes : unit -&gt; byte[]" Usage="symmetricProofDescriptor.GetKeyBytes " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9cb6b-160">获取密钥材料。</span><span class="sxs-lookup"><span data-stu-id="9cb6b-160">Gets the key material.</span></span></summary>
        <returns><span data-ttu-id="9cb6b-161">一个包含密钥材料的字节数组。</span><span class="sxs-lookup"><span data-stu-id="9cb6b-161">A byte array that contains the key material.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSourceEntropy">
      <MemberSignature Language="C#" Value="protected byte[] GetSourceEntropy ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance unsigned int8[] GetSourceEntropy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SymmetricProofDescriptor.GetSourceEntropy" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetSourceEntropy () As Byte()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; cli::array &lt;System::Byte&gt; ^ GetSourceEntropy();" />
      <MemberSignature Language="F#" Value="member this.GetSourceEntropy : unit -&gt; byte[]" Usage="symmetricProofDescriptor.GetSourceEntropy " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9cb6b-162">在纯字节中获取源平均信息量。</span><span class="sxs-lookup"><span data-stu-id="9cb6b-162">Gets the source entropy in plain bytes.</span></span></summary>
        <returns><span data-ttu-id="9cb6b-163">一个包含源平均信息量的字节数组。</span><span class="sxs-lookup"><span data-stu-id="9cb6b-163">A byte array that contains the source entropy.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTargetEntropy">
      <MemberSignature Language="C#" Value="protected byte[] GetTargetEntropy ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance unsigned int8[] GetTargetEntropy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SymmetricProofDescriptor.GetTargetEntropy" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetTargetEntropy () As Byte()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; cli::array &lt;System::Byte&gt; ^ GetTargetEntropy();" />
      <MemberSignature Language="F#" Value="member this.GetTargetEntropy : unit -&gt; byte[]" Usage="symmetricProofDescriptor.GetTargetEntropy " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9cb6b-164">在纯字节中获取目标平均信息量。</span><span class="sxs-lookup"><span data-stu-id="9cb6b-164">Gets the target entropy in plain bytes.</span></span></summary>
        <returns><span data-ttu-id="9cb6b-165">一个包含目标平均信息量的字节数组。</span><span class="sxs-lookup"><span data-stu-id="9cb6b-165">A byte array that contains the target entropy.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyIdentifier">
      <MemberSignature Language="C#" Value="public override System.IdentityModel.Tokens.SecurityKeyIdentifier KeyIdentifier { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IdentityModel.Tokens.SecurityKeyIdentifier KeyIdentifier" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SymmetricProofDescriptor.KeyIdentifier" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property KeyIdentifier As SecurityKeyIdentifier" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::IdentityModel::Tokens::SecurityKeyIdentifier ^ KeyIdentifier { System::IdentityModel::Tokens::SecurityKeyIdentifier ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.KeyIdentifier : System.IdentityModel.Tokens.SecurityKeyIdentifier" Usage="System.IdentityModel.Tokens.SymmetricProofDescriptor.KeyIdentifier" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityKeyIdentifier</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9cb6b-166">获取可在标记内部使用的键标识符，该标识符可用于定义键。</span><span class="sxs-lookup"><span data-stu-id="9cb6b-166">Gets the key identifier that can be used inside the issued token to define the key.</span></span> <span data-ttu-id="9cb6b-167">通常是二进制秘密或加密的密钥。</span><span class="sxs-lookup"><span data-stu-id="9cb6b-167">It is usually the binary secret or the encrypted key;</span></span></summary>
        <value><span data-ttu-id="9cb6b-168">密钥标识符。</span><span class="sxs-lookup"><span data-stu-id="9cb6b-168">The key identifier.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RequestorEncryptingCredentials">
      <MemberSignature Language="C#" Value="protected System.IdentityModel.Tokens.EncryptingCredentials RequestorEncryptingCredentials { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IdentityModel.Tokens.EncryptingCredentials RequestorEncryptingCredentials" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SymmetricProofDescriptor.RequestorEncryptingCredentials" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property RequestorEncryptingCredentials As EncryptingCredentials" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::IdentityModel::Tokens::EncryptingCredentials ^ RequestorEncryptingCredentials { System::IdentityModel::Tokens::EncryptingCredentials ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RequestorEncryptingCredentials : System.IdentityModel.Tokens.EncryptingCredentials" Usage="System.IdentityModel.Tokens.SymmetricProofDescriptor.RequestorEncryptingCredentials" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.EncryptingCredentials</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9cb6b-169">获取请求方的加密凭据可能用于在响应中加密请求的证明标记或平均信息量。</span><span class="sxs-lookup"><span data-stu-id="9cb6b-169">Gets the requestor's encrypting credentials, which may be used to encrypt the requested proof token or the entropy in the response.</span></span></summary>
        <value><span data-ttu-id="9cb6b-170">请求者的加密凭据。</span><span class="sxs-lookup"><span data-stu-id="9cb6b-170">The requestor's encrypting credentials.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TargetEncryptingCredentials">
      <MemberSignature Language="C#" Value="protected System.IdentityModel.Tokens.EncryptingCredentials TargetEncryptingCredentials { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IdentityModel.Tokens.EncryptingCredentials TargetEncryptingCredentials" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SymmetricProofDescriptor.TargetEncryptingCredentials" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property TargetEncryptingCredentials As EncryptingCredentials" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::IdentityModel::Tokens::EncryptingCredentials ^ TargetEncryptingCredentials { System::IdentityModel::Tokens::EncryptingCredentials ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TargetEncryptingCredentials : System.IdentityModel.Tokens.EncryptingCredentials" Usage="System.IdentityModel.Tokens.SymmetricProofDescriptor.TargetEncryptingCredentials" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.EncryptingCredentials</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9cb6b-171">获取依赖方的加密凭据可能用于在响应中加密请求的安全性。</span><span class="sxs-lookup"><span data-stu-id="9cb6b-171">Gets the relying party encrypting credentials, which may be used to encrypt the requested security token in the response.</span></span></summary>
        <value><span data-ttu-id="9cb6b-172">依赖的一方的加密凭据。</span><span class="sxs-lookup"><span data-stu-id="9cb6b-172">The relying party encrypting credentials.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
