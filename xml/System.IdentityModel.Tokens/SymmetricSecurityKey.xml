<Type Name="SymmetricSecurityKey" FullName="System.IdentityModel.Tokens.SymmetricSecurityKey">
  <Metadata><Meta Name="ms.openlocfilehash" Value="65b168c7c3e9cf27169a69f539a97e2993e02bfb" /><Meta Name="ms.sourcegitcommit" Value="f828282420515ef705e09bbdb6c22116df98b5e3" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="82478296" /></Metadata><TypeSignature Language="C#" Value="public abstract class SymmetricSecurityKey : System.IdentityModel.Tokens.SecurityKey" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit SymmetricSecurityKey extends System.IdentityModel.Tokens.SecurityKey" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.Tokens.SymmetricSecurityKey" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class SymmetricSecurityKey&#xA;Inherits SecurityKey" />
  <TypeSignature Language="C++ CLI" Value="public ref class SymmetricSecurityKey abstract : System::IdentityModel::Tokens::SecurityKey" />
  <TypeSignature Language="F#" Value="type SymmetricSecurityKey = class&#xA;    inherit SecurityKey" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
    <AssemblyVersion>4.7.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.IdentityModel.Tokens.SecurityKey</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="b0362-101">表示使用对称算法生成的所有密钥的抽象基类。</span><span class="sxs-lookup"><span data-stu-id="b0362-101">Represents the abstract base class for all keys that are generated using symmetric algorithms.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0362-102">通常，该类由基础结构用来使用对称密钥转换 XML。</span><span class="sxs-lookup"><span data-stu-id="b0362-102">Typically, this class is used by the infrastructure to transform XML using a symmetric key.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SymmetricSecurityKey ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SymmetricSecurityKey.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; SymmetricSecurityKey();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b0362-103">初始化 <see cref="T:System.IdentityModel.Tokens.SymmetricSecurityKey" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="b0362-103">Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.SymmetricSecurityKey" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateDerivedKey">
      <MemberSignature Language="C#" Value="public abstract byte[] GenerateDerivedKey (string algorithm, byte[] label, byte[] nonce, int derivedKeyLength, int offset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance unsigned int8[] GenerateDerivedKey(string algorithm, unsigned int8[] label, unsigned int8[] nonce, int32 derivedKeyLength, int32 offset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SymmetricSecurityKey.GenerateDerivedKey(System.String,System.Byte[],System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GenerateDerivedKey (algorithm As String, label As Byte(), nonce As Byte(), derivedKeyLength As Integer, offset As Integer) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract cli::array &lt;System::Byte&gt; ^ GenerateDerivedKey(System::String ^ algorithm, cli::array &lt;System::Byte&gt; ^ label, cli::array &lt;System::Byte&gt; ^ nonce, int derivedKeyLength, int offset);" />
      <MemberSignature Language="F#" Value="abstract member GenerateDerivedKey : string * byte[] * byte[] * int * int -&gt; byte[]" Usage="symmetricSecurityKey.GenerateDerivedKey (algorithm, label, nonce, derivedKeyLength, offset)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="System.String" Index="0" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="label" Type="System.Byte[]" Index="1" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="nonce" Type="System.Byte[]" Index="2" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="derivedKeyLength" Type="System.Int32" Index="3" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="offset" Type="System.Int32" Index="4" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="algorithm"><span data-ttu-id="b0362-104">一个 URI，表示用于生成派生密钥的加密算法。</span><span class="sxs-lookup"><span data-stu-id="b0362-104">A URI that represents the cryptographic algorithm to use to generate the derived key.</span></span></param>
        <param name="label"><span data-ttu-id="b0362-105">一个 <see cref="T:System.Byte" /> 数组，它包含加密算法的标签参数。</span><span class="sxs-lookup"><span data-stu-id="b0362-105">An array of <see cref="T:System.Byte" /> that contains the label parameter for the cryptographic algorithm.</span></span></param>
        <param name="nonce"><span data-ttu-id="b0362-106">一个 <see cref="T:System.Byte" /> 数组，它包含用于创建派生密钥的 Nonce。</span><span class="sxs-lookup"><span data-stu-id="b0362-106">An array of <see cref="T:System.Byte" /> that contains the nonce that is used to create a derived key.</span></span></param>
        <param name="derivedKeyLength"><span data-ttu-id="b0362-107">派生密钥的大小。</span><span class="sxs-lookup"><span data-stu-id="b0362-107">The size of the derived key.</span></span></param>
        <param name="offset"><span data-ttu-id="b0362-108">派生密钥在从此方法返回的字节数组中的位置。</span><span class="sxs-lookup"><span data-stu-id="b0362-108">The position at which the derived key is located in the byte array that is returned from this method.</span></span></param>
        <summary><span data-ttu-id="b0362-109">在派生类中重写时，使用指定的加密算法和参数生成当前密钥的派生密钥。</span><span class="sxs-lookup"><span data-stu-id="b0362-109">When overridden in a derived class, generates a derived key using the specified cryptographic algorithm and parameters for the current key.</span></span></summary>
        <returns><span data-ttu-id="b0362-110">包含派生密钥的 <see cref="T:System.Byte" /> 数组。</span><span class="sxs-lookup"><span data-stu-id="b0362-110">An array of <see cref="T:System.Byte" /> that contains the derived key.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0362-111">若要将 P-SHA1 指定为加密算法，请使用 <xref:System.IdentityModel.Tokens.SecurityAlgorithms.Psha1KeyDerivation> 字段。</span><span class="sxs-lookup"><span data-stu-id="b0362-111">To specify P-SHA1 as the cryptographic algorithm, use the <xref:System.IdentityModel.Tokens.SecurityAlgorithms.Psha1KeyDerivation> field.</span></span>  

 <span data-ttu-id="b0362-112">由于 SHA1 出现冲突问题，Microsoft 建议使用基于 SHA256 或更好的安全模型。</span><span class="sxs-lookup"><span data-stu-id="b0362-112">Due to collision problems with SHA1, Microsoft recommends a security model based on SHA256 or better.</span></span>
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDecryptionTransform">
      <MemberSignature Language="C#" Value="public abstract System.Security.Cryptography.ICryptoTransform GetDecryptionTransform (string algorithm, byte[] iv);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Security.Cryptography.ICryptoTransform GetDecryptionTransform(string algorithm, unsigned int8[] iv) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SymmetricSecurityKey.GetDecryptionTransform(System.String,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetDecryptionTransform (algorithm As String, iv As Byte()) As ICryptoTransform" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Security::Cryptography::ICryptoTransform ^ GetDecryptionTransform(System::String ^ algorithm, cli::array &lt;System::Byte&gt; ^ iv);" />
      <MemberSignature Language="F#" Value="abstract member GetDecryptionTransform : string * byte[] -&gt; System.Security.Cryptography.ICryptoTransform" Usage="symmetricSecurityKey.GetDecryptionTransform (algorithm, iv)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.ICryptoTransform</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="System.String" Index="0" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="iv" Type="System.Byte[]" Index="1" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="algorithm"><span data-ttu-id="b0362-113">一种对密码文本（例如加密的 XML）进行解密的加密算法。</span><span class="sxs-lookup"><span data-stu-id="b0362-113">A cryptographic algorithm that decrypts cipher text, such as encrypted XML.</span></span></param>
        <param name="iv"><span data-ttu-id="b0362-114">一个 <see cref="T:System.Byte" /> 数组，它包含指定算法的初始化向量 (<see langword="IV" />)。</span><span class="sxs-lookup"><span data-stu-id="b0362-114">An array of <see cref="T:System.Byte" /> that contains the initialization vector (<see langword="IV" />) for the specified algorithm.</span></span></param>
        <summary><span data-ttu-id="b0362-115">在派生类中重写时，获取一个使用指定的加密算法解密密码文本的转换。</span><span class="sxs-lookup"><span data-stu-id="b0362-115">When overridden in a derived class, gets a transform that decrypts cipher text using the specified cryptographic algorithm.</span></span></summary>
        <returns><span data-ttu-id="b0362-116">一个表示解密转换的 <see cref="T:System.Security.Cryptography.ICryptoTransform" />。</span><span class="sxs-lookup"><span data-stu-id="b0362-116">An <see cref="T:System.Security.Cryptography.ICryptoTransform" /> that represents the decryption transform.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0362-117">使用 <xref:System.IdentityModel.Tokens.SecurityAlgorithms> 类中表示解密算法的字段来指定算法。</span><span class="sxs-lookup"><span data-stu-id="b0362-117">Use the fields that represent decryption algorithms in the <xref:System.IdentityModel.Tokens.SecurityAlgorithms> class to specify the algorithm.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEncryptionTransform">
      <MemberSignature Language="C#" Value="public abstract System.Security.Cryptography.ICryptoTransform GetEncryptionTransform (string algorithm, byte[] iv);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Security.Cryptography.ICryptoTransform GetEncryptionTransform(string algorithm, unsigned int8[] iv) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SymmetricSecurityKey.GetEncryptionTransform(System.String,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetEncryptionTransform (algorithm As String, iv As Byte()) As ICryptoTransform" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Security::Cryptography::ICryptoTransform ^ GetEncryptionTransform(System::String ^ algorithm, cli::array &lt;System::Byte&gt; ^ iv);" />
      <MemberSignature Language="F#" Value="abstract member GetEncryptionTransform : string * byte[] -&gt; System.Security.Cryptography.ICryptoTransform" Usage="symmetricSecurityKey.GetEncryptionTransform (algorithm, iv)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.ICryptoTransform</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="System.String" Index="0" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="iv" Type="System.Byte[]" Index="1" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="algorithm"><span data-ttu-id="b0362-118">一个对 XML 进行加密的加密算法。</span><span class="sxs-lookup"><span data-stu-id="b0362-118">A cryptographic algorithm that encrypts XML.</span></span></param>
        <param name="iv"><span data-ttu-id="b0362-119">一个 <see cref="T:System.Byte" /> 数组，它包含指定算法的初始化向量 (<see langword="IV" />)。</span><span class="sxs-lookup"><span data-stu-id="b0362-119">An array of <see cref="T:System.Byte" /> that contains the initialization vector (<see langword="IV" />) for the specified algorithm.</span></span></param>
        <summary><span data-ttu-id="b0362-120">在派生类中重写时，获取一个使用指定的加密算法加密 XML 的转换。</span><span class="sxs-lookup"><span data-stu-id="b0362-120">When overridden in a derived class, gets a transform that encrypts XML using the specified cryptographic algorithm.</span></span></summary>
        <returns><span data-ttu-id="b0362-121">一个表示加密转换的 <see cref="T:System.Security.Cryptography.ICryptoTransform" />。</span><span class="sxs-lookup"><span data-stu-id="b0362-121">An <see cref="T:System.Security.Cryptography.ICryptoTransform" /> that represents the encryption transform.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0362-122">使用 <xref:System.IdentityModel.Tokens.SecurityAlgorithms> 类中表示解密算法的字段来指定算法。</span><span class="sxs-lookup"><span data-stu-id="b0362-122">Use the fields that represent decryption algorithms in the <xref:System.IdentityModel.Tokens.SecurityAlgorithms> class to specify the algorithm.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIVSize">
      <MemberSignature Language="C#" Value="public abstract int GetIVSize (string algorithm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetIVSize(string algorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SymmetricSecurityKey.GetIVSize(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetIVSize (algorithm As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract int GetIVSize(System::String ^ algorithm);" />
      <MemberSignature Language="F#" Value="abstract member GetIVSize : string -&gt; int" Usage="symmetricSecurityKey.GetIVSize algorithm" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="System.String" Index="0" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="algorithm"><span data-ttu-id="b0362-123">用于获取初始化向量 (<see langword="IV" />) 的大小的加密算法。</span><span class="sxs-lookup"><span data-stu-id="b0362-123">The cryptographic algorithm to get the size of the initialization vector (<see langword="IV" />).</span></span></param>
        <summary><span data-ttu-id="b0362-124">在派生类中重写时，获取指定的加密算法所需的初始化向量 (<see langword="IV" />) 的大小（以位为单位）。</span><span class="sxs-lookup"><span data-stu-id="b0362-124">When overridden in a derived class, gets the size, in bits, of the initialization vector (<see langword="IV" />) that is required for the specified cryptographic algorithm.</span></span></summary>
        <returns><span data-ttu-id="b0362-125"><see langword="IV" /> 参数中指定的加密算法所需的初始化向量 (<paramref name="algorithm" />) 的大小（以位为单位）。</span><span class="sxs-lookup"><span data-stu-id="b0362-125">The size, in bits, of the initialization vector (<see langword="IV" />) that is required for the cryptographic algorithm specified in the <paramref name="algorithm" /> parameter.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetKeyedHashAlgorithm">
      <MemberSignature Language="C#" Value="public abstract System.Security.Cryptography.KeyedHashAlgorithm GetKeyedHashAlgorithm (string algorithm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Security.Cryptography.KeyedHashAlgorithm GetKeyedHashAlgorithm(string algorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SymmetricSecurityKey.GetKeyedHashAlgorithm(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetKeyedHashAlgorithm (algorithm As String) As KeyedHashAlgorithm" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Security::Cryptography::KeyedHashAlgorithm ^ GetKeyedHashAlgorithm(System::String ^ algorithm);" />
      <MemberSignature Language="F#" Value="abstract member GetKeyedHashAlgorithm : string -&gt; System.Security.Cryptography.KeyedHashAlgorithm" Usage="symmetricSecurityKey.GetKeyedHashAlgorithm algorithm" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.KeyedHashAlgorithm</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="System.String" Index="0" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="algorithm"><span data-ttu-id="b0362-126">要获取其实例的加密哈希算法。</span><span class="sxs-lookup"><span data-stu-id="b0362-126">The keyed hash algorithm to get an instance of.</span></span></param>
        <summary><span data-ttu-id="b0362-127">在派生类中重写时，获取指定的加密哈希算法的实例。</span><span class="sxs-lookup"><span data-stu-id="b0362-127">When overridden in a derived class, gets an instance of the specified keyed hash algorithm.</span></span></summary>
        <returns><span data-ttu-id="b0362-128">一个表示加密哈希算法的 <see cref="T:System.Security.Cryptography.KeyedHashAlgorithm" />。</span><span class="sxs-lookup"><span data-stu-id="b0362-128">A <see cref="T:System.Security.Cryptography.KeyedHashAlgorithm" /> that represents the keyed hash algorithm.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0362-129">使用 <xref:System.IdentityModel.Tokens.SecurityAlgorithms> 类中表示加密哈希算法的字段来指定算法。</span><span class="sxs-lookup"><span data-stu-id="b0362-129">Use the fields that represent keyed hash algorithms in the <xref:System.IdentityModel.Tokens.SecurityAlgorithms> class to specify the algorithm.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSymmetricAlgorithm">
      <MemberSignature Language="C#" Value="public abstract System.Security.Cryptography.SymmetricAlgorithm GetSymmetricAlgorithm (string algorithm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Security.Cryptography.SymmetricAlgorithm GetSymmetricAlgorithm(string algorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SymmetricSecurityKey.GetSymmetricAlgorithm(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetSymmetricAlgorithm (algorithm As String) As SymmetricAlgorithm" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Security::Cryptography::SymmetricAlgorithm ^ GetSymmetricAlgorithm(System::String ^ algorithm);" />
      <MemberSignature Language="F#" Value="abstract member GetSymmetricAlgorithm : string -&gt; System.Security.Cryptography.SymmetricAlgorithm" Usage="symmetricSecurityKey.GetSymmetricAlgorithm algorithm" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.SymmetricAlgorithm</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="algorithm"><span data-ttu-id="b0362-130">要获取其实例的对称算法。</span><span class="sxs-lookup"><span data-stu-id="b0362-130">The symmetric algorithm to get an instance of.</span></span></param>
        <summary><span data-ttu-id="b0362-131">在派生类中重写时，获取指定的对称算法的实例。</span><span class="sxs-lookup"><span data-stu-id="b0362-131">When overridden in a derived class, gets an instance of the specified symmetric algorithm.</span></span></summary>
        <returns><span data-ttu-id="b0362-132">一个表示对称算法的 <see cref="T:System.Security.Cryptography.SymmetricAlgorithm" />。</span><span class="sxs-lookup"><span data-stu-id="b0362-132">A <see cref="T:System.Security.Cryptography.SymmetricAlgorithm" /> that represents the symmetric algorithm.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0362-133">使用 <xref:System.IdentityModel.Tokens.SecurityAlgorithms> 类中表示对称算法的字段来指定算法。</span><span class="sxs-lookup"><span data-stu-id="b0362-133">Use the fields that represent symmetric algorithms in the <xref:System.IdentityModel.Tokens.SecurityAlgorithms> class to specify the algorithm.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSymmetricKey">
      <MemberSignature Language="C#" Value="public abstract byte[] GetSymmetricKey ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance unsigned int8[] GetSymmetricKey() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SymmetricSecurityKey.GetSymmetricKey" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetSymmetricKey () As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract cli::array &lt;System::Byte&gt; ^ GetSymmetricKey();" />
      <MemberSignature Language="F#" Value="abstract member GetSymmetricKey : unit -&gt; byte[]" Usage="symmetricSecurityKey.GetSymmetricKey " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b0362-134">在派生类中重写时，获取表示对称密钥的字节。</span><span class="sxs-lookup"><span data-stu-id="b0362-134">When overridden in a derived class, gets the bytes that represent the symmetric key.</span></span></summary>
        <returns><span data-ttu-id="b0362-135">包含对称密钥的 <see cref="T:System.Byte" /> 数组。</span><span class="sxs-lookup"><span data-stu-id="b0362-135">An array of <see cref="T:System.Byte" /> that contains the symmetric key.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
