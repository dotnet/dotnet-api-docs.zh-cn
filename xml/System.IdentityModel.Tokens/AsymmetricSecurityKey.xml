<Type Name="AsymmetricSecurityKey" FullName="System.IdentityModel.Tokens.AsymmetricSecurityKey">
  <Metadata><Meta Name="ms.openlocfilehash" Value="439247c4f112202748c3ec9b323894d573029562" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="70653499" /></Metadata><TypeSignature Language="C#" Value="public abstract class AsymmetricSecurityKey : System.IdentityModel.Tokens.SecurityKey" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit AsymmetricSecurityKey extends System.IdentityModel.Tokens.SecurityKey" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.Tokens.AsymmetricSecurityKey" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class AsymmetricSecurityKey&#xA;Inherits SecurityKey" />
  <TypeSignature Language="C++ CLI" Value="public ref class AsymmetricSecurityKey abstract : System::IdentityModel::Tokens::SecurityKey" />
  <TypeSignature Language="F#" Value="type AsymmetricSecurityKey = class&#xA;    inherit SecurityKey" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.IdentityModel.Tokens.SecurityKey</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="98a98-101">非对称密钥的基类。</span><span class="sxs-lookup"><span data-stu-id="98a98-101">Base class for asymmetric keys.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98a98-102">当 Windows Communication Foundation 在部分信任环境下运行时，不能使用此类。</span><span class="sxs-lookup"><span data-stu-id="98a98-102">You cannot use this class when Windows Communication Foundation is running under partial trust.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected AsymmetricSecurityKey ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.AsymmetricSecurityKey.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; AsymmetricSecurityKey();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="98a98-103">初始化 <see cref="T:System.IdentityModel.Tokens.AsymmetricSecurityKey" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="98a98-103">Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.AsymmetricSecurityKey" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAsymmetricAlgorithm">
      <MemberSignature Language="C#" Value="public abstract System.Security.Cryptography.AsymmetricAlgorithm GetAsymmetricAlgorithm (string algorithm, bool privateKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Security.Cryptography.AsymmetricAlgorithm GetAsymmetricAlgorithm(string algorithm, bool privateKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.AsymmetricSecurityKey.GetAsymmetricAlgorithm(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetAsymmetricAlgorithm (algorithm As String, privateKey As Boolean) As AsymmetricAlgorithm" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Security::Cryptography::AsymmetricAlgorithm ^ GetAsymmetricAlgorithm(System::String ^ algorithm, bool privateKey);" />
      <MemberSignature Language="F#" Value="abstract member GetAsymmetricAlgorithm : string * bool -&gt; System.Security.Cryptography.AsymmetricAlgorithm" Usage="asymmetricSecurityKey.GetAsymmetricAlgorithm (algorithm, privateKey)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.AsymmetricAlgorithm</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="System.String" />
        <Parameter Name="privateKey" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="algorithm"><span data-ttu-id="98a98-104">要创建的非对称算法。</span><span class="sxs-lookup"><span data-stu-id="98a98-104">The asymmetric algorithm to create.</span></span></param>
        <param name="privateKey"><span data-ttu-id="98a98-105">如果需要使用私钥来创建算法，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="98a98-105"><see langword="true" /> when a private key is required to create the algorithm; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="98a98-106">在派生类中重写时，获取指定的非对称加密算法。</span><span class="sxs-lookup"><span data-stu-id="98a98-106">When overridden in a derived class, gets the specified asymmetric cryptographic algorithm.</span></span></summary>
        <returns><span data-ttu-id="98a98-107">一个 <see cref="T:System.Security.Cryptography.AsymmetricAlgorithm" />，表示指定的非对称加密算法。</span><span class="sxs-lookup"><span data-stu-id="98a98-107">An <see cref="T:System.Security.Cryptography.AsymmetricAlgorithm" /> that represents the specified asymmetric cryptographic algorithm.</span></span>  
  
<span data-ttu-id="98a98-108">通常将 <see langword="true" /> 传递到 <paramref name="privateKey" /> 参数中，因为解密通常需要使用私钥。</span><span class="sxs-lookup"><span data-stu-id="98a98-108">Typically, <see langword="true" /> is passed into the <paramref name="privateKey" /> parameter, as a private key is typically required for decryption.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98a98-109">使用 <xref:System.IdentityModel.Tokens.SecurityAlgorithms> 类的静态字段指定算法。</span><span class="sxs-lookup"><span data-stu-id="98a98-109">Use the static fields of the <xref:System.IdentityModel.Tokens.SecurityAlgorithms> class to specify the algorithm.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashAlgorithmForSignature">
      <MemberSignature Language="C#" Value="public abstract System.Security.Cryptography.HashAlgorithm GetHashAlgorithmForSignature (string algorithm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Security.Cryptography.HashAlgorithm GetHashAlgorithmForSignature(string algorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.AsymmetricSecurityKey.GetHashAlgorithmForSignature(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetHashAlgorithmForSignature (algorithm As String) As HashAlgorithm" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Security::Cryptography::HashAlgorithm ^ GetHashAlgorithmForSignature(System::String ^ algorithm);" />
      <MemberSignature Language="F#" Value="abstract member GetHashAlgorithmForSignature : string -&gt; System.Security.Cryptography.HashAlgorithm" Usage="asymmetricSecurityKey.GetHashAlgorithmForSignature algorithm" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.HashAlgorithm</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="algorithm"><span data-ttu-id="98a98-110">哈希算法。</span><span class="sxs-lookup"><span data-stu-id="98a98-110">The hash algorithm.</span></span></param>
        <summary><span data-ttu-id="98a98-111">在派生类中重写时，获取一个用于生成数字签名的哈希值的加密算法。</span><span class="sxs-lookup"><span data-stu-id="98a98-111">When overridden in a derived class, gets a cryptographic algorithm that generates a hash for a digital signature.</span></span></summary>
        <returns><span data-ttu-id="98a98-112">一个 <see cref="T:System.Security.Cryptography.HashAlgorithm" />，它生成数字签名的哈希值。</span><span class="sxs-lookup"><span data-stu-id="98a98-112">A <see cref="T:System.Security.Cryptography.HashAlgorithm" /> that generates hashes for digital signatures.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98a98-113">使用 <xref:System.IdentityModel.Tokens.SecurityAlgorithms> 类的静态字段指定算法。</span><span class="sxs-lookup"><span data-stu-id="98a98-113">Use the static fields of the <xref:System.IdentityModel.Tokens.SecurityAlgorithms> class to specify the algorithm.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSignatureDeformatter">
      <MemberSignature Language="C#" Value="public abstract System.Security.Cryptography.AsymmetricSignatureDeformatter GetSignatureDeformatter (string algorithm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Security.Cryptography.AsymmetricSignatureDeformatter GetSignatureDeformatter(string algorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.AsymmetricSecurityKey.GetSignatureDeformatter(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetSignatureDeformatter (algorithm As String) As AsymmetricSignatureDeformatter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Security::Cryptography::AsymmetricSignatureDeformatter ^ GetSignatureDeformatter(System::String ^ algorithm);" />
      <MemberSignature Language="F#" Value="abstract member GetSignatureDeformatter : string -&gt; System.Security.Cryptography.AsymmetricSignatureDeformatter" Usage="asymmetricSecurityKey.GetSignatureDeformatter algorithm" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.AsymmetricSignatureDeformatter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="algorithm"><span data-ttu-id="98a98-114">数字签名的反格式化程序算法。</span><span class="sxs-lookup"><span data-stu-id="98a98-114">The deformatter algorithm for the digital signature.</span></span></param>
        <summary><span data-ttu-id="98a98-115">在派生类中重写时，获取数字签名的反格式化程序算法。</span><span class="sxs-lookup"><span data-stu-id="98a98-115">When overridden in a derived class, gets the deformatter algorithm for the digital signature.</span></span></summary>
        <returns><span data-ttu-id="98a98-116">一个 <see cref="T:System.Security.Cryptography.AsymmetricSignatureDeformatter" />，它表示数字签名的反格式化程序算法。</span><span class="sxs-lookup"><span data-stu-id="98a98-116">An <see cref="T:System.Security.Cryptography.AsymmetricSignatureDeformatter" /> that represents the deformatter algorithm for the digital signature.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98a98-117">签名反格式化程序通常用于验证数字签名。</span><span class="sxs-lookup"><span data-stu-id="98a98-117">A signature deformatter is typically used to verify a digital signature.</span></span>  
  
 <span data-ttu-id="98a98-118">使用 <xref:System.IdentityModel.Tokens.SecurityAlgorithms> 类的静态字段指定算法。</span><span class="sxs-lookup"><span data-stu-id="98a98-118">Use the static fields of the <xref:System.IdentityModel.Tokens.SecurityAlgorithms> class to specify the algorithm.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSignatureFormatter">
      <MemberSignature Language="C#" Value="public abstract System.Security.Cryptography.AsymmetricSignatureFormatter GetSignatureFormatter (string algorithm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Security.Cryptography.AsymmetricSignatureFormatter GetSignatureFormatter(string algorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.AsymmetricSecurityKey.GetSignatureFormatter(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetSignatureFormatter (algorithm As String) As AsymmetricSignatureFormatter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Security::Cryptography::AsymmetricSignatureFormatter ^ GetSignatureFormatter(System::String ^ algorithm);" />
      <MemberSignature Language="F#" Value="abstract member GetSignatureFormatter : string -&gt; System.Security.Cryptography.AsymmetricSignatureFormatter" Usage="asymmetricSecurityKey.GetSignatureFormatter algorithm" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.AsymmetricSignatureFormatter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="algorithm"><span data-ttu-id="98a98-119">数字签名的格式化程序算法。</span><span class="sxs-lookup"><span data-stu-id="98a98-119">The formatter algorithm for the digital signature.</span></span></param>
        <summary><span data-ttu-id="98a98-120">在派生类中重写时，获取数字签名的格式化程序算法。</span><span class="sxs-lookup"><span data-stu-id="98a98-120">When overridden in a derived class, gets the formatter algorithm for the digital signature.</span></span></summary>
        <returns><span data-ttu-id="98a98-121">一个 <see cref="T:System.Security.Cryptography.AsymmetricSignatureFormatter" />，它表示数字签名的格式化程序算法。</span><span class="sxs-lookup"><span data-stu-id="98a98-121">An <see cref="T:System.Security.Cryptography.AsymmetricSignatureFormatter" /> that represents the formatter algorithm for the digital signature.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98a98-122">签名格式化程序通常用于生成数字签名。</span><span class="sxs-lookup"><span data-stu-id="98a98-122">Typically, a signature formatter is used to generate a digital signature.</span></span>  
  
 <span data-ttu-id="98a98-123">使用 <xref:System.IdentityModel.Tokens.SecurityAlgorithms> 类的静态字段指定算法。</span><span class="sxs-lookup"><span data-stu-id="98a98-123">Use the static fields of the <xref:System.IdentityModel.Tokens.SecurityAlgorithms> class to specify the algorithm.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasPrivateKey">
      <MemberSignature Language="C#" Value="public abstract bool HasPrivateKey ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool HasPrivateKey() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.AsymmetricSecurityKey.HasPrivateKey" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function HasPrivateKey () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool HasPrivateKey();" />
      <MemberSignature Language="F#" Value="abstract member HasPrivateKey : unit -&gt; bool" Usage="asymmetricSecurityKey.HasPrivateKey " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="98a98-124">在派生类中重写时，获取一个值，指示私钥是否可用。</span><span class="sxs-lookup"><span data-stu-id="98a98-124">When overridden in a derived class, gets a value that indicates whether the private key is available.</span></span></summary>
        <returns><span data-ttu-id="98a98-125">如果私钥可用，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="98a98-125"><see langword="true" /> when the private key is available; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
