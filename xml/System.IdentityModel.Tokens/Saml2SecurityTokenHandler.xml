<Type Name="Saml2SecurityTokenHandler" FullName="System.IdentityModel.Tokens.Saml2SecurityTokenHandler">
  <Metadata><Meta Name="ms.openlocfilehash" Value="dcd299ecbafab7b3f0fda8e0581f81055d85d377" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89916319" /></Metadata><TypeSignature Language="C#" Value="public class Saml2SecurityTokenHandler : System.IdentityModel.Tokens.SecurityTokenHandler" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Saml2SecurityTokenHandler extends System.IdentityModel.Tokens.SecurityTokenHandler" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.Tokens.Saml2SecurityTokenHandler" />
  <TypeSignature Language="VB.NET" Value="Public Class Saml2SecurityTokenHandler&#xA;Inherits SecurityTokenHandler" />
  <TypeSignature Language="C++ CLI" Value="public ref class Saml2SecurityTokenHandler : System::IdentityModel::Tokens::SecurityTokenHandler" />
  <TypeSignature Language="F#" Value="type Saml2SecurityTokenHandler = class&#xA;    inherit SecurityTokenHandler" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.IdentityModel.Tokens.SecurityTokenHandler</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="81a7e-101">表示安全标记处理程序，其可从 SAML 2.0 Assertions 创建安全标记。</span><span class="sxs-lookup"><span data-stu-id="81a7e-101">Represents a security token handler that creates security tokens from SAML 2.0 Assertions.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="81a7e-102"><xref:System.IdentityModel.Tokens.Saml2SecurityTokenHandler>类将 SAML 2.0 断言支持的安全令牌序列化和反序列化为 <xref:System.IdentityModel.Tokens.Saml2SecurityToken> 对象。</span><span class="sxs-lookup"><span data-stu-id="81a7e-102">The <xref:System.IdentityModel.Tokens.Saml2SecurityTokenHandler> class serializes and deserializes security tokens backed by SAML 2.0 Assertions into <xref:System.IdentityModel.Tokens.Saml2SecurityToken> objects.</span></span> <span data-ttu-id="81a7e-103">安全令牌处理程序负责创建、读取、写入和验证令牌。</span><span class="sxs-lookup"><span data-stu-id="81a7e-103">Security token handlers are responsible for creating, reading, writing, and validating tokens.</span></span>  
  
 <span data-ttu-id="81a7e-104">可以通过将类的实例添加 <xref:System.IdentityModel.Tokens.Saml2SecurityTokenHandler> 到为 <xref:System.IdentityModel.Tokens.SecurityTokenHandlerCollection> 服务) 或应用程序 (配置的对象，将 SECURITY TOKEN SERVICE (STS) 或信赖方 (RP) 应用程序配置为处理支持 SAML 2.0 断言的安全令牌。</span><span class="sxs-lookup"><span data-stu-id="81a7e-104">You can configure a security token service (STS) or relying party (RP) application to process SAML 2.0 Assertion-backed security tokens by adding an instance of the <xref:System.IdentityModel.Tokens.Saml2SecurityTokenHandler> class to the <xref:System.IdentityModel.Tokens.SecurityTokenHandlerCollection> object configured for the service (or application).</span></span> <span data-ttu-id="81a7e-105">可以通过编程方式或在配置文件中完成此操作。</span><span class="sxs-lookup"><span data-stu-id="81a7e-105">This can be done either programmatically or in the configuration file.</span></span> <span data-ttu-id="81a7e-106">在将集合的 <xref:System.IdentityModel.Tokens.SecurityTokenHandlerCollection.Configuration%2A> 属性添加到集合时，该处理程序本身是从为集合指定的配置中配置的。</span><span class="sxs-lookup"><span data-stu-id="81a7e-106">The handler itself is configured from the configuration specified for the collection through the collection's <xref:System.IdentityModel.Tokens.SecurityTokenHandlerCollection.Configuration%2A> property when it is added to the collection.</span></span> <span data-ttu-id="81a7e-107">尽管可以通过设置处理程序的属性来单独配置处理程序 <xref:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration%2A> ，但这通常是不必要的; 但是，如果必须单独配置处理程序，则应在将处理程序添加到集合后设置属性。</span><span class="sxs-lookup"><span data-stu-id="81a7e-107">While it is possible to configure the handler individually by setting its <xref:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration%2A> property, this is not normally necessary; however, if the handler must be configured individually, the property should be set after the handler is added to the collection.</span></span>  
  
 <span data-ttu-id="81a7e-108">在许多情况下， <xref:System.IdentityModel.Tokens.Saml2SecurityTokenHandler> 类可按原样使用; 但是，该类通过其公开的方法提供了许多扩展点。</span><span class="sxs-lookup"><span data-stu-id="81a7e-108">For many scenarios, the <xref:System.IdentityModel.Tokens.Saml2SecurityTokenHandler> class can be used as-is; however, the class provides many extension points through the methods it exposes.</span></span> <span data-ttu-id="81a7e-109">通过从 <xref:System.IdentityModel.Tokens.Saml2SecurityTokenHandler> 和重写特定方法派生，你可以修改在默认实现中提供的令牌处理的功能，或者可以为扩展添加到在某些自定义方案中可能需要的 SAML 断言规范的处理。</span><span class="sxs-lookup"><span data-stu-id="81a7e-109">By deriving from the <xref:System.IdentityModel.Tokens.Saml2SecurityTokenHandler> and overriding specific methods, you can modify the functionality of the token processing provided in the default implementation, or you can add processing for extensions to the SAML Assertion specification that may be needed in some custom scenarios.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.IdentityModel.Tokens.Saml2SecurityToken" />
    <related type="Article" href="/dotnet/framework/configure-apps/file-schema/windows-identity-foundation/samlsecuritytokenrequirement"><span data-ttu-id="81a7e-110">&lt;samlSecurityTokenRequirement&gt;</span><span class="sxs-lookup"><span data-stu-id="81a7e-110">&lt;samlSecurityTokenRequirement&gt;</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="81a7e-111">初始化 <see cref="T:System.IdentityModel.Tokens.Saml2SecurityTokenHandler" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="81a7e-111">Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.Saml2SecurityTokenHandler" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Saml2SecurityTokenHandler ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Saml2SecurityTokenHandler();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="81a7e-112">使用默认安全标记需求初始化 <see cref="T:System.IdentityModel.Tokens.Saml2SecurityTokenHandler" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="81a7e-112">Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.Saml2SecurityTokenHandler" /> class with default security token requirements.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="81a7e-113"><xref:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.SamlSecurityTokenRequirement%2A>属性设置为 <xref:System.IdentityModel.Tokens.SamlSecurityTokenRequirement> 与无参数构造函数创建的实例。</span><span class="sxs-lookup"><span data-stu-id="81a7e-113">The <xref:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.SamlSecurityTokenRequirement%2A> property is set to an instance of <xref:System.IdentityModel.Tokens.SamlSecurityTokenRequirement> that is crated with the parameterless constructor.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Saml2SecurityTokenHandler (System.IdentityModel.Tokens.SamlSecurityTokenRequirement samlSecurityTokenRequirement);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IdentityModel.Tokens.SamlSecurityTokenRequirement samlSecurityTokenRequirement) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.#ctor(System.IdentityModel.Tokens.SamlSecurityTokenRequirement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (samlSecurityTokenRequirement As SamlSecurityTokenRequirement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Saml2SecurityTokenHandler(System::IdentityModel::Tokens::SamlSecurityTokenRequirement ^ samlSecurityTokenRequirement);" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Tokens.Saml2SecurityTokenHandler : System.IdentityModel.Tokens.SamlSecurityTokenRequirement -&gt; System.IdentityModel.Tokens.Saml2SecurityTokenHandler" Usage="new System.IdentityModel.Tokens.Saml2SecurityTokenHandler samlSecurityTokenRequirement" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="samlSecurityTokenRequirement" Type="System.IdentityModel.Tokens.SamlSecurityTokenRequirement" />
      </Parameters>
      <Docs>
        <param name="samlSecurityTokenRequirement"><span data-ttu-id="81a7e-114">当验证令牌时被这个实例使用的 <see cref="T:System.IdentityModel.Tokens.SamlSecurityTokenRequirement" />。</span><span class="sxs-lookup"><span data-stu-id="81a7e-114">The <see cref="T:System.IdentityModel.Tokens.SamlSecurityTokenRequirement" /> to be used by this instance when validating tokens.</span></span> <span data-ttu-id="81a7e-115">设置 <see cref="P:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.SamlSecurityTokenRequirement" /> 属性。</span><span class="sxs-lookup"><span data-stu-id="81a7e-115">Sets the <see cref="P:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.SamlSecurityTokenRequirement" /> property.</span></span></param>
        <summary><span data-ttu-id="81a7e-116">使用指定的安全标记需求初始化 <see cref="T:System.IdentityModel.Tokens.Saml2SecurityTokenHandler" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="81a7e-116">Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.Saml2SecurityTokenHandler" /> class with the specified security token requirements.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="81a7e-117"><paramref name="samlSecurityTokenRequirement" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="81a7e-117"><paramref name="samlSecurityTokenRequirement" /> is <see langword="null" />.</span></span></exception>
        <related type="Article" href="/dotnet/framework/configure-apps/file-schema/windows-identity-foundation/samlsecuritytokenrequirement"><span data-ttu-id="81a7e-118">&lt;samlSecurityTokenRequirement&gt;</span><span class="sxs-lookup"><span data-stu-id="81a7e-118">&lt;samlSecurityTokenRequirement&gt;</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="AddDelegateToAttributes">
      <MemberSignature Language="C#" Value="protected virtual void AddDelegateToAttributes (System.Security.Claims.ClaimsIdentity subject, System.Collections.Generic.ICollection&lt;System.IdentityModel.Tokens.Saml2Attribute&gt; attributes, System.IdentityModel.Tokens.SecurityTokenDescriptor tokenDescriptor);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void AddDelegateToAttributes(class System.Security.Claims.ClaimsIdentity subject, class System.Collections.Generic.ICollection`1&lt;class System.IdentityModel.Tokens.Saml2Attribute&gt; attributes, class System.IdentityModel.Tokens.SecurityTokenDescriptor tokenDescriptor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.AddDelegateToAttributes(System.Security.Claims.ClaimsIdentity,System.Collections.Generic.ICollection{System.IdentityModel.Tokens.Saml2Attribute},System.IdentityModel.Tokens.SecurityTokenDescriptor)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub AddDelegateToAttributes (subject As ClaimsIdentity, attributes As ICollection(Of Saml2Attribute), tokenDescriptor As SecurityTokenDescriptor)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void AddDelegateToAttributes(System::Security::Claims::ClaimsIdentity ^ subject, System::Collections::Generic::ICollection&lt;System::IdentityModel::Tokens::Saml2Attribute ^&gt; ^ attributes, System::IdentityModel::Tokens::SecurityTokenDescriptor ^ tokenDescriptor);" />
      <MemberSignature Language="F#" Value="abstract member AddDelegateToAttributes : System.Security.Claims.ClaimsIdentity * System.Collections.Generic.ICollection&lt;System.IdentityModel.Tokens.Saml2Attribute&gt; * System.IdentityModel.Tokens.SecurityTokenDescriptor -&gt; unit&#xA;override this.AddDelegateToAttributes : System.Security.Claims.ClaimsIdentity * System.Collections.Generic.ICollection&lt;System.IdentityModel.Tokens.Saml2Attribute&gt; * System.IdentityModel.Tokens.SecurityTokenDescriptor -&gt; unit" Usage="saml2SecurityTokenHandler.AddDelegateToAttributes (subject, attributes, tokenDescriptor)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subject" Type="System.Security.Claims.ClaimsIdentity" />
        <Parameter Name="attributes" Type="System.Collections.Generic.ICollection&lt;System.IdentityModel.Tokens.Saml2Attribute&gt;" />
        <Parameter Name="tokenDescriptor" Type="System.IdentityModel.Tokens.SecurityTokenDescriptor" />
      </Parameters>
      <Docs>
        <param name="subject"><span data-ttu-id="81a7e-119">此 <see cref="T:System.Security.Claims.ClaimsIdentity" /> 对象的委托将序列化到 <see cref="T:System.IdentityModel.Tokens.Saml2Attribute" />。</span><span class="sxs-lookup"><span data-stu-id="81a7e-119">The delegate of this <see cref="T:System.Security.Claims.ClaimsIdentity" /> object will be serialized into a <see cref="T:System.IdentityModel.Tokens.Saml2Attribute" />.</span></span></param>
        <param name="attributes"><span data-ttu-id="81a7e-120"><see cref="T:System.IdentityModel.Tokens.Saml2Attribute" /> 类型的集合。</span><span class="sxs-lookup"><span data-stu-id="81a7e-120">A collection of type <see cref="T:System.IdentityModel.Tokens.Saml2Attribute" />.</span></span></param>
        <param name="tokenDescriptor"><span data-ttu-id="81a7e-121">标记描述符。</span><span class="sxs-lookup"><span data-stu-id="81a7e-121">The token descriptor.</span></span></param>
        <summary><span data-ttu-id="81a7e-122">将所有与该主题相关的委托添加到特性集合中。</span><span class="sxs-lookup"><span data-stu-id="81a7e-122">Adds all of the delegates associated with the subject into the attribute collection.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="81a7e-123"><paramref name="subject" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="81a7e-123"><paramref name="subject" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="81a7e-124">- 或 -</span><span class="sxs-lookup"><span data-stu-id="81a7e-124">-or-</span></span> 
 <span data-ttu-id="81a7e-125"><paramref name="tokenDescriptor" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="81a7e-125"><paramref name="tokenDescriptor" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CanReadKeyIdentifierClause">
      <MemberSignature Language="C#" Value="public override bool CanReadKeyIdentifierClause (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanReadKeyIdentifierClause(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CanReadKeyIdentifierClause(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanReadKeyIdentifierClause (reader As XmlReader) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanReadKeyIdentifierClause(System::Xml::XmlReader ^ reader);" />
      <MemberSignature Language="F#" Value="override this.CanReadKeyIdentifierClause : System.Xml.XmlReader -&gt; bool" Usage="saml2SecurityTokenHandler.CanReadKeyIdentifierClause reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="81a7e-126">在开始元素上指定的 XML 读取器。</span><span class="sxs-lookup"><span data-stu-id="81a7e-126">An XML reader positioned at the start element.</span></span></param>
        <summary><span data-ttu-id="81a7e-127">指示当前 XML 元素是否指向一个可由该事例序列化的密匙标识符子句。</span><span class="sxs-lookup"><span data-stu-id="81a7e-127">Indicates if the current XML element is pointing to a key identifier clause that can be serialized by this instance.</span></span></summary>
        <returns><span data-ttu-id="81a7e-128">如果 <see cref="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadKeyIdentifierClause(System.Xml.XmlReader)" /> 方法可读取元素，则为 <see langword="true" />；否则，为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="81a7e-128"><see langword="true" /> if the <see cref="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadKeyIdentifierClause(System.Xml.XmlReader)" /> method can read the element; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanReadToken">
      <MemberSignature Language="C#" Value="public override bool CanReadToken (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanReadToken(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CanReadToken(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanReadToken (reader As XmlReader) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanReadToken(System::Xml::XmlReader ^ reader);" />
      <MemberSignature Language="F#" Value="override this.CanReadToken : System.Xml.XmlReader -&gt; bool" Usage="saml2SecurityTokenHandler.CanReadToken reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="81a7e-129">在开始元素上指定的 XML 读取器。</span><span class="sxs-lookup"><span data-stu-id="81a7e-129">An XML reader positioned at a start element.</span></span> <span data-ttu-id="81a7e-130">不能将读取器前移。</span><span class="sxs-lookup"><span data-stu-id="81a7e-130">The reader should not be advanced.</span></span></param>
        <summary><span data-ttu-id="81a7e-131">指示当前 XML 元素是否可以读取为实例掌控的类型标志。</span><span class="sxs-lookup"><span data-stu-id="81a7e-131">Indicates whether the current XML element can be read as a token of the type handled by this instance.</span></span></summary>
        <returns><span data-ttu-id="81a7e-132">如果 <see cref="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadToken(System.Xml.XmlReader)" /> 方法可读取元素，则为 <see langword="true" />；否则，为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="81a7e-132"><see langword="true" /> if the <see cref="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadToken(System.Xml.XmlReader)" /> method can read the element; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanValidateToken">
      <MemberSignature Language="C#" Value="public override bool CanValidateToken { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanValidateToken" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CanValidateToken" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanValidateToken As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanValidateToken { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanValidateToken : bool" Usage="System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CanValidateToken" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="81a7e-133">获取指示此处理程序是否能验证类型 <see cref="T:System.IdentityModel.Tokens.Saml2SecurityToken" /> 的标记的值。</span><span class="sxs-lookup"><span data-stu-id="81a7e-133">Gets a value that indicates if this handler can validate tokens of type <see cref="T:System.IdentityModel.Tokens.Saml2SecurityToken" />.</span></span></summary>
        <value><span data-ttu-id="81a7e-134"><see langword="true" />，指示该管理器可以验证类型 <see cref="T:System.IdentityModel.Tokens.Saml2SecurityToken" /> 标记。</span><span class="sxs-lookup"><span data-stu-id="81a7e-134"><see langword="true" />, which indicates that the handler can validate tokens of type <see cref="T:System.IdentityModel.Tokens.Saml2SecurityToken" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="81a7e-135">此方法重写基类方法并始终返回 `true` 。</span><span class="sxs-lookup"><span data-stu-id="81a7e-135">This method overrides the base class method and always returns `true`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanWriteKeyIdentifierClause">
      <MemberSignature Language="C#" Value="public override bool CanWriteKeyIdentifierClause (System.IdentityModel.Tokens.SecurityKeyIdentifierClause securityKeyIdentifierClause);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanWriteKeyIdentifierClause(class System.IdentityModel.Tokens.SecurityKeyIdentifierClause securityKeyIdentifierClause) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CanWriteKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanWriteKeyIdentifierClause (securityKeyIdentifierClause As SecurityKeyIdentifierClause) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanWriteKeyIdentifierClause(System::IdentityModel::Tokens::SecurityKeyIdentifierClause ^ securityKeyIdentifierClause);" />
      <MemberSignature Language="F#" Value="override this.CanWriteKeyIdentifierClause : System.IdentityModel.Tokens.SecurityKeyIdentifierClause -&gt; bool" Usage="saml2SecurityTokenHandler.CanWriteKeyIdentifierClause securityKeyIdentifierClause" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="securityKeyIdentifierClause" Type="System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />
      </Parameters>
      <Docs>
        <param name="securityKeyIdentifierClause"><span data-ttu-id="81a7e-136">要序列化的 <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />。</span><span class="sxs-lookup"><span data-stu-id="81a7e-136">The <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> to be serialized.</span></span></param>
        <summary><span data-ttu-id="81a7e-137">指示指定的密匙标识符子句是否可由该事例序列化。</span><span class="sxs-lookup"><span data-stu-id="81a7e-137">Indicates if the specified key identifier clause can be serialized by this instance.</span></span></summary>
        <returns><span data-ttu-id="81a7e-138">如果可以序列化指定的密钥标识符子句，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="81a7e-138"><see langword="true" /> if the specified key identifier clause can be serialized; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanWriteToken">
      <MemberSignature Language="C#" Value="public override bool CanWriteToken { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanWriteToken" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CanWriteToken" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanWriteToken As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanWriteToken { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanWriteToken : bool" Usage="System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CanWriteToken" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="81a7e-139">获取指示此处理程序能否序列化 <see cref="T:System.IdentityModel.Tokens.Saml2SecurityToken" /> 类型的标记的值。</span><span class="sxs-lookup"><span data-stu-id="81a7e-139">Gets a value that indicates whether this handler can serialize tokens of type <see cref="T:System.IdentityModel.Tokens.Saml2SecurityToken" />.</span></span></summary>
        <value><span data-ttu-id="81a7e-140"><see langword="true" />；指示该管理器可以序列化类型 <see cref="T:System.IdentityModel.Tokens.Saml2SecurityToken" /> 标记。</span><span class="sxs-lookup"><span data-stu-id="81a7e-140"><see langword="true" />; which indicates that the handler can serialize tokens of type <see cref="T:System.IdentityModel.Tokens.Saml2SecurityToken" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="81a7e-141">此方法重写基类方法并始终返回 `true` 。</span><span class="sxs-lookup"><span data-stu-id="81a7e-141">This method overrides the base class method and always returns `true`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CertificateValidator">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Selectors.X509CertificateValidator CertificateValidator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IdentityModel.Selectors.X509CertificateValidator CertificateValidator" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CertificateValidator" />
      <MemberSignature Language="VB.NET" Value="Public Property CertificateValidator As X509CertificateValidator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IdentityModel::Selectors::X509CertificateValidator ^ CertificateValidator { System::IdentityModel::Selectors::X509CertificateValidator ^ get(); void set(System::IdentityModel::Selectors::X509CertificateValidator ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CertificateValidator : System.IdentityModel.Selectors.X509CertificateValidator with get, set" Usage="System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CertificateValidator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Selectors.X509CertificateValidator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="81a7e-142">获取或设置当前实例用于验证 X.509 证书的 X.509 证书验证程序。</span><span class="sxs-lookup"><span data-stu-id="81a7e-142">Gets or sets the X.509 certificate validator that is used by the current instance to validate X.509 certificates.</span></span></summary>
        <value><span data-ttu-id="81a7e-143">一个表示验证程序的 <see cref="T:System.IdentityModel.Selectors.X509CertificateValidator" />。</span><span class="sxs-lookup"><span data-stu-id="81a7e-143">An <see cref="T:System.IdentityModel.Selectors.X509CertificateValidator" /> that represents the validator.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CollectAttributeValues">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.Generic.ICollection&lt;System.IdentityModel.Tokens.Saml2Attribute&gt; CollectAttributeValues (System.Collections.Generic.ICollection&lt;System.IdentityModel.Tokens.Saml2Attribute&gt; attributes);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.Generic.ICollection`1&lt;class System.IdentityModel.Tokens.Saml2Attribute&gt; CollectAttributeValues(class System.Collections.Generic.ICollection`1&lt;class System.IdentityModel.Tokens.Saml2Attribute&gt; attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CollectAttributeValues(System.Collections.Generic.ICollection{System.IdentityModel.Tokens.Saml2Attribute})" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CollectAttributeValues (attributes As ICollection(Of Saml2Attribute)) As ICollection(Of Saml2Attribute)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Collections::Generic::ICollection&lt;System::IdentityModel::Tokens::Saml2Attribute ^&gt; ^ CollectAttributeValues(System::Collections::Generic::ICollection&lt;System::IdentityModel::Tokens::Saml2Attribute ^&gt; ^ attributes);" />
      <MemberSignature Language="F#" Value="abstract member CollectAttributeValues : System.Collections.Generic.ICollection&lt;System.IdentityModel.Tokens.Saml2Attribute&gt; -&gt; System.Collections.Generic.ICollection&lt;System.IdentityModel.Tokens.Saml2Attribute&gt;&#xA;override this.CollectAttributeValues : System.Collections.Generic.ICollection&lt;System.IdentityModel.Tokens.Saml2Attribute&gt; -&gt; System.Collections.Generic.ICollection&lt;System.IdentityModel.Tokens.Saml2Attribute&gt;" Usage="saml2SecurityTokenHandler.CollectAttributeValues attributes" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;System.IdentityModel.Tokens.Saml2Attribute&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributes" Type="System.Collections.Generic.ICollection&lt;System.IdentityModel.Tokens.Saml2Attribute&gt;" />
      </Parameters>
      <Docs>
        <param name="attributes"><span data-ttu-id="81a7e-144">包含从声明中派生的特性的类型 <see cref="T:System.IdentityModel.Tokens.Saml2Attribute" /> 的集合。</span><span class="sxs-lookup"><span data-stu-id="81a7e-144">A collection of type <see cref="T:System.IdentityModel.Tokens.Saml2Attribute" /> that contains the attributes generated from claims.</span></span></param>
        <summary><span data-ttu-id="81a7e-145">使用通常声明类型、声明值类型集合特性，并使用多个值集合颁发者到单个特性。</span><span class="sxs-lookup"><span data-stu-id="81a7e-145">Collects attributes with a common claim type, claim value type, and original issuer into a single attribute with multiple values.</span></span></summary>
        <returns><span data-ttu-id="81a7e-146">包含从输入集合中派生的特性的 <see cref="T:System.IdentityModel.Tokens.Saml2Attribute" /> 的集合。</span><span class="sxs-lookup"><span data-stu-id="81a7e-146">A collection of <see cref="T:System.IdentityModel.Tokens.Saml2Attribute" /> that contains attributes derived from the input collection.</span></span> <span data-ttu-id="81a7e-147">输入集合中的特性不共享声明类型、声明值，或其他属性的颁发者合并为具有输出集合中多个值的一个特性。</span><span class="sxs-lookup"><span data-stu-id="81a7e-147">Attributes in the input collection that share a common claim type, claim value, and original issuer with other attributes are consolidated into a single attribute with multiple values in the output collection.</span></span> <span data-ttu-id="81a7e-148">输入集合中的特性不共享声明类型、声明值，或其他属性的颁发者保持不变的显示在输出集合中。</span><span class="sxs-lookup"><span data-stu-id="81a7e-148">Attributes in the input collection that do not share claim type, claim value, or original issuer with other attributes appear unaltered in the output collection.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateAdvice">
      <MemberSignature Language="C#" Value="protected virtual System.IdentityModel.Tokens.Saml2Advice CreateAdvice (System.IdentityModel.Tokens.SecurityTokenDescriptor tokenDescriptor);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.IdentityModel.Tokens.Saml2Advice CreateAdvice(class System.IdentityModel.Tokens.SecurityTokenDescriptor tokenDescriptor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CreateAdvice(System.IdentityModel.Tokens.SecurityTokenDescriptor)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateAdvice (tokenDescriptor As SecurityTokenDescriptor) As Saml2Advice" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::IdentityModel::Tokens::Saml2Advice ^ CreateAdvice(System::IdentityModel::Tokens::SecurityTokenDescriptor ^ tokenDescriptor);" />
      <MemberSignature Language="F#" Value="abstract member CreateAdvice : System.IdentityModel.Tokens.SecurityTokenDescriptor -&gt; System.IdentityModel.Tokens.Saml2Advice&#xA;override this.CreateAdvice : System.IdentityModel.Tokens.SecurityTokenDescriptor -&gt; System.IdentityModel.Tokens.Saml2Advice" Usage="saml2SecurityTokenHandler.CreateAdvice tokenDescriptor" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.Saml2Advice</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tokenDescriptor" Type="System.IdentityModel.Tokens.SecurityTokenDescriptor" />
      </Parameters>
      <Docs>
        <param name="tokenDescriptor"><span data-ttu-id="81a7e-149">标记描述符。</span><span class="sxs-lookup"><span data-stu-id="81a7e-149">The token descriptor.</span></span></param>
        <summary><span data-ttu-id="81a7e-150">创建断言的 <see cref="T:System.IdentityModel.Tokens.Saml2Advice" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="81a7e-150">Creates a <see cref="T:System.IdentityModel.Tokens.Saml2Advice" /> object for the assertion.</span></span></summary>
        <returns><span data-ttu-id="81a7e-151"><see cref="T:System.IdentityModel.Tokens.Saml2Advice" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="81a7e-151">A <see cref="T:System.IdentityModel.Tokens.Saml2Advice" /> object.</span></span> <span data-ttu-id="81a7e-152">默认值为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="81a7e-152">The default is <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="81a7e-153">默认情况下，此方法返回 `null` 。</span><span class="sxs-lookup"><span data-stu-id="81a7e-153">By default, this method returns `null`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateAttribute">
      <MemberSignature Language="C#" Value="protected virtual System.IdentityModel.Tokens.Saml2Attribute CreateAttribute (System.Security.Claims.Claim claim, System.IdentityModel.Tokens.SecurityTokenDescriptor tokenDescriptor);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.IdentityModel.Tokens.Saml2Attribute CreateAttribute(class System.Security.Claims.Claim claim, class System.IdentityModel.Tokens.SecurityTokenDescriptor tokenDescriptor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CreateAttribute(System.Security.Claims.Claim,System.IdentityModel.Tokens.SecurityTokenDescriptor)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateAttribute (claim As Claim, tokenDescriptor As SecurityTokenDescriptor) As Saml2Attribute" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::IdentityModel::Tokens::Saml2Attribute ^ CreateAttribute(System::Security::Claims::Claim ^ claim, System::IdentityModel::Tokens::SecurityTokenDescriptor ^ tokenDescriptor);" />
      <MemberSignature Language="F#" Value="abstract member CreateAttribute : System.Security.Claims.Claim * System.IdentityModel.Tokens.SecurityTokenDescriptor -&gt; System.IdentityModel.Tokens.Saml2Attribute&#xA;override this.CreateAttribute : System.Security.Claims.Claim * System.IdentityModel.Tokens.SecurityTokenDescriptor -&gt; System.IdentityModel.Tokens.Saml2Attribute" Usage="saml2SecurityTokenHandler.CreateAttribute (claim, tokenDescriptor)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.Saml2Attribute</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="claim" Type="System.Security.Claims.Claim" />
        <Parameter Name="tokenDescriptor" Type="System.IdentityModel.Tokens.SecurityTokenDescriptor" />
      </Parameters>
      <Docs>
        <param name="claim"><span data-ttu-id="81a7e-154">从 <see cref="T:System.Security.Claims.Claim" />生成 SAML “特性”。</span><span class="sxs-lookup"><span data-stu-id="81a7e-154">The <see cref="T:System.Security.Claims.Claim" /> from which to generate the SAML Attribute.</span></span></param>
        <param name="tokenDescriptor"><span data-ttu-id="81a7e-155">标记描述符。</span><span class="sxs-lookup"><span data-stu-id="81a7e-155">The token descriptor.</span></span></param>
        <summary><span data-ttu-id="81a7e-156">从声明中创建一个 <see cref="T:System.IdentityModel.Tokens.Saml2Attribute" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="81a7e-156">Creates a <see cref="T:System.IdentityModel.Tokens.Saml2Attribute" /> object from a claim.</span></span></summary>
        <returns><span data-ttu-id="81a7e-157">包含转换的声明的 <see cref="T:System.IdentityModel.Tokens.Saml2Attribute" />。</span><span class="sxs-lookup"><span data-stu-id="81a7e-157">A <see cref="T:System.IdentityModel.Tokens.Saml2Attribute" /> that contains the converted claim.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="81a7e-158"><paramref name="claim" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="81a7e-158"><paramref name="claim" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateAttributeStatement">
      <MemberSignature Language="C#" Value="protected virtual System.IdentityModel.Tokens.Saml2AttributeStatement CreateAttributeStatement (System.Security.Claims.ClaimsIdentity subject, System.IdentityModel.Tokens.SecurityTokenDescriptor tokenDescriptor);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.IdentityModel.Tokens.Saml2AttributeStatement CreateAttributeStatement(class System.Security.Claims.ClaimsIdentity subject, class System.IdentityModel.Tokens.SecurityTokenDescriptor tokenDescriptor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CreateAttributeStatement(System.Security.Claims.ClaimsIdentity,System.IdentityModel.Tokens.SecurityTokenDescriptor)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateAttributeStatement (subject As ClaimsIdentity, tokenDescriptor As SecurityTokenDescriptor) As Saml2AttributeStatement" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::IdentityModel::Tokens::Saml2AttributeStatement ^ CreateAttributeStatement(System::Security::Claims::ClaimsIdentity ^ subject, System::IdentityModel::Tokens::SecurityTokenDescriptor ^ tokenDescriptor);" />
      <MemberSignature Language="F#" Value="abstract member CreateAttributeStatement : System.Security.Claims.ClaimsIdentity * System.IdentityModel.Tokens.SecurityTokenDescriptor -&gt; System.IdentityModel.Tokens.Saml2AttributeStatement&#xA;override this.CreateAttributeStatement : System.Security.Claims.ClaimsIdentity * System.IdentityModel.Tokens.SecurityTokenDescriptor -&gt; System.IdentityModel.Tokens.Saml2AttributeStatement" Usage="saml2SecurityTokenHandler.CreateAttributeStatement (subject, tokenDescriptor)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.Saml2AttributeStatement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subject" Type="System.Security.Claims.ClaimsIdentity" />
        <Parameter Name="tokenDescriptor" Type="System.IdentityModel.Tokens.SecurityTokenDescriptor" />
      </Parameters>
      <Docs>
        <param name="subject"><span data-ttu-id="81a7e-159">包含将要被转换为 SAML 特性的声明的 <see cref="T:System.Security.Claims.ClaimsIdentity" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="81a7e-159">The <see cref="T:System.Security.Claims.ClaimsIdentity" /> object that contains claims which will be converted to SAML Attributes.</span></span></param>
        <param name="tokenDescriptor"><span data-ttu-id="81a7e-160">标记描述符。</span><span class="sxs-lookup"><span data-stu-id="81a7e-160">The token descriptor.</span></span></param>
        <summary><span data-ttu-id="81a7e-161">从标记说明符创建 <see cref="T:System.IdentityModel.Tokens.Saml2AttributeStatement" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="81a7e-161">Creates a <see cref="T:System.IdentityModel.Tokens.Saml2AttributeStatement" /> object from a token descriptor.</span></span></summary>
        <returns><span data-ttu-id="81a7e-162"><see cref="T:System.IdentityModel.Tokens.Saml2AttributeStatement" /> 包含转换的声明。</span><span class="sxs-lookup"><span data-stu-id="81a7e-162">A <see cref="T:System.IdentityModel.Tokens.Saml2AttributeStatement" /> that contains the converted claims.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="81a7e-163">`null`如果标记描述符不包含任何使用者或使用者没有任何声明，则此方法可能返回。</span><span class="sxs-lookup"><span data-stu-id="81a7e-163">This method may return `null` if the token descriptor does not contain any subject or the subject does not have any claims.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateAuthenticationStatement">
      <MemberSignature Language="C#" Value="protected virtual System.IdentityModel.Tokens.Saml2AuthenticationStatement CreateAuthenticationStatement (System.Security.Claims.AuthenticationInformation authInfo, System.IdentityModel.Tokens.SecurityTokenDescriptor tokenDescriptor);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.IdentityModel.Tokens.Saml2AuthenticationStatement CreateAuthenticationStatement(class System.Security.Claims.AuthenticationInformation authInfo, class System.IdentityModel.Tokens.SecurityTokenDescriptor tokenDescriptor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CreateAuthenticationStatement(System.Security.Claims.AuthenticationInformation,System.IdentityModel.Tokens.SecurityTokenDescriptor)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateAuthenticationStatement (authInfo As AuthenticationInformation, tokenDescriptor As SecurityTokenDescriptor) As Saml2AuthenticationStatement" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::IdentityModel::Tokens::Saml2AuthenticationStatement ^ CreateAuthenticationStatement(System::Security::Claims::AuthenticationInformation ^ authInfo, System::IdentityModel::Tokens::SecurityTokenDescriptor ^ tokenDescriptor);" />
      <MemberSignature Language="F#" Value="abstract member CreateAuthenticationStatement : System.Security.Claims.AuthenticationInformation * System.IdentityModel.Tokens.SecurityTokenDescriptor -&gt; System.IdentityModel.Tokens.Saml2AuthenticationStatement&#xA;override this.CreateAuthenticationStatement : System.Security.Claims.AuthenticationInformation * System.IdentityModel.Tokens.SecurityTokenDescriptor -&gt; System.IdentityModel.Tokens.Saml2AuthenticationStatement" Usage="saml2SecurityTokenHandler.CreateAuthenticationStatement (authInfo, tokenDescriptor)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.Saml2AuthenticationStatement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="authInfo" Type="System.Security.Claims.AuthenticationInformation" />
        <Parameter Name="tokenDescriptor" Type="System.IdentityModel.Tokens.SecurityTokenDescriptor" />
      </Parameters>
      <Docs>
        <param name="authInfo"><span data-ttu-id="81a7e-164">包含作为 <see cref="T:System.Security.Claims.AuthenticationInformation" /> 对象包装的状态的 <see cref="T:System.IdentityModel.Tokens.Saml2AuthenticationStatement" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="81a7e-164">An <see cref="T:System.Security.Claims.AuthenticationInformation" /> object that contains the state to be wrapped as a <see cref="T:System.IdentityModel.Tokens.Saml2AuthenticationStatement" /> object.</span></span></param>
        <param name="tokenDescriptor"><span data-ttu-id="81a7e-165">标记描述符。</span><span class="sxs-lookup"><span data-stu-id="81a7e-165">The token descriptor.</span></span></param>
        <summary><span data-ttu-id="81a7e-166">创建从指定的身份验证信息中创建 SAML 2.0 身份验证语句。</span><span class="sxs-lookup"><span data-stu-id="81a7e-166">Creates a SAML 2.0 authentication statement from the specified authentication information.</span></span></summary>
        <returns><span data-ttu-id="81a7e-167">添加 <see cref="T:System.IdentityModel.Tokens.Saml2AuthenticationStatement" /> 到要创建的断言，或忽略 <see cref="T:System.Security.Claims.AuthenticationInformation" /> 对象（和不创建 SAML 2.0 身份验证语句），则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="81a7e-167">A <see cref="T:System.IdentityModel.Tokens.Saml2AuthenticationStatement" /> to add to the assertion being created or <see langword="null" /> to ignore the <see cref="T:System.Security.Claims.AuthenticationInformation" /> object (and not create a SAML 2.0 authentication statement).</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="81a7e-168"><paramref name="tokenDescriptor" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="81a7e-168"><paramref name="tokenDescriptor" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="81a7e-169">- 或 -</span><span class="sxs-lookup"><span data-stu-id="81a7e-169">-or-</span></span> 
<span data-ttu-id="81a7e-170"><paramref name="tokenDescriptor" /> 的 <see cref="P:System.IdentityModel.Tokens.SecurityTokenDescriptor.Subject" /> 属性为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="81a7e-170">The <see cref="P:System.IdentityModel.Tokens.SecurityTokenDescriptor.Subject" /> property of <paramref name="tokenDescriptor" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="81a7e-171"><paramref name="tokenDescriptor" />（<see cref="P:System.IdentityModel.Tokens.SecurityTokenDescriptor.Subject" /> 属性）的主题包含声明类型为 <see cref="F:System.Security.Claims.ClaimTypes.AuthenticationInstant" /> 或 <see cref="F:System.Security.Claims.ClaimTypes.AuthenticationMethod" /> 的声明，但不包含每种类型的至少一个声明。</span><span class="sxs-lookup"><span data-stu-id="81a7e-171">The subject of the <paramref name="tokenDescriptor" /> (the <see cref="P:System.IdentityModel.Tokens.SecurityTokenDescriptor.Subject" /> property) contains claims with a claim type of either <see cref="F:System.Security.Claims.ClaimTypes.AuthenticationInstant" /> or  <see cref="F:System.Security.Claims.ClaimTypes.AuthenticationMethod" /> but does not contain at least one claim of each type.</span></span>  
  
<span data-ttu-id="81a7e-172">- 或 -</span><span class="sxs-lookup"><span data-stu-id="81a7e-172">-or-</span></span> 
<span data-ttu-id="81a7e-173"><paramref name="tokenDescriptor" /> 的主题指定的身份验证方法无法解析为绝对 URI。</span><span class="sxs-lookup"><span data-stu-id="81a7e-173">The authentication method specified by the subject of the <paramref name="tokenDescriptor" /> cannot be resolved to an absolute URI.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateClaims">
      <MemberSignature Language="C#" Value="protected virtual System.Security.Claims.ClaimsIdentity CreateClaims (System.IdentityModel.Tokens.Saml2SecurityToken samlToken);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Security.Claims.ClaimsIdentity CreateClaims(class System.IdentityModel.Tokens.Saml2SecurityToken samlToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CreateClaims(System.IdentityModel.Tokens.Saml2SecurityToken)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateClaims (samlToken As Saml2SecurityToken) As ClaimsIdentity" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Security::Claims::ClaimsIdentity ^ CreateClaims(System::IdentityModel::Tokens::Saml2SecurityToken ^ samlToken);" />
      <MemberSignature Language="F#" Value="abstract member CreateClaims : System.IdentityModel.Tokens.Saml2SecurityToken -&gt; System.Security.Claims.ClaimsIdentity&#xA;override this.CreateClaims : System.IdentityModel.Tokens.Saml2SecurityToken -&gt; System.Security.Claims.ClaimsIdentity" Usage="saml2SecurityTokenHandler.CreateClaims samlToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Claims.ClaimsIdentity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="samlToken" Type="System.IdentityModel.Tokens.Saml2SecurityToken" />
      </Parameters>
      <Docs>
        <param name="samlToken"><span data-ttu-id="81a7e-174">一个 <see cref="T:System.IdentityModel.Tokens.Saml2SecurityToken" />，表示用以创建声明的安全令牌。</span><span class="sxs-lookup"><span data-stu-id="81a7e-174">A <see cref="T:System.IdentityModel.Tokens.Saml2SecurityToken" /> that represents the security token from which to create the claims.</span></span></param>
        <summary><span data-ttu-id="81a7e-175">从 SAML 2.0 标记创建声明。</span><span class="sxs-lookup"><span data-stu-id="81a7e-175">Creates claims from a SAML 2.0 token.</span></span></summary>
        <returns><span data-ttu-id="81a7e-176">包含从标志中提取的声明的 <see cref="T:System.Security.Claims.ClaimsIdentity" />。</span><span class="sxs-lookup"><span data-stu-id="81a7e-176">An <see cref="T:System.Security.Claims.ClaimsIdentity" /> that contains the claims extracted from the token.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="81a7e-177"><paramref name="samlToken" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="81a7e-177"><paramref name="samlToken" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="81a7e-178"><paramref name="samlToken" /> 的 <see cref="P:System.IdentityModel.Tokens.Saml2SecurityToken.Assertion" /> 属性为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="81a7e-178">The <see cref="P:System.IdentityModel.Tokens.Saml2SecurityToken.Assertion" /> property of <paramref name="samlToken" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="81a7e-179">处理程序未注册或用于处理程序的发布者姓名注册表未被配置。</span><span class="sxs-lookup"><span data-stu-id="81a7e-179">The handler is not configured or an issuer name registry is not configured for the handler.</span></span> <span data-ttu-id="81a7e-180"><see cref="P:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration" /> 属性为 <see langword="null" />，<see cref="T:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration" />，其具有 <see cref="P:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration.IssuerNameRegistry" /> 属性，值为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="81a7e-180">(The <see cref="P:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration" /> property is <see langword="null" /> or is set to a <see cref="T:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration" /> with an <see cref="P:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration.IssuerNameRegistry" /> property that is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IdentityModel.Tokens.SecurityTokenException"><span data-ttu-id="81a7e-181">用于安全标识 (<paramref name="samlToken" />) 的由配置的颁布者名称注册表返回的颁布者名称是 <see langword="null" /> 或为空。</span><span class="sxs-lookup"><span data-stu-id="81a7e-181">The issuer name returned by the configured issuer name registry for the security token (<paramref name="samlToken" />) is <see langword="null" /> or empty.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateConditions">
      <MemberSignature Language="C#" Value="protected virtual System.IdentityModel.Tokens.Saml2Conditions CreateConditions (System.IdentityModel.Protocols.WSTrust.Lifetime tokenLifetime, string relyingPartyAddress, System.IdentityModel.Tokens.SecurityTokenDescriptor tokenDescriptor);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.IdentityModel.Tokens.Saml2Conditions CreateConditions(class System.IdentityModel.Protocols.WSTrust.Lifetime tokenLifetime, string relyingPartyAddress, class System.IdentityModel.Tokens.SecurityTokenDescriptor tokenDescriptor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CreateConditions(System.IdentityModel.Protocols.WSTrust.Lifetime,System.String,System.IdentityModel.Tokens.SecurityTokenDescriptor)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateConditions (tokenLifetime As Lifetime, relyingPartyAddress As String, tokenDescriptor As SecurityTokenDescriptor) As Saml2Conditions" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::IdentityModel::Tokens::Saml2Conditions ^ CreateConditions(System::IdentityModel::Protocols::WSTrust::Lifetime ^ tokenLifetime, System::String ^ relyingPartyAddress, System::IdentityModel::Tokens::SecurityTokenDescriptor ^ tokenDescriptor);" />
      <MemberSignature Language="F#" Value="abstract member CreateConditions : System.IdentityModel.Protocols.WSTrust.Lifetime * string * System.IdentityModel.Tokens.SecurityTokenDescriptor -&gt; System.IdentityModel.Tokens.Saml2Conditions&#xA;override this.CreateConditions : System.IdentityModel.Protocols.WSTrust.Lifetime * string * System.IdentityModel.Tokens.SecurityTokenDescriptor -&gt; System.IdentityModel.Tokens.Saml2Conditions" Usage="saml2SecurityTokenHandler.CreateConditions (tokenLifetime, relyingPartyAddress, tokenDescriptor)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.Saml2Conditions</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tokenLifetime" Type="System.IdentityModel.Protocols.WSTrust.Lifetime" />
        <Parameter Name="relyingPartyAddress" Type="System.String" />
        <Parameter Name="tokenDescriptor" Type="System.IdentityModel.Tokens.SecurityTokenDescriptor" />
      </Parameters>
      <Docs>
        <param name="tokenLifetime"><span data-ttu-id="81a7e-182">标记的生存期。</span><span class="sxs-lookup"><span data-stu-id="81a7e-182">The lifetime of the token.</span></span></param>
        <param name="relyingPartyAddress"><span data-ttu-id="81a7e-183">为其创建标记的终结点地址。</span><span class="sxs-lookup"><span data-stu-id="81a7e-183">The endpoint address for which the token is created.</span></span> <span data-ttu-id="81a7e-184">该地址建模为 AudienceRestriction 条件。</span><span class="sxs-lookup"><span data-stu-id="81a7e-184">The address is modeled as an AudienceRestriction condition.</span></span></param>
        <param name="tokenDescriptor"><span data-ttu-id="81a7e-185">标记描述符。</span><span class="sxs-lookup"><span data-stu-id="81a7e-185">The token descriptor.</span></span></param>
        <summary><span data-ttu-id="81a7e-186">创建断言的条件。</span><span class="sxs-lookup"><span data-stu-id="81a7e-186">Creates the conditions for the assertion.</span></span></summary>
        <returns><span data-ttu-id="81a7e-187"><see cref="T:System.IdentityModel.Tokens.Saml2Conditions" /> 对象，包含该断言的条件。</span><span class="sxs-lookup"><span data-stu-id="81a7e-187">A <see cref="T:System.IdentityModel.Tokens.Saml2Conditions" /> object that contains the conditions for the assertion.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="81a7e-188">通常情况下，条件应包括在断言中，以限制滥用断言的影响。</span><span class="sxs-lookup"><span data-stu-id="81a7e-188">Generally, conditions should be included in assertions to limit the impact of misuse of the assertion.</span></span> <span data-ttu-id="81a7e-189">指定 "NotBefore" 和 "NotOnOrAfter" 条件可能会限制泄露断言时漏洞的期限。</span><span class="sxs-lookup"><span data-stu-id="81a7e-189">Specifying the NotBefore and NotOnOrAfter conditions can limit the period of vulnerability in the case of a compromised assertion.</span></span> <span data-ttu-id="81a7e-190">AudienceRestrictionCondition 可用于显式声明预期的依赖方或断言的各方，后者与信赖方的适当受众限制强制结合，可帮助减轻信赖方之间的欺骗攻击。</span><span class="sxs-lookup"><span data-stu-id="81a7e-190">The AudienceRestrictionCondition can be used to explicitly state the intended relying party or parties of the assertion, which coupled with appropriate audience restriction enforcement at relying parties can help to mitigate spoofing attacks between relying parties.</span></span>  
  
 <span data-ttu-id="81a7e-191">默认实现基于的属性创建 NotBefore 和 NotOnOrAfter 条件 <xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.Lifetime%2A> `tokenDescriptor` 。</span><span class="sxs-lookup"><span data-stu-id="81a7e-191">The default implementation creates NotBefore and NotOnOrAfter conditions based on the <xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.Lifetime%2A> property of the `tokenDescriptor`.</span></span> <span data-ttu-id="81a7e-192">它还将生成对的属性使用断言的 AudienceRestrictionCondition 限制 <xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.AppliesToAddress%2A> `tokenDescriptor` 。</span><span class="sxs-lookup"><span data-stu-id="81a7e-192">It will also generate an AudienceRestrictionCondition limiting consumption of the assertion to the <xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.AppliesToAddress%2A> property of the `tokenDescriptor`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateIssuerNameIdentifier">
      <MemberSignature Language="C#" Value="protected virtual System.IdentityModel.Tokens.Saml2NameIdentifier CreateIssuerNameIdentifier (System.IdentityModel.Tokens.SecurityTokenDescriptor tokenDescriptor);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.IdentityModel.Tokens.Saml2NameIdentifier CreateIssuerNameIdentifier(class System.IdentityModel.Tokens.SecurityTokenDescriptor tokenDescriptor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CreateIssuerNameIdentifier(System.IdentityModel.Tokens.SecurityTokenDescriptor)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateIssuerNameIdentifier (tokenDescriptor As SecurityTokenDescriptor) As Saml2NameIdentifier" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::IdentityModel::Tokens::Saml2NameIdentifier ^ CreateIssuerNameIdentifier(System::IdentityModel::Tokens::SecurityTokenDescriptor ^ tokenDescriptor);" />
      <MemberSignature Language="F#" Value="abstract member CreateIssuerNameIdentifier : System.IdentityModel.Tokens.SecurityTokenDescriptor -&gt; System.IdentityModel.Tokens.Saml2NameIdentifier&#xA;override this.CreateIssuerNameIdentifier : System.IdentityModel.Tokens.SecurityTokenDescriptor -&gt; System.IdentityModel.Tokens.Saml2NameIdentifier" Usage="saml2SecurityTokenHandler.CreateIssuerNameIdentifier tokenDescriptor" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.Saml2NameIdentifier</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tokenDescriptor" Type="System.IdentityModel.Tokens.SecurityTokenDescriptor" />
      </Parameters>
      <Docs>
        <param name="tokenDescriptor"><span data-ttu-id="81a7e-193">用于创建名称标识符的标记说明符。</span><span class="sxs-lookup"><span data-stu-id="81a7e-193">The token descriptor from which to create the name identifier.</span></span></param>
        <summary><span data-ttu-id="81a7e-194">创建识别声明颁布者的名称标示符。</span><span class="sxs-lookup"><span data-stu-id="81a7e-194">Creates a name identifier that identifies the assertion issuer.</span></span></summary>
        <returns><span data-ttu-id="81a7e-195">一个表示名称标识符的 <see cref="T:System.IdentityModel.Tokens.Saml2NameIdentifier" />。</span><span class="sxs-lookup"><span data-stu-id="81a7e-195">A <see cref="T:System.IdentityModel.Tokens.Saml2NameIdentifier" /> that represents the name identifier.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="81a7e-196">SAML2 断言必须包含颁发者的名称标识符。</span><span class="sxs-lookup"><span data-stu-id="81a7e-196">SAML2 assertions must contain a name identifier for the issuer.</span></span> <span data-ttu-id="81a7e-197">此方法可能不会返回 `null` 。</span><span class="sxs-lookup"><span data-stu-id="81a7e-197">This method may not return `null`.</span></span>  
  
 <span data-ttu-id="81a7e-198">默认实现从的属性创建一个简单的名称标识符 <xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.TokenIssuerName%2A> `tokenDescriptor` 。</span><span class="sxs-lookup"><span data-stu-id="81a7e-198">The default implementation creates a simple name identifier from the <xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.TokenIssuerName%2A> property of the `tokenDescriptor`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="81a7e-199"><paramref name="tokenDescriptor" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="81a7e-199"><paramref name="tokenDescriptor" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateSamlSubject">
      <MemberSignature Language="C#" Value="protected virtual System.IdentityModel.Tokens.Saml2Subject CreateSamlSubject (System.IdentityModel.Tokens.SecurityTokenDescriptor tokenDescriptor);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.IdentityModel.Tokens.Saml2Subject CreateSamlSubject(class System.IdentityModel.Tokens.SecurityTokenDescriptor tokenDescriptor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CreateSamlSubject(System.IdentityModel.Tokens.SecurityTokenDescriptor)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateSamlSubject (tokenDescriptor As SecurityTokenDescriptor) As Saml2Subject" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::IdentityModel::Tokens::Saml2Subject ^ CreateSamlSubject(System::IdentityModel::Tokens::SecurityTokenDescriptor ^ tokenDescriptor);" />
      <MemberSignature Language="F#" Value="abstract member CreateSamlSubject : System.IdentityModel.Tokens.SecurityTokenDescriptor -&gt; System.IdentityModel.Tokens.Saml2Subject&#xA;override this.CreateSamlSubject : System.IdentityModel.Tokens.SecurityTokenDescriptor -&gt; System.IdentityModel.Tokens.Saml2Subject" Usage="saml2SecurityTokenHandler.CreateSamlSubject tokenDescriptor" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.Saml2Subject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tokenDescriptor" Type="System.IdentityModel.Tokens.SecurityTokenDescriptor" />
      </Parameters>
      <Docs>
        <param name="tokenDescriptor"><span data-ttu-id="81a7e-200">为其创建主题的安全标记说明符。</span><span class="sxs-lookup"><span data-stu-id="81a7e-200">The security token descriptor from which to create the subject.</span></span></param>
        <summary><span data-ttu-id="81a7e-201">为此断言创建 SAML 2.0 主题。</span><span class="sxs-lookup"><span data-stu-id="81a7e-201">Creates a SAML 2.0 subject for the assertion.</span></span></summary>
        <returns><span data-ttu-id="81a7e-202">一个表示断言主题的 <see cref="T:System.IdentityModel.Tokens.Saml2Subject" />。</span><span class="sxs-lookup"><span data-stu-id="81a7e-202">A <see cref="T:System.IdentityModel.Tokens.Saml2Subject" /> that represents the subject of the assertion.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="81a7e-203"><paramref name="tokenDescriptor" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="81a7e-203"><paramref name="tokenDescriptor" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateSecurityTokenReference">
      <MemberSignature Language="C#" Value="public override System.IdentityModel.Tokens.SecurityKeyIdentifierClause CreateSecurityTokenReference (System.IdentityModel.Tokens.SecurityToken token, bool attached);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IdentityModel.Tokens.SecurityKeyIdentifierClause CreateSecurityTokenReference(class System.IdentityModel.Tokens.SecurityToken token, bool attached) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CreateSecurityTokenReference(System.IdentityModel.Tokens.SecurityToken,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CreateSecurityTokenReference (token As SecurityToken, attached As Boolean) As SecurityKeyIdentifierClause" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::IdentityModel::Tokens::SecurityKeyIdentifierClause ^ CreateSecurityTokenReference(System::IdentityModel::Tokens::SecurityToken ^ token, bool attached);" />
      <MemberSignature Language="F#" Value="override this.CreateSecurityTokenReference : System.IdentityModel.Tokens.SecurityToken * bool -&gt; System.IdentityModel.Tokens.SecurityKeyIdentifierClause" Usage="saml2SecurityTokenHandler.CreateSecurityTokenReference (token, attached)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityKeyIdentifierClause</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="System.IdentityModel.Tokens.SecurityToken" />
        <Parameter Name="attached" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="token"><span data-ttu-id="81a7e-204">SAML 令牌。</span><span class="sxs-lookup"><span data-stu-id="81a7e-204">The SAML token.</span></span></param>
        <param name="attached"><span data-ttu-id="81a7e-205">指示是否创建附加引用或独立引用的值。</span><span class="sxs-lookup"><span data-stu-id="81a7e-205">A value that indicates whether an attached or unattached reference should be created.</span></span></param>
        <summary><span data-ttu-id="81a7e-206">标记没附在消息上时创建安全标记引用。</span><span class="sxs-lookup"><span data-stu-id="81a7e-206">Creates the security token reference when the token is not attached to the message.</span></span></summary>
        <returns><span data-ttu-id="81a7e-207">一个 <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> ，表示令牌引用。</span><span class="sxs-lookup"><span data-stu-id="81a7e-207">A <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> that represents the token reference.</span></span> <span data-ttu-id="81a7e-208">实际上返回一个<see cref="T:System.IdentityModel.Tokens.Saml2AssertionKeyIdentifierClause" />的实例。</span><span class="sxs-lookup"><span data-stu-id="81a7e-208">(An instance of <see cref="T:System.IdentityModel.Tokens.Saml2AssertionKeyIdentifierClause" /> is actually returned.)</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="81a7e-209"><paramref name="token" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="81a7e-209"><paramref name="token" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateStatements">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.Generic.IEnumerable&lt;System.IdentityModel.Tokens.Saml2Statement&gt; CreateStatements (System.IdentityModel.Tokens.SecurityTokenDescriptor tokenDescriptor);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class System.IdentityModel.Tokens.Saml2Statement&gt; CreateStatements(class System.IdentityModel.Tokens.SecurityTokenDescriptor tokenDescriptor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CreateStatements(System.IdentityModel.Tokens.SecurityTokenDescriptor)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateStatements (tokenDescriptor As SecurityTokenDescriptor) As IEnumerable(Of Saml2Statement)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Collections::Generic::IEnumerable&lt;System::IdentityModel::Tokens::Saml2Statement ^&gt; ^ CreateStatements(System::IdentityModel::Tokens::SecurityTokenDescriptor ^ tokenDescriptor);" />
      <MemberSignature Language="F#" Value="abstract member CreateStatements : System.IdentityModel.Tokens.SecurityTokenDescriptor -&gt; seq&lt;System.IdentityModel.Tokens.Saml2Statement&gt;&#xA;override this.CreateStatements : System.IdentityModel.Tokens.SecurityTokenDescriptor -&gt; seq&lt;System.IdentityModel.Tokens.Saml2Statement&gt;" Usage="saml2SecurityTokenHandler.CreateStatements tokenDescriptor" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.IdentityModel.Tokens.Saml2Statement&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tokenDescriptor" Type="System.IdentityModel.Tokens.SecurityTokenDescriptor" />
      </Parameters>
      <Docs>
        <param name="tokenDescriptor"><span data-ttu-id="81a7e-210">用于创建语句的标记说明符。</span><span class="sxs-lookup"><span data-stu-id="81a7e-210">The token descriptor from which to create the statements.</span></span></param>
        <summary><span data-ttu-id="81a7e-211">创建包含于断言中的 SAML 2.0 语句。</span><span class="sxs-lookup"><span data-stu-id="81a7e-211">Creates SAML 2.0 statements to be included in the assertion.</span></span></summary>
        <returns><span data-ttu-id="81a7e-212">包含声明的 <see cref="T:System.IdentityModel.Tokens.Saml2Statement" /> 的枚举。</span><span class="sxs-lookup"><span data-stu-id="81a7e-212">An enumeration of <see cref="T:System.IdentityModel.Tokens.Saml2Statement" /> that contains the statements.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="81a7e-213">SAML 2.0 断言中不需要语句。</span><span class="sxs-lookup"><span data-stu-id="81a7e-213">Statements are not required in a SAML 2.0 assertion.</span></span> <span data-ttu-id="81a7e-214">此方法可能返回一个空集合。</span><span class="sxs-lookup"><span data-stu-id="81a7e-214">This method may return an empty collection.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="81a7e-215"><paramref name="tokenDescriptor" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="81a7e-215"><paramref name="tokenDescriptor" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateToken">
      <MemberSignature Language="C#" Value="public override System.IdentityModel.Tokens.SecurityToken CreateToken (System.IdentityModel.Tokens.SecurityTokenDescriptor tokenDescriptor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IdentityModel.Tokens.SecurityToken CreateToken(class System.IdentityModel.Tokens.SecurityTokenDescriptor tokenDescriptor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CreateToken(System.IdentityModel.Tokens.SecurityTokenDescriptor)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CreateToken (tokenDescriptor As SecurityTokenDescriptor) As SecurityToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::IdentityModel::Tokens::SecurityToken ^ CreateToken(System::IdentityModel::Tokens::SecurityTokenDescriptor ^ tokenDescriptor);" />
      <MemberSignature Language="F#" Value="override this.CreateToken : System.IdentityModel.Tokens.SecurityTokenDescriptor -&gt; System.IdentityModel.Tokens.SecurityToken" Usage="saml2SecurityTokenHandler.CreateToken tokenDescriptor" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tokenDescriptor" Type="System.IdentityModel.Tokens.SecurityTokenDescriptor" />
      </Parameters>
      <Docs>
        <param name="tokenDescriptor"><span data-ttu-id="81a7e-216">用于创建安全标记的标记说明符。</span><span class="sxs-lookup"><span data-stu-id="81a7e-216">The token descriptor from which to create the security token.</span></span></param>
        <summary><span data-ttu-id="81a7e-217">创建基于标记说明符的安全标记。</span><span class="sxs-lookup"><span data-stu-id="81a7e-217">Creates a security token based on a token descriptor.</span></span></summary>
        <returns><span data-ttu-id="81a7e-218">一个 <see cref="T:System.IdentityModel.Tokens.SecurityToken" />，表示 SAML 2.0 安全令牌。</span><span class="sxs-lookup"><span data-stu-id="81a7e-218">A <see cref="T:System.IdentityModel.Tokens.SecurityToken" /> that represents the SAML 2.0 security token.</span></span> <span data-ttu-id="81a7e-219">（实际上返回一个<see cref="T:System.IdentityModel.Tokens.Saml2SecurityToken" />的实例。）</span><span class="sxs-lookup"><span data-stu-id="81a7e-219">(The token returned is actually an instance of <see cref="T:System.IdentityModel.Tokens.Saml2SecurityToken" />.)</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="81a7e-220"><paramref name="tokenDescriptor" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="81a7e-220"><paramref name="tokenDescriptor" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateWindowsIdentity">
      <MemberSignature Language="C#" Value="protected virtual System.Security.Principal.WindowsIdentity CreateWindowsIdentity (string upn);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Security.Principal.WindowsIdentity CreateWindowsIdentity(string upn) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CreateWindowsIdentity(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateWindowsIdentity (upn As String) As WindowsIdentity" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Security::Principal::WindowsIdentity ^ CreateWindowsIdentity(System::String ^ upn);" />
      <MemberSignature Language="F#" Value="abstract member CreateWindowsIdentity : string -&gt; System.Security.Principal.WindowsIdentity&#xA;override this.CreateWindowsIdentity : string -&gt; System.Security.Principal.WindowsIdentity" Usage="saml2SecurityTokenHandler.CreateWindowsIdentity upn" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Principal.WindowsIdentity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="upn" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="upn"><span data-ttu-id="81a7e-221">用来创建标识的 UPN。</span><span class="sxs-lookup"><span data-stu-id="81a7e-221">The UPN to use to create the identity.</span></span></param>
        <summary><span data-ttu-id="81a7e-222">使用指定用户主名称 （UPN）创建 <see cref="T:System.Security.Principal.WindowsIdentity" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="81a7e-222">Creates a <see cref="T:System.Security.Principal.WindowsIdentity" /> object using the specified User Principal Name (UPN).</span></span></summary>
        <returns><span data-ttu-id="81a7e-223">已创建的线程的 Windows 标识。</span><span class="sxs-lookup"><span data-stu-id="81a7e-223">The Windows identity that was created.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="81a7e-224"><paramref name="upn" /> 为 <see langword="null" /> 或空字符串。</span><span class="sxs-lookup"><span data-stu-id="81a7e-224"><paramref name="upn" /> is <see langword="null" /> or an empty string.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateXmlStringFromAttributes">
      <MemberSignature Language="C#" Value="protected virtual string CreateXmlStringFromAttributes (System.Collections.Generic.IEnumerable&lt;System.IdentityModel.Tokens.Saml2Attribute&gt; attributes);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string CreateXmlStringFromAttributes(class System.Collections.Generic.IEnumerable`1&lt;class System.IdentityModel.Tokens.Saml2Attribute&gt; attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CreateXmlStringFromAttributes(System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.Saml2Attribute})" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateXmlStringFromAttributes (attributes As IEnumerable(Of Saml2Attribute)) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ CreateXmlStringFromAttributes(System::Collections::Generic::IEnumerable&lt;System::IdentityModel::Tokens::Saml2Attribute ^&gt; ^ attributes);" />
      <MemberSignature Language="F#" Value="abstract member CreateXmlStringFromAttributes : seq&lt;System.IdentityModel.Tokens.Saml2Attribute&gt; -&gt; string&#xA;override this.CreateXmlStringFromAttributes : seq&lt;System.IdentityModel.Tokens.Saml2Attribute&gt; -&gt; string" Usage="saml2SecurityTokenHandler.CreateXmlStringFromAttributes attributes" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributes" Type="System.Collections.Generic.IEnumerable&lt;System.IdentityModel.Tokens.Saml2Attribute&gt;" />
      </Parameters>
      <Docs>
        <param name="attributes"><span data-ttu-id="81a7e-225">包含该特性的 <see cref="T:System.IdentityModel.Tokens.Saml2Attribute" /> 类型的枚举。</span><span class="sxs-lookup"><span data-stu-id="81a7e-225">An enumeration of type <see cref="T:System.IdentityModel.Tokens.Saml2Attribute" /> that contains the attributes.</span></span></param>
        <summary><span data-ttu-id="81a7e-226">从表示参与者的 SAML 2.0 特性的集合中生成一个 XML 格式的字符串。</span><span class="sxs-lookup"><span data-stu-id="81a7e-226">Builds an XML formatted string from a collection of SAML 2.0 attributes that represent the Actor.</span></span></summary>
        <returns><span data-ttu-id="81a7e-227">使用特性构造的格式良好的 XML 字符串。</span><span class="sxs-lookup"><span data-stu-id="81a7e-227">A well-formed XML string constructed using the attributes.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="81a7e-228">字符串的格式为 " \<Actor> \<Attribute name, ns> \<AttributeValue> ... \</AttributeValue> ，... \</Attribute>...\</Actor>"</span><span class="sxs-lookup"><span data-stu-id="81a7e-228">The string is of the form "\<Actor>\<Attribute name, ns>\<AttributeValue>...\</AttributeValue>, ...\</Attribute>...\</Actor>"</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DenormalizeAuthenticationType">
      <MemberSignature Language="C#" Value="protected virtual string DenormalizeAuthenticationType (string normalizedAuthenticationType);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string DenormalizeAuthenticationType(string normalizedAuthenticationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.DenormalizeAuthenticationType(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function DenormalizeAuthenticationType (normalizedAuthenticationType As String) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ DenormalizeAuthenticationType(System::String ^ normalizedAuthenticationType);" />
      <MemberSignature Language="F#" Value="abstract member DenormalizeAuthenticationType : string -&gt; string&#xA;override this.DenormalizeAuthenticationType : string -&gt; string" Usage="saml2SecurityTokenHandler.DenormalizeAuthenticationType normalizedAuthenticationType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="normalizedAuthenticationType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="normalizedAuthenticationType"><span data-ttu-id="81a7e-229">规范化的值。</span><span class="sxs-lookup"><span data-stu-id="81a7e-229">The normalized value.</span></span></param>
        <summary><span data-ttu-id="81a7e-230">返回匹配规范化的值的 Saml2 AuthenticationContext。</span><span class="sxs-lookup"><span data-stu-id="81a7e-230">Returns the Saml2 AuthenticationContext matching a normalized value.</span></span></summary>
        <returns><span data-ttu-id="81a7e-231">一个字符串，表示用于获取令牌的非规范化的身份验证类型。</span><span class="sxs-lookup"><span data-stu-id="81a7e-231">A string that represents the denormalized authentication type used to obtain the token.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DetectReplayedToken">
      <MemberSignature Language="C#" Value="protected override void DetectReplayedToken (System.IdentityModel.Tokens.SecurityToken token);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void DetectReplayedToken(class System.IdentityModel.Tokens.SecurityToken token) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.DetectReplayedToken(System.IdentityModel.Tokens.SecurityToken)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub DetectReplayedToken (token As SecurityToken)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void DetectReplayedToken(System::IdentityModel::Tokens::SecurityToken ^ token);" />
      <MemberSignature Language="F#" Value="override this.DetectReplayedToken : System.IdentityModel.Tokens.SecurityToken -&gt; unit" Usage="saml2SecurityTokenHandler.DetectReplayedToken token" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="System.IdentityModel.Tokens.SecurityToken" />
      </Parameters>
      <Docs>
        <param name="token"><span data-ttu-id="81a7e-232"><see cref="T:System.IdentityModel.Tokens.SecurityToken" />表示要检查的 SAML 2.0 安全标记（该标记应为 <see cref="T:System.IdentityModel.Tokens.Saml2SecurityToken" />类型）。</span><span class="sxs-lookup"><span data-stu-id="81a7e-232">A <see cref="T:System.IdentityModel.Tokens.SecurityToken" /> that represents the SAML 2.0 security token (the token should be of type <see cref="T:System.IdentityModel.Tokens.Saml2SecurityToken" />) to be checked.</span></span></param>
        <summary><span data-ttu-id="81a7e-233">如果指定标记已存在于标记重播缓存中则引发异常；否则该标记将添加到缓存中。</span><span class="sxs-lookup"><span data-stu-id="81a7e-233">Throws an exception if the specified token already exists in the token replay cache; otherwise the token is added to the cache.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="81a7e-234">默认行为是只检查持有人令牌 (没有) 密钥的令牌。</span><span class="sxs-lookup"><span data-stu-id="81a7e-234">The default behavior is to only check bearer tokens (tokens that do not have keys).</span></span> <span data-ttu-id="81a7e-235">令牌重播缓存是通过 <xref:System.IdentityModel.Tokens.TokenReplayCache> <xref:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration.Caches%2A> 属性所引用的对象的属性为此处理程序配置的对象 <xref:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration> <xref:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration%2A> 。</span><span class="sxs-lookup"><span data-stu-id="81a7e-235">The token replay cache is the <xref:System.IdentityModel.Tokens.TokenReplayCache> object configured for this handler through the <xref:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration.Caches%2A> property of the <xref:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration> object referenced through the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="81a7e-236"><paramref name="token" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="81a7e-236"><paramref name="token" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="81a7e-237"><see cref="P:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration" /> 属性为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="81a7e-237">The <see cref="P:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration" /> property is <see langword="null" />.</span></span>  
  
<span data-ttu-id="81a7e-238">- 或 -</span><span class="sxs-lookup"><span data-stu-id="81a7e-238">-or-</span></span> 
<span data-ttu-id="81a7e-239">在处理程序配置（通过 <see cref="T:System.IdentityModel.Tokens.TokenReplayCache" /> 属性访问）的 <see cref="P:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration.Caches" /> 属性下未配置 <see cref="P:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration" />。</span><span class="sxs-lookup"><span data-stu-id="81a7e-239">There is no <see cref="T:System.IdentityModel.Tokens.TokenReplayCache" /> configured under the <see cref="P:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration.Caches" /> property of the handler configuration (accessed through the <see cref="P:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration" /> property).</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="81a7e-240"><paramref name="token" /> 不能作为 <see cref="T:System.IdentityModel.Tokens.Saml2SecurityToken" /> 实例被转换。</span><span class="sxs-lookup"><span data-stu-id="81a7e-240"><paramref name="token" /> cannot be cast as an instance of <see cref="T:System.IdentityModel.Tokens.Saml2SecurityToken" />.</span></span></exception>
        <exception cref="T:System.IdentityModel.Tokens.SecurityTokenValidationException"><span data-ttu-id="81a7e-241">与标识相关的断言的 ID 是 <see langword="null" /> 或为空。</span><span class="sxs-lookup"><span data-stu-id="81a7e-241">The ID of the assertion associated with the token is <see langword="null" /> or empty.</span></span> <span data-ttu-id="81a7e-242">（令牌的<see cref="P:System.IdentityModel.Tokens.Saml2SecurityToken.Assertion" />属性引用 <see cref="T:System.IdentityModel.Tokens.Saml2Assertion" />，它具有一个 <see cref="P:System.IdentityModel.Tokens.Saml2Assertion.Id" /> 属性，这个属性引用 <see cref="T:System.IdentityModel.Tokens.Saml2Id" /> （该引用值具有 <see cref="P:System.IdentityModel.Tokens.Saml2Id.Value" /> 属性，该属性为 <see langword="null" /> 或为空。））</span><span class="sxs-lookup"><span data-stu-id="81a7e-242">(The <see cref="P:System.IdentityModel.Tokens.Saml2SecurityToken.Assertion" /> property of the token references a <see cref="T:System.IdentityModel.Tokens.Saml2Assertion" /> that has an <see cref="P:System.IdentityModel.Tokens.Saml2Assertion.Id" /> property that references a <see cref="T:System.IdentityModel.Tokens.Saml2Id" /> with a <see cref="P:System.IdentityModel.Tokens.Saml2Id.Value" /> property that is <see langword="null" /> or empty.)</span></span></exception>
        <exception cref="T:System.IdentityModel.Tokens.SecurityTokenReplayDetectedException"><span data-ttu-id="81a7e-243">标记已存在于 <see cref="T:System.IdentityModel.Tokens.TokenReplayCache" /> 中。</span><span class="sxs-lookup"><span data-stu-id="81a7e-243">The token already exists in the <see cref="T:System.IdentityModel.Tokens.TokenReplayCache" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="FindUpn">
      <MemberSignature Language="C#" Value="protected virtual string FindUpn (System.Security.Claims.ClaimsIdentity claimsIdentity);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string FindUpn(class System.Security.Claims.ClaimsIdentity claimsIdentity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.FindUpn(System.Security.Claims.ClaimsIdentity)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function FindUpn (claimsIdentity As ClaimsIdentity) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ FindUpn(System::Security::Claims::ClaimsIdentity ^ claimsIdentity);" />
      <MemberSignature Language="F#" Value="abstract member FindUpn : System.Security.Claims.ClaimsIdentity -&gt; string&#xA;override this.FindUpn : System.Security.Claims.ClaimsIdentity -&gt; string" Usage="saml2SecurityTokenHandler.FindUpn claimsIdentity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="claimsIdentity" Type="System.Security.Claims.ClaimsIdentity" />
      </Parameters>
      <Docs>
        <param name="claimsIdentity"><span data-ttu-id="81a7e-244">包含所需 UPN 声明的声明标识对象。</span><span class="sxs-lookup"><span data-stu-id="81a7e-244">The claims identity object containing the desired UPN claim.</span></span></param>
        <summary><span data-ttu-id="81a7e-245">在指定的 <see cref="T:System.Security.Claims.ClaimsIdentity" /> 对象中查找 UPN 声明值，目的是为了把其标志映射到 <see cref="T:System.Security.Principal.WindowsIdentity" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="81a7e-245">Finds the UPN claim value in the specified <see cref="T:System.Security.Claims.ClaimsIdentity" /> object for the purpose of mapping the identity to a <see cref="T:System.Security.Principal.WindowsIdentity" /> object.</span></span></summary>
        <returns><span data-ttu-id="81a7e-246">一个字符串，其中包含找到的 UPN 声明值。</span><span class="sxs-lookup"><span data-stu-id="81a7e-246">A string that contains the UPN claim value found.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEncryptingCredentials">
      <MemberSignature Language="C#" Value="protected virtual System.IdentityModel.Tokens.EncryptingCredentials GetEncryptingCredentials (System.IdentityModel.Tokens.SecurityTokenDescriptor tokenDescriptor);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.IdentityModel.Tokens.EncryptingCredentials GetEncryptingCredentials(class System.IdentityModel.Tokens.SecurityTokenDescriptor tokenDescriptor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.GetEncryptingCredentials(System.IdentityModel.Tokens.SecurityTokenDescriptor)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetEncryptingCredentials (tokenDescriptor As SecurityTokenDescriptor) As EncryptingCredentials" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::IdentityModel::Tokens::EncryptingCredentials ^ GetEncryptingCredentials(System::IdentityModel::Tokens::SecurityTokenDescriptor ^ tokenDescriptor);" />
      <MemberSignature Language="F#" Value="abstract member GetEncryptingCredentials : System.IdentityModel.Tokens.SecurityTokenDescriptor -&gt; System.IdentityModel.Tokens.EncryptingCredentials&#xA;override this.GetEncryptingCredentials : System.IdentityModel.Tokens.SecurityTokenDescriptor -&gt; System.IdentityModel.Tokens.EncryptingCredentials" Usage="saml2SecurityTokenHandler.GetEncryptingCredentials tokenDescriptor" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.EncryptingCredentials</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tokenDescriptor" Type="System.IdentityModel.Tokens.SecurityTokenDescriptor" />
      </Parameters>
      <Docs>
        <param name="tokenDescriptor"><span data-ttu-id="81a7e-247">从 Scope 对象中检索某个范围加密凭据。</span><span class="sxs-lookup"><span data-stu-id="81a7e-247">Retrieves some scope encrypting credentials from the Scope object.</span></span></param>
        <summary><span data-ttu-id="81a7e-248">获取标记的加密凭据。</span><span class="sxs-lookup"><span data-stu-id="81a7e-248">Gets the token encrypting credentials.</span></span> <span data-ttu-id="81a7e-249">重写此方法以更改标记的加密凭据。</span><span class="sxs-lookup"><span data-stu-id="81a7e-249">Override this method to change the token encrypting credentials.</span></span></summary>
        <returns><span data-ttu-id="81a7e-250">表示标志加密凭据的 <see cref="T:System.IdentityModel.Tokens.EncryptingCredentials" />。</span><span class="sxs-lookup"><span data-stu-id="81a7e-250">An <see cref="T:System.IdentityModel.Tokens.EncryptingCredentials" /> that represents the token encrypting credentials.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="81a7e-251">默认实现从的属性中检索加密凭据 <xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.EncryptingCredentials%2A> `tokenDescriptor` 。</span><span class="sxs-lookup"><span data-stu-id="81a7e-251">The default implementation retrieves the encrypting credentials from the <xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.EncryptingCredentials%2A> property of the `tokenDescriptor`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="81a7e-252"><paramref name="tokenDescriptor" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="81a7e-252"><paramref name="tokenDescriptor" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IdentityModel.Tokens.SecurityTokenException"><span data-ttu-id="81a7e-253">从标记描述符检索的加密凭据是不对称的。</span><span class="sxs-lookup"><span data-stu-id="81a7e-253">The encrypting credentials retrieved from the token descriptor are asymmetric.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetSigningCredentials">
      <MemberSignature Language="C#" Value="protected virtual System.IdentityModel.Tokens.SigningCredentials GetSigningCredentials (System.IdentityModel.Tokens.SecurityTokenDescriptor tokenDescriptor);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.IdentityModel.Tokens.SigningCredentials GetSigningCredentials(class System.IdentityModel.Tokens.SecurityTokenDescriptor tokenDescriptor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.GetSigningCredentials(System.IdentityModel.Tokens.SecurityTokenDescriptor)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetSigningCredentials (tokenDescriptor As SecurityTokenDescriptor) As SigningCredentials" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::IdentityModel::Tokens::SigningCredentials ^ GetSigningCredentials(System::IdentityModel::Tokens::SecurityTokenDescriptor ^ tokenDescriptor);" />
      <MemberSignature Language="F#" Value="abstract member GetSigningCredentials : System.IdentityModel.Tokens.SecurityTokenDescriptor -&gt; System.IdentityModel.Tokens.SigningCredentials&#xA;override this.GetSigningCredentials : System.IdentityModel.Tokens.SecurityTokenDescriptor -&gt; System.IdentityModel.Tokens.SigningCredentials" Usage="saml2SecurityTokenHandler.GetSigningCredentials tokenDescriptor" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SigningCredentials</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tokenDescriptor" Type="System.IdentityModel.Tokens.SecurityTokenDescriptor" />
      </Parameters>
      <Docs>
        <param name="tokenDescriptor"><span data-ttu-id="81a7e-254">标记描述符。</span><span class="sxs-lookup"><span data-stu-id="81a7e-254">The token descriptor.</span></span></param>
        <summary><span data-ttu-id="81a7e-255">获取用于对断言进行签名的凭据。</span><span class="sxs-lookup"><span data-stu-id="81a7e-255">Gets the credentials for signing the assertion.</span></span></summary>
        <returns><span data-ttu-id="81a7e-256">表示签名断言凭据的 <see cref="T:System.IdentityModel.Tokens.SigningCredentials" />。</span><span class="sxs-lookup"><span data-stu-id="81a7e-256">A <see cref="T:System.IdentityModel.Tokens.SigningCredentials" /> that represents the credentials for signing the assertion.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="81a7e-257">用作安全令牌的 SAML2 断言应进行签名。</span><span class="sxs-lookup"><span data-stu-id="81a7e-257">SAML2 assertions used as security tokens should be signed.</span></span>  
  
 <span data-ttu-id="81a7e-258">默认实现使用 <xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.SigningCredentials%2A> 的属性 `tokenDescriptor` 来检索凭据。</span><span class="sxs-lookup"><span data-stu-id="81a7e-258">The default implementation uses the <xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.SigningCredentials%2A> property of the `tokenDescriptor` to retrieve the credentials.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="81a7e-259"><paramref name="tokenDescriptor" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="81a7e-259"><paramref name="tokenDescriptor" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetTokenReplayCacheEntryExpirationTime">
      <MemberSignature Language="C#" Value="protected virtual DateTime GetTokenReplayCacheEntryExpirationTime (System.IdentityModel.Tokens.Saml2SecurityToken token);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance valuetype System.DateTime GetTokenReplayCacheEntryExpirationTime(class System.IdentityModel.Tokens.Saml2SecurityToken token) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.GetTokenReplayCacheEntryExpirationTime(System.IdentityModel.Tokens.Saml2SecurityToken)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetTokenReplayCacheEntryExpirationTime (token As Saml2SecurityToken) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual DateTime GetTokenReplayCacheEntryExpirationTime(System::IdentityModel::Tokens::Saml2SecurityToken ^ token);" />
      <MemberSignature Language="F#" Value="abstract member GetTokenReplayCacheEntryExpirationTime : System.IdentityModel.Tokens.Saml2SecurityToken -&gt; DateTime&#xA;override this.GetTokenReplayCacheEntryExpirationTime : System.IdentityModel.Tokens.Saml2SecurityToken -&gt; DateTime" Usage="saml2SecurityTokenHandler.GetTokenReplayCacheEntryExpirationTime token" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="System.IdentityModel.Tokens.Saml2SecurityToken" />
      </Parameters>
      <Docs>
        <param name="token"><span data-ttu-id="81a7e-260">返回过期时间的标记。</span><span class="sxs-lookup"><span data-stu-id="81a7e-260">The token for which to return the expiration time.</span></span></param>
        <summary><span data-ttu-id="81a7e-261">返回直到应在标记重播缓存中保留的标记的时间。</span><span class="sxs-lookup"><span data-stu-id="81a7e-261">Returns the time until which the token should be held in the token replay cache.</span></span></summary>
        <returns><span data-ttu-id="81a7e-262">一个 <see cref="T:System.DateTime" />，表示过期时间。</span><span class="sxs-lookup"><span data-stu-id="81a7e-262">A <see cref="T:System.DateTime" /> that represents the expiration time.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="81a7e-263">默认情况下，此方法返回 SAML 条件的 NotOnOrAfter （如果存在）。</span><span class="sxs-lookup"><span data-stu-id="81a7e-263">By default, this method returns the NotOnOrAfter of the SAML Condition if present.</span></span>  
  
 <span data-ttu-id="81a7e-264">如果该值不存在，则返回第一个 SubjectConfirmationData 的 NotOnOrAfter。</span><span class="sxs-lookup"><span data-stu-id="81a7e-264">If that value does not exist, it returns the NotOnOrAfter of the first SubjectConfirmationData.</span></span>  
  
 <span data-ttu-id="81a7e-265">此函数将永远不会从当前时间 (<xref:System.DateTime.Now%2A>) TokenReplayCacheExpirationPeriod 返回值。</span><span class="sxs-lookup"><span data-stu-id="81a7e-265">This function will never return a value further from the current time (<xref:System.DateTime.Now%2A>) than Configuration.TokenReplayCacheExpirationPeriod.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="81a7e-266"><paramref name="token" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="81a7e-266"><paramref name="token" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetTokenTypeIdentifiers">
      <MemberSignature Language="C#" Value="public override string[] GetTokenTypeIdentifiers ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string[] GetTokenTypeIdentifiers() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.GetTokenTypeIdentifiers" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetTokenTypeIdentifiers () As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::String ^&gt; ^ GetTokenTypeIdentifiers();" />
      <MemberSignature Language="F#" Value="override this.GetTokenTypeIdentifiers : unit -&gt; string[]" Usage="saml2SecurityTokenHandler.GetTokenTypeIdentifiers " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="81a7e-267">获取处理程序支持的标记的类型标识符。</span><span class="sxs-lookup"><span data-stu-id="81a7e-267">Gets the token type identifier(s) supported by this handler.</span></span></summary>
        <returns><span data-ttu-id="81a7e-268">包含此处理程序支持的该标记的类型标识符的字符串数组。</span><span class="sxs-lookup"><span data-stu-id="81a7e-268">An array of strings that contains the token type identifier(s) supported by this handler.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyInfoSerializer">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Selectors.SecurityTokenSerializer KeyInfoSerializer { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IdentityModel.Selectors.SecurityTokenSerializer KeyInfoSerializer" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.KeyInfoSerializer" />
      <MemberSignature Language="VB.NET" Value="Public Property KeyInfoSerializer As SecurityTokenSerializer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IdentityModel::Selectors::SecurityTokenSerializer ^ KeyInfoSerializer { System::IdentityModel::Selectors::SecurityTokenSerializer ^ get(); void set(System::IdentityModel::Selectors::SecurityTokenSerializer ^ value); };" />
      <MemberSignature Language="F#" Value="member this.KeyInfoSerializer : System.IdentityModel.Selectors.SecurityTokenSerializer with get, set" Usage="System.IdentityModel.Tokens.Saml2SecurityTokenHandler.KeyInfoSerializer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Selectors.SecurityTokenSerializer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="81a7e-269">获取或设置用于序列化和反序列化键标识程序的安全令牌序列化程序。</span><span class="sxs-lookup"><span data-stu-id="81a7e-269">Gets or sets the security token serializer that is used to serialize and deserialize key identifiers.</span></span></summary>
        <value><span data-ttu-id="81a7e-270">一个表示序列化程序的 <see cref="T:System.IdentityModel.Selectors.SecurityTokenSerializer" />。</span><span class="sxs-lookup"><span data-stu-id="81a7e-270">A <see cref="T:System.IdentityModel.Selectors.SecurityTokenSerializer" /> that represents the serializer.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="81a7e-271">序列化和反序列化 <xref:System.IdentityModel.Tokens.SecurityKeyIdentifier> 对象。</span><span class="sxs-lookup"><span data-stu-id="81a7e-271">Serializes and deserializes <xref:System.IdentityModel.Tokens.SecurityKeyIdentifier> objects.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="81a7e-272">尝试将该值设置为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="81a7e-272">An attempt to set the value to <see langword="null" /> occurs.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="LoadCustomConfiguration">
      <MemberSignature Language="C#" Value="public override void LoadCustomConfiguration (System.Xml.XmlNodeList customConfigElements);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void LoadCustomConfiguration(class System.Xml.XmlNodeList customConfigElements) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.LoadCustomConfiguration(System.Xml.XmlNodeList)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub LoadCustomConfiguration (customConfigElements As XmlNodeList)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void LoadCustomConfiguration(System::Xml::XmlNodeList ^ customConfigElements);" />
      <MemberSignature Language="F#" Value="override this.LoadCustomConfiguration : System.Xml.XmlNodeList -&gt; unit" Usage="saml2SecurityTokenHandler.LoadCustomConfiguration customConfigElements" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="customConfigElements" Type="System.Xml.XmlNodeList" />
      </Parameters>
      <Docs>
        <param name="customConfigElements"><span data-ttu-id="81a7e-273"><see cref="T:System.Xml.XmlNodeList" /> 指定 SAML 标志身份验证要求。</span><span class="sxs-lookup"><span data-stu-id="81a7e-273">An <see cref="T:System.Xml.XmlNodeList" /> that specifies the SAML token authentication requirements.</span></span></param>
        <summary><span data-ttu-id="81a7e-274">从 XML 加载自定义的配置。</span><span class="sxs-lookup"><span data-stu-id="81a7e-274">Loads custom configuration from XML.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="81a7e-275"><paramref name="customConfigElements" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="81a7e-275"><paramref name="customConfigElements" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="81a7e-276"><paramref name="customConfigElements" /> 中指定的配置无效。</span><span class="sxs-lookup"><span data-stu-id="81a7e-276">The configuration specified in <paramref name="customConfigElements" /> is not valid.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="NormalizeAuthenticationContextClassReference">
      <MemberSignature Language="C#" Value="protected virtual string NormalizeAuthenticationContextClassReference (string saml2AuthenticationContextClassReference);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string NormalizeAuthenticationContextClassReference(string saml2AuthenticationContextClassReference) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.NormalizeAuthenticationContextClassReference(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function NormalizeAuthenticationContextClassReference (saml2AuthenticationContextClassReference As String) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ NormalizeAuthenticationContextClassReference(System::String ^ saml2AuthenticationContextClassReference);" />
      <MemberSignature Language="F#" Value="abstract member NormalizeAuthenticationContextClassReference : string -&gt; string&#xA;override this.NormalizeAuthenticationContextClassReference : string -&gt; string" Usage="saml2SecurityTokenHandler.NormalizeAuthenticationContextClassReference saml2AuthenticationContextClassReference" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="saml2AuthenticationContextClassReference" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="saml2AuthenticationContextClassReference"><span data-ttu-id="81a7e-277">一个字符串，此字符串表示 System.IdentityModel.Tokens.Saml2Constants.AuthenticationContextClasses 常数之一。</span><span class="sxs-lookup"><span data-stu-id="81a7e-277">A string representing one of the System.IdentityModel.Tokens.Saml2Constants.AuthenticationContextClasses constants.</span></span></param>
        <summary><span data-ttu-id="81a7e-278">返回与 SAML 身份验证上下文类引用匹配的规范化的值。</span><span class="sxs-lookup"><span data-stu-id="81a7e-278">Returns the normalized value matching a SAML authentication context class reference.</span></span></summary>
        <returns><span data-ttu-id="81a7e-279">一个包含规范化值的字符串。</span><span class="sxs-lookup"><span data-stu-id="81a7e-279">A string that contains the normalized value.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessAttributeStatement">
      <MemberSignature Language="C#" Value="protected virtual void ProcessAttributeStatement (System.IdentityModel.Tokens.Saml2AttributeStatement statement, System.Security.Claims.ClaimsIdentity subject, string issuer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ProcessAttributeStatement(class System.IdentityModel.Tokens.Saml2AttributeStatement statement, class System.Security.Claims.ClaimsIdentity subject, string issuer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ProcessAttributeStatement(System.IdentityModel.Tokens.Saml2AttributeStatement,System.Security.Claims.ClaimsIdentity,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub ProcessAttributeStatement (statement As Saml2AttributeStatement, subject As ClaimsIdentity, issuer As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void ProcessAttributeStatement(System::IdentityModel::Tokens::Saml2AttributeStatement ^ statement, System::Security::Claims::ClaimsIdentity ^ subject, System::String ^ issuer);" />
      <MemberSignature Language="F#" Value="abstract member ProcessAttributeStatement : System.IdentityModel.Tokens.Saml2AttributeStatement * System.Security.Claims.ClaimsIdentity * string -&gt; unit&#xA;override this.ProcessAttributeStatement : System.IdentityModel.Tokens.Saml2AttributeStatement * System.Security.Claims.ClaimsIdentity * string -&gt; unit" Usage="saml2SecurityTokenHandler.ProcessAttributeStatement (statement, subject, issuer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="statement" Type="System.IdentityModel.Tokens.Saml2AttributeStatement" />
        <Parameter Name="subject" Type="System.Security.Claims.ClaimsIdentity" />
        <Parameter Name="issuer" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="statement"><span data-ttu-id="81a7e-280">从 <see cref="T:System.IdentityModel.Tokens.Saml2AttributeStatement" /> 生成声明。</span><span class="sxs-lookup"><span data-stu-id="81a7e-280">The <see cref="T:System.IdentityModel.Tokens.Saml2AttributeStatement" /> from which the claims are created.</span></span></param>
        <param name="subject"><span data-ttu-id="81a7e-281">向其添加声明的主题。</span><span class="sxs-lookup"><span data-stu-id="81a7e-281">The subject to which the claims are added.</span></span></param>
        <param name="issuer"><span data-ttu-id="81a7e-282">发行人。</span><span class="sxs-lookup"><span data-stu-id="81a7e-282">The issuer.</span></span></param>
        <summary><span data-ttu-id="81a7e-283">从 SAML 2.0 特性语句中创建声明并将它们添加到指定主题。</span><span class="sxs-lookup"><span data-stu-id="81a7e-283">Creates claims from a SAML 2.0 attribute statement and adds them to the specified subject.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="81a7e-284">创建的声明将添加到主题中。</span><span class="sxs-lookup"><span data-stu-id="81a7e-284">The created claims are added to the subject.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="81a7e-285"><paramref name="statement" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="81a7e-285"><paramref name="statement" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="81a7e-286">- 或 -</span><span class="sxs-lookup"><span data-stu-id="81a7e-286">-or-</span></span> 
 <span data-ttu-id="81a7e-287"><paramref name="subject" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="81a7e-287"><paramref name="subject" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ProcessAuthenticationStatement">
      <MemberSignature Language="C#" Value="protected virtual void ProcessAuthenticationStatement (System.IdentityModel.Tokens.Saml2AuthenticationStatement statement, System.Security.Claims.ClaimsIdentity subject, string issuer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ProcessAuthenticationStatement(class System.IdentityModel.Tokens.Saml2AuthenticationStatement statement, class System.Security.Claims.ClaimsIdentity subject, string issuer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ProcessAuthenticationStatement(System.IdentityModel.Tokens.Saml2AuthenticationStatement,System.Security.Claims.ClaimsIdentity,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub ProcessAuthenticationStatement (statement As Saml2AuthenticationStatement, subject As ClaimsIdentity, issuer As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void ProcessAuthenticationStatement(System::IdentityModel::Tokens::Saml2AuthenticationStatement ^ statement, System::Security::Claims::ClaimsIdentity ^ subject, System::String ^ issuer);" />
      <MemberSignature Language="F#" Value="abstract member ProcessAuthenticationStatement : System.IdentityModel.Tokens.Saml2AuthenticationStatement * System.Security.Claims.ClaimsIdentity * string -&gt; unit&#xA;override this.ProcessAuthenticationStatement : System.IdentityModel.Tokens.Saml2AuthenticationStatement * System.Security.Claims.ClaimsIdentity * string -&gt; unit" Usage="saml2SecurityTokenHandler.ProcessAuthenticationStatement (statement, subject, issuer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="statement" Type="System.IdentityModel.Tokens.Saml2AuthenticationStatement" />
        <Parameter Name="subject" Type="System.Security.Claims.ClaimsIdentity" />
        <Parameter Name="issuer" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="statement"><span data-ttu-id="81a7e-288">从 <see cref="T:System.IdentityModel.Tokens.Saml2AuthenticationStatement" /> 生成声明。</span><span class="sxs-lookup"><span data-stu-id="81a7e-288">The <see cref="T:System.IdentityModel.Tokens.Saml2AuthenticationStatement" /> from which the claims are created.</span></span></param>
        <param name="subject"><span data-ttu-id="81a7e-289">向其添加声明的主题。</span><span class="sxs-lookup"><span data-stu-id="81a7e-289">The subject to which the claims are added.</span></span></param>
        <param name="issuer"><span data-ttu-id="81a7e-290">发行人。</span><span class="sxs-lookup"><span data-stu-id="81a7e-290">The issuer.</span></span></param>
        <summary><span data-ttu-id="81a7e-291">从 SAML 2.0 身份验证语句中创建声明并将它们添加到指定主题。</span><span class="sxs-lookup"><span data-stu-id="81a7e-291">Creates claims from a SAML 2.0 authentication statement and adds them to the specified subject.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="81a7e-292"><paramref name="statement" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="81a7e-292"><paramref name="statement" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="81a7e-293">- 或 -</span><span class="sxs-lookup"><span data-stu-id="81a7e-293">-or-</span></span> 
 <span data-ttu-id="81a7e-294"><paramref name="subject" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="81a7e-294"><paramref name="subject" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ProcessAuthorizationDecisionStatement">
      <MemberSignature Language="C#" Value="protected virtual void ProcessAuthorizationDecisionStatement (System.IdentityModel.Tokens.Saml2AuthorizationDecisionStatement statement, System.Security.Claims.ClaimsIdentity subject, string issuer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ProcessAuthorizationDecisionStatement(class System.IdentityModel.Tokens.Saml2AuthorizationDecisionStatement statement, class System.Security.Claims.ClaimsIdentity subject, string issuer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ProcessAuthorizationDecisionStatement(System.IdentityModel.Tokens.Saml2AuthorizationDecisionStatement,System.Security.Claims.ClaimsIdentity,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub ProcessAuthorizationDecisionStatement (statement As Saml2AuthorizationDecisionStatement, subject As ClaimsIdentity, issuer As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void ProcessAuthorizationDecisionStatement(System::IdentityModel::Tokens::Saml2AuthorizationDecisionStatement ^ statement, System::Security::Claims::ClaimsIdentity ^ subject, System::String ^ issuer);" />
      <MemberSignature Language="F#" Value="abstract member ProcessAuthorizationDecisionStatement : System.IdentityModel.Tokens.Saml2AuthorizationDecisionStatement * System.Security.Claims.ClaimsIdentity * string -&gt; unit&#xA;override this.ProcessAuthorizationDecisionStatement : System.IdentityModel.Tokens.Saml2AuthorizationDecisionStatement * System.Security.Claims.ClaimsIdentity * string -&gt; unit" Usage="saml2SecurityTokenHandler.ProcessAuthorizationDecisionStatement (statement, subject, issuer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="statement" Type="System.IdentityModel.Tokens.Saml2AuthorizationDecisionStatement" />
        <Parameter Name="subject" Type="System.Security.Claims.ClaimsIdentity" />
        <Parameter Name="issuer" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="statement"><span data-ttu-id="81a7e-295">从 <see cref="T:System.IdentityModel.Tokens.Saml2AuthorizationDecisionStatement" /> 生成声明。</span><span class="sxs-lookup"><span data-stu-id="81a7e-295">The <see cref="T:System.IdentityModel.Tokens.Saml2AuthorizationDecisionStatement" /> from which the claims are created.</span></span></param>
        <param name="subject"><span data-ttu-id="81a7e-296">向其添加声明的主题。</span><span class="sxs-lookup"><span data-stu-id="81a7e-296">The subject to which the claims are added.</span></span></param>
        <param name="issuer"><span data-ttu-id="81a7e-297">发行人。</span><span class="sxs-lookup"><span data-stu-id="81a7e-297">The issuer.</span></span></param>
        <summary><span data-ttu-id="81a7e-298">从 SAML 2.0 授权决定语句中创建声明并将它们添加到指定主题。</span><span class="sxs-lookup"><span data-stu-id="81a7e-298">Creates claims from a SAML 2.0 authorization decision statement and adds them to the specified subject.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="81a7e-299">默认实现不执行任何操作。</span><span class="sxs-lookup"><span data-stu-id="81a7e-299">The default implementation does nothing.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessSamlSubject">
      <MemberSignature Language="C#" Value="protected virtual void ProcessSamlSubject (System.IdentityModel.Tokens.Saml2Subject assertionSubject, System.Security.Claims.ClaimsIdentity subject, string issuer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ProcessSamlSubject(class System.IdentityModel.Tokens.Saml2Subject assertionSubject, class System.Security.Claims.ClaimsIdentity subject, string issuer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ProcessSamlSubject(System.IdentityModel.Tokens.Saml2Subject,System.Security.Claims.ClaimsIdentity,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub ProcessSamlSubject (assertionSubject As Saml2Subject, subject As ClaimsIdentity, issuer As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void ProcessSamlSubject(System::IdentityModel::Tokens::Saml2Subject ^ assertionSubject, System::Security::Claims::ClaimsIdentity ^ subject, System::String ^ issuer);" />
      <MemberSignature Language="F#" Value="abstract member ProcessSamlSubject : System.IdentityModel.Tokens.Saml2Subject * System.Security.Claims.ClaimsIdentity * string -&gt; unit&#xA;override this.ProcessSamlSubject : System.IdentityModel.Tokens.Saml2Subject * System.Security.Claims.ClaimsIdentity * string -&gt; unit" Usage="saml2SecurityTokenHandler.ProcessSamlSubject (assertionSubject, subject, issuer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assertionSubject" Type="System.IdentityModel.Tokens.Saml2Subject" />
        <Parameter Name="subject" Type="System.Security.Claims.ClaimsIdentity" />
        <Parameter Name="issuer" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="assertionSubject"><span data-ttu-id="81a7e-300">从 <see cref="T:System.IdentityModel.Tokens.Saml2Subject" /> 生成声明。</span><span class="sxs-lookup"><span data-stu-id="81a7e-300">The <see cref="T:System.IdentityModel.Tokens.Saml2Subject" /> from which the claims are created.</span></span></param>
        <param name="subject"><span data-ttu-id="81a7e-301">向其添加声明的主题。</span><span class="sxs-lookup"><span data-stu-id="81a7e-301">The subject to which the claims are added.</span></span></param>
        <param name="issuer"><span data-ttu-id="81a7e-302">发行人。</span><span class="sxs-lookup"><span data-stu-id="81a7e-302">The issuer.</span></span></param>
        <summary><span data-ttu-id="81a7e-303">从 SAML 2.0 主题中创建声明并将它们添加到指定主题。</span><span class="sxs-lookup"><span data-stu-id="81a7e-303">Creates claims from the SAML 2.0 subject and adds them to the specified subject.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="81a7e-304"><paramref name="statement" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="81a7e-304"><paramref name="statement" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="81a7e-305">- 或 -</span><span class="sxs-lookup"><span data-stu-id="81a7e-305">-or-</span></span> 
 <span data-ttu-id="81a7e-306"><paramref name="assertionSubject" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="81a7e-306"><paramref name="assertionSubject" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ProcessStatement">
      <MemberSignature Language="C#" Value="protected virtual void ProcessStatement (System.Collections.ObjectModel.Collection&lt;System.IdentityModel.Tokens.Saml2Statement&gt; statements, System.Security.Claims.ClaimsIdentity subject, string issuer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ProcessStatement(class System.Collections.ObjectModel.Collection`1&lt;class System.IdentityModel.Tokens.Saml2Statement&gt; statements, class System.Security.Claims.ClaimsIdentity subject, string issuer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ProcessStatement(System.Collections.ObjectModel.Collection{System.IdentityModel.Tokens.Saml2Statement},System.Security.Claims.ClaimsIdentity,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub ProcessStatement (statements As Collection(Of Saml2Statement), subject As ClaimsIdentity, issuer As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void ProcessStatement(System::Collections::ObjectModel::Collection&lt;System::IdentityModel::Tokens::Saml2Statement ^&gt; ^ statements, System::Security::Claims::ClaimsIdentity ^ subject, System::String ^ issuer);" />
      <MemberSignature Language="F#" Value="abstract member ProcessStatement : System.Collections.ObjectModel.Collection&lt;System.IdentityModel.Tokens.Saml2Statement&gt; * System.Security.Claims.ClaimsIdentity * string -&gt; unit&#xA;override this.ProcessStatement : System.Collections.ObjectModel.Collection&lt;System.IdentityModel.Tokens.Saml2Statement&gt; * System.Security.Claims.ClaimsIdentity * string -&gt; unit" Usage="saml2SecurityTokenHandler.ProcessStatement (statements, subject, issuer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="statements" Type="System.Collections.ObjectModel.Collection&lt;System.IdentityModel.Tokens.Saml2Statement&gt;" />
        <Parameter Name="subject" Type="System.Security.Claims.ClaimsIdentity" />
        <Parameter Name="issuer" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="statements"><span data-ttu-id="81a7e-307">创建的声明中的 <see cref="T:System.IdentityModel.Tokens.Saml2Statement" /> 的集合。</span><span class="sxs-lookup"><span data-stu-id="81a7e-307">A collection of <see cref="T:System.IdentityModel.Tokens.Saml2Statement" /> from which the claims are created.</span></span></param>
        <param name="subject"><span data-ttu-id="81a7e-308">向其添加声明的主题。</span><span class="sxs-lookup"><span data-stu-id="81a7e-308">The subject to which the claims are added.</span></span></param>
        <param name="issuer"><span data-ttu-id="81a7e-309">发行人。</span><span class="sxs-lookup"><span data-stu-id="81a7e-309">The issuer.</span></span></param>
        <summary><span data-ttu-id="81a7e-310">从 SAML 2.0 语句的集合中创建声明并将它们添加到指定主题。</span><span class="sxs-lookup"><span data-stu-id="81a7e-310">Creates claims from a collection of SAML 2.0 statements and adds them to the specified subject.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="81a7e-311"><paramref name="subject" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="81a7e-311"><paramref name="subject" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReadAction">
      <MemberSignature Language="C#" Value="protected virtual System.IdentityModel.Tokens.Saml2Action ReadAction (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.IdentityModel.Tokens.Saml2Action ReadAction(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadAction(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function ReadAction (reader As XmlReader) As Saml2Action" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::IdentityModel::Tokens::Saml2Action ^ ReadAction(System::Xml::XmlReader ^ reader);" />
      <MemberSignature Language="F#" Value="abstract member ReadAction : System.Xml.XmlReader -&gt; System.IdentityModel.Tokens.Saml2Action&#xA;override this.ReadAction : System.Xml.XmlReader -&gt; System.IdentityModel.Tokens.Saml2Action" Usage="saml2SecurityTokenHandler.ReadAction reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.Saml2Action</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="81a7e-312">在要读取的元素指定的 <see cref="T:System.Xml.XmlReader" />。</span><span class="sxs-lookup"><span data-stu-id="81a7e-312">An <see cref="T:System.Xml.XmlReader" /> positioned at the element to read.</span></span></param>
        <summary><span data-ttu-id="81a7e-313">读取 &lt;saml:Action&gt; 元素。</span><span class="sxs-lookup"><span data-stu-id="81a7e-313">Reads the &lt;saml:Action&gt; element.</span></span></summary>
        <returns><span data-ttu-id="81a7e-314">一个 <see cref="T:System.IdentityModel.Tokens.Saml2Action" />，表示所读取的活动元素。</span><span class="sxs-lookup"><span data-stu-id="81a7e-314">A <see cref="T:System.IdentityModel.Tokens.Saml2Action" /> that represents the Action element that is read.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="81a7e-315"><paramref name="reader" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="81a7e-315"><paramref name="reader" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReadAdvice">
      <MemberSignature Language="C#" Value="protected virtual System.IdentityModel.Tokens.Saml2Advice ReadAdvice (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.IdentityModel.Tokens.Saml2Advice ReadAdvice(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadAdvice(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function ReadAdvice (reader As XmlReader) As Saml2Advice" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::IdentityModel::Tokens::Saml2Advice ^ ReadAdvice(System::Xml::XmlReader ^ reader);" />
      <MemberSignature Language="F#" Value="abstract member ReadAdvice : System.Xml.XmlReader -&gt; System.IdentityModel.Tokens.Saml2Advice&#xA;override this.ReadAdvice : System.Xml.XmlReader -&gt; System.IdentityModel.Tokens.Saml2Advice" Usage="saml2SecurityTokenHandler.ReadAdvice reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.Saml2Advice</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="81a7e-316">在要读取的元素指定的 <see cref="T:System.Xml.XmlReader" />。</span><span class="sxs-lookup"><span data-stu-id="81a7e-316">An <see cref="T:System.Xml.XmlReader" /> positioned at the element to read.</span></span></param>
        <summary><span data-ttu-id="81a7e-317">读取 &lt;saml:Advice&gt; 元素。</span><span class="sxs-lookup"><span data-stu-id="81a7e-317">Reads the &lt;saml:Advice&gt; element.</span></span></summary>
        <returns><span data-ttu-id="81a7e-318">一个 <see cref="T:System.IdentityModel.Tokens.Saml2Advice" />，表示所读取的建议元素。</span><span class="sxs-lookup"><span data-stu-id="81a7e-318">A <see cref="T:System.IdentityModel.Tokens.Saml2Advice" /> that represents the Advice element that is read.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="81a7e-319">建议元素具有可扩展性点，以允许包含非 SAML 2.0 命名空间中的 XML 元素。</span><span class="sxs-lookup"><span data-stu-id="81a7e-319">The Advice element has an extensibility point to allow XML elements from non-SAML 2.0 namespaces to be included.</span></span> <span data-ttu-id="81a7e-320">默认情况下，由于可能会忽略这些建议，而不会影响断言的语义，因此将忽略任何此类元素。</span><span class="sxs-lookup"><span data-stu-id="81a7e-320">By default, because the Advice may be ignored without affecting the semantics of the assertion, any such elements are ignored.</span></span> <span data-ttu-id="81a7e-321">若要处理这些元素的处理，请重写此方法。</span><span class="sxs-lookup"><span data-stu-id="81a7e-321">To handle the processing of those elements, override this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="81a7e-322"><paramref name="reader" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="81a7e-322"><paramref name="reader" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReadAssertion">
      <MemberSignature Language="C#" Value="protected virtual System.IdentityModel.Tokens.Saml2Assertion ReadAssertion (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.IdentityModel.Tokens.Saml2Assertion ReadAssertion(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadAssertion(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function ReadAssertion (reader As XmlReader) As Saml2Assertion" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::IdentityModel::Tokens::Saml2Assertion ^ ReadAssertion(System::Xml::XmlReader ^ reader);" />
      <MemberSignature Language="F#" Value="abstract member ReadAssertion : System.Xml.XmlReader -&gt; System.IdentityModel.Tokens.Saml2Assertion&#xA;override this.ReadAssertion : System.Xml.XmlReader -&gt; System.IdentityModel.Tokens.Saml2Assertion" Usage="saml2SecurityTokenHandler.ReadAssertion reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.Saml2Assertion</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="81a7e-323">在要读取的元素指定的 <see cref="T:System.Xml.XmlReader" />。</span><span class="sxs-lookup"><span data-stu-id="81a7e-323">An <see cref="T:System.Xml.XmlReader" /> positioned at the element to read.</span></span></param>
        <summary><span data-ttu-id="81a7e-324">读取 &lt;saml:Assertion&gt; 元素。</span><span class="sxs-lookup"><span data-stu-id="81a7e-324">Reads the &lt;saml:Assertion&gt; element.</span></span></summary>
        <returns><span data-ttu-id="81a7e-325">一个 <see cref="T:System.IdentityModel.Tokens.Saml2Assertion" />，表示所读取的断言元素。</span><span class="sxs-lookup"><span data-stu-id="81a7e-325">A <see cref="T:System.IdentityModel.Tokens.Saml2Assertion" /> that represents the Assertion element that is read.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="81a7e-326"><paramref name="reader" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="81a7e-326"><paramref name="reader" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReadAttribute">
      <MemberSignature Language="C#" Value="protected virtual System.IdentityModel.Tokens.Saml2Attribute ReadAttribute (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.IdentityModel.Tokens.Saml2Attribute ReadAttribute(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadAttribute(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function ReadAttribute (reader As XmlReader) As Saml2Attribute" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::IdentityModel::Tokens::Saml2Attribute ^ ReadAttribute(System::Xml::XmlReader ^ reader);" />
      <MemberSignature Language="F#" Value="abstract member ReadAttribute : System.Xml.XmlReader -&gt; System.IdentityModel.Tokens.Saml2Attribute&#xA;override this.ReadAttribute : System.Xml.XmlReader -&gt; System.IdentityModel.Tokens.Saml2Attribute" Usage="saml2SecurityTokenHandler.ReadAttribute reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.Saml2Attribute</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="81a7e-327">在要读取的元素指定的 <see cref="T:System.Xml.XmlReader" />。</span><span class="sxs-lookup"><span data-stu-id="81a7e-327">An <see cref="T:System.Xml.XmlReader" /> positioned at the element to read.</span></span></param>
        <summary><span data-ttu-id="81a7e-328">读取 &lt;saml:Attribute&gt; 元素。</span><span class="sxs-lookup"><span data-stu-id="81a7e-328">Reads the &lt;saml:Attribute&gt; element.</span></span></summary>
        <returns><span data-ttu-id="81a7e-329">一个 <see cref="T:System.IdentityModel.Tokens.Saml2Assertion" />，表示所读取的断言元素。</span><span class="sxs-lookup"><span data-stu-id="81a7e-329">A <see cref="T:System.IdentityModel.Tokens.Saml2Assertion" /> that represents the Assertion element that is read.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="81a7e-330">默认实现要求 Attribute 元素的内容是一个简单的字符串。</span><span class="sxs-lookup"><span data-stu-id="81a7e-330">The default implementation requires that the content of the Attribute element be a simple string.</span></span> <span data-ttu-id="81a7e-331">若要处理除 xs： string 以外的已声明简单类型的复杂内容或内容，请重写此方法。</span><span class="sxs-lookup"><span data-stu-id="81a7e-331">To handle complex content or content of declared simple types other than xs:string, override this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="81a7e-332"><paramref name="reader" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="81a7e-332"><paramref name="reader" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReadAttributeStatement">
      <MemberSignature Language="C#" Value="protected virtual System.IdentityModel.Tokens.Saml2AttributeStatement ReadAttributeStatement (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.IdentityModel.Tokens.Saml2AttributeStatement ReadAttributeStatement(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadAttributeStatement(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function ReadAttributeStatement (reader As XmlReader) As Saml2AttributeStatement" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::IdentityModel::Tokens::Saml2AttributeStatement ^ ReadAttributeStatement(System::Xml::XmlReader ^ reader);" />
      <MemberSignature Language="F#" Value="abstract member ReadAttributeStatement : System.Xml.XmlReader -&gt; System.IdentityModel.Tokens.Saml2AttributeStatement&#xA;override this.ReadAttributeStatement : System.Xml.XmlReader -&gt; System.IdentityModel.Tokens.Saml2AttributeStatement" Usage="saml2SecurityTokenHandler.ReadAttributeStatement reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.Saml2AttributeStatement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="81a7e-333">在要读取的元素指定的 <see cref="T:System.Xml.XmlReader" />。</span><span class="sxs-lookup"><span data-stu-id="81a7e-333">An <see cref="T:System.Xml.XmlReader" /> positioned at the element to read.</span></span></param>
        <summary><span data-ttu-id="81a7e-334">读取 &lt;saml:AttributeStatement&gt; 元素或 &lt;saml:Statement&gt; 元素，后者指定 saml:AttributeStatementType 的 xsi:type。</span><span class="sxs-lookup"><span data-stu-id="81a7e-334">Reads the &lt;saml:AttributeStatement&gt; element, or a &lt;saml:Statement&gt; element that specifies an xsi:type of saml:AttributeStatementType.</span></span></summary>
        <returns><span data-ttu-id="81a7e-335">一个 <see cref="T:System.IdentityModel.Tokens.Saml2AttributeStatement" />，表示所读取的元素。</span><span class="sxs-lookup"><span data-stu-id="81a7e-335">A <see cref="T:System.IdentityModel.Tokens.Saml2AttributeStatement" /> that represents the element that is read.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="81a7e-336"><paramref name="reader" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="81a7e-336"><paramref name="reader" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReadAttributeValue">
      <MemberSignature Language="C#" Value="protected virtual string ReadAttributeValue (System.Xml.XmlReader reader, System.IdentityModel.Tokens.Saml2Attribute attribute);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string ReadAttributeValue(class System.Xml.XmlReader reader, class System.IdentityModel.Tokens.Saml2Attribute attribute) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadAttributeValue(System.Xml.XmlReader,System.IdentityModel.Tokens.Saml2Attribute)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function ReadAttributeValue (reader As XmlReader, attribute As Saml2Attribute) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ ReadAttributeValue(System::Xml::XmlReader ^ reader, System::IdentityModel::Tokens::Saml2Attribute ^ attribute);" />
      <MemberSignature Language="F#" Value="abstract member ReadAttributeValue : System.Xml.XmlReader * System.IdentityModel.Tokens.Saml2Attribute -&gt; string&#xA;override this.ReadAttributeValue : System.Xml.XmlReader * System.IdentityModel.Tokens.Saml2Attribute -&gt; string" Usage="saml2SecurityTokenHandler.ReadAttributeValue (reader, attribute)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
        <Parameter Name="attribute" Type="System.IdentityModel.Tokens.Saml2Attribute" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="81a7e-337">在要读取的元素指定的 <see cref="T:System.Xml.XmlReader" />。</span><span class="sxs-lookup"><span data-stu-id="81a7e-337">An <see cref="T:System.Xml.XmlReader" /> positioned at the element to read.</span></span></param>
        <param name="attribute"><span data-ttu-id="81a7e-338">正被读取的属性。</span><span class="sxs-lookup"><span data-stu-id="81a7e-338">The attribute being read.</span></span></param>
        <summary><span data-ttu-id="81a7e-339">读取特性值。</span><span class="sxs-lookup"><span data-stu-id="81a7e-339">Reads an attribute value.</span></span></summary>
        <returns><span data-ttu-id="81a7e-340">包含特性值的字符串。</span><span class="sxs-lookup"><span data-stu-id="81a7e-340">A string that contains the attribute value.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="81a7e-341"><paramref name="reader" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="81a7e-341"><paramref name="reader" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReadAudienceRestriction">
      <MemberSignature Language="C#" Value="protected virtual System.IdentityModel.Tokens.Saml2AudienceRestriction ReadAudienceRestriction (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.IdentityModel.Tokens.Saml2AudienceRestriction ReadAudienceRestriction(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadAudienceRestriction(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function ReadAudienceRestriction (reader As XmlReader) As Saml2AudienceRestriction" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::IdentityModel::Tokens::Saml2AudienceRestriction ^ ReadAudienceRestriction(System::Xml::XmlReader ^ reader);" />
      <MemberSignature Language="F#" Value="abstract member ReadAudienceRestriction : System.Xml.XmlReader -&gt; System.IdentityModel.Tokens.Saml2AudienceRestriction&#xA;override this.ReadAudienceRestriction : System.Xml.XmlReader -&gt; System.IdentityModel.Tokens.Saml2AudienceRestriction" Usage="saml2SecurityTokenHandler.ReadAudienceRestriction reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.Saml2AudienceRestriction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="81a7e-342">在要读取的元素指定的 <see cref="T:System.Xml.XmlReader" />。</span><span class="sxs-lookup"><span data-stu-id="81a7e-342">An <see cref="T:System.Xml.XmlReader" /> positioned at the element to read.</span></span></param>
        <summary><span data-ttu-id="81a7e-343">读取 &lt;saml:AudienceRestriction&gt; 元素或 &lt;saml:Condition&gt; 元素，后者指定 saml:AudienceRestrictionType 的 xsi: type。</span><span class="sxs-lookup"><span data-stu-id="81a7e-343">Reads the &lt;saml:AudienceRestriction&gt; element or a &lt;saml:Condition&gt; element that specifies an xsi:type of saml:AudienceRestrictionType.</span></span></summary>
        <returns><span data-ttu-id="81a7e-344">一个 <see cref="T:System.IdentityModel.Tokens.Saml2AudienceRestriction" />，表示所读取的元素。</span><span class="sxs-lookup"><span data-stu-id="81a7e-344">A <see cref="T:System.IdentityModel.Tokens.Saml2AudienceRestriction" /> that represents the element that was read.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="81a7e-345"><paramref name="reader" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="81a7e-345"><paramref name="reader" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReadAuthenticationContext">
      <MemberSignature Language="C#" Value="protected virtual System.IdentityModel.Tokens.Saml2AuthenticationContext ReadAuthenticationContext (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.IdentityModel.Tokens.Saml2AuthenticationContext ReadAuthenticationContext(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadAuthenticationContext(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function ReadAuthenticationContext (reader As XmlReader) As Saml2AuthenticationContext" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::IdentityModel::Tokens::Saml2AuthenticationContext ^ ReadAuthenticationContext(System::Xml::XmlReader ^ reader);" />
      <MemberSignature Language="F#" Value="abstract member ReadAuthenticationContext : System.Xml.XmlReader -&gt; System.IdentityModel.Tokens.Saml2AuthenticationContext&#xA;override this.ReadAuthenticationContext : System.Xml.XmlReader -&gt; System.IdentityModel.Tokens.Saml2AuthenticationContext" Usage="saml2SecurityTokenHandler.ReadAuthenticationContext reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.Saml2AuthenticationContext</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="81a7e-346">在要读取的元素指定的 <see cref="T:System.Xml.XmlReader" />。</span><span class="sxs-lookup"><span data-stu-id="81a7e-346">An <see cref="T:System.Xml.XmlReader" /> positioned at the element to read.</span></span></param>
        <summary><span data-ttu-id="81a7e-347">读取 &lt;saml:AuthnContext&gt; 元素。</span><span class="sxs-lookup"><span data-stu-id="81a7e-347">Reads the &lt;saml:AuthnContext&gt; element.</span></span></summary>
        <returns><span data-ttu-id="81a7e-348">一个 <see cref="T:System.IdentityModel.Tokens.Saml2AuthenticationContext" />，表示所读取的 AuthnContext 元素。</span><span class="sxs-lookup"><span data-stu-id="81a7e-348">A <see cref="T:System.IdentityModel.Tokens.Saml2AuthenticationContext" /> that represents the AuthnContext element that is read.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="81a7e-349">默认实现不处理可选的 \<saml:AuthnContextDecl> 元素。</span><span class="sxs-lookup"><span data-stu-id="81a7e-349">The default implementation does not handle the optional \<saml:AuthnContextDecl> element.</span></span> <span data-ttu-id="81a7e-350">若要处理按值身份验证上下文声明，请重写此方法。</span><span class="sxs-lookup"><span data-stu-id="81a7e-350">To handle by-value authentication context declarations, override this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="81a7e-351"><paramref name="reader" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="81a7e-351"><paramref name="reader" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReadAuthenticationStatement">
      <MemberSignature Language="C#" Value="protected virtual System.IdentityModel.Tokens.Saml2AuthenticationStatement ReadAuthenticationStatement (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.IdentityModel.Tokens.Saml2AuthenticationStatement ReadAuthenticationStatement(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadAuthenticationStatement(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function ReadAuthenticationStatement (reader As XmlReader) As Saml2AuthenticationStatement" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::IdentityModel::Tokens::Saml2AuthenticationStatement ^ ReadAuthenticationStatement(System::Xml::XmlReader ^ reader);" />
      <MemberSignature Language="F#" Value="abstract member ReadAuthenticationStatement : System.Xml.XmlReader -&gt; System.IdentityModel.Tokens.Saml2AuthenticationStatement&#xA;override this.ReadAuthenticationStatement : System.Xml.XmlReader -&gt; System.IdentityModel.Tokens.Saml2AuthenticationStatement" Usage="saml2SecurityTokenHandler.ReadAuthenticationStatement reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.Saml2AuthenticationStatement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="81a7e-352">在要读取的元素指定的 <see cref="T:System.Xml.XmlReader" />。</span><span class="sxs-lookup"><span data-stu-id="81a7e-352">An <see cref="T:System.Xml.XmlReader" /> positioned at the element to read.</span></span></param>
        <summary><span data-ttu-id="81a7e-353">读取 &lt;saml:AuthnStatement&gt; 元素或 &lt;saml:Statement&gt; 元素，后者指定 saml:AuthnStatementType 的 xsi:type。</span><span class="sxs-lookup"><span data-stu-id="81a7e-353">Reads the &lt;saml:AuthnStatement&gt; element or a &lt;saml:Statement&gt; element that specifies an xsi:type of saml:AuthnStatementType.</span></span></summary>
        <returns><span data-ttu-id="81a7e-354">一个 <see cref="T:System.IdentityModel.Tokens.Saml2AuthenticationStatement" />，表示所读取的元素。</span><span class="sxs-lookup"><span data-stu-id="81a7e-354">A <see cref="T:System.IdentityModel.Tokens.Saml2AuthenticationStatement" /> that represents the element that is read.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="81a7e-355"><paramref name="reader" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="81a7e-355"><paramref name="reader" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReadAuthorizationDecisionStatement">
      <MemberSignature Language="C#" Value="protected virtual System.IdentityModel.Tokens.Saml2AuthorizationDecisionStatement ReadAuthorizationDecisionStatement (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.IdentityModel.Tokens.Saml2AuthorizationDecisionStatement ReadAuthorizationDecisionStatement(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadAuthorizationDecisionStatement(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function ReadAuthorizationDecisionStatement (reader As XmlReader) As Saml2AuthorizationDecisionStatement" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::IdentityModel::Tokens::Saml2AuthorizationDecisionStatement ^ ReadAuthorizationDecisionStatement(System::Xml::XmlReader ^ reader);" />
      <MemberSignature Language="F#" Value="abstract member ReadAuthorizationDecisionStatement : System.Xml.XmlReader -&gt; System.IdentityModel.Tokens.Saml2AuthorizationDecisionStatement&#xA;override this.ReadAuthorizationDecisionStatement : System.Xml.XmlReader -&gt; System.IdentityModel.Tokens.Saml2AuthorizationDecisionStatement" Usage="saml2SecurityTokenHandler.ReadAuthorizationDecisionStatement reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.Saml2AuthorizationDecisionStatement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="81a7e-356">在要读取的元素指定的 <see cref="T:System.Xml.XmlReader" />。</span><span class="sxs-lookup"><span data-stu-id="81a7e-356">An <see cref="T:System.Xml.XmlReader" /> positioned at the element to read.</span></span></param>
        <summary><span data-ttu-id="81a7e-357">读取 &lt;saml:AuthzDecisionStatement&gt; 元素或 &lt;saml:Statement&gt; 元素，后者指定 saml:AuthzDecisionStatementType 的 xsi:type。</span><span class="sxs-lookup"><span data-stu-id="81a7e-357">Reads the &lt;saml:AuthzDecisionStatement&gt; element or a &lt;saml:Statement&gt; element that specifies an xsi:type of saml:AuthzDecisionStatementType.</span></span></summary>
        <returns><span data-ttu-id="81a7e-358">一个 <see cref="T:System.IdentityModel.Tokens.Saml2AuthorizationDecisionStatement" />，表示所读取的元素。</span><span class="sxs-lookup"><span data-stu-id="81a7e-358">A <see cref="T:System.IdentityModel.Tokens.Saml2AuthorizationDecisionStatement" /> that represents the element that is read.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="81a7e-359"><paramref name="reader" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="81a7e-359"><paramref name="reader" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReadConditions">
      <MemberSignature Language="C#" Value="protected virtual System.IdentityModel.Tokens.Saml2Conditions ReadConditions (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.IdentityModel.Tokens.Saml2Conditions ReadConditions(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadConditions(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function ReadConditions (reader As XmlReader) As Saml2Conditions" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::IdentityModel::Tokens::Saml2Conditions ^ ReadConditions(System::Xml::XmlReader ^ reader);" />
      <MemberSignature Language="F#" Value="abstract member ReadConditions : System.Xml.XmlReader -&gt; System.IdentityModel.Tokens.Saml2Conditions&#xA;override this.ReadConditions : System.Xml.XmlReader -&gt; System.IdentityModel.Tokens.Saml2Conditions" Usage="saml2SecurityTokenHandler.ReadConditions reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.Saml2Conditions</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="81a7e-360">在要读取的元素指定的 <see cref="T:System.Xml.XmlReader" />。</span><span class="sxs-lookup"><span data-stu-id="81a7e-360">An <see cref="T:System.Xml.XmlReader" /> positioned at the element to read.</span></span></param>
        <summary><span data-ttu-id="81a7e-361">读取 &lt;saml:Conditions&gt; 元素。</span><span class="sxs-lookup"><span data-stu-id="81a7e-361">Reads the &lt;saml:Conditions&gt; element.</span></span></summary>
        <returns><span data-ttu-id="81a7e-362">一个 <see cref="T:System.IdentityModel.Tokens.Saml2Conditions" />，表示所读取的条件元素。</span><span class="sxs-lookup"><span data-stu-id="81a7e-362">A <see cref="T:System.IdentityModel.Tokens.Saml2Conditions" /> that represents the Conditions element that is read.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="81a7e-363">若要处理自定义 \<saml:Condition> 元素，请重写此方法。</span><span class="sxs-lookup"><span data-stu-id="81a7e-363">To handle custom \<saml:Condition> elements, override this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="81a7e-364"><paramref name="reader" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="81a7e-364"><paramref name="reader" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Xml.XmlException"><span data-ttu-id="81a7e-365"><paramref name="reader" /> 不放置在条件元素上。</span><span class="sxs-lookup"><span data-stu-id="81a7e-365"><paramref name="reader" /> is not positioned at a Conditions element.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReadEncryptedId">
      <MemberSignature Language="C#" Value="protected virtual System.IdentityModel.Tokens.Saml2NameIdentifier ReadEncryptedId (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.IdentityModel.Tokens.Saml2NameIdentifier ReadEncryptedId(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadEncryptedId(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function ReadEncryptedId (reader As XmlReader) As Saml2NameIdentifier" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::IdentityModel::Tokens::Saml2NameIdentifier ^ ReadEncryptedId(System::Xml::XmlReader ^ reader);" />
      <MemberSignature Language="F#" Value="abstract member ReadEncryptedId : System.Xml.XmlReader -&gt; System.IdentityModel.Tokens.Saml2NameIdentifier&#xA;override this.ReadEncryptedId : System.Xml.XmlReader -&gt; System.IdentityModel.Tokens.Saml2NameIdentifier" Usage="saml2SecurityTokenHandler.ReadEncryptedId reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.Saml2NameIdentifier</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="81a7e-366">指向 EncryptedId 元素的 <see cref="T:System.Xml.XmlReader" />。</span><span class="sxs-lookup"><span data-stu-id="81a7e-366">An <see cref="T:System.Xml.XmlReader" /> pointing at the EncryptedId element.</span></span></param>
        <summary><span data-ttu-id="81a7e-367">读取 &lt;saml:EncryptedId&gt; 元素。</span><span class="sxs-lookup"><span data-stu-id="81a7e-367">Reads the &lt;saml:EncryptedId&gt; element.</span></span></summary>
        <returns><span data-ttu-id="81a7e-368">表示读取的 EncryptedId 元素的 <see cref="T:System.IdentityModel.Tokens.Saml2NameIdentifier" />。</span><span class="sxs-lookup"><span data-stu-id="81a7e-368">A <see cref="T:System.IdentityModel.Tokens.Saml2NameIdentifier" /> that represents the EncryptedId element that was read.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="81a7e-369"><paramref name="reader" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="81a7e-369"><paramref name="reader" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Xml.XmlException"><span data-ttu-id="81a7e-370"><paramref name="reader" /> 未定位在 EncryptedID 元素上。</span><span class="sxs-lookup"><span data-stu-id="81a7e-370"><paramref name="reader" /> is not positioned at an EncryptedID element.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReadEvidence">
      <MemberSignature Language="C#" Value="protected virtual System.IdentityModel.Tokens.Saml2Evidence ReadEvidence (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.IdentityModel.Tokens.Saml2Evidence ReadEvidence(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadEvidence(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function ReadEvidence (reader As XmlReader) As Saml2Evidence" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::IdentityModel::Tokens::Saml2Evidence ^ ReadEvidence(System::Xml::XmlReader ^ reader);" />
      <MemberSignature Language="F#" Value="abstract member ReadEvidence : System.Xml.XmlReader -&gt; System.IdentityModel.Tokens.Saml2Evidence&#xA;override this.ReadEvidence : System.Xml.XmlReader -&gt; System.IdentityModel.Tokens.Saml2Evidence" Usage="saml2SecurityTokenHandler.ReadEvidence reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.Saml2Evidence</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="81a7e-371">在要读取的元素指定的 <see cref="T:System.Xml.XmlReader" />。</span><span class="sxs-lookup"><span data-stu-id="81a7e-371">An <see cref="T:System.Xml.XmlReader" /> positioned at the element to read.</span></span></param>
        <summary><span data-ttu-id="81a7e-372">读取 &lt;saml:Evidence&gt; 元素。</span><span class="sxs-lookup"><span data-stu-id="81a7e-372">Reads the &lt;saml:Evidence&gt; element.</span></span></summary>
        <returns><span data-ttu-id="81a7e-373">一个 <see cref="T:System.IdentityModel.Tokens.Saml2Evidence" />，表示所读取的证据元素。</span><span class="sxs-lookup"><span data-stu-id="81a7e-373">A <see cref="T:System.IdentityModel.Tokens.Saml2Evidence" /> that represents the Evidence element that is read.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="81a7e-374"><paramref name="reader" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="81a7e-374"><paramref name="reader" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReadIssuer">
      <MemberSignature Language="C#" Value="protected virtual System.IdentityModel.Tokens.Saml2NameIdentifier ReadIssuer (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.IdentityModel.Tokens.Saml2NameIdentifier ReadIssuer(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadIssuer(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function ReadIssuer (reader As XmlReader) As Saml2NameIdentifier" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::IdentityModel::Tokens::Saml2NameIdentifier ^ ReadIssuer(System::Xml::XmlReader ^ reader);" />
      <MemberSignature Language="F#" Value="abstract member ReadIssuer : System.Xml.XmlReader -&gt; System.IdentityModel.Tokens.Saml2NameIdentifier&#xA;override this.ReadIssuer : System.Xml.XmlReader -&gt; System.IdentityModel.Tokens.Saml2NameIdentifier" Usage="saml2SecurityTokenHandler.ReadIssuer reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.Saml2NameIdentifier</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="81a7e-375">在要读取的元素指定的 <see cref="T:System.Xml.XmlReader" />。</span><span class="sxs-lookup"><span data-stu-id="81a7e-375">An <see cref="T:System.Xml.XmlReader" /> positioned at the element to read.</span></span></param>
        <summary><span data-ttu-id="81a7e-376">读取 &lt;saml:Issuer&gt; 元素。</span><span class="sxs-lookup"><span data-stu-id="81a7e-376">Reads the &lt;saml:Issuer&gt; element.</span></span></summary>
        <returns><span data-ttu-id="81a7e-377">一个 <see cref="T:System.IdentityModel.Tokens.Saml2NameIdentifier" />，表示所读取的颁发者元素。</span><span class="sxs-lookup"><span data-stu-id="81a7e-377">A <see cref="T:System.IdentityModel.Tokens.Saml2NameIdentifier" /> that represents the Issuer element that is read.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="81a7e-378"><paramref name="reader" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="81a7e-378"><paramref name="reader" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReadKeyIdentifierClause">
      <MemberSignature Language="C#" Value="public override System.IdentityModel.Tokens.SecurityKeyIdentifierClause ReadKeyIdentifierClause (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IdentityModel.Tokens.SecurityKeyIdentifierClause ReadKeyIdentifierClause(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadKeyIdentifierClause(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadKeyIdentifierClause (reader As XmlReader) As SecurityKeyIdentifierClause" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::IdentityModel::Tokens::SecurityKeyIdentifierClause ^ ReadKeyIdentifierClause(System::Xml::XmlReader ^ reader);" />
      <MemberSignature Language="F#" Value="override this.ReadKeyIdentifierClause : System.Xml.XmlReader -&gt; System.IdentityModel.Tokens.SecurityKeyIdentifierClause" Usage="saml2SecurityTokenHandler.ReadKeyIdentifierClause reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityKeyIdentifierClause</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="81a7e-379">要从其读取的 <see cref="T:System.Xml.XmlReader" />。</span><span class="sxs-lookup"><span data-stu-id="81a7e-379">The <see cref="T:System.Xml.XmlReader" /> with which to read.</span></span></param>
        <summary><span data-ttu-id="81a7e-380">读取 SecurityKeyIdentifierClause。</span><span class="sxs-lookup"><span data-stu-id="81a7e-380">Reads a SecurityKeyIdentifierClause.</span></span></summary>
        <returns><span data-ttu-id="81a7e-381">一个 <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />，表示安全密钥标识符字句。</span><span class="sxs-lookup"><span data-stu-id="81a7e-381">A <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> that represents the security key identifier clause.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="81a7e-382"><paramref name="reader" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="81a7e-382"><paramref name="reader" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReadNameId">
      <MemberSignature Language="C#" Value="protected virtual System.IdentityModel.Tokens.Saml2NameIdentifier ReadNameId (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.IdentityModel.Tokens.Saml2NameIdentifier ReadNameId(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadNameId(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function ReadNameId (reader As XmlReader) As Saml2NameIdentifier" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::IdentityModel::Tokens::Saml2NameIdentifier ^ ReadNameId(System::Xml::XmlReader ^ reader);" />
      <MemberSignature Language="F#" Value="abstract member ReadNameId : System.Xml.XmlReader -&gt; System.IdentityModel.Tokens.Saml2NameIdentifier&#xA;override this.ReadNameId : System.Xml.XmlReader -&gt; System.IdentityModel.Tokens.Saml2NameIdentifier" Usage="saml2SecurityTokenHandler.ReadNameId reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.Saml2NameIdentifier</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="81a7e-383">将 <see cref="T:System.Xml.XmlReader" /> 置于 NameID 元素位置。</span><span class="sxs-lookup"><span data-stu-id="81a7e-383">An <see cref="T:System.Xml.XmlReader" /> positioned at a NameID element.</span></span></param>
        <summary><span data-ttu-id="81a7e-384">读取 &lt;saml:NameID&gt; 元素。</span><span class="sxs-lookup"><span data-stu-id="81a7e-384">Reads the &lt;saml:NameID&gt; element.</span></span></summary>
        <returns><span data-ttu-id="81a7e-385">表示读取的 NameID 元素的 <see cref="T:System.IdentityModel.Tokens.Saml2NameIdentifier" />。</span><span class="sxs-lookup"><span data-stu-id="81a7e-385">A <see cref="T:System.IdentityModel.Tokens.Saml2NameIdentifier" /> that represents the NameID element that was read.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="81a7e-386"><paramref name="reader" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="81a7e-386"><paramref name="reader" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReadNameIdType">
      <MemberSignature Language="C#" Value="protected virtual System.IdentityModel.Tokens.Saml2NameIdentifier ReadNameIdType (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.IdentityModel.Tokens.Saml2NameIdentifier ReadNameIdType(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadNameIdType(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function ReadNameIdType (reader As XmlReader) As Saml2NameIdentifier" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::IdentityModel::Tokens::Saml2NameIdentifier ^ ReadNameIdType(System::Xml::XmlReader ^ reader);" />
      <MemberSignature Language="F#" Value="abstract member ReadNameIdType : System.Xml.XmlReader -&gt; System.IdentityModel.Tokens.Saml2NameIdentifier&#xA;override this.ReadNameIdType : System.Xml.XmlReader -&gt; System.IdentityModel.Tokens.Saml2NameIdentifier" Usage="saml2SecurityTokenHandler.ReadNameIdType reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.Saml2NameIdentifier</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="81a7e-387">将 <see cref="T:System.Xml.XmlReader" /> 置于 NameID 类型的位置。</span><span class="sxs-lookup"><span data-stu-id="81a7e-387">An <see cref="T:System.Xml.XmlReader" /> positioned at NameID type.</span></span></param>
        <summary><span data-ttu-id="81a7e-388">&lt;Issuer&gt; 和 &lt;NameID&gt; 都是 NameIDType。</span><span class="sxs-lookup"><span data-stu-id="81a7e-388">Both &lt;Issuer&gt; and &lt;NameID&gt; are of NameIDType.</span></span> <span data-ttu-id="81a7e-389">此方法读取这些元素之一的内容。</span><span class="sxs-lookup"><span data-stu-id="81a7e-389">This method reads the content of either one of those elements.</span></span></summary>
        <returns><span data-ttu-id="81a7e-390">一个从 XML 构建的 <see cref="T:System.IdentityModel.Tokens.Saml2NameIdentifier" />。</span><span class="sxs-lookup"><span data-stu-id="81a7e-390">A <see cref="T:System.IdentityModel.Tokens.Saml2NameIdentifier" /> constructed from the XML.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="81a7e-391"><paramref name="reader" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="81a7e-391"><paramref name="reader" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReadProxyRestriction">
      <MemberSignature Language="C#" Value="protected virtual System.IdentityModel.Tokens.Saml2ProxyRestriction ReadProxyRestriction (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.IdentityModel.Tokens.Saml2ProxyRestriction ReadProxyRestriction(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadProxyRestriction(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function ReadProxyRestriction (reader As XmlReader) As Saml2ProxyRestriction" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::IdentityModel::Tokens::Saml2ProxyRestriction ^ ReadProxyRestriction(System::Xml::XmlReader ^ reader);" />
      <MemberSignature Language="F#" Value="abstract member ReadProxyRestriction : System.Xml.XmlReader -&gt; System.IdentityModel.Tokens.Saml2ProxyRestriction&#xA;override this.ReadProxyRestriction : System.Xml.XmlReader -&gt; System.IdentityModel.Tokens.Saml2ProxyRestriction" Usage="saml2SecurityTokenHandler.ReadProxyRestriction reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.Saml2ProxyRestriction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="81a7e-392">在要读取的元素指定的 <see cref="T:System.Xml.XmlReader" />。</span><span class="sxs-lookup"><span data-stu-id="81a7e-392">An <see cref="T:System.Xml.XmlReader" /> positioned at the element to read.</span></span></param>
        <summary><span data-ttu-id="81a7e-393">读取 &lt;saml:ProxyRestriction&gt; 元素或 &lt;saml:Condition&gt; 元素，后者指定 saml:ProxyRestrictionType 的 xsi: type。</span><span class="sxs-lookup"><span data-stu-id="81a7e-393">Reads the &lt;saml:ProxyRestriction&gt; element, or a &lt;saml:Condition&gt; element that specifies an xsi:type of saml:ProxyRestrictionType.</span></span></summary>
        <returns><span data-ttu-id="81a7e-394">一个 <see cref="T:System.IdentityModel.Tokens.Saml2ProxyRestriction" />，表示所读取的元素。</span><span class="sxs-lookup"><span data-stu-id="81a7e-394">A <see cref="T:System.IdentityModel.Tokens.Saml2ProxyRestriction" /> that represents the element that was read.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="81a7e-395">在默认实现中，Count 特性的最大值限制为 int32.maxvalue。</span><span class="sxs-lookup"><span data-stu-id="81a7e-395">In the default implementation, the maximum value of the Count attribute is limited to Int32.MaxValue.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="81a7e-396"><paramref name="reader" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="81a7e-396"><paramref name="reader" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReadSigningKeyInfo">
      <MemberSignature Language="C#" Value="protected virtual System.IdentityModel.Tokens.SecurityKeyIdentifier ReadSigningKeyInfo (System.Xml.XmlReader reader, System.IdentityModel.Tokens.Saml2Assertion assertion);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.IdentityModel.Tokens.SecurityKeyIdentifier ReadSigningKeyInfo(class System.Xml.XmlReader reader, class System.IdentityModel.Tokens.Saml2Assertion assertion) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadSigningKeyInfo(System.Xml.XmlReader,System.IdentityModel.Tokens.Saml2Assertion)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function ReadSigningKeyInfo (reader As XmlReader, assertion As Saml2Assertion) As SecurityKeyIdentifier" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::IdentityModel::Tokens::SecurityKeyIdentifier ^ ReadSigningKeyInfo(System::Xml::XmlReader ^ reader, System::IdentityModel::Tokens::Saml2Assertion ^ assertion);" />
      <MemberSignature Language="F#" Value="abstract member ReadSigningKeyInfo : System.Xml.XmlReader * System.IdentityModel.Tokens.Saml2Assertion -&gt; System.IdentityModel.Tokens.SecurityKeyIdentifier&#xA;override this.ReadSigningKeyInfo : System.Xml.XmlReader * System.IdentityModel.Tokens.Saml2Assertion -&gt; System.IdentityModel.Tokens.SecurityKeyIdentifier" Usage="saml2SecurityTokenHandler.ReadSigningKeyInfo (reader, assertion)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityKeyIdentifier</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
        <Parameter Name="assertion" Type="System.IdentityModel.Tokens.Saml2Assertion" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="81a7e-397">可以放置在 ds:KeyInfo 元素位置的 XmlReader。</span><span class="sxs-lookup"><span data-stu-id="81a7e-397">An XmlReader that can be positioned at a ds:KeyInfo element.</span></span></param>
        <param name="assertion"><span data-ttu-id="81a7e-398">已检查签名的断言。</span><span class="sxs-lookup"><span data-stu-id="81a7e-398">The assertion that is having the signature checked.</span></span></param>
        <summary><span data-ttu-id="81a7e-399">反序列化 SAML Signing KeyInfo。</span><span class="sxs-lookup"><span data-stu-id="81a7e-399">Deserializes the SAML Signing KeyInfo.</span></span></summary>
        <returns><span data-ttu-id="81a7e-400">用来表示用作检查签名的密钥的 <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" />。</span><span class="sxs-lookup"><span data-stu-id="81a7e-400">The <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" /> that represents the key to use to check the signature.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="81a7e-401"><paramref name="reader" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="81a7e-401"><paramref name="reader" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReadStatement">
      <MemberSignature Language="C#" Value="protected virtual System.IdentityModel.Tokens.Saml2Statement ReadStatement (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.IdentityModel.Tokens.Saml2Statement ReadStatement(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadStatement(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function ReadStatement (reader As XmlReader) As Saml2Statement" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::IdentityModel::Tokens::Saml2Statement ^ ReadStatement(System::Xml::XmlReader ^ reader);" />
      <MemberSignature Language="F#" Value="abstract member ReadStatement : System.Xml.XmlReader -&gt; System.IdentityModel.Tokens.Saml2Statement&#xA;override this.ReadStatement : System.Xml.XmlReader -&gt; System.IdentityModel.Tokens.Saml2Statement" Usage="saml2SecurityTokenHandler.ReadStatement reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.Saml2Statement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="81a7e-402">在要读取的元素指定的 <see cref="T:System.Xml.XmlReader" />。</span><span class="sxs-lookup"><span data-stu-id="81a7e-402">An <see cref="T:System.Xml.XmlReader" /> positioned at the element to read.</span></span></param>
        <summary><span data-ttu-id="81a7e-403">读取 &lt;saml:Statement&gt; 元素。</span><span class="sxs-lookup"><span data-stu-id="81a7e-403">Reads the &lt;saml:Statement&gt; element.</span></span></summary>
        <returns><span data-ttu-id="81a7e-404">表示读取的 Statement 元素的 <see cref="T:System.IdentityModel.Tokens.Saml2Statement" />。</span><span class="sxs-lookup"><span data-stu-id="81a7e-404">A <see cref="T:System.IdentityModel.Tokens.Saml2Statement" /> that represents the Statement element that was read.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="81a7e-405">默认实现仅处理指定 xsi： type 的 saml： AttributeStatementType、saml： AuthnStatementType 和 saml： AuthzDecisionStatementType 的语句元素。</span><span class="sxs-lookup"><span data-stu-id="81a7e-405">The default implementation only handles Statement elements that specify an xsi:type of saml:AttributeStatementType, saml:AuthnStatementType, and saml:AuthzDecisionStatementType.</span></span> <span data-ttu-id="81a7e-406">若要处理自定义语句，请重写此方法。</span><span class="sxs-lookup"><span data-stu-id="81a7e-406">To handle custom statements, override this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="81a7e-407"><paramref name="reader" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="81a7e-407"><paramref name="reader" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReadSubject">
      <MemberSignature Language="C#" Value="protected virtual System.IdentityModel.Tokens.Saml2Subject ReadSubject (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.IdentityModel.Tokens.Saml2Subject ReadSubject(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadSubject(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function ReadSubject (reader As XmlReader) As Saml2Subject" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::IdentityModel::Tokens::Saml2Subject ^ ReadSubject(System::Xml::XmlReader ^ reader);" />
      <MemberSignature Language="F#" Value="abstract member ReadSubject : System.Xml.XmlReader -&gt; System.IdentityModel.Tokens.Saml2Subject&#xA;override this.ReadSubject : System.Xml.XmlReader -&gt; System.IdentityModel.Tokens.Saml2Subject" Usage="saml2SecurityTokenHandler.ReadSubject reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.Saml2Subject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="81a7e-408">在要读取的元素指定的 <see cref="T:System.Xml.XmlReader" />。</span><span class="sxs-lookup"><span data-stu-id="81a7e-408">An <see cref="T:System.Xml.XmlReader" /> positioned at the element to read.</span></span></param>
        <summary><span data-ttu-id="81a7e-409">读取 &lt;saml:Subject&gt; 元素。</span><span class="sxs-lookup"><span data-stu-id="81a7e-409">Reads the &lt;saml:Subject&gt; element.</span></span></summary>
        <returns><span data-ttu-id="81a7e-410">表示读取的 Subject 元素的 <see cref="T:System.IdentityModel.Tokens.Saml2Subject" />。</span><span class="sxs-lookup"><span data-stu-id="81a7e-410">A <see cref="T:System.IdentityModel.Tokens.Saml2Subject" /> that represents the Subject element that was read.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="81a7e-411">默认实现不处理可选的 \<EncryptedID> 元素。</span><span class="sxs-lookup"><span data-stu-id="81a7e-411">The default implementation does not handle the optional \<EncryptedID> element.</span></span> <span data-ttu-id="81a7e-412">若要处理使用者中的加密 Id，请重写此方法。</span><span class="sxs-lookup"><span data-stu-id="81a7e-412">To handle encrypted IDs in the Subject, override this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="81a7e-413"><paramref name="reader" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="81a7e-413"><paramref name="reader" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReadSubjectConfirmation">
      <MemberSignature Language="C#" Value="protected virtual System.IdentityModel.Tokens.Saml2SubjectConfirmation ReadSubjectConfirmation (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.IdentityModel.Tokens.Saml2SubjectConfirmation ReadSubjectConfirmation(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadSubjectConfirmation(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function ReadSubjectConfirmation (reader As XmlReader) As Saml2SubjectConfirmation" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::IdentityModel::Tokens::Saml2SubjectConfirmation ^ ReadSubjectConfirmation(System::Xml::XmlReader ^ reader);" />
      <MemberSignature Language="F#" Value="abstract member ReadSubjectConfirmation : System.Xml.XmlReader -&gt; System.IdentityModel.Tokens.Saml2SubjectConfirmation&#xA;override this.ReadSubjectConfirmation : System.Xml.XmlReader -&gt; System.IdentityModel.Tokens.Saml2SubjectConfirmation" Usage="saml2SecurityTokenHandler.ReadSubjectConfirmation reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.Saml2SubjectConfirmation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="81a7e-414">在要读取的元素指定的 <see cref="T:System.Xml.XmlReader" />。</span><span class="sxs-lookup"><span data-stu-id="81a7e-414">An <see cref="T:System.Xml.XmlReader" /> positioned at the element to read.</span></span></param>
        <summary><span data-ttu-id="81a7e-415">读取 &lt;SubjectConfirmation&gt; 元素。</span><span class="sxs-lookup"><span data-stu-id="81a7e-415">Reads the &lt;SubjectConfirmation&gt; element.</span></span></summary>
        <returns><span data-ttu-id="81a7e-416">表示读取的 SubjectConfirmation 元素的 <see cref="T:System.IdentityModel.Tokens.Saml2SubjectConfirmation" />。</span><span class="sxs-lookup"><span data-stu-id="81a7e-416">A <see cref="T:System.IdentityModel.Tokens.Saml2SubjectConfirmation" /> that represents the SubjectConfirmation element that was read.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="81a7e-417"><paramref name="reader" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="81a7e-417"><paramref name="reader" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReadSubjectConfirmationData">
      <MemberSignature Language="C#" Value="protected virtual System.IdentityModel.Tokens.Saml2SubjectConfirmationData ReadSubjectConfirmationData (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.IdentityModel.Tokens.Saml2SubjectConfirmationData ReadSubjectConfirmationData(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadSubjectConfirmationData(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function ReadSubjectConfirmationData (reader As XmlReader) As Saml2SubjectConfirmationData" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::IdentityModel::Tokens::Saml2SubjectConfirmationData ^ ReadSubjectConfirmationData(System::Xml::XmlReader ^ reader);" />
      <MemberSignature Language="F#" Value="abstract member ReadSubjectConfirmationData : System.Xml.XmlReader -&gt; System.IdentityModel.Tokens.Saml2SubjectConfirmationData&#xA;override this.ReadSubjectConfirmationData : System.Xml.XmlReader -&gt; System.IdentityModel.Tokens.Saml2SubjectConfirmationData" Usage="saml2SecurityTokenHandler.ReadSubjectConfirmationData reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.Saml2SubjectConfirmationData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="81a7e-418">在要读取的元素指定的 <see cref="T:System.Xml.XmlReader" />。</span><span class="sxs-lookup"><span data-stu-id="81a7e-418">An <see cref="T:System.Xml.XmlReader" /> positioned at the element to read.</span></span></param>
        <summary><span data-ttu-id="81a7e-419">读取 &lt;saml:SubjectConfirmationData&gt; 元素。</span><span class="sxs-lookup"><span data-stu-id="81a7e-419">Reads the &lt;saml:SubjectConfirmationData&gt; element.</span></span></summary>
        <returns><span data-ttu-id="81a7e-420">表示读取的 SubjectConfirmationData 元素的 <see cref="T:System.IdentityModel.Tokens.Saml2SubjectConfirmationData" />。</span><span class="sxs-lookup"><span data-stu-id="81a7e-420">A <see cref="T:System.IdentityModel.Tokens.Saml2SubjectConfirmationData" /> that represents the SubjectConfirmationData element that was read.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="81a7e-421">默认实现处理 unextended 元素以及扩展类型 saml： KeyInfoConfirmationDataType。</span><span class="sxs-lookup"><span data-stu-id="81a7e-421">The default implementation handles the unextended element as well as the extended type saml:KeyInfoConfirmationDataType.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="81a7e-422"><paramref name="reader" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="81a7e-422"><paramref name="reader" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReadSubjectId">
      <MemberSignature Language="C#" Value="protected virtual System.IdentityModel.Tokens.Saml2NameIdentifier ReadSubjectId (System.Xml.XmlReader reader, string parentElement);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.IdentityModel.Tokens.Saml2NameIdentifier ReadSubjectId(class System.Xml.XmlReader reader, string parentElement) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadSubjectId(System.Xml.XmlReader,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function ReadSubjectId (reader As XmlReader, parentElement As String) As Saml2NameIdentifier" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::IdentityModel::Tokens::Saml2NameIdentifier ^ ReadSubjectId(System::Xml::XmlReader ^ reader, System::String ^ parentElement);" />
      <MemberSignature Language="F#" Value="abstract member ReadSubjectId : System.Xml.XmlReader * string -&gt; System.IdentityModel.Tokens.Saml2NameIdentifier&#xA;override this.ReadSubjectId : System.Xml.XmlReader * string -&gt; System.IdentityModel.Tokens.Saml2NameIdentifier" Usage="saml2SecurityTokenHandler.ReadSubjectId (reader, parentElement)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.Saml2NameIdentifier</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
        <Parameter Name="parentElement" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="81a7e-423">将 <see cref="T:System.Xml.XmlReader" /> 置于主题 ID XML 的位置。</span><span class="sxs-lookup"><span data-stu-id="81a7e-423">An <see cref="T:System.Xml.XmlReader" /> positioned at the Subject ID XML.</span></span></param>
        <param name="parentElement"><span data-ttu-id="81a7e-424">包含此“主题” ID 的父元素。</span><span class="sxs-lookup"><span data-stu-id="81a7e-424">The parent element that contains this Subject ID.</span></span></param>
        <summary><span data-ttu-id="81a7e-425">此方法处理针对 ID 的 &lt;Subject&gt; 和 &lt;SubjectConfirmation&gt; 元素使用的构造。</span><span class="sxs-lookup"><span data-stu-id="81a7e-425">This method handles the construct used in the &lt;Subject&gt; and &lt;SubjectConfirmation&gt; elements for ID.</span></span></summary>
        <returns><span data-ttu-id="81a7e-426">一个从 XML 构建的 <see cref="T:System.IdentityModel.Tokens.Saml2NameIdentifier" />。</span><span class="sxs-lookup"><span data-stu-id="81a7e-426">A <see cref="T:System.IdentityModel.Tokens.Saml2NameIdentifier" /> constructed from the XML.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="81a7e-427"><paramref name="reader" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="81a7e-427"><paramref name="reader" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReadSubjectKeyInfo">
      <MemberSignature Language="C#" Value="protected virtual System.IdentityModel.Tokens.SecurityKeyIdentifier ReadSubjectKeyInfo (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.IdentityModel.Tokens.SecurityKeyIdentifier ReadSubjectKeyInfo(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadSubjectKeyInfo(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function ReadSubjectKeyInfo (reader As XmlReader) As SecurityKeyIdentifier" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::IdentityModel::Tokens::SecurityKeyIdentifier ^ ReadSubjectKeyInfo(System::Xml::XmlReader ^ reader);" />
      <MemberSignature Language="F#" Value="abstract member ReadSubjectKeyInfo : System.Xml.XmlReader -&gt; System.IdentityModel.Tokens.SecurityKeyIdentifier&#xA;override this.ReadSubjectKeyInfo : System.Xml.XmlReader -&gt; System.IdentityModel.Tokens.SecurityKeyIdentifier" Usage="saml2SecurityTokenHandler.ReadSubjectKeyInfo reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityKeyIdentifier</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="81a7e-428">位于 &lt;ds:KeyInfo&gt; 元素中的 <see cref="T:System.Xml.XmlReader" />。</span><span class="sxs-lookup"><span data-stu-id="81a7e-428">An <see cref="T:System.Xml.XmlReader" /> positioned at a &lt;ds:KeyInfo&gt; element.</span></span></param>
        <summary><span data-ttu-id="81a7e-429">反序列化 SAML 主题 &lt;ds:KeyInfo&gt; 元素。</span><span class="sxs-lookup"><span data-stu-id="81a7e-429">Deserializes the SAML Subject &lt;ds:KeyInfo&gt; element.</span></span></summary>
        <returns><span data-ttu-id="81a7e-430">一个 <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" />，表示 &lt;ds:KeyInfo&gt; 元素的内容。</span><span class="sxs-lookup"><span data-stu-id="81a7e-430">A <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" /> that represents the contents of the &lt;ds:KeyInfo&gt; element.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="81a7e-431"><paramref name="reader" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="81a7e-431"><paramref name="reader" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReadSubjectLocality">
      <MemberSignature Language="C#" Value="protected virtual System.IdentityModel.Tokens.Saml2SubjectLocality ReadSubjectLocality (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.IdentityModel.Tokens.Saml2SubjectLocality ReadSubjectLocality(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadSubjectLocality(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function ReadSubjectLocality (reader As XmlReader) As Saml2SubjectLocality" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::IdentityModel::Tokens::Saml2SubjectLocality ^ ReadSubjectLocality(System::Xml::XmlReader ^ reader);" />
      <MemberSignature Language="F#" Value="abstract member ReadSubjectLocality : System.Xml.XmlReader -&gt; System.IdentityModel.Tokens.Saml2SubjectLocality&#xA;override this.ReadSubjectLocality : System.Xml.XmlReader -&gt; System.IdentityModel.Tokens.Saml2SubjectLocality" Usage="saml2SecurityTokenHandler.ReadSubjectLocality reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.Saml2SubjectLocality</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="81a7e-432">在要读取的元素指定的 <see cref="T:System.Xml.XmlReader" />。</span><span class="sxs-lookup"><span data-stu-id="81a7e-432">An <see cref="T:System.Xml.XmlReader" /> positioned at the element to read.</span></span></param>
        <summary><span data-ttu-id="81a7e-433">读取 &lt;saml:SubjectLocality&gt; 元素。</span><span class="sxs-lookup"><span data-stu-id="81a7e-433">Reads the &lt;saml:SubjectLocality&gt; element.</span></span></summary>
        <returns><span data-ttu-id="81a7e-434">表示读取的 SubjectLocality 元素的 <see cref="T:System.IdentityModel.Tokens.Saml2SubjectLocality" />。</span><span class="sxs-lookup"><span data-stu-id="81a7e-434">A <see cref="T:System.IdentityModel.Tokens.Saml2SubjectLocality" /> that represents the SubjectLocality element that was read.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="81a7e-435"><paramref name="reader" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="81a7e-435"><paramref name="reader" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReadToken">
      <MemberSignature Language="C#" Value="public override System.IdentityModel.Tokens.SecurityToken ReadToken (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IdentityModel.Tokens.SecurityToken ReadToken(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadToken(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadToken (reader As XmlReader) As SecurityToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::IdentityModel::Tokens::SecurityToken ^ ReadToken(System::Xml::XmlReader ^ reader);" />
      <MemberSignature Language="F#" Value="override this.ReadToken : System.Xml.XmlReader -&gt; System.IdentityModel.Tokens.SecurityToken" Usage="saml2SecurityTokenHandler.ReadToken reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="81a7e-436">SAML 2.0 安全标志的 <see cref="T:System.Xml.XmlReader" /> 流。</span><span class="sxs-lookup"><span data-stu-id="81a7e-436">A <see cref="T:System.Xml.XmlReader" /> stream to a SAML 2.0 Security Token.</span></span></param>
        <summary><span data-ttu-id="81a7e-437">从指定流中读取 SAML 2.0 标记。</span><span class="sxs-lookup"><span data-stu-id="81a7e-437">Reads a SAML 2.0 token from the specified stream.</span></span></summary>
        <returns><span data-ttu-id="81a7e-438"><see cref="T:System.IdentityModel.Tokens.Saml2SecurityToken" /> 的一个实例。</span><span class="sxs-lookup"><span data-stu-id="81a7e-438">An instance of <see cref="T:System.IdentityModel.Tokens.Saml2SecurityToken" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="81a7e-439"><see cref="P:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration" /> 属性为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="81a7e-439">The <see cref="P:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration" /> property is <see langword="null" />.</span></span>  
  
<span data-ttu-id="81a7e-440">- 或 -</span><span class="sxs-lookup"><span data-stu-id="81a7e-440">-or-</span></span> 
<span data-ttu-id="81a7e-441">由 <see cref="P:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration.IssuerTokenResolver" /> 属性指定的配置的 <see cref="P:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration" /> 属性是 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="81a7e-441">The <see cref="P:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration.IssuerTokenResolver" /> property of the configuration specified by the <see cref="P:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration" /> property is <see langword="null" />.</span></span>  
  
<span data-ttu-id="81a7e-442">- 或 -</span><span class="sxs-lookup"><span data-stu-id="81a7e-442">-or-</span></span> 
<span data-ttu-id="81a7e-443">由 <see cref="P:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration.ServiceTokenResolver" /> 属性指定的配置的 <see cref="P:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration" /> 属性是 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="81a7e-443">The <see cref="P:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration.ServiceTokenResolver" /> property of the configuration specified by the <see cref="P:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration" /> property is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ResolveIssuerToken">
      <MemberSignature Language="C#" Value="protected virtual System.IdentityModel.Tokens.SecurityToken ResolveIssuerToken (System.IdentityModel.Tokens.Saml2Assertion assertion, System.IdentityModel.Selectors.SecurityTokenResolver issuerResolver);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.IdentityModel.Tokens.SecurityToken ResolveIssuerToken(class System.IdentityModel.Tokens.Saml2Assertion assertion, class System.IdentityModel.Selectors.SecurityTokenResolver issuerResolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ResolveIssuerToken(System.IdentityModel.Tokens.Saml2Assertion,System.IdentityModel.Selectors.SecurityTokenResolver)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function ResolveIssuerToken (assertion As Saml2Assertion, issuerResolver As SecurityTokenResolver) As SecurityToken" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::IdentityModel::Tokens::SecurityToken ^ ResolveIssuerToken(System::IdentityModel::Tokens::Saml2Assertion ^ assertion, System::IdentityModel::Selectors::SecurityTokenResolver ^ issuerResolver);" />
      <MemberSignature Language="F#" Value="abstract member ResolveIssuerToken : System.IdentityModel.Tokens.Saml2Assertion * System.IdentityModel.Selectors.SecurityTokenResolver -&gt; System.IdentityModel.Tokens.SecurityToken&#xA;override this.ResolveIssuerToken : System.IdentityModel.Tokens.Saml2Assertion * System.IdentityModel.Selectors.SecurityTokenResolver -&gt; System.IdentityModel.Tokens.SecurityToken" Usage="saml2SecurityTokenHandler.ResolveIssuerToken (assertion, issuerResolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assertion" Type="System.IdentityModel.Tokens.Saml2Assertion" />
        <Parameter Name="issuerResolver" Type="System.IdentityModel.Selectors.SecurityTokenResolver" />
      </Parameters>
      <Docs>
        <param name="assertion"><span data-ttu-id="81a7e-444">解析颁布者令牌所应用的 <see cref="T:System.IdentityModel.Tokens.Saml2Assertion" />。</span><span class="sxs-lookup"><span data-stu-id="81a7e-444">The <see cref="T:System.IdentityModel.Tokens.Saml2Assertion" /> for which the Issuer token is to be resolved.</span></span></param>
        <param name="issuerResolver"><span data-ttu-id="81a7e-445">当前与该处理程序关联的 <see cref="T:System.IdentityModel.Selectors.SecurityTokenResolver" />。</span><span class="sxs-lookup"><span data-stu-id="81a7e-445">The current <see cref="T:System.IdentityModel.Selectors.SecurityTokenResolver" /> associated with this handler.</span></span></param>
        <summary><span data-ttu-id="81a7e-446">将 Signing Key Identifier解析为 <see cref="T:System.IdentityModel.Tokens.SecurityToken" />。</span><span class="sxs-lookup"><span data-stu-id="81a7e-446">Resolves the Signing Key Identifier to a <see cref="T:System.IdentityModel.Tokens.SecurityToken" />.</span></span></summary>
        <returns><span data-ttu-id="81a7e-447">一个 <see cref="T:System.IdentityModel.Tokens.SecurityToken" /> 表示解析的安全令牌。</span><span class="sxs-lookup"><span data-stu-id="81a7e-447">A <see cref="T:System.IdentityModel.Tokens.SecurityToken" /> that represents the resolved token.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="81a7e-448"><paramref name="assertion" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="81a7e-448"><paramref name="assertion" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IdentityModel.Tokens.SecurityTokenException"><span data-ttu-id="81a7e-449">处理程序不能解析标识。</span><span class="sxs-lookup"><span data-stu-id="81a7e-449">The handler is unable to resolve the token.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ResolveSecurityKeys">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.Tokens.SecurityKey&gt; ResolveSecurityKeys (System.IdentityModel.Tokens.Saml2Assertion assertion, System.IdentityModel.Selectors.SecurityTokenResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.IdentityModel.Tokens.SecurityKey&gt; ResolveSecurityKeys(class System.IdentityModel.Tokens.Saml2Assertion assertion, class System.IdentityModel.Selectors.SecurityTokenResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ResolveSecurityKeys(System.IdentityModel.Tokens.Saml2Assertion,System.IdentityModel.Selectors.SecurityTokenResolver)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function ResolveSecurityKeys (assertion As Saml2Assertion, resolver As SecurityTokenResolver) As ReadOnlyCollection(Of SecurityKey)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Collections::ObjectModel::ReadOnlyCollection&lt;System::IdentityModel::Tokens::SecurityKey ^&gt; ^ ResolveSecurityKeys(System::IdentityModel::Tokens::Saml2Assertion ^ assertion, System::IdentityModel::Selectors::SecurityTokenResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="abstract member ResolveSecurityKeys : System.IdentityModel.Tokens.Saml2Assertion * System.IdentityModel.Selectors.SecurityTokenResolver -&gt; System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.Tokens.SecurityKey&gt;&#xA;override this.ResolveSecurityKeys : System.IdentityModel.Tokens.Saml2Assertion * System.IdentityModel.Selectors.SecurityTokenResolver -&gt; System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.Tokens.SecurityKey&gt;" Usage="saml2SecurityTokenHandler.ResolveSecurityKeys (assertion, resolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.Tokens.SecurityKey&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assertion" Type="System.IdentityModel.Tokens.Saml2Assertion" />
        <Parameter Name="resolver" Type="System.IdentityModel.Selectors.SecurityTokenResolver" />
      </Parameters>
      <Docs>
        <param name="assertion"><span data-ttu-id="81a7e-450">要处理的 <see cref="T:System.IdentityModel.Tokens.Saml2Assertion" />。</span><span class="sxs-lookup"><span data-stu-id="81a7e-450">The <see cref="T:System.IdentityModel.Tokens.Saml2Assertion" /> to process.</span></span></param>
        <param name="resolver"><span data-ttu-id="81a7e-451">在解析 <see cref="T:System.IdentityModel.Selectors.SecurityTokenResolver" /> 对象中使用的 <see cref="T:System.IdentityModel.Tokens.SecurityKey" />。</span><span class="sxs-lookup"><span data-stu-id="81a7e-451">The <see cref="T:System.IdentityModel.Selectors.SecurityTokenResolver" /> to use in resolving the <see cref="T:System.IdentityModel.Tokens.SecurityKey" /> objects.</span></span></param>
        <summary><span data-ttu-id="81a7e-452">解析在 <see cref="T:System.IdentityModel.Tokens.SecurityKey" />中引用的 <see cref="T:System.IdentityModel.Tokens.Saml2Assertion" /> 集合。</span><span class="sxs-lookup"><span data-stu-id="81a7e-452">Resolves the collection of <see cref="T:System.IdentityModel.Tokens.SecurityKey" /> referenced in a <see cref="T:System.IdentityModel.Tokens.Saml2Assertion" />.</span></span></summary>
        <returns><span data-ttu-id="81a7e-453">包含键的 <see cref="T:System.IdentityModel.Tokens.SecurityKey" /> 类型的的集合。</span><span class="sxs-lookup"><span data-stu-id="81a7e-453">A collection of type <see cref="T:System.IdentityModel.Tokens.SecurityKey" /> that contains the keys.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="81a7e-454"><paramref name="assertion" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="81a7e-454"><paramref name="assertion" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IdentityModel.Tokens.SecurityTokenException"><span data-ttu-id="81a7e-455">处理程序不能解析键。</span><span class="sxs-lookup"><span data-stu-id="81a7e-455">The handler is unable to resolve the keys.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SamlSecurityTokenRequirement">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Tokens.SamlSecurityTokenRequirement SamlSecurityTokenRequirement { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IdentityModel.Tokens.SamlSecurityTokenRequirement SamlSecurityTokenRequirement" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.SamlSecurityTokenRequirement" />
      <MemberSignature Language="VB.NET" Value="Public Property SamlSecurityTokenRequirement As SamlSecurityTokenRequirement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IdentityModel::Tokens::SamlSecurityTokenRequirement ^ SamlSecurityTokenRequirement { System::IdentityModel::Tokens::SamlSecurityTokenRequirement ^ get(); void set(System::IdentityModel::Tokens::SamlSecurityTokenRequirement ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SamlSecurityTokenRequirement : System.IdentityModel.Tokens.SamlSecurityTokenRequirement with get, set" Usage="System.IdentityModel.Tokens.Saml2SecurityTokenHandler.SamlSecurityTokenRequirement" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SamlSecurityTokenRequirement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="81a7e-456">获取或设置此实例的安全令牌要求。</span><span class="sxs-lookup"><span data-stu-id="81a7e-456">Gets or sets the security token requirements for this instance.</span></span></summary>
        <value><span data-ttu-id="81a7e-457">指定要求的 <see cref="T:System.IdentityModel.Tokens.SamlSecurityTokenRequirement" />。</span><span class="sxs-lookup"><span data-stu-id="81a7e-457">A <see cref="T:System.IdentityModel.Tokens.SamlSecurityTokenRequirement" /> that specifies the requirements.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="81a7e-458">尝试将该值设置为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="81a7e-458">An attempt to set the value to <see langword="null" /> occurs.</span></span></exception>
        <related type="Article" href="/dotnet/framework/configure-apps/file-schema/windows-identity-foundation/samlsecuritytokenrequirement"><span data-ttu-id="81a7e-459">&lt;samlSecurityTokenRequirement&gt;</span><span class="sxs-lookup"><span data-stu-id="81a7e-459">&lt;samlSecurityTokenRequirement&gt;</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="SetDelegateFromAttribute">
      <MemberSignature Language="C#" Value="protected virtual void SetDelegateFromAttribute (System.IdentityModel.Tokens.Saml2Attribute attribute, System.Security.Claims.ClaimsIdentity subject, string issuer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void SetDelegateFromAttribute(class System.IdentityModel.Tokens.Saml2Attribute attribute, class System.Security.Claims.ClaimsIdentity subject, string issuer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.SetDelegateFromAttribute(System.IdentityModel.Tokens.Saml2Attribute,System.Security.Claims.ClaimsIdentity,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub SetDelegateFromAttribute (attribute As Saml2Attribute, subject As ClaimsIdentity, issuer As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void SetDelegateFromAttribute(System::IdentityModel::Tokens::Saml2Attribute ^ attribute, System::Security::Claims::ClaimsIdentity ^ subject, System::String ^ issuer);" />
      <MemberSignature Language="F#" Value="abstract member SetDelegateFromAttribute : System.IdentityModel.Tokens.Saml2Attribute * System.Security.Claims.ClaimsIdentity * string -&gt; unit&#xA;override this.SetDelegateFromAttribute : System.IdentityModel.Tokens.Saml2Attribute * System.Security.Claims.ClaimsIdentity * string -&gt; unit" Usage="saml2SecurityTokenHandler.SetDelegateFromAttribute (attribute, subject, issuer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attribute" Type="System.IdentityModel.Tokens.Saml2Attribute" />
        <Parameter Name="subject" Type="System.Security.Claims.ClaimsIdentity" />
        <Parameter Name="issuer" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="attribute"><span data-ttu-id="81a7e-460">要使用的 <see cref="T:System.IdentityModel.Tokens.Saml2Attribute" />。</span><span class="sxs-lookup"><span data-stu-id="81a7e-460">The <see cref="T:System.IdentityModel.Tokens.Saml2Attribute" /> to use.</span></span></param>
        <param name="subject"><span data-ttu-id="81a7e-461">为此标记的主题的 <see cref="T:System.Security.Claims.ClaimsIdentity" />。</span><span class="sxs-lookup"><span data-stu-id="81a7e-461">The <see cref="T:System.Security.Claims.ClaimsIdentity" /> that is the subject of this token.</span></span></param>
        <param name="issuer"><span data-ttu-id="81a7e-462">声明的颁发者。</span><span class="sxs-lookup"><span data-stu-id="81a7e-462">The issuer of the claim.</span></span></param>
        <summary><span data-ttu-id="81a7e-463">当检测 <see cref="T:System.IdentityModel.Tokens.Saml2Attribute" /> 的特殊类型时调用此方法。</span><span class="sxs-lookup"><span data-stu-id="81a7e-463">This method gets called when a special type of <see cref="T:System.IdentityModel.Tokens.Saml2Attribute" /> is detected.</span></span> <span data-ttu-id="81a7e-464">已传入的 <see cref="T:System.IdentityModel.Tokens.Saml2Attribute" /> 包装一个包含特性值的集合的 <see cref="T:System.IdentityModel.Tokens.Saml2Attribute" /> (特性值在 <see cref="P:System.IdentityModel.Tokens.Saml2Attribute.Values" /> 属性中)，每一个特性值将被映射到一个声明。</span><span class="sxs-lookup"><span data-stu-id="81a7e-464">The <see cref="T:System.IdentityModel.Tokens.Saml2Attribute" /> passed in wraps a <see cref="T:System.IdentityModel.Tokens.Saml2Attribute" /> that contains a collection of attribute values (in the <see cref="P:System.IdentityModel.Tokens.Saml2Attribute.Values" /> property), each of which will get mapped to a claim.</span></span> <span data-ttu-id="81a7e-465">所有的声明都将返回到 <see cref="T:System.Security.Claims.ClaimsIdentity" /> 。</span><span class="sxs-lookup"><span data-stu-id="81a7e-465">All of the claims will be returned in an <see cref="T:System.Security.Claims.ClaimsIdentity" /> with the specified issuer.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="81a7e-466">不包含任何有效特性值的 <see cref="T:System.IdentityModel.Tokens.Saml2Attribute" />。</span><span class="sxs-lookup"><span data-stu-id="81a7e-466">The <see cref="T:System.IdentityModel.Tokens.Saml2Attribute" /> does not contain any valid attribute values.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="TokenProfile11ValueType">
      <MemberSignature Language="C#" Value="public const string TokenProfile11ValueType;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string TokenProfile11ValueType" />
      <MemberSignature Language="DocId" Value="F:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.TokenProfile11ValueType" />
      <MemberSignature Language="VB.NET" Value="Public Const TokenProfile11ValueType As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ TokenProfile11ValueType;" />
      <MemberSignature Language="F#" Value="val mutable TokenProfile11ValueType : string" Usage="System.IdentityModel.Tokens.Saml2SecurityTokenHandler.TokenProfile11ValueType" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="81a7e-467">由 OASIS Web Services Security SAML Token Profile 1.1所定义的 SAML 2.0 断言 ID 的密钥标识符值类型。</span><span class="sxs-lookup"><span data-stu-id="81a7e-467">The key identifier value type for SAML 2.0 assertion IDs, as defined by the OASIS Web Services Security SAML Token Profile 1.1.</span></span> <span data-ttu-id="81a7e-468">这是一个 URI。</span><span class="sxs-lookup"><span data-stu-id="81a7e-468">This is a URI.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TokenType">
      <MemberSignature Language="C#" Value="public override Type TokenType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type TokenType" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.TokenType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property TokenType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Type ^ TokenType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TokenType : Type" Usage="System.IdentityModel.Tokens.Saml2SecurityTokenHandler.TokenType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="81a7e-469">获取处理程序支持的标记的类型。</span><span class="sxs-lookup"><span data-stu-id="81a7e-469">Gets the token type supported by this handler.</span></span></summary>
        <value><span data-ttu-id="81a7e-470"><see cref="T:System.Type" /> 类的 <see cref="T:System.IdentityModel.Tokens.Saml2SecurityToken" />。</span><span class="sxs-lookup"><span data-stu-id="81a7e-470">The <see cref="T:System.Type" /> of the <see cref="T:System.IdentityModel.Tokens.Saml2SecurityToken" /> class.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryResolveIssuerToken">
      <MemberSignature Language="C#" Value="protected virtual bool TryResolveIssuerToken (System.IdentityModel.Tokens.Saml2Assertion assertion, System.IdentityModel.Selectors.SecurityTokenResolver issuerResolver, out System.IdentityModel.Tokens.SecurityToken token);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool TryResolveIssuerToken(class System.IdentityModel.Tokens.Saml2Assertion assertion, class System.IdentityModel.Selectors.SecurityTokenResolver issuerResolver, [out] class System.IdentityModel.Tokens.SecurityToken&amp; token) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.TryResolveIssuerToken(System.IdentityModel.Tokens.Saml2Assertion,System.IdentityModel.Selectors.SecurityTokenResolver,System.IdentityModel.Tokens.SecurityToken@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function TryResolveIssuerToken (assertion As Saml2Assertion, issuerResolver As SecurityTokenResolver, ByRef token As SecurityToken) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool TryResolveIssuerToken(System::IdentityModel::Tokens::Saml2Assertion ^ assertion, System::IdentityModel::Selectors::SecurityTokenResolver ^ issuerResolver, [Runtime::InteropServices::Out] System::IdentityModel::Tokens::SecurityToken ^ % token);" />
      <MemberSignature Language="F#" Value="abstract member TryResolveIssuerToken : System.IdentityModel.Tokens.Saml2Assertion * System.IdentityModel.Selectors.SecurityTokenResolver * SecurityToken -&gt; bool&#xA;override this.TryResolveIssuerToken : System.IdentityModel.Tokens.Saml2Assertion * System.IdentityModel.Selectors.SecurityTokenResolver * SecurityToken -&gt; bool" Usage="saml2SecurityTokenHandler.TryResolveIssuerToken (assertion, issuerResolver, token)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assertion" Type="System.IdentityModel.Tokens.Saml2Assertion" />
        <Parameter Name="issuerResolver" Type="System.IdentityModel.Selectors.SecurityTokenResolver" />
        <Parameter Name="token" Type="System.IdentityModel.Tokens.SecurityToken" RefType="out" />
      </Parameters>
      <Docs>
        <param name="assertion"><span data-ttu-id="81a7e-471">解析颁布者令牌所应用的 <see cref="T:System.IdentityModel.Tokens.Saml2Assertion" />。</span><span class="sxs-lookup"><span data-stu-id="81a7e-471">The <see cref="T:System.IdentityModel.Tokens.Saml2Assertion" /> for which the Issuer token is to be resolved.</span></span></param>
        <param name="issuerResolver"><span data-ttu-id="81a7e-472">当前与该处理程序关联的 <see cref="T:System.IdentityModel.Selectors.SecurityTokenResolver" />。</span><span class="sxs-lookup"><span data-stu-id="81a7e-472">The current <see cref="T:System.IdentityModel.Selectors.SecurityTokenResolver" /> associated with this handler.</span></span></param>
        <param name="token"><span data-ttu-id="81a7e-473">当此方法返回时，如果解析标记成功，则包含已解析的安全标记。</span><span class="sxs-lookup"><span data-stu-id="81a7e-473">When this method returns, contains the resolved security token if a token was successfully resolved.</span></span></param>
        <summary><span data-ttu-id="81a7e-474">将 Signing Key Identifier解析为 SecurityToken。</span><span class="sxs-lookup"><span data-stu-id="81a7e-474">Resolves the Signing Key Identifier to a SecurityToken.</span></span></summary>
        <returns><span data-ttu-id="81a7e-475">如果标记已解决，则为 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="81a7e-475"><see langword="true" /> if the token is resolved.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidateConditions">
      <MemberSignature Language="C#" Value="protected virtual void ValidateConditions (System.IdentityModel.Tokens.Saml2Conditions conditions, bool enforceAudienceRestriction);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ValidateConditions(class System.IdentityModel.Tokens.Saml2Conditions conditions, bool enforceAudienceRestriction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ValidateConditions(System.IdentityModel.Tokens.Saml2Conditions,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub ValidateConditions (conditions As Saml2Conditions, enforceAudienceRestriction As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void ValidateConditions(System::IdentityModel::Tokens::Saml2Conditions ^ conditions, bool enforceAudienceRestriction);" />
      <MemberSignature Language="F#" Value="abstract member ValidateConditions : System.IdentityModel.Tokens.Saml2Conditions * bool -&gt; unit&#xA;override this.ValidateConditions : System.IdentityModel.Tokens.Saml2Conditions * bool -&gt; unit" Usage="saml2SecurityTokenHandler.ValidateConditions (conditions, enforceAudienceRestriction)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="conditions" Type="System.IdentityModel.Tokens.Saml2Conditions" />
        <Parameter Name="enforceAudienceRestriction" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="conditions"><span data-ttu-id="81a7e-476">要验证的 SAML 2.0 条件。</span><span class="sxs-lookup"><span data-stu-id="81a7e-476">The SAML 2.0 condition to be validated.</span></span></param>
        <param name="enforceAudienceRestriction"><span data-ttu-id="81a7e-477">检查观众限制条件，则为 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="81a7e-477"><see langword="true" /> to check for Audience Restriction condition.</span></span></param>
        <summary><span data-ttu-id="81a7e-478">验证指定的 <see cref="T:System.IdentityModel.Tokens.Saml2Conditions" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="81a7e-478">Validates the specified <see cref="T:System.IdentityModel.Tokens.Saml2Conditions" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="81a7e-479">如果条件无效，将引发相应的异常。</span><span class="sxs-lookup"><span data-stu-id="81a7e-479">Throws an appropriate exception if the condition is not valid.</span></span> <span data-ttu-id="81a7e-480">由于多种原因，令牌可能无效。</span><span class="sxs-lookup"><span data-stu-id="81a7e-480">The token may not be valid for a number of reasons.</span></span> <span data-ttu-id="81a7e-481">例如，当前时间可能不在令牌的有效期内，令牌可能包含矛盾或无效的数据，或者令牌可能包含不受支持的 SAML 2.0 元素。</span><span class="sxs-lookup"><span data-stu-id="81a7e-481">For example, the current time may not be within the token's validity period, the token may contain data that is contradictory or not valid, or the token may contain unsupported SAML 2.0 elements.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidateConfirmationData">
      <MemberSignature Language="C#" Value="protected virtual void ValidateConfirmationData (System.IdentityModel.Tokens.Saml2SubjectConfirmationData confirmationData);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ValidateConfirmationData(class System.IdentityModel.Tokens.Saml2SubjectConfirmationData confirmationData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ValidateConfirmationData(System.IdentityModel.Tokens.Saml2SubjectConfirmationData)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub ValidateConfirmationData (confirmationData As Saml2SubjectConfirmationData)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void ValidateConfirmationData(System::IdentityModel::Tokens::Saml2SubjectConfirmationData ^ confirmationData);" />
      <MemberSignature Language="F#" Value="abstract member ValidateConfirmationData : System.IdentityModel.Tokens.Saml2SubjectConfirmationData -&gt; unit&#xA;override this.ValidateConfirmationData : System.IdentityModel.Tokens.Saml2SubjectConfirmationData -&gt; unit" Usage="saml2SecurityTokenHandler.ValidateConfirmationData confirmationData" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="confirmationData" Type="System.IdentityModel.Tokens.Saml2SubjectConfirmationData" />
      </Parameters>
      <Docs>
        <param name="confirmationData"><span data-ttu-id="81a7e-482">SAML 2.0 主题确认数据。</span><span class="sxs-lookup"><span data-stu-id="81a7e-482">The SAML 2.0 subject confirmation data.</span></span></param>
        <summary><span data-ttu-id="81a7e-483">验证指定的 <see cref="T:System.IdentityModel.Tokens.Saml2SubjectConfirmationData" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="81a7e-483">Validates the specified <see cref="T:System.IdentityModel.Tokens.Saml2SubjectConfirmationData" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="81a7e-484">如果确认数据无效，将引发相应的异常。</span><span class="sxs-lookup"><span data-stu-id="81a7e-484">Throws an appropriate exception if the confirmation data is not valid.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidateToken">
      <MemberSignature Language="C#" Value="public override System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Security.Claims.ClaimsIdentity&gt; ValidateToken (System.IdentityModel.Tokens.SecurityToken token);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Security.Claims.ClaimsIdentity&gt; ValidateToken(class System.IdentityModel.Tokens.SecurityToken token) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SecurityToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ValidateToken (token As SecurityToken) As ReadOnlyCollection(Of ClaimsIdentity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Security::Claims::ClaimsIdentity ^&gt; ^ ValidateToken(System::IdentityModel::Tokens::SecurityToken ^ token);" />
      <MemberSignature Language="F#" Value="override this.ValidateToken : System.IdentityModel.Tokens.SecurityToken -&gt; System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Security.Claims.ClaimsIdentity&gt;" Usage="saml2SecurityTokenHandler.ValidateToken token" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Security.Claims.ClaimsIdentity&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="System.IdentityModel.Tokens.SecurityToken" />
      </Parameters>
      <Docs>
        <param name="token"><span data-ttu-id="81a7e-485">要验证的 SAML 2.0 标记。</span><span class="sxs-lookup"><span data-stu-id="81a7e-485">The SAML 2.0 token to be validated.</span></span></param>
        <summary><span data-ttu-id="81a7e-486">验证标记数据并返回其声明。</span><span class="sxs-lookup"><span data-stu-id="81a7e-486">Validates the token data and returns its claims.</span></span></summary>
        <returns><span data-ttu-id="81a7e-487">标记中包含的值标识。</span><span class="sxs-lookup"><span data-stu-id="81a7e-487">The identities contained in the token.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="81a7e-488">如果标记无效，则引发相应的异常。</span><span class="sxs-lookup"><span data-stu-id="81a7e-488">Throws an appropriate exception if the token is not valid.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteAction">
      <MemberSignature Language="C#" Value="protected virtual void WriteAction (System.Xml.XmlWriter writer, System.IdentityModel.Tokens.Saml2Action data);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void WriteAction(class System.Xml.XmlWriter writer, class System.IdentityModel.Tokens.Saml2Action data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteAction(System.Xml.XmlWriter,System.IdentityModel.Tokens.Saml2Action)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub WriteAction (writer As XmlWriter, data As Saml2Action)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void WriteAction(System::Xml::XmlWriter ^ writer, System::IdentityModel::Tokens::Saml2Action ^ data);" />
      <MemberSignature Language="F#" Value="abstract member WriteAction : System.Xml.XmlWriter * System.IdentityModel.Tokens.Saml2Action -&gt; unit&#xA;override this.WriteAction : System.Xml.XmlWriter * System.IdentityModel.Tokens.Saml2Action -&gt; unit" Usage="saml2SecurityTokenHandler.WriteAction (writer, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
        <Parameter Name="data" Type="System.IdentityModel.Tokens.Saml2Action" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="81a7e-489">用于写数据的 <see cref="T:System.Xml.XmlWriter" />。</span><span class="sxs-lookup"><span data-stu-id="81a7e-489">The <see cref="T:System.Xml.XmlWriter" /> with which to write the data.</span></span></param>
        <param name="data"><span data-ttu-id="81a7e-490">要写入的数据。</span><span class="sxs-lookup"><span data-stu-id="81a7e-490">The data to write.</span></span></param>
        <summary><span data-ttu-id="81a7e-491">写入 &lt;saml:Action&gt; 元素。</span><span class="sxs-lookup"><span data-stu-id="81a7e-491">Writes the &lt;saml:Action&gt; element.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="81a7e-492"><paramref name="data" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="81a7e-492"><paramref name="data" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="81a7e-493">- 或 -</span><span class="sxs-lookup"><span data-stu-id="81a7e-493">-or-</span></span> 
 <span data-ttu-id="81a7e-494"><paramref name="writer" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="81a7e-494"><paramref name="writer" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteAdvice">
      <MemberSignature Language="C#" Value="protected virtual void WriteAdvice (System.Xml.XmlWriter writer, System.IdentityModel.Tokens.Saml2Advice data);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void WriteAdvice(class System.Xml.XmlWriter writer, class System.IdentityModel.Tokens.Saml2Advice data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteAdvice(System.Xml.XmlWriter,System.IdentityModel.Tokens.Saml2Advice)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub WriteAdvice (writer As XmlWriter, data As Saml2Advice)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void WriteAdvice(System::Xml::XmlWriter ^ writer, System::IdentityModel::Tokens::Saml2Advice ^ data);" />
      <MemberSignature Language="F#" Value="abstract member WriteAdvice : System.Xml.XmlWriter * System.IdentityModel.Tokens.Saml2Advice -&gt; unit&#xA;override this.WriteAdvice : System.Xml.XmlWriter * System.IdentityModel.Tokens.Saml2Advice -&gt; unit" Usage="saml2SecurityTokenHandler.WriteAdvice (writer, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
        <Parameter Name="data" Type="System.IdentityModel.Tokens.Saml2Advice" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="81a7e-495">用于写数据的 <see cref="T:System.Xml.XmlWriter" />。</span><span class="sxs-lookup"><span data-stu-id="81a7e-495">The <see cref="T:System.Xml.XmlWriter" /> with which to write the data.</span></span></param>
        <param name="data"><span data-ttu-id="81a7e-496">要写入的数据。</span><span class="sxs-lookup"><span data-stu-id="81a7e-496">The data to write.</span></span></param>
        <summary><span data-ttu-id="81a7e-497">写入 &lt;saml:Advice&gt; 元素。</span><span class="sxs-lookup"><span data-stu-id="81a7e-497">Writes the &lt;saml:Advice&gt; element.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="81a7e-498"><paramref name="data" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="81a7e-498"><paramref name="data" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="81a7e-499">- 或 -</span><span class="sxs-lookup"><span data-stu-id="81a7e-499">-or-</span></span> 
 <span data-ttu-id="81a7e-500"><paramref name="writer" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="81a7e-500"><paramref name="writer" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteAssertion">
      <MemberSignature Language="C#" Value="protected virtual void WriteAssertion (System.Xml.XmlWriter writer, System.IdentityModel.Tokens.Saml2Assertion data);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void WriteAssertion(class System.Xml.XmlWriter writer, class System.IdentityModel.Tokens.Saml2Assertion data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteAssertion(System.Xml.XmlWriter,System.IdentityModel.Tokens.Saml2Assertion)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub WriteAssertion (writer As XmlWriter, data As Saml2Assertion)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void WriteAssertion(System::Xml::XmlWriter ^ writer, System::IdentityModel::Tokens::Saml2Assertion ^ data);" />
      <MemberSignature Language="F#" Value="abstract member WriteAssertion : System.Xml.XmlWriter * System.IdentityModel.Tokens.Saml2Assertion -&gt; unit&#xA;override this.WriteAssertion : System.Xml.XmlWriter * System.IdentityModel.Tokens.Saml2Assertion -&gt; unit" Usage="saml2SecurityTokenHandler.WriteAssertion (writer, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
        <Parameter Name="data" Type="System.IdentityModel.Tokens.Saml2Assertion" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="81a7e-501">用于序列化的 <see cref="T:System.Xml.XmlWriter" />。</span><span class="sxs-lookup"><span data-stu-id="81a7e-501">The <see cref="T:System.Xml.XmlWriter" /> to use for the serialization.</span></span></param>
        <param name="data"><span data-ttu-id="81a7e-502">表示要序列化的断言的 <see cref="T:System.IdentityModel.Tokens.Saml2Assertion" />。</span><span class="sxs-lookup"><span data-stu-id="81a7e-502">A <see cref="T:System.IdentityModel.Tokens.Saml2Assertion" /> that represents the assertion to serialize.</span></span></param>
        <summary><span data-ttu-id="81a7e-503">序列化指定的 SAML 断言到指定的 XML 编写器。</span><span class="sxs-lookup"><span data-stu-id="81a7e-503">Serializes the specified SAML assertion to the specified XML writer.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="81a7e-504"><paramref name="writer" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="81a7e-504"><paramref name="writer" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="81a7e-505">- 或 -</span><span class="sxs-lookup"><span data-stu-id="81a7e-505">-or-</span></span> 
 <span data-ttu-id="81a7e-506"><paramref name="data" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="81a7e-506"><paramref name="data" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="81a7e-507"><paramref name="data" /> 指定的断言的 <see cref="P:System.IdentityModel.Tokens.Saml2Assertion.ExternalEncryptedKeys" /> 属性是 <see langword="null" /> 或不包含任何元素。</span><span class="sxs-lookup"><span data-stu-id="81a7e-507">The <see cref="P:System.IdentityModel.Tokens.Saml2Assertion.ExternalEncryptedKeys" /> property of the assertion specified by <paramref name="data" /> is either <see langword="null" /> or has no elements.</span></span>  
  
<span data-ttu-id="81a7e-508">- 或 -</span><span class="sxs-lookup"><span data-stu-id="81a7e-508">-or-</span></span> 
<span data-ttu-id="81a7e-509"><paramref name="data" />指定的断言中无声明和无主题。</span><span class="sxs-lookup"><span data-stu-id="81a7e-509">There are no statements and no subject in the assertion specified by <paramref name="data" />.</span></span> <span data-ttu-id="81a7e-510">（<see cref="P:System.IdentityModel.Tokens.Saml2Assertion.Subject" /> 属性和 <see cref="P:System.IdentityModel.Tokens.Saml2Assertion.Statements" /> 属性都是 <see langword="null" />。）如果断言不包含声明，则它必须包含主题。</span><span class="sxs-lookup"><span data-stu-id="81a7e-510">(Both the <see cref="P:System.IdentityModel.Tokens.Saml2Assertion.Subject" /> property and the <see cref="P:System.IdentityModel.Tokens.Saml2Assertion.Statements" /> property are <see langword="null" />.) If an assertion does not contain statements, it must contain a subject.</span></span>  
  
<span data-ttu-id="81a7e-511">- 或 -</span><span class="sxs-lookup"><span data-stu-id="81a7e-511">-or-</span></span> 
<span data-ttu-id="81a7e-512">由 <paramref name="data" /> 指定的断言包含身份验证、特性或授权决策声明并且没有主题—这些声明需要主题。</span><span class="sxs-lookup"><span data-stu-id="81a7e-512">The assertion specified by <paramref name="data" /> contains an authentication, attribute, or authorization decision statement and no subject - these statements require a subject.</span></span> <span data-ttu-id="81a7e-513">（<see cref="P:System.IdentityModel.Tokens.Saml2Assertion.Statements" /> 属性包含 <see cref="T:System.IdentityModel.Tokens.Saml2AttributeStatement" />, <see cref="T:System.IdentityModel.Tokens.Saml2AuthenticationStatement" />, 或者 <see cref="T:System.IdentityModel.Tokens.Saml2AuthorizationDecisionStatement" /> 类型的语句方法。并且，<see cref="P:System.IdentityModel.Tokens.Saml2Assertion.Subject" /> 属性是 <see langword="null" />）。</span><span class="sxs-lookup"><span data-stu-id="81a7e-513">(The <see cref="P:System.IdentityModel.Tokens.Saml2Assertion.Statements" /> property contains a statement of type <see cref="T:System.IdentityModel.Tokens.Saml2AttributeStatement" />, <see cref="T:System.IdentityModel.Tokens.Saml2AuthenticationStatement" />, or <see cref="T:System.IdentityModel.Tokens.Saml2AuthorizationDecisionStatement" /> and the <see cref="P:System.IdentityModel.Tokens.Saml2Assertion.Subject" /> property is <see langword="null" />).</span></span></exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="81a7e-514">标记的加密凭据没有指定的对称密钥。</span><span class="sxs-lookup"><span data-stu-id="81a7e-514">The token encrypting credentials do not have a Symmetric Key specified.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteAttribute">
      <MemberSignature Language="C#" Value="protected virtual void WriteAttribute (System.Xml.XmlWriter writer, System.IdentityModel.Tokens.Saml2Attribute data);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void WriteAttribute(class System.Xml.XmlWriter writer, class System.IdentityModel.Tokens.Saml2Attribute data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteAttribute(System.Xml.XmlWriter,System.IdentityModel.Tokens.Saml2Attribute)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub WriteAttribute (writer As XmlWriter, data As Saml2Attribute)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void WriteAttribute(System::Xml::XmlWriter ^ writer, System::IdentityModel::Tokens::Saml2Attribute ^ data);" />
      <MemberSignature Language="F#" Value="abstract member WriteAttribute : System.Xml.XmlWriter * System.IdentityModel.Tokens.Saml2Attribute -&gt; unit&#xA;override this.WriteAttribute : System.Xml.XmlWriter * System.IdentityModel.Tokens.Saml2Attribute -&gt; unit" Usage="saml2SecurityTokenHandler.WriteAttribute (writer, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
        <Parameter Name="data" Type="System.IdentityModel.Tokens.Saml2Attribute" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="81a7e-515">用于写数据的 <see cref="T:System.Xml.XmlWriter" />。</span><span class="sxs-lookup"><span data-stu-id="81a7e-515">The <see cref="T:System.Xml.XmlWriter" /> with which to write the data.</span></span></param>
        <param name="data"><span data-ttu-id="81a7e-516">要写入的数据。</span><span class="sxs-lookup"><span data-stu-id="81a7e-516">The data to write.</span></span></param>
        <summary><span data-ttu-id="81a7e-517">写入 &lt;saml:Attribute&gt; 元素。</span><span class="sxs-lookup"><span data-stu-id="81a7e-517">Writes the &lt;saml:Attribute&gt; element.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="81a7e-518"><paramref name="data" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="81a7e-518"><paramref name="data" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="81a7e-519">- 或 -</span><span class="sxs-lookup"><span data-stu-id="81a7e-519">-or-</span></span> 
 <span data-ttu-id="81a7e-520"><paramref name="writer" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="81a7e-520"><paramref name="writer" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteAttributeStatement">
      <MemberSignature Language="C#" Value="protected virtual void WriteAttributeStatement (System.Xml.XmlWriter writer, System.IdentityModel.Tokens.Saml2AttributeStatement data);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void WriteAttributeStatement(class System.Xml.XmlWriter writer, class System.IdentityModel.Tokens.Saml2AttributeStatement data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteAttributeStatement(System.Xml.XmlWriter,System.IdentityModel.Tokens.Saml2AttributeStatement)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub WriteAttributeStatement (writer As XmlWriter, data As Saml2AttributeStatement)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void WriteAttributeStatement(System::Xml::XmlWriter ^ writer, System::IdentityModel::Tokens::Saml2AttributeStatement ^ data);" />
      <MemberSignature Language="F#" Value="abstract member WriteAttributeStatement : System.Xml.XmlWriter * System.IdentityModel.Tokens.Saml2AttributeStatement -&gt; unit&#xA;override this.WriteAttributeStatement : System.Xml.XmlWriter * System.IdentityModel.Tokens.Saml2AttributeStatement -&gt; unit" Usage="saml2SecurityTokenHandler.WriteAttributeStatement (writer, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
        <Parameter Name="data" Type="System.IdentityModel.Tokens.Saml2AttributeStatement" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="81a7e-521">用于写数据的 <see cref="T:System.Xml.XmlWriter" />。</span><span class="sxs-lookup"><span data-stu-id="81a7e-521">The <see cref="T:System.Xml.XmlWriter" /> with which to write the data.</span></span></param>
        <param name="data"><span data-ttu-id="81a7e-522">要写入的数据。</span><span class="sxs-lookup"><span data-stu-id="81a7e-522">The data to write.</span></span></param>
        <summary><span data-ttu-id="81a7e-523">写入 &lt;saml:AttributeStatement&gt; 元素。</span><span class="sxs-lookup"><span data-stu-id="81a7e-523">Writes the &lt;saml:AttributeStatement&gt; element.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="81a7e-524"><paramref name="data" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="81a7e-524"><paramref name="data" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="81a7e-525">- 或 -</span><span class="sxs-lookup"><span data-stu-id="81a7e-525">-or-</span></span> 
 <span data-ttu-id="81a7e-526"><paramref name="writer" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="81a7e-526"><paramref name="writer" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteAttributeValue">
      <MemberSignature Language="C#" Value="protected virtual void WriteAttributeValue (System.Xml.XmlWriter writer, string value, System.IdentityModel.Tokens.Saml2Attribute attribute);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void WriteAttributeValue(class System.Xml.XmlWriter writer, string value, class System.IdentityModel.Tokens.Saml2Attribute attribute) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteAttributeValue(System.Xml.XmlWriter,System.String,System.IdentityModel.Tokens.Saml2Attribute)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub WriteAttributeValue (writer As XmlWriter, value As String, attribute As Saml2Attribute)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void WriteAttributeValue(System::Xml::XmlWriter ^ writer, System::String ^ value, System::IdentityModel::Tokens::Saml2Attribute ^ attribute);" />
      <MemberSignature Language="F#" Value="abstract member WriteAttributeValue : System.Xml.XmlWriter * string * System.IdentityModel.Tokens.Saml2Attribute -&gt; unit&#xA;override this.WriteAttributeValue : System.Xml.XmlWriter * string * System.IdentityModel.Tokens.Saml2Attribute -&gt; unit" Usage="saml2SecurityTokenHandler.WriteAttributeValue (writer, value, attribute)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="attribute" Type="System.IdentityModel.Tokens.Saml2Attribute" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="81a7e-527">用于写入的 <see cref="T:System.Xml.XmlWriter" />。</span><span class="sxs-lookup"><span data-stu-id="81a7e-527">The <see cref="T:System.Xml.XmlWriter" /> with which to write.</span></span></param>
        <param name="value"><span data-ttu-id="81a7e-528">一个包含要被写入的特性值的字符串。</span><span class="sxs-lookup"><span data-stu-id="81a7e-528">A string that contains the attribute value to be written.</span></span></param>
        <param name="attribute"><span data-ttu-id="81a7e-529">表示要写入的值的特性的 <see cref="T:System.IdentityModel.Tokens.Saml2Attribute" />。</span><span class="sxs-lookup"><span data-stu-id="81a7e-529">A <see cref="T:System.IdentityModel.Tokens.Saml2Attribute" /> that represents the attribute whose value is being written.</span></span></param>
        <summary><span data-ttu-id="81a7e-530">写入 saml：特性值。</span><span class="sxs-lookup"><span data-stu-id="81a7e-530">Writes the saml:Attribute value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="81a7e-531">默认情况下，该方法将值作为字符串写入。</span><span class="sxs-lookup"><span data-stu-id="81a7e-531">By default the method writes the value as a string.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="81a7e-532"><paramref name="writer" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="81a7e-532"><paramref name="writer" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteAudienceRestriction">
      <MemberSignature Language="C#" Value="protected virtual void WriteAudienceRestriction (System.Xml.XmlWriter writer, System.IdentityModel.Tokens.Saml2AudienceRestriction data);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void WriteAudienceRestriction(class System.Xml.XmlWriter writer, class System.IdentityModel.Tokens.Saml2AudienceRestriction data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteAudienceRestriction(System.Xml.XmlWriter,System.IdentityModel.Tokens.Saml2AudienceRestriction)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub WriteAudienceRestriction (writer As XmlWriter, data As Saml2AudienceRestriction)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void WriteAudienceRestriction(System::Xml::XmlWriter ^ writer, System::IdentityModel::Tokens::Saml2AudienceRestriction ^ data);" />
      <MemberSignature Language="F#" Value="abstract member WriteAudienceRestriction : System.Xml.XmlWriter * System.IdentityModel.Tokens.Saml2AudienceRestriction -&gt; unit&#xA;override this.WriteAudienceRestriction : System.Xml.XmlWriter * System.IdentityModel.Tokens.Saml2AudienceRestriction -&gt; unit" Usage="saml2SecurityTokenHandler.WriteAudienceRestriction (writer, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
        <Parameter Name="data" Type="System.IdentityModel.Tokens.Saml2AudienceRestriction" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="81a7e-533">用于写数据的 <see cref="T:System.Xml.XmlWriter" />。</span><span class="sxs-lookup"><span data-stu-id="81a7e-533">The <see cref="T:System.Xml.XmlWriter" /> with which to write the data.</span></span></param>
        <param name="data"><span data-ttu-id="81a7e-534">要写入的数据。</span><span class="sxs-lookup"><span data-stu-id="81a7e-534">The data to write.</span></span></param>
        <summary><span data-ttu-id="81a7e-535">写入 &lt;saml:AudienceRestriction&gt; 元素。</span><span class="sxs-lookup"><span data-stu-id="81a7e-535">Writes the &lt;saml:AudienceRestriction&gt; element.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="81a7e-536"><paramref name="data" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="81a7e-536"><paramref name="data" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="81a7e-537">- 或 -</span><span class="sxs-lookup"><span data-stu-id="81a7e-537">-or-</span></span> 
 <span data-ttu-id="81a7e-538"><paramref name="writer" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="81a7e-538"><paramref name="writer" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteAuthenticationContext">
      <MemberSignature Language="C#" Value="protected virtual void WriteAuthenticationContext (System.Xml.XmlWriter writer, System.IdentityModel.Tokens.Saml2AuthenticationContext data);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void WriteAuthenticationContext(class System.Xml.XmlWriter writer, class System.IdentityModel.Tokens.Saml2AuthenticationContext data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteAuthenticationContext(System.Xml.XmlWriter,System.IdentityModel.Tokens.Saml2AuthenticationContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub WriteAuthenticationContext (writer As XmlWriter, data As Saml2AuthenticationContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void WriteAuthenticationContext(System::Xml::XmlWriter ^ writer, System::IdentityModel::Tokens::Saml2AuthenticationContext ^ data);" />
      <MemberSignature Language="F#" Value="abstract member WriteAuthenticationContext : System.Xml.XmlWriter * System.IdentityModel.Tokens.Saml2AuthenticationContext -&gt; unit&#xA;override this.WriteAuthenticationContext : System.Xml.XmlWriter * System.IdentityModel.Tokens.Saml2AuthenticationContext -&gt; unit" Usage="saml2SecurityTokenHandler.WriteAuthenticationContext (writer, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
        <Parameter Name="data" Type="System.IdentityModel.Tokens.Saml2AuthenticationContext" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="81a7e-539">用于写数据的 <see cref="T:System.Xml.XmlWriter" />。</span><span class="sxs-lookup"><span data-stu-id="81a7e-539">The <see cref="T:System.Xml.XmlWriter" /> with which to write the data.</span></span></param>
        <param name="data"><span data-ttu-id="81a7e-540">要写入的数据。</span><span class="sxs-lookup"><span data-stu-id="81a7e-540">The data to write.</span></span></param>
        <summary><span data-ttu-id="81a7e-541">写入 &lt;saml:AuthnContext&gt; 元素。</span><span class="sxs-lookup"><span data-stu-id="81a7e-541">Writes the &lt;saml:AuthnContext&gt; element.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="81a7e-542"><paramref name="data" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="81a7e-542"><paramref name="data" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="81a7e-543">- 或 -</span><span class="sxs-lookup"><span data-stu-id="81a7e-543">-or-</span></span> 
 <span data-ttu-id="81a7e-544"><paramref name="writer" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="81a7e-544"><paramref name="writer" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteAuthenticationStatement">
      <MemberSignature Language="C#" Value="protected virtual void WriteAuthenticationStatement (System.Xml.XmlWriter writer, System.IdentityModel.Tokens.Saml2AuthenticationStatement data);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void WriteAuthenticationStatement(class System.Xml.XmlWriter writer, class System.IdentityModel.Tokens.Saml2AuthenticationStatement data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteAuthenticationStatement(System.Xml.XmlWriter,System.IdentityModel.Tokens.Saml2AuthenticationStatement)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub WriteAuthenticationStatement (writer As XmlWriter, data As Saml2AuthenticationStatement)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void WriteAuthenticationStatement(System::Xml::XmlWriter ^ writer, System::IdentityModel::Tokens::Saml2AuthenticationStatement ^ data);" />
      <MemberSignature Language="F#" Value="abstract member WriteAuthenticationStatement : System.Xml.XmlWriter * System.IdentityModel.Tokens.Saml2AuthenticationStatement -&gt; unit&#xA;override this.WriteAuthenticationStatement : System.Xml.XmlWriter * System.IdentityModel.Tokens.Saml2AuthenticationStatement -&gt; unit" Usage="saml2SecurityTokenHandler.WriteAuthenticationStatement (writer, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
        <Parameter Name="data" Type="System.IdentityModel.Tokens.Saml2AuthenticationStatement" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="81a7e-545">用于写数据的 <see cref="T:System.Xml.XmlWriter" />。</span><span class="sxs-lookup"><span data-stu-id="81a7e-545">The <see cref="T:System.Xml.XmlWriter" /> with which to write the data.</span></span></param>
        <param name="data"><span data-ttu-id="81a7e-546">要写入的数据。</span><span class="sxs-lookup"><span data-stu-id="81a7e-546">The data to write.</span></span></param>
        <summary><span data-ttu-id="81a7e-547">写入 &lt;saml:AuthnStatement&gt; 元素。</span><span class="sxs-lookup"><span data-stu-id="81a7e-547">Writes the &lt;saml:AuthnStatement&gt; element.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="81a7e-548"><paramref name="data" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="81a7e-548"><paramref name="data" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="81a7e-549">- 或 -</span><span class="sxs-lookup"><span data-stu-id="81a7e-549">-or-</span></span> 
 <span data-ttu-id="81a7e-550"><paramref name="writer" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="81a7e-550"><paramref name="writer" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteAuthorizationDecisionStatement">
      <MemberSignature Language="C#" Value="protected virtual void WriteAuthorizationDecisionStatement (System.Xml.XmlWriter writer, System.IdentityModel.Tokens.Saml2AuthorizationDecisionStatement data);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void WriteAuthorizationDecisionStatement(class System.Xml.XmlWriter writer, class System.IdentityModel.Tokens.Saml2AuthorizationDecisionStatement data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteAuthorizationDecisionStatement(System.Xml.XmlWriter,System.IdentityModel.Tokens.Saml2AuthorizationDecisionStatement)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub WriteAuthorizationDecisionStatement (writer As XmlWriter, data As Saml2AuthorizationDecisionStatement)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void WriteAuthorizationDecisionStatement(System::Xml::XmlWriter ^ writer, System::IdentityModel::Tokens::Saml2AuthorizationDecisionStatement ^ data);" />
      <MemberSignature Language="F#" Value="abstract member WriteAuthorizationDecisionStatement : System.Xml.XmlWriter * System.IdentityModel.Tokens.Saml2AuthorizationDecisionStatement -&gt; unit&#xA;override this.WriteAuthorizationDecisionStatement : System.Xml.XmlWriter * System.IdentityModel.Tokens.Saml2AuthorizationDecisionStatement -&gt; unit" Usage="saml2SecurityTokenHandler.WriteAuthorizationDecisionStatement (writer, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
        <Parameter Name="data" Type="System.IdentityModel.Tokens.Saml2AuthorizationDecisionStatement" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="81a7e-551">用于写数据的 <see cref="T:System.Xml.XmlWriter" />。</span><span class="sxs-lookup"><span data-stu-id="81a7e-551">The <see cref="T:System.Xml.XmlWriter" /> with which to write the data.</span></span></param>
        <param name="data"><span data-ttu-id="81a7e-552">要写入的数据。</span><span class="sxs-lookup"><span data-stu-id="81a7e-552">The data to write.</span></span></param>
        <summary><span data-ttu-id="81a7e-553">写入 &lt;saml:AuthzDecisionStatement&gt; 元素。</span><span class="sxs-lookup"><span data-stu-id="81a7e-553">Writes the &lt;saml:AuthzDecisionStatement&gt; element.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="81a7e-554"><paramref name="data" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="81a7e-554"><paramref name="data" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="81a7e-555">- 或 -</span><span class="sxs-lookup"><span data-stu-id="81a7e-555">-or-</span></span> 
 <span data-ttu-id="81a7e-556"><paramref name="writer" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="81a7e-556"><paramref name="writer" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteConditions">
      <MemberSignature Language="C#" Value="protected virtual void WriteConditions (System.Xml.XmlWriter writer, System.IdentityModel.Tokens.Saml2Conditions data);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void WriteConditions(class System.Xml.XmlWriter writer, class System.IdentityModel.Tokens.Saml2Conditions data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteConditions(System.Xml.XmlWriter,System.IdentityModel.Tokens.Saml2Conditions)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub WriteConditions (writer As XmlWriter, data As Saml2Conditions)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void WriteConditions(System::Xml::XmlWriter ^ writer, System::IdentityModel::Tokens::Saml2Conditions ^ data);" />
      <MemberSignature Language="F#" Value="abstract member WriteConditions : System.Xml.XmlWriter * System.IdentityModel.Tokens.Saml2Conditions -&gt; unit&#xA;override this.WriteConditions : System.Xml.XmlWriter * System.IdentityModel.Tokens.Saml2Conditions -&gt; unit" Usage="saml2SecurityTokenHandler.WriteConditions (writer, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
        <Parameter Name="data" Type="System.IdentityModel.Tokens.Saml2Conditions" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="81a7e-557">用于写数据的 <see cref="T:System.Xml.XmlWriter" />。</span><span class="sxs-lookup"><span data-stu-id="81a7e-557">The <see cref="T:System.Xml.XmlWriter" /> with which to write the data.</span></span></param>
        <param name="data"><span data-ttu-id="81a7e-558">要写入的数据。</span><span class="sxs-lookup"><span data-stu-id="81a7e-558">The data to write.</span></span></param>
        <summary><span data-ttu-id="81a7e-559">写入 &lt;saml:Conditions&gt; 元素。</span><span class="sxs-lookup"><span data-stu-id="81a7e-559">Writes the &lt;saml:Conditions&gt; element.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="81a7e-560"><paramref name="data" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="81a7e-560"><paramref name="data" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="81a7e-561">- 或 -</span><span class="sxs-lookup"><span data-stu-id="81a7e-561">-or-</span></span> 
 <span data-ttu-id="81a7e-562"><paramref name="writer" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="81a7e-562"><paramref name="writer" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteEvidence">
      <MemberSignature Language="C#" Value="protected virtual void WriteEvidence (System.Xml.XmlWriter writer, System.IdentityModel.Tokens.Saml2Evidence data);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void WriteEvidence(class System.Xml.XmlWriter writer, class System.IdentityModel.Tokens.Saml2Evidence data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteEvidence(System.Xml.XmlWriter,System.IdentityModel.Tokens.Saml2Evidence)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub WriteEvidence (writer As XmlWriter, data As Saml2Evidence)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void WriteEvidence(System::Xml::XmlWriter ^ writer, System::IdentityModel::Tokens::Saml2Evidence ^ data);" />
      <MemberSignature Language="F#" Value="abstract member WriteEvidence : System.Xml.XmlWriter * System.IdentityModel.Tokens.Saml2Evidence -&gt; unit&#xA;override this.WriteEvidence : System.Xml.XmlWriter * System.IdentityModel.Tokens.Saml2Evidence -&gt; unit" Usage="saml2SecurityTokenHandler.WriteEvidence (writer, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
        <Parameter Name="data" Type="System.IdentityModel.Tokens.Saml2Evidence" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="81a7e-563">用于写数据的 <see cref="T:System.Xml.XmlWriter" />。</span><span class="sxs-lookup"><span data-stu-id="81a7e-563">The <see cref="T:System.Xml.XmlWriter" /> with which to write the data.</span></span></param>
        <param name="data"><span data-ttu-id="81a7e-564">要写入的数据。</span><span class="sxs-lookup"><span data-stu-id="81a7e-564">The data to write.</span></span></param>
        <summary><span data-ttu-id="81a7e-565">写入 &lt;saml:Evidence&gt; 元素。</span><span class="sxs-lookup"><span data-stu-id="81a7e-565">Writes the &lt;saml:Evidence&gt; element.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="81a7e-566"><paramref name="data" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="81a7e-566"><paramref name="data" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="81a7e-567">- 或 -</span><span class="sxs-lookup"><span data-stu-id="81a7e-567">-or-</span></span> 
 <span data-ttu-id="81a7e-568"><paramref name="writer" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="81a7e-568"><paramref name="writer" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteIssuer">
      <MemberSignature Language="C#" Value="protected virtual void WriteIssuer (System.Xml.XmlWriter writer, System.IdentityModel.Tokens.Saml2NameIdentifier data);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void WriteIssuer(class System.Xml.XmlWriter writer, class System.IdentityModel.Tokens.Saml2NameIdentifier data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteIssuer(System.Xml.XmlWriter,System.IdentityModel.Tokens.Saml2NameIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub WriteIssuer (writer As XmlWriter, data As Saml2NameIdentifier)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void WriteIssuer(System::Xml::XmlWriter ^ writer, System::IdentityModel::Tokens::Saml2NameIdentifier ^ data);" />
      <MemberSignature Language="F#" Value="abstract member WriteIssuer : System.Xml.XmlWriter * System.IdentityModel.Tokens.Saml2NameIdentifier -&gt; unit&#xA;override this.WriteIssuer : System.Xml.XmlWriter * System.IdentityModel.Tokens.Saml2NameIdentifier -&gt; unit" Usage="saml2SecurityTokenHandler.WriteIssuer (writer, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
        <Parameter Name="data" Type="System.IdentityModel.Tokens.Saml2NameIdentifier" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="81a7e-569">用于写数据的 <see cref="T:System.Xml.XmlWriter" />。</span><span class="sxs-lookup"><span data-stu-id="81a7e-569">The <see cref="T:System.Xml.XmlWriter" /> with which to write the data.</span></span></param>
        <param name="data"><span data-ttu-id="81a7e-570">要写入的数据。</span><span class="sxs-lookup"><span data-stu-id="81a7e-570">The data to write.</span></span></param>
        <summary><span data-ttu-id="81a7e-571">写入 &lt;saml:Issuer&gt; 元素。</span><span class="sxs-lookup"><span data-stu-id="81a7e-571">Writes the &lt;saml:Issuer&gt; element.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="81a7e-572"><paramref name="data" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="81a7e-572"><paramref name="data" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="81a7e-573">- 或 -</span><span class="sxs-lookup"><span data-stu-id="81a7e-573">-or-</span></span> 
 <span data-ttu-id="81a7e-574"><paramref name="writer" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="81a7e-574"><paramref name="writer" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteKeyIdentifierClause">
      <MemberSignature Language="C#" Value="public override void WriteKeyIdentifierClause (System.Xml.XmlWriter writer, System.IdentityModel.Tokens.SecurityKeyIdentifierClause securityKeyIdentifierClause);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteKeyIdentifierClause(class System.Xml.XmlWriter writer, class System.IdentityModel.Tokens.SecurityKeyIdentifierClause securityKeyIdentifierClause) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteKeyIdentifierClause(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteKeyIdentifierClause (writer As XmlWriter, securityKeyIdentifierClause As SecurityKeyIdentifierClause)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteKeyIdentifierClause(System::Xml::XmlWriter ^ writer, System::IdentityModel::Tokens::SecurityKeyIdentifierClause ^ securityKeyIdentifierClause);" />
      <MemberSignature Language="F#" Value="override this.WriteKeyIdentifierClause : System.Xml.XmlWriter * System.IdentityModel.Tokens.SecurityKeyIdentifierClause -&gt; unit" Usage="saml2SecurityTokenHandler.WriteKeyIdentifierClause (writer, securityKeyIdentifierClause)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
        <Parameter Name="securityKeyIdentifierClause" Type="System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="81a7e-575">序列化密钥标识符子句的 <see cref="T:System.Xml.XmlWriter" />。</span><span class="sxs-lookup"><span data-stu-id="81a7e-575">The <see cref="T:System.Xml.XmlWriter" /> to serialize the key identifier clause.</span></span></param>
        <param name="securityKeyIdentifierClause"><span data-ttu-id="81a7e-576">一个 <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />，表示要序列化的密钥标识符子句。</span><span class="sxs-lookup"><span data-stu-id="81a7e-576">A <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> that represents the key identifier clause to be serialized.</span></span></param>
        <summary><span data-ttu-id="81a7e-577">将 <see cref="T:System.IdentityModel.Tokens.Saml2AssertionKeyIdentifierClause" /> 序列化为指定的 XML 编写器。</span><span class="sxs-lookup"><span data-stu-id="81a7e-577">Serializes a <see cref="T:System.IdentityModel.Tokens.Saml2AssertionKeyIdentifierClause" /> to the specified XML writer.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="81a7e-578"><paramref name="data" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="81a7e-578"><paramref name="data" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="81a7e-579">- 或 -</span><span class="sxs-lookup"><span data-stu-id="81a7e-579">-or-</span></span> 
 <span data-ttu-id="81a7e-580"><paramref name="securityKeyIdentifierClause" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="81a7e-580"><paramref name="securityKeyIdentifierClause" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteNameId">
      <MemberSignature Language="C#" Value="protected virtual void WriteNameId (System.Xml.XmlWriter writer, System.IdentityModel.Tokens.Saml2NameIdentifier data);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void WriteNameId(class System.Xml.XmlWriter writer, class System.IdentityModel.Tokens.Saml2NameIdentifier data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteNameId(System.Xml.XmlWriter,System.IdentityModel.Tokens.Saml2NameIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub WriteNameId (writer As XmlWriter, data As Saml2NameIdentifier)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void WriteNameId(System::Xml::XmlWriter ^ writer, System::IdentityModel::Tokens::Saml2NameIdentifier ^ data);" />
      <MemberSignature Language="F#" Value="abstract member WriteNameId : System.Xml.XmlWriter * System.IdentityModel.Tokens.Saml2NameIdentifier -&gt; unit&#xA;override this.WriteNameId : System.Xml.XmlWriter * System.IdentityModel.Tokens.Saml2NameIdentifier -&gt; unit" Usage="saml2SecurityTokenHandler.WriteNameId (writer, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
        <Parameter Name="data" Type="System.IdentityModel.Tokens.Saml2NameIdentifier" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="81a7e-581">用于序列化 <see cref="T:System.Xml.XmlWriter" /> 的 <see cref="T:System.IdentityModel.Tokens.Saml2NameIdentifier" />。</span><span class="sxs-lookup"><span data-stu-id="81a7e-581">The <see cref="T:System.Xml.XmlWriter" /> with which to serialize the <see cref="T:System.IdentityModel.Tokens.Saml2NameIdentifier" />.</span></span></param>
        <param name="data"><span data-ttu-id="81a7e-582">要序列化的 <see cref="T:System.IdentityModel.Tokens.Saml2NameIdentifier" />。</span><span class="sxs-lookup"><span data-stu-id="81a7e-582">The <see cref="T:System.IdentityModel.Tokens.Saml2NameIdentifier" /> to be serialized.</span></span></param>
        <summary><span data-ttu-id="81a7e-583">写入 &lt;saml:NameID&gt; 元素。</span><span class="sxs-lookup"><span data-stu-id="81a7e-583">Writes the &lt;saml:NameID&gt; element.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="81a7e-584"><paramref name="data" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="81a7e-584"><paramref name="data" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="81a7e-585">- 或 -</span><span class="sxs-lookup"><span data-stu-id="81a7e-585">-or-</span></span> 
 <span data-ttu-id="81a7e-586"><paramref name="writer" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="81a7e-586"><paramref name="writer" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="81a7e-587">Saml2NameIdentifier 加密凭据必须有一个指定的“对称密钥”。</span><span class="sxs-lookup"><span data-stu-id="81a7e-587">The Saml2NameIdentifier encrypting credentials must have a Symmetric Key specified.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteNameIdType">
      <MemberSignature Language="C#" Value="protected virtual void WriteNameIdType (System.Xml.XmlWriter writer, System.IdentityModel.Tokens.Saml2NameIdentifier data);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void WriteNameIdType(class System.Xml.XmlWriter writer, class System.IdentityModel.Tokens.Saml2NameIdentifier data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteNameIdType(System.Xml.XmlWriter,System.IdentityModel.Tokens.Saml2NameIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub WriteNameIdType (writer As XmlWriter, data As Saml2NameIdentifier)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void WriteNameIdType(System::Xml::XmlWriter ^ writer, System::IdentityModel::Tokens::Saml2NameIdentifier ^ data);" />
      <MemberSignature Language="F#" Value="abstract member WriteNameIdType : System.Xml.XmlWriter * System.IdentityModel.Tokens.Saml2NameIdentifier -&gt; unit&#xA;override this.WriteNameIdType : System.Xml.XmlWriter * System.IdentityModel.Tokens.Saml2NameIdentifier -&gt; unit" Usage="saml2SecurityTokenHandler.WriteNameIdType (writer, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
        <Parameter Name="data" Type="System.IdentityModel.Tokens.Saml2NameIdentifier" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="81a7e-588">用于序列化 NameID 类型的 <see cref="T:System.Xml.XmlWriter" />。</span><span class="sxs-lookup"><span data-stu-id="81a7e-588">The <see cref="T:System.Xml.XmlWriter" /> with which to serialize the NameID type.</span></span></param>
        <param name="data"><span data-ttu-id="81a7e-589">要写入的 <see cref="T:System.IdentityModel.Tokens.Saml2NameIdentifier" />。</span><span class="sxs-lookup"><span data-stu-id="81a7e-589">The <see cref="T:System.IdentityModel.Tokens.Saml2NameIdentifier" /> to write.</span></span></param>
        <summary><span data-ttu-id="81a7e-590">&lt;Issuer&gt; 和 &lt;NameID&gt; 都是 NameIDType。</span><span class="sxs-lookup"><span data-stu-id="81a7e-590">Both &lt;Issuer&gt; and &lt;NameID&gt; are of NameIDType.</span></span> <span data-ttu-id="81a7e-591">此方法写入这些元素之一的内容。</span><span class="sxs-lookup"><span data-stu-id="81a7e-591">This method writes the content of either one of those elements.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="81a7e-592"><paramref name="data" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="81a7e-592"><paramref name="data" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="81a7e-593">- 或 -</span><span class="sxs-lookup"><span data-stu-id="81a7e-593">-or-</span></span> 
 <span data-ttu-id="81a7e-594"><paramref name="writer" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="81a7e-594"><paramref name="writer" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteProxyRestriction">
      <MemberSignature Language="C#" Value="protected virtual void WriteProxyRestriction (System.Xml.XmlWriter writer, System.IdentityModel.Tokens.Saml2ProxyRestriction data);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void WriteProxyRestriction(class System.Xml.XmlWriter writer, class System.IdentityModel.Tokens.Saml2ProxyRestriction data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteProxyRestriction(System.Xml.XmlWriter,System.IdentityModel.Tokens.Saml2ProxyRestriction)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub WriteProxyRestriction (writer As XmlWriter, data As Saml2ProxyRestriction)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void WriteProxyRestriction(System::Xml::XmlWriter ^ writer, System::IdentityModel::Tokens::Saml2ProxyRestriction ^ data);" />
      <MemberSignature Language="F#" Value="abstract member WriteProxyRestriction : System.Xml.XmlWriter * System.IdentityModel.Tokens.Saml2ProxyRestriction -&gt; unit&#xA;override this.WriteProxyRestriction : System.Xml.XmlWriter * System.IdentityModel.Tokens.Saml2ProxyRestriction -&gt; unit" Usage="saml2SecurityTokenHandler.WriteProxyRestriction (writer, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
        <Parameter Name="data" Type="System.IdentityModel.Tokens.Saml2ProxyRestriction" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="81a7e-595">用于写数据的 <see cref="T:System.Xml.XmlWriter" />。</span><span class="sxs-lookup"><span data-stu-id="81a7e-595">The <see cref="T:System.Xml.XmlWriter" /> with which to write the data.</span></span></param>
        <param name="data"><span data-ttu-id="81a7e-596">要写入的数据。</span><span class="sxs-lookup"><span data-stu-id="81a7e-596">The data to write.</span></span></param>
        <summary><span data-ttu-id="81a7e-597">写入 &lt;saml:ProxyRestriction&gt; 元素。</span><span class="sxs-lookup"><span data-stu-id="81a7e-597">Writes the &lt;saml:ProxyRestriction&gt; element.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="81a7e-598"><paramref name="data" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="81a7e-598"><paramref name="data" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="81a7e-599">- 或 -</span><span class="sxs-lookup"><span data-stu-id="81a7e-599">-or-</span></span> 
 <span data-ttu-id="81a7e-600"><paramref name="writer" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="81a7e-600"><paramref name="writer" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteSigningKeyInfo">
      <MemberSignature Language="C#" Value="protected virtual void WriteSigningKeyInfo (System.Xml.XmlWriter writer, System.IdentityModel.Tokens.SecurityKeyIdentifier data);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void WriteSigningKeyInfo(class System.Xml.XmlWriter writer, class System.IdentityModel.Tokens.SecurityKeyIdentifier data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteSigningKeyInfo(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub WriteSigningKeyInfo (writer As XmlWriter, data As SecurityKeyIdentifier)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void WriteSigningKeyInfo(System::Xml::XmlWriter ^ writer, System::IdentityModel::Tokens::SecurityKeyIdentifier ^ data);" />
      <MemberSignature Language="F#" Value="abstract member WriteSigningKeyInfo : System.Xml.XmlWriter * System.IdentityModel.Tokens.SecurityKeyIdentifier -&gt; unit&#xA;override this.WriteSigningKeyInfo : System.Xml.XmlWriter * System.IdentityModel.Tokens.SecurityKeyIdentifier -&gt; unit" Usage="saml2SecurityTokenHandler.WriteSigningKeyInfo (writer, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
        <Parameter Name="data" Type="System.IdentityModel.Tokens.SecurityKeyIdentifier" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="81a7e-601">用于序列化密钥标识符的 <see cref="T:System.Xml.XmlWriter" />。</span><span class="sxs-lookup"><span data-stu-id="81a7e-601">The <see cref="T:System.Xml.XmlWriter" /> with which to serialize the key identifier.</span></span></param>
        <param name="data"><span data-ttu-id="81a7e-602">表示要写入的密钥标识符的 <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" />。</span><span class="sxs-lookup"><span data-stu-id="81a7e-602">The <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" /> that represents the key identifier to write.</span></span></param>
        <summary><span data-ttu-id="81a7e-603">使用指定 XML 编写器写入签名 &lt;ds:KeyInfo&gt; 元素。</span><span class="sxs-lookup"><span data-stu-id="81a7e-603">Writes the Signing &lt;ds:KeyInfo&gt; element using the specified XML writer.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="81a7e-604"><paramref name="signingKeyIdentifier" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="81a7e-604"><paramref name="signingKeyIdentifier" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="81a7e-605">- 或 -</span><span class="sxs-lookup"><span data-stu-id="81a7e-605">-or-</span></span> 
 <span data-ttu-id="81a7e-606"><paramref name="writer" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="81a7e-606"><paramref name="writer" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="81a7e-607">处理程序无法序列化由 <paramref name="signingKeyIdentifier" /> 指定的键标识符。</span><span class="sxs-lookup"><span data-stu-id="81a7e-607">The handler cannot serialize the key identifier specified by <paramref name="signingKeyIdentifier" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteStatement">
      <MemberSignature Language="C#" Value="protected virtual void WriteStatement (System.Xml.XmlWriter writer, System.IdentityModel.Tokens.Saml2Statement data);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void WriteStatement(class System.Xml.XmlWriter writer, class System.IdentityModel.Tokens.Saml2Statement data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteStatement(System.Xml.XmlWriter,System.IdentityModel.Tokens.Saml2Statement)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub WriteStatement (writer As XmlWriter, data As Saml2Statement)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void WriteStatement(System::Xml::XmlWriter ^ writer, System::IdentityModel::Tokens::Saml2Statement ^ data);" />
      <MemberSignature Language="F#" Value="abstract member WriteStatement : System.Xml.XmlWriter * System.IdentityModel.Tokens.Saml2Statement -&gt; unit&#xA;override this.WriteStatement : System.Xml.XmlWriter * System.IdentityModel.Tokens.Saml2Statement -&gt; unit" Usage="saml2SecurityTokenHandler.WriteStatement (writer, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
        <Parameter Name="data" Type="System.IdentityModel.Tokens.Saml2Statement" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="81a7e-608">用于写数据的 <see cref="T:System.Xml.XmlWriter" />。</span><span class="sxs-lookup"><span data-stu-id="81a7e-608">The <see cref="T:System.Xml.XmlWriter" /> with which to write the data.</span></span></param>
        <param name="data"><span data-ttu-id="81a7e-609">要写入的数据。</span><span class="sxs-lookup"><span data-stu-id="81a7e-609">The data to write.</span></span></param>
        <summary><span data-ttu-id="81a7e-610">写入 Saml2Statement。</span><span class="sxs-lookup"><span data-stu-id="81a7e-610">Writes a Saml2Statement.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="81a7e-611">此方法可能会写入 \<saml:AttributeStatement> 、 \<saml:AuthnStatement> 或 \<saml:AuthzDecisionStatement> 元素。</span><span class="sxs-lookup"><span data-stu-id="81a7e-611">This method may write a \<saml:AttributeStatement>, \<saml:AuthnStatement>, or \<saml:AuthzDecisionStatement> element.</span></span> <span data-ttu-id="81a7e-612">若要处理 <xref:System.IdentityModel.Tokens.Saml2Statement> 用于写入元素的自定义类 \<saml:Statement> ，请重写此方法。</span><span class="sxs-lookup"><span data-stu-id="81a7e-612">To handle custom <xref:System.IdentityModel.Tokens.Saml2Statement> classes for writing a \<saml:Statement> element, override this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="81a7e-613"><paramref name="data" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="81a7e-613"><paramref name="data" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="81a7e-614">- 或 -</span><span class="sxs-lookup"><span data-stu-id="81a7e-614">-or-</span></span> 
 <span data-ttu-id="81a7e-615"><paramref name="writer" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="81a7e-615"><paramref name="writer" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteSubject">
      <MemberSignature Language="C#" Value="protected virtual void WriteSubject (System.Xml.XmlWriter writer, System.IdentityModel.Tokens.Saml2Subject data);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void WriteSubject(class System.Xml.XmlWriter writer, class System.IdentityModel.Tokens.Saml2Subject data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteSubject(System.Xml.XmlWriter,System.IdentityModel.Tokens.Saml2Subject)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub WriteSubject (writer As XmlWriter, data As Saml2Subject)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void WriteSubject(System::Xml::XmlWriter ^ writer, System::IdentityModel::Tokens::Saml2Subject ^ data);" />
      <MemberSignature Language="F#" Value="abstract member WriteSubject : System.Xml.XmlWriter * System.IdentityModel.Tokens.Saml2Subject -&gt; unit&#xA;override this.WriteSubject : System.Xml.XmlWriter * System.IdentityModel.Tokens.Saml2Subject -&gt; unit" Usage="saml2SecurityTokenHandler.WriteSubject (writer, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
        <Parameter Name="data" Type="System.IdentityModel.Tokens.Saml2Subject" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="81a7e-616">用于写数据的 <see cref="T:System.Xml.XmlWriter" />。</span><span class="sxs-lookup"><span data-stu-id="81a7e-616">The <see cref="T:System.Xml.XmlWriter" /> with which to write the data.</span></span></param>
        <param name="data"><span data-ttu-id="81a7e-617">要写入的数据。</span><span class="sxs-lookup"><span data-stu-id="81a7e-617">The data to write.</span></span></param>
        <summary><span data-ttu-id="81a7e-618">写入 &lt;saml:Subject&gt; 元素。</span><span class="sxs-lookup"><span data-stu-id="81a7e-618">Writes the &lt;saml:Subject&gt; element.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="81a7e-619"><paramref name="data" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="81a7e-619"><paramref name="data" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="81a7e-620">- 或 -</span><span class="sxs-lookup"><span data-stu-id="81a7e-620">-or-</span></span> 
 <span data-ttu-id="81a7e-621"><paramref name="writer" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="81a7e-621"><paramref name="writer" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteSubjectConfirmation">
      <MemberSignature Language="C#" Value="protected virtual void WriteSubjectConfirmation (System.Xml.XmlWriter writer, System.IdentityModel.Tokens.Saml2SubjectConfirmation data);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void WriteSubjectConfirmation(class System.Xml.XmlWriter writer, class System.IdentityModel.Tokens.Saml2SubjectConfirmation data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteSubjectConfirmation(System.Xml.XmlWriter,System.IdentityModel.Tokens.Saml2SubjectConfirmation)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub WriteSubjectConfirmation (writer As XmlWriter, data As Saml2SubjectConfirmation)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void WriteSubjectConfirmation(System::Xml::XmlWriter ^ writer, System::IdentityModel::Tokens::Saml2SubjectConfirmation ^ data);" />
      <MemberSignature Language="F#" Value="abstract member WriteSubjectConfirmation : System.Xml.XmlWriter * System.IdentityModel.Tokens.Saml2SubjectConfirmation -&gt; unit&#xA;override this.WriteSubjectConfirmation : System.Xml.XmlWriter * System.IdentityModel.Tokens.Saml2SubjectConfirmation -&gt; unit" Usage="saml2SecurityTokenHandler.WriteSubjectConfirmation (writer, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
        <Parameter Name="data" Type="System.IdentityModel.Tokens.Saml2SubjectConfirmation" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="81a7e-622">用于写数据的 <see cref="T:System.Xml.XmlWriter" />。</span><span class="sxs-lookup"><span data-stu-id="81a7e-622">The <see cref="T:System.Xml.XmlWriter" /> with which to write the data.</span></span></param>
        <param name="data"><span data-ttu-id="81a7e-623">要写入的数据。</span><span class="sxs-lookup"><span data-stu-id="81a7e-623">The data to write.</span></span></param>
        <summary><span data-ttu-id="81a7e-624">写入 &lt;saml:SubjectConfirmation&gt; 元素。</span><span class="sxs-lookup"><span data-stu-id="81a7e-624">Writes the &lt;saml:SubjectConfirmation&gt; element.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="81a7e-625"><paramref name="data" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="81a7e-625"><paramref name="data" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="81a7e-626">- 或 -</span><span class="sxs-lookup"><span data-stu-id="81a7e-626">-or-</span></span> 
 <span data-ttu-id="81a7e-627"><paramref name="writer" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="81a7e-627"><paramref name="writer" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteSubjectConfirmationData">
      <MemberSignature Language="C#" Value="protected virtual void WriteSubjectConfirmationData (System.Xml.XmlWriter writer, System.IdentityModel.Tokens.Saml2SubjectConfirmationData data);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void WriteSubjectConfirmationData(class System.Xml.XmlWriter writer, class System.IdentityModel.Tokens.Saml2SubjectConfirmationData data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteSubjectConfirmationData(System.Xml.XmlWriter,System.IdentityModel.Tokens.Saml2SubjectConfirmationData)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub WriteSubjectConfirmationData (writer As XmlWriter, data As Saml2SubjectConfirmationData)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void WriteSubjectConfirmationData(System::Xml::XmlWriter ^ writer, System::IdentityModel::Tokens::Saml2SubjectConfirmationData ^ data);" />
      <MemberSignature Language="F#" Value="abstract member WriteSubjectConfirmationData : System.Xml.XmlWriter * System.IdentityModel.Tokens.Saml2SubjectConfirmationData -&gt; unit&#xA;override this.WriteSubjectConfirmationData : System.Xml.XmlWriter * System.IdentityModel.Tokens.Saml2SubjectConfirmationData -&gt; unit" Usage="saml2SecurityTokenHandler.WriteSubjectConfirmationData (writer, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
        <Parameter Name="data" Type="System.IdentityModel.Tokens.Saml2SubjectConfirmationData" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="81a7e-628">用于写数据的 <see cref="T:System.Xml.XmlWriter" />。</span><span class="sxs-lookup"><span data-stu-id="81a7e-628">The <see cref="T:System.Xml.XmlWriter" /> with which to write the data.</span></span></param>
        <param name="data"><span data-ttu-id="81a7e-629">要写入的数据。</span><span class="sxs-lookup"><span data-stu-id="81a7e-629">The data to write.</span></span></param>
        <summary><span data-ttu-id="81a7e-630">写入 &lt;saml:SubjectConfirmationData&gt; 元素。</span><span class="sxs-lookup"><span data-stu-id="81a7e-630">Writes the &lt;saml:SubjectConfirmationData&gt; element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="81a7e-631">数据。KeyIdentifiers 集合不为空，则将在指定 saml： KeyInfoConfirmationDataType 的情况下编写 xsi： type 属性。</span><span class="sxs-lookup"><span data-stu-id="81a7e-631">When the data.KeyIdentifiers collection is not empty, an xsi:type attribute will be written specifying the saml:KeyInfoConfirmationDataType.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="81a7e-632"><paramref name="data" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="81a7e-632"><paramref name="data" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="81a7e-633">- 或 -</span><span class="sxs-lookup"><span data-stu-id="81a7e-633">-or-</span></span> 
 <span data-ttu-id="81a7e-634"><paramref name="writer" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="81a7e-634"><paramref name="writer" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteSubjectKeyInfo">
      <MemberSignature Language="C#" Value="protected virtual void WriteSubjectKeyInfo (System.Xml.XmlWriter writer, System.IdentityModel.Tokens.SecurityKeyIdentifier data);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void WriteSubjectKeyInfo(class System.Xml.XmlWriter writer, class System.IdentityModel.Tokens.SecurityKeyIdentifier data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteSubjectKeyInfo(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub WriteSubjectKeyInfo (writer As XmlWriter, data As SecurityKeyIdentifier)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void WriteSubjectKeyInfo(System::Xml::XmlWriter ^ writer, System::IdentityModel::Tokens::SecurityKeyIdentifier ^ data);" />
      <MemberSignature Language="F#" Value="abstract member WriteSubjectKeyInfo : System.Xml.XmlWriter * System.IdentityModel.Tokens.SecurityKeyIdentifier -&gt; unit&#xA;override this.WriteSubjectKeyInfo : System.Xml.XmlWriter * System.IdentityModel.Tokens.SecurityKeyIdentifier -&gt; unit" Usage="saml2SecurityTokenHandler.WriteSubjectKeyInfo (writer, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
        <Parameter Name="data" Type="System.IdentityModel.Tokens.SecurityKeyIdentifier" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="81a7e-635">用于序列化密钥标识符的 <see cref="T:System.Xml.XmlWriter" />。</span><span class="sxs-lookup"><span data-stu-id="81a7e-635">The <see cref="T:System.Xml.XmlWriter" /> with which to serialize the key identifier.</span></span></param>
        <param name="data"><span data-ttu-id="81a7e-636">表示要写入的密钥标识符的 <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" />。</span><span class="sxs-lookup"><span data-stu-id="81a7e-636">The <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" /> that represents the key identifier to write.</span></span></param>
        <summary><span data-ttu-id="81a7e-637">使用指定的 XML 编写器序列化主题 &lt;ds:KeyInfo&gt; 元素。</span><span class="sxs-lookup"><span data-stu-id="81a7e-637">Serializes the Subject &lt;ds:KeyInfo&gt; element using the specified XML writer.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="81a7e-638"><paramref name="data" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="81a7e-638"><paramref name="data" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="81a7e-639">- 或 -</span><span class="sxs-lookup"><span data-stu-id="81a7e-639">-or-</span></span> 
 <span data-ttu-id="81a7e-640"><paramref name="writer" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="81a7e-640"><paramref name="writer" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteSubjectLocality">
      <MemberSignature Language="C#" Value="protected virtual void WriteSubjectLocality (System.Xml.XmlWriter writer, System.IdentityModel.Tokens.Saml2SubjectLocality data);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void WriteSubjectLocality(class System.Xml.XmlWriter writer, class System.IdentityModel.Tokens.Saml2SubjectLocality data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteSubjectLocality(System.Xml.XmlWriter,System.IdentityModel.Tokens.Saml2SubjectLocality)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub WriteSubjectLocality (writer As XmlWriter, data As Saml2SubjectLocality)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void WriteSubjectLocality(System::Xml::XmlWriter ^ writer, System::IdentityModel::Tokens::Saml2SubjectLocality ^ data);" />
      <MemberSignature Language="F#" Value="abstract member WriteSubjectLocality : System.Xml.XmlWriter * System.IdentityModel.Tokens.Saml2SubjectLocality -&gt; unit&#xA;override this.WriteSubjectLocality : System.Xml.XmlWriter * System.IdentityModel.Tokens.Saml2SubjectLocality -&gt; unit" Usage="saml2SecurityTokenHandler.WriteSubjectLocality (writer, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
        <Parameter Name="data" Type="System.IdentityModel.Tokens.Saml2SubjectLocality" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="81a7e-641">用于写数据的 <see cref="T:System.Xml.XmlWriter" />。</span><span class="sxs-lookup"><span data-stu-id="81a7e-641">The <see cref="T:System.Xml.XmlWriter" /> with which to write the data.</span></span></param>
        <param name="data"><span data-ttu-id="81a7e-642">要写入的数据。</span><span class="sxs-lookup"><span data-stu-id="81a7e-642">The data to write.</span></span></param>
        <summary><span data-ttu-id="81a7e-643">写入 &lt;saml:SubjectLocality&gt; 元素。</span><span class="sxs-lookup"><span data-stu-id="81a7e-643">Writes the &lt;saml:SubjectLocality&gt; element.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="81a7e-644"><paramref name="data" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="81a7e-644"><paramref name="data" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="81a7e-645">- 或 -</span><span class="sxs-lookup"><span data-stu-id="81a7e-645">-or-</span></span> 
 <span data-ttu-id="81a7e-646"><paramref name="writer" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="81a7e-646"><paramref name="writer" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteToken">
      <MemberSignature Language="C#" Value="public override void WriteToken (System.Xml.XmlWriter writer, System.IdentityModel.Tokens.SecurityToken token);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteToken(class System.Xml.XmlWriter writer, class System.IdentityModel.Tokens.SecurityToken token) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteToken (writer As XmlWriter, token As SecurityToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteToken(System::Xml::XmlWriter ^ writer, System::IdentityModel::Tokens::SecurityToken ^ token);" />
      <MemberSignature Language="F#" Value="override this.WriteToken : System.Xml.XmlWriter * System.IdentityModel.Tokens.SecurityToken -&gt; unit" Usage="saml2SecurityTokenHandler.WriteToken (writer, token)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
        <Parameter Name="token" Type="System.IdentityModel.Tokens.SecurityToken" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="81a7e-647">用于写数据的 <see cref="T:System.Xml.XmlWriter" />。</span><span class="sxs-lookup"><span data-stu-id="81a7e-647">The <see cref="T:System.Xml.XmlWriter" /> with which to write the data.</span></span></param>
        <param name="token"><span data-ttu-id="81a7e-648">要写入的标记。</span><span class="sxs-lookup"><span data-stu-id="81a7e-648">The token to write.</span></span></param>
        <summary><span data-ttu-id="81a7e-649">将 SAML2 令牌写入指定的 XML 写入器。</span><span class="sxs-lookup"><span data-stu-id="81a7e-649">Writes a Saml2 Token to the specified XML writer.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="81a7e-650"><paramref name="data" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="81a7e-650"><paramref name="data" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="81a7e-651">- 或 -</span><span class="sxs-lookup"><span data-stu-id="81a7e-651">-or-</span></span> 
 <span data-ttu-id="81a7e-652"><paramref name="writer" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="81a7e-652"><paramref name="writer" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="81a7e-653"><paramref name="token" /> 不是 <see cref="T:System.IdentityModel.Tokens.Saml2SecurityToken" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="81a7e-653"><paramref name="token" /> is not a <see cref="T:System.IdentityModel.Tokens.Saml2SecurityToken" /> object.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
