<Type Name="ObjectQuery" FullName="System.Data.Objects.ObjectQuery">
  <Metadata><Meta Name="ms.openlocfilehash" Value="6cd6c5e8326760218da2ef467bf660f1226987cc" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89720264" /></Metadata><TypeSignature Language="C#" Value="public abstract class ObjectQuery : System.Collections.IEnumerable, System.ComponentModel.IListSource, System.Linq.IOrderedQueryable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ObjectQuery extends System.Object implements class System.Collections.IEnumerable, class System.ComponentModel.IListSource, class System.Linq.IOrderedQueryable, class System.Linq.IQueryable" />
  <TypeSignature Language="DocId" Value="T:System.Data.Objects.ObjectQuery" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ObjectQuery&#xA;Implements IEnumerable, IListSource, IOrderedQueryable" />
  <TypeSignature Language="C++ CLI" Value="public ref class ObjectQuery abstract : System::Collections::IEnumerable, System::ComponentModel::IListSource, System::Linq::IOrderedQueryable" />
  <TypeSignature Language="F#" Value="type ObjectQuery = class&#xA;    interface IOrderedQueryable&#xA;    interface IQueryable&#xA;    interface IEnumerable&#xA;    interface IListSource" FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2" />
  <TypeSignature Language="F#" Value="type ObjectQuery = class&#xA;    interface IEnumerable&#xA;    interface IQueryable&#xA;    interface IOrderedQueryable&#xA;    interface IListSource" FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Entity</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ComponentModel.IListSource</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Linq.IOrderedQueryable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Linq.IQueryable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="cf5bf-101">实现使用 LINQ to Entities 和 <see cref="T:System.Data.Objects.ObjectQuery`1" /> 对概念模型执行查询的通用功能。</span><span class="sxs-lookup"><span data-stu-id="cf5bf-101">Implements common functionality for queries against a conceptual model using both LINQ to Entities and <see cref="T:System.Data.Objects.ObjectQuery`1" />.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="cf5bf-102"><xref:System.Data.Objects.ObjectQuery> 是针对概念模型的查询的基类。</span><span class="sxs-lookup"><span data-stu-id="cf5bf-102"><xref:System.Data.Objects.ObjectQuery> is the base class for queries against a conceptual model.</span></span> <span data-ttu-id="cf5bf-103"><xref:System.Data.Objects.ObjectQuery> 提供它是为了确保 LINQ to Entities 查询与使用执行的查询具有相同的功能 <xref:System.Data.Objects.ObjectQuery%601> 。</span><span class="sxs-lookup"><span data-stu-id="cf5bf-103"><xref:System.Data.Objects.ObjectQuery> is provided to ensure that LINQ to Entities queries have the same functionality as queries executed using <xref:System.Data.Objects.ObjectQuery%601>.</span></span> <span data-ttu-id="cf5bf-104">必须使用 <xref:System.Data.Objects.ObjectQuery%601> 具有指定类型的来查询概念模型。</span><span class="sxs-lookup"><span data-stu-id="cf5bf-104">You must use <xref:System.Data.Objects.ObjectQuery%601> with a specified type to query a conceptual model.</span></span> <span data-ttu-id="cf5bf-105">有关详细信息，请参阅 [对象查询](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/bb896241(v=vs.100))。</span><span class="sxs-lookup"><span data-stu-id="cf5bf-105">For more information, see [Object Queries](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/bb896241(v=vs.100)).</span></span>

 ]]></format>
    </remarks>
    <related type="Article" href="/dotnet/framework/data/adonet/ef/language-reference/linq-to-entities"><span data-ttu-id="cf5bf-106">LINQ to Entities</span><span class="sxs-lookup"><span data-stu-id="cf5bf-106">LINQ to Entities</span></span></related>
  </Docs>
  <Members>
    <Member MemberName="CommandText">
      <MemberSignature Language="C#" Value="public string CommandText { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CommandText" />
      <MemberSignature Language="DocId" Value="P:System.Data.Objects.ObjectQuery.CommandText" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CommandText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CommandText { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CommandText : string" Usage="System.Data.Objects.ObjectQuery.CommandText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cf5bf-107">返回查询的命令文本。</span><span class="sxs-lookup"><span data-stu-id="cf5bf-107">Returns the command text for the query.</span></span></summary>
        <value><span data-ttu-id="cf5bf-108">一个 <see langword="string" /> 值。</span><span class="sxs-lookup"><span data-stu-id="cf5bf-108">A <see langword="string" /> value.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Context">
      <MemberSignature Language="C#" Value="public System.Data.Objects.ObjectContext Context { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Objects.ObjectContext Context" />
      <MemberSignature Language="DocId" Value="P:System.Data.Objects.ObjectQuery.Context" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Context As ObjectContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Objects::ObjectContext ^ Context { System::Data::Objects::ObjectContext ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Context : System.Data.Objects.ObjectContext" Usage="System.Data.Objects.ObjectQuery.Context" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.ObjectContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cf5bf-109">获取与此对象查询相关联的对象上下文。</span><span class="sxs-lookup"><span data-stu-id="cf5bf-109">Gets the object context associated with this object query.</span></span></summary>
        <value><span data-ttu-id="cf5bf-110">与此 <see cref="T:System.Data.Objects.ObjectContext" /> 实例关联的 <see cref="T:System.Data.Objects.ObjectQuery`1" />。</span><span class="sxs-lookup"><span data-stu-id="cf5bf-110">The <see cref="T:System.Data.Objects.ObjectContext" /> associated with this <see cref="T:System.Data.Objects.ObjectQuery`1" /> instance.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="cf5bf-111">查询的上下文包括连接、缓存和元数据。</span><span class="sxs-lookup"><span data-stu-id="cf5bf-111">The context for the query includes the connection, cache, and metadata.</span></span> <span data-ttu-id="cf5bf-112">有关详细信息，请参阅[对象服务概述 (Entity Framework)](https://docs.microsoft.com/previous-versions/bb386871(v=vs.100))。</span><span class="sxs-lookup"><span data-stu-id="cf5bf-112">For more information, see [Object Services Overview (Entity Framework)](https://docs.microsoft.com/previous-versions/bb386871(v=vs.100)).</span></span>

 <span data-ttu-id="cf5bf-113">连接属性是可变的，执行查询前必须设置该属性。</span><span class="sxs-lookup"><span data-stu-id="cf5bf-113">The connection property is mutable and must be set before a query can be executed.</span></span> <span data-ttu-id="cf5bf-114">有关详细信息，请参阅 [实体框架) 中的 "管理对象服务 (中的连接 ](https://docs.microsoft.com/previous-versions/bb738582(v=vs.90))。</span><span class="sxs-lookup"><span data-stu-id="cf5bf-114">For more information, see [Managing Connections in Object Services (Entity Framework)](https://docs.microsoft.com/previous-versions/bb738582(v=vs.90)).</span></span>



## Examples
 <span data-ttu-id="cf5bf-115">本主题中的示例基于 " [Microsoft SQL Server 产品示例：数据库](https://archive.codeplex.com/?p=msftdbprodsamples)"。</span><span class="sxs-lookup"><span data-stu-id="cf5bf-115">The example in this topic is based on the [Microsoft SQL Server Product Samples: Database](https://archive.codeplex.com/?p=msftdbprodsamples).</span></span> <span data-ttu-id="cf5bf-116">此示例获取与此 <xref:System.Data.Objects.ObjectContext> 对象关联的 <xref:System.Data.Objects.ObjectQuery%601> 对象。</span><span class="sxs-lookup"><span data-stu-id="cf5bf-116">The example gets the <xref:System.Data.Objects.ObjectContext> object associated with this <xref:System.Data.Objects.ObjectQuery%601> object.</span></span>

 [!code-csharp[DP ObjectServices Concepts#ObjectQuery_Context](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#objectquery_context)]
 [!code-vb[DP ObjectServices Concepts#ObjectQuery_Context](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#objectquery_context)]

 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/data/adonet/ef/querying-a-conceptual-model"><span data-ttu-id="cf5bf-117">以对象形式查询数据，并 (实体框架形成结果) </span><span class="sxs-lookup"><span data-stu-id="cf5bf-117">Querying Data as Objects and Shaping Results (Entity Framework)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="EnablePlanCaching">
      <MemberSignature Language="C#" Value="public bool EnablePlanCaching { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnablePlanCaching" />
      <MemberSignature Language="DocId" Value="P:System.Data.Objects.ObjectQuery.EnablePlanCaching" />
      <MemberSignature Language="VB.NET" Value="Public Property EnablePlanCaching As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnablePlanCaching { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnablePlanCaching : bool with get, set" Usage="System.Data.Objects.ObjectQuery.EnablePlanCaching" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cf5bf-118">获取或设置一个值，该值指示是否应缓存查询计划。</span><span class="sxs-lookup"><span data-stu-id="cf5bf-118">Gets or sets a value that indicates whether the query plan should be cached.</span></span></summary>
        <value><span data-ttu-id="cf5bf-119">一个指示是否应缓存查询计划的值。</span><span class="sxs-lookup"><span data-stu-id="cf5bf-119">A value that indicates whether the query plan should be cached.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="cf5bf-120">有关详细信息，请参阅 [查询计划缓存](/dotnet/framework/data/adonet/ef/language-reference/query-plan-caching-entity-sql)。</span><span class="sxs-lookup"><span data-stu-id="cf5bf-120">For more information, see [Query Plan Caching](/dotnet/framework/data/adonet/ef/language-reference/query-plan-caching-entity-sql).</span></span>

 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/data/adonet/ef/querying-a-conceptual-model"><span data-ttu-id="cf5bf-121">以对象形式查询数据（实体框架）</span><span class="sxs-lookup"><span data-stu-id="cf5bf-121">Querying Data as Objects (Entity Framework)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Execute">
      <MemberSignature Language="C#" Value="public System.Data.Objects.ObjectResult Execute (System.Data.Objects.MergeOption mergeOption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Objects.ObjectResult Execute(valuetype System.Data.Objects.MergeOption mergeOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectQuery.Execute(System.Data.Objects.MergeOption)" />
      <MemberSignature Language="VB.NET" Value="Public Function Execute (mergeOption As MergeOption) As ObjectResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Objects::ObjectResult ^ Execute(System::Data::Objects::MergeOption mergeOption);" />
      <MemberSignature Language="F#" Value="member this.Execute : System.Data.Objects.MergeOption -&gt; System.Data.Objects.ObjectResult" Usage="objectQuery.Execute mergeOption" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.ObjectResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mergeOption" Type="System.Data.Objects.MergeOption" />
      </Parameters>
      <Docs>
        <param name="mergeOption"><span data-ttu-id="cf5bf-122">要在执行查询时使用的 <see cref="T:System.Data.Objects.MergeOption" />。</span><span class="sxs-lookup"><span data-stu-id="cf5bf-122">The <see cref="T:System.Data.Objects.MergeOption" /> to use when executing the query.</span></span> <span data-ttu-id="cf5bf-123">默认值为 <see cref="F:System.Data.Objects.MergeOption.AppendOnly" />。</span><span class="sxs-lookup"><span data-stu-id="cf5bf-123">The default is <see cref="F:System.Data.Objects.MergeOption.AppendOnly" />.</span></span></param>
        <summary><span data-ttu-id="cf5bf-124">使用指定合并选项执行非类型化对象查询。</span><span class="sxs-lookup"><span data-stu-id="cf5bf-124">Executes the untyped object query with the specified merge option.</span></span></summary>
        <returns><span data-ttu-id="cf5bf-125">一个 <see cref="T:System.Data.Objects.ObjectResult`1" />，它包含查询返回的实体对象的集合。</span><span class="sxs-lookup"><span data-stu-id="cf5bf-125">An <see cref="T:System.Data.Objects.ObjectResult`1" /> that contains a collection of entity objects returned by the query.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="cf5bf-126">对象查询的默认合并选项为 <xref:System.Data.Objects.MergeOption.AppendOnly>。</span><span class="sxs-lookup"><span data-stu-id="cf5bf-126">The default merge option for object queries is <xref:System.Data.Objects.MergeOption.AppendOnly>.</span></span> <span data-ttu-id="cf5bf-127">有关详细信息，请参阅 [标识解析、状态管理和更改跟踪](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/bb896269(v=vs.100))。</span><span class="sxs-lookup"><span data-stu-id="cf5bf-127">For more information, see [Identity Resolution, State Management, and Change Tracking](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/bb896269(v=vs.100)).</span></span>

 <span data-ttu-id="cf5bf-128">为类型化对象查询调用针对 的  方法。</span><span class="sxs-lookup"><span data-stu-id="cf5bf-128">Call the <xref:System.Data.Objects.ObjectQuery%601.Execute%2A> method on <xref:System.Data.Objects.ObjectQuery%601> for typed object queries.</span></span>

 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/data/adonet/ef/querying-a-conceptual-model"><span data-ttu-id="cf5bf-129">以对象形式查询数据（实体框架）</span><span class="sxs-lookup"><span data-stu-id="cf5bf-129">Querying Data as Objects (Entity Framework)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetResultType">
      <MemberSignature Language="C#" Value="public System.Data.Metadata.Edm.TypeUsage GetResultType ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Metadata.Edm.TypeUsage GetResultType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectQuery.GetResultType" />
      <MemberSignature Language="VB.NET" Value="Public Function GetResultType () As TypeUsage" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Metadata::Edm::TypeUsage ^ GetResultType();" />
      <MemberSignature Language="F#" Value="member this.GetResultType : unit -&gt; System.Data.Metadata.Edm.TypeUsage" Usage="objectQuery.GetResultType " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Metadata.Edm.TypeUsage</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="cf5bf-130">返回有关查询的结果类型的信息。</span><span class="sxs-lookup"><span data-stu-id="cf5bf-130">Returns information about the result type of the query.</span></span></summary>
        <returns><span data-ttu-id="cf5bf-131">一个 <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> 值，它包含有关查询的结果类型的信息。</span><span class="sxs-lookup"><span data-stu-id="cf5bf-131">A <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> value that contains information about the result type of the query.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Examples
 <span data-ttu-id="cf5bf-132">此示例基于 [Microsoft SQL Server 产品示例：数据库](https://archive.codeplex.com/?p=msftdbprodsamples)。</span><span class="sxs-lookup"><span data-stu-id="cf5bf-132">This example is based on the [Microsoft SQL Server Product Samples: Database](https://archive.codeplex.com/?p=msftdbprodsamples).</span></span> <span data-ttu-id="cf5bf-133">该示例创建一个类型为 <xref:System.Data.Objects.ObjectQuery%601> 的 <xref:System.Data.Common.DbDataRecord>，使用 <xref:System.Data.Objects.ObjectQuery.GetResultType%2A> 确定返回的类型是否表示行。</span><span class="sxs-lookup"><span data-stu-id="cf5bf-133">The example creates an <xref:System.Data.Objects.ObjectQuery%601> of type <xref:System.Data.Common.DbDataRecord> and uses <xref:System.Data.Objects.ObjectQuery.GetResultType%2A> to determine whether the type returned represents a row.</span></span>

 [!code-csharp[DP ObjectServices Concepts#GetResultType](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#getresulttype)]
 [!code-vb[DP ObjectServices Concepts#GetResultType](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#getresulttype)]

 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/bb738582(v=vs.90)"><span data-ttu-id="cf5bf-134">在对象服务中管理连接（实体框架）</span><span class="sxs-lookup"><span data-stu-id="cf5bf-134">Managing Connections in Object Services (Entity Framework)</span></span></related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/bb399207(v=vs.90)"><span data-ttu-id="cf5bf-135">ADO.NET 元数据</span><span class="sxs-lookup"><span data-stu-id="cf5bf-135">ADO.NET Metadata</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="MergeOption">
      <MemberSignature Language="C#" Value="public System.Data.Objects.MergeOption MergeOption { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.Objects.MergeOption MergeOption" />
      <MemberSignature Language="DocId" Value="P:System.Data.Objects.ObjectQuery.MergeOption" />
      <MemberSignature Language="VB.NET" Value="Public Property MergeOption As MergeOption" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Objects::MergeOption MergeOption { System::Data::Objects::MergeOption get(); void set(System::Data::Objects::MergeOption value); };" />
      <MemberSignature Language="F#" Value="member this.MergeOption : System.Data.Objects.MergeOption with get, set" Usage="System.Data.Objects.ObjectQuery.MergeOption" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.MergeOption</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cf5bf-136">获取或设置从查询返回的对象添加到对象上下文的方式。</span><span class="sxs-lookup"><span data-stu-id="cf5bf-136">Gets or sets how objects returned from a query are added to the object context.</span></span></summary>
        <value><span data-ttu-id="cf5bf-137">查询 <see cref="T:System.Data.Objects.MergeOption" />。</span><span class="sxs-lookup"><span data-stu-id="cf5bf-137">The query <see cref="T:System.Data.Objects.MergeOption" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="cf5bf-138">如果未指定任何 <xref:System.Data.Objects.MergeOption>，则默认值为 <xref:System.Data.Objects.MergeOption.AppendOnly>。</span><span class="sxs-lookup"><span data-stu-id="cf5bf-138">If no <xref:System.Data.Objects.MergeOption> is specified, the default value is <xref:System.Data.Objects.MergeOption.AppendOnly>.</span></span> <span data-ttu-id="cf5bf-139">有关详细信息，请参阅 [标识解析、状态管理和更改跟踪](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/bb896269(v=vs.100))。</span><span class="sxs-lookup"><span data-stu-id="cf5bf-139">For more information, see [Identity Resolution, State Management, and Change Tracking](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/bb896269(v=vs.100)).</span></span>

 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/data/adonet/ef/querying-a-conceptual-model"><span data-ttu-id="cf5bf-140">以对象形式查询数据，并 (实体框架形成结果) </span><span class="sxs-lookup"><span data-stu-id="cf5bf-140">Querying Data as Objects and Shaping Results (Entity Framework)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Parameters">
      <MemberSignature Language="C#" Value="public System.Data.Objects.ObjectParameterCollection Parameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Objects.ObjectParameterCollection Parameters" />
      <MemberSignature Language="DocId" Value="P:System.Data.Objects.ObjectQuery.Parameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parameters As ObjectParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Objects::ObjectParameterCollection ^ Parameters { System::Data::Objects::ObjectParameterCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Parameters : System.Data.Objects.ObjectParameterCollection" Usage="System.Data.Objects.ObjectQuery.Parameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.ObjectParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cf5bf-141">获取此对象查询的参数集合。</span><span class="sxs-lookup"><span data-stu-id="cf5bf-141">Gets the parameter collection for this object query.</span></span></summary>
        <value><span data-ttu-id="cf5bf-142">此 <see cref="T:System.Data.Objects.ObjectQuery`1" /> 的参数集合。</span><span class="sxs-lookup"><span data-stu-id="cf5bf-142">The parameter collection for this <see cref="T:System.Data.Objects.ObjectQuery`1" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="cf5bf-143">使用返回的 <xref:System.Data.Objects.ObjectParameterCollection> 指定传递给查询的参数。</span><span class="sxs-lookup"><span data-stu-id="cf5bf-143">Use the returned <xref:System.Data.Objects.ObjectParameterCollection> to specify parameters that are passed to the query.</span></span> <span data-ttu-id="cf5bf-144">有关详细信息，请参阅 [查询生成器方法](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/bb896238(v=vs.100))。</span><span class="sxs-lookup"><span data-stu-id="cf5bf-144">For more information, see [Query Builder Methods](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/bb896238(v=vs.100)).</span></span>



## Examples
 <span data-ttu-id="cf5bf-145">此示例基于 [Microsoft SQL Server 产品示例：数据库](https://archive.codeplex.com/?p=msftdbprodsamples)。</span><span class="sxs-lookup"><span data-stu-id="cf5bf-145">This example is based on the [Microsoft SQL Server Product Samples: Database](https://archive.codeplex.com/?p=msftdbprodsamples).</span></span> <span data-ttu-id="cf5bf-146">该示例将新参数添加到集合，然后获取此 <xref:System.Data.Objects.ObjectQuery%601> 的参数集合。</span><span class="sxs-lookup"><span data-stu-id="cf5bf-146">The example adds new parameters to the collection and then gets the parameter collection for this <xref:System.Data.Objects.ObjectQuery%601>.</span></span> <span data-ttu-id="cf5bf-147">然后，该示例循环访问 <xref:System.Data.Objects.ObjectParameterCollection> 并显示集合中每个参数的名称、类型和值。</span><span class="sxs-lookup"><span data-stu-id="cf5bf-147">Then it iterates through the <xref:System.Data.Objects.ObjectParameterCollection> and displays the name, type, and value of each parameter in the collection.</span></span>

 [!code-csharp[DP ObjectServices Concepts#ObjectQuery_Parameters](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#objectquery_parameters)]
 [!code-vb[DP ObjectServices Concepts#ObjectQuery_Parameters](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#objectquery_parameters)]

 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/data/adonet/ef/querying-a-conceptual-model"><span data-ttu-id="cf5bf-148">以对象形式查询数据（实体框架）</span><span class="sxs-lookup"><span data-stu-id="cf5bf-148">Querying Data as Objects (Entity Framework)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectQuery.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.IEnumerable.GetEnumerator : unit -&gt; System.Collections.IEnumerator&#xA;override this.System.Collections.IEnumerable.GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="objectQuery.System.Collections.IEnumerable.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="cf5bf-149">返回循环访问集合的枚举数。</span><span class="sxs-lookup"><span data-stu-id="cf5bf-149">Returns an enumerator that iterates through a collection.</span></span></summary>
        <returns><span data-ttu-id="cf5bf-150">可用于循环访问集合的 <see cref="T:System.Collections.IEnumerator" />。</span><span class="sxs-lookup"><span data-stu-id="cf5bf-150">An <see cref="T:System.Collections.IEnumerator" /> that can be used to iterate through the collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="cf5bf-151">调用 <xref:System.Data.Objects.ObjectQuery.System%23Collections%23IEnumerable%23GetEnumerator%2A> 会使用 <xref:System.Data.Objects.ObjectQuery.MergeOption%2A> 属性指定的合并选项执行查询。</span><span class="sxs-lookup"><span data-stu-id="cf5bf-151">Calling <xref:System.Data.Objects.ObjectQuery.System%23Collections%23IEnumerable%23GetEnumerator%2A> executes the query with the merge option that is specified by the <xref:System.Data.Objects.ObjectQuery.MergeOption%2A> property.</span></span>

 <span data-ttu-id="cf5bf-152">C# 语言的 `foreach` 语句（在 Visual Basic 中为 `For Each`）隐藏了枚举数的复杂性。</span><span class="sxs-lookup"><span data-stu-id="cf5bf-152">The `foreach` statement of the C# language (`For Each` in Visual Basic) hides the complexity of the enumerators.</span></span> <span data-ttu-id="cf5bf-153">因此，建议使用 `foreach`，而不是直接操作枚举数。</span><span class="sxs-lookup"><span data-stu-id="cf5bf-153">Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.</span></span>

 <span data-ttu-id="cf5bf-154">枚举器可用于读取集合中的数据，但不能用于修改基础集合。</span><span class="sxs-lookup"><span data-stu-id="cf5bf-154">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>

 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/data/adonet/ef/querying-a-conceptual-model"><span data-ttu-id="cf5bf-155">以对象形式查询数据（实体框架）</span><span class="sxs-lookup"><span data-stu-id="cf5bf-155">Querying Data as Objects (Entity Framework)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.IListSource.ContainsListCollection">
      <MemberSignature Language="C#" Value="bool System.ComponentModel.IListSource.ContainsListCollection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.ComponentModel.IListSource.ContainsListCollection" />
      <MemberSignature Language="DocId" Value="P:System.Data.Objects.ObjectQuery.System#ComponentModel#IListSource#ContainsListCollection" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property ContainsListCollection As Boolean Implements IListSource.ContainsListCollection" />
      <MemberSignature Language="C++ CLI" Value="property bool System::ComponentModel::IListSource::ContainsListCollection { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.System.ComponentModel.IListSource.ContainsListCollection : bool" Usage="System.ComponentModel.IListSource.ContainsListCollection" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.ComponentModel.IListSource.ContainsListCollection</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cf5bf-156">获取一个值，该值指示查询返回的集合是否包含集合对象。</span><span class="sxs-lookup"><span data-stu-id="cf5bf-156">Gets a value that indicates whether the collection returned by the query contains collection objects.</span></span></summary>
        <value><span data-ttu-id="cf5bf-157">一个布尔值。</span><span class="sxs-lookup"><span data-stu-id="cf5bf-157">A Boolean value.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="cf5bf-158">此成员是显式接口成员的实现。</span><span class="sxs-lookup"><span data-stu-id="cf5bf-158">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="cf5bf-159">它只能在 <xref:System.Data.Objects.ObjectQuery%601> 实例被强制转换为 <xref:System.ComponentModel.IListSource> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="cf5bf-159">It can be used only when the <xref:System.Data.Objects.ObjectQuery%601> instance is cast to an <xref:System.ComponentModel.IListSource> interface.</span></span>

 <span data-ttu-id="cf5bf-160">此属性始终返回， `false` 因为查询返回的集合包含对象而不是集合。</span><span class="sxs-lookup"><span data-stu-id="cf5bf-160">This property always returns `false` because the collection returned by the query contains objects and not collections.</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.IListSource.GetList">
      <MemberSignature Language="C#" Value="System.Collections.IList IListSource.GetList ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IList System.ComponentModel.IListSource.GetList() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectQuery.System#ComponentModel#IListSource#GetList" />
      <MemberSignature Language="VB.NET" Value="Function GetList () As IList Implements IListSource.GetList" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IList ^ System.ComponentModel.IListSource.GetList() = System::ComponentModel::IListSource::GetList;" />
      <MemberSignature Language="F#" Value="abstract member System.ComponentModel.IListSource.GetList : unit -&gt; System.Collections.IList&#xA;override this.System.ComponentModel.IListSource.GetList : unit -&gt; System.Collections.IList" Usage="objectQuery.System.ComponentModel.IListSource.GetList " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.IListSource.GetList</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IList</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="cf5bf-161">返回 <see cref="T:System.Collections.IList" /> 形式的集合用于数据绑定。</span><span class="sxs-lookup"><span data-stu-id="cf5bf-161">Returns the collection as an <see cref="T:System.Collections.IList" /> used for data binding.</span></span></summary>
        <returns><span data-ttu-id="cf5bf-162">实体对象的 <see cref="T:System.Collections.IList" />。</span><span class="sxs-lookup"><span data-stu-id="cf5bf-162">An <see cref="T:System.Collections.IList" /> of entity objects.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="cf5bf-163">此成员是显式接口成员的实现。</span><span class="sxs-lookup"><span data-stu-id="cf5bf-163">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="cf5bf-164">它只能在 <xref:System.Data.Objects.ObjectQuery%601> 实例被强制转换为 <xref:System.ComponentModel.IListSource> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="cf5bf-164">It can be used only when the <xref:System.Data.Objects.ObjectQuery%601> instance is cast to an <xref:System.ComponentModel.IListSource> interface.</span></span>

 <span data-ttu-id="cf5bf-165">此方法可实现对查询结果的数据绑定。</span><span class="sxs-lookup"><span data-stu-id="cf5bf-165">This method enables data binding to the result of the query.</span></span> <span data-ttu-id="cf5bf-166">它由绑定到集合的控件进行调用。</span><span class="sxs-lookup"><span data-stu-id="cf5bf-166">It is called by the control bound to the collection.</span></span> <span data-ttu-id="cf5bf-167">有关详细信息，请参阅 [将对象绑定到控件](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/bb738469(v=vs.100))。</span><span class="sxs-lookup"><span data-stu-id="cf5bf-167">For more information, see [Binding Objects to Controls](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/bb738469(v=vs.100)).</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Linq.IQueryable.ElementType">
      <MemberSignature Language="C#" Value="Type System.Linq.IQueryable.ElementType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type System.Linq.IQueryable.ElementType" />
      <MemberSignature Language="DocId" Value="P:System.Data.Objects.ObjectQuery.System#Linq#IQueryable#ElementType" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property ElementType As Type Implements IQueryable.ElementType" />
      <MemberSignature Language="C++ CLI" Value="property Type ^ System::Linq::IQueryable::ElementType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.System.Linq.IQueryable.ElementType : Type" Usage="System.Linq.IQueryable.ElementType" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Linq.IQueryable.ElementType</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cf5bf-168">获取此查询实例的结果元素类型。</span><span class="sxs-lookup"><span data-stu-id="cf5bf-168">Gets the result element type for this query instance.</span></span></summary>
        <value><span data-ttu-id="cf5bf-169">一个 <see cref="T:System.Type" />，即此查询实例的结果元素类型。</span><span class="sxs-lookup"><span data-stu-id="cf5bf-169">A <see cref="T:System.Type" /> that is the result element type for this query instance.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="cf5bf-170">此成员是显式接口成员的实现。</span><span class="sxs-lookup"><span data-stu-id="cf5bf-170">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="cf5bf-171">它只能在 <xref:System.Data.Objects.ObjectQuery%601> 实例被强制转换为 <xref:System.ComponentModel.IListSource> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="cf5bf-171">It can be used only when the <xref:System.Data.Objects.ObjectQuery%601> instance is cast to an <xref:System.ComponentModel.IListSource> interface.</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Linq.IQueryable.Expression">
      <MemberSignature Language="C#" Value="System.Linq.Expressions.Expression System.Linq.IQueryable.Expression { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Linq.Expressions.Expression System.Linq.IQueryable.Expression" />
      <MemberSignature Language="DocId" Value="P:System.Data.Objects.ObjectQuery.System#Linq#IQueryable#Expression" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Expression As Expression Implements IQueryable.Expression" />
      <MemberSignature Language="C++ CLI" Value="property System::Linq::Expressions::Expression ^ System::Linq::IQueryable::Expression { System::Linq::Expressions::Expression ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.System.Linq.IQueryable.Expression : System.Linq.Expressions.Expression" Usage="System.Linq.IQueryable.Expression" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Linq.IQueryable.Expression</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cf5bf-172">获取描述此查询的表达式。</span><span class="sxs-lookup"><span data-stu-id="cf5bf-172">Gets the expression describing this query.</span></span></summary>
        <value><span data-ttu-id="cf5bf-173">描述此查询的 LINQ <see cref="T:System.Linq.Expressions.Expression" />。</span><span class="sxs-lookup"><span data-stu-id="cf5bf-173">The LINQ <see cref="T:System.Linq.Expressions.Expression" /> that describes this query.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="cf5bf-174">对于使用 LINQ 生成器模式生成的查询，会返回完全 LINQ 表达式树；否则，返回包装此查询的常量表达式。</span><span class="sxs-lookup"><span data-stu-id="cf5bf-174">For queries built by using LINQ builder patterns, this returns a full LINQ expression tree; otherwise, it returns a constant expression that wraps this query.</span></span> <span data-ttu-id="cf5bf-175">请注意，默认表达式不进行缓存。</span><span class="sxs-lookup"><span data-stu-id="cf5bf-175">Note that the default expression is not cached.</span></span> <span data-ttu-id="cf5bf-176">这样，框架可以区分 LINQ 与 Entity SQL 查询。</span><span class="sxs-lookup"><span data-stu-id="cf5bf-176">This allows the framework to differentiate between LINQ and Entity SQL queries.</span></span>

 <span data-ttu-id="cf5bf-177">此成员是显式接口成员的实现。</span><span class="sxs-lookup"><span data-stu-id="cf5bf-177">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="cf5bf-178">它只能在 <xref:System.Data.Objects.ObjectQuery%601> 实例被强制转换为 <xref:System.ComponentModel.IListSource> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="cf5bf-178">It can be used only when the <xref:System.Data.Objects.ObjectQuery%601> instance is cast to an <xref:System.ComponentModel.IListSource> interface.</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Linq.IQueryable.Provider">
      <MemberSignature Language="C#" Value="System.Linq.IQueryProvider System.Linq.IQueryable.Provider { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Linq.IQueryProvider System.Linq.IQueryable.Provider" />
      <MemberSignature Language="DocId" Value="P:System.Data.Objects.ObjectQuery.System#Linq#IQueryable#Provider" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Provider As IQueryProvider Implements IQueryable.Provider" />
      <MemberSignature Language="C++ CLI" Value="property System::Linq::IQueryProvider ^ System::Linq::IQueryable::Provider { System::Linq::IQueryProvider ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.System.Linq.IQueryable.Provider : System.Linq.IQueryProvider" Usage="System.Linq.IQueryable.Provider" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Linq.IQueryable.Provider</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cf5bf-179">获取与此查询实例关联的 LINQ <see cref="T:System.Linq.IQueryProvider" />。</span><span class="sxs-lookup"><span data-stu-id="cf5bf-179">Gets the LINQ <see cref="T:System.Linq.IQueryProvider" /> associated with this query instance.</span></span></summary>
        <value><span data-ttu-id="cf5bf-180">与此查询实例关联的 <see cref="T:System.Linq.IQueryProvider" />。</span><span class="sxs-lookup"><span data-stu-id="cf5bf-180">The <see cref="T:System.Linq.IQueryProvider" /> associated with this query instance.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="cf5bf-181">此成员是显式接口成员的实现。</span><span class="sxs-lookup"><span data-stu-id="cf5bf-181">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="cf5bf-182">它只能在 <xref:System.Data.Objects.ObjectQuery%601> 实例被强制转换为 <xref:System.ComponentModel.IListSource> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="cf5bf-182">It can be used only when the <xref:System.Data.Objects.ObjectQuery%601> instance is cast to an <xref:System.ComponentModel.IListSource> interface.</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToTraceString">
      <MemberSignature Language="C#" Value="public string ToTraceString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToTraceString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectQuery.ToTraceString" />
      <MemberSignature Language="VB.NET" Value="Public Function ToTraceString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToTraceString();" />
      <MemberSignature Language="F#" Value="member this.ToTraceString : unit -&gt; string" Usage="objectQuery.ToTraceString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="cf5bf-183">返回对数据源执行的命令。</span><span class="sxs-lookup"><span data-stu-id="cf5bf-183">Returns the commands to execute against the data source.</span></span></summary>
        <returns><span data-ttu-id="cf5bf-184">一个 <see langword="string" />，表示查询对数据源执行的命令。</span><span class="sxs-lookup"><span data-stu-id="cf5bf-184">A <see langword="string" /> that represents the commands that the query executes against the data source.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Examples
 <span data-ttu-id="cf5bf-185">本主题中的示例基于 " [Microsoft SQL Server 产品示例：数据库](https://archive.codeplex.com/?p=msftdbprodsamples)"。</span><span class="sxs-lookup"><span data-stu-id="cf5bf-185">The example in this topic is based on the [Microsoft SQL Server Product Samples: Database](https://archive.codeplex.com/?p=msftdbprodsamples).</span></span>

 [!code-csharp[DP ObjectServices Concepts#ObjectQuery_ToTraceString](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#objectquery_totracestring)]
 [!code-vb[DP ObjectServices Concepts#ObjectQuery_ToTraceString](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#objectquery_totracestring)]

 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/data/adonet/ef/querying-a-conceptual-model"><span data-ttu-id="cf5bf-186">以对象形式查询数据，并 (实体框架形成结果) </span><span class="sxs-lookup"><span data-stu-id="cf5bf-186">Querying Data as Objects and Shaping Results (Entity Framework)</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>
