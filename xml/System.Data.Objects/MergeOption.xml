<Type Name="MergeOption" FullName="System.Data.Objects.MergeOption">
  <Metadata><Meta Name="ms.openlocfilehash" Value="a0b696fe28851ef6026576b007358d54bd37f08c" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="70507518" /></Metadata><TypeSignature Language="C#" Value="public enum MergeOption" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed MergeOption extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Data.Objects.MergeOption" />
  <TypeSignature Language="VB.NET" Value="Public Enum MergeOption" />
  <TypeSignature Language="C++ CLI" Value="public enum class MergeOption" />
  <TypeSignature Language="F#" Value="type MergeOption = " />
  <AssemblyInfo>
    <AssemblyName>System.Data.Entity</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary>指定加载到对象上下文中的对象与对象上下文中的已有对象的合并方式。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 实体框架只维护缓存中具有特定实体键的对象的单个实例。 <xref:System.Data.EntityKey>对象是不可变对象，表示对象的标识。 实体键用于在对象上下文中执行标识解析。 有关详细信息，请参阅使用 [实体键](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/dd283139(v=vs.100))。 如果已跟踪具有相同标识的实体，则将根据查询的合并来自数据源的数据和已在状态管理器中的数据 <xref:System.Data.Objects.MergeOption> 。  

### <a name="additional-information-on-mergeoptionpreservechanges"></a>有关的其他信息 `MergeOption.PreserveChanges`

 如果该实体的状态为 <xref:System.Data.EntityState.Unchanged?displayProperty=nameWithType>，则会使用数据源值覆盖对应项中的当前值和原始值。 该实体的状态保持为 <xref:System.Data.EntityState.Unchanged?displayProperty=nameWithType>，并且不会将任何属性标记为已修改。  
  
 如果该实体的状态为 <xref:System.Data.EntityState.Modified?displayProperty=nameWithType>，则不会使用数据源值覆盖已修改属性的当前值。 将使用数据源中的值覆盖未修改属性的原始值。  
  
 在 .NET Framework 4 中，实体框架将未修改属性的当前值与从数据源返回的值进行比较。 如果值不相同，则将该属性标记为已修改。  
  
 在 .NET Framework 3.5 SP1 中，实体框架不会将属性标记为已修改，即使数据源中的值不同也是如此。  
  
 调用 <xref:System.Data.Objects.ObjectContext.SaveChanges%2A?displayProperty=nameWithType> 时，只会将已修改的属性保存到数据源中。  
  
 若要保留 .NET Framework 3.5 SP1 行为，请将设置 <xref:System.Data.Objects.ObjectContextOptions.UseLegacyPreserveChangesBehavior%2A?displayProperty=nameWithType> 为 `true` 。 在本地上下文中保留更改时，可以使用 `PreserveChanges` 解决开放式并发异常。 有关详细信息，请参阅 [保存更改和管理并发](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/bb738618(v=vs.100))。
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AppendOnly">
      <MemberSignature Language="C#" Value="AppendOnly" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.Objects.MergeOption AppendOnly = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.Data.Objects.MergeOption.AppendOnly" />
      <MemberSignature Language="VB.NET" Value="AppendOnly" />
      <MemberSignature Language="C++ CLI" Value="AppendOnly" />
      <MemberSignature Language="F#" Value="AppendOnly = 0" Usage="System.Data.Objects.MergeOption.AppendOnly" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.MergeOption</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>将对象上下文中不存在的对象附加到上下文。 如果某个对象已存在于上下文中，则不会使用数据源值覆盖该对象的属性在对应项中的当前值和原始值。 该对象对应的项的状态以及该对象在对应项中的属性的状态不会更改。 <see cref="F:System.Data.Objects.MergeOption.AppendOnly" /> 为默认合并选项。</summary>
      </Docs>
    </Member>
    <Member MemberName="NoTracking">
      <MemberSignature Language="C#" Value="NoTracking" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.Objects.MergeOption NoTracking = int32(3)" />
      <MemberSignature Language="DocId" Value="F:System.Data.Objects.MergeOption.NoTracking" />
      <MemberSignature Language="VB.NET" Value="NoTracking" />
      <MemberSignature Language="C++ CLI" Value="NoTracking" />
      <MemberSignature Language="F#" Value="NoTracking = 3" Usage="System.Data.Objects.MergeOption.NoTracking" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.MergeOption</ReturnType>
      </ReturnValue>
      <MemberValue>3</MemberValue>
      <Docs>
        <summary>对象保持为 <see cref="F:System.Data.EntityState.Detached" /> 状态，也不在 <see cref="T:System.Data.Objects.ObjectStateManager" /> 中进行跟踪。 但是，[!INCLUDE[adonet_ef](~/includes/adonet-ef-md.md)] 生成的实体和具有代理的 POCO 实体将维护对该对象上下文的引用以便于相关对象的加载。</summary>
      </Docs>
    </Member>
    <Member MemberName="OverwriteChanges">
      <MemberSignature Language="C#" Value="OverwriteChanges" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.Objects.MergeOption OverwriteChanges = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Data.Objects.MergeOption.OverwriteChanges" />
      <MemberSignature Language="VB.NET" Value="OverwriteChanges" />
      <MemberSignature Language="C++ CLI" Value="OverwriteChanges" />
      <MemberSignature Language="F#" Value="OverwriteChanges = 1" Usage="System.Data.Objects.MergeOption.OverwriteChanges" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.MergeOption</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>将对象上下文中不存在的对象附加到上下文。 如果某个对象已存在于上下文中，则不会使用数据源值覆盖该对象的属性在相应项中的当前值和原始值。 该对象的对应项的状态设置为 <see cref="F:System.Data.EntityState.Unchanged" />，并且不会将任何属性标记为已修改。</summary>
      </Docs>
    </Member>
    <Member MemberName="PreserveChanges">
      <MemberSignature Language="C#" Value="PreserveChanges" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.Objects.MergeOption PreserveChanges = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.Data.Objects.MergeOption.PreserveChanges" />
      <MemberSignature Language="VB.NET" Value="PreserveChanges" />
      <MemberSignature Language="C++ CLI" Value="PreserveChanges" />
      <MemberSignature Language="F#" Value="PreserveChanges = 2" Usage="System.Data.Objects.MergeOption.PreserveChanges" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.MergeOption</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>将对象上下文中不存在的对象附加到上下文。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
