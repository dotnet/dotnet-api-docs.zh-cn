<Type Name="MergeOption" FullName="System.Data.Objects.MergeOption">
  <Metadata><Meta Name="ms.openlocfilehash" Value="197527074db149fa7fe499099a37a26a06af8691" /><Meta Name="ms.sourcegitcommit" Value="9f423345753728e8cad38d4a22663a109e69ea91" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="03/04/2021" /><Meta Name="ms.locfileid" Value="102060212" /></Metadata><TypeSignature Language="C#" Value="public enum MergeOption" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed MergeOption extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Data.Objects.MergeOption" />
  <TypeSignature Language="VB.NET" Value="Public Enum MergeOption" />
  <TypeSignature Language="C++ CLI" Value="public enum class MergeOption" />
  <TypeSignature Language="F#" Value="type MergeOption = " />
  <AssemblyInfo>
    <AssemblyName>System.Data.Entity</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary><span data-ttu-id="fe925-101">指定加载到对象上下文中的对象与对象上下文中的已有对象的合并方式。</span><span class="sxs-lookup"><span data-stu-id="fe925-101">Specifies how objects being loaded into the object context are merged with objects already in the object context.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe925-102">实体框架只维护缓存中具有特定实体键的对象的单个实例。</span><span class="sxs-lookup"><span data-stu-id="fe925-102">The Entity Framework only maintains a single instance of an object with a specific entity key in the cache.</span></span> <span data-ttu-id="fe925-103"><xref:System.Data.EntityKey>对象是不可变对象，表示对象的标识。</span><span class="sxs-lookup"><span data-stu-id="fe925-103">The <xref:System.Data.EntityKey> objects are immutable objects that represent object's identity.</span></span> <span data-ttu-id="fe925-104">实体键用于在对象上下文中执行标识解析。</span><span class="sxs-lookup"><span data-stu-id="fe925-104">Entity keys are used to perform identity resolution in the object context.</span></span> <span data-ttu-id="fe925-105">有关详细信息，请参阅使用 [实体键](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/dd283139(v=vs.100))。</span><span class="sxs-lookup"><span data-stu-id="fe925-105">For more information, see [Working with Entity Keys](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/dd283139(v=vs.100)).</span></span> <span data-ttu-id="fe925-106">如果已跟踪具有相同标识的实体，则将根据查询的合并来自数据源的数据和已在状态管理器中的数据 <xref:System.Data.Objects.MergeOption> 。</span><span class="sxs-lookup"><span data-stu-id="fe925-106">If an entity with the same identity is already being tracked, the data coming from the data source and the data already in the state manager are merged according to the <xref:System.Data.Objects.MergeOption> of the query.</span></span>  

### <a name="additional-information-on-mergeoptionpreservechanges"></a><span data-ttu-id="fe925-107">有关的其他信息 `MergeOption.PreserveChanges`</span><span class="sxs-lookup"><span data-stu-id="fe925-107">Additional information on `MergeOption.PreserveChanges`</span></span>

 <span data-ttu-id="fe925-108">如果该实体的状态为 <xref:System.Data.EntityState.Unchanged?displayProperty=nameWithType>，则会使用数据源值覆盖对应项中的当前值和原始值。</span><span class="sxs-lookup"><span data-stu-id="fe925-108">If the state of the entity is <xref:System.Data.EntityState.Unchanged?displayProperty=nameWithType>, the current and original values in the entry are overwritten with data source values.</span></span> <span data-ttu-id="fe925-109">该实体的状态保持为 <xref:System.Data.EntityState.Unchanged?displayProperty=nameWithType>，并且不会将任何属性标记为已修改。</span><span class="sxs-lookup"><span data-stu-id="fe925-109">The state of the entity remains <xref:System.Data.EntityState.Unchanged?displayProperty=nameWithType> and no properties are marked as modified.</span></span>  
  
 <span data-ttu-id="fe925-110">如果该实体的状态为 <xref:System.Data.EntityState.Modified?displayProperty=nameWithType>，则不会使用数据源值覆盖已修改属性的当前值。</span><span class="sxs-lookup"><span data-stu-id="fe925-110">If the state of the entity is <xref:System.Data.EntityState.Modified?displayProperty=nameWithType>, the current values of modified properties are not overwritten with data source values.</span></span> <span data-ttu-id="fe925-111">将使用数据源中的值覆盖未修改属性的原始值。</span><span class="sxs-lookup"><span data-stu-id="fe925-111">The original values of unmodified properties are overwritten with the values from the data source.</span></span>  
  
 <span data-ttu-id="fe925-112">在 .NET Framework 4 中，实体框架将未修改属性的当前值与从数据源返回的值进行比较。</span><span class="sxs-lookup"><span data-stu-id="fe925-112">In .NET Framework 4, the Entity Framework compares the current values of unmodified properties with the values that were returned from the data source.</span></span> <span data-ttu-id="fe925-113">如果值不相同，则将该属性标记为已修改。</span><span class="sxs-lookup"><span data-stu-id="fe925-113">If the values are not the same, the property is marked as modified.</span></span>  
  
 <span data-ttu-id="fe925-114">在 .NET Framework 3.5 SP1 中，实体框架不会将属性标记为已修改，即使数据源中的值不同也是如此。</span><span class="sxs-lookup"><span data-stu-id="fe925-114">In .NET Framework 3.5 SP1, the Entity Framework does not mark the property as modified even if the value in the data source is different.</span></span>  
  
 <span data-ttu-id="fe925-115">调用 <xref:System.Data.Objects.ObjectContext.SaveChanges%2A?displayProperty=nameWithType> 时，只会将已修改的属性保存到数据源中。</span><span class="sxs-lookup"><span data-stu-id="fe925-115">Only modified properties are persisted to the data source when you call <xref:System.Data.Objects.ObjectContext.SaveChanges%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="fe925-116">若要保留 .NET Framework 3.5 SP1 行为，请将设置 <xref:System.Data.Objects.ObjectContextOptions.UseLegacyPreserveChangesBehavior%2A?displayProperty=nameWithType> 为 `true` 。</span><span class="sxs-lookup"><span data-stu-id="fe925-116">To preserve the .NET Framework 3.5 SP1 behavior, set <xref:System.Data.Objects.ObjectContextOptions.UseLegacyPreserveChangesBehavior%2A?displayProperty=nameWithType> to `true`.</span></span> <span data-ttu-id="fe925-117">在本地上下文中保留更改时，可以使用 `PreserveChanges` 解决开放式并发异常。</span><span class="sxs-lookup"><span data-stu-id="fe925-117">The `PreserveChanges` option can be used to resolve optimistic concurrency exceptions while preserving changes in the local context.</span></span> <span data-ttu-id="fe925-118">有关详细信息，请参阅 [保存更改和管理并发](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/bb738618(v=vs.100))。</span><span class="sxs-lookup"><span data-stu-id="fe925-118">For more information, see [Saving Changes and Managing Concurrency](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/bb738618(v=vs.100)).</span></span>
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AppendOnly">
      <MemberSignature Language="C#" Value="AppendOnly" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.Objects.MergeOption AppendOnly = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.Data.Objects.MergeOption.AppendOnly" />
      <MemberSignature Language="VB.NET" Value="AppendOnly" />
      <MemberSignature Language="C++ CLI" Value="AppendOnly" />
      <MemberSignature Language="F#" Value="AppendOnly = 0" Usage="System.Data.Objects.MergeOption.AppendOnly" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.MergeOption</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary><span data-ttu-id="fe925-119">将对象上下文中不存在的对象附加到上下文。</span><span class="sxs-lookup"><span data-stu-id="fe925-119">Objects that do not exist in the object context are attached to the context.</span></span> <span data-ttu-id="fe925-120">如果某个对象已存在于上下文中，则不会使用数据源值覆盖该对象的属性在对应项中的当前值和原始值。</span><span class="sxs-lookup"><span data-stu-id="fe925-120">If an object is already in the context, the current and original values of object's properties in the entry are not overwritten with data source values.</span></span> <span data-ttu-id="fe925-121">该对象对应的项的状态以及该对象在对应项中的属性的状态不会更改。</span><span class="sxs-lookup"><span data-stu-id="fe925-121">The state of the object's entry and state of properties of the object in the entry do not change.</span></span> <span data-ttu-id="fe925-122"><see cref="F:System.Data.Objects.MergeOption.AppendOnly" /> 为默认合并选项。</span><span class="sxs-lookup"><span data-stu-id="fe925-122"><see cref="F:System.Data.Objects.MergeOption.AppendOnly" /> is the default merge option.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="NoTracking">
      <MemberSignature Language="C#" Value="NoTracking" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.Objects.MergeOption NoTracking = int32(3)" />
      <MemberSignature Language="DocId" Value="F:System.Data.Objects.MergeOption.NoTracking" />
      <MemberSignature Language="VB.NET" Value="NoTracking" />
      <MemberSignature Language="C++ CLI" Value="NoTracking" />
      <MemberSignature Language="F#" Value="NoTracking = 3" Usage="System.Data.Objects.MergeOption.NoTracking" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.MergeOption</ReturnType>
      </ReturnValue>
      <MemberValue>3</MemberValue>
      <Docs>
        <summary><span data-ttu-id="fe925-123">对象保持为 <see cref="F:System.Data.EntityState.Detached" /> 状态，也不在 <see cref="T:System.Data.Objects.ObjectStateManager" /> 中进行跟踪。</span><span class="sxs-lookup"><span data-stu-id="fe925-123">Objects are maintained in a <see cref="F:System.Data.EntityState.Detached" /> state and are not tracked in the <see cref="T:System.Data.Objects.ObjectStateManager" />.</span></span> <span data-ttu-id="fe925-124">但是，实体框架生成的实体和具有代理的 POCO 实体将维护对对象上下文的引用，以便于加载相关对象。</span><span class="sxs-lookup"><span data-stu-id="fe925-124">However, Entity Framework-generated entities and POCO entities with proxies maintain a reference to the object context to facilitate loading of related objects.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="OverwriteChanges">
      <MemberSignature Language="C#" Value="OverwriteChanges" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.Objects.MergeOption OverwriteChanges = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Data.Objects.MergeOption.OverwriteChanges" />
      <MemberSignature Language="VB.NET" Value="OverwriteChanges" />
      <MemberSignature Language="C++ CLI" Value="OverwriteChanges" />
      <MemberSignature Language="F#" Value="OverwriteChanges = 1" Usage="System.Data.Objects.MergeOption.OverwriteChanges" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.MergeOption</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary><span data-ttu-id="fe925-125">将对象上下文中不存在的对象附加到上下文。</span><span class="sxs-lookup"><span data-stu-id="fe925-125">Objects that do not exist in the object context are attached to the context.</span></span> <span data-ttu-id="fe925-126">如果某个对象已存在于上下文中，则不会使用数据源值覆盖该对象的属性在相应项中的当前值和原始值。</span><span class="sxs-lookup"><span data-stu-id="fe925-126">If an object is already in the context, the current and original values of object's properties in the entry are overwritten with data source values.</span></span> <span data-ttu-id="fe925-127">该对象的对应项的状态设置为 <see cref="F:System.Data.EntityState.Unchanged" />，并且不会将任何属性标记为已修改。</span><span class="sxs-lookup"><span data-stu-id="fe925-127">The state of the object's entry is set to <see cref="F:System.Data.EntityState.Unchanged" />, no properties are marked as modified.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="PreserveChanges">
      <MemberSignature Language="C#" Value="PreserveChanges" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.Objects.MergeOption PreserveChanges = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.Data.Objects.MergeOption.PreserveChanges" />
      <MemberSignature Language="VB.NET" Value="PreserveChanges" />
      <MemberSignature Language="C++ CLI" Value="PreserveChanges" />
      <MemberSignature Language="F#" Value="PreserveChanges = 2" Usage="System.Data.Objects.MergeOption.PreserveChanges" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.MergeOption</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary><span data-ttu-id="fe925-128">将对象上下文中不存在的对象附加到上下文。</span><span class="sxs-lookup"><span data-stu-id="fe925-128">Objects that do not exist in the object context are attached to the context.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
