<Type Name="IEnlistmentNotification" FullName="System.Transactions.IEnlistmentNotification">
  <Metadata><Meta Name="ms.openlocfilehash" Value="16ecff6e491b37458e455bfc9b15800cbfba9cf7" /><Meta Name="ms.sourcegitcommit" Value="11d168140aa8fade0768c2a9dde3e3bcacfdfb7d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="05/27/2020" /><Meta Name="ms.locfileid" Value="83963234" /></Metadata><TypeSignature Language="C#" Value="public interface IEnlistmentNotification" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IEnlistmentNotification" />
  <TypeSignature Language="DocId" Value="T:System.Transactions.IEnlistmentNotification" />
  <TypeSignature Language="VB.NET" Value="Public Interface IEnlistmentNotification" />
  <TypeSignature Language="C++ CLI" Value="public interface class IEnlistmentNotification" />
  <TypeSignature Language="F#" Value="type IEnlistmentNotification = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Transactions</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Transactions.Local</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.Transactions.Local" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
  </TypeForwardingChain>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="e592c-101">描述一个接口，资源管理器应实现该接口以在登记参与时为事务管理器提供两阶段提交通知回调。</span><span class="sxs-lookup"><span data-stu-id="e592c-101">Describes an interface that a resource manager should implement to provide two phase commit notification callbacks for the transaction manager upon enlisting for participation.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e592c-102">为了使资源管理器参与事务，必须通过事务管理器在事务中登记。</span><span class="sxs-lookup"><span data-stu-id="e592c-102">In order for a resource manager to participate in a transaction, it must enlist in the transaction through the transaction manager.</span></span> <span data-ttu-id="e592c-103"><xref:System.Transactions.Transaction> 类定义了一组提供此功能的方法，这些方法的名称以 `Enlist` 开头。</span><span class="sxs-lookup"><span data-stu-id="e592c-103">The <xref:System.Transactions.Transaction> class defines a set of methods whose names begin with `Enlist` that provide this functionality.</span></span> <span data-ttu-id="e592c-104">不同的 `Enlist` 方法对应于资源管理器可能具有的不同登记类型。</span><span class="sxs-lookup"><span data-stu-id="e592c-104">The different `Enlist` methods correspond to the different types of enlistment that a resource manager may have.</span></span>  
  
 <span data-ttu-id="e592c-105">此类描述一个接口，资源管理器应实现该接口以在登记参与时为事务管理器提供两阶段提交通知回调。</span><span class="sxs-lookup"><span data-stu-id="e592c-105">This class describes an interface that a resource manager should implement to provide two phase commit notification callbacks for the transaction manager upon enlisting for participation.</span></span> <span data-ttu-id="e592c-106">对于每个资源管理器的 <xref:System.Transactions.IEnlistmentNotification> 接口实现，你应使用 <xref:System.Transactions.Transaction> 类的 <xref:System.Transactions.Transaction.EnlistVolatile%2A> 方法或 <xref:System.Transactions.Transaction.EnlistDurable%2A> 方法来登记该方法，具体取决于你的资源是可变的还是持久的。</span><span class="sxs-lookup"><span data-stu-id="e592c-106">For each resource manager's implementation of the <xref:System.Transactions.IEnlistmentNotification> interface, you should enlist it using the <xref:System.Transactions.Transaction.EnlistVolatile%2A> method or the <xref:System.Transactions.Transaction.EnlistDurable%2A> method of the <xref:System.Transactions.Transaction> class, depending on whether your resource is volatile or durable.</span></span> <span data-ttu-id="e592c-107">有关登记和2PC 的详细信息，请参阅在[事务中将资源登记为参与者](/dotnet/framework/data/transactions/enlisting-resources-as-participants-in-a-transaction)，并分别[在单阶段和多阶段中提交事务](/dotnet/framework/data/transactions/committing-a-transaction-in-single-phase-and-multi-phase)。</span><span class="sxs-lookup"><span data-stu-id="e592c-107">For more information on enlistment and 2PC, see [Enlisting Resources as Participants in a Transaction](/dotnet/framework/data/transactions/enlisting-resources-as-participants-in-a-transaction) and [Committing a Transaction in Single-Phase and Multi-Phase](/dotnet/framework/data/transactions/committing-a-transaction-in-single-phase-and-multi-phase) respectively.</span></span>  
  
 <span data-ttu-id="e592c-108">事务管理器通过以下方法在两阶段提交协议的不同阶段通知登记的对象。</span><span class="sxs-lookup"><span data-stu-id="e592c-108">The transaction manager notifies the enlisted object at different phases of the Two Phase Commit Protocol by the following methods.</span></span>  
  
|<span data-ttu-id="e592c-109">方法</span><span class="sxs-lookup"><span data-stu-id="e592c-109">Method</span></span>|<span data-ttu-id="e592c-110">说明</span><span class="sxs-lookup"><span data-stu-id="e592c-110">Description</span></span>|  
|------------|-----------------|  
|<xref:System.Transactions.IEnlistmentNotification.Prepare%2A>|<span data-ttu-id="e592c-111">当事务管理器请求参与者是否可以提交事务时，登记的对象的此方法将用作事务管理器在事务的第一阶段的回调。</span><span class="sxs-lookup"><span data-stu-id="e592c-111">This method of an enlisted object is used as a callback by the Transaction Manager during the first phase of a transaction, when the transaction manager asks participants whether they can commit the transaction.</span></span>|  
|<xref:System.Transactions.IEnlistmentNotification.Commit%2A>|<span data-ttu-id="e592c-112">如果提交事务，则登记的对象的此方法将用作事务的第二个阶段中的事务管理器回调。</span><span class="sxs-lookup"><span data-stu-id="e592c-112">This method of an enlisted object is used as a callback by the Transaction Manager during the second phase of a transaction if the transaction is committed.</span></span>|  
|<xref:System.Transactions.IEnlistmentNotification.Rollback%2A>|<span data-ttu-id="e592c-113">如果事务已中止（即回滚），则登记的对象的此方法将用作事务的第二个阶段中的事务管理器回调。</span><span class="sxs-lookup"><span data-stu-id="e592c-113">This method of an enlisted object is used as a callback by the Transaction Manager during the second phase of a transaction if the transaction is aborted (that is, rolled back).</span></span>|  
|<xref:System.Transactions.IEnlistmentNotification.InDoubt%2A>|<span data-ttu-id="e592c-114">如果事务不确定，则登记的对象的此方法将用作事务的第二个阶段中的事务管理器回调。</span><span class="sxs-lookup"><span data-stu-id="e592c-114">This method of an enlisted object is used as a callback by the Transaction Manager during the second phase of a transaction if the transaction is in doubt.</span></span>|  
  
> [!NOTE]
>  <span data-ttu-id="e592c-115">应注意，通知可能不会按顺序发送或按特定顺序发送。</span><span class="sxs-lookup"><span data-stu-id="e592c-115">You should be aware that notifications might not be sent sequentially, or in a particular order.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e592c-116">下面的示例演示如何实现此接口，以及如何使用 <xref:System.Transactions.Transaction.EnlistVolatile%2A> 方法将对象作为事务中的参与者登记。</span><span class="sxs-lookup"><span data-stu-id="e592c-116">The following example shows an implementation of this interface, as well as enlisting the object as a participant in a transaction using the <xref:System.Transactions.Transaction.EnlistVolatile%2A> method.</span></span>  
  
 [!code-csharp[Tx_Enlist#1](~/samples/snippets/csharp/VS_Snippets_CFX/tx_enlist/cs/enlist.cs#1)]
 [!code-vb[Tx_Enlist#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/tx_enlist/vb/enlist.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Transactions.ISinglePhaseNotification" />
    <related type="Article" href="https://msdn.microsoft.com/library/786a12c2-d530-49f4-9c59-5c973e15a11d"><span data-ttu-id="e592c-117">在事务中将资源登记为参与者</span><span class="sxs-lookup"><span data-stu-id="e592c-117">Enlisting Resources as Participants in a Transaction</span></span></related>
    <related type="Article" href="https://msdn.microsoft.com/library/694ea153-e4db-41ae-96ac-9ac66dcb69a9"><span data-ttu-id="e592c-118">在单阶段和多阶段中提交事务</span><span class="sxs-lookup"><span data-stu-id="e592c-118">Committing a Transaction in Single-Phase and Multi-Phase</span></span></related>
  </Docs>
  <Members>
    <Member MemberName="Commit">
      <MemberSignature Language="C#" Value="public void Commit (System.Transactions.Enlistment enlistment);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Commit(class System.Transactions.Enlistment enlistment) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Transactions.IEnlistmentNotification.Commit(System.Transactions.Enlistment)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Commit (enlistment As Enlistment)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Commit(System::Transactions::Enlistment ^ enlistment);" />
      <MemberSignature Language="F#" Value="abstract member Commit : System.Transactions.Enlistment -&gt; unit" Usage="iEnlistmentNotification.Commit enlistment" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Transactions</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Transactions.Local</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enlistment" Type="System.Transactions.Enlistment" />
      </Parameters>
      <Docs>
        <param name="enlistment"><span data-ttu-id="e592c-119">用于将响应发送到事务管理器的 <see cref="T:System.Transactions.Enlistment" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="e592c-119">An <see cref="T:System.Transactions.Enlistment" /> object used to send a response to the transaction manager.</span></span></param>
        <summary><span data-ttu-id="e592c-120">通知登记的对象事务正在提交。</span><span class="sxs-lookup"><span data-stu-id="e592c-120">Notifies an enlisted object that a transaction is being committed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e592c-121">事务管理器在提交的第二个阶段（当该对象指示所有参与者提交事务时）调用此方法。</span><span class="sxs-lookup"><span data-stu-id="e592c-121">The transaction manager calls this method of an enlisted object during the second phase of a commitment, when it instructs all participants to commit the transaction.</span></span>  
  
 <span data-ttu-id="e592c-122">资源管理器应执行完成事务所需的任何工作，然后通过对 `enlistment` 参数调用 <xref:System.Transactions.Enlistment.Done%2A> 方法，通知 TM 已经完成了。</span><span class="sxs-lookup"><span data-stu-id="e592c-122">The resource manager should perform any work necessary to finish the transaction and then inform the TM that it has finished by calling the <xref:System.Transactions.Enlistment.Done%2A> method on the `enlistment` parameter.</span></span>  
  
 <span data-ttu-id="e592c-123">如果资源管理器已登记持久，但未通过调用 <xref:System.Transactions.Enlistment.Done%2A> 方法进行响应，则事务管理器无法确定资源管理器是否已收到 <xref:System.Transactions.IEnlistmentNotification.Commit%2A> 调用。</span><span class="sxs-lookup"><span data-stu-id="e592c-123">If the resource manager has enlisted durably, but does not respond by calling <xref:System.Transactions.Enlistment.Done%2A> method, the transaction manager is unsure that the resource manager has received the <xref:System.Transactions.IEnlistmentNotification.Commit%2A> call.</span></span> <span data-ttu-id="e592c-124">因此，事务管理器会继续等待响应并维护与此事务相关的信息。</span><span class="sxs-lookup"><span data-stu-id="e592c-124">As such, the transaction manager keeps waiting for a response, and maintains information relevant to this transaction.</span></span>  <span data-ttu-id="e592c-125">如果永远不会调用 <xref:System.Transactions.Enlistment.Done%2A>，则此信息会无限期保存在内存中或系统范围内的资源中。</span><span class="sxs-lookup"><span data-stu-id="e592c-125">If <xref:System.Transactions.Enlistment.Done%2A> is never called, this piece of information is kept around indefinitely in memory or in a system-wide resource.</span></span> <span data-ttu-id="e592c-126">这将导致无法回收资源。</span><span class="sxs-lookup"><span data-stu-id="e592c-126">This results in resources not being able to be reclaimed.</span></span> <span data-ttu-id="e592c-127">对于分布式事务，此操作最终可能会填充 MSDTC 日志来暂停 MSDTC 进程。</span><span class="sxs-lookup"><span data-stu-id="e592c-127">In the case of a distributed transaction, this could eventually fill the MSDTC log which halts the MSDTC process.</span></span> <span data-ttu-id="e592c-128">如果事务由 <xref:System.Transactions>管理，这会导致资源管理器进程的内存消耗逐步增加。</span><span class="sxs-lookup"><span data-stu-id="e592c-128">In the case of a transaction managed by <xref:System.Transactions>, this results in a gradual and continual increase in the memory consumption of the resource manager's process.</span></span> <span data-ttu-id="e592c-129">因此，在资源管理器完成准备工作后，调用 <xref:System.Transactions.Enlistment.Done%2A> 方法非常重要。</span><span class="sxs-lookup"><span data-stu-id="e592c-129">Therefore, it is crucial that you call the <xref:System.Transactions.Enlistment.Done%2A> method once your resource manager is done with your prepare work.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InDoubt">
      <MemberSignature Language="C#" Value="public void InDoubt (System.Transactions.Enlistment enlistment);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InDoubt(class System.Transactions.Enlistment enlistment) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Transactions.IEnlistmentNotification.InDoubt(System.Transactions.Enlistment)" />
      <MemberSignature Language="VB.NET" Value="Public Sub InDoubt (enlistment As Enlistment)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InDoubt(System::Transactions::Enlistment ^ enlistment);" />
      <MemberSignature Language="F#" Value="abstract member InDoubt : System.Transactions.Enlistment -&gt; unit" Usage="iEnlistmentNotification.InDoubt enlistment" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Transactions</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Transactions.Local</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enlistment" Type="System.Transactions.Enlistment" />
      </Parameters>
      <Docs>
        <param name="enlistment"><span data-ttu-id="e592c-130">用于将响应发送到事务管理器的 <see cref="T:System.Transactions.Enlistment" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="e592c-130">An <see cref="T:System.Transactions.Enlistment" /> object used to send a response to the transaction manager.</span></span></param>
        <summary><span data-ttu-id="e592c-131">通知登记的对象事务的状态不确定。</span><span class="sxs-lookup"><span data-stu-id="e592c-131">Notifies an enlisted object that the status of a transaction is in doubt.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e592c-132">如果事务管理器已调用单个持久资源的单阶段提交操作，然后在获取事务结果之前连接到持久资源，则会对可变资源调用此方法。</span><span class="sxs-lookup"><span data-stu-id="e592c-132">This method is called for volatile resources when the transaction manager has invoked a single phase commit operation to a single durable resource, and then connection to the durable resource was lost prior to getting the transaction result.</span></span> <span data-ttu-id="e592c-133">此时，不能安全地确定事务结果。</span><span class="sxs-lookup"><span data-stu-id="e592c-133">At that point, the transaction outcome cannot be safely determined.</span></span>  
  
 <span data-ttu-id="e592c-134">由于 <xref:System.Transactions.IEnlistmentNotification.InDoubt%2A> 被视为事务的最终状态，因此在调用 <xref:System.Transactions.IEnlistmentNotification.InDoubt%2A>后，不应调用 <xref:System.Transactions.IEnlistmentNotification.Commit%2A> 或 <xref:System.Transactions.IEnlistmentNotification.Rollback%2A>。</span><span class="sxs-lookup"><span data-stu-id="e592c-134">As <xref:System.Transactions.IEnlistmentNotification.InDoubt%2A> is considered to be a final state for a transaction, you should not call <xref:System.Transactions.IEnlistmentNotification.Commit%2A> or <xref:System.Transactions.IEnlistmentNotification.Rollback%2A> after calling <xref:System.Transactions.IEnlistmentNotification.InDoubt%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e592c-135">此方法对可变资源的实现应执行它了解的任何恢复或包含操作对受影响的数据。</span><span class="sxs-lookup"><span data-stu-id="e592c-135">Your implementation of this method for the volatile resource should perform whatever recovery or containment operation it understands on the affected data.</span></span>  <span data-ttu-id="e592c-136">它还必须在 `enlistment` 参数上的 <xref:System.Transactions.Enlistment.Done%2A> 方法完成其工作后对其调用。</span><span class="sxs-lookup"><span data-stu-id="e592c-136">It must also call the <xref:System.Transactions.Enlistment.Done%2A> method on the on the `enlistment` parameter when it has finished its work.</span></span>  
  
 <span data-ttu-id="e592c-137">如果资源管理器已登记持久，但未通过调用 <xref:System.Transactions.Enlistment.Done%2A> 方法进行响应，则事务管理器无法确定资源管理器是否已收到 <xref:System.Transactions.IEnlistmentNotification.InDoubt%2A> 调用。</span><span class="sxs-lookup"><span data-stu-id="e592c-137">If the resource manager has enlisted durably, but does not respond by calling <xref:System.Transactions.Enlistment.Done%2A> method, the transaction manager is unsure that the resource manager has received the <xref:System.Transactions.IEnlistmentNotification.InDoubt%2A> call.</span></span> <span data-ttu-id="e592c-138">因此，事务管理器会继续等待响应并维护与此事务相关的信息。</span><span class="sxs-lookup"><span data-stu-id="e592c-138">As such, the transaction manager keeps waiting for a response, and maintains information relevant to this transaction.</span></span>  <span data-ttu-id="e592c-139">如果永远不会调用 <xref:System.Transactions.Enlistment.Done%2A>，则此信息会无限期保存在内存中或系统范围内的资源中。</span><span class="sxs-lookup"><span data-stu-id="e592c-139">If <xref:System.Transactions.Enlistment.Done%2A> is never called, this piece of information is kept around indefinitely in memory or in a system-wide resource.</span></span> <span data-ttu-id="e592c-140">这将导致无法回收资源。</span><span class="sxs-lookup"><span data-stu-id="e592c-140">This results in resources not being able to be reclaimed.</span></span> <span data-ttu-id="e592c-141">对于分布式事务，此操作最终可能会填充 MSDTC 日志来暂停 MSDTC 进程。</span><span class="sxs-lookup"><span data-stu-id="e592c-141">In the case of a distributed transaction, this could eventually fill the MSDTC log which halts the MSDTC process.</span></span> <span data-ttu-id="e592c-142">如果事务由 <xref:System.Transactions>管理，这会导致资源管理器进程的内存消耗逐步增加。</span><span class="sxs-lookup"><span data-stu-id="e592c-142">In the case of a transaction managed by <xref:System.Transactions>, this results in a gradual and continual increase in the memory consumption of the resource manager's process.</span></span> <span data-ttu-id="e592c-143">因此，在资源管理器完成准备工作后，调用 <xref:System.Transactions.Enlistment.Done%2A> 方法非常重要。</span><span class="sxs-lookup"><span data-stu-id="e592c-143">Therefore, it is crucial that you call the <xref:System.Transactions.Enlistment.Done%2A> method once your resource manager is done with your prepare work.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Prepare">
      <MemberSignature Language="C#" Value="public void Prepare (System.Transactions.PreparingEnlistment preparingEnlistment);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Prepare(class System.Transactions.PreparingEnlistment preparingEnlistment) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Transactions.IEnlistmentNotification.Prepare(System.Transactions.PreparingEnlistment)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Prepare (preparingEnlistment As PreparingEnlistment)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Prepare(System::Transactions::PreparingEnlistment ^ preparingEnlistment);" />
      <MemberSignature Language="F#" Value="abstract member Prepare : System.Transactions.PreparingEnlistment -&gt; unit" Usage="iEnlistmentNotification.Prepare preparingEnlistment" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Transactions</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Transactions.Local</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="preparingEnlistment" Type="System.Transactions.PreparingEnlistment" />
      </Parameters>
      <Docs>
        <param name="preparingEnlistment"><span data-ttu-id="e592c-144">用于将响应发送到事务管理器的 <see cref="T:System.Transactions.PreparingEnlistment" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="e592c-144">A <see cref="T:System.Transactions.PreparingEnlistment" /> object used to send a response to the transaction manager.</span></span></param>
        <summary><span data-ttu-id="e592c-145">通知登记的对象事务正在为提交做准备。</span><span class="sxs-lookup"><span data-stu-id="e592c-145">Notifies an enlisted object that a transaction is being prepared for commitment.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e592c-146">事务管理器在提交时，在提交的第1阶段调用此方法，并在请求参与者是否可以提交事务时调用此方法。</span><span class="sxs-lookup"><span data-stu-id="e592c-146">The transaction manager calls this method of an enlisted resource manager during the phase 1 of a commitment, when it asks participants whether they can commit the transaction.</span></span>  
  
 <span data-ttu-id="e592c-147">在实现持久资源管理器时，应在此阶段记录准备记录。</span><span class="sxs-lookup"><span data-stu-id="e592c-147">When you are implementing a durable resource manager, you should log your prepare record during this phase.</span></span> <span data-ttu-id="e592c-148">记录应包含执行恢复所需的所有信息。</span><span class="sxs-lookup"><span data-stu-id="e592c-148">The record should contain all the necessary information to perform recovery.</span></span> <span data-ttu-id="e592c-149">这包括 <xref:System.Transactions.PreparingEnlistment.RecoveryInformation%2A> 属性，该属性将在恢复期间传递到 <xref:System.Transactions.TransactionManager.Reenlist%2A> 方法中的事务管理器。</span><span class="sxs-lookup"><span data-stu-id="e592c-149">This includes the <xref:System.Transactions.PreparingEnlistment.RecoveryInformation%2A> property, which is passed to the transaction manager in the <xref:System.Transactions.TransactionManager.Reenlist%2A> method during recovery.</span></span> <span data-ttu-id="e592c-150">有关恢复的详细信息，请参阅[执行恢复](https://msdn.microsoft.com/library/d342c5c7-da64-4a4c-8e63-b52f4fbf2691)。</span><span class="sxs-lookup"><span data-stu-id="e592c-150">For more information on recovery, see [Performing Recovery](https://msdn.microsoft.com/library/d342c5c7-da64-4a4c-8e63-b52f4fbf2691).</span></span>  
  
 <span data-ttu-id="e592c-151">在调用 `preparingEnlistment` 参数的 <xref:System.Transactions.PreparingEnlistment.Prepared%2A> 方法之前，资源管理器应完成所有必须完成的工作，才能指示其对承诺的投票。</span><span class="sxs-lookup"><span data-stu-id="e592c-151">Your resource manager should complete all work that must be finished before calling the <xref:System.Transactions.PreparingEnlistment.Prepared%2A> method of the `preparingEnlistment` parameter to indicate its vote for commitment.</span></span> <span data-ttu-id="e592c-152">应确保在收到任何第2阶段通知（如 commit、rollback 或不确定）之前完成此操作。</span><span class="sxs-lookup"><span data-stu-id="e592c-152">You should make sure that this is accomplished before receiving any phase 2 notification such as commit, rollback or in doubt.</span></span> <span data-ttu-id="e592c-153">这是因为第2阶段通知可能在第1阶段调用 <xref:System.Transactions.PreparingEnlistment.Prepared%2A> 方法的同一线程上发生内联。</span><span class="sxs-lookup"><span data-stu-id="e592c-153">This is because phase 2 notifications can happen inline on the same thread that called the <xref:System.Transactions.PreparingEnlistment.Prepared%2A> method in phase 1.</span></span> <span data-ttu-id="e592c-154">因此，在调用 <xref:System.Transactions.PreparingEnlistment.Prepared%2A> 后，您不应执行任何预计在收到第 2 阶段通知前就可完成的操作（如释放锁定）。</span><span class="sxs-lookup"><span data-stu-id="e592c-154">As such, you should not do any work after the <xref:System.Transactions.PreparingEnlistment.Prepared%2A> call (for example, releasing locks) that you would expect to have completed before receiving the phase 2 notifications.</span></span>  
  
 <span data-ttu-id="e592c-155">还可以调用 `preparingEnlistment` 参数的方法来指示回滚的投票。</span><span class="sxs-lookup"><span data-stu-id="e592c-155">You can also call the method of the `preparingEnlistment` parameter to indicate a vote for rollback.</span></span>  
  
 <span data-ttu-id="e592c-156">如果希望对象只观察事务进度并做出反应，而不参与事务，则此方法的实现应在完成其工作后调用 `preparingEnlistment` 参数的 <xref:System.Transactions.Enlistment.Done%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="e592c-156">If you want the object to merely observe and react to the progress of the transaction, without participating in it, your implementation of this method should call the <xref:System.Transactions.Enlistment.Done%2A> method of the `preparingEnlistment` parameter when it has finished its work.</span></span> <span data-ttu-id="e592c-157">这样，资源管理器将不会收到任何第2阶段通知。</span><span class="sxs-lookup"><span data-stu-id="e592c-157">By doing so, your resource manager would not receive any phase 2 notification.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Rollback">
      <MemberSignature Language="C#" Value="public void Rollback (System.Transactions.Enlistment enlistment);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Rollback(class System.Transactions.Enlistment enlistment) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Transactions.IEnlistmentNotification.Rollback(System.Transactions.Enlistment)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Rollback (enlistment As Enlistment)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Rollback(System::Transactions::Enlistment ^ enlistment);" />
      <MemberSignature Language="F#" Value="abstract member Rollback : System.Transactions.Enlistment -&gt; unit" Usage="iEnlistmentNotification.Rollback enlistment" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Transactions</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Transactions.Local</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enlistment" Type="System.Transactions.Enlistment" />
      </Parameters>
      <Docs>
        <param name="enlistment"><span data-ttu-id="e592c-158">用于将响应发送到事务管理器的 <see cref="T:System.Transactions.Enlistment" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="e592c-158">A <see cref="T:System.Transactions.Enlistment" /> object used to send a response to the transaction manager.</span></span></param>
        <summary><span data-ttu-id="e592c-159">通知登记的对象事务正在回滚（中止）。</span><span class="sxs-lookup"><span data-stu-id="e592c-159">Notifies an enlisted object that a transaction is being rolled back (aborted).</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e592c-160">事务管理器在事务回滚（中止）时将调用已登记对象的此方法，因为一个或多个事务参与者无法提交该事务。</span><span class="sxs-lookup"><span data-stu-id="e592c-160">The transaction manager calls this method of an enlisted object when the transaction is being rolled back (aborted) due to the inability of one or more transaction participants to commit the transaction.</span></span>  
  
 <span data-ttu-id="e592c-161">资源管理器应执行完成事务所需的任何工作，然后通过对 `enlistment` 参数调用 <xref:System.Transactions.Enlistment.Done%2A> 方法，通知 TM 已经完成了。</span><span class="sxs-lookup"><span data-stu-id="e592c-161">The resource manager should perform any work necessary to finish the transaction and then inform the TM that it has finished by calling the <xref:System.Transactions.Enlistment.Done%2A> method on the `enlistment` parameter.</span></span>  
  
 <span data-ttu-id="e592c-162">如果资源管理器已登记持久，但未通过调用 <xref:System.Transactions.Enlistment.Done%2A> 方法进行响应，则事务管理器无法确定资源管理器是否已收到 <xref:System.Transactions.IEnlistmentNotification.Rollback%2A> 调用。</span><span class="sxs-lookup"><span data-stu-id="e592c-162">If the resource manager has enlisted durably, but does not respond by calling <xref:System.Transactions.Enlistment.Done%2A> method, the transaction manager is unsure that the resource manager has received the <xref:System.Transactions.IEnlistmentNotification.Rollback%2A> call.</span></span> <span data-ttu-id="e592c-163">因此，事务管理器会继续等待响应并维护与此事务相关的信息。</span><span class="sxs-lookup"><span data-stu-id="e592c-163">As such, the transaction manager keeps waiting for a response, and maintains information relevant to this transaction.</span></span>  <span data-ttu-id="e592c-164">如果永远不会调用 <xref:System.Transactions.Enlistment.Done%2A>，则此信息会无限期保存在内存中或系统范围内的资源中。</span><span class="sxs-lookup"><span data-stu-id="e592c-164">If <xref:System.Transactions.Enlistment.Done%2A> is never called, this piece of information is kept around indefinitely in memory or in a system-wide resource.</span></span> <span data-ttu-id="e592c-165">这将导致无法回收资源。</span><span class="sxs-lookup"><span data-stu-id="e592c-165">This results in resources not being able to be reclaimed.</span></span> <span data-ttu-id="e592c-166">对于分布式事务，此操作最终可能会填充 MSDTC 日志来暂停 MSDTC 进程。</span><span class="sxs-lookup"><span data-stu-id="e592c-166">In the case of a distributed transaction, this could eventually fill the MSDTC log which halts the MSDTC process.</span></span> <span data-ttu-id="e592c-167">如果事务由 <xref:System.Transactions>管理，这会导致资源管理器进程的内存消耗逐步增加。</span><span class="sxs-lookup"><span data-stu-id="e592c-167">In the case of a transaction managed by <xref:System.Transactions>, this results in a gradual and continual increase in the memory consumption of the resource manager's process.</span></span> <span data-ttu-id="e592c-168">因此，在资源管理器完成准备工作后，调用 <xref:System.Transactions.Enlistment.Done%2A> 方法非常重要。</span><span class="sxs-lookup"><span data-stu-id="e592c-168">Therefore, it is crucial that you call the <xref:System.Transactions.Enlistment.Done%2A> method once your resource manager is done with your prepare work.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
