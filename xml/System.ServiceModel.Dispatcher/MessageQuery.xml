<Type Name="MessageQuery" FullName="System.ServiceModel.Dispatcher.MessageQuery">
  <Metadata><Meta Name="ms.openlocfilehash" Value="c9bccff7e8858ea1abde1374e4b4107fc05c9d10" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89931799" /></Metadata><TypeSignature Language="C#" Value="public abstract class MessageQuery" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit MessageQuery extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Dispatcher.MessageQuery" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class MessageQuery" />
  <TypeSignature Language="C++ CLI" Value="public ref class MessageQuery abstract" />
  <TypeSignature Language="F#" Value="type MessageQuery = class" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="6e28b-101">定义类的核心行为，这些类用于搜索消息中特定的相关数据。</span><span class="sxs-lookup"><span data-stu-id="6e28b-101">Defines the core behavior of classes used to search for specific correlating data in a message.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e28b-102"><xref:System.ServiceModel.Dispatcher.MessageQuery> 类与 <xref:System.ServiceModel.Dispatcher.MessageFilter> 类相似。</span><span class="sxs-lookup"><span data-stu-id="6e28b-102">The <xref:System.ServiceModel.Dispatcher.MessageQuery> class is similar to the <xref:System.ServiceModel.Dispatcher.MessageFilter> class.</span></span>  <span data-ttu-id="6e28b-103">但 <xref:System.ServiceModel.Dispatcher.MessageQuery.Evaluate%2A> 方法将返回针对一个消息的查询的计算结果，而不是返回匹配项。</span><span class="sxs-lookup"><span data-stu-id="6e28b-103">However, instead of returning matches, the <xref:System.ServiceModel.Dispatcher.MessageQuery.Evaluate%2A> method returns the results of evaluating a query against a message.</span></span> <span data-ttu-id="6e28b-104">该查询的结果为此消息中的一个值。</span><span class="sxs-lookup"><span data-stu-id="6e28b-104">The result of the query is a value in the message.</span></span> <span data-ttu-id="6e28b-105">将该值用作键以将此消息与其他消息关联起来。</span><span class="sxs-lookup"><span data-stu-id="6e28b-105">Use the value as a key to correlate the message to other messages.</span></span> <span data-ttu-id="6e28b-106">若要为数据添加一个新属性，请使用 <xref:System.ServiceModel.Channels.CorrelationDataMessageProperty.Add%2A> 类的 <xref:System.ServiceModel.Channels.CorrelationDataMessageProperty> 方法。</span><span class="sxs-lookup"><span data-stu-id="6e28b-106">To add a new property for the data, use the <xref:System.ServiceModel.Channels.CorrelationDataMessageProperty.Add%2A> method of the <xref:System.ServiceModel.Channels.CorrelationDataMessageProperty> class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6e28b-107">有关 <xref:System.ServiceModel.Dispatcher.MessageQuery> 的具体实现，请参见 <xref:System.ServiceModel.XPathMessageQuery> 类。</span><span class="sxs-lookup"><span data-stu-id="6e28b-107">For a concrete implementation of the <xref:System.ServiceModel.Dispatcher.MessageQuery>, see the <xref:System.ServiceModel.XPathMessageQuery> class.</span></span>  
  
## <a name="using-the-xpathmessagequery-and-messagequerycollection-classes"></a><span data-ttu-id="6e28b-108">使用 XPathMessageQuery 和 MessageQueryCollection 类</span><span class="sxs-lookup"><span data-stu-id="6e28b-108">Using the XPathMessageQuery and MessageQueryCollection classes</span></span>  
 <span data-ttu-id="6e28b-109">可以通过创建一组查询对象并将它们插入 <xref:System.ServiceModel.Dispatcher.MessageQueryCollection> 类的实例中来优化查询过程。</span><span class="sxs-lookup"><span data-stu-id="6e28b-109">You can optimize the query process by creating a set of query objects and inserting them into an instance of the <xref:System.ServiceModel.Dispatcher.MessageQueryCollection> class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6e28b-110">有关 <xref:System.ServiceModel.Dispatcher.MessageQueryCollection> 的具体实现，请参见 <xref:System.ServiceModel.Dispatcher.XPathMessageQueryCollection> 类。</span><span class="sxs-lookup"><span data-stu-id="6e28b-110">For a concrete implementation of the <xref:System.ServiceModel.Dispatcher.MessageQueryCollection>, see the <xref:System.ServiceModel.Dispatcher.XPathMessageQueryCollection> class.</span></span>  
  
 <span data-ttu-id="6e28b-111">常见用法是在集合中填入查询，这些查询具有相同的 XPath 谓词，只是其最终叶值不同。</span><span class="sxs-lookup"><span data-stu-id="6e28b-111">A common usage is to populate the collection with queries that have the same XPath predicate, but that differ only in the final leaf value.</span></span> <span data-ttu-id="6e28b-112">例如，以下 XPath 查询相同，唯一的区别是它们的最终子句不同。</span><span class="sxs-lookup"><span data-stu-id="6e28b-112">For example, the following XPath queries are identical except for the final clause.</span></span> <span data-ttu-id="6e28b-113">第一个查询查找所有 quantity 特性设置为 1 的元素，第二个查询查找 product 特性设置为“Contoso”的元素：</span><span class="sxs-lookup"><span data-stu-id="6e28b-113">The first queries for all elements that have the quantity attribute set to 1, and the second queries for elements with the product attribute set to 'Contoso'):</span></span>  
  
```  
"/s12:Envelope/s12:Body/PurchaseOrder/Items/Item[@quantity = 1]"  
"/s12:Envelope/s12:Body/PurchaseOrder/Items/Item[@product = 'Contoso']"  
```  
  
 <span data-ttu-id="6e28b-114">利用 <xref:System.ServiceModel.Dispatcher.MessageQueryCollection> 类，可以创建稍有不同的查询表，使处理更高效。</span><span class="sxs-lookup"><span data-stu-id="6e28b-114">The <xref:System.ServiceModel.Dispatcher.MessageQueryCollection> class allows you to create tables of queries that differ only slightly, enabling more efficient processing.</span></span>  
  
 <span data-ttu-id="6e28b-115">或者，可以使用 <xref:System.ServiceModel.Dispatcher.MessageQueryTable%601> 类来存储和计算消息查询。</span><span class="sxs-lookup"><span data-stu-id="6e28b-115">Alternatively, you can use the <xref:System.ServiceModel.Dispatcher.MessageQueryTable%601> class to store and evaluate message queries.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6e28b-116">以下示例创建一个消息和 XPath 消息查询。</span><span class="sxs-lookup"><span data-stu-id="6e28b-116">The following example creates a message and XPath message queries.</span></span> <span data-ttu-id="6e28b-117">这些查询由 <xref:System.ServiceModel.XPathMessageQuery> 对象中包含的 <xref:System.ServiceModel.Dispatcher.XPathMessageQueryCollection> 对象进行评估。</span><span class="sxs-lookup"><span data-stu-id="6e28b-117">The queries are evaluated by the <xref:System.ServiceModel.XPathMessageQuery> objects contained in an <xref:System.ServiceModel.Dispatcher.XPathMessageQueryCollection> object.</span></span> <span data-ttu-id="6e28b-118">使用 <xref:System.ServiceModel.Dispatcher.XPathResult.ResultType%2A> 类的 <xref:System.ServiceModel.Dispatcher.XPathResult> 属性测试每个查询的结果。</span><span class="sxs-lookup"><span data-stu-id="6e28b-118">The results of each query are tested using the <xref:System.ServiceModel.Dispatcher.XPathResult.ResultType%2A> property of the <xref:System.ServiceModel.Dispatcher.XPathResult> class.</span></span>  
  
 [!code-csharp[XPathMessageQuery#0](~/samples/snippets/csharp/VS_Snippets_CFX/xpathmessagequery/cs/source.cs#0)]
 [!code-vb[XPathMessageQuery#0](~/samples/snippets/visualbasic/VS_Snippets_CFX/xpathmessagequery/vb/source.vb#0)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ServiceModel.XPathMessageQuery" />
    <altmember cref="T:System.ServiceModel.Channels.CorrelationDataMessageProperty" />
    <altmember cref="T:System.ServiceModel.Dispatcher.XPathMessageContext" />
    <altmember cref="T:System.ServiceModel.Dispatcher.XPathResult" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MessageQuery ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.MessageQuery.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; MessageQuery();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6e28b-119">初始化 <see cref="T:System.ServiceModel.Dispatcher.MessageQuery" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="6e28b-119">Initializes a new instance of the <see cref="T:System.ServiceModel.Dispatcher.MessageQuery" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateMessageQueryCollection">
      <MemberSignature Language="C#" Value="public virtual System.ServiceModel.Dispatcher.MessageQueryCollection CreateMessageQueryCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ServiceModel.Dispatcher.MessageQueryCollection CreateMessageQueryCollection() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.MessageQuery.CreateMessageQueryCollection" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateMessageQueryCollection () As MessageQueryCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::ServiceModel::Dispatcher::MessageQueryCollection ^ CreateMessageQueryCollection();" />
      <MemberSignature Language="F#" Value="abstract member CreateMessageQueryCollection : unit -&gt; System.ServiceModel.Dispatcher.MessageQueryCollection&#xA;override this.CreateMessageQueryCollection : unit -&gt; System.ServiceModel.Dispatcher.MessageQueryCollection" Usage="messageQuery.CreateMessageQueryCollection " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Dispatcher.MessageQueryCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6e28b-120">创建一个查询集合，该集合返回与其关联的特定数据类型。</span><span class="sxs-lookup"><span data-stu-id="6e28b-120">Creates a collection of queries that returns a specific type of data associated with it.</span></span></summary>
        <returns><span data-ttu-id="6e28b-121"><see cref="T:System.ServiceModel.Dispatcher.MessageQueryCollection" />，与数据类型关联的查询的集合。</span><span class="sxs-lookup"><span data-stu-id="6e28b-121"><see cref="T:System.ServiceModel.Dispatcher.MessageQueryCollection" /> The collection of queries associated with the data type.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e28b-122">此方法应由 <xref:System.ServiceModel.Dispatcher.MessageQueryCollection> 类使用。</span><span class="sxs-lookup"><span data-stu-id="6e28b-122">This method is intended to be used by the <xref:System.ServiceModel.Dispatcher.MessageQueryCollection> class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Evaluate&lt;TResult&gt;">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="6e28b-123">在派生类中重写时，对消息运行一个查询并返回满足该查询的值。</span><span class="sxs-lookup"><span data-stu-id="6e28b-123">When overridden in a derived class, runs a query against the message and returns a value that satisfies the query.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e28b-124">两个重载的区别是，一个重载使用 <xref:System.ServiceModel.Channels.Message> 参数，但不允许其检查正文；另一个重载使用 <xref:System.ServiceModel.Channels.MessageBuffer> 参数，并可以检查消息的任何部分。</span><span class="sxs-lookup"><span data-stu-id="6e28b-124">The difference between the two overloads is that one takes a <xref:System.ServiceModel.Channels.Message> parameter and is not permitted to examine the body; the other takes a <xref:System.ServiceModel.Channels.MessageBuffer> parameter and can examine any part of the message.</span></span> <span data-ttu-id="6e28b-125">消息标头是自动缓冲的，并且无需使用即可对其进行查询。</span><span class="sxs-lookup"><span data-stu-id="6e28b-125">Message headers are automatically buffered and can be queried without being consumed.</span></span> <span data-ttu-id="6e28b-126">不过，若要查询正文，则必须缓冲整个消息，因为查询可以使用未缓冲的消息正文。</span><span class="sxs-lookup"><span data-stu-id="6e28b-126">However, if the body is to be queried, then the entire message must be buffered because an unbuffered message body can be consumed by the query.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Evaluate&lt;TResult&gt;">
      <MemberSignature Language="C#" Value="public abstract TResult Evaluate&lt;TResult&gt; (System.ServiceModel.Channels.Message message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !!TResult Evaluate&lt;TResult&gt;(class System.ServiceModel.Channels.Message message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.MessageQuery.Evaluate``1(System.ServiceModel.Channels.Message)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Evaluate(Of TResult) (message As Message) As TResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResult&gt;&#xA; abstract TResult Evaluate(System::ServiceModel::Channels::Message ^ message);" />
      <MemberSignature Language="F#" Value="abstract member Evaluate : System.ServiceModel.Channels.Message -&gt; 'Result" Usage="messageQuery.Evaluate message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="message" Type="System.ServiceModel.Channels.Message" />
      </Parameters>
      <Docs>
        <typeparam name="TResult"><span data-ttu-id="6e28b-127">要返回的值的类型。</span><span class="sxs-lookup"><span data-stu-id="6e28b-127">The type of the value to return.</span></span></typeparam>
        <param name="message"><span data-ttu-id="6e28b-128">要查询的消息。</span><span class="sxs-lookup"><span data-stu-id="6e28b-128">The message to query.</span></span></param>
        <summary><span data-ttu-id="6e28b-129">在派生类中重写时，对消息运行一个查询并返回一个结果。</span><span class="sxs-lookup"><span data-stu-id="6e28b-129">When overridden in a derived class, runs a query against the message and returns a result.</span></span> <span data-ttu-id="6e28b-130">无法查询正文。</span><span class="sxs-lookup"><span data-stu-id="6e28b-130">The body cannot be queried.</span></span></summary>
        <returns><see cref="T:System.ServiceModel.Dispatcher.MessageQueryCollection" />  
  
<span data-ttu-id="6e28b-131">满足查询的结果的可枚举集合。</span><span class="sxs-lookup"><span data-stu-id="6e28b-131">An enumerable collection of results that satisfy the query.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Evaluate&lt;TResult&gt;">
      <MemberSignature Language="C#" Value="public abstract TResult Evaluate&lt;TResult&gt; (System.ServiceModel.Channels.MessageBuffer buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !!TResult Evaluate&lt;TResult&gt;(class System.ServiceModel.Channels.MessageBuffer buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.MessageQuery.Evaluate``1(System.ServiceModel.Channels.MessageBuffer)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Evaluate(Of TResult) (buffer As MessageBuffer) As TResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResult&gt;&#xA; abstract TResult Evaluate(System::ServiceModel::Channels::MessageBuffer ^ buffer);" />
      <MemberSignature Language="F#" Value="abstract member Evaluate : System.ServiceModel.Channels.MessageBuffer -&gt; 'Result" Usage="messageQuery.Evaluate buffer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="buffer" Type="System.ServiceModel.Channels.MessageBuffer" />
      </Parameters>
      <Docs>
        <typeparam name="TResult"><span data-ttu-id="6e28b-132">要返回的对象的类型。</span><span class="sxs-lookup"><span data-stu-id="6e28b-132">The type of the object to return.</span></span></typeparam>
        <param name="buffer"><span data-ttu-id="6e28b-133">要查询的消息。</span><span class="sxs-lookup"><span data-stu-id="6e28b-133">The message to query.</span></span></param>
        <summary><span data-ttu-id="6e28b-134">在派生类中重写时，对消息运行一个查询并返回一个结果。</span><span class="sxs-lookup"><span data-stu-id="6e28b-134">When overridden in a derived class, runs a query against the message and returns a result.</span></span></summary>
        <returns><see cref="T:System.ServiceModel.Dispatcher.MessageQueryCollection" />  
  
<span data-ttu-id="6e28b-135">满足查询的结果的可枚举集合。</span><span class="sxs-lookup"><span data-stu-id="6e28b-135">An enumerable collection of results that satisfy the query.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="6e28b-136">以下示例创建一个消息和 XPath 消息查询。</span><span class="sxs-lookup"><span data-stu-id="6e28b-136">The following example creates a message and XPath message queries.</span></span> <span data-ttu-id="6e28b-137">这些查询由 <xref:System.ServiceModel.XPathMessageQuery> 对象中包含的 <xref:System.ServiceModel.Dispatcher.XPathMessageQueryCollection> 对象进行评估。</span><span class="sxs-lookup"><span data-stu-id="6e28b-137">The queries are evaluated by the <xref:System.ServiceModel.XPathMessageQuery> objects contained in an <xref:System.ServiceModel.Dispatcher.XPathMessageQueryCollection> object.</span></span> <span data-ttu-id="6e28b-138">使用 <xref:System.ServiceModel.Dispatcher.XPathResult.ResultType%2A> 类的 <xref:System.ServiceModel.Dispatcher.XPathResult> 属性测试每个查询的结果。</span><span class="sxs-lookup"><span data-stu-id="6e28b-138">The results of each query are tested using the <xref:System.ServiceModel.Dispatcher.XPathResult.ResultType%2A> property of the <xref:System.ServiceModel.Dispatcher.XPathResult> class.</span></span>  
  
 [!code-csharp[XPathMessageQuery#0](~/samples/snippets/csharp/VS_Snippets_CFX/xpathmessagequery/cs/source.cs#0)]
 [!code-vb[XPathMessageQuery#0](~/samples/snippets/visualbasic/VS_Snippets_CFX/xpathmessagequery/vb/source.vb#0)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
