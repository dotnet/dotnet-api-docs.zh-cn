<Type Name="MessageFilterTable&lt;TFilterData&gt;" FullName="System.ServiceModel.Dispatcher.MessageFilterTable&lt;TFilterData&gt;">
  <Metadata><Meta Name="ms.openlocfilehash" Value="3185fcb0a4752b790ab09818b7a6c74d775a4ecf" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89803065" /></Metadata><TypeSignature Language="C#" Value="public class MessageFilterTable&lt;TFilterData&gt; : System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;System.ServiceModel.Dispatcher.MessageFilter,TFilterData&gt;&gt;, System.Collections.Generic.IDictionary&lt;System.ServiceModel.Dispatcher.MessageFilter,TFilterData&gt;, System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.ServiceModel.Dispatcher.MessageFilter,TFilterData&gt;&gt;, System.ServiceModel.Dispatcher.IMessageFilterTable&lt;TFilterData&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MessageFilterTable`1&lt;TFilterData&gt; extends System.Object implements class System.Collections.Generic.ICollection`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;class System.ServiceModel.Dispatcher.MessageFilter, !TFilterData&gt;&gt;, class System.Collections.Generic.IDictionary`2&lt;class System.ServiceModel.Dispatcher.MessageFilter, !TFilterData&gt;, class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;class System.ServiceModel.Dispatcher.MessageFilter, !TFilterData&gt;&gt;, class System.Collections.IEnumerable, class System.ServiceModel.Dispatcher.IMessageFilterTable`1&lt;!TFilterData&gt;" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
  <TypeSignature Language="VB.NET" Value="Public Class MessageFilterTable(Of TFilterData)&#xA;Implements ICollection(Of KeyValuePair(Of MessageFilter, TFilterData)), IDictionary(Of MessageFilter, TFilterData), IEnumerable(Of KeyValuePair(Of MessageFilter, TFilterData)), IMessageFilterTable(Of TFilterData)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TFilterData&gt;&#xA;public ref class MessageFilterTable : System::Collections::Generic::ICollection&lt;System::Collections::Generic::KeyValuePair&lt;System::ServiceModel::Dispatcher::MessageFilter ^, TFilterData&gt;&gt;, System::Collections::Generic::IDictionary&lt;System::ServiceModel::Dispatcher::MessageFilter ^, TFilterData&gt;, System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;System::ServiceModel::Dispatcher::MessageFilter ^, TFilterData&gt;&gt;, System::ServiceModel::Dispatcher::IMessageFilterTable&lt;TFilterData&gt;" />
  <TypeSignature Language="F#" Value="type MessageFilterTable&lt;'FilterData&gt; = class&#xA;    interface IMessageFilterTable&lt;'FilterData&gt;&#xA;    interface IDictionary&lt;MessageFilter, 'FilterData&gt;&#xA;    interface ICollection&lt;KeyValuePair&lt;MessageFilter, 'FilterData&gt;&gt;&#xA;    interface seq&lt;KeyValuePair&lt;MessageFilter, 'FilterData&gt;&gt;&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TFilterData" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;System.ServiceModel.Dispatcher.MessageFilter,TFilterData&gt;&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IDictionary&lt;System.ServiceModel.Dispatcher.MessageFilter,TFilterData&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.ServiceModel.Dispatcher.MessageFilter,TFilterData&gt;&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ServiceModel.Dispatcher.IMessageFilterTable&lt;TFilterData&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.Serialization.DataContract]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.Serialization.DataContract&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <typeparam name="TFilterData"><span data-ttu-id="a979c-101">与筛选器关联的 <c>FilterData</c> 的类型。</span><span class="sxs-lookup"><span data-stu-id="a979c-101">The type of the <c>FilterData</c> associated with the filter.</span></span></typeparam>
    <summary><span data-ttu-id="a979c-102">提供筛选器表的通用实现。</span><span class="sxs-lookup"><span data-stu-id="a979c-102">Provides the generic implementation of a filter table.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a979c-103"><xref:System.ServiceModel.Dispatcher.MessageFilterTable%601> 可以接受任何类型的筛选器。</span><span class="sxs-lookup"><span data-stu-id="a979c-103">A <xref:System.ServiceModel.Dispatcher.MessageFilterTable%601> accepts filters of any type.</span></span> <span data-ttu-id="a979c-104">它在内部将这些筛选器分组到包含所有给定类型的筛选器的表。</span><span class="sxs-lookup"><span data-stu-id="a979c-104">It groups them internally into tables that contain all the filters of a given type.</span></span> <span data-ttu-id="a979c-105">添加筛选器时，会将其放置在包含此类筛选器的内部筛选器表（如果已存在）中。</span><span class="sxs-lookup"><span data-stu-id="a979c-105">When a filter is added, it is put into an internal filter table, if one already exists, which contains filters of its type.</span></span> <span data-ttu-id="a979c-106">如果不存在此筛选器表，则调用 <xref:System.ServiceModel.Dispatcher.MessageFilterTable%601.CreateFilterTable%2A> 以分配一个适当类型的新筛选器表。</span><span class="sxs-lookup"><span data-stu-id="a979c-106">If no such table exists, <xref:System.ServiceModel.Dispatcher.MessageFilterTable%601.CreateFilterTable%2A> is called to allocate a new filter table of the appropriate type.</span></span> <span data-ttu-id="a979c-107">默认操作是调用 <xref:System.ServiceModel.Dispatcher.MessageFilter.CreateFilterTable%2A>。</span><span class="sxs-lookup"><span data-stu-id="a979c-107">Its default operation is to call <xref:System.ServiceModel.Dispatcher.MessageFilter.CreateFilterTable%2A>.</span></span>  
  
 <span data-ttu-id="a979c-108">可以重写此默认行为，以显式指定与筛选器类型关联的筛选器表的类型。</span><span class="sxs-lookup"><span data-stu-id="a979c-108">This default behavior can be overridden to explicitly specify the type of filter table associated with a type of filter.</span></span> <span data-ttu-id="a979c-109">第一次将筛选器类型添加到此表时，所创建的筛选器表类型将永久与此筛选器类型关联。</span><span class="sxs-lookup"><span data-stu-id="a979c-109">The first time a filter type is added to the table, the filter table type created is permanently associated with the filter type.</span></span>  
  
 <span data-ttu-id="a979c-110">优先级是一个整数值，用于将筛选器分组为优先级存储桶，并对它们的处理进行排序。</span><span class="sxs-lookup"><span data-stu-id="a979c-110">The priority is an integer value used to group filters into priority buckets and order their processing.</span></span> <span data-ttu-id="a979c-111">分配给筛选器类型的整数越大，该筛选器类型的处理优先级就越高。</span><span class="sxs-lookup"><span data-stu-id="a979c-111">The larger the integer assigned to a filter type, the higher its priority for processing.</span></span> <span data-ttu-id="a979c-112">将一起计算优先级存储桶中的所有筛选器表。</span><span class="sxs-lookup"><span data-stu-id="a979c-112">All the filter tables in a priority bucket are evaluated together.</span></span> <span data-ttu-id="a979c-113">如果较高优先级存储桶未提供任何匹配项，则只会计算较低优先级存储桶。</span><span class="sxs-lookup"><span data-stu-id="a979c-113">Lower priority buckets are only evaluated if higher priority buckets do not provide any matches.</span></span> <span data-ttu-id="a979c-114">筛选器表向添加的筛选器分配一个可进行设置的默认优先级。</span><span class="sxs-lookup"><span data-stu-id="a979c-114">A filter table assigns a default priority that can be set to filters being added.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a979c-115">初始化 <see cref="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="a979c-115">Initializes a new instance of the <see cref="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MessageFilterTable ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.MessageFilterTable`1.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MessageFilterTable();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a979c-116">初始化默认优先级为 0 的 <see cref="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" /> 类的一个新实例。</span><span class="sxs-lookup"><span data-stu-id="a979c-116">Initializes a new instance of the <see cref="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" /> class with a default priority of 0.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a979c-117">分配给筛选器表的整数越大，在检查匹配消息时该筛选器表的优先级越高。</span><span class="sxs-lookup"><span data-stu-id="a979c-117">The larger the integer assigned to a filter table, the higher its priority for use in inspecting messages for a match.</span></span> <span data-ttu-id="a979c-118">可以使用 <xref:System.ServiceModel.Dispatcher.MessageFilterTable%601.%23ctor%2A> 来指定默认优先级。</span><span class="sxs-lookup"><span data-stu-id="a979c-118">The default priority can be specified using <xref:System.ServiceModel.Dispatcher.MessageFilterTable%601.%23ctor%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MessageFilterTable (int defaultPriority);" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 defaultPriority) cil managed" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.MessageFilterTable`1.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (defaultPriority As Integer)" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MessageFilterTable(int defaultPriority);" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.Dispatcher.MessageFilterTable&lt;'FilterData&gt; : int -&gt; System.ServiceModel.Dispatcher.MessageFilterTable&lt;'FilterData&gt;" Usage="new System.ServiceModel.Dispatcher.MessageFilterTable&lt;'FilterData&gt; defaultPriority" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C#" Value="public MessageFilterTable (int default_priority);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 default_priority) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (default_priority As Integer)" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MessageFilterTable(int default_priority);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.Dispatcher.MessageFilterTable&lt;'FilterData&gt; : int -&gt; System.ServiceModel.Dispatcher.MessageFilterTable&lt;'FilterData&gt;" Usage="new System.ServiceModel.Dispatcher.MessageFilterTable&lt;'FilterData&gt; default_priority" FrameworkAlternate="xamarinmac-3.0" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="defaultPriority" Type="System.Int32" Index="0" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="default_priority" Type="System.Int32" Index="0" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="defaultPriority"><span data-ttu-id="a979c-119">筛选器表的默认优先级。</span><span class="sxs-lookup"><span data-stu-id="a979c-119">The default priority for filter table.</span></span></param>
        <param name="default_priority"><span data-ttu-id="a979c-120">筛选器表的默认优先级。</span><span class="sxs-lookup"><span data-stu-id="a979c-120">The default priority for filter table.</span></span></param>
        <summary><span data-ttu-id="a979c-121">初始化具有指定初始默认优先级的 <see cref="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" /> 类的一个新实例。</span><span class="sxs-lookup"><span data-stu-id="a979c-121">Initializes a new instance of the <see cref="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" /> class with the specified initial default priority.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a979c-122">分配给筛选器表的整数越大，在检查匹配消息时该筛选器表的优先级越高。</span><span class="sxs-lookup"><span data-stu-id="a979c-122">The larger the integer assigned to a filter table, the higher its priority for use in inspecting messages for a match.</span></span> <span data-ttu-id="a979c-123">无参数构造函数将赋值为 `defaultPriority` 0。</span><span class="sxs-lookup"><span data-stu-id="a979c-123">The parameterless constructor assigns a `defaultPriority` of 0.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Add">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a979c-124">将筛选器及其关联的 <paramref name="FilterData" /> 添加到筛选器表。</span><span class="sxs-lookup"><span data-stu-id="a979c-124">Adds a filter and its associated <paramref name="FilterData" /> to the filter table.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (System.Collections.Generic.KeyValuePair&lt;System.ServiceModel.Dispatcher.MessageFilter,TFilterData&gt; item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Add(valuetype System.Collections.Generic.KeyValuePair`2&lt;class System.ServiceModel.Dispatcher.MessageFilter, !TFilterData&gt; item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.MessageFilterTable`1.Add(System.Collections.Generic.KeyValuePair{System.ServiceModel.Dispatcher.MessageFilter,`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (item As KeyValuePair(Of MessageFilter, TFilterData))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Add(System::Collections::Generic::KeyValuePair&lt;System::ServiceModel::Dispatcher::MessageFilter ^, TFilterData&gt; item);" />
      <MemberSignature Language="F#" Value="abstract member Add : System.Collections.Generic.KeyValuePair&lt;System.ServiceModel.Dispatcher.MessageFilter, 'FilterData&gt; -&gt; unit&#xA;override this.Add : System.Collections.Generic.KeyValuePair&lt;System.ServiceModel.Dispatcher.MessageFilter, 'FilterData&gt; -&gt; unit" Usage="messageFilterTable.Add item" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Add(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Collections.Generic.KeyValuePair&lt;System.ServiceModel.Dispatcher.MessageFilter,TFilterData&gt;" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="a979c-125">已添加到表中的 <see cref="T:System.Collections.Generic.KeyValuePair`2" /> &lt;Filter, <c>FilterData</c>&gt;。</span><span class="sxs-lookup"><span data-stu-id="a979c-125">The <see cref="T:System.Collections.Generic.KeyValuePair`2" /> &lt;Filter, <c>FilterData</c>&gt; added to the table.</span></span></param>
        <summary><span data-ttu-id="a979c-126">将 filter/<paramref name="FilterData" />（键/值）对添加到筛选器表。</span><span class="sxs-lookup"><span data-stu-id="a979c-126">Adds a filter/<paramref name="FilterData" /> (key/value) pair to the filter table.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a979c-127"><paramref name="item" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="a979c-127"><paramref name="item" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (System.ServiceModel.Dispatcher.MessageFilter filter, TFilterData data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Add(class System.ServiceModel.Dispatcher.MessageFilter filter, !TFilterData data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.MessageFilterTable`1.Add(System.ServiceModel.Dispatcher.MessageFilter,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (filter As MessageFilter, data As TFilterData)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Add(System::ServiceModel::Dispatcher::MessageFilter ^ filter, TFilterData data);" />
      <MemberSignature Language="F#" Value="abstract member Add : System.ServiceModel.Dispatcher.MessageFilter * 'FilterData -&gt; unit&#xA;override this.Add : System.ServiceModel.Dispatcher.MessageFilter * 'FilterData -&gt; unit" Usage="messageFilterTable.Add (filter, data)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IDictionary`2.Add(`0,`1)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filter" Type="System.ServiceModel.Dispatcher.MessageFilter" />
        <Parameter Name="data" Type="TFilterData" />
      </Parameters>
      <Docs>
        <param name="filter"><span data-ttu-id="a979c-128">用作所添加对的键的 <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" />。</span><span class="sxs-lookup"><span data-stu-id="a979c-128">The <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" /> used as the key of the pair added.</span></span></param>
        <param name="data"><span data-ttu-id="a979c-129">与筛选器关联的、用作所添加对的值的 <c>FilterData</c>。</span><span class="sxs-lookup"><span data-stu-id="a979c-129">The <c>FilterData</c> associated with the filter used as the value of the pair added.</span></span></param>
        <summary><span data-ttu-id="a979c-130">将筛选器及其关联的 <paramref name="FilterData" /> 添加到筛选器表。</span><span class="sxs-lookup"><span data-stu-id="a979c-130">Adds a filter and its associated <paramref name="FilterData" /> to the filter table.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a979c-131">这将为筛选器分配一个默认优先级。</span><span class="sxs-lookup"><span data-stu-id="a979c-131">This assigns the filter a default priority.</span></span> <span data-ttu-id="a979c-132">若要指定优先级，请使用 <xref:System.ServiceModel.Dispatcher.MessageFilterTable%601.Add%2A>。</span><span class="sxs-lookup"><span data-stu-id="a979c-132">To specify the priority, use <xref:System.ServiceModel.Dispatcher.MessageFilterTable%601.Add%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a979c-133"><paramref name="filter" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="a979c-133"><paramref name="filter" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a979c-134"><paramref name="filter" /> 在表中已存在。</span><span class="sxs-lookup"><span data-stu-id="a979c-134"><paramref name="filter" /> is already in the table.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (System.ServiceModel.Dispatcher.MessageFilter filter, TFilterData data, int priority);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class System.ServiceModel.Dispatcher.MessageFilter filter, !TFilterData data, int32 priority) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.MessageFilterTable`1.Add(System.ServiceModel.Dispatcher.MessageFilter,`0,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (filter As MessageFilter, data As TFilterData, priority As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(System::ServiceModel::Dispatcher::MessageFilter ^ filter, TFilterData data, int priority);" />
      <MemberSignature Language="F#" Value="member this.Add : System.ServiceModel.Dispatcher.MessageFilter * 'FilterData * int -&gt; unit" Usage="messageFilterTable.Add (filter, data, priority)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filter" Type="System.ServiceModel.Dispatcher.MessageFilter" />
        <Parameter Name="data" Type="TFilterData" />
        <Parameter Name="priority" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="filter"><span data-ttu-id="a979c-135">用作所添加对的键的 <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" />。</span><span class="sxs-lookup"><span data-stu-id="a979c-135">The <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" /> used as the key of the pair added.</span></span></param>
        <param name="data"><span data-ttu-id="a979c-136">与筛选器关联的、用作所添加对的值的 <c>FilterData</c>。</span><span class="sxs-lookup"><span data-stu-id="a979c-136">The <c>FilterData</c> associated with the filter used as the value of the pair added.</span></span></param>
        <param name="priority"><span data-ttu-id="a979c-137">所添加筛选器的优先级。</span><span class="sxs-lookup"><span data-stu-id="a979c-137">The priority of the filter added.</span></span></param>
        <summary><span data-ttu-id="a979c-138">将筛选器及其关联的 <paramref name="FilterData" /> 添加到具有指定优先级的操作筛选器表中。</span><span class="sxs-lookup"><span data-stu-id="a979c-138">Adds a filter and its associated <paramref name="FilterData" /> to the action filter table with a specified priority.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a979c-139">优先级是一个整数值，用于将筛选器分组为优先级存储桶，并对它们的处理进行排序。</span><span class="sxs-lookup"><span data-stu-id="a979c-139">The priority is an integer value used to group filters into priority buckets and order their processing.</span></span> <span data-ttu-id="a979c-140">分配给筛选器类型的整数越大，该筛选器类型的处理优先级就越高。</span><span class="sxs-lookup"><span data-stu-id="a979c-140">The larger the integer assigned to a filter type, the higher its priority for processing.</span></span> <span data-ttu-id="a979c-141">将一起计算优先级存储桶中的所有筛选器表。</span><span class="sxs-lookup"><span data-stu-id="a979c-141">All the filter tables in a priority bucket are evaluated together.</span></span> <span data-ttu-id="a979c-142">如果较高优先级存储桶未提供任何匹配项，则只会计算较低优先级存储桶。</span><span class="sxs-lookup"><span data-stu-id="a979c-142">Lower priority buckets are only evaluated if higher priority buckets do not provide any matches.</span></span> <span data-ttu-id="a979c-143">使用 <xref:System.ServiceModel.Dispatcher.MessageFilterTable%601.Add%2A> 添加一个具有默认优先级的筛选器。</span><span class="sxs-lookup"><span data-stu-id="a979c-143">Use <xref:System.ServiceModel.Dispatcher.MessageFilterTable%601.Add%2A> to add a filter with the default priority.</span></span> <span data-ttu-id="a979c-144">可以使用 <xref:System.ServiceModel.Dispatcher.MessageFilterTable%601.DefaultPriority%2A> 来设置默认优先级。</span><span class="sxs-lookup"><span data-stu-id="a979c-144">The default priority can be set using <xref:System.ServiceModel.Dispatcher.MessageFilterTable%601.DefaultPriority%2A>.</span></span> <span data-ttu-id="a979c-145">默认优先级最初设置为 0。</span><span class="sxs-lookup"><span data-stu-id="a979c-145">The default is initially set to 0.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a979c-146"><paramref name="filter" /> 不能为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="a979c-146"><paramref name="filter" /> cannot be <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a979c-147"><paramref name="filter" /> 在表中已存在。</span><span class="sxs-lookup"><span data-stu-id="a979c-147"><paramref name="filter" /> already exists in the table.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a979c-148"><paramref name="filter" /> 类型与表类型不匹配。</span><span class="sxs-lookup"><span data-stu-id="a979c-148"><paramref name="filter" /> type does not match table type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.MessageFilterTable`1.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Clear();" />
      <MemberSignature Language="F#" Value="abstract member Clear : unit -&gt; unit&#xA;override this.Clear : unit -&gt; unit" Usage="messageFilterTable.Clear " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a979c-149">从筛选器表中移除所有筛选器及其关联的数据。</span><span class="sxs-lookup"><span data-stu-id="a979c-149">Removes all filters and their associated data from the filter table.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a979c-150">此方法实现 <xref:System.Collections.Generic.ICollection%601.Clear%2A>。</span><span class="sxs-lookup"><span data-stu-id="a979c-150">This method implements <xref:System.Collections.Generic.ICollection%601.Clear%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (System.Collections.Generic.KeyValuePair&lt;System.ServiceModel.Dispatcher.MessageFilter,TFilterData&gt; item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Contains(valuetype System.Collections.Generic.KeyValuePair`2&lt;class System.ServiceModel.Dispatcher.MessageFilter, !TFilterData&gt; item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.MessageFilterTable`1.Contains(System.Collections.Generic.KeyValuePair{System.ServiceModel.Dispatcher.MessageFilter,`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (item As KeyValuePair(Of MessageFilter, TFilterData)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Contains(System::Collections::Generic::KeyValuePair&lt;System::ServiceModel::Dispatcher::MessageFilter ^, TFilterData&gt; item);" />
      <MemberSignature Language="F#" Value="abstract member Contains : System.Collections.Generic.KeyValuePair&lt;System.ServiceModel.Dispatcher.MessageFilter, 'FilterData&gt; -&gt; bool&#xA;override this.Contains : System.Collections.Generic.KeyValuePair&lt;System.ServiceModel.Dispatcher.MessageFilter, 'FilterData&gt; -&gt; bool" Usage="messageFilterTable.Contains item" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Contains(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Collections.Generic.KeyValuePair&lt;System.ServiceModel.Dispatcher.MessageFilter,TFilterData&gt;" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="a979c-151">要在表中查找的 <see cref="T:System.Collections.Generic.KeyValuePair`2" /> &lt;<see cref="T:System.ServiceModel.Dispatcher.MessageFilter" />, <c>FilterData</c>&gt;。</span><span class="sxs-lookup"><span data-stu-id="a979c-151">The <see cref="T:System.Collections.Generic.KeyValuePair`2" /> &lt;<see cref="T:System.ServiceModel.Dispatcher.MessageFilter" />, <c>FilterData</c>&gt; to find in the table.</span></span></param>
        <summary><span data-ttu-id="a979c-152">确定筛选器表是否包含指定的筛选器及其关联的 <paramref name="FilterData" />。</span><span class="sxs-lookup"><span data-stu-id="a979c-152">Determines whether the filter table contains a specified filter and its associated <paramref name="FilterData" />.</span></span></summary>
        <returns><span data-ttu-id="a979c-153">如果筛选器表中包含 <paramref name="filter" />/<paramref name="FilterData" /> 对，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a979c-153"><see langword="true" /> if the <paramref name="filter" />/<paramref name="FilterData" /> pair is contained in the filter table; otherwise <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a979c-154">此方法实现 `Contains` 的 <xref:System.Collections.Generic.ICollection%601> 方法。</span><span class="sxs-lookup"><span data-stu-id="a979c-154">This method implements the `Contains` method of <xref:System.Collections.Generic.ICollection%601>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainsKey">
      <MemberSignature Language="C#" Value="public bool ContainsKey (System.ServiceModel.Dispatcher.MessageFilter filter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ContainsKey(class System.ServiceModel.Dispatcher.MessageFilter filter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.MessageFilterTable`1.ContainsKey(System.ServiceModel.Dispatcher.MessageFilter)" />
      <MemberSignature Language="VB.NET" Value="Public Function ContainsKey (filter As MessageFilter) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool ContainsKey(System::ServiceModel::Dispatcher::MessageFilter ^ filter);" />
      <MemberSignature Language="F#" Value="abstract member ContainsKey : System.ServiceModel.Dispatcher.MessageFilter -&gt; bool&#xA;override this.ContainsKey : System.ServiceModel.Dispatcher.MessageFilter -&gt; bool" Usage="messageFilterTable.ContainsKey filter" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IDictionary`2.ContainsKey(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filter" Type="System.ServiceModel.Dispatcher.MessageFilter" />
      </Parameters>
      <Docs>
        <param name="filter"><span data-ttu-id="a979c-155">正在进行测试的 <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" />。</span><span class="sxs-lookup"><span data-stu-id="a979c-155">The <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" /> being tested for.</span></span></param>
        <summary><span data-ttu-id="a979c-156">确定筛选器表是否包含指定的筛选器。</span><span class="sxs-lookup"><span data-stu-id="a979c-156">Determines whether the filter table contains a specified filter.</span></span></summary>
        <returns><span data-ttu-id="a979c-157">如果筛选器表中包含 <paramref name="filter" />，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a979c-157"><see langword="true" /> if the <paramref name="filter" /> is contained in the filter table; otherwise <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a979c-158">此方法实现 `ContainsKey` 的 <xref:System.Collections.Generic.IDictionary%602> 方法。</span><span class="sxs-lookup"><span data-stu-id="a979c-158">This method implements the `ContainsKey` method of <xref:System.Collections.Generic.IDictionary%602>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (System.Collections.Generic.KeyValuePair&lt;System.ServiceModel.Dispatcher.MessageFilter,TFilterData&gt;[] array, int arrayIndex);" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(valuetype System.Collections.Generic.KeyValuePair`2&lt;class System.ServiceModel.Dispatcher.MessageFilter, !TFilterData&gt;[] array, int32 arrayIndex) cil managed" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.MessageFilterTable`1.CopyTo(System.Collections.Generic.KeyValuePair{System.ServiceModel.Dispatcher.MessageFilter,`0}[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (array As KeyValuePair(Of MessageFilter, TFilterData)(), arrayIndex As Integer)" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(cli::array &lt;System::Collections::Generic::KeyValuePair&lt;System::ServiceModel::Dispatcher::MessageFilter ^, TFilterData&gt;&gt; ^ array, int arrayIndex);" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="F#" Value="abstract member CopyTo : System.Collections.Generic.KeyValuePair&lt;System.ServiceModel.Dispatcher.MessageFilter, 'FilterData&gt;[] * int -&gt; unit&#xA;override this.CopyTo : System.Collections.Generic.KeyValuePair&lt;System.ServiceModel.Dispatcher.MessageFilter, 'FilterData&gt;[] * int -&gt; unit" Usage="messageFilterTable.CopyTo (array, arrayIndex)" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C#" Value="public void CopyTo (System.Collections.Generic.KeyValuePair&lt;System.ServiceModel.Dispatcher.MessageFilter,TFilterData&gt;[] array, int index);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(valuetype System.Collections.Generic.KeyValuePair`2&lt;class System.ServiceModel.Dispatcher.MessageFilter, !TFilterData&gt;[] array, int32 index) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (array As KeyValuePair(Of MessageFilter, TFilterData)(), index As Integer)" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(cli::array &lt;System::Collections::Generic::KeyValuePair&lt;System::ServiceModel::Dispatcher::MessageFilter ^, TFilterData&gt;&gt; ^ array, int index);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="abstract member CopyTo : System.Collections.Generic.KeyValuePair&lt;System.ServiceModel.Dispatcher.MessageFilter, 'FilterData&gt;[] * int -&gt; unit&#xA;override this.CopyTo : System.Collections.Generic.KeyValuePair&lt;System.ServiceModel.Dispatcher.MessageFilter, 'FilterData&gt;[] * int -&gt; unit" Usage="messageFilterTable.CopyTo (array, index)" FrameworkAlternate="xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Collections.Generic.KeyValuePair&lt;System.ServiceModel.Dispatcher.MessageFilter,TFilterData&gt;[]" Index="0" />
        <Parameter Name="arrayIndex" Type="System.Int32" Index="1" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="index" Type="System.Int32" Index="1" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="a979c-159">这些对所复制到的 <see cref="T:System.Collections.Generic.KeyValuePair`2" /> &lt;Filter, <c>FilterData</c>&gt; 类型的从零开始的数组。</span><span class="sxs-lookup"><span data-stu-id="a979c-159">The zero-based array of type <see cref="T:System.Collections.Generic.KeyValuePair`2" /> &lt;Filter, <c>FilterData</c>&gt; to which the pairs are being copied.</span></span></param>
        <param name="arrayIndex"><span data-ttu-id="a979c-160">开始复制的索引位置。</span><span class="sxs-lookup"><span data-stu-id="a979c-160">The index at which to begin copying.</span></span></param>
        <param name="index"><span data-ttu-id="a979c-161">开始复制的索引位置。</span><span class="sxs-lookup"><span data-stu-id="a979c-161">The index at which to begin copying.</span></span></param>
        <summary><span data-ttu-id="a979c-162">将 filter/<paramref name="FilterData" /> 对复制到从指定索引开始的数组。</span><span class="sxs-lookup"><span data-stu-id="a979c-162">Copies the filter/<paramref name="FilterData" /> pairs to an array that starts at a specified index.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a979c-163">此方法实现 `CopyTo` 的 <xref:System.Collections.Generic.ICollection%601> 方法。</span><span class="sxs-lookup"><span data-stu-id="a979c-163">This method implements the `CopyTo` method of <xref:System.Collections.Generic.ICollection%601>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.MessageFilterTable`1.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.ServiceModel.Dispatcher.MessageFilterTable&lt;'FilterData&gt;.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.ICollection`1.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a979c-164">获取筛选器表中 filter/<paramref name="FilterData" /> 对的数目。</span><span class="sxs-lookup"><span data-stu-id="a979c-164">Gets the number of filter/<paramref name="FilterData" /> pairs in the filter table.</span></span></summary>
        <value><span data-ttu-id="a979c-165">获取筛选器表中 filter/<paramref name="FilterData" /> 对项的数目。</span><span class="sxs-lookup"><span data-stu-id="a979c-165">The number of filter/<paramref name="FilterData" /> pairs items in the filter table.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a979c-166">此属性实现 <xref:System.Collections.Generic.ICollection%601.Count%2A>。</span><span class="sxs-lookup"><span data-stu-id="a979c-166">This property implements <xref:System.Collections.Generic.ICollection%601.Count%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateFilterTable">
      <MemberSignature Language="C#" Value="protected virtual System.ServiceModel.Dispatcher.IMessageFilterTable&lt;TFilterData&gt; CreateFilterTable (System.ServiceModel.Dispatcher.MessageFilter filter);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.ServiceModel.Dispatcher.IMessageFilterTable`1&lt;!TFilterData&gt; CreateFilterTable(class System.ServiceModel.Dispatcher.MessageFilter filter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.MessageFilterTable`1.CreateFilterTable(System.ServiceModel.Dispatcher.MessageFilter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateFilterTable (filter As MessageFilter) As IMessageFilterTable(Of TFilterData)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::ServiceModel::Dispatcher::IMessageFilterTable&lt;TFilterData&gt; ^ CreateFilterTable(System::ServiceModel::Dispatcher::MessageFilter ^ filter);" />
      <MemberSignature Language="F#" Value="abstract member CreateFilterTable : System.ServiceModel.Dispatcher.MessageFilter -&gt; System.ServiceModel.Dispatcher.IMessageFilterTable&lt;'FilterData&gt;&#xA;override this.CreateFilterTable : System.ServiceModel.Dispatcher.MessageFilter -&gt; System.ServiceModel.Dispatcher.IMessageFilterTable&lt;'FilterData&gt;" Usage="messageFilterTable.CreateFilterTable filter" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Dispatcher.IMessageFilterTable&lt;TFilterData&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filter" Type="System.ServiceModel.Dispatcher.MessageFilter" />
      </Parameters>
      <Docs>
        <param name="filter"><span data-ttu-id="a979c-167">将包含在所创建筛选器表中的 <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" />。</span><span class="sxs-lookup"><span data-stu-id="a979c-167">The <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" /> to be contained in the filter table created.</span></span></param>
        <summary><span data-ttu-id="a979c-168">为指定类型的筛选器实例化筛选器表。</span><span class="sxs-lookup"><span data-stu-id="a979c-168">Instantiates a filter table for a specified type of filter.</span></span></summary>
        <returns><span data-ttu-id="a979c-169">所创建的包含指定筛选器的 <see cref="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />。</span><span class="sxs-lookup"><span data-stu-id="a979c-169">The <see cref="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" /> that is created that contains the specified filter.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultPriority">
      <MemberSignature Language="C#" Value="public int DefaultPriority { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 DefaultPriority" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.MessageFilterTable`1.DefaultPriority" />
      <MemberSignature Language="VB.NET" Value="Public Property DefaultPriority As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int DefaultPriority { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.DefaultPriority : int with get, set" Usage="System.ServiceModel.Dispatcher.MessageFilterTable&lt;'FilterData&gt;.DefaultPriority" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Serialization.DataMember]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Serialization.DataMember&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a979c-170">获取或设置筛选器表的默认优先级。</span><span class="sxs-lookup"><span data-stu-id="a979c-170">Gets or sets the default priority for the filter table.</span></span></summary>
        <value><span data-ttu-id="a979c-171">当筛选器添加到筛选器表时分配的默认优先级。</span><span class="sxs-lookup"><span data-stu-id="a979c-171">The default priority assigned by filters added to the filter table.</span></span> <span data-ttu-id="a979c-172">默认优先级的默认值为 0。</span><span class="sxs-lookup"><span data-stu-id="a979c-172">The default value for the default priority is 0.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a979c-173">默认优先级为未显式指定优先级时，当筛选器添加到筛选器表时自动分配的优先级。</span><span class="sxs-lookup"><span data-stu-id="a979c-173">The default priority is the priority automatically assigned a filter added to the filter table if no priority is explicitly specified.</span></span> <span data-ttu-id="a979c-174">筛选器的优先级是一个用于将筛选器分组到存储桶的整数值，这些存储桶用于对筛选器的处理进行排序。</span><span class="sxs-lookup"><span data-stu-id="a979c-174">The priority of a filter is an integer value used to group filters into buckets that are used to order their processing.</span></span> <span data-ttu-id="a979c-175">分配给筛选器类型的整数越大，该筛选器类型的处理优先级就越高。</span><span class="sxs-lookup"><span data-stu-id="a979c-175">The larger the integer assigned to a filter type, the higher its priority for processing.</span></span> <span data-ttu-id="a979c-176">将一起计算优先级存储桶中的所有筛选器表。</span><span class="sxs-lookup"><span data-stu-id="a979c-176">All the filter tables in a priority bucket are evaluated together.</span></span> <span data-ttu-id="a979c-177">如果较高优先级存储桶未提供任何匹配项，则只会计算较低优先级存储桶。</span><span class="sxs-lookup"><span data-stu-id="a979c-177">Lower priority buckets are only evaluated if higher priority buckets do not provide any matches.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;System.ServiceModel.Dispatcher.MessageFilter,TFilterData&gt;&gt; GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;class System.ServiceModel.Dispatcher.MessageFilter, !TFilterData&gt;&gt; GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.MessageFilterTable`1.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator(Of KeyValuePair(Of MessageFilter, TFilterData))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IEnumerator&lt;System::Collections::Generic::KeyValuePair&lt;System::ServiceModel::Dispatcher::MessageFilter ^, TFilterData&gt;&gt; ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;System.ServiceModel.Dispatcher.MessageFilter, 'FilterData&gt;&gt;&#xA;override this.GetEnumerator : unit -&gt; System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;System.ServiceModel.Dispatcher.MessageFilter, 'FilterData&gt;&gt;" Usage="messageFilterTable.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEnumerable`1.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;System.ServiceModel.Dispatcher.MessageFilter,TFilterData&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a979c-178">返回一个循环访问筛选器表的枚举数。</span><span class="sxs-lookup"><span data-stu-id="a979c-178">Returns an enumerator that iterates through the filter table.</span></span></summary>
        <returns><span data-ttu-id="a979c-179">一个可用于循环访问筛选器表的 <see cref="T:System.Collections.Generic.IEnumerator`1" />&lt;KeyValuePair&lt;Filter, <paramref name="FilterData" />&gt;&gt;。</span><span class="sxs-lookup"><span data-stu-id="a979c-179">An <see cref="T:System.Collections.Generic.IEnumerator`1" />&lt;KeyValuePair&lt;Filter, <paramref name="FilterData" />&gt;&gt; that can be used to iterate through the filter table.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a979c-180">此方法实现 `GetEnumerator` 的 <xref:System.Collections.IEnumerable> 方法。</span><span class="sxs-lookup"><span data-stu-id="a979c-180">This method implements the `GetEnumerator` method of <xref:System.Collections.IEnumerable>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetMatchingFilter">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a979c-181">返回一个值，该值指示指定的消息或消息缓冲区是否正好满足表中的一个筛选器的匹配条件，然后在 <see langword="out" /> 参数中返回该筛选器。</span><span class="sxs-lookup"><span data-stu-id="a979c-181">Returns a value that indicates whether the match criterion of exactly one filter in the table is satisfied by the specified message or message buffer and returns that filter in an <see langword="out" /> parameter.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a979c-182">测试某一消息是否符合筛选器表中任一筛选器的要求。</span><span class="sxs-lookup"><span data-stu-id="a979c-182">Tests whether a message satisfies any of the filters in the filter table.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetMatchingFilter">
      <MemberSignature Language="C#" Value="public bool GetMatchingFilter (System.ServiceModel.Channels.Message message, out System.ServiceModel.Dispatcher.MessageFilter filter);" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetMatchingFilter(class System.ServiceModel.Channels.Message message, [out] class System.ServiceModel.Dispatcher.MessageFilter&amp; filter) cil managed" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.MessageFilterTable`1.GetMatchingFilter(System.ServiceModel.Channels.Message,System.ServiceModel.Dispatcher.MessageFilter@)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMatchingFilter (message As Message, ByRef filter As MessageFilter) As Boolean" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool GetMatchingFilter(System::ServiceModel::Channels::Message ^ message, [Runtime::InteropServices::Out] System::ServiceModel::Dispatcher::MessageFilter ^ % filter);" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="F#" Value="abstract member GetMatchingFilter : System.ServiceModel.Channels.Message * MessageFilter -&gt; bool&#xA;override this.GetMatchingFilter : System.ServiceModel.Channels.Message * MessageFilter -&gt; bool" Usage="messageFilterTable.GetMatchingFilter (message, filter)" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C#" Value="public bool GetMatchingFilter (System.ServiceModel.Channels.Message message, out System.ServiceModel.Dispatcher.MessageFilter result);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetMatchingFilter(class System.ServiceModel.Channels.Message message, [out] class System.ServiceModel.Dispatcher.MessageFilter&amp; result) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMatchingFilter (message As Message, ByRef result As MessageFilter) As Boolean" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool GetMatchingFilter(System::ServiceModel::Channels::Message ^ message, [Runtime::InteropServices::Out] System::ServiceModel::Dispatcher::MessageFilter ^ % result);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="abstract member GetMatchingFilter : System.ServiceModel.Channels.Message * MessageFilter -&gt; bool&#xA;override this.GetMatchingFilter : System.ServiceModel.Channels.Message * MessageFilter -&gt; bool" Usage="messageFilterTable.GetMatchingFilter (message, result)" FrameworkAlternate="xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Dispatcher.IMessageFilterTable`1.GetMatchingFilter(System.ServiceModel.Channels.Message,System.ServiceModel.Dispatcher.MessageFilter@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.ServiceModel.Channels.Message" Index="0" />
        <Parameter Name="filter" Type="System.ServiceModel.Dispatcher.MessageFilter" RefType="out" Index="1" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="result" Type="System.ServiceModel.Dispatcher.MessageFilter" RefType="out" Index="1" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="a979c-183">要测试的 <see cref="T:System.ServiceModel.Channels.Message" />。</span><span class="sxs-lookup"><span data-stu-id="a979c-183">The <see cref="T:System.ServiceModel.Channels.Message" /> to test.</span></span></param>
        <param name="filter"><span data-ttu-id="a979c-184"><see langword="out" /> 参数，该参数存储 <paramref name="message" /> 符合的筛选器。</span><span class="sxs-lookup"><span data-stu-id="a979c-184">The <see langword="out" /> parameter that stores the filter that is satisfied by the <paramref name="message" />.</span></span> <span data-ttu-id="a979c-185">如果找不到筛选器，该参数将设置为默认值。</span><span class="sxs-lookup"><span data-stu-id="a979c-185">If no filter was found, the parameter is set to its default value.</span></span></param>
        <param name="result"><span data-ttu-id="a979c-186"><see langword="out" /> 参数，该参数存储 <paramref name="message" /> 符合的筛选器。</span><span class="sxs-lookup"><span data-stu-id="a979c-186">The <see langword="out" /> parameter that stores the filter that is satisfied by the <paramref name="message" />.</span></span> <span data-ttu-id="a979c-187">如果找不到筛选器，该参数将设置为默认值。</span><span class="sxs-lookup"><span data-stu-id="a979c-187">If no filter was found, the parameter is set to its default value.</span></span></param>
        <summary><span data-ttu-id="a979c-188">返回一个值，该值指示指定的消息是否正好满足表中的一个筛选器的匹配标准，然后在 <see langword="out" /> 参数中返回该筛选器。</span><span class="sxs-lookup"><span data-stu-id="a979c-188">Returns a value that indicates whether the match criterion of exactly one filter in the table is satisfied by the specified message and returns that filter in an <see langword="out" /> parameter.</span></span></summary>
        <returns><span data-ttu-id="a979c-189">如果消息满足表中一个 <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" /> 的匹配条件，则为 <see langword="true" />；如果不满足任何筛选器，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a979c-189"><see langword="true" /> if match criterion of one <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" /> in the table is satisfied by the message; <see langword="false" /> if no filter is satisfied.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a979c-190">当预期会有单个筛选器与消息相匹配，并且需要匹配筛选器时，请使用此方法。</span><span class="sxs-lookup"><span data-stu-id="a979c-190">Use this method when a single filter is expected to match the message and the matching filter is required.</span></span>  
  
 <span data-ttu-id="a979c-191">如果必须由筛选器表中的筛选器来检查消息的正文，请使用该方法的 <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601.GetMatchingFilter%2A> 版本。</span><span class="sxs-lookup"><span data-stu-id="a979c-191">If the body of the message must be inspected by a filter in the filter table, use the <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601.GetMatchingFilter%2A> version of the method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ServiceModel.Dispatcher.MultipleFilterMatchesException"><span data-ttu-id="a979c-192">多个 <see cref="T:System.ServiceModel.Dispatcher.ActionMessageFilter" /> 与 <paramref name="messageBuffer" /> 相匹配。</span><span class="sxs-lookup"><span data-stu-id="a979c-192">More than one <see cref="T:System.ServiceModel.Dispatcher.ActionMessageFilter" /> matches the <paramref name="messageBuffer" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetMatchingFilter">
      <MemberSignature Language="C#" Value="public bool GetMatchingFilter (System.ServiceModel.Channels.MessageBuffer buffer, out System.ServiceModel.Dispatcher.MessageFilter filter);" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetMatchingFilter(class System.ServiceModel.Channels.MessageBuffer buffer, [out] class System.ServiceModel.Dispatcher.MessageFilter&amp; filter) cil managed" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.MessageFilterTable`1.GetMatchingFilter(System.ServiceModel.Channels.MessageBuffer,System.ServiceModel.Dispatcher.MessageFilter@)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMatchingFilter (buffer As MessageBuffer, ByRef filter As MessageFilter) As Boolean" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool GetMatchingFilter(System::ServiceModel::Channels::MessageBuffer ^ buffer, [Runtime::InteropServices::Out] System::ServiceModel::Dispatcher::MessageFilter ^ % filter);" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="F#" Value="abstract member GetMatchingFilter : System.ServiceModel.Channels.MessageBuffer * MessageFilter -&gt; bool&#xA;override this.GetMatchingFilter : System.ServiceModel.Channels.MessageBuffer * MessageFilter -&gt; bool" Usage="messageFilterTable.GetMatchingFilter (buffer, filter)" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C#" Value="public bool GetMatchingFilter (System.ServiceModel.Channels.MessageBuffer buffer, out System.ServiceModel.Dispatcher.MessageFilter result);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetMatchingFilter(class System.ServiceModel.Channels.MessageBuffer buffer, [out] class System.ServiceModel.Dispatcher.MessageFilter&amp; result) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMatchingFilter (buffer As MessageBuffer, ByRef result As MessageFilter) As Boolean" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool GetMatchingFilter(System::ServiceModel::Channels::MessageBuffer ^ buffer, [Runtime::InteropServices::Out] System::ServiceModel::Dispatcher::MessageFilter ^ % result);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="abstract member GetMatchingFilter : System.ServiceModel.Channels.MessageBuffer * MessageFilter -&gt; bool&#xA;override this.GetMatchingFilter : System.ServiceModel.Channels.MessageBuffer * MessageFilter -&gt; bool" Usage="messageFilterTable.GetMatchingFilter (buffer, result)" FrameworkAlternate="xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Dispatcher.IMessageFilterTable`1.GetMatchingFilter(System.ServiceModel.Channels.MessageBuffer,System.ServiceModel.Dispatcher.MessageFilter@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.ServiceModel.Channels.MessageBuffer" Index="0" />
        <Parameter Name="filter" Type="System.ServiceModel.Dispatcher.MessageFilter" RefType="out" Index="1" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="result" Type="System.ServiceModel.Dispatcher.MessageFilter" RefType="out" Index="1" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="a979c-193">要测试的 <see cref="T:System.ServiceModel.Channels.MessageBuffer" />。</span><span class="sxs-lookup"><span data-stu-id="a979c-193">The <see cref="T:System.ServiceModel.Channels.MessageBuffer" /> to test.</span></span></param>
        <param name="filter"><span data-ttu-id="a979c-194"><see langword="out" /> 参数，该参数存储 <paramref name="buffer" /> 符合的筛选器。</span><span class="sxs-lookup"><span data-stu-id="a979c-194">The <see langword="out" /> parameter that stores the filter that is satisfied by the <paramref name="buffer" />.</span></span></param>
        <param name="result"><span data-ttu-id="a979c-195"><see langword="out" /> 参数，该参数存储 <paramref name="buffer" /> 符合的筛选器。</span><span class="sxs-lookup"><span data-stu-id="a979c-195">The <see langword="out" /> parameter that stores the filter that is satisfied by the <paramref name="buffer" />.</span></span></param>
        <summary><span data-ttu-id="a979c-196">返回一个值，该值指示指定的消息是否正好满足表中的一个筛选器的匹配标准，然后在 <see langword="out" /> 参数中返回该筛选器。</span><span class="sxs-lookup"><span data-stu-id="a979c-196">Returns a value that indicates whether the match criterion of exactly one filter in the table is satisfied by the specified message and returns that filter in an <see langword="out" /> parameter.</span></span></summary>
        <returns><span data-ttu-id="a979c-197">如果消息正好满足表中一个筛选器的匹配条件，则为 <see langword="true" />；如果不满足任何筛选器，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a979c-197"><see langword="true" /> if match criterion of exactly one filter in the table is satisfied by the message; <see langword="false" /> if no filter is satisfied.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a979c-198">当预期会有单个筛选器与消息相匹配，并且必须返回匹配筛选器时，请使用此方法。</span><span class="sxs-lookup"><span data-stu-id="a979c-198">Use this method when a single filter is expected to match the message and the matching filter must be returned.</span></span>  
  
 <span data-ttu-id="a979c-199">此方法实现 <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601.GetMatchingFilter%2A>。</span><span class="sxs-lookup"><span data-stu-id="a979c-199">This method implements <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601.GetMatchingFilter%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ServiceModel.Dispatcher.MultipleFilterMatchesException"><span data-ttu-id="a979c-200">多个 <see cref="T:System.ServiceModel.Dispatcher.ActionMessageFilter" /> 与 <paramref name="messageBuffer" /> 相匹配。</span><span class="sxs-lookup"><span data-stu-id="a979c-200">More than one <see cref="T:System.ServiceModel.Dispatcher.ActionMessageFilter" /> matches the <paramref name="messageBuffer" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetMatchingFilters">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a979c-201">返回一个值，该值指示指定的消息或缓冲消息是否满足表中 <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" /> 的匹配条件，然后将匹配筛选器添加到集合。</span><span class="sxs-lookup"><span data-stu-id="a979c-201">Returns a value that indicates whether the match criterion of a <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" /> in the table is satisfied by the specified message or buffered message, and adds the matching filters to a collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a979c-202">当预期有多个筛选器与消息匹配，并且需要匹配筛选器时，请使用此方法。</span><span class="sxs-lookup"><span data-stu-id="a979c-202">Use this method when more than one filter is expected to match the message and the matching filters are required.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetMatchingFilters">
      <MemberSignature Language="C#" Value="public bool GetMatchingFilters (System.ServiceModel.Channels.Message message, System.Collections.Generic.ICollection&lt;System.ServiceModel.Dispatcher.MessageFilter&gt; results);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetMatchingFilters(class System.ServiceModel.Channels.Message message, class System.Collections.Generic.ICollection`1&lt;class System.ServiceModel.Dispatcher.MessageFilter&gt; results) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.MessageFilterTable`1.GetMatchingFilters(System.ServiceModel.Channels.Message,System.Collections.Generic.ICollection{System.ServiceModel.Dispatcher.MessageFilter})" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMatchingFilters (message As Message, results As ICollection(Of MessageFilter)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool GetMatchingFilters(System::ServiceModel::Channels::Message ^ message, System::Collections::Generic::ICollection&lt;System::ServiceModel::Dispatcher::MessageFilter ^&gt; ^ results);" />
      <MemberSignature Language="F#" Value="abstract member GetMatchingFilters : System.ServiceModel.Channels.Message * System.Collections.Generic.ICollection&lt;System.ServiceModel.Dispatcher.MessageFilter&gt; -&gt; bool&#xA;override this.GetMatchingFilters : System.ServiceModel.Channels.Message * System.Collections.Generic.ICollection&lt;System.ServiceModel.Dispatcher.MessageFilter&gt; -&gt; bool" Usage="messageFilterTable.GetMatchingFilters (message, results)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Dispatcher.IMessageFilterTable`1.GetMatchingFilters(System.ServiceModel.Channels.Message,System.Collections.Generic.ICollection{System.ServiceModel.Dispatcher.MessageFilter})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.ServiceModel.Channels.Message" />
        <Parameter Name="results" Type="System.Collections.Generic.ICollection&lt;System.ServiceModel.Dispatcher.MessageFilter&gt;" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="a979c-203">要测试的 <see cref="T:System.ServiceModel.Channels.Message" />。</span><span class="sxs-lookup"><span data-stu-id="a979c-203">The <see cref="T:System.ServiceModel.Channels.Message" /> to test.</span></span></param>
        <param name="results"><span data-ttu-id="a979c-204">存储 <see cref="T:System.Collections.Generic.ICollection`1" />&lt;Filter&gt; 中匹配的 <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" /> 对象的引用参数。</span><span class="sxs-lookup"><span data-stu-id="a979c-204">The reference parameter that stores the <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" /> objects that match in <see cref="T:System.Collections.Generic.ICollection`1" />&lt;Filter&gt;.</span></span></param>
        <summary><span data-ttu-id="a979c-205">返回一个值，该值指示指定的消息是否满足表中 <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" /> 的匹配条件，然后将匹配筛选器添加到集合。</span><span class="sxs-lookup"><span data-stu-id="a979c-205">Returns a value that indicates whether the match criterion of an <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" /> in the table is satisfied by the specified message, and adds the matching filters to a collection.</span></span></summary>
        <returns><span data-ttu-id="a979c-206">如果 <paramref name="message" /> 满足表中至少一个 <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" /> 的匹配条件，则为 <see langword="true" />；如果不满足任何筛选器，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a979c-206"><see langword="true" /> if match criterion of at least one <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" /> in the table is satisfied by <paramref name="message" />; <see langword="false" /> if no filter is satisfied.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a979c-207">当预期有多个筛选器与消息匹配，并且需要匹配筛选器时，请使用此方法。</span><span class="sxs-lookup"><span data-stu-id="a979c-207">Use this method when more than one filter is expected to match the message and the matching filters are required.</span></span>  
  
 <span data-ttu-id="a979c-208">此方法可测试筛选器的最高优先级存储桶（其中至少存在一个匹配项）中的所有匹配筛选器。</span><span class="sxs-lookup"><span data-stu-id="a979c-208">This method tests for all of the matching filters in the highest priority bucket of filters in which at least one match occurs.</span></span>  
  
 <span data-ttu-id="a979c-209">不允许表中的筛选器检查消息正文。</span><span class="sxs-lookup"><span data-stu-id="a979c-209">The filters in the table are not allowed to inspect the message body.</span></span>  
  
 <span data-ttu-id="a979c-210">匹配的 <xref:System.ServiceModel.Dispatcher.MessageFilter> 对象存储在 `results` 的 <xref:System.Collections.Generic.ICollection%601> 参数中。</span><span class="sxs-lookup"><span data-stu-id="a979c-210">The matching <xref:System.ServiceModel.Dispatcher.MessageFilter> objects are stored in the `results` parameter of <xref:System.Collections.Generic.ICollection%601>.</span></span> <span data-ttu-id="a979c-211">然后，可以使用这些筛选器作为键，通过 `FilterData` 提供的方法从筛选器表恢复 <xref:System.Collections.Generic.IDictionary%602>。</span><span class="sxs-lookup"><span data-stu-id="a979c-211">The `FilterData` can then be recovered from the filter table using these filters as keys with the methods provided by <xref:System.Collections.Generic.IDictionary%602>.</span></span>  
  
 <span data-ttu-id="a979c-212">此方法实现 <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601.GetMatchingFilters%2A>。</span><span class="sxs-lookup"><span data-stu-id="a979c-212">This method implements <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601.GetMatchingFilters%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a979c-213"><paramref name="results" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="a979c-213"><paramref name="results" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ServiceModel.Dispatcher.InvalidBodyAccessException"><span data-ttu-id="a979c-214">筛选器试图检查消息正文的内容。</span><span class="sxs-lookup"><span data-stu-id="a979c-214">A filter attempted to examine the contents of the message body.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetMatchingFilters">
      <MemberSignature Language="C#" Value="public bool GetMatchingFilters (System.ServiceModel.Channels.MessageBuffer buffer, System.Collections.Generic.ICollection&lt;System.ServiceModel.Dispatcher.MessageFilter&gt; results);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetMatchingFilters(class System.ServiceModel.Channels.MessageBuffer buffer, class System.Collections.Generic.ICollection`1&lt;class System.ServiceModel.Dispatcher.MessageFilter&gt; results) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.MessageFilterTable`1.GetMatchingFilters(System.ServiceModel.Channels.MessageBuffer,System.Collections.Generic.ICollection{System.ServiceModel.Dispatcher.MessageFilter})" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMatchingFilters (buffer As MessageBuffer, results As ICollection(Of MessageFilter)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool GetMatchingFilters(System::ServiceModel::Channels::MessageBuffer ^ buffer, System::Collections::Generic::ICollection&lt;System::ServiceModel::Dispatcher::MessageFilter ^&gt; ^ results);" />
      <MemberSignature Language="F#" Value="abstract member GetMatchingFilters : System.ServiceModel.Channels.MessageBuffer * System.Collections.Generic.ICollection&lt;System.ServiceModel.Dispatcher.MessageFilter&gt; -&gt; bool&#xA;override this.GetMatchingFilters : System.ServiceModel.Channels.MessageBuffer * System.Collections.Generic.ICollection&lt;System.ServiceModel.Dispatcher.MessageFilter&gt; -&gt; bool" Usage="messageFilterTable.GetMatchingFilters (buffer, results)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Dispatcher.IMessageFilterTable`1.GetMatchingFilters(System.ServiceModel.Channels.MessageBuffer,System.Collections.Generic.ICollection{System.ServiceModel.Dispatcher.MessageFilter})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.ServiceModel.Channels.MessageBuffer" />
        <Parameter Name="results" Type="System.Collections.Generic.ICollection&lt;System.ServiceModel.Dispatcher.MessageFilter&gt;" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="a979c-215">要测试的 <see cref="T:System.ServiceModel.Channels.MessageBuffer" />。</span><span class="sxs-lookup"><span data-stu-id="a979c-215">The <see cref="T:System.ServiceModel.Channels.MessageBuffer" /> to test.</span></span></param>
        <param name="results"><span data-ttu-id="a979c-216">存储 <see cref="T:System.Collections.Generic.ICollection`1" />&lt;Filter&gt; 中匹配的 <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" /> 对象的引用参数。</span><span class="sxs-lookup"><span data-stu-id="a979c-216">The reference parameter that stores the <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" /> objects that match in <see cref="T:System.Collections.Generic.ICollection`1" />&lt;Filter&gt;.</span></span></param>
        <summary><span data-ttu-id="a979c-217">返回一个值，该值指示指定的缓冲消息是否满足表中至少一个筛选器的匹配条件，然后将最高优先级筛选器组（其中至少存在一个匹配项）中的匹配筛选器添加到集合。</span><span class="sxs-lookup"><span data-stu-id="a979c-217">Returns a value that indicates whether the match criterion of at least one filter in the table is satisfied by the specified buffered message and adds the matching filters from the highest priority set of filters in which at least one match is found to a collection.</span></span></summary>
        <returns><span data-ttu-id="a979c-218">如果 <paramref name="message" /> 满足表中至少一个筛选器的匹配条件，则为 <see langword="true" />；如果不满足任何筛选器，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a979c-218"><see langword="true" /> if match criterion of at least one filter in the table is satisfied by <paramref name="message" />; <see langword="false" /> if no filter is satisfied.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a979c-219">当预期有多个筛选器与缓冲消息相匹配，并且需要匹配筛选器时，请使用此方法。</span><span class="sxs-lookup"><span data-stu-id="a979c-219">Use this method when more than one filter is expected to match the buffered message and the matching filters are required.</span></span>  
  
 <span data-ttu-id="a979c-220">允许表中的筛选器检查消息正文。</span><span class="sxs-lookup"><span data-stu-id="a979c-220">The filters in the table are allowed to inspect the message body.</span></span>  
  
 <span data-ttu-id="a979c-221">匹配的 <xref:System.ServiceModel.Dispatcher.MessageFilter> 对象存储在 `results` 的 <xref:System.Collections.Generic.ICollection%601> 参数中。</span><span class="sxs-lookup"><span data-stu-id="a979c-221">The matching <xref:System.ServiceModel.Dispatcher.MessageFilter> objects are stored in the `results` parameter of <xref:System.Collections.Generic.ICollection%601>.</span></span> <span data-ttu-id="a979c-222">然后，可以使用这些筛选器作为键，通过 `FilterData` 提供的方法从筛选器表恢复 <xref:System.Collections.Generic.IDictionary%602>。</span><span class="sxs-lookup"><span data-stu-id="a979c-222">The `FilterData` can then be recovered from the filter table using these filters as keys with the methods provided by <xref:System.Collections.Generic.IDictionary%602>.</span></span>  
  
 <span data-ttu-id="a979c-223">此方法实现 <xref:System.ServiceModel.Dispatcher.MessageFilterTable%601.GetMatchingFilters%2A>。</span><span class="sxs-lookup"><span data-stu-id="a979c-223">This method implements <xref:System.ServiceModel.Dispatcher.MessageFilterTable%601.GetMatchingFilters%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a979c-224"><paramref name="results" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="a979c-224"><paramref name="results" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetMatchingValue">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a979c-225">返回一个值，该值指示指定的消息或缓冲消息是否正好满足表中的一个 <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" /> 的匹配条件，然后将匹配筛选数据添加到集合。</span><span class="sxs-lookup"><span data-stu-id="a979c-225">Returns a value that indicates whether the match criterion of exactly one <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" /> in the table is satisfied by the specified message or buffered message and adds the matching filter data to a collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a979c-226">当预期会有单个筛选器与消息相匹配，并且只需要恢复匹配筛选器的 `FilterData` 时，可使用这些方法之一。</span><span class="sxs-lookup"><span data-stu-id="a979c-226">Use one of these methods when a single filter is expected to match the message and only the `FilterData` from the matching filter must be recovered.</span></span>  
  
 <span data-ttu-id="a979c-227">使用 <xref:System.ServiceModel.Dispatcher.MessageFilterTable%601.GetMatchingValue%2A> 检查消息头并使用 <xref:System.ServiceModel.Dispatcher.MessageFilterTable%601.GetMatchingValue%2A> 检查缓冲消息，并且可以查看消息正文。</span><span class="sxs-lookup"><span data-stu-id="a979c-227">Use <xref:System.ServiceModel.Dispatcher.MessageFilterTable%601.GetMatchingValue%2A> to inspect message headers and <xref:System.ServiceModel.Dispatcher.MessageFilterTable%601.GetMatchingValue%2A> to inspect a buffered message, which can include looking at the message body.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetMatchingValue">
      <MemberSignature Language="C#" Value="public bool GetMatchingValue (System.ServiceModel.Channels.Message message, out TFilterData data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetMatchingValue(class System.ServiceModel.Channels.Message message, [out] !TFilterData&amp; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.MessageFilterTable`1.GetMatchingValue(System.ServiceModel.Channels.Message,`0@)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMatchingValue (message As Message, ByRef data As TFilterData) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool GetMatchingValue(System::ServiceModel::Channels::Message ^ message, [Runtime::InteropServices::Out] TFilterData % data);" />
      <MemberSignature Language="F#" Value="abstract member GetMatchingValue : System.ServiceModel.Channels.Message * 'FilterData -&gt; bool&#xA;override this.GetMatchingValue : System.ServiceModel.Channels.Message * 'FilterData -&gt; bool" Usage="messageFilterTable.GetMatchingValue (message, data)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Dispatcher.IMessageFilterTable`1.GetMatchingValue(System.ServiceModel.Channels.Message,`0@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.ServiceModel.Channels.Message" />
        <Parameter Name="data" Type="TFilterData" RefType="out" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="a979c-228">要测试的 <see cref="T:System.ServiceModel.Channels.Message" />。</span><span class="sxs-lookup"><span data-stu-id="a979c-228">The <see cref="T:System.ServiceModel.Channels.Message" /> to test.</span></span></param>
        <param name="data"><span data-ttu-id="a979c-229"><see langword="out" /> 参数，存储与 <paramref name="message" /> 匹配的 <c>FilterData</c>。</span><span class="sxs-lookup"><span data-stu-id="a979c-229">The <see langword="out" /> parameter that stores the <c>FilterData</c> that matches the <paramref name="message" />.</span></span></param>
        <summary><span data-ttu-id="a979c-230">返回一个值，该值指示指定的消息是否正好满足表中的一个 <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" /> 的匹配条件，然后将匹配筛选数据添加到集合。</span><span class="sxs-lookup"><span data-stu-id="a979c-230">Returns a value that indicates whether the match criterion of exactly one <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" /> in the table is satisfied by the specified message and adds the matching filter data to a collection.</span></span></summary>
        <returns><span data-ttu-id="a979c-231">如果消息满足表中一个筛选器的匹配条件，则为 <see langword="true" />；如果不满足任何筛选器，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a979c-231"><see langword="true" /> if the match criterion of one filter in the table is satisfied by the message; <see langword="false" /> if no filter is satisfied.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a979c-232">当预期会有单个筛选器与消息相匹配，并且只需要恢复匹配筛选器的 `FilterData` 时，请使用此方法。</span><span class="sxs-lookup"><span data-stu-id="a979c-232">Use this method when a single filter is expected to match the message and only the `FilterData` from the matching filter must be recovered.</span></span>  
  
 <span data-ttu-id="a979c-233">此方法实现 <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601.GetMatchingFilter%2A>。</span><span class="sxs-lookup"><span data-stu-id="a979c-233">This method implements <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601.GetMatchingFilter%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ServiceModel.Dispatcher.MultipleFilterMatchesException"><span data-ttu-id="a979c-234">多个筛选器与 <paramref name="message" /> 相匹配。</span><span class="sxs-lookup"><span data-stu-id="a979c-234">More than one filter matches the <paramref name="message" />.</span></span></exception>
        <exception cref="T:System.ServiceModel.Dispatcher.InvalidBodyAccessException"><span data-ttu-id="a979c-235">筛选器试图检查消息正文的内容。</span><span class="sxs-lookup"><span data-stu-id="a979c-235">A filter attempted to examine the contents of the message body.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetMatchingValue">
      <MemberSignature Language="C#" Value="public bool GetMatchingValue (System.ServiceModel.Channels.MessageBuffer buffer, out TFilterData data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetMatchingValue(class System.ServiceModel.Channels.MessageBuffer buffer, [out] !TFilterData&amp; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.MessageFilterTable`1.GetMatchingValue(System.ServiceModel.Channels.MessageBuffer,`0@)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMatchingValue (buffer As MessageBuffer, ByRef data As TFilterData) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool GetMatchingValue(System::ServiceModel::Channels::MessageBuffer ^ buffer, [Runtime::InteropServices::Out] TFilterData % data);" />
      <MemberSignature Language="F#" Value="abstract member GetMatchingValue : System.ServiceModel.Channels.MessageBuffer * 'FilterData -&gt; bool&#xA;override this.GetMatchingValue : System.ServiceModel.Channels.MessageBuffer * 'FilterData -&gt; bool" Usage="messageFilterTable.GetMatchingValue (buffer, data)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Dispatcher.IMessageFilterTable`1.GetMatchingValue(System.ServiceModel.Channels.MessageBuffer,`0@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.ServiceModel.Channels.MessageBuffer" />
        <Parameter Name="data" Type="TFilterData" RefType="out" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="a979c-236">要测试的 <see cref="T:System.ServiceModel.Channels.MessageBuffer" />。</span><span class="sxs-lookup"><span data-stu-id="a979c-236">The <see cref="T:System.ServiceModel.Channels.MessageBuffer" /> to test.</span></span></param>
        <param name="data"><span data-ttu-id="a979c-237"><see langword="out" /> 参数，存储与 <paramref name="buffer" /> 匹配的 <c>FilterData</c>。</span><span class="sxs-lookup"><span data-stu-id="a979c-237">The <see langword="out" /> parameter that stores the <c>FilterData</c> that matches the <paramref name="buffer" />.</span></span></param>
        <summary><span data-ttu-id="a979c-238">返回一个值，该值指示指定的缓冲消息是否正好满足表中的一个筛选器的匹配条件，然后将匹配筛选数据添加到集合。</span><span class="sxs-lookup"><span data-stu-id="a979c-238">Returns a value that indicates whether the match criterion of exactly one filter in the table is satisfied by the specified buffered message and adds the matching filter data to a collection.</span></span></summary>
        <returns><span data-ttu-id="a979c-239">如果缓冲消息满足表中一个筛选器的匹配条件，则为 <see langword="true" />；如果不满足任何筛选器，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a979c-239"><see langword="true" /> if the match criterion of one filter in the table is satisfied by the buffered message; <see langword="false" /> if no filter is satisfied.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a979c-240">当预期有单个筛选器与缓冲消息相匹配，并且只需要恢复匹配筛选器的 `FilterData` 时，请使用此方法。</span><span class="sxs-lookup"><span data-stu-id="a979c-240">Use this method when a single filter is expected to match the buffered message and only the `FilterData` from the matching filter must be recovered.</span></span> <span data-ttu-id="a979c-241">因为将筛选器匹配到了缓冲消息，所以此筛选器可以指定消息正文上的条件。</span><span class="sxs-lookup"><span data-stu-id="a979c-241">Because the filter is being matched to a buffered message, it can specify conditions on the message body.</span></span>  
  
 <span data-ttu-id="a979c-242">此方法实现 <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601.GetMatchingFilter%2A>。</span><span class="sxs-lookup"><span data-stu-id="a979c-242">This method implements <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601.GetMatchingFilter%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ServiceModel.Dispatcher.MultipleFilterMatchesException"><span data-ttu-id="a979c-243">多个筛选器与 <paramref name="messageBuffer" /> 相匹配。</span><span class="sxs-lookup"><span data-stu-id="a979c-243">More than one filter matches the <paramref name="messageBuffer" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetMatchingValues">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a979c-244">返回一个值，该值指示指定的消息或缓冲消息是否满足表中至少一个筛选器的匹配条件，然后将匹配筛选器的 <paramref name="FilterData" /> 添加到集合。</span><span class="sxs-lookup"><span data-stu-id="a979c-244">Returns a value that indicates whether the match criterion of at least one filter in the table is satisfied by the specified message or buffered message and adds the <paramref name="FilterData" /> of the matching filters to a collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a979c-245">当预期有多个筛选器与消息或缓冲消息相匹配，并且只需要 `FilterData` 时，请使用此方法。</span><span class="sxs-lookup"><span data-stu-id="a979c-245">Use this method when more than one filter is expected to match the message or buffered message and only the `FilterData` is required.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetMatchingValues">
      <MemberSignature Language="C#" Value="public bool GetMatchingValues (System.ServiceModel.Channels.Message message, System.Collections.Generic.ICollection&lt;TFilterData&gt; results);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetMatchingValues(class System.ServiceModel.Channels.Message message, class System.Collections.Generic.ICollection`1&lt;!TFilterData&gt; results) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.MessageFilterTable`1.GetMatchingValues(System.ServiceModel.Channels.Message,System.Collections.Generic.ICollection{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMatchingValues (message As Message, results As ICollection(Of TFilterData)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool GetMatchingValues(System::ServiceModel::Channels::Message ^ message, System::Collections::Generic::ICollection&lt;TFilterData&gt; ^ results);" />
      <MemberSignature Language="F#" Value="abstract member GetMatchingValues : System.ServiceModel.Channels.Message * System.Collections.Generic.ICollection&lt;'FilterData&gt; -&gt; bool&#xA;override this.GetMatchingValues : System.ServiceModel.Channels.Message * System.Collections.Generic.ICollection&lt;'FilterData&gt; -&gt; bool" Usage="messageFilterTable.GetMatchingValues (message, results)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Dispatcher.IMessageFilterTable`1.GetMatchingValues(System.ServiceModel.Channels.Message,System.Collections.Generic.ICollection{`0})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.ServiceModel.Channels.Message" />
        <Parameter Name="results" Type="System.Collections.Generic.ICollection&lt;TFilterData&gt;" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="a979c-246">要测试的 <see cref="T:System.ServiceModel.Channels.Message" />。</span><span class="sxs-lookup"><span data-stu-id="a979c-246">The <see cref="T:System.ServiceModel.Channels.Message" /> to test.</span></span></param>
        <param name="results"><span data-ttu-id="a979c-247">存储泛型 <see cref="T:System.Collections.Generic.ICollection`1" />&lt;<c>FilterData</c>&gt; 中匹配操作筛选器的 <c>FilterData</c> 的引用参数。</span><span class="sxs-lookup"><span data-stu-id="a979c-247">The reference parameter that stores the <c>FilterData</c> of the matching action filters in a generic <see cref="T:System.Collections.Generic.ICollection`1" />&lt;<c>FilterData</c>&gt;.</span></span></param>
        <summary><span data-ttu-id="a979c-248">返回一个值，该值指示指定的消息或缓冲消息是否满足表中至少一个筛选器的匹配条件，然后将匹配筛选器的 <paramref name="FilterData" /> 添加到集合。</span><span class="sxs-lookup"><span data-stu-id="a979c-248">Returns a value that indicates whether the match criterion of at least one filter in the table is satisfied by the specified message or buffered message and adds the <paramref name="FilterData" /> of the matching filters to a collection.</span></span></summary>
        <returns><span data-ttu-id="a979c-249">如果消息正好满足表中一个筛选器的匹配条件，则为 <see langword="true" />；如果不满足任何筛选器，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a979c-249"><see langword="true" /> if match criterion of exactly one filter in the table is satisfied by the message; <see langword="false" /> if no filter is satisfied.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a979c-250">当预期会有多个筛选器与消息相匹配，同时只需要 `FilterData`，且不检查消息正文时，请使用此方法。</span><span class="sxs-lookup"><span data-stu-id="a979c-250">Use this method when more than one filter is expected to match the message, only the `FilterData` is required, and the body of the message is not inspected.</span></span>  
  
 <span data-ttu-id="a979c-251">匹配的 `FilterData` 对象的 <xref:System.ServiceModel.Dispatcher.MessageFilter> 存储在 `results` 的 <xref:System.Collections.Generic.ICollection%601> 参数中。</span><span class="sxs-lookup"><span data-stu-id="a979c-251">The `FilterData` of the matching <xref:System.ServiceModel.Dispatcher.MessageFilter> objects are stored in the `results` parameter of <xref:System.Collections.Generic.ICollection%601>.</span></span>  
  
 <span data-ttu-id="a979c-252">此方法实现 <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601.GetMatchingValues%2A>。</span><span class="sxs-lookup"><span data-stu-id="a979c-252">This method implements <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601.GetMatchingValues%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a979c-253"><paramref name="results" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="a979c-253"><paramref name="results" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ServiceModel.Dispatcher.InvalidBodyAccessException"><span data-ttu-id="a979c-254">筛选器试图检查消息正文的内容。</span><span class="sxs-lookup"><span data-stu-id="a979c-254">A filter attempted to examine the contents of the message body.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetMatchingValues">
      <MemberSignature Language="C#" Value="public bool GetMatchingValues (System.ServiceModel.Channels.MessageBuffer buffer, System.Collections.Generic.ICollection&lt;TFilterData&gt; results);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetMatchingValues(class System.ServiceModel.Channels.MessageBuffer buffer, class System.Collections.Generic.ICollection`1&lt;!TFilterData&gt; results) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.MessageFilterTable`1.GetMatchingValues(System.ServiceModel.Channels.MessageBuffer,System.Collections.Generic.ICollection{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMatchingValues (buffer As MessageBuffer, results As ICollection(Of TFilterData)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool GetMatchingValues(System::ServiceModel::Channels::MessageBuffer ^ buffer, System::Collections::Generic::ICollection&lt;TFilterData&gt; ^ results);" />
      <MemberSignature Language="F#" Value="abstract member GetMatchingValues : System.ServiceModel.Channels.MessageBuffer * System.Collections.Generic.ICollection&lt;'FilterData&gt; -&gt; bool&#xA;override this.GetMatchingValues : System.ServiceModel.Channels.MessageBuffer * System.Collections.Generic.ICollection&lt;'FilterData&gt; -&gt; bool" Usage="messageFilterTable.GetMatchingValues (buffer, results)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Dispatcher.IMessageFilterTable`1.GetMatchingValues(System.ServiceModel.Channels.MessageBuffer,System.Collections.Generic.ICollection{`0})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.ServiceModel.Channels.MessageBuffer" />
        <Parameter Name="results" Type="System.Collections.Generic.ICollection&lt;TFilterData&gt;" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="a979c-255">要测试的 <see cref="T:System.ServiceModel.Channels.MessageBuffer" />。</span><span class="sxs-lookup"><span data-stu-id="a979c-255">The <see cref="T:System.ServiceModel.Channels.MessageBuffer" /> to test.</span></span></param>
        <param name="results"><span data-ttu-id="a979c-256">存储 <paramref name="buffer" /> 满足的筛选器的筛选数据的引用参数。</span><span class="sxs-lookup"><span data-stu-id="a979c-256">The reference parameter that stores the filter data of the filters that are satisfied by the <paramref name="buffer" />.</span></span></param>
        <summary><span data-ttu-id="a979c-257">返回一个值，该值指示指定的消息缓冲区是否正好满足表中一个筛选器的匹配条件，以及是否将匹配筛选器的 <paramref name="FilterData" /> 添加到 <paramref name="results" /> 集合中。</span><span class="sxs-lookup"><span data-stu-id="a979c-257">Returns a value that indicates whether the match criterion of exactly one filter in the table is satisfied by the specified message buffer and adds the <paramref name="FilterData" /> of the matching filters to the <paramref name="results" /> collection.</span></span></summary>
        <returns><span data-ttu-id="a979c-258">如果缓冲消息正好满足表中一个 <see cref="T:System.ServiceModel.Dispatcher.ActionMessageFilter" /> 的匹配条件，则为 <see langword="true" />；如果不满足任何筛选器，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a979c-258"><see langword="true" /> if the match criterion of exactly one <see cref="T:System.ServiceModel.Dispatcher.ActionMessageFilter" /> in the table is satisfied by the buffered message; <see langword="false" /> if no filter is satisfied.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a979c-259">当预期有多个筛选器与缓冲消息相匹配，并且只需要 `FilterData` 时，请使用此方法。</span><span class="sxs-lookup"><span data-stu-id="a979c-259">Use this method when more than one filter is expected to match the buffered message and only the `FilterData` is required.</span></span>  
  
 <span data-ttu-id="a979c-260">匹配的 `FilterData` 对象的 <xref:System.ServiceModel.Dispatcher.MessageFilter> 存储在 `results`<xref:System.Collections.Generic.ICollection%601> 中。</span><span class="sxs-lookup"><span data-stu-id="a979c-260">The `FilterData` of the matching <xref:System.ServiceModel.Dispatcher.MessageFilter> objects are stored in the `results`<xref:System.Collections.Generic.ICollection%601>.</span></span>  
  
 <span data-ttu-id="a979c-261">此方法实现 <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601.GetMatchingValues%2A>。</span><span class="sxs-lookup"><span data-stu-id="a979c-261">This method implements <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601.GetMatchingValues%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a979c-262"><paramref name="results" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="a979c-262"><paramref name="results" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetPriority">
      <MemberSignature Language="C#" Value="public int GetPriority (System.ServiceModel.Dispatcher.MessageFilter filter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetPriority(class System.ServiceModel.Dispatcher.MessageFilter filter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.MessageFilterTable`1.GetPriority(System.ServiceModel.Dispatcher.MessageFilter)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPriority (filter As MessageFilter) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetPriority(System::ServiceModel::Dispatcher::MessageFilter ^ filter);" />
      <MemberSignature Language="F#" Value="member this.GetPriority : System.ServiceModel.Dispatcher.MessageFilter -&gt; int" Usage="messageFilterTable.GetPriority filter" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filter" Type="System.ServiceModel.Dispatcher.MessageFilter" />
      </Parameters>
      <Docs>
        <param name="filter"><span data-ttu-id="a979c-263">所创建的筛选器表中包含的 <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" />。</span><span class="sxs-lookup"><span data-stu-id="a979c-263">The <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" /> contained in the filter table created.</span></span></param>
        <summary><span data-ttu-id="a979c-264">返回表中给定筛选器的优先级。</span><span class="sxs-lookup"><span data-stu-id="a979c-264">Returns the priority of a given filter in the table.</span></span></summary>
        <returns><span data-ttu-id="a979c-265"><paramref name="filter" /> 的优先级。</span><span class="sxs-lookup"><span data-stu-id="a979c-265">The priority of the <paramref name="filter" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a979c-266">优先级是一个整数值，用于将筛选器分组为优先级存储桶，并对它们的处理进行排序。</span><span class="sxs-lookup"><span data-stu-id="a979c-266">The priority is an integer value used to group filters into priority buckets and order their processing.</span></span> <span data-ttu-id="a979c-267">分配给筛选器类型的整数越大，该筛选器类型的处理优先级就越高。</span><span class="sxs-lookup"><span data-stu-id="a979c-267">The larger the integer assigned to a filter type, the higher its priority for processing.</span></span> <span data-ttu-id="a979c-268">将一起计算优先级存储桶中的所有筛选器表。</span><span class="sxs-lookup"><span data-stu-id="a979c-268">All the filter tables in a priority bucket are evaluated together.</span></span> <span data-ttu-id="a979c-269">如果较高优先级存储桶未提供任何匹配项，则只会计算较低优先级存储桶。</span><span class="sxs-lookup"><span data-stu-id="a979c-269">Lower priority buckets are only evaluated if higher priority buckets do not provide any matches.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a979c-270">筛选器表中不存在指定的筛选器。</span><span class="sxs-lookup"><span data-stu-id="a979c-270">The specified filter does not exist in the filter table.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.MessageFilterTable`1.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="System.ServiceModel.Dispatcher.MessageFilterTable&lt;'FilterData&gt;.IsReadOnly" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.ICollection`1.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a979c-271">获取指示筛选器表是否为只读的值。</span><span class="sxs-lookup"><span data-stu-id="a979c-271">Gets a value that indicates whether the filter table is read-only.</span></span></summary>
        <value><span data-ttu-id="a979c-272">对于所有筛选器表均为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a979c-272"><see langword="false" /> for all filter tables.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a979c-273"><xref:System.ServiceModel.Dispatcher.MessageFilterTable%601> 不能为只读。</span><span class="sxs-lookup"><span data-stu-id="a979c-273">A <xref:System.ServiceModel.Dispatcher.MessageFilterTable%601> must not be read-only.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public TFilterData this[System.ServiceModel.Dispatcher.MessageFilter filter] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !TFilterData Item(class System.ServiceModel.Dispatcher.MessageFilter)" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.MessageFilterTable`1.Item(System.ServiceModel.Dispatcher.MessageFilter)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(filter As MessageFilter) As TFilterData" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TFilterData default[System::ServiceModel::Dispatcher::MessageFilter ^] { TFilterData get(System::ServiceModel::Dispatcher::MessageFilter ^ filter); void set(System::ServiceModel::Dispatcher::MessageFilter ^ filter, TFilterData value); };" />
      <MemberSignature Language="F#" Value="member this.Item(System.ServiceModel.Dispatcher.MessageFilter) : 'FilterData with get, set" Usage="System.ServiceModel.Dispatcher.MessageFilterTable&lt;'FilterData&gt;.Item" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.IDictionary`2.Item(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TFilterData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filter" Type="System.ServiceModel.Dispatcher.MessageFilter" />
      </Parameters>
      <Docs>
        <param name="filter"><span data-ttu-id="a979c-274">与要获取或设置的筛选数据关联的 <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" />。</span><span class="sxs-lookup"><span data-stu-id="a979c-274">The <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" /> associated with the filter data to get or set.</span></span></param>
        <summary><span data-ttu-id="a979c-275">获取或设置与指定的 <paramref name="filter" /> 关联的筛选数据。</span><span class="sxs-lookup"><span data-stu-id="a979c-275">Gets or sets the filter data associated with the specified <paramref name="filter" />.</span></span></summary>
        <value><span data-ttu-id="a979c-276">与 <paramref name="filter" /> 关联的筛选数据。</span><span class="sxs-lookup"><span data-stu-id="a979c-276">The filter data associated with the <paramref name="filter" />.</span></span> <span data-ttu-id="a979c-277">如果找不到指定的 <paramref name="filter" />，get 操作会引发 <see cref="T:System.Collections.Generic.KeyNotFoundException" />，而 set 操作会创建一个以指定的 <paramref name="filter" /> 作为键的新筛选数据元素。</span><span class="sxs-lookup"><span data-stu-id="a979c-277">If the specified <paramref name="filter" /> is not found, a get operation throws a <see cref="T:System.Collections.Generic.KeyNotFoundException" />, and a set operation creates a new filter data element with the specified <paramref name="filter" /> as the key.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a979c-278">`Item` 属性（C# 中的索引器）可通过使用下面的语法提供访问与表的筛选器集合中的 `filter` 关联的筛选数据的功能。</span><span class="sxs-lookup"><span data-stu-id="a979c-278">The `Item` property (the indexer in C#) provides the ability to access the filter data associated with a `filter` in the table's filter collection by using the following syntax.</span></span>  
  
```csharp  
myFilters[filter]  
  
```  
  
```vb  
myFilters(filter)  
  
```  
  
 <span data-ttu-id="a979c-279">您还可以使用 `Item` 属性来添加新元素，方法是设置操作筛选器表中不存在的 `filter`/filter data 对的值。</span><span class="sxs-lookup"><span data-stu-id="a979c-279">You can also use the `Item` property to add new elements by setting the values of a `filter`/filter data pair that does not exist in the action filter table.</span></span> <span data-ttu-id="a979c-280">然而，如果表中已经存在 `filter`，则设置 `Item` 属性将会覆盖旧值。</span><span class="sxs-lookup"><span data-stu-id="a979c-280">However if `filter` is already in the table, setting the `Item` property overwrites the old value.</span></span> <span data-ttu-id="a979c-281">相反，<xref:System.ServiceModel.Dispatcher.MessageFilterTable%601.Add%2A> 方法不会修改现有的 `filter` 的筛选数据。</span><span class="sxs-lookup"><span data-stu-id="a979c-281">In contrast, the <xref:System.ServiceModel.Dispatcher.MessageFilterTable%601.Add%2A> method does not modify the filter data of an existing `filter`.</span></span>  
  
 <span data-ttu-id="a979c-282">词典 `item` 为 `FilterData` 中的 filter/<xref:System.ServiceModel.Dispatcher.MessageFilterTable%601> 对。</span><span class="sxs-lookup"><span data-stu-id="a979c-282">The dictionary `item` is a filter/`FilterData` pair in the case of <xref:System.ServiceModel.Dispatcher.MessageFilterTable%601>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a979c-283"><paramref name="filter" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="a979c-283"><paramref name="filter" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Collections.Generic.KeyNotFoundException"><span data-ttu-id="a979c-284">已检索该属性，并且 <paramref name="filter" /> 不在表中。</span><span class="sxs-lookup"><span data-stu-id="a979c-284">The property is retrieved, and the <paramref name="filter" /> is not in the table.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Keys">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;System.ServiceModel.Dispatcher.MessageFilter&gt; Keys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;class System.ServiceModel.Dispatcher.MessageFilter&gt; Keys" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.MessageFilterTable`1.Keys" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Keys As ICollection(Of MessageFilter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::ICollection&lt;System::ServiceModel::Dispatcher::MessageFilter ^&gt; ^ Keys { System::Collections::Generic::ICollection&lt;System::ServiceModel::Dispatcher::MessageFilter ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Keys : System.Collections.Generic.ICollection&lt;System.ServiceModel.Dispatcher.MessageFilter&gt;" Usage="System.ServiceModel.Dispatcher.MessageFilterTable&lt;'FilterData&gt;.Keys" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.IDictionary`2.Keys</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;System.ServiceModel.Dispatcher.MessageFilter&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a979c-285">获取筛选器表中包含的所有筛选器的集合。</span><span class="sxs-lookup"><span data-stu-id="a979c-285">Gets a collection of all the filters contained in the filter table.</span></span></summary>
        <value><span data-ttu-id="a979c-286">筛选器表中包含的所有筛选器的 <see cref="T:System.Collections.Generic.ICollection`1" />。</span><span class="sxs-lookup"><span data-stu-id="a979c-286">An <see cref="T:System.Collections.Generic.ICollection`1" /> of all the filters contained in the filter table.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a979c-287">此属性实现 <xref:System.Collections.Generic.IDictionary%602.Keys%2A>。</span><span class="sxs-lookup"><span data-stu-id="a979c-287">This property implements <xref:System.Collections.Generic.IDictionary%602.Keys%2A>.</span></span> <span data-ttu-id="a979c-288">筛选器表实现的 <xref:System.Collections.Generic.IDictionary%602><Filter, `FilterData`> 将 <xref:System.ServiceModel.Dispatcher.MessageFilter> 用作该对的键并将 `FilterData` 用作该对的值。</span><span class="sxs-lookup"><span data-stu-id="a979c-288">The <xref:System.Collections.Generic.IDictionary%602><Filter, `FilterData`> that the filter table implements uses the <xref:System.ServiceModel.Dispatcher.MessageFilter> as the key and the `FilterData` as the value of the pair.</span></span>  
  
 <span data-ttu-id="a979c-289">未指定集合中返回的筛选器的顺序，但可以保证此顺序与 `FilterData` 属性所返回的集合中相应 <xref:System.ServiceModel.Dispatcher.MessageFilterTable%601.Values%2A> 的顺序相同。</span><span class="sxs-lookup"><span data-stu-id="a979c-289">The order of the filters returned in the collection is unspecified, but it is guaranteed to be the same order as the corresponding `FilterData` in the collection returned by the <xref:System.ServiceModel.Dispatcher.MessageFilterTable%601.Values%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Remove">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a979c-290">从表中移除筛选器及其关联的筛选数据。</span><span class="sxs-lookup"><span data-stu-id="a979c-290">Removes a filter and its associated filter data from the table.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public bool Remove (System.Collections.Generic.KeyValuePair&lt;System.ServiceModel.Dispatcher.MessageFilter,TFilterData&gt; item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Remove(valuetype System.Collections.Generic.KeyValuePair`2&lt;class System.ServiceModel.Dispatcher.MessageFilter, !TFilterData&gt; item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.MessageFilterTable`1.Remove(System.Collections.Generic.KeyValuePair{System.ServiceModel.Dispatcher.MessageFilter,`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function Remove (item As KeyValuePair(Of MessageFilter, TFilterData)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Remove(System::Collections::Generic::KeyValuePair&lt;System::ServiceModel::Dispatcher::MessageFilter ^, TFilterData&gt; item);" />
      <MemberSignature Language="F#" Value="abstract member Remove : System.Collections.Generic.KeyValuePair&lt;System.ServiceModel.Dispatcher.MessageFilter, 'FilterData&gt; -&gt; bool&#xA;override this.Remove : System.Collections.Generic.KeyValuePair&lt;System.ServiceModel.Dispatcher.MessageFilter, 'FilterData&gt; -&gt; bool" Usage="messageFilterTable.Remove item" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Remove(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Collections.Generic.KeyValuePair&lt;System.ServiceModel.Dispatcher.MessageFilter,TFilterData&gt;" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="a979c-291">要从表中移除的 <see cref="T:System.Collections.Generic.KeyValuePair`2" /> &lt;Filter, <c>FilterData</c>&gt;。</span><span class="sxs-lookup"><span data-stu-id="a979c-291">The <see cref="T:System.Collections.Generic.KeyValuePair`2" /> &lt;Filter, <c>FilterData</c>&gt; to remove from the table.</span></span></param>
        <summary><span data-ttu-id="a979c-292">从筛选器表中移除指定的 filter/<paramref name="FilterData" /> 对。</span><span class="sxs-lookup"><span data-stu-id="a979c-292">Removes a specified filter/<paramref name="FilterData" /> pair from the filter table.</span></span></summary>
        <returns><span data-ttu-id="a979c-293">如果找到了 filter/<see langword="true" /> 对并将其移除，则为 <paramref name="FilterData" />；如果未找到，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a979c-293"><see langword="true" /> if the filter/<paramref name="FilterData" /> pair was found and removed; <see langword="false" /> if it was not found.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a979c-294">如果存在 `item` 的筛选键，但此筛选键与不同于 `FilterData` 的数据相关联，则此方法将无法移除筛选器并返回 `false`。</span><span class="sxs-lookup"><span data-stu-id="a979c-294">If the filter key of the `item` is present but is associated with data that differs from the `FilterData`, the method fails to remove the filter and returns `false`.</span></span>  
  
 <span data-ttu-id="a979c-295">此方法实现 <xref:System.Collections.Generic.SynchronizedReadOnlyCollection%601.System%23Collections%23Generic%23ICollection%7BT%7D%23Remove%2A>。</span><span class="sxs-lookup"><span data-stu-id="a979c-295">This method implements <xref:System.Collections.Generic.SynchronizedReadOnlyCollection%601.System%23Collections%23Generic%23ICollection%7BT%7D%23Remove%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a979c-296"><paramref name="filter" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="a979c-296"><paramref name="filter" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public bool Remove (System.ServiceModel.Dispatcher.MessageFilter filter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Remove(class System.ServiceModel.Dispatcher.MessageFilter filter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.MessageFilterTable`1.Remove(System.ServiceModel.Dispatcher.MessageFilter)" />
      <MemberSignature Language="VB.NET" Value="Public Function Remove (filter As MessageFilter) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Remove(System::ServiceModel::Dispatcher::MessageFilter ^ filter);" />
      <MemberSignature Language="F#" Value="abstract member Remove : System.ServiceModel.Dispatcher.MessageFilter -&gt; bool&#xA;override this.Remove : System.ServiceModel.Dispatcher.MessageFilter -&gt; bool" Usage="messageFilterTable.Remove filter" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IDictionary`2.Remove(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filter" Type="System.ServiceModel.Dispatcher.MessageFilter" />
      </Parameters>
      <Docs>
        <param name="filter"><span data-ttu-id="a979c-297">要移除的 <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" />。</span><span class="sxs-lookup"><span data-stu-id="a979c-297">The <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" /> to remove.</span></span></param>
        <summary><span data-ttu-id="a979c-298">从筛选器表中移除筛选器及其关联的 <paramref name="FilterData" />。</span><span class="sxs-lookup"><span data-stu-id="a979c-298">Removes a filter and its associated <paramref name="FilterData" /> from the filter table.</span></span></summary>
        <returns><span data-ttu-id="a979c-299">如果找到了筛选器并将其移除，则为 <see langword="true" />；如果未找到筛选器，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a979c-299"><see langword="true" /> if the filter was found and removed; <see langword="false" /> if it was not found.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a979c-300">此方法实现 <xref:System.Collections.Generic.SynchronizedReadOnlyCollection%601.System%23Collections%23Generic%23ICollection%7BT%7D%23Remove%2A>。</span><span class="sxs-lookup"><span data-stu-id="a979c-300">This method implements <xref:System.Collections.Generic.SynchronizedReadOnlyCollection%601.System%23Collections%23Generic%23ICollection%7BT%7D%23Remove%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a979c-301"><paramref name="filter" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="a979c-301"><paramref name="filter" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.MessageFilterTable`1.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.IEnumerable.GetEnumerator : unit -&gt; System.Collections.IEnumerator&#xA;override this.System.Collections.IEnumerable.GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="messageFilterTable.System.Collections.IEnumerable.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a979c-302">返回一个循环访问筛选器表的枚举数。</span><span class="sxs-lookup"><span data-stu-id="a979c-302">Returns an enumerator that iterates through the filter table.</span></span></summary>
        <returns><span data-ttu-id="a979c-303">可用于循环访问筛选器表的 <see cref="T:System.Collections.Generic.IEnumerator`1" />。</span><span class="sxs-lookup"><span data-stu-id="a979c-303">An <see cref="T:System.Collections.Generic.IEnumerator`1" /> that can be used to iterate through the filter table.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a979c-304">此方法实现 <xref:System.Collections.IEnumerable.GetEnumerator%2A>。</span><span class="sxs-lookup"><span data-stu-id="a979c-304">This method implements <xref:System.Collections.IEnumerable.GetEnumerator%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetValue">
      <MemberSignature Language="C#" Value="public bool TryGetValue (System.ServiceModel.Dispatcher.MessageFilter filter, out TFilterData data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TryGetValue(class System.ServiceModel.Dispatcher.MessageFilter filter, [out] !TFilterData&amp; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.MessageFilterTable`1.TryGetValue(System.ServiceModel.Dispatcher.MessageFilter,`0@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetValue (filter As MessageFilter, ByRef data As TFilterData) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool TryGetValue(System::ServiceModel::Dispatcher::MessageFilter ^ filter, [Runtime::InteropServices::Out] TFilterData % data);" />
      <MemberSignature Language="F#" Value="abstract member TryGetValue : System.ServiceModel.Dispatcher.MessageFilter * 'FilterData -&gt; bool&#xA;override this.TryGetValue : System.ServiceModel.Dispatcher.MessageFilter * 'FilterData -&gt; bool" Usage="messageFilterTable.TryGetValue (filter, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filter" Type="System.ServiceModel.Dispatcher.MessageFilter" />
        <Parameter Name="data" Type="TFilterData" RefType="out" />
      </Parameters>
      <Docs>
        <param name="filter"><span data-ttu-id="a979c-305">用作键以检索数据的 <paramref name="filter" />。</span><span class="sxs-lookup"><span data-stu-id="a979c-305">The <paramref name="filter" /> that is used as a key to retrieve the data.</span></span></param>
        <param name="data"><span data-ttu-id="a979c-306">与 <paramref name="data" /> 关联的 <paramref name="filter" />。</span><span class="sxs-lookup"><span data-stu-id="a979c-306">The <paramref name="data" /> associated with the <paramref name="filter" />.</span></span></param>
        <summary><span data-ttu-id="a979c-307">检查筛选器是否存储在筛选器表中。</span><span class="sxs-lookup"><span data-stu-id="a979c-307">Checks whether a filter is stored in the filter table.</span></span></summary>
        <returns><span data-ttu-id="a979c-308">如果筛选器表中存在具有关联数据的筛选器，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a979c-308"><see langword="true" /> if there is a filter in the filter table that has data associated with it; otherwise <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a979c-309">在检查筛选器表中是否存在某筛选器时，此方法非常有效，因为如果筛选器不存在，此方法会返回 `false`，而不会引发异常。</span><span class="sxs-lookup"><span data-stu-id="a979c-309">This method is an efficient way to check whether a filter is in the filter table because when the filter is not present, it returns `false` instead of throwing an exception.</span></span> <span data-ttu-id="a979c-310">如果您尝试从表中检索筛选器，而表中并不存在此筛选器，则会引发异常。</span><span class="sxs-lookup"><span data-stu-id="a979c-310">If you try to retrieve the filter from the table and it is not there, an exception is thrown.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Values">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;TFilterData&gt; Values { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;!TFilterData&gt; Values" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.MessageFilterTable`1.Values" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Values As ICollection(Of TFilterData)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::ICollection&lt;TFilterData&gt; ^ Values { System::Collections::Generic::ICollection&lt;TFilterData&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Values : System.Collections.Generic.ICollection&lt;'FilterData&gt;" Usage="System.ServiceModel.Dispatcher.MessageFilterTable&lt;'FilterData&gt;.Values" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.IDictionary`2.Values</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;TFilterData&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a979c-311">获取筛选器表中包含的所有 <paramref name="FilterData" /> 的集合。</span><span class="sxs-lookup"><span data-stu-id="a979c-311">Gets a collection of all the <paramref name="FilterData" /> contained in the filter table.</span></span></summary>
        <value><span data-ttu-id="a979c-312">筛选器表中包含的所有 <see cref="T:System.Collections.Generic.ICollection`1" /> 的 <paramref name="FilterData" />。</span><span class="sxs-lookup"><span data-stu-id="a979c-312">An <see cref="T:System.Collections.Generic.ICollection`1" /> of all the <paramref name="FilterData" /> contained in the filter table.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a979c-313">此属性实现 <xref:System.Collections.Generic.IDictionary%602.Values%2A>。</span><span class="sxs-lookup"><span data-stu-id="a979c-313">This property implements <xref:System.Collections.Generic.IDictionary%602.Values%2A>.</span></span> <span data-ttu-id="a979c-314">筛选器表实现的 <xref:System.Collections.Generic.IDictionary%602><Filter, `FilterData`> 将 <xref:System.ServiceModel.Dispatcher.MessageFilter> 用作该对的键并将 `FilterData` 用作该对的值。</span><span class="sxs-lookup"><span data-stu-id="a979c-314">The <xref:System.Collections.Generic.IDictionary%602><Filter, `FilterData`> that the filter table implements uses the <xref:System.ServiceModel.Dispatcher.MessageFilter> as the key and the `FilterData` as the value of the pair.</span></span>  
  
 <span data-ttu-id="a979c-315">未指定集合中返回的 `FilterData` 的顺序，但可以保证此顺序与 <xref:System.ServiceModel.Dispatcher.MessageFilterTable%601.Keys%2A> 属性所返回的集合中相应筛选器的顺序相同。</span><span class="sxs-lookup"><span data-stu-id="a979c-315">The order of the `FilterData` returned in the collection is unspecified, but it is guaranteed to be the same order as the corresponding filters in the collection returned by the <xref:System.ServiceModel.Dispatcher.MessageFilterTable%601.Keys%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
