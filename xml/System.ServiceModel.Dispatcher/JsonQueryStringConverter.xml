<Type Name="JsonQueryStringConverter" FullName="System.ServiceModel.Dispatcher.JsonQueryStringConverter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="a8e48fb293f5361c14c42157aa1d48d374c84b4a" /><Meta Name="ms.sourcegitcommit" Value="397961a0164281b579f68064c3bb66c071f374d9" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/14/2020" /><Meta Name="ms.locfileid" Value="78744450" /></Metadata><TypeSignature Language="C#" Value="public class JsonQueryStringConverter : System.ServiceModel.Dispatcher.QueryStringConverter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit JsonQueryStringConverter extends System.ServiceModel.Dispatcher.QueryStringConverter" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Dispatcher.JsonQueryStringConverter" />
  <TypeSignature Language="VB.NET" Value="Public Class JsonQueryStringConverter&#xA;Inherits QueryStringConverter" />
  <TypeSignature Language="C++ CLI" Value="public ref class JsonQueryStringConverter : System::ServiceModel::Dispatcher::QueryStringConverter" />
  <TypeSignature Language="F#" Value="type JsonQueryStringConverter = class&#xA;    inherit QueryStringConverter" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Web</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ServiceModel.Dispatcher.QueryStringConverter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="7c8b1-101">此类用于在参数值和 JavaScript 对象表示法 (JSON) 之间进行转换。</span><span class="sxs-lookup"><span data-stu-id="7c8b1-101">This class converts a parameter value to and from a JavaScript Object Notation (JSON).</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7c8b1-102">可在 URL 内的 JSON 查询字符串中指定参数。</span><span class="sxs-lookup"><span data-stu-id="7c8b1-102">Parameters can be specified in a JSON query string within a URL.</span></span> <span data-ttu-id="7c8b1-103">在使用 <xref:System.ServiceModel.Description.WebScriptEnablingBehavior> 处理来自基于浏览器的 ASP.NET AJAX 客户端的 HTTP 请求时，此类可控制如何在 JSON 查询字符串参数和服务操作的参数之间互相映射。</span><span class="sxs-lookup"><span data-stu-id="7c8b1-103">This class controls how JSON query string parameters are mapped to and from a service operation's parameters when the <xref:System.ServiceModel.Description.WebScriptEnablingBehavior> is used to process HTTP requests from browser-based ASP.NET AJAX clients.</span></span>  
  
 <span data-ttu-id="7c8b1-104">此类由 Windows Communication Foundation （WCF）类在内部使用 <xref:System.ServiceModel.Description.WebScriptEnablingBehavior> ，这些终结点配置为接受 url 查询字符串中编码的参数的 HTTP GET/POST 请求。</span><span class="sxs-lookup"><span data-stu-id="7c8b1-104">This class is used internally by the Windows Communication Foundation (WCF)<xref:System.ServiceModel.Description.WebScriptEnablingBehavior> class for endpoints configured to accept HTTP GET/POST requests with parameters encoded in the URI query string.</span></span> <span data-ttu-id="7c8b1-105">此类用于在 CLR 对象和 URI 查询字符串形式的各个操作请求参数值之间进行转换。</span><span class="sxs-lookup"><span data-stu-id="7c8b1-105">This class is used to convert between CLR objects and the individual operation request parameter values in the URI query string.</span></span> <span data-ttu-id="7c8b1-106">与其基类型不同，此类同时支持基元类型和复杂类型的值。</span><span class="sxs-lookup"><span data-stu-id="7c8b1-106">Unlike its base type, this class supports values of both primitive and complex types.</span></span>  
  
 <span data-ttu-id="7c8b1-107"><xref:System.ServiceModel.Dispatcher.JsonQueryStringConverter> 派生自 <xref:System.ServiceModel.Dispatcher.QueryStringConverter> 且支持以下类型：</span><span class="sxs-lookup"><span data-stu-id="7c8b1-107"><xref:System.ServiceModel.Dispatcher.JsonQueryStringConverter> derives from <xref:System.ServiceModel.Dispatcher.QueryStringConverter> and supports the following types:</span></span>  
  
-   <xref:System.Byte>  
  
-   <xref:System.SByte>  
  
-   <xref:System.Int16>  
  
-   <xref:System.Int32>  
  
-   <xref:System.Int64>  
  
-   <xref:System.UInt16>  
  
-   <xref:System.UInt32>  
  
-   <xref:System.UInt64>  
  
-   <xref:System.Single>  
  
-   <xref:System.Double>  
  
-   <xref:System.Char>  
  
-   <xref:System.Decimal>  
  
-   <xref:System.Boolean>  
  
-   <xref:System.String>  
  
-   <xref:System.DateTime>  
  
-   <xref:System.TimeSpan>  
  
-   <xref:System.Guid>  
  
-   <span data-ttu-id="7c8b1-108">一个类型为 <xref:System.Array> 的 <xref:System.Byte></span><span class="sxs-lookup"><span data-stu-id="7c8b1-108">An <xref:System.Array> of type <xref:System.Byte></span></span>  
  
-   <xref:System.Uri>  
  
-   <xref:System.Object>  
  
 <span data-ttu-id="7c8b1-109">与其基类型不同，此转换器可以处理与数据协定模型相符的任何类型。</span><span class="sxs-lookup"><span data-stu-id="7c8b1-109">Unlike its base type, this converter can handle any type adhering to the Data Contract model.</span></span> <span data-ttu-id="7c8b1-110">该转换器可重写 <xref:System.ServiceModel.Dispatcher.QueryStringConverter.ConvertValueToString%28System.Object%2CSystem.Type%29>，以便使用默认 <xref:System.Runtime.Serialization.Json.DataContractJsonSerializer> 将每个参数序列化为 JSON，并将 JSON XML 编写器配置为使用 UTF-8 编码。</span><span class="sxs-lookup"><span data-stu-id="7c8b1-110">The converter overrides <xref:System.ServiceModel.Dispatcher.QueryStringConverter.ConvertValueToString%28System.Object%2CSystem.Type%29> so that each parameter is serialized to JSON using the default <xref:System.Runtime.Serialization.Json.DataContractJsonSerializer> and a JSON XML Writer configured to use the UTF-8 encoding.</span></span> <span data-ttu-id="7c8b1-111">`null`参数返回为 `null` 。</span><span class="sxs-lookup"><span data-stu-id="7c8b1-111">`null` parameters are returned as `null`.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public JsonQueryStringConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.JsonQueryStringConverter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; JsonQueryStringConverter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7c8b1-112">初始化 <see cref="T:System.ServiceModel.Dispatcher.JsonQueryStringConverter" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="7c8b1-112">Initializes a new instance of the <see cref="T:System.ServiceModel.Dispatcher.JsonQueryStringConverter" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvert">
      <MemberSignature Language="C#" Value="public override bool CanConvert (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvert(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.JsonQueryStringConverter.CanConvert(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanConvert (type As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanConvert(Type ^ type);" />
      <MemberSignature Language="F#" Value="override this.CanConvert : Type -&gt; bool" Usage="jsonQueryStringConverter.CanConvert type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="7c8b1-113">要验证的 <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="7c8b1-113">The <see cref="T:System.Type" /> to verify.</span></span></param>
        <summary><span data-ttu-id="7c8b1-114">获取一个值，该值指示指定的公共语言运行库 (CLR) 类型是否为可序列化与反序列化的已知类型。</span><span class="sxs-lookup"><span data-stu-id="7c8b1-114">Gets a value that indicates whether a Common Language Runtime (CLR) type specified is a known type that can be serialized and deserialized.</span></span></summary>
        <returns><span data-ttu-id="7c8b1-115">如果可以序列化该类型，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="7c8b1-115"><see langword="true" /> if the type can be serialized; otherwise <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7c8b1-116">用于检查能否在 JSON 查询字符串中使用 CLR 类型。</span><span class="sxs-lookup"><span data-stu-id="7c8b1-116">This checks whether a CLR type can be used in a JSON query string.</span></span> <span data-ttu-id="7c8b1-117">可在此类字符串中使用的 CLR 类型正是那些 <xref:System.Runtime.Serialization.DataContractSerializer> 所支持的类型。</span><span class="sxs-lookup"><span data-stu-id="7c8b1-117">The CLR types that can be used in such a string are just those that are supported by <xref:System.Runtime.Serialization.DataContractSerializer>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="7c8b1-118"><paramref name="type" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="7c8b1-118">The <paramref name="type" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ConvertStringToValue">
      <MemberSignature Language="C#" Value="public override object ConvertStringToValue (string parameter, Type parameterType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertStringToValue(string parameter, class System.Type parameterType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.JsonQueryStringConverter.ConvertStringToValue(System.String,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ConvertStringToValue (parameter As String, parameterType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ConvertStringToValue(System::String ^ parameter, Type ^ parameterType);" />
      <MemberSignature Language="F#" Value="override this.ConvertStringToValue : string * Type -&gt; obj" Usage="jsonQueryStringConverter.ConvertStringToValue (parameter, parameterType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameter" Type="System.String" />
        <Parameter Name="parameterType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="parameter"><span data-ttu-id="7c8b1-119">参数值的 JSON 形式。</span><span class="sxs-lookup"><span data-stu-id="7c8b1-119">The JSON form of the parameter value.</span></span></param>
        <param name="parameterType"><span data-ttu-id="7c8b1-120">要将参数反序列化的目标 <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="7c8b1-120">The <see cref="T:System.Type" /> to deserialize the parameter to.</span></span></param>
        <summary><span data-ttu-id="7c8b1-121">将 JavaScript 对象表示法 (JSON) 查询字符串参数反序列化为指定的公共语言运行时 (CLR) 类型。</span><span class="sxs-lookup"><span data-stu-id="7c8b1-121">Deserializes a JavaScript Object Notation (JSON) query string parameter to a specified Common Language Runtime (CLR) type.</span></span></summary>
        <returns><span data-ttu-id="7c8b1-122">CLR 类型的一个实例，参数值已转换为该类型。</span><span class="sxs-lookup"><span data-stu-id="7c8b1-122">An instance of the CLR type to which the parameter value was converted.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertValueToString">
      <MemberSignature Language="C#" Value="public override string ConvertValueToString (object parameter, Type parameterType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ConvertValueToString(object parameter, class System.Type parameterType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.JsonQueryStringConverter.ConvertValueToString(System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ConvertValueToString (parameter As Object, parameterType As Type) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ConvertValueToString(System::Object ^ parameter, Type ^ parameterType);" />
      <MemberSignature Language="F#" Value="override this.ConvertValueToString : obj * Type -&gt; string" Usage="jsonQueryStringConverter.ConvertValueToString (parameter, parameterType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameter" Type="System.Object" />
        <Parameter Name="parameterType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="parameter"><span data-ttu-id="7c8b1-123">要转换的参数值。</span><span class="sxs-lookup"><span data-stu-id="7c8b1-123">The parameter value to convert.</span></span></param>
        <param name="parameterType"><span data-ttu-id="7c8b1-124">要序列化的参数的 <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="7c8b1-124">The <see cref="T:System.Type" /> of the parameter to serialize.</span></span></param>
        <summary><span data-ttu-id="7c8b1-125">将公共语言运行时 (CLR) 参数类型序列化为 JavaScript 对象表示法 (JSON) 表示形式。</span><span class="sxs-lookup"><span data-stu-id="7c8b1-125">Serializes a Common Language Runtime (CLR) parameter type to a JavaScript Object Notation (JSON) representation.</span></span></summary>
        <returns><span data-ttu-id="7c8b1-126">CLR 类型的 JSON 查询字符串参数序列化</span><span class="sxs-lookup"><span data-stu-id="7c8b1-126">The JSON query string parameter serialization of the CLR type.</span></span> <span data-ttu-id="7c8b1-127">如果参数为 <see langword="null" />，则返回 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="7c8b1-127"><see langword="null" /> is returned if the parameter is <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7c8b1-128">该转换器可重写 <xref:System.ServiceModel.Dispatcher.QueryStringConverter.ConvertValueToString%28System.Object%2CSystem.Type%29>，以便使用默认 <xref:System.Runtime.Serialization.Json.DataContractJsonSerializer> 将每个参数序列化为 JSON，并将 JSON XML 编写器配置为使用 UTF-8 编码。</span><span class="sxs-lookup"><span data-stu-id="7c8b1-128">The converter overrides <xref:System.ServiceModel.Dispatcher.QueryStringConverter.ConvertValueToString%28System.Object%2CSystem.Type%29> so that each parameter is serialized to JSON using the default <xref:System.Runtime.Serialization.Json.DataContractJsonSerializer> and a JSON XML Writer configured to use the UTF-8 encoding.</span></span> <span data-ttu-id="7c8b1-129">与其基类型不同，此转换器可以处理与数据协定模型相符的任何类型。</span><span class="sxs-lookup"><span data-stu-id="7c8b1-129">Unlike its base type, this converter can handle any type adhering to the Data Contract model.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7c8b1-130">请考虑下面的操作。</span><span class="sxs-lookup"><span data-stu-id="7c8b1-130">Consider the following operation.</span></span>  
  
```  
[WebGet]  
[OperationContract] public int GetOptionQuote(string ticker, DateTime dte, Option opt);  
```  
  
 <span data-ttu-id="7c8b1-131">此操作可生成一个 URL，该 URL 为以下内容的 URL 编码版本。</span><span class="sxs-lookup"><span data-stu-id="7c8b1-131">This operation produces a URL that is a URL-encoded version of the following.</span></span>  
  
```  
http://localhost/quote.svc/GetOptionQuote?ticker="MSFT"&dte="\/Date(50067823)\/"&opt={"type":"call","strikePrice":"35"}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
