<Type Name="ChannelDispatcherBase" FullName="System.ServiceModel.Dispatcher.ChannelDispatcherBase">
  <Metadata><Meta Name="ms.openlocfilehash" Value="526b2253f90c9b44f6c5b8e43a37ef9bc30df563" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86744703" /></Metadata><TypeSignature Language="C#" Value="public abstract class ChannelDispatcherBase : System.ServiceModel.Channels.CommunicationObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ChannelDispatcherBase extends System.ServiceModel.Channels.CommunicationObject" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Dispatcher.ChannelDispatcherBase" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ChannelDispatcherBase&#xA;Inherits CommunicationObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class ChannelDispatcherBase abstract : System::ServiceModel::Channels::CommunicationObject" />
  <TypeSignature Language="F#" Value="type ChannelDispatcherBase = class&#xA;    inherit CommunicationObject" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ServiceModel.Channels.CommunicationObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="f9c25-101">接受通道并可将通道与服务相关联的通道调度程序的抽象基类。</span><span class="sxs-lookup"><span data-stu-id="f9c25-101">Abstract base class for the channel dispatcher that accepts channels and associates them with a service.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9c25-102">这由想要将 Windows Communication Foundation (WCF) 编程模型，但替换系统提供的运行时的开发人员使用。</span><span class="sxs-lookup"><span data-stu-id="f9c25-102">This is used by developers who want to keep the Windows Communication Foundation (WCF) programming model but replace the system-provided runtime.</span></span> <span data-ttu-id="f9c25-103">此类应用程序会将消息从通道中拉取出来，然后直接使用用户定义的调度程序来处理它们。</span><span class="sxs-lookup"><span data-stu-id="f9c25-103">Such applications will pull messages out of channels and handle them directly with user-defined dispatchers.</span></span> <span data-ttu-id="f9c25-104">若要使用 <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase>，则请创建从它派生的类，扩展 <xref:System.ServiceModel.ServiceHost> 并重写 <xref:System.ServiceModel.ServiceHostBase.InitializeRuntime%2A>，将从 <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase> 派生的类的实例添加到 <xref:System.ServiceModel.ServiceHostBase.ChannelDispatchers%2A>。</span><span class="sxs-lookup"><span data-stu-id="f9c25-104">To use <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase> , create a class derived from it, extend <xref:System.ServiceModel.ServiceHost> and override <xref:System.ServiceModel.ServiceHostBase.InitializeRuntime%2A>, adding instances of your class derived from <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase> to <xref:System.ServiceModel.ServiceHostBase.ChannelDispatchers%2A>.</span></span>  
  
 <span data-ttu-id="f9c25-105">与 <xref:System.ServiceModel.Channels.IChannelListener> 对象关联的 <xref:System.ServiceModel.ServiceHost> 和 <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase> 可以分别通过 <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Listener%2A> 和 <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Host%2A> 来检查和修改。</span><span class="sxs-lookup"><span data-stu-id="f9c25-105">The <xref:System.ServiceModel.Channels.IChannelListener> and the <xref:System.ServiceModel.ServiceHost>, associated with the <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase> object are available for inspection or modification through the <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Listener%2A> and <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Host%2A> respectively.</span></span>  
  
 <span data-ttu-id="f9c25-106">当在 <xref:System.ServiceModel.ServiceHost> 集合中添加或移除 <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Attach%28System.ServiceModel.ServiceHostBase%29> 项时，<xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Detach%28System.ServiceModel.ServiceHostBase%29> 调用 <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase> 或 <xref:System.ServiceModel.ServiceHostBase.ChannelDispatchers%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="f9c25-106"><xref:System.ServiceModel.ServiceHost> calls the <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Attach%28System.ServiceModel.ServiceHostBase%29> or <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Detach%28System.ServiceModel.ServiceHostBase%29> methods when adding or removing a <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase> item from its <xref:System.ServiceModel.ServiceHostBase.ChannelDispatchers%2A> collection.</span></span>  
  
 <span data-ttu-id="f9c25-107"><xref:System.ServiceModel.ServiceHost> 在 <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase.CloseInput%2A> 关闭 InstanceContexts 的过程中调用，然后关闭。</span><span class="sxs-lookup"><span data-stu-id="f9c25-107"><xref:System.ServiceModel.ServiceHost> calls the <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase.CloseInput%2A> during shutdown before closing InstanceContexts.</span></span> <span data-ttu-id="f9c25-108">Windows Communication Foundation (WCF) 使用此调用来关闭数据报通道，并等待所有消息进入 InstanceContext。</span><span class="sxs-lookup"><span data-stu-id="f9c25-108">Windows Communication Foundation (WCF) uses this call to close datagram channels and wait for all messages to get to an InstanceContext.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ChannelDispatcherBase ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.ChannelDispatcherBase.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ChannelDispatcherBase();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f9c25-109">初始化 <see cref="T:System.ServiceModel.Dispatcher.ChannelDispatcherBase" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="f9c25-109">Initializes a new instance of the <see cref="T:System.ServiceModel.Dispatcher.ChannelDispatcherBase" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Attach">
      <MemberSignature Language="C#" Value="protected virtual void Attach (System.ServiceModel.ServiceHostBase host);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Attach(class System.ServiceModel.ServiceHostBase host) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Attach(System.ServiceModel.ServiceHostBase)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Attach (host As ServiceHostBase)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Attach(System::ServiceModel::ServiceHostBase ^ host);" />
      <MemberSignature Language="F#" Value="abstract member Attach : System.ServiceModel.ServiceHostBase -&gt; unit&#xA;override this.Attach : System.ServiceModel.ServiceHostBase -&gt; unit" Usage="channelDispatcherBase.Attach host" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="host" Type="System.ServiceModel.ServiceHostBase" />
      </Parameters>
      <Docs>
        <param name="host"><span data-ttu-id="f9c25-110">该服务的 <see cref="T:System.ServiceModel.ServiceHostBase" />。</span><span class="sxs-lookup"><span data-stu-id="f9c25-110">The <see cref="T:System.ServiceModel.ServiceHostBase" /> for the service.</span></span></param>
        <summary><span data-ttu-id="f9c25-111">在派生类中重写时，将通道调度程序附加到特定主机。</span><span class="sxs-lookup"><span data-stu-id="f9c25-111">When overridden in a derived class, attaches the channel dispatcher to a specific host.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9c25-112">只有当 <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> 的实例处于 <xref:System.ServiceModel.CommunicationState.Created> 状态时才可以设置此方法，因为该状态是唯一一个可变且不被释放的状态。</span><span class="sxs-lookup"><span data-stu-id="f9c25-112">This method can only be set when the instance of the <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> is in the <xref:System.ServiceModel.CommunicationState.Created> state, as this is the only state that is both mutable and not disposed.</span></span>  
  
 <span data-ttu-id="f9c25-113">当将 <xref:System.ServiceModel.ServiceHost> 添加到 <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase> 集合时，<xref:System.ServiceModel.ServiceHostBase.ChannelDispatchers%2A> 会调用此方法。</span><span class="sxs-lookup"><span data-stu-id="f9c25-113">A <xref:System.ServiceModel.ServiceHost> calls this method when the <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase> is added to its <xref:System.ServiceModel.ServiceHostBase.ChannelDispatchers%2A> collection.</span></span>  <span data-ttu-id="f9c25-114">这使 <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase> 有机会挂钩事件并检查 <xref:System.ServiceModel.ServiceHost>，以及提供应从 <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Host%2A> 属性返回的值。</span><span class="sxs-lookup"><span data-stu-id="f9c25-114">This gives the <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase> a chance to hook events and inspect the <xref:System.ServiceModel.ServiceHost>, and provides the value that should be returned from the <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Host%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="f9c25-115"><paramref name="host" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="f9c25-115"><paramref name="host" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="f9c25-116">通信对象处于 <see cref="F:System.ServiceModel.CommunicationState.Opening" /> 或 <see cref="F:System.ServiceModel.CommunicationState.Opened" /> 状态，或者主机已设置。</span><span class="sxs-lookup"><span data-stu-id="f9c25-116">The communication object is in an <see cref="F:System.ServiceModel.CommunicationState.Opening" /> or <see cref="F:System.ServiceModel.CommunicationState.Opened" /> state or the host is already set.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="f9c25-117">通信对象处于 <see cref="F:System.ServiceModel.CommunicationState.Closing" /> 或 <see cref="F:System.ServiceModel.CommunicationState.Closed" /> 状态。</span><span class="sxs-lookup"><span data-stu-id="f9c25-117">The communication object is in a <see cref="F:System.ServiceModel.CommunicationState.Closing" /> or <see cref="F:System.ServiceModel.CommunicationState.Closed" /> state.</span></span></exception>
        <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException"><span data-ttu-id="f9c25-118">通信对象处于 <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> 状态。</span><span class="sxs-lookup"><span data-stu-id="f9c25-118">The communication object is in a <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CloseInput">
      <MemberSignature Language="C#" Value="public virtual void CloseInput ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CloseInput() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.ChannelDispatcherBase.CloseInput" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub CloseInput ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CloseInput();" />
      <MemberSignature Language="F#" Value="abstract member CloseInput : unit -&gt; unit&#xA;override this.CloseInput : unit -&gt; unit" Usage="channelDispatcherBase.CloseInput " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f9c25-119">在派生类中重写时，移除与通道调度程序关联的终结点调度程序。</span><span class="sxs-lookup"><span data-stu-id="f9c25-119">When overridden in a derived class, removes the endpoint dispatchers associated with the channel dispatcher.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9c25-120"><xref:System.ServiceModel.ServiceHost> 在关闭过程中调用此方法，以使调度程序有机会排出消息。</span><span class="sxs-lookup"><span data-stu-id="f9c25-120"><xref:System.ServiceModel.ServiceHost> calls this method during shutdown to give the dispatcher a chance to drain messages.</span></span> <span data-ttu-id="f9c25-121"><xref:System.ServiceModel.Dispatcher.ChannelDispatcher> 使用此调用来关闭数据报通道。</span><span class="sxs-lookup"><span data-stu-id="f9c25-121"><xref:System.ServiceModel.Dispatcher.ChannelDispatcher> uses this call to close datagram channels.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Detach">
      <MemberSignature Language="C#" Value="protected virtual void Detach (System.ServiceModel.ServiceHostBase host);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Detach(class System.ServiceModel.ServiceHostBase host) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Detach(System.ServiceModel.ServiceHostBase)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Detach (host As ServiceHostBase)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Detach(System::ServiceModel::ServiceHostBase ^ host);" />
      <MemberSignature Language="F#" Value="abstract member Detach : System.ServiceModel.ServiceHostBase -&gt; unit&#xA;override this.Detach : System.ServiceModel.ServiceHostBase -&gt; unit" Usage="channelDispatcherBase.Detach host" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="host" Type="System.ServiceModel.ServiceHostBase" />
      </Parameters>
      <Docs>
        <param name="host"><span data-ttu-id="f9c25-122"><see cref="T:System.ServiceModel.ServiceHostBase" />。</span><span class="sxs-lookup"><span data-stu-id="f9c25-122">The <see cref="T:System.ServiceModel.ServiceHostBase" />.</span></span></param>
        <summary><span data-ttu-id="f9c25-123">在派生类中重写时，将通道调度程序与特定主机分离。</span><span class="sxs-lookup"><span data-stu-id="f9c25-123">When overridden in a derived class, detaches the channel dispatcher from a specific host.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9c25-124">只有当 <xref:System.ServiceModel.ServiceHostBase> 的实例处于 <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> 状态时才可以分离 <xref:System.ServiceModel.CommunicationState.Created>，因为该状态是唯一一个可变且不被释放的状态。</span><span class="sxs-lookup"><span data-stu-id="f9c25-124">The <xref:System.ServiceModel.ServiceHostBase> can only be detached when the instance of the <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> is in the <xref:System.ServiceModel.CommunicationState.Created> state, as this is the only state that is both mutable and not disposed.</span></span>  
  
 <span data-ttu-id="f9c25-125">应将与通道调度程序关联的 <xref:System.ServiceModel.ServiceHostBase> 设置为 `null`。</span><span class="sxs-lookup"><span data-stu-id="f9c25-125">Should set the <xref:System.ServiceModel.ServiceHostBase> associated with the channel dispatcher to `null`.</span></span>  
  
 <span data-ttu-id="f9c25-126">当从 <xref:System.ServiceModel.ServiceHost> 集合中删除 <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase> 时，<xref:System.ServiceModel.ServiceHostBase.ChannelDispatchers%2A> 会调用此方法。</span><span class="sxs-lookup"><span data-stu-id="f9c25-126"><xref:System.ServiceModel.ServiceHost> calls this method when the <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase> is removed from its <xref:System.ServiceModel.ServiceHostBase.ChannelDispatchers%2A> collection.</span></span> <span data-ttu-id="f9c25-127">这使 <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase> 有机会解除挂钩事件并检查 <xref:System.ServiceModel.ServiceHost>。</span><span class="sxs-lookup"><span data-stu-id="f9c25-127">This gives the <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase> a chance to unhook events and inspect the <xref:System.ServiceModel.ServiceHost>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="f9c25-128"><paramref name="host" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="f9c25-128"><paramref name="host" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="f9c25-129">通信对象处于 <see cref="F:System.ServiceModel.CommunicationState.Opening" /> 或 <see cref="F:System.ServiceModel.CommunicationState.Opened" /> 状态，或者主机已设置。</span><span class="sxs-lookup"><span data-stu-id="f9c25-129">The communication object is in an <see cref="F:System.ServiceModel.CommunicationState.Opening" /> or <see cref="F:System.ServiceModel.CommunicationState.Opened" /> state or the host is already set.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="f9c25-130">通信对象处于 <see cref="F:System.ServiceModel.CommunicationState.Closing" /> 或 <see cref="F:System.ServiceModel.CommunicationState.Closed" /> 状态。</span><span class="sxs-lookup"><span data-stu-id="f9c25-130">The communication object is in a <see cref="F:System.ServiceModel.CommunicationState.Closing" /> or <see cref="F:System.ServiceModel.CommunicationState.Closed" /> state.</span></span></exception>
        <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException"><span data-ttu-id="f9c25-131">通信对象处于 <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> 状态。</span><span class="sxs-lookup"><span data-stu-id="f9c25-131">The communication object is in a <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Host">
      <MemberSignature Language="C#" Value="public abstract System.ServiceModel.ServiceHostBase Host { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.ServiceHostBase Host" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Host" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Host As ServiceHostBase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::ServiceModel::ServiceHostBase ^ Host { System::ServiceModel::ServiceHostBase ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Host : System.ServiceModel.ServiceHostBase" Usage="System.ServiceModel.Dispatcher.ChannelDispatcherBase.Host" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.ServiceHostBase</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f9c25-132">在派生类中重写时，获取与通道调度程序关联的服务主机。</span><span class="sxs-lookup"><span data-stu-id="f9c25-132">When overridden in a derived class, gets the service host associated with the channel dispatcher.</span></span></summary>
        <value><span data-ttu-id="f9c25-133">与调度程序关联的服务的 <see cref="T:System.ServiceModel.ServiceHostBase" />。</span><span class="sxs-lookup"><span data-stu-id="f9c25-133">The <see cref="T:System.ServiceModel.ServiceHostBase" /> for the service associated with the dispatcher.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9c25-134">每个 <xref:System.ServiceModel.ServiceHost> 对象都可以拥有多个 <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> 对象，这多个对象每个都可与该服务的不同 <xref:System.ServiceModel.Channels.IChannelListener> 相关联。</span><span class="sxs-lookup"><span data-stu-id="f9c25-134">Each <xref:System.ServiceModel.ServiceHost> object can have many <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> objects, each associated with a different <xref:System.ServiceModel.Channels.IChannelListener> for that service.</span></span> <span data-ttu-id="f9c25-135">该主机在 <xref:System.ServiceModel.ServiceHostBase.ChannelDispatchers%2A> 集合中保留有这些 <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase> 对象的列表。</span><span class="sxs-lookup"><span data-stu-id="f9c25-135">The host keeps a list of these <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase> objects in the <xref:System.ServiceModel.ServiceHostBase.ChannelDispatchers%2A> collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Listener">
      <MemberSignature Language="C#" Value="public abstract System.ServiceModel.Channels.IChannelListener Listener { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Channels.IChannelListener Listener" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Listener" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Listener As IChannelListener" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::ServiceModel::Channels::IChannelListener ^ Listener { System::ServiceModel::Channels::IChannelListener ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Listener : System.ServiceModel.Channels.IChannelListener" Usage="System.ServiceModel.Dispatcher.ChannelDispatcherBase.Listener" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.IChannelListener</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f9c25-136">在派生类中重写时，获取与通道调度程序关联的通道侦听程序。</span><span class="sxs-lookup"><span data-stu-id="f9c25-136">When overridden in a derived class, gets the channel listener associated with the channel dispatcher.</span></span></summary>
        <value><span data-ttu-id="f9c25-137">与通道调度程序关联的 <see cref="T:System.ServiceModel.Channels.IChannelListener" />。</span><span class="sxs-lookup"><span data-stu-id="f9c25-137">The <see cref="T:System.ServiceModel.Channels.IChannelListener" /> associated with the channel dispatcher.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9c25-138"><xref:System.ServiceModel.Dispatcher.ChannelDispatcher> 与此 <xref:System.ServiceModel.Channels.IChannelListener> 正在调度其通道和消息的 <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase> 相关联。</span><span class="sxs-lookup"><span data-stu-id="f9c25-138">A <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> associates an <xref:System.ServiceModel.Channels.IChannelListener> whose channels and messages this <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase> is dispatching.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
