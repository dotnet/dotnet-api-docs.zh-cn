<Type Name="IMessageFilterTable&lt;TFilterData&gt;" FullName="System.ServiceModel.Dispatcher.IMessageFilterTable&lt;TFilterData&gt;">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e9338c8cef7f73e765a2eb98b095991c54809058" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89706210" /></Metadata><TypeSignature Language="C#" Value="public interface IMessageFilterTable&lt;TFilterData&gt; : System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;System.ServiceModel.Dispatcher.MessageFilter,TFilterData&gt;&gt;, System.Collections.Generic.IDictionary&lt;System.ServiceModel.Dispatcher.MessageFilter,TFilterData&gt;, System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.ServiceModel.Dispatcher.MessageFilter,TFilterData&gt;&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IMessageFilterTable`1&lt;TFilterData&gt; implements class System.Collections.Generic.ICollection`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;class System.ServiceModel.Dispatcher.MessageFilter, !TFilterData&gt;&gt;, class System.Collections.Generic.IDictionary`2&lt;class System.ServiceModel.Dispatcher.MessageFilter, !TFilterData&gt;, class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;class System.ServiceModel.Dispatcher.MessageFilter, !TFilterData&gt;&gt;, class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
  <TypeSignature Language="VB.NET" Value="Public Interface IMessageFilterTable(Of TFilterData)&#xA;Implements ICollection(Of KeyValuePair(Of MessageFilter, TFilterData)), IDictionary(Of MessageFilter, TFilterData), IEnumerable(Of KeyValuePair(Of MessageFilter, TFilterData))" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TFilterData&gt;&#xA;public interface class IMessageFilterTable : System::Collections::Generic::ICollection&lt;System::Collections::Generic::KeyValuePair&lt;System::ServiceModel::Dispatcher::MessageFilter ^, TFilterData&gt;&gt;, System::Collections::Generic::IDictionary&lt;System::ServiceModel::Dispatcher::MessageFilter ^, TFilterData&gt;, System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;System::ServiceModel::Dispatcher::MessageFilter ^, TFilterData&gt;&gt;" />
  <TypeSignature Language="F#" Value="type IMessageFilterTable&lt;'FilterData&gt; = interface&#xA;    interface IDictionary&lt;MessageFilter, 'FilterData&gt;&#xA;    interface ICollection&lt;KeyValuePair&lt;MessageFilter, 'FilterData&gt;&gt;&#xA;    interface seq&lt;KeyValuePair&lt;MessageFilter, 'FilterData&gt;&gt;&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TFilterData" />
  </TypeParameters>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;System.ServiceModel.Dispatcher.MessageFilter,TFilterData&gt;&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IDictionary&lt;System.ServiceModel.Dispatcher.MessageFilter,TFilterData&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.ServiceModel.Dispatcher.MessageFilter,TFilterData&gt;&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="TFilterData"><span data-ttu-id="48dfa-101">与表中每个筛选器关联的数据的类型。</span><span class="sxs-lookup"><span data-stu-id="48dfa-101">The type of data associated with each filter in the table.</span></span></typeparam>
    <summary><span data-ttu-id="48dfa-102">定义协定的 <see langword="interface" />，筛选器表必须实现它，从而使用从一个或多个筛选器派生的查询条件来检查消息。</span><span class="sxs-lookup"><span data-stu-id="48dfa-102">An <see langword="interface" /> that defines the contract that a filter table must implement to inspect messages with query criteria derived from one or more filters.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="48dfa-103">筛选器表是筛选器引擎的核心组件。</span><span class="sxs-lookup"><span data-stu-id="48dfa-103">The filter table is a core component of the filter engine.</span></span> <span data-ttu-id="48dfa-104">Windows Communication Foundation (WCF) 中筛选器引擎的主要用途是通过查找与消息匹配的所有筛选器，将应用程序逻辑与消息匹配。</span><span class="sxs-lookup"><span data-stu-id="48dfa-104">The primary use of the filter engine in Windows Communication Foundation (WCF) is to match application logic to messages by finding all the filters that match a message.</span></span>  
  
 <span data-ttu-id="48dfa-105">使用筛选器表可以将多个筛选器与单个消息相匹配，这比将它们分别进行匹配效率更高。</span><span class="sxs-lookup"><span data-stu-id="48dfa-105">A filter table allows multiple filters to be matched against a single message more efficiently than they can be matched separately.</span></span> <span data-ttu-id="48dfa-106">筛选器表将筛选器数据与筛选器相关联。</span><span class="sxs-lookup"><span data-stu-id="48dfa-106">A filter table associates filter data with filters.</span></span> <span data-ttu-id="48dfa-107">该表是键值对，其中键是 <xref:System.ServiceModel.Dispatcher.MessageFilter>，值是关联的筛选器数据。</span><span class="sxs-lookup"><span data-stu-id="48dfa-107">The table is a collection of key-value pairs, where the key is the <xref:System.ServiceModel.Dispatcher.MessageFilter>, and the value is the associated filter data.</span></span> <span data-ttu-id="48dfa-108">筛选器数据可以是类型为通用参数中指定的类型的任何数据，并且可用于指定当消息与表中的筛选器相匹配时应采取的操作。</span><span class="sxs-lookup"><span data-stu-id="48dfa-108">Filter data can be any data of the type specified in the generic parameter and can be used to specify what actions to take if a message is matched by a filter in the table.</span></span>  
  
 <span data-ttu-id="48dfa-109">可以使用 <xref:System.Collections.Generic.IDictionary%602> 继承的 <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601> 功能来访问筛选器表条目。</span><span class="sxs-lookup"><span data-stu-id="48dfa-109">Filter table entries can be accessed using the <xref:System.Collections.Generic.IDictionary%602> functionality that <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601> inherits.</span></span>  
  
 <span data-ttu-id="48dfa-110">注意，筛选器实例只能添加到给定的 <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601> 一次。</span><span class="sxs-lookup"><span data-stu-id="48dfa-110">Note that a filter instance can only be added to a given <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601> once.</span></span> <span data-ttu-id="48dfa-111">若要将此筛选器的多个实例添加到同一个筛选器表，请使用筛选器构造函数来创建其他实例。</span><span class="sxs-lookup"><span data-stu-id="48dfa-111">To add multiple instances of this filter to the same filter table, use a filter constructor to create additional instances.</span></span>  
  
 <span data-ttu-id="48dfa-112">当消息满足筛选器的查询条件时，筛选器与消息相匹配。</span><span class="sxs-lookup"><span data-stu-id="48dfa-112">A filter matches a message when the message satisfies the query criteria of the filter.</span></span> <span data-ttu-id="48dfa-113">有四种重载匹配方法。</span><span class="sxs-lookup"><span data-stu-id="48dfa-113">There are four overloaded matching methods.</span></span> <span data-ttu-id="48dfa-114">返回的数据是筛选器数据或 <xref:System.ServiceModel.Dispatcher.MessageFilter> 对象自身。</span><span class="sxs-lookup"><span data-stu-id="48dfa-114">The data returned is either the filter data or the <xref:System.ServiceModel.Dispatcher.MessageFilter> objects themselves.</span></span> <span data-ttu-id="48dfa-115">无论是允许多个匹配还是仅一个匹配，都返回此数据。</span><span class="sxs-lookup"><span data-stu-id="48dfa-115">This data is returned whether multiple matches are allowed or only a single match.</span></span> <span data-ttu-id="48dfa-116">下表显示每个重载的此信息。</span><span class="sxs-lookup"><span data-stu-id="48dfa-116">The following table shows this information for each overload.</span></span>  
  
|<span data-ttu-id="48dfa-117">方法名</span><span class="sxs-lookup"><span data-stu-id="48dfa-117">Method Name</span></span>|<span data-ttu-id="48dfa-118">匹配</span><span class="sxs-lookup"><span data-stu-id="48dfa-118">Matches</span></span>|<span data-ttu-id="48dfa-119">返回的数据</span><span class="sxs-lookup"><span data-stu-id="48dfa-119">Data Returned</span></span>|  
|-----------------|-------------|-------------------|  
|<xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601.GetMatchingValue%2A>|<span data-ttu-id="48dfa-120">Single</span><span class="sxs-lookup"><span data-stu-id="48dfa-120">Single</span></span>|`FilterData`|  
|<xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601.GetMatchingFilter%2A>|<span data-ttu-id="48dfa-121">Single</span><span class="sxs-lookup"><span data-stu-id="48dfa-121">Single</span></span>|<xref:System.ServiceModel.Dispatcher.MessageFilter>|  
|<xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601.GetMatchingValues%2A>|<span data-ttu-id="48dfa-122">多种</span><span class="sxs-lookup"><span data-stu-id="48dfa-122">Multiple</span></span>|`FilterData`|  
|<xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601.GetMatchingFilters%2A>|<span data-ttu-id="48dfa-123">多种</span><span class="sxs-lookup"><span data-stu-id="48dfa-123">Multiple</span></span>|<span data-ttu-id="48dfa-124"><xref:System.ServiceModel.Dispatcher.MessageFilter>对象</span><span class="sxs-lookup"><span data-stu-id="48dfa-124"><xref:System.ServiceModel.Dispatcher.MessageFilter> objects</span></span>|  
  
 <span data-ttu-id="48dfa-125">每个方法包含两个重载。</span><span class="sxs-lookup"><span data-stu-id="48dfa-125">Each method contains two overloads.</span></span> <span data-ttu-id="48dfa-126">两个重载的区别是，一个重载使用 <xref:System.ServiceModel.Channels.Message> 参数，但不允许其检查正文的内容；另一个重载使用 <xref:System.ServiceModel.Channels.MessageBuffer> 参数，可以检查消息的任何部分。</span><span class="sxs-lookup"><span data-stu-id="48dfa-126">The difference between the two overloads is that one takes a <xref:System.ServiceModel.Channels.Message> parameter and is not permitted to examine the contents of the body; the other takes a <xref:System.ServiceModel.Channels.MessageBuffer> parameter and can examine any part of the message.</span></span> <span data-ttu-id="48dfa-127">如果使用消息参数来调用方法，并且筛选器表包含检查消息正文内容的筛选器，则将引发异常。</span><span class="sxs-lookup"><span data-stu-id="48dfa-127">If you call a method with the message parameter, and the filter table contains a filter that examines the content of the message body, an exception is thrown.</span></span> <span data-ttu-id="48dfa-128">如果您对表中的筛选器不确定，请调用使用消息缓冲区的重载。</span><span class="sxs-lookup"><span data-stu-id="48dfa-128">If you are unsure about the filters in a table, call the overload that takes a message buffer.</span></span>  
  
 <span data-ttu-id="48dfa-129">消息头自动缓冲，并且无需使用即可由筛选器检查。</span><span class="sxs-lookup"><span data-stu-id="48dfa-129">Message headers are automatically buffered and can be inspected by a filter without being consumed.</span></span> <span data-ttu-id="48dfa-130">但是，如果由筛选器检查正文，则必须缓冲整个消息，因为查询将使用未缓冲消息正文并破坏其内容。</span><span class="sxs-lookup"><span data-stu-id="48dfa-130">But if the body is to be inspected by a filter, then the entire message must be buffered because an unbuffered message body is consumed by a query and its contents destroyed.</span></span>  
  
 <span data-ttu-id="48dfa-131">下面的类实现 <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601>：</span><span class="sxs-lookup"><span data-stu-id="48dfa-131">The following classes implement <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601>:</span></span>  
  
-   <xref:System.ServiceModel.Dispatcher.MessageFilterTable%601>  
  
-   <xref:System.ServiceModel.Dispatcher.XPathMessageFilterTable%601>  
  
 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="48dfa-132">对于匹配的操作，筛选器表是线程安全的；但对于修改，不是线程安全的。</span><span class="sxs-lookup"><span data-stu-id="48dfa-132">Filter tables are thread-safe with respect to matching operations, but are not thread-safe with respect to modification.</span></span> <span data-ttu-id="48dfa-133">访问筛选器表的线程应由 <see cref="T:System.Threading.ReaderWriterLock" /> 或类似的锁定语义来进行同步。</span><span class="sxs-lookup"><span data-stu-id="48dfa-133">Threads that access a filter table should be synchronized by the <see cref="T:System.Threading.ReaderWriterLock" /> or similar locking semantic.</span></span> <span data-ttu-id="48dfa-134">使用此锁定使筛选器表可以同时运行多个读入操作，例如匹配操作；不过，若要写入筛选器表（例如添加筛选器），则线程必须等待独占锁。</span><span class="sxs-lookup"><span data-stu-id="48dfa-134">This lock allows multiple reads of a filter table (for example, a match operation) to run simultaneously, but in order to write to a filter table (for example, adding a filter), a thread must wait for an exclusive lock.</span></span>  
  
<span data-ttu-id="48dfa-135">当将筛选器添加到表时，完成所有编译。</span><span class="sxs-lookup"><span data-stu-id="48dfa-135">All compilation is done when filters are added to the table.</span></span> <span data-ttu-id="48dfa-136">如果您提前创建筛选器表，并且始终没有编辑它，则在匹配过程中不需要锁定。</span><span class="sxs-lookup"><span data-stu-id="48dfa-136">If you create a filter table in advance, and never edit it, locking is not necessary during a match.</span></span></threadsafe>
  </Docs>
  <Members>
    <MemberGroup MemberName="GetMatchingFilter">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="48dfa-137">从表中返回指定的消息或缓冲消息满足其查询条件的筛选器。</span><span class="sxs-lookup"><span data-stu-id="48dfa-137">Returns a filter from the table whose query criteria are satisfied by a specified message or buffered message.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="48dfa-138">当预期会有单个筛选器与消息相匹配，并且需要匹配筛选器时，请使用此方法。</span><span class="sxs-lookup"><span data-stu-id="48dfa-138">Use this method when a single filter is expected to match the message and the matching filter is required.</span></span>  
  
 <span data-ttu-id="48dfa-139">如果不需要检查正文内容，请使用 <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601.GetMatchingFilter%2A>。</span><span class="sxs-lookup"><span data-stu-id="48dfa-139">Use <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601.GetMatchingFilter%2A> if the body content does not require examination.</span></span> <span data-ttu-id="48dfa-140">如果可能需要检查消息正文的内容，请使用 <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601.GetMatchingFilter%2A>。</span><span class="sxs-lookup"><span data-stu-id="48dfa-140">Use <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601.GetMatchingFilter%2A> if the contents of the message body may require examination.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="48dfa-141">如果多个筛选器与消息相匹配，则必须引发 <see cref="T:System.ServiceModel.Dispatcher.MultipleFilterMatchesException" />。</span><span class="sxs-lookup"><span data-stu-id="48dfa-141">If more than one filter matches the message, a <see cref="T:System.ServiceModel.Dispatcher.MultipleFilterMatchesException" /> must be thrown.</span></span></para></block>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetMatchingFilter">
      <MemberSignature Language="C#" Value="public bool GetMatchingFilter (System.ServiceModel.Channels.Message message, out System.ServiceModel.Dispatcher.MessageFilter filter);" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetMatchingFilter(class System.ServiceModel.Channels.Message message, [out] class System.ServiceModel.Dispatcher.MessageFilter&amp; filter) cil managed" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.IMessageFilterTable`1.GetMatchingFilter(System.ServiceModel.Channels.Message,System.ServiceModel.Dispatcher.MessageFilter@)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMatchingFilter (message As Message, ByRef filter As MessageFilter) As Boolean" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetMatchingFilter(System::ServiceModel::Channels::Message ^ message, [Runtime::InteropServices::Out] System::ServiceModel::Dispatcher::MessageFilter ^ % filter);" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="F#" Value="abstract member GetMatchingFilter : System.ServiceModel.Channels.Message * MessageFilter -&gt; bool" Usage="iMessageFilterTable.GetMatchingFilter (message, filter)" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C#" Value="public bool GetMatchingFilter (System.ServiceModel.Channels.Message message, out System.ServiceModel.Dispatcher.MessageFilter result);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetMatchingFilter(class System.ServiceModel.Channels.Message message, [out] class System.ServiceModel.Dispatcher.MessageFilter&amp; result) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMatchingFilter (message As Message, ByRef result As MessageFilter) As Boolean" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetMatchingFilter(System::ServiceModel::Channels::Message ^ message, [Runtime::InteropServices::Out] System::ServiceModel::Dispatcher::MessageFilter ^ % result);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="abstract member GetMatchingFilter : System.ServiceModel.Channels.Message * MessageFilter -&gt; bool" Usage="iMessageFilterTable.GetMatchingFilter (message, result)" FrameworkAlternate="xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.ServiceModel.Channels.Message" Index="0" />
        <Parameter Name="filter" Type="System.ServiceModel.Dispatcher.MessageFilter" RefType="out" Index="1" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="result" Type="System.ServiceModel.Dispatcher.MessageFilter" RefType="out" Index="1" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="48dfa-142">要测试的 <see cref="T:System.ServiceModel.Channels.Message" />。</span><span class="sxs-lookup"><span data-stu-id="48dfa-142">The <see cref="T:System.ServiceModel.Channels.Message" /> to test.</span></span></param>
        <param name="filter"><span data-ttu-id="48dfa-143">存储 <paramref name="message" /> 符合的筛选器的 <see langword="out" /> 参数。</span><span class="sxs-lookup"><span data-stu-id="48dfa-143"><see langword="out" /> parameter that stores the filter that is satisfied by the <paramref name="message" />.</span></span> <span data-ttu-id="48dfa-144">如果找不到筛选器，该参数将设置为默认值。</span><span class="sxs-lookup"><span data-stu-id="48dfa-144">If no filter was found, the parameter is set to its default value.</span></span></param>
        <param name="result"><span data-ttu-id="48dfa-145">存储 <paramref name="message" /> 符合的筛选器的 <see langword="out" /> 参数。</span><span class="sxs-lookup"><span data-stu-id="48dfa-145"><see langword="out" /> parameter that stores the filter that is satisfied by the <paramref name="message" />.</span></span> <span data-ttu-id="48dfa-146">如果找不到筛选器，该参数将设置为默认值。</span><span class="sxs-lookup"><span data-stu-id="48dfa-146">If no filter was found, the parameter is set to its default value.</span></span></param>
        <summary><span data-ttu-id="48dfa-147">返回一个值，该值指示指定的消息是否正好满足表中的一个筛选器的匹配条件，然后在 <see langword="out" /> 参数中返回该筛选器。</span><span class="sxs-lookup"><span data-stu-id="48dfa-147">Returns a value that indicates whether the match criterion of exactly one filter in the table is satisfied by the specified message, and returns that filter in an <see langword="out" /> parameter.</span></span></summary>
        <returns><span data-ttu-id="48dfa-148">如果 <see langword="true" /> 满足表中至少一个筛选器的匹配条件，则为 <paramref name="message" />；如果不满足任何筛选器，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="48dfa-148"><see langword="true" /> if the match criterion of at least one filter in the table is satisfied by <paramref name="message" />; <see langword="false" /> if no filter is satisfied.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="48dfa-149">当预期会有单个筛选器与消息相匹配，并且需要匹配筛选器时，请使用此方法。</span><span class="sxs-lookup"><span data-stu-id="48dfa-149">Use this method when a single filter is expected to match the message and the matching filter is required.</span></span>  
  
 <span data-ttu-id="48dfa-150">如果必须由筛选器表中的筛选器来检查消息的正文，请使用该方法的 <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601.GetMatchingFilter%2A> 版本。</span><span class="sxs-lookup"><span data-stu-id="48dfa-150">If the body of the message must be inspected by a filter in the filter table, use the <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601.GetMatchingFilter%2A> version of the method.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="48dfa-151">如果多个筛选器与消息相匹配，则必须引发 <see cref="T:System.ServiceModel.Dispatcher.MultipleFilterMatchesException" />。</span><span class="sxs-lookup"><span data-stu-id="48dfa-151">If more than one filter matches the message, a <see cref="T:System.ServiceModel.Dispatcher.MultipleFilterMatchesException" /> must be thrown.</span></span>  
  
<span data-ttu-id="48dfa-152">此版本使用 <see cref="T:System.ServiceModel.Channels.Message" />，如果它试图检查消息正文，则必须引发 <see cref="T:System.ServiceModel.Dispatcher.InvalidBodyAccessException" />。</span><span class="sxs-lookup"><span data-stu-id="48dfa-152">This version takes a <see cref="T:System.ServiceModel.Channels.Message" /> and must throw an <see cref="T:System.ServiceModel.Dispatcher.InvalidBodyAccessException" /> if it tries to examine the message body.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="GetMatchingFilter">
      <MemberSignature Language="C#" Value="public bool GetMatchingFilter (System.ServiceModel.Channels.MessageBuffer messageBuffer, out System.ServiceModel.Dispatcher.MessageFilter filter);" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetMatchingFilter(class System.ServiceModel.Channels.MessageBuffer messageBuffer, [out] class System.ServiceModel.Dispatcher.MessageFilter&amp; filter) cil managed" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.IMessageFilterTable`1.GetMatchingFilter(System.ServiceModel.Channels.MessageBuffer,System.ServiceModel.Dispatcher.MessageFilter@)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMatchingFilter (messageBuffer As MessageBuffer, ByRef filter As MessageFilter) As Boolean" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetMatchingFilter(System::ServiceModel::Channels::MessageBuffer ^ messageBuffer, [Runtime::InteropServices::Out] System::ServiceModel::Dispatcher::MessageFilter ^ % filter);" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="F#" Value="abstract member GetMatchingFilter : System.ServiceModel.Channels.MessageBuffer * MessageFilter -&gt; bool" Usage="iMessageFilterTable.GetMatchingFilter (messageBuffer, filter)" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C#" Value="public bool GetMatchingFilter (System.ServiceModel.Channels.MessageBuffer buffer, out System.ServiceModel.Dispatcher.MessageFilter result);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetMatchingFilter(class System.ServiceModel.Channels.MessageBuffer buffer, [out] class System.ServiceModel.Dispatcher.MessageFilter&amp; result) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMatchingFilter (buffer As MessageBuffer, ByRef result As MessageFilter) As Boolean" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetMatchingFilter(System::ServiceModel::Channels::MessageBuffer ^ buffer, [Runtime::InteropServices::Out] System::ServiceModel::Dispatcher::MessageFilter ^ % result);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="abstract member GetMatchingFilter : System.ServiceModel.Channels.MessageBuffer * MessageFilter -&gt; bool" Usage="iMessageFilterTable.GetMatchingFilter (buffer, result)" FrameworkAlternate="xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="messageBuffer" Type="System.ServiceModel.Channels.MessageBuffer" Index="0" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="buffer" Type="System.ServiceModel.Channels.MessageBuffer" Index="0" FrameworkAlternate="xamarinmac-3.0" />
        <Parameter Name="filter" Type="System.ServiceModel.Dispatcher.MessageFilter" RefType="out" Index="1" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="result" Type="System.ServiceModel.Dispatcher.MessageFilter" RefType="out" Index="1" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="messageBuffer"><span data-ttu-id="48dfa-153">要测试的 <see cref="T:System.ServiceModel.Channels.MessageBuffer" />。</span><span class="sxs-lookup"><span data-stu-id="48dfa-153">The <see cref="T:System.ServiceModel.Channels.MessageBuffer" /> to test.</span></span></param>
        <param name="buffer"><span data-ttu-id="48dfa-154">要测试的 <see cref="T:System.ServiceModel.Channels.MessageBuffer" />。</span><span class="sxs-lookup"><span data-stu-id="48dfa-154">The <see cref="T:System.ServiceModel.Channels.MessageBuffer" /> to test.</span></span></param>
        <param name="filter"><span data-ttu-id="48dfa-155">存储 <paramref name="message" /> 符合的筛选器的 <see langword="out" /> 参数。</span><span class="sxs-lookup"><span data-stu-id="48dfa-155"><see langword="out" /> parameter that stores the filter that is satisfied by the <paramref name="message" />.</span></span> <span data-ttu-id="48dfa-156">如果找不到筛选器，该参数将设置为默认值。</span><span class="sxs-lookup"><span data-stu-id="48dfa-156">If no filter was found, the parameter is set to its default value.</span></span></param>
        <param name="result"><span data-ttu-id="48dfa-157">存储 <paramref name="message" /> 符合的筛选器的 <see langword="out" /> 参数。</span><span class="sxs-lookup"><span data-stu-id="48dfa-157"><see langword="out" /> parameter that stores the filter that is satisfied by the <paramref name="message" />.</span></span> <span data-ttu-id="48dfa-158">如果找不到筛选器，该参数将设置为默认值。</span><span class="sxs-lookup"><span data-stu-id="48dfa-158">If no filter was found, the parameter is set to its default value.</span></span></param>
        <summary><span data-ttu-id="48dfa-159">返回一个值，该值指示指定的消息或缓冲消息是否正好满足表中的一个筛选器的匹配条件，然后在 <see langword="out" /> 参数中返回该筛选器。</span><span class="sxs-lookup"><span data-stu-id="48dfa-159">Returns a value that indicates whether the match criterion of exactly one filter in the table is satisfied by the specified message or buffered message, and returns that filter in an <see langword="out" /> parameter.</span></span></summary>
        <returns><span data-ttu-id="48dfa-160">如果 <see langword="true" /> 满足表中至少一个筛选器的匹配条件，则为 <paramref name="messageBuffer" />；如果不满足任何筛选器，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="48dfa-160"><see langword="true" /> if the match criterion of at least one filter in the table is satisfied by <paramref name="messageBuffer" />; <see langword="false" /> if no filter is satisfied.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="48dfa-161">当预期会有单个筛选器与缓冲消息相匹配，同时必须返回匹配筛选器，且可能必须检查消息的正文时，请使用此方法。</span><span class="sxs-lookup"><span data-stu-id="48dfa-161">Use this method when a single filter is expected to match the buffered message, the matching filter must be returned, and the body of the message may have to be inspected.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetMatchingFilters">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="48dfa-162">将指定的消息或缓冲消息满足其查询条件的筛选器添加到集合。</span><span class="sxs-lookup"><span data-stu-id="48dfa-162">Adds the filters whose query criteria are satisfied by a specified message or buffered message to a collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="48dfa-163">当预期会有多个筛选器与消息相匹配，并且需要匹配筛选器时，请使用这些方法之一。</span><span class="sxs-lookup"><span data-stu-id="48dfa-163">Use one of these methods when more than one filter is expected to match the message and the matching filters are required.</span></span> <span data-ttu-id="48dfa-164">注意，请不要在添加结果之前清除包含这些筛选器的集合。</span><span class="sxs-lookup"><span data-stu-id="48dfa-164">Note that the collection that contains the filters is not cleared before the results are added.</span></span> <span data-ttu-id="48dfa-165">这样您就可以将多个筛选器表中所有匹配项累积添加到单个集合中。</span><span class="sxs-lookup"><span data-stu-id="48dfa-165">This allows you to accumulate all matches across multiple filter tables into a single collection.</span></span>  
  
 <span data-ttu-id="48dfa-166">如果必须由筛选器表中的筛选器来检查消息的正文，请缓冲该消息，然后将它传递到 <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601.GetMatchingFilters%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="48dfa-166">If the body of the message must be inspected by a filter in the filter table, buffer the message and pass it to the <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601.GetMatchingFilters%2A> method.</span></span> <span data-ttu-id="48dfa-167">否则使用 <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601.GetMatchingFilters%2A>。</span><span class="sxs-lookup"><span data-stu-id="48dfa-167">Otherwise, use <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601.GetMatchingFilters%2A>.</span></span>  
  
 <span data-ttu-id="48dfa-168">匹配的 <xref:System.ServiceModel.Dispatcher.MessageFilter> 对象存储在 `results` 参数中。</span><span class="sxs-lookup"><span data-stu-id="48dfa-168">The matching <xref:System.ServiceModel.Dispatcher.MessageFilter> objects are stored in the `results` parameter.</span></span> <span data-ttu-id="48dfa-169">然后，可以使用这些筛选器作为键，通过 <xref:System.Collections.Generic.IDictionary%602> 提供的方法从筛选器表恢复筛选器数据。</span><span class="sxs-lookup"><span data-stu-id="48dfa-169">The filter data can then be recovered from the filter table using these filters as keys with the methods provided by <xref:System.Collections.Generic.IDictionary%602>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetMatchingFilters">
      <MemberSignature Language="C#" Value="public bool GetMatchingFilters (System.ServiceModel.Channels.Message message, System.Collections.Generic.ICollection&lt;System.ServiceModel.Dispatcher.MessageFilter&gt; results);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetMatchingFilters(class System.ServiceModel.Channels.Message message, class System.Collections.Generic.ICollection`1&lt;class System.ServiceModel.Dispatcher.MessageFilter&gt; results) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.IMessageFilterTable`1.GetMatchingFilters(System.ServiceModel.Channels.Message,System.Collections.Generic.ICollection{System.ServiceModel.Dispatcher.MessageFilter})" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMatchingFilters (message As Message, results As ICollection(Of MessageFilter)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetMatchingFilters(System::ServiceModel::Channels::Message ^ message, System::Collections::Generic::ICollection&lt;System::ServiceModel::Dispatcher::MessageFilter ^&gt; ^ results);" />
      <MemberSignature Language="F#" Value="abstract member GetMatchingFilters : System.ServiceModel.Channels.Message * System.Collections.Generic.ICollection&lt;System.ServiceModel.Dispatcher.MessageFilter&gt; -&gt; bool" Usage="iMessageFilterTable.GetMatchingFilters (message, results)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.ServiceModel.Channels.Message" />
        <Parameter Name="results" Type="System.Collections.Generic.ICollection&lt;System.ServiceModel.Dispatcher.MessageFilter&gt;" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="48dfa-170">要测试的 <see cref="T:System.ServiceModel.Channels.Message" />。</span><span class="sxs-lookup"><span data-stu-id="48dfa-170">The <see cref="T:System.ServiceModel.Channels.Message" /> to test.</span></span></param>
        <param name="results"><span data-ttu-id="48dfa-171">存储 <see cref="T:System.Collections.Generic.ICollection`1" />&lt;Filter&gt; 中匹配的 <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" /> 对象的引用参数。</span><span class="sxs-lookup"><span data-stu-id="48dfa-171">Reference parameter that stores the <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" /> objects that match in <see cref="T:System.Collections.Generic.ICollection`1" />&lt;Filter&gt;.</span></span></param>
        <summary><span data-ttu-id="48dfa-172">返回一个值，该值指示指定的消息是否满足表中筛选器的匹配条件，然后将匹配筛选器添加到集合。</span><span class="sxs-lookup"><span data-stu-id="48dfa-172">Returns a value that indicates whether the match criterion of a filter in the table is satisfied by the specified message, and adds the matching filters to a collection.</span></span></summary>
        <returns><span data-ttu-id="48dfa-173">如果 <see langword="true" /> 满足表中至少一个筛选器的匹配条件，则为 <paramref name="message" />；如果不满足任何筛选器，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="48dfa-173"><see langword="true" /> if the match criterion of at least one filter in the table is satisfied by <paramref name="message" />; <see langword="false" /> if no filter is satisfied.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="48dfa-174">当预期会有多个筛选器与消息相匹配，同时需要匹配筛选器，且不必检查消息的正文时，请使用此方法。</span><span class="sxs-lookup"><span data-stu-id="48dfa-174">Use this method when more than one filter is expected to match the message, the matching filters are required, and the body of the message does not have to be inspected.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="48dfa-175">此版本使用 <see cref="T:System.ServiceModel.Channels.Message" />，如果它试图检查消息正文，则必须引发 <see cref="T:System.ServiceModel.Dispatcher.InvalidBodyAccessException" />。</span><span class="sxs-lookup"><span data-stu-id="48dfa-175">This version takes a <see cref="T:System.ServiceModel.Channels.Message" /> and must throw an <see cref="T:System.ServiceModel.Dispatcher.InvalidBodyAccessException" /> if it tries to examine the message body.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="GetMatchingFilters">
      <MemberSignature Language="C#" Value="public bool GetMatchingFilters (System.ServiceModel.Channels.MessageBuffer messageBuffer, System.Collections.Generic.ICollection&lt;System.ServiceModel.Dispatcher.MessageFilter&gt; results);" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetMatchingFilters(class System.ServiceModel.Channels.MessageBuffer messageBuffer, class System.Collections.Generic.ICollection`1&lt;class System.ServiceModel.Dispatcher.MessageFilter&gt; results) cil managed" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.IMessageFilterTable`1.GetMatchingFilters(System.ServiceModel.Channels.MessageBuffer,System.Collections.Generic.ICollection{System.ServiceModel.Dispatcher.MessageFilter})" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMatchingFilters (messageBuffer As MessageBuffer, results As ICollection(Of MessageFilter)) As Boolean" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetMatchingFilters(System::ServiceModel::Channels::MessageBuffer ^ messageBuffer, System::Collections::Generic::ICollection&lt;System::ServiceModel::Dispatcher::MessageFilter ^&gt; ^ results);" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="F#" Value="abstract member GetMatchingFilters : System.ServiceModel.Channels.MessageBuffer * System.Collections.Generic.ICollection&lt;System.ServiceModel.Dispatcher.MessageFilter&gt; -&gt; bool" Usage="iMessageFilterTable.GetMatchingFilters (messageBuffer, results)" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C#" Value="public bool GetMatchingFilters (System.ServiceModel.Channels.MessageBuffer buffer, System.Collections.Generic.ICollection&lt;System.ServiceModel.Dispatcher.MessageFilter&gt; results);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetMatchingFilters(class System.ServiceModel.Channels.MessageBuffer buffer, class System.Collections.Generic.ICollection`1&lt;class System.ServiceModel.Dispatcher.MessageFilter&gt; results) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMatchingFilters (buffer As MessageBuffer, results As ICollection(Of MessageFilter)) As Boolean" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetMatchingFilters(System::ServiceModel::Channels::MessageBuffer ^ buffer, System::Collections::Generic::ICollection&lt;System::ServiceModel::Dispatcher::MessageFilter ^&gt; ^ results);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="abstract member GetMatchingFilters : System.ServiceModel.Channels.MessageBuffer * System.Collections.Generic.ICollection&lt;System.ServiceModel.Dispatcher.MessageFilter&gt; -&gt; bool" Usage="iMessageFilterTable.GetMatchingFilters (buffer, results)" FrameworkAlternate="xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="messageBuffer" Type="System.ServiceModel.Channels.MessageBuffer" Index="0" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="buffer" Type="System.ServiceModel.Channels.MessageBuffer" Index="0" FrameworkAlternate="xamarinmac-3.0" />
        <Parameter Name="results" Type="System.Collections.Generic.ICollection&lt;System.ServiceModel.Dispatcher.MessageFilter&gt;" Index="1" />
      </Parameters>
      <Docs>
        <param name="messageBuffer"><span data-ttu-id="48dfa-176">要测试的 <see cref="T:System.ServiceModel.Channels.MessageBuffer" />。</span><span class="sxs-lookup"><span data-stu-id="48dfa-176">The <see cref="T:System.ServiceModel.Channels.MessageBuffer" /> to test.</span></span></param>
        <param name="buffer"><span data-ttu-id="48dfa-177">要测试的 <see cref="T:System.ServiceModel.Channels.MessageBuffer" />。</span><span class="sxs-lookup"><span data-stu-id="48dfa-177">The <see cref="T:System.ServiceModel.Channels.MessageBuffer" /> to test.</span></span></param>
        <param name="results"><span data-ttu-id="48dfa-178">存储 <see cref="T:System.Collections.Generic.ICollection`1" />&lt;Filter&gt; 中匹配的 <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" /> 对象的引用参数。</span><span class="sxs-lookup"><span data-stu-id="48dfa-178">Reference parameter that stores the <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" /> objects that match in <see cref="T:System.Collections.Generic.ICollection`1" />&lt;Filter&gt;.</span></span></param>
        <summary><span data-ttu-id="48dfa-179">返回一个值，该值指示指定的缓冲消息是否满足表中筛选器的匹配条件，然后将匹配筛选器添加到集合。</span><span class="sxs-lookup"><span data-stu-id="48dfa-179">Returns a value that indicates whether the match criterion of a filter in the table is satisfied by the specified buffered message, and adds the matching filters to a collection.</span></span></summary>
        <returns><span data-ttu-id="48dfa-180">如果 <see langword="true" /> 满足表中至少一个筛选器的匹配条件，则为 <paramref name="messageBuffer" />；如果不满足任何筛选器，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="48dfa-180"><see langword="true" /> if the match criterion of at least one filter in the table is satisfied by <paramref name="messageBuffer" />; <see langword="false" /> if no filter is satisfied.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="48dfa-181">当预期会有多个筛选器与缓冲消息相匹配，同时需要匹配筛选器，且可能必须检查消息的正文，请使用此方法。</span><span class="sxs-lookup"><span data-stu-id="48dfa-181">Use this method when more than one filter is expected to match the buffered message, the matching filter is required, and the body of the message may have to be inspected.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetMatchingValue">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="48dfa-182">返回一个值，该值指示指定的消息或缓冲消息是否满足表中筛选器的匹配条件，然后返回匹配筛选器的数据。</span><span class="sxs-lookup"><span data-stu-id="48dfa-182">Returns a value that indicates whether the match criterion of a filter in the table is satisfied by the specified message or buffered message, and returns the filter data for the filter that matched.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="48dfa-183">当预期至多只有一个筛选器与消息相匹配，并且只需要恢复匹配筛选器的数据时，请使用这些方法之一。</span><span class="sxs-lookup"><span data-stu-id="48dfa-183">Use one of these methods when, at most, one filter is expected to match the message and only the filter data from the matching filter must be recovered.</span></span> <span data-ttu-id="48dfa-184">这些方法会先返回一个指示是否找到匹配筛选器的布尔值，然后将 `data` 引用参数设置为匹配筛选器数据。</span><span class="sxs-lookup"><span data-stu-id="48dfa-184">These methods return a boolean that indicates whether a matching filter was found and set the `data` reference parameter to the matching filter data.</span></span>  
  
 <span data-ttu-id="48dfa-185">如果筛选器表中的任何筛选器都不检查消息的正文，请使用 <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601.GetMatchingFilter%2A>。</span><span class="sxs-lookup"><span data-stu-id="48dfa-185">Use <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601.GetMatchingFilter%2A> if the body of the message is not inspected by any of the filters in the filter table.</span></span>  
  
 <span data-ttu-id="48dfa-186">如果可能会由筛选器表中的筛选器来检查消息的正文，请缓冲该消息，然后将它传递到该方法的 <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601.GetMatchingFilter%2A> 版本。</span><span class="sxs-lookup"><span data-stu-id="48dfa-186">If the body of the message may be inspected by a filter in the filter table, buffer the message and pass it to the <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601.GetMatchingFilter%2A> version of the method.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="48dfa-187">如果多个筛选器与消息相匹配，则必须引发 <see cref="T:System.ServiceModel.Dispatcher.MultipleFilterMatchesException" />。</span><span class="sxs-lookup"><span data-stu-id="48dfa-187">If more than one filter matches the message, a <see cref="T:System.ServiceModel.Dispatcher.MultipleFilterMatchesException" /> must be thrown.</span></span></para></block>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetMatchingValue">
      <MemberSignature Language="C#" Value="public bool GetMatchingValue (System.ServiceModel.Channels.Message message, out TFilterData value);" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetMatchingValue(class System.ServiceModel.Channels.Message message, [out] !TFilterData&amp; value) cil managed" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.IMessageFilterTable`1.GetMatchingValue(System.ServiceModel.Channels.Message,`0@)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMatchingValue (message As Message, ByRef value As TFilterData) As Boolean" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetMatchingValue(System::ServiceModel::Channels::Message ^ message, [Runtime::InteropServices::Out] TFilterData % value);" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="F#" Value="abstract member GetMatchingValue : System.ServiceModel.Channels.Message * 'FilterData -&gt; bool" Usage="iMessageFilterTable.GetMatchingValue (message, value)" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C#" Value="public bool GetMatchingValue (System.ServiceModel.Channels.Message message, out TFilterData data);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetMatchingValue(class System.ServiceModel.Channels.Message message, [out] !TFilterData&amp; data) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMatchingValue (message As Message, ByRef data As TFilterData) As Boolean" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetMatchingValue(System::ServiceModel::Channels::Message ^ message, [Runtime::InteropServices::Out] TFilterData % data);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="abstract member GetMatchingValue : System.ServiceModel.Channels.Message * 'FilterData -&gt; bool" Usage="iMessageFilterTable.GetMatchingValue (message, data)" FrameworkAlternate="xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.ServiceModel.Channels.Message" Index="0" />
        <Parameter Name="value" Type="TFilterData" RefType="out" Index="1" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="data" Type="TFilterData" RefType="out" Index="1" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="48dfa-188">要测试的 <see cref="T:System.ServiceModel.Channels.Message" />。</span><span class="sxs-lookup"><span data-stu-id="48dfa-188">The <see cref="T:System.ServiceModel.Channels.Message" /> to test.</span></span></param>
        <param name="value"><span data-ttu-id="48dfa-189"><see langword="out" /> 参数，存储与 <paramref name="message" /> 匹配的 <c>FilterData</c>。</span><span class="sxs-lookup"><span data-stu-id="48dfa-189"><see langword="out" /> parameter that stores the <c>FilterData</c> that matches the <paramref name="message" />.</span></span></param>
        <param name="data"><span data-ttu-id="48dfa-190"><see langword="out" /> 参数，存储与 <paramref name="message" /> 匹配的 <c>FilterData</c>。</span><span class="sxs-lookup"><span data-stu-id="48dfa-190"><see langword="out" /> parameter that stores the <c>FilterData</c> that matches the <paramref name="message" />.</span></span></param>
        <summary><span data-ttu-id="48dfa-191">返回一个值，该值指示指定的消息是否正好满足表中的一个筛选器的匹配条件，然后将匹配筛选数据添加到集合。</span><span class="sxs-lookup"><span data-stu-id="48dfa-191">Returns a value that indicates whether the match criterion of exactly one filter in the table is satisfied by the specified message, and adds the matching filter data to a collection.</span></span></summary>
        <returns><span data-ttu-id="48dfa-192">如果消息正好满足表中一个筛选器的匹配条件，则为 <see langword="true" />；如果不满足任何筛选器，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="48dfa-192"><see langword="true" /> if the match criterion of exactly one filter in the table is satisfied by the message; <see langword="false" /> if no filter is satisfied.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="48dfa-193">当预期只有一个筛选器与消息相匹配，并且只需要恢复匹配筛选器的数据时，请使用此方法。</span><span class="sxs-lookup"><span data-stu-id="48dfa-193">Use this method when a single filter is expected to match the message and only the filter data from the matching filter must be recovered.</span></span>  
  
 <span data-ttu-id="48dfa-194">此方法预期最多只有一个匹配筛选器。</span><span class="sxs-lookup"><span data-stu-id="48dfa-194">This method expects at most a single matching filter.</span></span> <span data-ttu-id="48dfa-195">如果多个筛选器相匹配，则必须引发 <xref:System.ServiceModel.Dispatcher.MultipleFilterMatchesException>。</span><span class="sxs-lookup"><span data-stu-id="48dfa-195">If more than one filter matches, a <xref:System.ServiceModel.Dispatcher.MultipleFilterMatchesException> must be thrown.</span></span>  
  
 <span data-ttu-id="48dfa-196">如果必须由筛选器表中的筛选器来检查消息的正文，请使用 <xref:System.ServiceModel.Channels.Message.CreateBufferedCopy%2A> 来缓冲该消息，然后将它传递到该方法的 <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601.GetMatchingValue%2A> 版本。</span><span class="sxs-lookup"><span data-stu-id="48dfa-196">If the body of the message must be inspected by a filter in the filter table, buffer the message using <xref:System.ServiceModel.Channels.Message.CreateBufferedCopy%2A> and pass it to the <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601.GetMatchingValue%2A> version of the method.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="48dfa-197">如果多个筛选器与消息相匹配，则必须引发 <see cref="T:System.ServiceModel.Dispatcher.MultipleFilterMatchesException" />。</span><span class="sxs-lookup"><span data-stu-id="48dfa-197">If more than one filter matches the message, a <see cref="T:System.ServiceModel.Dispatcher.MultipleFilterMatchesException" /> must be thrown.</span></span>  
  
<span data-ttu-id="48dfa-198">此重载使用 <see cref="T:System.ServiceModel.Channels.Message" />，如果该重载试图检查消息正文，则必须引发 <see cref="T:System.ServiceModel.Dispatcher.InvalidBodyAccessException" />。</span><span class="sxs-lookup"><span data-stu-id="48dfa-198">This overload takes a <see cref="T:System.ServiceModel.Channels.Message" /> and must throw an <see cref="T:System.ServiceModel.Dispatcher.InvalidBodyAccessException" /> if it tries to examine the message body.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="GetMatchingValue">
      <MemberSignature Language="C#" Value="public bool GetMatchingValue (System.ServiceModel.Channels.MessageBuffer messageBuffer, out TFilterData value);" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetMatchingValue(class System.ServiceModel.Channels.MessageBuffer messageBuffer, [out] !TFilterData&amp; value) cil managed" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.IMessageFilterTable`1.GetMatchingValue(System.ServiceModel.Channels.MessageBuffer,`0@)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMatchingValue (messageBuffer As MessageBuffer, ByRef value As TFilterData) As Boolean" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetMatchingValue(System::ServiceModel::Channels::MessageBuffer ^ messageBuffer, [Runtime::InteropServices::Out] TFilterData % value);" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="F#" Value="abstract member GetMatchingValue : System.ServiceModel.Channels.MessageBuffer * 'FilterData -&gt; bool" Usage="iMessageFilterTable.GetMatchingValue (messageBuffer, value)" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C#" Value="public bool GetMatchingValue (System.ServiceModel.Channels.MessageBuffer buffer, out TFilterData data);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetMatchingValue(class System.ServiceModel.Channels.MessageBuffer buffer, [out] !TFilterData&amp; data) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMatchingValue (buffer As MessageBuffer, ByRef data As TFilterData) As Boolean" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetMatchingValue(System::ServiceModel::Channels::MessageBuffer ^ buffer, [Runtime::InteropServices::Out] TFilterData % data);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="abstract member GetMatchingValue : System.ServiceModel.Channels.MessageBuffer * 'FilterData -&gt; bool" Usage="iMessageFilterTable.GetMatchingValue (buffer, data)" FrameworkAlternate="xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="messageBuffer" Type="System.ServiceModel.Channels.MessageBuffer" Index="0" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="buffer" Type="System.ServiceModel.Channels.MessageBuffer" Index="0" FrameworkAlternate="xamarinmac-3.0" />
        <Parameter Name="value" Type="TFilterData" RefType="out" Index="1" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="data" Type="TFilterData" RefType="out" Index="1" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="messageBuffer"><span data-ttu-id="48dfa-199">要测试的 <see cref="T:System.ServiceModel.Channels.MessageBuffer" />。</span><span class="sxs-lookup"><span data-stu-id="48dfa-199">The <see cref="T:System.ServiceModel.Channels.MessageBuffer" /> to test.</span></span></param>
        <param name="buffer"><span data-ttu-id="48dfa-200">要测试的 <see cref="T:System.ServiceModel.Channels.MessageBuffer" />。</span><span class="sxs-lookup"><span data-stu-id="48dfa-200">The <see cref="T:System.ServiceModel.Channels.MessageBuffer" /> to test.</span></span></param>
        <param name="value"><span data-ttu-id="48dfa-201"><see langword="out" /> 参数，存储与 <paramref name="messageBuffer" /> 匹配的 <c>FilterData</c>。</span><span class="sxs-lookup"><span data-stu-id="48dfa-201"><see langword="out" /> parameter that stores the <c>FilterData</c> that matches the <paramref name="messageBuffer" />.</span></span></param>
        <param name="data"><span data-ttu-id="48dfa-202"><see langword="out" /> 参数，存储与 <paramref name="buffer" /> 匹配的 <c>FilterData</c>。</span><span class="sxs-lookup"><span data-stu-id="48dfa-202"><see langword="out" /> parameter that stores the <c>FilterData</c> that matches the <paramref name="buffer" />.</span></span></param>
        <summary><span data-ttu-id="48dfa-203">返回一个值，该值指示指定的缓冲消息是否正好满足表中的一个筛选器的匹配条件，然后将匹配筛选数据添加到集合。</span><span class="sxs-lookup"><span data-stu-id="48dfa-203">Returns a value that indicates whether the match criterion of exactly one filter in the table is satisfied by the specified buffered message, and adds the matching filter data to a collection.</span></span></summary>
        <returns><span data-ttu-id="48dfa-204">如果消息正好满足表中一个筛选器的匹配条件，则为 <see langword="true" />；如果不满足任何筛选器，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="48dfa-204"><see langword="true" /> if the match criterion of exactly one filter in the table is satisfied by the message; <see langword="false" /> if no filter is satisfied.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="48dfa-205">当预期会有单个筛选器与缓冲消息相匹配，且只需要恢复匹配筛选器的数据，并且可能需要检查消息的正文时，请使用此方法。</span><span class="sxs-lookup"><span data-stu-id="48dfa-205">Use this method when a single filter is expected to match the buffered message, only the filter data from the matching filter must be recovered, and the body of the message may have to be inspected.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="48dfa-206">如果多个筛选器与消息相匹配，则必须引发 <see cref="T:System.ServiceModel.Dispatcher.MultipleFilterMatchesException" />。</span><span class="sxs-lookup"><span data-stu-id="48dfa-206">If more than one filter matches the message, a <see cref="T:System.ServiceModel.Dispatcher.MultipleFilterMatchesException" /> must be thrown.</span></span></para></block>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetMatchingValues">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="48dfa-207">将与指定的消息或缓冲消息相匹配筛选器的数据添加到集合。</span><span class="sxs-lookup"><span data-stu-id="48dfa-207">Adds the filter data of the filters that match the specified message or buffered message to a collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="48dfa-208">当预期会有多个筛选器相匹配，并且只需要匹配筛选器数据时，请使用此方法。</span><span class="sxs-lookup"><span data-stu-id="48dfa-208">Use this method when more than one filter is expected to match and only the matching filter data is required.</span></span> <span data-ttu-id="48dfa-209">这些方法会先返回一个指示是否找到匹配筛选器的布尔值，然后将所有匹配筛选器的数据放入集合。</span><span class="sxs-lookup"><span data-stu-id="48dfa-209">These methods return a boolean that indicates whether matching filters were found and put any matching filter data into a collection.</span></span>  
  
 <span data-ttu-id="48dfa-210">注意，请不要在添加结果之前清除包含筛选器数据的集合。</span><span class="sxs-lookup"><span data-stu-id="48dfa-210">Note that the collection that contains the filter data is not cleared before the results are added.</span></span> <span data-ttu-id="48dfa-211">这样您就可以将多个筛选器表中所有匹配项累积添加到单个集合中。</span><span class="sxs-lookup"><span data-stu-id="48dfa-211">This allows you to accumulate all matches across multiple filter tables into a single collection.</span></span>  
  
 <span data-ttu-id="48dfa-212">如果不需要检查消息正文的内容，请使用 <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601.GetMatchingValues%2A>。</span><span class="sxs-lookup"><span data-stu-id="48dfa-212">Use <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601.GetMatchingValues%2A> if the contents of the message body do not require examination.</span></span> <span data-ttu-id="48dfa-213">如果需要检查消息正文的内容，请使用 <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601.GetMatchingValues%2A>。</span><span class="sxs-lookup"><span data-stu-id="48dfa-213">Use <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601.GetMatchingValues%2A> if the contents of the message body requires examination.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetMatchingValues">
      <MemberSignature Language="C#" Value="public bool GetMatchingValues (System.ServiceModel.Channels.Message message, System.Collections.Generic.ICollection&lt;TFilterData&gt; results);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetMatchingValues(class System.ServiceModel.Channels.Message message, class System.Collections.Generic.ICollection`1&lt;!TFilterData&gt; results) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.IMessageFilterTable`1.GetMatchingValues(System.ServiceModel.Channels.Message,System.Collections.Generic.ICollection{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMatchingValues (message As Message, results As ICollection(Of TFilterData)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetMatchingValues(System::ServiceModel::Channels::Message ^ message, System::Collections::Generic::ICollection&lt;TFilterData&gt; ^ results);" />
      <MemberSignature Language="F#" Value="abstract member GetMatchingValues : System.ServiceModel.Channels.Message * System.Collections.Generic.ICollection&lt;'FilterData&gt; -&gt; bool" Usage="iMessageFilterTable.GetMatchingValues (message, results)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.ServiceModel.Channels.Message" />
        <Parameter Name="results" Type="System.Collections.Generic.ICollection&lt;TFilterData&gt;" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="48dfa-214">要测试的 <see cref="T:System.ServiceModel.Channels.Message" />。</span><span class="sxs-lookup"><span data-stu-id="48dfa-214">The <see cref="T:System.ServiceModel.Channels.Message" /> to test.</span></span></param>
        <param name="results"><span data-ttu-id="48dfa-215">在通用集合中存储匹配筛选器的筛选数据的引用参数。</span><span class="sxs-lookup"><span data-stu-id="48dfa-215">Reference parameter that stores the filter data of the matching filters in a generic collection.</span></span></param>
        <summary><span data-ttu-id="48dfa-216">返回一个值，该值指示指定的消息是否满足表中至少一个筛选器的匹配条件，然后将匹配筛选器的 <paramref name="FilterData" /> 添加到集合。</span><span class="sxs-lookup"><span data-stu-id="48dfa-216">Returns a value that indicates whether the match criterion of at least one filter in the table is satisfied by the specified message, and adds the <paramref name="FilterData" /> of the matching filters to a collection.</span></span></summary>
        <returns><span data-ttu-id="48dfa-217">如果 <see langword="true" /> 满足表中至少一个筛选器的匹配条件，则为 <paramref name="message" />；如果不满足任何筛选器，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="48dfa-217"><see langword="true" /> if the match criterion of at least one filter in the table is satisfied by <paramref name="message" />; <see langword="false" /> if no filter is satisfied.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="48dfa-218">当预期会有一个或多个筛选器与消息相匹配，同时只需要筛选器数据，且不检查消息正文的内容时，请使用此方法。</span><span class="sxs-lookup"><span data-stu-id="48dfa-218">Use this method when one or more filters are expected to match the message, only the filter data is required, and the contents of the body of the message are not to be inspected.</span></span>  
  
 <span data-ttu-id="48dfa-219">匹配的 <xref:System.ServiceModel.Dispatcher.MessageFilter> 对象的筛选器数据存储在 `results` 参数中。</span><span class="sxs-lookup"><span data-stu-id="48dfa-219">The filter data of the matching <xref:System.ServiceModel.Dispatcher.MessageFilter> objects is stored in the `results` parameter.</span></span>  
  
 <span data-ttu-id="48dfa-220">如果由筛选器表中的筛选器来检查消息的正文，请缓冲该消息，然后将它传递到该方法的 <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601.GetMatchingValues%2A> 版本。</span><span class="sxs-lookup"><span data-stu-id="48dfa-220">If the body of the message is inspected by a filter in the filter table, buffer the message and pass it to the <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601.GetMatchingValues%2A> version of the method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMatchingValues">
      <MemberSignature Language="C#" Value="public bool GetMatchingValues (System.ServiceModel.Channels.MessageBuffer messageBuffer, System.Collections.Generic.ICollection&lt;TFilterData&gt; results);" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetMatchingValues(class System.ServiceModel.Channels.MessageBuffer messageBuffer, class System.Collections.Generic.ICollection`1&lt;!TFilterData&gt; results) cil managed" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.IMessageFilterTable`1.GetMatchingValues(System.ServiceModel.Channels.MessageBuffer,System.Collections.Generic.ICollection{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMatchingValues (messageBuffer As MessageBuffer, results As ICollection(Of TFilterData)) As Boolean" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetMatchingValues(System::ServiceModel::Channels::MessageBuffer ^ messageBuffer, System::Collections::Generic::ICollection&lt;TFilterData&gt; ^ results);" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="F#" Value="abstract member GetMatchingValues : System.ServiceModel.Channels.MessageBuffer * System.Collections.Generic.ICollection&lt;'FilterData&gt; -&gt; bool" Usage="iMessageFilterTable.GetMatchingValues (messageBuffer, results)" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C#" Value="public bool GetMatchingValues (System.ServiceModel.Channels.MessageBuffer buffer, System.Collections.Generic.ICollection&lt;TFilterData&gt; results);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetMatchingValues(class System.ServiceModel.Channels.MessageBuffer buffer, class System.Collections.Generic.ICollection`1&lt;!TFilterData&gt; results) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMatchingValues (buffer As MessageBuffer, results As ICollection(Of TFilterData)) As Boolean" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetMatchingValues(System::ServiceModel::Channels::MessageBuffer ^ buffer, System::Collections::Generic::ICollection&lt;TFilterData&gt; ^ results);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="abstract member GetMatchingValues : System.ServiceModel.Channels.MessageBuffer * System.Collections.Generic.ICollection&lt;'FilterData&gt; -&gt; bool" Usage="iMessageFilterTable.GetMatchingValues (buffer, results)" FrameworkAlternate="xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="messageBuffer" Type="System.ServiceModel.Channels.MessageBuffer" Index="0" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="buffer" Type="System.ServiceModel.Channels.MessageBuffer" Index="0" FrameworkAlternate="xamarinmac-3.0" />
        <Parameter Name="results" Type="System.Collections.Generic.ICollection&lt;TFilterData&gt;" Index="1" />
      </Parameters>
      <Docs>
        <param name="messageBuffer"><span data-ttu-id="48dfa-221">要测试的 <see cref="T:System.ServiceModel.Channels.MessageBuffer" />。</span><span class="sxs-lookup"><span data-stu-id="48dfa-221">The <see cref="T:System.ServiceModel.Channels.MessageBuffer" /> to test.</span></span></param>
        <param name="buffer"><span data-ttu-id="48dfa-222">要测试的 <see cref="T:System.ServiceModel.Channels.MessageBuffer" />。</span><span class="sxs-lookup"><span data-stu-id="48dfa-222">The <see cref="T:System.ServiceModel.Channels.MessageBuffer" /> to test.</span></span></param>
        <param name="results"><span data-ttu-id="48dfa-223">在泛型 <see cref="T:System.Collections.Generic.ICollection`1" />&lt;<c>FilterData</c>&gt; 中存储匹配筛选器的筛选数据的引用参数。</span><span class="sxs-lookup"><span data-stu-id="48dfa-223">Reference parameter that stores the filter data of the matching filters in a generic <see cref="T:System.Collections.Generic.ICollection`1" />&lt;<c>FilterData</c>&gt;.</span></span></param>
        <summary><span data-ttu-id="48dfa-224">返回一个值，该值指示指定的缓冲消息是否满足表中至少一个筛选器的匹配条件，然后将匹配筛选器的 <paramref name="FilterData" /> 添加到集合。</span><span class="sxs-lookup"><span data-stu-id="48dfa-224">Returns a value that indicates whether the match criterion of at least one filter in the table is satisfied by the specified buffered message, and adds the <paramref name="FilterData" /> of the matching filters to a collection.</span></span></summary>
        <returns><span data-ttu-id="48dfa-225">如果 <see langword="true" /> 满足表中至少一个筛选器的匹配条件，则为 <paramref name="messageBuffer" />；如果不满足任何筛选器，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="48dfa-225"><see langword="true" /> if the match criterion of at least one filter in the table is satisfied by <paramref name="messageBuffer" />; <see langword="false" /> if no filter is satisfied.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="48dfa-226">当预期会有一个或多个筛选器与缓冲消息相匹配，且只需要筛选器数据，同时可能需要检查消息的正文时，请使用此方法。</span><span class="sxs-lookup"><span data-stu-id="48dfa-226">Use this method when one or more filters are expected to match the buffered message, only the filter data is required, and the body of the message may require inspection.</span></span>  
  
 <span data-ttu-id="48dfa-227">匹配的 <xref:System.ServiceModel.Dispatcher.MessageFilter> 对象的筛选器数据存储在 `results` 参数中。</span><span class="sxs-lookup"><span data-stu-id="48dfa-227">The filter data of the matching <xref:System.ServiceModel.Dispatcher.MessageFilter> objects is stored in the `results` parameter.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
