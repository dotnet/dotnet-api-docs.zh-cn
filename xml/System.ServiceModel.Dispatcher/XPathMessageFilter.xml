<Type Name="XPathMessageFilter" FullName="System.ServiceModel.Dispatcher.XPathMessageFilter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="b12dd7721100da2e335d4a4e8cf0fd728fa01f1a" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86744573" /></Metadata><TypeSignature Language="C#" Value="public class XPathMessageFilter : System.ServiceModel.Dispatcher.MessageFilter, System.Xml.Serialization.IXmlSerializable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XPathMessageFilter extends System.ServiceModel.Dispatcher.MessageFilter implements class System.Xml.Serialization.IXmlSerializable" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Dispatcher.XPathMessageFilter" />
  <TypeSignature Language="VB.NET" Value="Public Class XPathMessageFilter&#xA;Inherits MessageFilter&#xA;Implements IXmlSerializable" />
  <TypeSignature Language="C++ CLI" Value="public ref class XPathMessageFilter : System::ServiceModel::Dispatcher::MessageFilter, System::Xml::Serialization::IXmlSerializable" />
  <TypeSignature Language="F#" Value="type XPathMessageFilter = class&#xA;    inherit MessageFilter&#xA;    interface IXmlSerializable" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ServiceModel.Dispatcher.MessageFilter</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Xml.Serialization.IXmlSerializable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName Language="C#">[System.Xml.Serialization.XmlRoot(ElementName="XPathMessageFilter", Namespace="http://schemas.microsoft.com/serviceModel/2004/05/xpathfilter")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Xml.Serialization.XmlRoot(ElementName="XPathMessageFilter", Namespace="http://schemas.microsoft.com/serviceModel/2004/05/xpathfilter")&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Xml.Serialization.XmlSchemaProvider("StaticGetSchema")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Xml.Serialization.XmlSchemaProvider("StaticGetSchema")&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarinmac-3.0">
      <AttributeName Language="C#">[System.Xml.Serialization.XmlRoot("XPathMessageFilter", Namespace="http://schemas.microsoft.com/serviceModel/2004/05/xpathfilter")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Xml.Serialization.XmlRoot("XPathMessageFilter", Namespace="http://schemas.microsoft.com/serviceModel/2004/05/xpathfilter")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="276d3-101">表示对由 XPath 1.0 表达式定义的 XML 文档的查询。</span><span class="sxs-lookup"><span data-stu-id="276d3-101">Represents a query on an XML document defined by an XPath 1.0 expression.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="276d3-102"><xref:System.ServiceModel.Dispatcher.XPathMessageFilter> 使用 XPath 表达式来确定 XML 文档是否包含特定元素、属性、文本或其他 XML 语法构造。</span><span class="sxs-lookup"><span data-stu-id="276d3-102">An <xref:System.ServiceModel.Dispatcher.XPathMessageFilter> uses an XPath expression to determine whether an XML document contains specific elements, attributes, text, or other XML syntactic constructs.</span></span> <span data-ttu-id="276d3-103">通常，应用程序在终结点使用 <xref:System.ServiceModel.Dispatcher.XPathMessageFilter> 来查询 SOAP 消息的内容，然后基于该查询的结果采取适当的操作。</span><span class="sxs-lookup"><span data-stu-id="276d3-103">Typically, an application uses an <xref:System.ServiceModel.Dispatcher.XPathMessageFilter> at an endpoint to query the contents of a SOAP message and then takes the appropriate action based on the results of that query.</span></span> <span data-ttu-id="276d3-104">例如，排队过程可以使用 XPath 查询来检查已知标头的优先级元素，以决定是否将消息移动到队列的靠前位置。</span><span class="sxs-lookup"><span data-stu-id="276d3-104">A queuing process, for example, may use an XPath query to check the priority element of a known header to decide whether to move a message to the front of the queue.</span></span>  
  
 <span data-ttu-id="276d3-105">XML Path 语言 (XPath) 提供一种可用于寻找 XML 文档部件的语言。</span><span class="sxs-lookup"><span data-stu-id="276d3-105">The XML Path Language (XPath) provides a language for addressing parts of an XML document.</span></span> <span data-ttu-id="276d3-106">XPath 中的主要语法构件是表达式，此表达式可定义如何遍历 XML 文档的逻辑结构以及如何寻找或标识 XPath 数据类型。</span><span class="sxs-lookup"><span data-stu-id="276d3-106">The primary syntactic construct in XPath is an expression that defines how to traverse the logical structure of an XML document and address or identify an XPath data type.</span></span> <span data-ttu-id="276d3-107">具体地说，XPath 实现评估针对 XML 文档结构地表达式，生成四种基本的 XPath 数据类型之一：字符串、数字、布尔值和节点集合。</span><span class="sxs-lookup"><span data-stu-id="276d3-107">Specifically, XPath implementations evaluate an expression against the structure of an XML document to yield one of the four basic XPath data types: strings, numbers, Booleans, and node sets.</span></span> <span data-ttu-id="276d3-108">XPath 实现还支持将 XPath 数据类型转换为字符串、数字、或布尔数据类型的功能。</span><span class="sxs-lookup"><span data-stu-id="276d3-108">They also support functions that convert an XPath data type to a string, number, or Boolean data type.</span></span> <span data-ttu-id="276d3-109">如果某一方法要求这三个数据类型之一，则表达式评估的结果会被隐式转换。</span><span class="sxs-lookup"><span data-stu-id="276d3-109">If a method expects one of these three data types, the result of the expression evaluation is implicitly converted.</span></span> <span data-ttu-id="276d3-110">注意：这三个数据类型不能转换为节点集类型。</span><span class="sxs-lookup"><span data-stu-id="276d3-110">Note that these three data types cannot be converted to a node-set type.</span></span> <span data-ttu-id="276d3-111">XML 路径语言在 [W3C Xml 路径语言1.0 规范](https://go.microsoft.com/fwlink/?LinkId=96179)中进行了全面说明。</span><span class="sxs-lookup"><span data-stu-id="276d3-111">The XML Path language is fully described in the [W3C XML Path Language 1.0 specification](https://go.microsoft.com/fwlink/?LinkId=96179).</span></span>  
  
 <span data-ttu-id="276d3-112">XPath 表达式中的数字以双精度 64 位值表示。</span><span class="sxs-lookup"><span data-stu-id="276d3-112">Numbers in XPath expressions are expressed as double-precision 64-bit values.</span></span> <span data-ttu-id="276d3-113">因此，含有涉及很多重要数字的测试号码的 XPath 表达式可能由于浮点精度问题，而返回不正确的结果。</span><span class="sxs-lookup"><span data-stu-id="276d3-113">Therefore XPath expressions that involve testing numbers with many significant digits can return incorrect results due to floating point precision issues.</span></span> <span data-ttu-id="276d3-114">有关详细信息，请参阅 [XML Path Language (XPath) 版本1.0，第3.5 节](https://go.microsoft.com/fwlink/?LinkId=96180)。</span><span class="sxs-lookup"><span data-stu-id="276d3-114">For more information, see [XML Path Language (XPath) Version 1.0, section 3.5](https://go.microsoft.com/fwlink/?LinkId=96180).</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="276d3-115">初始化 <see cref="T:System.ServiceModel.Dispatcher.XPathMessageFilter" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="276d3-115">Initializes a new instance of the <see cref="T:System.ServiceModel.Dispatcher.XPathMessageFilter" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XPathMessageFilter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.XPathMessageFilter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XPathMessageFilter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="276d3-116">初始化与所有格式良好的 XML 文档相匹配的 <see cref="T:System.ServiceModel.Dispatcher.XPathMessageFilter" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="276d3-116">Initializes a new instance of the <see cref="T:System.ServiceModel.Dispatcher.XPathMessageFilter" /> class that matches all well-formed XML documents.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="276d3-117">使用 XPath 空表达式初始化 <xref:System.ServiceModel.Dispatcher.XPathMessageFilter> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="276d3-117">Initializes a new instance of the <xref:System.ServiceModel.Dispatcher.XPathMessageFilter> class with an empty XPath expression.</span></span> <span data-ttu-id="276d3-118">XPath 空表达式始终与格式良好的 XML 文档相匹配，所以所有对象都满足由 XPath 空表达式定义的筛选器的条件。</span><span class="sxs-lookup"><span data-stu-id="276d3-118">An empty XPath expression always matches a well-formed XML document, so all objects satisfy the criteria of a filter defined by an empty XPath expression.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XPathMessageFilter (string xpath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string xpath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.XPathMessageFilter.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (xpath As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XPathMessageFilter(System::String ^ xpath);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.Dispatcher.XPathMessageFilter : string -&gt; System.ServiceModel.Dispatcher.XPathMessageFilter" Usage="new System.ServiceModel.Dispatcher.XPathMessageFilter xpath" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="xpath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="xpath"><span data-ttu-id="276d3-119">一个包含 XPath 1.0 表达式的 <see cref="T:System.String" />。</span><span class="sxs-lookup"><span data-stu-id="276d3-119">A <see cref="T:System.String" /> that contains an XPath 1.0 expression.</span></span></param>
        <summary><span data-ttu-id="276d3-120">使用 XPath 表达式初始化 <see cref="T:System.ServiceModel.Dispatcher.XPathMessageFilter" /> 类的一个新实例以指定筛选器的查询条件。</span><span class="sxs-lookup"><span data-stu-id="276d3-120">Initializes a new instance of the <see cref="T:System.ServiceModel.Dispatcher.XPathMessageFilter" /> class using an XPath expression to specify query criteria for the filter.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="276d3-121">当没有要管理的命名空间时使用此构造函数。</span><span class="sxs-lookup"><span data-stu-id="276d3-121">Use this constructor when there are no namespaces to manage.</span></span>  
  
 <span data-ttu-id="276d3-122">此构造函数使用默认的 <xref:System.Xml.XmlNamespaceManager> 初始化分配给 <xref:System.ServiceModel.Dispatcher.XPathMessageFilter.Namespaces%2A> 属性的 <xref:System.ServiceModel.Dispatcher.XPathMessageContext>，所以 XPath 表达式可以访问 <xref:System.ServiceModel.Dispatcher.XPathMessageContext> 定义的函数库。</span><span class="sxs-lookup"><span data-stu-id="276d3-122">This constructor initializes the <xref:System.Xml.XmlNamespaceManager> assigned to the <xref:System.ServiceModel.Dispatcher.XPathMessageFilter.Namespaces%2A> property by using the default <xref:System.ServiceModel.Dispatcher.XPathMessageContext>, so the XPath expression has access to the function library that the <xref:System.ServiceModel.Dispatcher.XPathMessageContext> defines.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="276d3-123"><paramref name="xpath" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="276d3-123"><paramref name="xpath" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XPathMessageFilter (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.XPathMessageFilter.#ctor(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (reader As XmlReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XPathMessageFilter(System::Xml::XmlReader ^ reader);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.Dispatcher.XPathMessageFilter : System.Xml.XmlReader -&gt; System.ServiceModel.Dispatcher.XPathMessageFilter" Usage="new System.ServiceModel.Dispatcher.XPathMessageFilter reader" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="276d3-124">用于读取流式 XPath 表达式的 <see cref="T:System.Xml.XmlReader" />。</span><span class="sxs-lookup"><span data-stu-id="276d3-124">The <see cref="T:System.Xml.XmlReader" /> to read the streamed XPath expression.</span></span></param>
        <summary><span data-ttu-id="276d3-125">通过使用指定的 XML 读取器读取流式 XPath 来初始化 <see cref="T:System.ServiceModel.Dispatcher.XPathMessageFilter" /> 类的一个新实例。</span><span class="sxs-lookup"><span data-stu-id="276d3-125">Initializes a new instance of the <see cref="T:System.ServiceModel.Dispatcher.XPathMessageFilter" /> class by reading a streamed XPath with the specified XML reader.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="276d3-126">假设读取器位于序列化 `XPathMessageFilter` 的开始元素处。</span><span class="sxs-lookup"><span data-stu-id="276d3-126">It is assumed that the reader is positioned at the start element of the serialized `XPathMessageFilter`.</span></span> <span data-ttu-id="276d3-127">读取之前不验证元素的名称。</span><span class="sxs-lookup"><span data-stu-id="276d3-127">The name of the element is not validated before reading.</span></span> <span data-ttu-id="276d3-128">当此方法返回时，读取器定位在紧靠序列化 `XPathMessageFilter` 后面的位置。</span><span class="sxs-lookup"><span data-stu-id="276d3-128">When this method returns, the reader is positioned immediately after the serialized `XPathMessageFilter`.</span></span> <span data-ttu-id="276d3-129">通过解析 XPath 表达式中的所有前缀（当它们绑定到读取器时），构造函数还可以自动初始化命名空间管理器。</span><span class="sxs-lookup"><span data-stu-id="276d3-129">The constructor also automatically initializes the namespace manager by resolving all prefixes in the XPath expression as they were bound in the reader.</span></span>  
  
 <span data-ttu-id="276d3-130">此方法可以访问通过 <xref:System.ServiceModel.Dispatcher.XPathMessageFilter.WriteXPathTo%2A> 方法创建的任何 XML。</span><span class="sxs-lookup"><span data-stu-id="276d3-130">This method can access any XML that can be created by the <xref:System.ServiceModel.Dispatcher.XPathMessageFilter.WriteXPathTo%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="276d3-131"><paramref name="reader" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="276d3-131"><paramref name="reader" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XPathMessageFilter (string xpath, System.Xml.XmlNamespaceManager namespaces);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string xpath, class System.Xml.XmlNamespaceManager namespaces) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.XPathMessageFilter.#ctor(System.String,System.Xml.XmlNamespaceManager)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (xpath As String, namespaces As XmlNamespaceManager)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XPathMessageFilter(System::String ^ xpath, System::Xml::XmlNamespaceManager ^ namespaces);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.Dispatcher.XPathMessageFilter : string * System.Xml.XmlNamespaceManager -&gt; System.ServiceModel.Dispatcher.XPathMessageFilter" Usage="new System.ServiceModel.Dispatcher.XPathMessageFilter (xpath, namespaces)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="xpath" Type="System.String" />
        <Parameter Name="namespaces" Type="System.Xml.XmlNamespaceManager" />
      </Parameters>
      <Docs>
        <param name="xpath"><span data-ttu-id="276d3-132">XPath 1.0 表达式。</span><span class="sxs-lookup"><span data-stu-id="276d3-132">An XPath 1.0 expression.</span></span></param>
        <param name="namespaces"><span data-ttu-id="276d3-133">一个可解析 <see cref="T:System.Xml.XmlNamespaceManager" /> 中任何命名空间前缀的 <paramref name="xpath" />。</span><span class="sxs-lookup"><span data-stu-id="276d3-133">An <see cref="T:System.Xml.XmlNamespaceManager" /> that resolves any namespace prefixes in <paramref name="xpath" />.</span></span></param>
        <summary><span data-ttu-id="276d3-134">使用指定的 XPath 表达式和命名空间管理器初始化 <see cref="T:System.ServiceModel.Dispatcher.XPathMessageFilter" /> 类的一个新实例。</span><span class="sxs-lookup"><span data-stu-id="276d3-134">Initializes a new instance of the <see cref="T:System.ServiceModel.Dispatcher.XPathMessageFilter" /> class using the specified XPath expression and namespace manager.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="276d3-135">当 XPath 使用未在 <xref:System.ServiceModel.Dispatcher.XPathMessageContext> 中定义的前缀时，或要使用您自己的 <xref:System.Xml.XmlNamespaceManager> 时，请使用此构造函数。</span><span class="sxs-lookup"><span data-stu-id="276d3-135">Use this constructor when XPath uses prefixes not defined in <xref:System.ServiceModel.Dispatcher.XPathMessageContext>, or when you want to use your own <xref:System.Xml.XmlNamespaceManager>.</span></span> <span data-ttu-id="276d3-136">可以创建 <xref:System.ServiceModel.Dispatcher.XPathMessageContext> 的实例并将其传递给此方法。</span><span class="sxs-lookup"><span data-stu-id="276d3-136">An instance of <xref:System.ServiceModel.Dispatcher.XPathMessageContext> can be created and passed to this method.</span></span>  
  
 <span data-ttu-id="276d3-137">如果提供给此方法的实例为 <xref:System.Xml.Xsl.XsltContext> 实现，则此方法与调用 <xref:System.ServiceModel.Dispatcher.XPathMessageFilter.%23ctor%2A> 构造函数是等效的。</span><span class="sxs-lookup"><span data-stu-id="276d3-137">If the instances provided to this method are <xref:System.Xml.Xsl.XsltContext> implementations, it is equivalent to calling the <xref:System.ServiceModel.Dispatcher.XPathMessageFilter.%23ctor%2A> constructor.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="276d3-138"><paramref name="xpath" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="276d3-138"><paramref name="xpath" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XPathMessageFilter (System.Xml.XmlReader reader, System.Xml.XmlNamespaceManager namespaces);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.XmlReader reader, class System.Xml.XmlNamespaceManager namespaces) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.XPathMessageFilter.#ctor(System.Xml.XmlReader,System.Xml.XmlNamespaceManager)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (reader As XmlReader, namespaces As XmlNamespaceManager)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XPathMessageFilter(System::Xml::XmlReader ^ reader, System::Xml::XmlNamespaceManager ^ namespaces);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.Dispatcher.XPathMessageFilter : System.Xml.XmlReader * System.Xml.XmlNamespaceManager -&gt; System.ServiceModel.Dispatcher.XPathMessageFilter" Usage="new System.ServiceModel.Dispatcher.XPathMessageFilter (reader, namespaces)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
        <Parameter Name="namespaces" Type="System.Xml.XmlNamespaceManager" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="276d3-139">用于读取流式 XPath 表达式的 <see cref="T:System.Xml.XmlReader" />。</span><span class="sxs-lookup"><span data-stu-id="276d3-139">The <see cref="T:System.Xml.XmlReader" /> to read the streamed XPath expression.</span></span></param>
        <param name="namespaces"><span data-ttu-id="276d3-140">一个可解析来自 <see cref="T:System.Xml.XmlNamespaceManager" /> 的 XPath 表达式中的任何命名空间前缀的 <paramref name="reader" />。</span><span class="sxs-lookup"><span data-stu-id="276d3-140">An <see cref="T:System.Xml.XmlNamespaceManager" /> that resolves any namespace prefixes in the XPath expression from <paramref name="reader" />.</span></span> <span data-ttu-id="276d3-141">它也可以是可定义自定义函数或变量的 <see cref="T:System.Xml.Xsl.XsltContext" />。</span><span class="sxs-lookup"><span data-stu-id="276d3-141">This can also be an <see cref="T:System.Xml.Xsl.XsltContext" /> that defines custom functions or variables.</span></span></param>
        <summary><span data-ttu-id="276d3-142">通过使用指定的 XML 读取器读取流式 XPath 以及使用指定的命名空间管理器来初始化 <see cref="T:System.ServiceModel.Dispatcher.XPathMessageFilter" /> 类的一个新实例。</span><span class="sxs-lookup"><span data-stu-id="276d3-142">Initializes a new instance of the <see cref="T:System.ServiceModel.Dispatcher.XPathMessageFilter" /> class by reading in a streamed XPath with a specified XML reader and using the specified namespace manager.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="276d3-143">当要使用您自己的 <xref:System.Xml.XmlReader> 以及 <xref:System.Xml.XmlNamespaceManager> 定义筛选器时，请使用此方法。</span><span class="sxs-lookup"><span data-stu-id="276d3-143">Use this constructor when you want to use your own <xref:System.Xml.XmlReader> and <xref:System.Xml.XmlNamespaceManager> to define the filter.</span></span>  
  
 <span data-ttu-id="276d3-144">假设读取器位于序列化 `XPathMessageFilter` 的开始元素处。</span><span class="sxs-lookup"><span data-stu-id="276d3-144">It is assumed that the reader is positioned at the start element of the serialized `XPathMessageFilter`.</span></span> <span data-ttu-id="276d3-145">读取之前不验证元素的名称。</span><span class="sxs-lookup"><span data-stu-id="276d3-145">The name of the element is not validated before reading.</span></span> <span data-ttu-id="276d3-146">当此方法返回时，读取器定位在紧靠序列化 `XPathMessageFilter` 后面的位置。</span><span class="sxs-lookup"><span data-stu-id="276d3-146">When this method returns, the reader is positioned immediately after the serialized `XPathMessageFilter`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="276d3-147"><paramref name="reader" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="276d3-147"><paramref name="reader" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="276d3-148"><paramref name="reader" /> 未定位在开始元素上。</span><span class="sxs-lookup"><span data-stu-id="276d3-148"><paramref name="reader" /> is not positioned on the starting element.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="276d3-149">找到读取方言属性、命名空间 URI 或重复属性问题。</span><span class="sxs-lookup"><span data-stu-id="276d3-149">There were problems reading the dialect attribute or namespace URI, or duplicate attributes were found.</span></span>

<span data-ttu-id="276d3-150">- 或 -</span><span class="sxs-lookup"><span data-stu-id="276d3-150">-or-</span></span>

<span data-ttu-id="276d3-151">读取了无效的方言属性：它不是 XPath。</span><span class="sxs-lookup"><span data-stu-id="276d3-151">An invalid dialect attribute was read: it was not XPath.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XPathMessageFilter (string xpath, System.Xml.Xsl.XsltContext context);" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string xpath, class System.Xml.Xsl.XsltContext context) cil managed" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.XPathMessageFilter.#ctor(System.String,System.Xml.Xsl.XsltContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (xpath As String, context As XsltContext)" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XPathMessageFilter(System::String ^ xpath, System::Xml::Xsl::XsltContext ^ context);" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.Dispatcher.XPathMessageFilter : string * System.Xml.Xsl.XsltContext -&gt; System.ServiceModel.Dispatcher.XPathMessageFilter" Usage="new System.ServiceModel.Dispatcher.XPathMessageFilter (xpath, context)" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C#" Value="public XPathMessageFilter (string xpath, System.Xml.Xsl.XsltContext namespaces);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string xpath, class System.Xml.Xsl.XsltContext namespaces) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (xpath As String, namespaces As XsltContext)" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XPathMessageFilter(System::String ^ xpath, System::Xml::Xsl::XsltContext ^ namespaces);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.Dispatcher.XPathMessageFilter : string * System.Xml.Xsl.XsltContext -&gt; System.ServiceModel.Dispatcher.XPathMessageFilter" Usage="new System.ServiceModel.Dispatcher.XPathMessageFilter (xpath, namespaces)" FrameworkAlternate="xamarinmac-3.0" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="xpath" Type="System.String" Index="0" />
        <Parameter Name="context" Type="System.Xml.Xsl.XsltContext" Index="1" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="namespaces" Type="System.Xml.Xsl.XsltContext" Index="1" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="xpath"><span data-ttu-id="276d3-152">筛选器的 XPath 1.0 表达式。</span><span class="sxs-lookup"><span data-stu-id="276d3-152">The XPath 1.0 expression for the filter.</span></span></param>
        <param name="context"><span data-ttu-id="276d3-153">一个可解析 <see cref="T:System.Xml.Xsl.XsltContext" /> 中任何命名空间前缀、自定义函数或变量的 <paramref name="xpath" />。</span><span class="sxs-lookup"><span data-stu-id="276d3-153">An <see cref="T:System.Xml.Xsl.XsltContext" /> that resolves any namespace prefixes, custom functions or variables in <paramref name="xpath" />.</span></span></param>
        <param name="namespaces"><span data-ttu-id="276d3-154">一个可解析 <see cref="T:System.Xml.Xsl.XsltContext" /> 中任何命名空间前缀、自定义函数或变量的 <paramref name="xpath" />。</span><span class="sxs-lookup"><span data-stu-id="276d3-154">An <see cref="T:System.Xml.Xsl.XsltContext" /> that resolves any namespace prefixes, custom functions or variables in <paramref name="xpath" />.</span></span></param>
        <summary><span data-ttu-id="276d3-155">使用指定的 XPath 表达式和 <see cref="T:System.ServiceModel.Dispatcher.XPathMessageFilter" /> 初始化 <see cref="T:System.Xml.Xsl.XsltContext" /> 类的一个新实例。</span><span class="sxs-lookup"><span data-stu-id="276d3-155">Initializes a new instance of the <see cref="T:System.ServiceModel.Dispatcher.XPathMessageFilter" /> class using a specified XPath expression and <see cref="T:System.Xml.Xsl.XsltContext" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XPathMessageFilter (System.Xml.XmlReader reader, System.Xml.Xsl.XsltContext context);" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.XmlReader reader, class System.Xml.Xsl.XsltContext context) cil managed" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.XPathMessageFilter.#ctor(System.Xml.XmlReader,System.Xml.Xsl.XsltContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (reader As XmlReader, context As XsltContext)" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XPathMessageFilter(System::Xml::XmlReader ^ reader, System::Xml::Xsl::XsltContext ^ context);" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.Dispatcher.XPathMessageFilter : System.Xml.XmlReader * System.Xml.Xsl.XsltContext -&gt; System.ServiceModel.Dispatcher.XPathMessageFilter" Usage="new System.ServiceModel.Dispatcher.XPathMessageFilter (reader, context)" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C#" Value="public XPathMessageFilter (System.Xml.XmlReader reader, System.Xml.Xsl.XsltContext namespaces);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.XmlReader reader, class System.Xml.Xsl.XsltContext namespaces) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (reader As XmlReader, namespaces As XsltContext)" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XPathMessageFilter(System::Xml::XmlReader ^ reader, System::Xml::Xsl::XsltContext ^ namespaces);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.Dispatcher.XPathMessageFilter : System.Xml.XmlReader * System.Xml.Xsl.XsltContext -&gt; System.ServiceModel.Dispatcher.XPathMessageFilter" Usage="new System.ServiceModel.Dispatcher.XPathMessageFilter (reader, namespaces)" FrameworkAlternate="xamarinmac-3.0" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" Index="0" />
        <Parameter Name="context" Type="System.Xml.Xsl.XsltContext" Index="1" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="namespaces" Type="System.Xml.Xsl.XsltContext" Index="1" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="276d3-156">用于读取流式 XPath 表达式的 <see cref="T:System.Xml.XmlReader" />。</span><span class="sxs-lookup"><span data-stu-id="276d3-156">The <see cref="T:System.Xml.XmlReader" /> to read the streamed XPath expression.</span></span></param>
        <param name="context"><span data-ttu-id="276d3-157">一个可解析来自 <see cref="T:System.Xml.Xsl.XsltContext" /> 的 XPath 表达式中的任何命名空间前缀、函数和变量的 <paramref name="reader" />。</span><span class="sxs-lookup"><span data-stu-id="276d3-157">An <see cref="T:System.Xml.Xsl.XsltContext" /> that resolves any namespace prefixes, functions, and variables in the XPath expression from <paramref name="reader" />.</span></span></param>
        <param name="namespaces"><span data-ttu-id="276d3-158">一个可解析来自 <see cref="T:System.Xml.Xsl.XsltContext" /> 的 XPath 表达式中的任何命名空间前缀、函数和变量的 <paramref name="reader" />。</span><span class="sxs-lookup"><span data-stu-id="276d3-158">An <see cref="T:System.Xml.Xsl.XsltContext" /> that resolves any namespace prefixes, functions, and variables in the XPath expression from <paramref name="reader" />.</span></span></param>
        <summary><span data-ttu-id="276d3-159">通过使用指定的 XML 读取器读取流式 XPath 以及使用 <see cref="T:System.ServiceModel.Dispatcher.XPathMessageFilter" /> 解析命名空间、自定义函数和变量来初始化 <see cref="T:System.Xml.Xsl.XsltContext" /> 类的一个新实例。</span><span class="sxs-lookup"><span data-stu-id="276d3-159">Initializes a new instance of the <see cref="T:System.ServiceModel.Dispatcher.XPathMessageFilter" /> class by reading a streamed XPath with a specified XML reader and using the <see cref="T:System.Xml.Xsl.XsltContext" /> to resolve namespaces, custom functions, and variables.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="276d3-160">当要使用您自己的 <xref:System.Xml.XmlReader> 以及 <xref:System.Xml.XmlNamespaceManager> 定义筛选器时，请使用此方法。</span><span class="sxs-lookup"><span data-stu-id="276d3-160">Use this constructor when you want to use your own <xref:System.Xml.XmlReader> and <xref:System.Xml.XmlNamespaceManager> to define the filter.</span></span>  
  
 <span data-ttu-id="276d3-161">假设读取器位于序列化 `XPathMessageFilter` 的开始元素处。</span><span class="sxs-lookup"><span data-stu-id="276d3-161">It is assumed that the reader is positioned at the start element of the serialized `XPathMessageFilter`.</span></span> <span data-ttu-id="276d3-162">读取之前不验证元素的名称。</span><span class="sxs-lookup"><span data-stu-id="276d3-162">The name of the element is not validated before reading.</span></span> <span data-ttu-id="276d3-163">当此方法返回时，读取器定位在紧靠序列化 `XPathMessageFilter` 后面的位置。</span><span class="sxs-lookup"><span data-stu-id="276d3-163">When this method returns, the reader is positioned immediately after the serialized `XPathMessageFilter`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="276d3-164"><paramref name="reader" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="276d3-164"><paramref name="reader" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateFilterTable&lt;FilterData&gt;">
      <MemberSignature Language="C#" Value="protected internal override System.ServiceModel.Dispatcher.IMessageFilterTable&lt;FilterData&gt; CreateFilterTable&lt;FilterData&gt; ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance class System.ServiceModel.Dispatcher.IMessageFilterTable`1&lt;!!FilterData&gt; CreateFilterTable&lt;FilterData&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.XPathMessageFilter.CreateFilterTable``1" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function CreateFilterTable(Of FilterData) () As IMessageFilterTable(Of FilterData)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA;generic &lt;typename FilterData&gt;&#xA; override System::ServiceModel::Dispatcher::IMessageFilterTable&lt;FilterData&gt; ^ CreateFilterTable();" />
      <MemberSignature Language="F#" Value="override this.CreateFilterTable : unit -&gt; System.ServiceModel.Dispatcher.IMessageFilterTable&lt;'FilterData&gt;" Usage="xPathMessageFilter.CreateFilterTable " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Dispatcher.IMessageFilterTable&lt;FilterData&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="FilterData" />
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="FilterData"><span data-ttu-id="276d3-165">与表中的筛选器关联的数据。</span><span class="sxs-lookup"><span data-stu-id="276d3-165">Data associated with the filters in the table.</span></span></typeparam>
        <summary><span data-ttu-id="276d3-166">创建具有与其关联的指定类型的数据的 <see cref="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />。</span><span class="sxs-lookup"><span data-stu-id="276d3-166">Creates an <see cref="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" /> that has a specified type of data associated with it.</span></span></summary>
        <returns><span data-ttu-id="276d3-167">与 <see cref="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" /> 关联的筛选器可以添加到的 <paramref name="FilterData" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="276d3-167">An <see cref="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" /> object to which filters associated with <paramref name="FilterData" /> can be added.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="276d3-168">此方法由 <xref:System.ServiceModel.Dispatcher.MessageFilterTable%601> 调用。</span><span class="sxs-lookup"><span data-stu-id="276d3-168">This method is called by <xref:System.ServiceModel.Dispatcher.MessageFilterTable%601>.</span></span> <span data-ttu-id="276d3-169">用户应通过调用筛选器表的构造函数来创建筛选器表。</span><span class="sxs-lookup"><span data-stu-id="276d3-169">Users should create a filter table by calling a constructor for the filter table.</span></span> <span data-ttu-id="276d3-170">此实现返回 <xref:System.ServiceModel.Dispatcher.XPathMessageFilterTable%601> 实例。</span><span class="sxs-lookup"><span data-stu-id="276d3-170">This implementation returns an instance of <xref:System.ServiceModel.Dispatcher.XPathMessageFilterTable%601>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Match">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="276d3-171">确定消息或 XML 文档是否满足 XPath 筛选器的查询条件。</span><span class="sxs-lookup"><span data-stu-id="276d3-171">Determines whether a message or XML document satisfies the query criteria of the XPath filter.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="276d3-172">这些方法根据一条消息检查一个筛选器。</span><span class="sxs-lookup"><span data-stu-id="276d3-172">These methods check one filter against a message.</span></span> <span data-ttu-id="276d3-173">如果需要利用多个筛选器检查消息，则请将筛选器放置到筛选器表中，然后使用表提供的匹配方法。</span><span class="sxs-lookup"><span data-stu-id="276d3-173">If you need to check the message against multiple filters, put the filters into a filter table and then use the match methods provided by the table.</span></span>  
  
 <span data-ttu-id="276d3-174">如果只需要测试消息头，而不需要测试消息正文，则请使用 <xref:System.ServiceModel.Dispatcher.XPathMessageFilter.Match%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="276d3-174">If you only need to test the message headers and not the message body, use the <xref:System.ServiceModel.Dispatcher.XPathMessageFilter.Match%2A> method.</span></span>  
  
 <span data-ttu-id="276d3-175">如果需要测试部分消息正文，请使用 <xref:System.ServiceModel.Dispatcher.XPathMessageFilter.Match%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="276d3-175">If you need to test parts of the message body, use the <xref:System.ServiceModel.Dispatcher.XPathMessageFilter.Match%2A> method.</span></span>  
  
 <span data-ttu-id="276d3-176">对于涉及 XPath 查询的测试，请使用 <xref:System.ServiceModel.Dispatcher.XPathMessageFilter.Match%2A> 的剩余重载之一。</span><span class="sxs-lookup"><span data-stu-id="276d3-176">For tests that involve XPath queries, use one of the remaining overloads of the <xref:System.ServiceModel.Dispatcher.XPathMessageFilter.Match%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Match">
      <MemberSignature Language="C#" Value="public override bool Match (System.ServiceModel.Channels.Message message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Match(class System.ServiceModel.Channels.Message message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.XPathMessageFilter.Match(System.ServiceModel.Channels.Message)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Match (message As Message) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Match(System::ServiceModel::Channels::Message ^ message);" />
      <MemberSignature Language="F#" Value="override this.Match : System.ServiceModel.Channels.Message -&gt; bool" Usage="xPathMessageFilter.Match message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.ServiceModel.Channels.Message" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="276d3-177">要测试的 <see cref="T:System.ServiceModel.Channels.Message" />。</span><span class="sxs-lookup"><span data-stu-id="276d3-177">The <see cref="T:System.ServiceModel.Channels.Message" /> to test.</span></span></param>
        <summary><span data-ttu-id="276d3-178">测试指定的消息是否满足 XPath 筛选器的标准。</span><span class="sxs-lookup"><span data-stu-id="276d3-178">Tests whether a specified message satisfies the criteria of the XPath filter.</span></span> <span data-ttu-id="276d3-179">此格式不允许访问消息的正文。</span><span class="sxs-lookup"><span data-stu-id="276d3-179">This form is not allowed to access the body of the message.</span></span></summary>
        <returns><span data-ttu-id="276d3-180">如果 <see cref="T:System.ServiceModel.Channels.Message" /> 满足筛选条件，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="276d3-180"><see langword="true" /> if the <see cref="T:System.ServiceModel.Channels.Message" /> satisfies the filter criteria; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="276d3-181">使用 <xref:System.ServiceModel.Dispatcher.XPathMessageFilter.Match%2A?displayProperty=nameWithType> 方法与正文的元素相匹配。</span><span class="sxs-lookup"><span data-stu-id="276d3-181">Use the <xref:System.ServiceModel.Dispatcher.XPathMessageFilter.Match%2A?displayProperty=nameWithType> method to match elements from the body.</span></span> <span data-ttu-id="276d3-182">如果引擎尝试访问消息正文以便评估 XPath 表达式，则由此方法引发异常。</span><span class="sxs-lookup"><span data-stu-id="276d3-182">An exception is thrown by this method if the engine attempts to access the message body in order to evaluate the XPath expression.</span></span> <span data-ttu-id="276d3-183">这样可帮助确保筛选器引擎不访问正文流。</span><span class="sxs-lookup"><span data-stu-id="276d3-183">This helps to ensure that the filter engine does not access the body stream.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="276d3-184"><paramref name="message" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="276d3-184"><paramref name="message" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ServiceModel.Dispatcher.InvalidBodyAccessException"><span data-ttu-id="276d3-185">XPath 评估尝试检查消息的正文。</span><span class="sxs-lookup"><span data-stu-id="276d3-185">The XPath evaluation attempted to examine the body of the message.</span></span></exception>
        <exception cref="T:System.Xml.XPath.XPathException"><span data-ttu-id="276d3-186">发生了编译器错误。</span><span class="sxs-lookup"><span data-stu-id="276d3-186">A compiler error occurred.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Match">
      <MemberSignature Language="C#" Value="public override bool Match (System.ServiceModel.Channels.MessageBuffer messageBuffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Match(class System.ServiceModel.Channels.MessageBuffer messageBuffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.XPathMessageFilter.Match(System.ServiceModel.Channels.MessageBuffer)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Match (messageBuffer As MessageBuffer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Match(System::ServiceModel::Channels::MessageBuffer ^ messageBuffer);" />
      <MemberSignature Language="F#" Value="override this.Match : System.ServiceModel.Channels.MessageBuffer -&gt; bool" Usage="xPathMessageFilter.Match messageBuffer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="messageBuffer" Type="System.ServiceModel.Channels.MessageBuffer" />
      </Parameters>
      <Docs>
        <param name="messageBuffer"><span data-ttu-id="276d3-187">要测试的 <see cref="T:System.ServiceModel.Channels.MessageBuffer" />。</span><span class="sxs-lookup"><span data-stu-id="276d3-187">The <see cref="T:System.ServiceModel.Channels.MessageBuffer" /> to test.</span></span></param>
        <summary><span data-ttu-id="276d3-188">确定缓冲消息是否满足 XPath 筛选器的查询条件。</span><span class="sxs-lookup"><span data-stu-id="276d3-188">Determines whether a buffered message satisfies the query criteria of the XPath filter.</span></span></summary>
        <returns><span data-ttu-id="276d3-189">如果 <see cref="M:System.ServiceModel.Dispatcher.XPathMessageFilter.Match(System.ServiceModel.Channels.MessageBuffer)" /> 满足筛选条件，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="276d3-189"><see langword="true" /> if the <see cref="M:System.ServiceModel.Dispatcher.XPathMessageFilter.Match(System.ServiceModel.Channels.MessageBuffer)" /> satisfies the filter criteria; otherwise <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="276d3-190">当 <xref:System.ServiceModel.Dispatcher.XPathMessageFilter.Match%2A> 为可用时，使用 <xref:System.ServiceModel.Channels.MessageBuffer> 方法的此重载。</span><span class="sxs-lookup"><span data-stu-id="276d3-190">Use this overload of the <xref:System.ServiceModel.Dispatcher.XPathMessageFilter.Match%2A> method when a <xref:System.ServiceModel.Channels.MessageBuffer> is available.</span></span> <span data-ttu-id="276d3-191">此格式允许检查消息的正文。</span><span class="sxs-lookup"><span data-stu-id="276d3-191">This form is allowed to examine the body of the message.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="276d3-192"><paramref name="message" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="276d3-192"><paramref name="message" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Xml.XPath.XPathException"><span data-ttu-id="276d3-193">发生了编译器错误。</span><span class="sxs-lookup"><span data-stu-id="276d3-193">A compiler error occurred.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Match">
      <MemberSignature Language="C#" Value="public bool Match (System.ServiceModel.Dispatcher.SeekableXPathNavigator navigator);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Match(class System.ServiceModel.Dispatcher.SeekableXPathNavigator navigator) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.XPathMessageFilter.Match(System.ServiceModel.Dispatcher.SeekableXPathNavigator)" />
      <MemberSignature Language="VB.NET" Value="Public Function Match (navigator As SeekableXPathNavigator) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Match(System::ServiceModel::Dispatcher::SeekableXPathNavigator ^ navigator);" />
      <MemberSignature Language="F#" Value="override this.Match : System.ServiceModel.Dispatcher.SeekableXPathNavigator -&gt; bool" Usage="xPathMessageFilter.Match navigator" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="navigator" Type="System.ServiceModel.Dispatcher.SeekableXPathNavigator" />
      </Parameters>
      <Docs>
        <param name="navigator"><span data-ttu-id="276d3-194">提供要进行测试的数据的 <see cref="T:System.ServiceModel.Dispatcher.SeekableXPathNavigator" />。</span><span class="sxs-lookup"><span data-stu-id="276d3-194">The <see cref="T:System.ServiceModel.Dispatcher.SeekableXPathNavigator" /> that provides data to test.</span></span></param>
        <summary><span data-ttu-id="276d3-195">确定由指定的优化 XPath 导航器提供的 XML 文档是否满足 XPath 筛选器的查询条件。</span><span class="sxs-lookup"><span data-stu-id="276d3-195">Determines whether the XML document provided by the specified optimized XPath navigator satisfies the query criteria of the XPath filter.</span></span></summary>
        <returns><span data-ttu-id="276d3-196">如果 <see langword="true" /> 中的数据满足筛选条件，则为 <see cref="T:System.ServiceModel.Dispatcher.SeekableXPathNavigator" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="276d3-196"><see langword="true" /> if the data from the <see cref="T:System.ServiceModel.Dispatcher.SeekableXPathNavigator" /> satisfies the filter criteria; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="276d3-197"><xref:System.ServiceModel.Dispatcher.SeekableXPathNavigator> 类通过更有效的运行查询的方法扩展 <xref:System.Xml.XPath.XPathNavigator> 类。</span><span class="sxs-lookup"><span data-stu-id="276d3-197">The <xref:System.ServiceModel.Dispatcher.SeekableXPathNavigator> class extends the <xref:System.Xml.XPath.XPathNavigator> class with methods that run queries more efficiently.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="276d3-198"><paramref name="navigator" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="276d3-198"><paramref name="navigator" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Xml.XPath.XPathException"><span data-ttu-id="276d3-199">发生了编译器错误。</span><span class="sxs-lookup"><span data-stu-id="276d3-199">A compiler error occurred.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Match">
      <MemberSignature Language="C#" Value="public bool Match (System.Xml.XPath.XPathNavigator navigator);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Match(class System.Xml.XPath.XPathNavigator navigator) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.XPathMessageFilter.Match(System.Xml.XPath.XPathNavigator)" />
      <MemberSignature Language="VB.NET" Value="Public Function Match (navigator As XPathNavigator) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Match(System::Xml::XPath::XPathNavigator ^ navigator);" />
      <MemberSignature Language="F#" Value="override this.Match : System.Xml.XPath.XPathNavigator -&gt; bool" Usage="xPathMessageFilter.Match navigator" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="navigator" Type="System.Xml.XPath.XPathNavigator" />
      </Parameters>
      <Docs>
        <param name="navigator"><span data-ttu-id="276d3-200">提供要进行测试的数据的 <see cref="T:System.Xml.XPath.XPathNavigator" />。</span><span class="sxs-lookup"><span data-stu-id="276d3-200">The <see cref="T:System.Xml.XPath.XPathNavigator" /> that provides data to test.</span></span></param>
        <summary><span data-ttu-id="276d3-201">通过指定的 XPath 导航器评估筛选器。</span><span class="sxs-lookup"><span data-stu-id="276d3-201">Evaluates the filter over the specified XPath navigator.</span></span></summary>
        <returns><span data-ttu-id="276d3-202">如果 <see cref="T:System.Xml.XPath.XPathNavigator" /> 中的数据满足筛选条件，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="276d3-202"><see langword="true" /> if the data from the <see cref="T:System.Xml.XPath.XPathNavigator" /> satisfies the filter criteria; <see langword="false" /> otherwise.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="276d3-203"><paramref name="navigator" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="276d3-203"><paramref name="navigator" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Xml.XPath.XPathException"><span data-ttu-id="276d3-204">发生了编译器错误。</span><span class="sxs-lookup"><span data-stu-id="276d3-204">A compiler error occurred.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Namespaces">
      <MemberSignature Language="C#" Value="public System.Xml.XmlNamespaceManager Namespaces { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlNamespaceManager Namespaces" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.XPathMessageFilter.Namespaces" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Namespaces As XmlNamespaceManager" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::XmlNamespaceManager ^ Namespaces { System::Xml::XmlNamespaceManager ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Namespaces : System.Xml.XmlNamespaceManager" Usage="System.ServiceModel.Dispatcher.XPathMessageFilter.Namespaces" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNamespaceManager</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="276d3-205">获取可解析用于定义筛选器的 XPath 表达式中的命名空间前缀的管理器。</span><span class="sxs-lookup"><span data-stu-id="276d3-205">Gets the manager that resolves namespace prefixes in the XPath expression that defines the filter.</span></span></summary>
        <value><span data-ttu-id="276d3-206">当前 <see cref="T:System.Xml.XmlNamespaceManager" /> 的 <see cref="T:System.ServiceModel.Dispatcher.XPathMessageFilter" />。</span><span class="sxs-lookup"><span data-stu-id="276d3-206">The <see cref="T:System.Xml.XmlNamespaceManager" /> for the current <see cref="T:System.ServiceModel.Dispatcher.XPathMessageFilter" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="276d3-207"><xref:System.ServiceModel.Dispatcher.XPathMessageFilter.Namespaces%2A> 属性也可以是可定义自定义函数或变量的 <xref:System.Xml.Xsl.XsltContext>。</span><span class="sxs-lookup"><span data-stu-id="276d3-207">The <xref:System.ServiceModel.Dispatcher.XPathMessageFilter.Namespaces%2A> property can also be an <xref:System.Xml.Xsl.XsltContext> that defines custom function or variables.</span></span>  
  
 <span data-ttu-id="276d3-208">如果创建了筛选器，请不要修改命名空间管理器实例。</span><span class="sxs-lookup"><span data-stu-id="276d3-208">Do not modify the namespace manager instance once the filter is created.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NodeQuota">
      <MemberSignature Language="C#" Value="public int NodeQuota { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 NodeQuota" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.XPathMessageFilter.NodeQuota" />
      <MemberSignature Language="VB.NET" Value="Public Property NodeQuota As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int NodeQuota { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.NodeQuota : int with get, set" Usage="System.ServiceModel.Dispatcher.XPathMessageFilter.NodeQuota" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="276d3-209">获取或设置筛选器评估期间应查看的最大节点数。</span><span class="sxs-lookup"><span data-stu-id="276d3-209">Gets or sets the maximum number of nodes that should be looked at during filter evaluation.</span></span></summary>
        <value><span data-ttu-id="276d3-210">筛选器评估期间应查看的最大节点数。</span><span class="sxs-lookup"><span data-stu-id="276d3-210">The maximum number of nodes that should be looked at during filter evaluation.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="276d3-211">某些筛选器用于评估的开销极大，或需要长时间运行。</span><span class="sxs-lookup"><span data-stu-id="276d3-211">Some filters can be extremely expensive to evaluate or are very long running.</span></span> <span data-ttu-id="276d3-212">因为筛选器在 XML 文档上执行，所以设置计算限制的最好方法是指定在筛选器评估期间应查看的最大节点数。</span><span class="sxs-lookup"><span data-stu-id="276d3-212">Because filters operate on XML documents, the best way to set computational limits is to specify the maximum number of nodes that should be looked at during a filter evaluation.</span></span>  
  
 <span data-ttu-id="276d3-213">配额最初设置为 <xref:System.Int32.MaxValue>。</span><span class="sxs-lookup"><span data-stu-id="276d3-213">The quota is initially set to <xref:System.Int32.MaxValue>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="276d3-214">配额为零或负数。</span><span class="sxs-lookup"><span data-stu-id="276d3-214">The quota is zero or negative.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="OnGetSchema">
      <MemberSignature Language="C#" Value="protected virtual System.Xml.Schema.XmlSchema OnGetSchema ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xml.Schema.XmlSchema OnGetSchema() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.XPathMessageFilter.OnGetSchema" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OnGetSchema () As XmlSchema" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xml::Schema::XmlSchema ^ OnGetSchema();" />
      <MemberSignature Language="F#" Value="abstract member OnGetSchema : unit -&gt; System.Xml.Schema.XmlSchema&#xA;override this.OnGetSchema : unit -&gt; System.Xml.Schema.XmlSchema" Usage="xPathMessageFilter.OnGetSchema " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchema</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="276d3-215">获取当前 XML 文档的架构。</span><span class="sxs-lookup"><span data-stu-id="276d3-215">Gets the schema for the current XML document.</span></span></summary>
        <returns><span data-ttu-id="276d3-216">用于表示当前文档的 <see cref="T:System.Xml.Schema.XmlSchema" />。</span><span class="sxs-lookup"><span data-stu-id="276d3-216">The <see cref="T:System.Xml.Schema.XmlSchema" /> that represents the current document.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnReadXml">
      <MemberSignature Language="C#" Value="protected virtual void OnReadXml (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnReadXml(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.XPathMessageFilter.OnReadXml(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnReadXml (reader As XmlReader)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnReadXml(System::Xml::XmlReader ^ reader);" />
      <MemberSignature Language="F#" Value="abstract member OnReadXml : System.Xml.XmlReader -&gt; unit&#xA;override this.OnReadXml : System.Xml.XmlReader -&gt; unit" Usage="xPathMessageFilter.OnReadXml reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="276d3-217">用于读取 XML 文档的 <see cref="T:System.Xml.XmlReader" />。</span><span class="sxs-lookup"><span data-stu-id="276d3-217">The <see cref="T:System.Xml.XmlReader" /> used to read the XML document.</span></span></param>
        <summary><span data-ttu-id="276d3-218">读取当前 XML 节点。</span><span class="sxs-lookup"><span data-stu-id="276d3-218">Reads the current XML node.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="276d3-219"><paramref name="reader" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="276d3-219"><paramref name="reader" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="276d3-220"><paramref name="reader" /> 未定位在开始元素上。</span><span class="sxs-lookup"><span data-stu-id="276d3-220"><paramref name="reader" /> is not positioned on the starting element.</span></span>

<span data-ttu-id="276d3-221">- 或 -</span><span class="sxs-lookup"><span data-stu-id="276d3-221">-or-</span></span>

<span data-ttu-id="276d3-222"><paramref name="reader" /> 遇到空元素。</span><span class="sxs-lookup"><span data-stu-id="276d3-222"><paramref name="reader" /> encountered an empty element.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="276d3-223">节点的内容无效。</span><span class="sxs-lookup"><span data-stu-id="276d3-223">Content of a node is invalid.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="OnWriteXml">
      <MemberSignature Language="C#" Value="protected virtual void OnWriteXml (System.Xml.XmlWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnWriteXml(class System.Xml.XmlWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.XPathMessageFilter.OnWriteXml(System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnWriteXml (writer As XmlWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnWriteXml(System::Xml::XmlWriter ^ writer);" />
      <MemberSignature Language="F#" Value="abstract member OnWriteXml : System.Xml.XmlWriter -&gt; unit&#xA;override this.OnWriteXml : System.Xml.XmlWriter -&gt; unit" Usage="xPathMessageFilter.OnWriteXml writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="276d3-224">用于编写节点的 <see cref="T:System.Xml.XmlWriter" />。</span><span class="sxs-lookup"><span data-stu-id="276d3-224">The <see cref="T:System.Xml.XmlWriter" /> used to write the node.</span></span></param>
        <summary><span data-ttu-id="276d3-225">使用 <paramref name="writer" /> 编写节点。</span><span class="sxs-lookup"><span data-stu-id="276d3-225">Writes a node using <paramref name="writer" />.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="276d3-226"><paramref name="writer" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="276d3-226"><paramref name="writer" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReadXPath">
      <MemberSignature Language="C#" Value="protected void ReadXPath (System.Xml.XmlReader reader, System.Xml.XmlNamespaceManager namespaces);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void ReadXPath(class System.Xml.XmlReader reader, class System.Xml.XmlNamespaceManager namespaces) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.XPathMessageFilter.ReadXPath(System.Xml.XmlReader,System.Xml.XmlNamespaceManager)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub ReadXPath (reader As XmlReader, namespaces As XmlNamespaceManager)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void ReadXPath(System::Xml::XmlReader ^ reader, System::Xml::XmlNamespaceManager ^ namespaces);" />
      <MemberSignature Language="F#" Value="member this.ReadXPath : System.Xml.XmlReader * System.Xml.XmlNamespaceManager -&gt; unit" Usage="xPathMessageFilter.ReadXPath (reader, namespaces)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
        <Parameter Name="namespaces" Type="System.Xml.XmlNamespaceManager" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="276d3-227">用于反序列化 XPath 筛选器的 <see cref="T:System.Xml.XmlReader" />。</span><span class="sxs-lookup"><span data-stu-id="276d3-227">The <see cref="T:System.Xml.XmlReader" /> used to deserialize the XPath filter.</span></span></param>
        <param name="namespaces"><span data-ttu-id="276d3-228">用于管理从其读取的命名空间的 <see cref="T:System.Xml.XmlNamespaceManager" />。</span><span class="sxs-lookup"><span data-stu-id="276d3-228">The <see cref="T:System.Xml.XmlNamespaceManager" /> used to manage the namespaces being read from.</span></span></param>
        <summary><span data-ttu-id="276d3-229">通过使用指定的命名空间管理器从指定的 XML 读取器获得的 XPath 来初始化 <see cref="T:System.ServiceModel.Dispatcher.XPathMessageFilter" /> 的当前实例。</span><span class="sxs-lookup"><span data-stu-id="276d3-229">Initializes the current instance of the <see cref="T:System.ServiceModel.Dispatcher.XPathMessageFilter" /> with an XPath obtained from a specified XML reader using a specified namespace manager.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="276d3-230">命名空间管理器实例可以是用于解析函数和变量的 <xref:System.Xml.Xsl.XsltContext>。</span><span class="sxs-lookup"><span data-stu-id="276d3-230">The namespace manager instance can be an <xref:System.Xml.Xsl.XsltContext> that is used to resolve functions and variables.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StaticGetSchema">
      <MemberSignature Language="C#" Value="public static System.Xml.Schema.XmlSchemaType StaticGetSchema (System.Xml.Schema.XmlSchemaSet schemas);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.Schema.XmlSchemaType StaticGetSchema(class System.Xml.Schema.XmlSchemaSet schemas) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.XPathMessageFilter.StaticGetSchema(System.Xml.Schema.XmlSchemaSet)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function StaticGetSchema (schemas As XmlSchemaSet) As XmlSchemaType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::Schema::XmlSchemaType ^ StaticGetSchema(System::Xml::Schema::XmlSchemaSet ^ schemas);" />
      <MemberSignature Language="F#" Value="static member StaticGetSchema : System.Xml.Schema.XmlSchemaSet -&gt; System.Xml.Schema.XmlSchemaType" Usage="System.ServiceModel.Dispatcher.XPathMessageFilter.StaticGetSchema schemas" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchemaType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="schemas" Type="System.Xml.Schema.XmlSchemaSet" />
      </Parameters>
      <Docs>
        <param name="schemas"><span data-ttu-id="276d3-231">包含 XML 架构定义语言 (XSD) 架构的缓存的 <see cref="T:System.Xml.Schema.XmlSchemaSet" />。</span><span class="sxs-lookup"><span data-stu-id="276d3-231">The <see cref="T:System.Xml.Schema.XmlSchemaSet" /> that contains the cache of XML Schema definition language (XSD) schemas.</span></span></param>
        <summary><span data-ttu-id="276d3-232">获取用于序列化 XPath 筛选器的 XML 架构的类型。</span><span class="sxs-lookup"><span data-stu-id="276d3-232">Gets the type of XML schema used to serialize the XPath filter.</span></span></summary>
        <returns><span data-ttu-id="276d3-233">用于序列化 XPath 筛选器的 <see cref="T:System.Xml.Schema.XmlSchemaType" />。</span><span class="sxs-lookup"><span data-stu-id="276d3-233">The <see cref="T:System.Xml.Schema.XmlSchemaType" /> used to serialize the XPath filter.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="276d3-234"><paramref name="schemas" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="276d3-234"><paramref name="schemas" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Xml.Serialization.IXmlSerializable.GetSchema">
      <MemberSignature Language="C#" Value="System.Xml.Schema.XmlSchema IXmlSerializable.GetSchema ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Xml.Schema.XmlSchema System.Xml.Serialization.IXmlSerializable.GetSchema() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.XPathMessageFilter.System#Xml#Serialization#IXmlSerializable#GetSchema" />
      <MemberSignature Language="VB.NET" Value="Function GetSchema () As XmlSchema Implements IXmlSerializable.GetSchema" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Xml::Schema::XmlSchema ^ System.Xml.Serialization.IXmlSerializable.GetSchema() = System::Xml::Serialization::IXmlSerializable::GetSchema;" />
      <MemberSignature Language="F#" Value="abstract member System.Xml.Serialization.IXmlSerializable.GetSchema : unit -&gt; System.Xml.Schema.XmlSchema&#xA;override this.System.Xml.Serialization.IXmlSerializable.GetSchema : unit -&gt; System.Xml.Schema.XmlSchema" Usage="xPathMessageFilter.System.Xml.Serialization.IXmlSerializable.GetSchema " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Xml.Serialization.IXmlSerializable.GetSchema</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchema</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="276d3-235">获取当前架构的显式接口实现。</span><span class="sxs-lookup"><span data-stu-id="276d3-235">An explicit interface implementation that gets the current schema.</span></span></summary>
        <returns><span data-ttu-id="276d3-236">用于表示当前文档的 <see cref="T:System.Xml.Schema.XmlSchema" />。</span><span class="sxs-lookup"><span data-stu-id="276d3-236">The <see cref="T:System.Xml.Schema.XmlSchema" /> that represents the current document.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Xml.Serialization.IXmlSerializable.ReadXml">
      <MemberSignature Language="C#" Value="void IXmlSerializable.ReadXml (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Xml.Serialization.IXmlSerializable.ReadXml(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.XPathMessageFilter.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Sub ReadXml (reader As XmlReader) Implements IXmlSerializable.ReadXml" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Xml.Serialization.IXmlSerializable.ReadXml(System::Xml::XmlReader ^ reader) = System::Xml::Serialization::IXmlSerializable::ReadXml;" />
      <MemberSignature Language="F#" Value="abstract member System.Xml.Serialization.IXmlSerializable.ReadXml : System.Xml.XmlReader -&gt; unit&#xA;override this.System.Xml.Serialization.IXmlSerializable.ReadXml : System.Xml.XmlReader -&gt; unit" Usage="xPathMessageFilter.System.Xml.Serialization.IXmlSerializable.ReadXml reader" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="276d3-237">用于读取 XML 文档的 <see cref="T:System.Xml.XmlReader" />。</span><span class="sxs-lookup"><span data-stu-id="276d3-237">The <see cref="T:System.Xml.XmlReader" /> used to read the XML document.</span></span></param>
        <summary><span data-ttu-id="276d3-238">读取当前 XML 节点的显式接口实现。</span><span class="sxs-lookup"><span data-stu-id="276d3-238">An explicit interface implementation that reads the current XML node.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Xml.Serialization.IXmlSerializable.WriteXml">
      <MemberSignature Language="C#" Value="void IXmlSerializable.WriteXml (System.Xml.XmlWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Xml.Serialization.IXmlSerializable.WriteXml(class System.Xml.XmlWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.XPathMessageFilter.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Sub WriteXml (writer As XmlWriter) Implements IXmlSerializable.WriteXml" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Xml.Serialization.IXmlSerializable.WriteXml(System::Xml::XmlWriter ^ writer) = System::Xml::Serialization::IXmlSerializable::WriteXml;" />
      <MemberSignature Language="F#" Value="abstract member System.Xml.Serialization.IXmlSerializable.WriteXml : System.Xml.XmlWriter -&gt; unit&#xA;override this.System.Xml.Serialization.IXmlSerializable.WriteXml : System.Xml.XmlWriter -&gt; unit" Usage="xPathMessageFilter.System.Xml.Serialization.IXmlSerializable.WriteXml writer" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="276d3-239">用于编写节点的 <see cref="T:System.Xml.XmlWriter" />。</span><span class="sxs-lookup"><span data-stu-id="276d3-239">The <see cref="T:System.Xml.XmlWriter" /> used to write the node.</span></span></param>
        <summary><span data-ttu-id="276d3-240">使用 <paramref name="writer" /> 编写 XML 节点的显式接口实现。</span><span class="sxs-lookup"><span data-stu-id="276d3-240">An explicit interface implementation that writes an XML node using <paramref name="writer" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TrimToSize">
      <MemberSignature Language="C#" Value="public void TrimToSize ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void TrimToSize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.XPathMessageFilter.TrimToSize" />
      <MemberSignature Language="VB.NET" Value="Public Sub TrimToSize ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void TrimToSize();" />
      <MemberSignature Language="F#" Value="member this.TrimToSize : unit -&gt; unit" Usage="xPathMessageFilter.TrimToSize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="276d3-241">压缩 XPath 筛选器，释放所有未使用的内存。</span><span class="sxs-lookup"><span data-stu-id="276d3-241">Compacts the XPath filter, which releases all unused memory.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="276d3-242">此操作类似于调整数组的大小，以便此数组不具有未使用的元素。</span><span class="sxs-lookup"><span data-stu-id="276d3-242">This operation is similar to the resizing of an array so that it has no unused elements.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="276d3-243">在所有情况下。</span><span class="sxs-lookup"><span data-stu-id="276d3-243">In all cases.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteXPath">
      <MemberSignature Language="C#" Value="protected void WriteXPath (System.Xml.XmlWriter writer, System.Xml.IXmlNamespaceResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void WriteXPath(class System.Xml.XmlWriter writer, class System.Xml.IXmlNamespaceResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.XPathMessageFilter.WriteXPath(System.Xml.XmlWriter,System.Xml.IXmlNamespaceResolver)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub WriteXPath (writer As XmlWriter, resolver As IXmlNamespaceResolver)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void WriteXPath(System::Xml::XmlWriter ^ writer, System::Xml::IXmlNamespaceResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="member this.WriteXPath : System.Xml.XmlWriter * System.Xml.IXmlNamespaceResolver -&gt; unit" Usage="xPathMessageFilter.WriteXPath (writer, resolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
        <Parameter Name="resolver" Type="System.Xml.IXmlNamespaceResolver" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="276d3-244">用于序列化 XPath 筛选器的 <see cref="T:System.Xml.XmlWriter" />。</span><span class="sxs-lookup"><span data-stu-id="276d3-244">The <see cref="T:System.Xml.XmlWriter" /> used to serialize the XPath filter.</span></span></param>
        <param name="resolver"><span data-ttu-id="276d3-245">用于解决 XPath 筛选器的任何命名空间冲突 <see cref="T:System.Xml.IXmlNamespaceResolver" />。</span><span class="sxs-lookup"><span data-stu-id="276d3-245">The <see cref="T:System.Xml.IXmlNamespaceResolver" /> used to resolve any namespace conflict for the XPath filter.</span></span></param>
        <summary><span data-ttu-id="276d3-246">将 XPath 筛选器序列化到 <see cref="T:System.Xml.XmlWriter" />。</span><span class="sxs-lookup"><span data-stu-id="276d3-246">Serializes the XPath filter to an <see cref="T:System.Xml.XmlWriter" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="276d3-247">`writer`必须处于*启动*状态。</span><span class="sxs-lookup"><span data-stu-id="276d3-247">The `writer` must be in the *Start* state.</span></span> <span data-ttu-id="276d3-248">否则会引发异常。</span><span class="sxs-lookup"><span data-stu-id="276d3-248">Otherwise an exception is thrown.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteXPathTo">
      <MemberSignature Language="C#" Value="public void WriteXPathTo (System.Xml.XmlWriter writer, string prefix, string localName, string ns, bool writeNamespaces);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteXPathTo(class System.Xml.XmlWriter writer, string prefix, string localName, string ns, bool writeNamespaces) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.XPathMessageFilter.WriteXPathTo(System.Xml.XmlWriter,System.String,System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteXPathTo (writer As XmlWriter, prefix As String, localName As String, ns As String, writeNamespaces As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteXPathTo(System::Xml::XmlWriter ^ writer, System::String ^ prefix, System::String ^ localName, System::String ^ ns, bool writeNamespaces);" />
      <MemberSignature Language="F#" Value="member this.WriteXPathTo : System.Xml.XmlWriter * string * string * string * bool -&gt; unit" Usage="xPathMessageFilter.WriteXPathTo (writer, prefix, localName, ns, writeNamespaces)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
        <Parameter Name="prefix" Type="System.String" />
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="ns" Type="System.String" />
        <Parameter Name="writeNamespaces" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="276d3-249">用于编写 <see cref="T:System.Xml.XmlWriter" /> 的 <see cref="T:System.ServiceModel.Dispatcher.XPathMessageFilter" />。</span><span class="sxs-lookup"><span data-stu-id="276d3-249">The <see cref="T:System.Xml.XmlWriter" /> used to write the <see cref="T:System.ServiceModel.Dispatcher.XPathMessageFilter" />.</span></span></param>
        <param name="prefix"><span data-ttu-id="276d3-250">XPath XML 元素的命名空间前缀。</span><span class="sxs-lookup"><span data-stu-id="276d3-250">The namespace prefix of the XPath XML element.</span></span></param>
        <param name="localName"><span data-ttu-id="276d3-251">XPath XML 元素的本地名称。</span><span class="sxs-lookup"><span data-stu-id="276d3-251">The local name of the XPath XML element.</span></span></param>
        <param name="ns"><span data-ttu-id="276d3-252">要与 XML 元素关联的命名空间 URI。</span><span class="sxs-lookup"><span data-stu-id="276d3-252">The namespace URI to associate with the XML element.</span></span></param>
        <param name="writeNamespaces"><span data-ttu-id="276d3-253">如果命名空间应作为属性被单独序列化，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="276d3-253"><see langword="true" /> if namespaces should be serialized out separately as attributes; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="276d3-254">使用指定的 XML 编写器编写 XML XPath 元素。</span><span class="sxs-lookup"><span data-stu-id="276d3-254">Writes the XML XPath element with a specified XML writer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="276d3-255">`writer`必须处于*启动*状态。</span><span class="sxs-lookup"><span data-stu-id="276d3-255">The `writer` must be in the *Start* state.</span></span> <span data-ttu-id="276d3-256">否则会引发异常。</span><span class="sxs-lookup"><span data-stu-id="276d3-256">Otherwise an exception is thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="276d3-257"><paramref name="writer" /> 或 <paramref name="localName" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="276d3-257"><paramref name="writer" /> or <paramref name="localName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="276d3-258"><paramref name="localName" /> 的长度等于 = 0。</span><span class="sxs-lookup"><span data-stu-id="276d3-258"><paramref name="localName" /> has length = 0.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="XPath">
      <MemberSignature Language="C#" Value="public string XPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string XPath" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.XPathMessageFilter.XPath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property XPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ XPath { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.XPath : string" Usage="System.ServiceModel.Dispatcher.XPathMessageFilter.XPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="276d3-259">获取可定义筛选器的查询条件的 XPath 表达式。</span><span class="sxs-lookup"><span data-stu-id="276d3-259">Gets the XPath expression that defines the query criteria for the filter.</span></span></summary>
        <value><span data-ttu-id="276d3-260">筛选器的 XPath 表达式。</span><span class="sxs-lookup"><span data-stu-id="276d3-260">The XPath expression for the filter.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
