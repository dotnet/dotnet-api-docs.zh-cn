<Type Name="XslCompiledTransform" FullName="System.Xml.Xsl.XslCompiledTransform">
  <Metadata><Meta Name="ms.openlocfilehash" Value="b6936640434a6ba1b45db2b5dd6b814d791ca217" /><Meta Name="ms.sourcegitcommit" Value="53b005dec6dcff97c7bac97cf446d9ae6bda93f0" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/24/2020" /><Meta Name="ms.locfileid" Value="91207922" /></Metadata><TypeSignature Language="C#" Value="public sealed class XslCompiledTransform" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit XslCompiledTransform extends System.Object" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Xsl.XslCompiledTransform" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class XslCompiledTransform" />
  <TypeSignature Language="C++ CLI" Value="public ref class XslCompiledTransform sealed" />
  <TypeSignature Language="F#" Value="type XslCompiledTransform = class" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed XslCompiledTransform extends System.Object" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.Xml.ReaderWriter" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="75c63-101">使用 XSLT 样式表转换 XML 数据。</span><span class="sxs-lookup"><span data-stu-id="75c63-101">Transforms XML data using an XSLT style sheet.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="75c63-102"><xref:System.Xml.Xsl.XslCompiledTransform>类是支持 xslt 1.0 语法的 xslt 处理器。</span><span class="sxs-lookup"><span data-stu-id="75c63-102">The <xref:System.Xml.Xsl.XslCompiledTransform> class is an XSLT processor that supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="75c63-103">这是一种新的实现，与过时的类相比，性能提升 <xref:System.Xml.Xsl.XslTransform> 。</span><span class="sxs-lookup"><span data-stu-id="75c63-103">It is a new implementation and includes performance gains when compared to the obsolete <xref:System.Xml.Xsl.XslTransform> class.</span></span> <span data-ttu-id="75c63-104">类的结构与 <xref:System.Xml.Xsl.XslCompiledTransform> 类非常相似 <xref:System.Xml.Xsl.XslTransform> 。</span><span class="sxs-lookup"><span data-stu-id="75c63-104">The structure of the <xref:System.Xml.Xsl.XslCompiledTransform> class is very similar to the <xref:System.Xml.Xsl.XslTransform> class.</span></span> <span data-ttu-id="75c63-105"><xref:System.Xml.Xsl.XslCompiledTransform.Load%2A>方法加载并编译样式表，而 <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> 方法执行 XSLT 转换。</span><span class="sxs-lookup"><span data-stu-id="75c63-105">The <xref:System.Xml.Xsl.XslCompiledTransform.Load%2A> method loads and compiles the style sheet, while the <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> method executes the XSLT transform.</span></span>  
  
 <span data-ttu-id="75c63-106">`document()`默认情况下，禁用对 XSLT 函数和嵌入式脚本块的支持。</span><span class="sxs-lookup"><span data-stu-id="75c63-106">Support for the XSLT `document()` function and embedded script blocks are disabled by default.</span></span> <span data-ttu-id="75c63-107">可以通过创建 <xref:System.Xml.Xsl.XsltSettings> 对象并将其传递给方法来启用这些功能 <xref:System.Xml.Xsl.XslCompiledTransform.Load%2A> 。</span><span class="sxs-lookup"><span data-stu-id="75c63-107">These features can be enabled by creating an <xref:System.Xml.Xsl.XsltSettings> object and passing it to the <xref:System.Xml.Xsl.XslCompiledTransform.Load%2A> method.</span></span>  
  
 <span data-ttu-id="75c63-108">有关详细信息，请参阅 [使用 XslCompiledTransform 类](/dotnet/standard/data/xml/using-the-xslcompiledtransform-class) 和 [从 XslTransform 类迁移](/dotnet/standard/data/xml/migrating-from-the-xsltransform-class)。</span><span class="sxs-lookup"><span data-stu-id="75c63-108">For more information, see [Using the XslCompiledTransform Class](/dotnet/standard/data/xml/using-the-xslcompiledtransform-class) and [Migrating From the XslTransform Class](/dotnet/standard/data/xml/migrating-from-the-xsltransform-class).</span></span>  
  
## <a name="security-considerations"></a><span data-ttu-id="75c63-109">安全注意事项</span><span class="sxs-lookup"><span data-stu-id="75c63-109">Security Considerations</span></span>  
 <span data-ttu-id="75c63-110">在创建使用 <xref:System.Xml.Xsl.XslCompiledTransform> 类的应用程序时，应了解下列项及其含义：</span><span class="sxs-lookup"><span data-stu-id="75c63-110">When creating an application that uses the <xref:System.Xml.Xsl.XslCompiledTransform> class, you should be aware of the following items and their implications:</span></span>  
  
-   <span data-ttu-id="75c63-111">默认情况下禁用 XSLT 脚本。</span><span class="sxs-lookup"><span data-stu-id="75c63-111">XSLT scripting is disabled by default.</span></span> <span data-ttu-id="75c63-112">只有要求脚本支持并且处于完全可信的环境下时，才应启用 XSLT 脚本。</span><span class="sxs-lookup"><span data-stu-id="75c63-112">XSLT scripting should be enabled only if you require script support and you are working in a fully trusted environment.</span></span>  
  
-   <span data-ttu-id="75c63-113">默认情况下禁用 XSLT `document()` 函数。</span><span class="sxs-lookup"><span data-stu-id="75c63-113">The XSLT `document()` function is disabled by default.</span></span> <span data-ttu-id="75c63-114">如果启用 `document()` 函数，通过将 <xref:System.Xml.XmlSecureResolver> 对象传递给 <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> 方法，限制可以访问的资源。</span><span class="sxs-lookup"><span data-stu-id="75c63-114">If you enable the `document()` function, restrict the resources that can be accessed by passing an <xref:System.Xml.XmlSecureResolver> object to the <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> method.</span></span>  
  
-   <span data-ttu-id="75c63-115">默认情况下启用扩展对象。</span><span class="sxs-lookup"><span data-stu-id="75c63-115">Extension objects are enabled by default.</span></span> <span data-ttu-id="75c63-116">如果包含扩展对象的 <xref:System.Xml.Xsl.XsltArgumentList> 对象传递给 <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> 方法，将利用这些扩展对象。</span><span class="sxs-lookup"><span data-stu-id="75c63-116">If an <xref:System.Xml.Xsl.XsltArgumentList> object containing extension objects is passed to the <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> method, they are utilized.</span></span>  
  
-   <span data-ttu-id="75c63-117">XSLT 样式表可以包括对其他文件的引用以及嵌入式脚本块。</span><span class="sxs-lookup"><span data-stu-id="75c63-117">XSLT style sheets can include references to other files and embedded script blocks.</span></span> <span data-ttu-id="75c63-118">恶意用户可能会利用这一点，方法是为您提供数据或样式表，在执行时，可能会使您的系统不断进行处理，直到计算机资源不足。</span><span class="sxs-lookup"><span data-stu-id="75c63-118">A malicious user can exploit this by supplying you with data or style sheets that when executed can cause your system to process until the computer runs low on resources.</span></span>  
  
-   <span data-ttu-id="75c63-119">在混合信任环境下运行的 XSLT 应用程序可能会引发样式表欺骗。</span><span class="sxs-lookup"><span data-stu-id="75c63-119">XSLT applications that run in a mixed trust environment can result in style sheet spoofing.</span></span> <span data-ttu-id="75c63-120">例如，恶意用户可能会为对象加载有害的样式表，并将其交给另一个用户，而后者会继续调用 <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> 方法并执行转换。</span><span class="sxs-lookup"><span data-stu-id="75c63-120">For example, a malicious user can load an object with a harmful style sheet and hand it off to another user who subsequently calls the <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> method and executes the transformation.</span></span>  
  
 <span data-ttu-id="75c63-121">如果不启用脚本或 `document()` 函数（除非样式表来自可信的源），或不接受来自不可信的源的 <xref:System.Xml.Xsl.XslCompiledTransform> 对象、XSLT 样式表或 XML 源数据，可以缓解这些安全问题。</span><span class="sxs-lookup"><span data-stu-id="75c63-121">These security issues can be mitigated by not enabling scripting or the `document()` function unless the style sheet comes from a trusted source, and by not accepting <xref:System.Xml.Xsl.XslCompiledTransform> objects, XSLT style sheets, or XML source data from an untrusted source.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="75c63-122">下面的示例执行转换并输出到文件。</span><span class="sxs-lookup"><span data-stu-id="75c63-122">The following example executes a transform and outputs to a file.</span></span>  
  
 [!code-csharp[XslCompiledTransform.Transform#1](~/samples/snippets/csharp/VS_Snippets_Data/XslCompiledTransform.Transform/CS/Xslt_Transform_v2.cs#1)]
 [!code-vb[XslCompiledTransform.Transform#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XslCompiledTransform.Transform/VB/Xslt_Transform_v2.vb#1)]  
  
 <span data-ttu-id="75c63-123">该示例使用以下两个输入文件：</span><span class="sxs-lookup"><span data-stu-id="75c63-123">The sample uses the following two input files:</span></span>  
  
 `books.xml`  
  
 [!code-xml[Classic WebData XslTransform.Transform7 Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/XML/books.xml#2)]  
  
 `output.xsl`  
  
 [!code-xml[Classic WebData XslTransform.Transform7 Example#3](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/XML/output.xsl#3)]  
  
 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="75c63-124"><see cref="T:System.Xml.Xsl.XslCompiledTransform" />加载对象后，该对象是线程安全的。</span><span class="sxs-lookup"><span data-stu-id="75c63-124">The <see cref="T:System.Xml.Xsl.XslCompiledTransform" /> object is thread safe once it has been loaded.</span></span> <span data-ttu-id="75c63-125">换言之， <see cref="Overload:System.Xml.Xsl.XslCompiledTransform.Load" /> 方法成功完成后， <see cref="Overload:System.Xml.Xsl.XslCompiledTransform.Transform" /> 可以从多个线程同时调用方法。</span><span class="sxs-lookup"><span data-stu-id="75c63-125">In other words, after the <see cref="Overload:System.Xml.Xsl.XslCompiledTransform.Load" /> method has successfully completed, the <see cref="Overload:System.Xml.Xsl.XslCompiledTransform.Transform" /> method can be called simultaneously from multiple threads.</span></span>  
  
<span data-ttu-id="75c63-126">如果在 <see cref="Overload:System.Xml.Xsl.XslCompiledTransform.Load" /> 另一个线程中调用方法时在一个线程中再次调用该方法 <see cref="Overload:System.Xml.Xsl.XslCompiledTransform.Transform" /> ，则该 <see cref="T:System.Xml.Xsl.XslCompiledTransform" /> 对象会 <see cref="Overload:System.Xml.Xsl.XslCompiledTransform.Transform" /> 通过继续使用旧状态来完成调用的执行。</span><span class="sxs-lookup"><span data-stu-id="75c63-126">If the <see cref="Overload:System.Xml.Xsl.XslCompiledTransform.Load" /> method is called again in one thread while the <see cref="Overload:System.Xml.Xsl.XslCompiledTransform.Transform" /> method is being called in another thread, the <see cref="T:System.Xml.Xsl.XslCompiledTransform" /> object finishes executing the <see cref="Overload:System.Xml.Xsl.XslCompiledTransform.Transform" /> call by continuing to use the old state.</span></span> <span data-ttu-id="75c63-127">方法成功完成后，将使用新状态 <see cref="Overload:System.Xml.Xsl.XslCompiledTransform.Load" /> 。</span><span class="sxs-lookup"><span data-stu-id="75c63-127">The new state is used when the <see cref="Overload:System.Xml.Xsl.XslCompiledTransform.Load" /> method successfully completes.</span></span>  
  
 <block subset="none" type="note"><para>  
 <span data-ttu-id="75c63-128"><see cref="Overload:System.Xml.Xsl.XslCompiledTransform.Load" />当同时从多个线程调用时，该方法不是线程安全的。</span><span class="sxs-lookup"><span data-stu-id="75c63-128">The <see cref="Overload:System.Xml.Xsl.XslCompiledTransform.Load" /> method is not thread safe when called simultaneously from multiple threads.</span></span>  
  
</para></block></threadsafe>
    <altmember cref="T:System.Xml.Xsl.XsltArgumentList" />
    <altmember cref="T:System.Xml.Xsl.XsltMessageEncounteredEventArgs" />
    <altmember cref="N:System.Xml" />
    <related type="Article" href="/dotnet/standard/data/xml/xslt-transformations"><span data-ttu-id="75c63-129">XSLT 转换</span><span class="sxs-lookup"><span data-stu-id="75c63-129">XSLT Transformations</span></span></related>
    <related type="Article" href="/dotnet/standard/data/xml/"><span data-ttu-id="75c63-130">XML 文档和数据</span><span class="sxs-lookup"><span data-stu-id="75c63-130">XML Documents and Data</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="75c63-131">初始化 <see cref="T:System.Xml.Xsl.XslCompiledTransform" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="75c63-131">Initializes a new instance of the <see cref="T:System.Xml.Xsl.XslCompiledTransform" /> class.</span></span></summary>
        <related type="Article" href="/dotnet/standard/data/xml/using-the-xslcompiledtransform-class"><span data-ttu-id="75c63-132">使用 XslCompiledTransform 类</span><span class="sxs-lookup"><span data-stu-id="75c63-132">Using the XslCompiledTransform Class</span></span></related>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XslCompiledTransform ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslCompiledTransform.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XslCompiledTransform();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="75c63-133">初始化 <see cref="T:System.Xml.Xsl.XslCompiledTransform" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="75c63-133">Initializes a new instance of the <see cref="T:System.Xml.Xsl.XslCompiledTransform" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="/dotnet/standard/data/xml/using-the-xslcompiledtransform-class"><span data-ttu-id="75c63-134">使用 XslCompiledTransform 类</span><span class="sxs-lookup"><span data-stu-id="75c63-134">Using the XslCompiledTransform Class</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XslCompiledTransform (bool enableDebug);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool enableDebug) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslCompiledTransform.#ctor(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (enableDebug As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XslCompiledTransform(bool enableDebug);" />
      <MemberSignature Language="F#" Value="new System.Xml.Xsl.XslCompiledTransform : bool -&gt; System.Xml.Xsl.XslCompiledTransform" Usage="new System.Xml.Xsl.XslCompiledTransform enableDebug" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="enableDebug" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="enableDebug"><span data-ttu-id="75c63-135">生成调试信息时为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="75c63-135"><see langword="true" /> to generate debug information; otherwise <see langword="false" />.</span></span> <span data-ttu-id="75c63-136">如果将其设置为 <see langword="true" />，您就可以使用 Microsoft Visual Studio 调试器对样式表进行调试。</span><span class="sxs-lookup"><span data-stu-id="75c63-136">Setting this to <see langword="true" /> enables you to debug the style sheet with the Microsoft Visual Studio Debugger.</span></span></param>
        <summary><span data-ttu-id="75c63-137">使用指定的调试设置初始化 <see cref="T:System.Xml.Xsl.XslCompiledTransform" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="75c63-137">Initializes a new instance of the <see cref="T:System.Xml.Xsl.XslCompiledTransform" /> class with the specified debug setting.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="75c63-138">若要单步执行代码并调试样式表，必须满足以下条件：</span><span class="sxs-lookup"><span data-stu-id="75c63-138">The following conditions must be met in order to step into the code and debug the style sheet:</span></span>  
  
-   <span data-ttu-id="75c63-139">`enableDebug` 参数设置为 `true`。</span><span class="sxs-lookup"><span data-stu-id="75c63-139">The `enableDebug` parameter is set to `true`.</span></span>  
  
-   <span data-ttu-id="75c63-140">样式表 <xref:System.Xml.Xsl.XslCompiledTransform.Load%2A> 作为 URI 或实现接口的类的实现传递给方法 <xref:System.Xml.XmlReader> <xref:System.Xml.IXmlLineInfo> 。</span><span class="sxs-lookup"><span data-stu-id="75c63-140">The style sheet is passed to the <xref:System.Xml.Xsl.XslCompiledTransform.Load%2A> method either as a URI, or an implementation of the <xref:System.Xml.XmlReader> class that implements the <xref:System.Xml.IXmlLineInfo> interface.</span></span> <span data-ttu-id="75c63-141"><xref:System.Xml.IXmlLineInfo>接口是在所有文本分析对象上实现的 <xref:System.Xml.XmlReader> 。</span><span class="sxs-lookup"><span data-stu-id="75c63-141">The <xref:System.Xml.IXmlLineInfo> interface is implemented on all text-parsing <xref:System.Xml.XmlReader> objects.</span></span>  
  
     <span data-ttu-id="75c63-142">换言之，如果使用对象（如或）加载样式表， <xref:System.Xml.XPath.IXPathNavigable> 或不 <xref:System.Xml.XmlDocument> <xref:System.Xml.XPath.XPathDocument> <xref:System.Xml.XmlReader> 实现接口的实现 <xref:System.Xml.IXmlLineInfo> ，则不能调试样式表。</span><span class="sxs-lookup"><span data-stu-id="75c63-142">In other words, if the style sheet is loaded using an <xref:System.Xml.XPath.IXPathNavigable> object, such as an <xref:System.Xml.XmlDocument> or <xref:System.Xml.XPath.XPathDocument>, or an <xref:System.Xml.XmlReader> implementation that does not implement the <xref:System.Xml.IXmlLineInfo> interface, you cannot debug the style sheet.</span></span>  
  
-   <span data-ttu-id="75c63-143"><xref:System.Xml.XmlResolver>用于加载样式表的是基于文件的 <xref:System.Xml.XmlResolver> ，例如 <xref:System.Xml.XmlUrlResolver> (这是 <xref:System.Xml.XmlResolver> 类) 使用的默认值 <xref:System.Xml.Xsl.XslCompiledTransform> 。</span><span class="sxs-lookup"><span data-stu-id="75c63-143">The <xref:System.Xml.XmlResolver> used to load the style sheet is a file-based <xref:System.Xml.XmlResolver>, such as the <xref:System.Xml.XmlUrlResolver> (this is the default <xref:System.Xml.XmlResolver> used by the <xref:System.Xml.Xsl.XslCompiledTransform> class).</span></span>  
  
-   <span data-ttu-id="75c63-144">样式表位于本地计算机上或位于 intranet 上。</span><span class="sxs-lookup"><span data-stu-id="75c63-144">The style sheet is located on the local machine or on the intranet.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="75c63-145">下面的示例演示如何启用 XSLT 调试。</span><span class="sxs-lookup"><span data-stu-id="75c63-145">The following example shows how to enable XSLT debugging.</span></span>  
  
 [!code-csharp[XslCompiledTransform.Load#10](~/samples/snippets/csharp/VS_Snippets_Data/XslCompiledTransform.Load/CS/Xslt_Load_v2.cs#10)]
 [!code-vb[XslCompiledTransform.Load#10](~/samples/snippets/visualbasic/VS_Snippets_Data/XslCompiledTransform.Load/VB/Xslt_Load_v2.vb#10)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/standard/data/xml/using-the-xslcompiledtransform-class"><span data-ttu-id="75c63-146">使用 XslCompiledTransform 类</span><span class="sxs-lookup"><span data-stu-id="75c63-146">Using the XslCompiledTransform Class</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CompileToType">
      <MemberSignature Language="C#" Value="public static System.CodeDom.Compiler.CompilerErrorCollection CompileToType (System.Xml.XmlReader stylesheet, System.Xml.Xsl.XsltSettings settings, System.Xml.XmlResolver stylesheetResolver, bool debug, System.Reflection.Emit.TypeBuilder typeBuilder, string scriptAssemblyPath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.CodeDom.Compiler.CompilerErrorCollection CompileToType(class System.Xml.XmlReader stylesheet, class System.Xml.Xsl.XsltSettings settings, class System.Xml.XmlResolver stylesheetResolver, bool debug, class System.Reflection.Emit.TypeBuilder typeBuilder, string scriptAssemblyPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslCompiledTransform.CompileToType(System.Xml.XmlReader,System.Xml.Xsl.XsltSettings,System.Xml.XmlResolver,System.Boolean,System.Reflection.Emit.TypeBuilder,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompileToType (stylesheet As XmlReader, settings As XsltSettings, stylesheetResolver As XmlResolver, debug As Boolean, typeBuilder As TypeBuilder, scriptAssemblyPath As String) As CompilerErrorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::CodeDom::Compiler::CompilerErrorCollection ^ CompileToType(System::Xml::XmlReader ^ stylesheet, System::Xml::Xsl::XsltSettings ^ settings, System::Xml::XmlResolver ^ stylesheetResolver, bool debug, System::Reflection::Emit::TypeBuilder ^ typeBuilder, System::String ^ scriptAssemblyPath);" />
      <MemberSignature Language="F#" Value="static member CompileToType : System.Xml.XmlReader * System.Xml.Xsl.XsltSettings * System.Xml.XmlResolver * bool * System.Reflection.Emit.TypeBuilder * string -&gt; System.CodeDom.Compiler.CompilerErrorCollection" Usage="System.Xml.Xsl.XslCompiledTransform.CompileToType (stylesheet, settings, stylesheetResolver, debug, typeBuilder, scriptAssemblyPath)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.Compiler.CompilerErrorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheet" Type="System.Xml.XmlReader" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="settings" Type="System.Xml.Xsl.XsltSettings" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="stylesheetResolver" Type="System.Xml.XmlResolver" Index="2" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="debug" Type="System.Boolean" Index="3" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="typeBuilder" Type="System.Reflection.Emit.TypeBuilder" Index="4" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="scriptAssemblyPath" Type="System.String" Index="5" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="stylesheet"><span data-ttu-id="75c63-147">一个 <see cref="T:System.Xml.XmlReader" />，位于要编译的样式表开头。</span><span class="sxs-lookup"><span data-stu-id="75c63-147">An <see cref="T:System.Xml.XmlReader" /> positioned at the beginning of the style sheet to be compiled.</span></span></param>
        <param name="settings"><span data-ttu-id="75c63-148">要应用于样式表的 <see cref="T:System.Xml.Xsl.XsltSettings" />。</span><span class="sxs-lookup"><span data-stu-id="75c63-148">The <see cref="T:System.Xml.Xsl.XsltSettings" /> to be applied to the style sheet.</span></span> <span data-ttu-id="75c63-149">如果为 <see langword="null" />，将应用 <see cref="P:System.Xml.Xsl.XsltSettings.Default" />。</span><span class="sxs-lookup"><span data-stu-id="75c63-149">If this is <see langword="null" />, the <see cref="P:System.Xml.Xsl.XsltSettings.Default" /> will be applied.</span></span></param>
        <param name="stylesheetResolver"><span data-ttu-id="75c63-150"><see cref="T:System.Xml.XmlResolver" /> 用于解析 <see langword="xsl:import" /> 和 <see langword="xsl:include" /> 元素中引用的样式表模块。</span><span class="sxs-lookup"><span data-stu-id="75c63-150">The <see cref="T:System.Xml.XmlResolver" /> use to resolve style sheet modules referenced in <see langword="xsl:import" /> and <see langword="xsl:include" /> elements.</span></span> <span data-ttu-id="75c63-151">如果为 <see langword="null" />，将不解析外部资源。</span><span class="sxs-lookup"><span data-stu-id="75c63-151">If this is <see langword="null" />, external resources will not be resolved.</span></span></param>
        <param name="debug"><span data-ttu-id="75c63-152">将它设置为 <see langword="true" /> 即可使用调试器调试样式表。</span><span class="sxs-lookup"><span data-stu-id="75c63-152">Setting this to <see langword="true" /> enables debugging the style sheet with a debugger.</span></span></param>
        <param name="typeBuilder"><span data-ttu-id="75c63-153">用于样式表编译的 <see cref="T:System.Reflection.Emit.TypeBuilder" />。</span><span class="sxs-lookup"><span data-stu-id="75c63-153">The <see cref="T:System.Reflection.Emit.TypeBuilder" /> used for the style sheet compilation.</span></span> <span data-ttu-id="75c63-154">提供的 TypeBuilder 用于生成结果类型。</span><span class="sxs-lookup"><span data-stu-id="75c63-154">The provided TypeBuilder is used to generate the resulting type.</span></span></param>
        <param name="scriptAssemblyPath"><span data-ttu-id="75c63-155">为 <see langword="msxsl:script" /> 元素生成的程序集的基路径。</span><span class="sxs-lookup"><span data-stu-id="75c63-155">The base path for the assemblies generated for <see langword="msxsl:script" /> elements.</span></span> <span data-ttu-id="75c63-156">如果仅生成了一个脚本程序集，此参数将指定该程序集的路径。</span><span class="sxs-lookup"><span data-stu-id="75c63-156">If only one script assembly is generated, this parameter specifies the path for that assembly.</span></span> <span data-ttu-id="75c63-157">如果生成了多个脚本程序集，将对文件名追加特殊的后缀，以确保程序集名称的唯一性。</span><span class="sxs-lookup"><span data-stu-id="75c63-157">In case of multiple script assemblies, a distinctive suffix will be appended to the file name to ensure uniqueness of assembly names.</span></span></param>
        <summary><span data-ttu-id="75c63-158">将 XSLT 样式表编译为指定的类型。</span><span class="sxs-lookup"><span data-stu-id="75c63-158">Compiles an XSLT style sheet to a specified type.</span></span></summary>
        <returns><span data-ttu-id="75c63-159">一个 <see cref="T:System.CodeDom.Compiler.CompilerErrorCollection" /> 对象，包含指示编译结果的编译器错误和警告。</span><span class="sxs-lookup"><span data-stu-id="75c63-159">A <see cref="T:System.CodeDom.Compiler.CompilerErrorCollection" /> object containing compiler errors and warnings that indicate the results of the compilation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="75c63-160">该 `xsltc.exe` 工具是围绕方法的包装 <xref:System.Xml.Xsl.XslCompiledTransform.CompileToType%2A> 。</span><span class="sxs-lookup"><span data-stu-id="75c63-160">The `xsltc.exe` tool is a wrapper around the <xref:System.Xml.Xsl.XslCompiledTransform.CompileToType%2A> method.</span></span> <span data-ttu-id="75c63-161">使用编译样式表 `xsltc.exe` 将满足大多数利用已编译样式表的应用程序的需求。</span><span class="sxs-lookup"><span data-stu-id="75c63-161">Compiling style sheets with the `xsltc.exe` will meet the demands of most applications that leverage the use of compiled style sheets.</span></span> <span data-ttu-id="75c63-162"><xref:System.Xml.Xsl.XslCompiledTransform.CompileToType%2A>生成自定义编译工具时应使用方法。</span><span class="sxs-lookup"><span data-stu-id="75c63-162">The <xref:System.Xml.Xsl.XslCompiledTransform.CompileToType%2A> method should be used when building custom compilation tools.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Load">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="75c63-163">编译样式表。</span><span class="sxs-lookup"><span data-stu-id="75c63-163">Compiles the style sheet.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="75c63-164">尽管 <xref:System.Xml.Xsl.XslCompiledTransform> 类的总体性能优于 <xref:System.Xml.Xsl.XslTransform> 类，但在首次对转换调用时，<xref:System.Xml.Xsl.XslCompiledTransform.Load%2A> 类的 <xref:System.Xml.Xsl.XslCompiledTransform> 方法可能比 <xref:System.Xml.Xsl.XslTransform.Load%2A> 类的 <xref:System.Xml.Xsl.XslTransform> 方法慢。</span><span class="sxs-lookup"><span data-stu-id="75c63-164">Although the overall performance of the <xref:System.Xml.Xsl.XslCompiledTransform> class is better than the <xref:System.Xml.Xsl.XslTransform> class, the <xref:System.Xml.Xsl.XslCompiledTransform.Load%2A> method of the <xref:System.Xml.Xsl.XslCompiledTransform> class might perform more slowly than the <xref:System.Xml.Xsl.XslTransform.Load%2A> method of the <xref:System.Xml.Xsl.XslTransform> class the first time it is called on a transformation.</span></span> <span data-ttu-id="75c63-165">这是因为必须先编译 XSLT 文件，才能加载该文件。</span><span class="sxs-lookup"><span data-stu-id="75c63-165">This is because the XSLT file must be compiled before it is loaded.</span></span> <span data-ttu-id="75c63-166">有关详细信息，请参阅以下博客文章：[XslCompiledTransform Slower than XslTransform?](https://go.microsoft.com/fwlink/?LinkId=130590)（XslCompiledTransform 比 XslTransform 慢？）</span><span class="sxs-lookup"><span data-stu-id="75c63-166">For more information, see the following blog post: [XslCompiledTransform Slower than XslTransform?](https://go.microsoft.com/fwlink/?LinkId=130590)</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="75c63-167">以调试模式编译的 XSLT 与以发布模式编译的 XSLT 之间有一些差别。</span><span class="sxs-lookup"><span data-stu-id="75c63-167">There are differences between XSLT compiled in Debug mode and XSLT compiled in Release mode.</span></span> <span data-ttu-id="75c63-168">在有些情况下，以调试模式编译的样式表在 <xref:System.Xml.Xsl.XslCompiledTransform.Load%2A> 期间不会引发错误，但以后在 <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> 期间会失败。</span><span class="sxs-lookup"><span data-stu-id="75c63-168">In some situations, style sheets compiled in Debug mode will not throw errors during <xref:System.Xml.Xsl.XslCompiledTransform.Load%2A>, but will later fail during <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A>.</span></span> <span data-ttu-id="75c63-169">以发布模式编译的同一个样式表在 <xref:System.Xml.Xsl.XslCompiledTransform.Load%2A> 期间就会失败。</span><span class="sxs-lookup"><span data-stu-id="75c63-169">The same style sheet compiled in Release mode will fail during <xref:System.Xml.Xsl.XslCompiledTransform.Load%2A>.</span></span> <span data-ttu-id="75c63-170">例如，当某个表达式需要节点集，而分配给该表达式的变量不是节点集类型的时，就会出现这种情况。</span><span class="sxs-lookup"><span data-stu-id="75c63-170">An example of such behavior is when a variable that is not of a node-set type is assigned to an expression where a node-set is required.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (string stylesheetUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(string stylesheetUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslCompiledTransform.Load(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (stylesheetUri As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::String ^ stylesheetUri);" />
      <MemberSignature Language="F#" Value="member this.Load : string -&gt; unit" Usage="xslCompiledTransform.Load stylesheetUri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheetUri" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="stylesheetUri"><span data-ttu-id="75c63-171">样式表的 URI。</span><span class="sxs-lookup"><span data-stu-id="75c63-171">The URI of the style sheet.</span></span></param>
        <summary><span data-ttu-id="75c63-172">加载和编译位于指定 URI 的样式表。</span><span class="sxs-lookup"><span data-stu-id="75c63-172">Loads and compiles the style sheet located at the specified URI.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="75c63-173"><xref:System.Xml.Xsl.XslCompiledTransform>类支持 XSLT 1.0 语法。</span><span class="sxs-lookup"><span data-stu-id="75c63-173">The <xref:System.Xml.Xsl.XslCompiledTransform> class supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="75c63-174">XSLT 样式表必须使用 `http://www.w3.org/1999/XSL/Transform` 命名空间。</span><span class="sxs-lookup"><span data-stu-id="75c63-174">The XSLT style sheet must use the `http://www.w3.org/1999/XSL/Transform` namespace.</span></span>  
  
 <span data-ttu-id="75c63-175">此方法具有以下行为：</span><span class="sxs-lookup"><span data-stu-id="75c63-175">This method has the following behavior:</span></span>  
  
-   <span data-ttu-id="75c63-176">使用 <xref:System.Xml.XmlUrlResolver> 不带用户凭据的来解析样式表 URI，并处理任何 `xsl:import` 或 `xsl:include` 元素。</span><span class="sxs-lookup"><span data-stu-id="75c63-176">An <xref:System.Xml.XmlUrlResolver> with no user credentials is used to resolve the style sheet URI, and process any `xsl:import` or `xsl:include` elements.</span></span>  
  
-   <span data-ttu-id="75c63-177">使用 <xref:System.Xml.XmlReader> 带有默认设置的来加载样式表。</span><span class="sxs-lookup"><span data-stu-id="75c63-177">An <xref:System.Xml.XmlReader> with default settings is used to load the style sheet.</span></span> <span data-ttu-id="75c63-178">在上禁用 DTD 处理 <xref:System.Xml.XmlReader> 。</span><span class="sxs-lookup"><span data-stu-id="75c63-178">DTD processing is disabled on the <xref:System.Xml.XmlReader>.</span></span> <span data-ttu-id="75c63-179">如果需要 DTD 处理，请创建一个 <xref:System.Xml.XmlReader> 启用了此功能的，并将其传递给 <xref:System.Xml.Xsl.XslCompiledTransform.Load%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="75c63-179">If you require DTD processing, create an <xref:System.Xml.XmlReader> with this feature enabled, and pass it to the <xref:System.Xml.Xsl.XslCompiledTransform.Load%2A> method.</span></span>  
  
-   <span data-ttu-id="75c63-180">`document()`已禁用该函数。</span><span class="sxs-lookup"><span data-stu-id="75c63-180">The `document()` function is disabled.</span></span>  
  
-   <span data-ttu-id="75c63-181">不支持嵌入的脚本。</span><span class="sxs-lookup"><span data-stu-id="75c63-181">Embedded scripts are not supported.</span></span>  
  
 <span data-ttu-id="75c63-182">可以使用 <xref:System.Xml.Xsl.XslCompiledTransform.Load%28System.String%2CSystem.Xml.Xsl.XsltSettings%2CSystem.Xml.XmlResolver%29> 重载来指定 <xref:System.Xml.XmlResolver> 具有必要身份验证凭据的，或指定不同的 XSLT 设置。</span><span class="sxs-lookup"><span data-stu-id="75c63-182">You can use the <xref:System.Xml.Xsl.XslCompiledTransform.Load%28System.String%2CSystem.Xml.Xsl.XsltSettings%2CSystem.Xml.XmlResolver%29> overload to specify an <xref:System.Xml.XmlResolver> with the necessary authentication credentials, or to specify different XSLT settings.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="75c63-183">下面的示例执行转换并输出到文件。</span><span class="sxs-lookup"><span data-stu-id="75c63-183">The following example executes a transform and outputs to a file.</span></span>  
  
 [!code-csharp[XslCompiledTransform.Transform#1](~/samples/snippets/csharp/VS_Snippets_Data/XslCompiledTransform.Transform/CS/Xslt_Transform_v2.cs#1)]
 [!code-vb[XslCompiledTransform.Transform#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XslCompiledTransform.Transform/VB/Xslt_Transform_v2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="75c63-184"><paramref name="stylesheetUri" /> 值为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="75c63-184">The <paramref name="stylesheetUri" /> value is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Xml.Xsl.XsltException"><span data-ttu-id="75c63-185">样式表中有错。</span><span class="sxs-lookup"><span data-stu-id="75c63-185">The style sheet contains an error.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="75c63-186">无法找到该样式表。</span><span class="sxs-lookup"><span data-stu-id="75c63-186">The style sheet cannot be found.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="75c63-187"><paramref name="stylesheetUri" /> 值包含无法找到的文件名或目录。</span><span class="sxs-lookup"><span data-stu-id="75c63-187">The <paramref name="stylesheetUri" /> value includes a filename or directory that cannot be found.</span></span></exception>
        <exception cref="T:System.Net.WebException"><span data-ttu-id="75c63-188">无法解析 <paramref name="stylesheetUri" /> 值。</span><span class="sxs-lookup"><span data-stu-id="75c63-188">The <paramref name="stylesheetUri" /> value cannot be resolved.</span></span>  
  
<span data-ttu-id="75c63-189">- 或 -</span><span class="sxs-lookup"><span data-stu-id="75c63-189">-or-</span></span> 
<span data-ttu-id="75c63-190">处理该请求时出错。</span><span class="sxs-lookup"><span data-stu-id="75c63-190">An error occurred while processing the request.</span></span></exception>
        <exception cref="T:System.UriFormatException"><span data-ttu-id="75c63-191"><paramref name="stylesheetUri" /> 不是有效的 URI。</span><span class="sxs-lookup"><span data-stu-id="75c63-191"><paramref name="stylesheetUri" /> is not a valid URI.</span></span></exception>
        <exception cref="T:System.Xml.XmlException"><span data-ttu-id="75c63-192">加载样式表时出现分析错误。</span><span class="sxs-lookup"><span data-stu-id="75c63-192">There was a parsing error loading the style sheet.</span></span></exception>
        <related type="Article" href="/dotnet/standard/data/xml/using-the-xslcompiledtransform-class"><span data-ttu-id="75c63-193">使用 XslCompiledTransform 类</span><span class="sxs-lookup"><span data-stu-id="75c63-193">Using the XslCompiledTransform Class</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (Type compiledStylesheet);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Type compiledStylesheet) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslCompiledTransform.Load(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (compiledStylesheet As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(Type ^ compiledStylesheet);" />
      <MemberSignature Language="F#" Value="member this.Load : Type -&gt; unit" Usage="xslCompiledTransform.Load compiledStylesheet" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="compiledStylesheet" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="compiledStylesheet"><span data-ttu-id="75c63-194">包含已编译样式表的类的名称。</span><span class="sxs-lookup"><span data-stu-id="75c63-194">The name of the class that contains the compiled style sheet.</span></span>  
  
 <span data-ttu-id="75c63-195">该名称通常是样式表的名称。</span><span class="sxs-lookup"><span data-stu-id="75c63-195">This is usually the name of the style sheet.</span></span> <span data-ttu-id="75c63-196">除非另外指定，否则，xsltc.exe 工具将样式表名称用作类和程序集的名称。</span><span class="sxs-lookup"><span data-stu-id="75c63-196">Unless otherwise specified, the xsltc.exe tool uses the name of the style sheet for the class and assembly names.</span></span></param>
        <summary><span data-ttu-id="75c63-197">加载使用 <see href="https://docs.microsoft.com/dotnet/standard/data/xml/xslt-compiler-xsltc-exe">XSLT 编译器 (xsltc.exe)</see> 创建的已编译样式表。</span><span class="sxs-lookup"><span data-stu-id="75c63-197">Loads the compiled style sheet that was created using the <see href="https://docs.microsoft.com/dotnet/standard/data/xml/xslt-compiler-xsltc-exe">XSLT Compiler (xsltc.exe)</see>.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="75c63-198">xsltc.exe 工具用于编译样式表和生成样式表中的程序集。</span><span class="sxs-lookup"><span data-stu-id="75c63-198">The xsltc.exe tool is used to compile style sheets and generate assemblies from the style sheets.</span></span> <span data-ttu-id="75c63-199"><xref:System.Xml.Xsl.XslCompiledTransform.Load%2A>方法从程序集加载已编译的样式表。</span><span class="sxs-lookup"><span data-stu-id="75c63-199">The <xref:System.Xml.Xsl.XslCompiledTransform.Load%2A> method loads the compiled style sheet from the assembly.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="75c63-200">还必须在应用程序中包含 XSLT 程序集作为引用。</span><span class="sxs-lookup"><span data-stu-id="75c63-200">You must also include the XSLT assembly as a reference in your application.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="75c63-201">下面的示例演示如何从 XSLT 程序集加载已编译的样式表。</span><span class="sxs-lookup"><span data-stu-id="75c63-201">The following example shows how to load a compiled style sheet from an XSLT assembly.</span></span> <span data-ttu-id="75c63-202">该示例假设使用 xsltc.exe 工具创建一个名为 bookOrders.dll 的程序集，该类具有名为 bookOrders 的类。</span><span class="sxs-lookup"><span data-stu-id="75c63-202">The example assumes that the xsltc.exe tool was used to create an assembly named bookOrders.dll with a class named bookOrders.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="75c63-203">在编译代码时，必须引用 XSLT 程序集。</span><span class="sxs-lookup"><span data-stu-id="75c63-203">You have to reference the XSLT assembly when compiling the code.</span></span> <span data-ttu-id="75c63-204">例如，`csc /r:system.dll;system.xml.dll;bookOrders.dll myCode.cs`。</span><span class="sxs-lookup"><span data-stu-id="75c63-204">For example, `csc /r:system.dll;system.xml.dll;bookOrders.dll myCode.cs`.</span></span>  
  
```csharp  
// Load the type of the class.  
XslCompiledTransform xslt = new XslCompiledTransform();  
xslt.Load(typeof(bookOrders));  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/standard/data/xml/xslt-compiler-xsltc-exe"><span data-ttu-id="75c63-205">XSLT 程序集工具 ( # A0) </span><span class="sxs-lookup"><span data-stu-id="75c63-205">XSLT Assembly Tool (xsltc.exe)</span></span></related>
        <related type="Article" href="/dotnet/standard/data/xml/how-to-perform-an-xslt-transformation-by-using-an-assembly"><span data-ttu-id="75c63-206">如何：使用程序集执行 XSLT 转换</span><span class="sxs-lookup"><span data-stu-id="75c63-206">How to: Perform an XSLT Transformation Using an Assembly</span></span></related>
        <related type="Article" href="/dotnet/standard/data/xml/using-the-xslcompiledtransform-class"><span data-ttu-id="75c63-207">使用 XslCompiledTransform 类</span><span class="sxs-lookup"><span data-stu-id="75c63-207">Using the XslCompiledTransform Class</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Xml.XmlReader stylesheet);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Xml.XmlReader stylesheet) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslCompiledTransform.Load(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (stylesheet As XmlReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Xml::XmlReader ^ stylesheet);" />
      <MemberSignature Language="F#" Value="member this.Load : System.Xml.XmlReader -&gt; unit" Usage="xslCompiledTransform.Load stylesheet" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheet" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="stylesheet"><span data-ttu-id="75c63-208">包含此样式表的 <see cref="T:System.Xml.XmlReader" />。</span><span class="sxs-lookup"><span data-stu-id="75c63-208">An <see cref="T:System.Xml.XmlReader" /> containing the style sheet.</span></span></param>
        <summary><span data-ttu-id="75c63-209">编译 <see cref="T:System.Xml.XmlReader" /> 中包含的样式表。</span><span class="sxs-lookup"><span data-stu-id="75c63-209">Compiles the style sheet contained in the <see cref="T:System.Xml.XmlReader" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="75c63-210"><xref:System.Xml.Xsl.XslCompiledTransform>类支持 XSLT 1.0 语法。</span><span class="sxs-lookup"><span data-stu-id="75c63-210">The <xref:System.Xml.Xsl.XslCompiledTransform> class supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="75c63-211">XSLT 样式表必须使用 `http://www.w3.org/1999/XSL/Transform` 命名空间。</span><span class="sxs-lookup"><span data-stu-id="75c63-211">The XSLT style sheet must use the `http://www.w3.org/1999/XSL/Transform` namespace.</span></span>  
  
 <span data-ttu-id="75c63-212">样式表从的当前节点加载 <xref:System.Xml.XmlReader> 到其所有子级。</span><span class="sxs-lookup"><span data-stu-id="75c63-212">The style sheet loads from the current node of the <xref:System.Xml.XmlReader> through all its children.</span></span> <span data-ttu-id="75c63-213">这使您可以使用文档的一部分作为样式表。</span><span class="sxs-lookup"><span data-stu-id="75c63-213">This enables you to use a portion of a document as the style sheet.</span></span> <span data-ttu-id="75c63-214">此 <xref:System.Xml.Xsl.XslCompiledTransform.Load%2A> 方法完成后，将 <xref:System.Xml.XmlReader> 定位到样式表末尾后的下一个节点。</span><span class="sxs-lookup"><span data-stu-id="75c63-214">After the <xref:System.Xml.Xsl.XslCompiledTransform.Load%2A> method completes, the <xref:System.Xml.XmlReader> is positioned on the next node after the end of the style sheet.</span></span> <span data-ttu-id="75c63-215">如果已到达文档结尾，<xref:System.Xml.XmlReader> 将位于文件结尾 (EOF)。</span><span class="sxs-lookup"><span data-stu-id="75c63-215">If the end of the document is reached, the <xref:System.Xml.XmlReader> is positioned at the end of file (EOF).</span></span>  
  
 <span data-ttu-id="75c63-216">此方法具有以下行为：</span><span class="sxs-lookup"><span data-stu-id="75c63-216">This method has the following behavior:</span></span>  
  
-   <span data-ttu-id="75c63-217">使用 <xref:System.Xml.XmlUrlResolver> 没有用户凭据的进行处理任何 `xsl:import` 或 `xsl:include` 元素。</span><span class="sxs-lookup"><span data-stu-id="75c63-217">An <xref:System.Xml.XmlUrlResolver> with no user credentials is used to process any `xsl:import` or `xsl:include` elements.</span></span>  
  
-   <span data-ttu-id="75c63-218">`document()`已禁用该函数。</span><span class="sxs-lookup"><span data-stu-id="75c63-218">The `document()` function is disabled.</span></span>  
  
-   <span data-ttu-id="75c63-219">不支持嵌入的脚本。</span><span class="sxs-lookup"><span data-stu-id="75c63-219">Embedded scripts are not supported.</span></span>  
  
 <span data-ttu-id="75c63-220">可以使用 <xref:System.Xml.Xsl.XslCompiledTransform.Load%28System.Xml.XmlReader%2CSystem.Xml.Xsl.XsltSettings%2CSystem.Xml.XmlResolver%29> 重载来指定 <xref:System.Xml.XmlResolver> 具有必要身份验证凭据的，或指定不同的 XSLT 设置。</span><span class="sxs-lookup"><span data-stu-id="75c63-220">You can use the <xref:System.Xml.Xsl.XslCompiledTransform.Load%28System.Xml.XmlReader%2CSystem.Xml.Xsl.XsltSettings%2CSystem.Xml.XmlResolver%29> overload to specify an <xref:System.Xml.XmlResolver> with the necessary authentication credentials, or to specify different XSLT settings.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="75c63-221">下面的示例加载对象中包含的样式表 <xref:System.Xml.XmlReader> 。</span><span class="sxs-lookup"><span data-stu-id="75c63-221">The following example loads a style sheet contained in an <xref:System.Xml.XmlReader> object.</span></span>  
  
 [!code-csharp[XslCompiledTransform.Load#5](~/samples/snippets/csharp/VS_Snippets_Data/XslCompiledTransform.Load/CS/Xslt_Load_v2.cs#5)]
 [!code-vb[XslCompiledTransform.Load#5](~/samples/snippets/visualbasic/VS_Snippets_Data/XslCompiledTransform.Load/VB/Xslt_Load_v2.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="75c63-222"><paramref name="stylesheet" /> 值为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="75c63-222">The <paramref name="stylesheet" /> value is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Xml.Xsl.XsltException"><span data-ttu-id="75c63-223">样式表中有错。</span><span class="sxs-lookup"><span data-stu-id="75c63-223">The style sheet contains an error.</span></span></exception>
        <related type="Article" href="/dotnet/standard/data/xml/using-the-xslcompiledtransform-class"><span data-ttu-id="75c63-224">使用 XslCompiledTransform 类</span><span class="sxs-lookup"><span data-stu-id="75c63-224">Using the XslCompiledTransform Class</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Xml.XPath.IXPathNavigable stylesheet);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Xml.XPath.IXPathNavigable stylesheet) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslCompiledTransform.Load(System.Xml.XPath.IXPathNavigable)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (stylesheet As IXPathNavigable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Xml::XPath::IXPathNavigable ^ stylesheet);" />
      <MemberSignature Language="F#" Value="member this.Load : System.Xml.XPath.IXPathNavigable -&gt; unit" Usage="xslCompiledTransform.Load stylesheet" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheet" Type="System.Xml.XPath.IXPathNavigable" />
      </Parameters>
      <Docs>
        <param name="stylesheet"><span data-ttu-id="75c63-225">一个实现 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 接口的对象。</span><span class="sxs-lookup"><span data-stu-id="75c63-225">An object implementing the <see cref="T:System.Xml.XPath.IXPathNavigable" /> interface.</span></span> <span data-ttu-id="75c63-226">在 Microsoft .NET Framework 中，这可以是 <see cref="T:System.Xml.XmlNode" />（一般为 <see cref="T:System.Xml.XmlDocument" />），或者是包含该样式表的 <see cref="T:System.Xml.XPath.XPathDocument" />。</span><span class="sxs-lookup"><span data-stu-id="75c63-226">In the Microsoft .NET Framework, this can be either an <see cref="T:System.Xml.XmlNode" /> (typically an <see cref="T:System.Xml.XmlDocument" />), or an <see cref="T:System.Xml.XPath.XPathDocument" /> containing the style sheet.</span></span></param>
        <summary><span data-ttu-id="75c63-227">编译 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 对象中包含的样式表。</span><span class="sxs-lookup"><span data-stu-id="75c63-227">Compiles the style sheet contained in the <see cref="T:System.Xml.XPath.IXPathNavigable" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="75c63-228"><xref:System.Xml.Xsl.XslCompiledTransform>类支持 XSLT 1.0 语法。</span><span class="sxs-lookup"><span data-stu-id="75c63-228">The <xref:System.Xml.Xsl.XslCompiledTransform> class supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="75c63-229">XSLT 样式表必须使用 `http://www.w3.org/1999/XSL/Transform` 命名空间。</span><span class="sxs-lookup"><span data-stu-id="75c63-229">The XSLT style sheet must use the `http://www.w3.org/1999/XSL/Transform` namespace.</span></span>  
  
 <span data-ttu-id="75c63-230">此方法具有以下行为：</span><span class="sxs-lookup"><span data-stu-id="75c63-230">This method has the following behavior:</span></span>  
  
-   <span data-ttu-id="75c63-231">使用 <xref:System.Xml.XmlUrlResolver> 没有用户凭据的进行处理任何 `xsl:import` 或 `xsl:include` 元素。</span><span class="sxs-lookup"><span data-stu-id="75c63-231">An <xref:System.Xml.XmlUrlResolver> with no user credentials is used to process any `xsl:import` or `xsl:include` elements.</span></span>  
  
-   <span data-ttu-id="75c63-232">`document()`已禁用该函数。</span><span class="sxs-lookup"><span data-stu-id="75c63-232">The `document()` function is disabled.</span></span>  
  
-   <span data-ttu-id="75c63-233">不支持嵌入的脚本。</span><span class="sxs-lookup"><span data-stu-id="75c63-233">Embedded scripts are not supported.</span></span>  
  
 <span data-ttu-id="75c63-234">可以使用 <xref:System.Xml.Xsl.XslCompiledTransform.Load%2A> 重载来指定 <xref:System.Xml.XmlResolver> 具有必要身份验证凭据的，或指定不同的 XSLT 设置。</span><span class="sxs-lookup"><span data-stu-id="75c63-234">You can use the <xref:System.Xml.Xsl.XslCompiledTransform.Load%2A> overload to specify an <xref:System.Xml.XmlResolver> with the necessary authentication credentials, or to specify different XSLT settings.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="75c63-235">下面的示例加载对象中包含的样式表 <xref:System.Xml.XPath.XPathDocument> 。</span><span class="sxs-lookup"><span data-stu-id="75c63-235">The following example loads a style sheet contained in an <xref:System.Xml.XPath.XPathDocument> object.</span></span>  
  
 [!code-csharp[XslCompiledTransform.Load#1](~/samples/snippets/csharp/VS_Snippets_Data/XslCompiledTransform.Load/CS/Xslt_Load_v2.cs#1)]
 [!code-vb[XslCompiledTransform.Load#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XslCompiledTransform.Load/VB/Xslt_Load_v2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="75c63-236"><paramref name="stylesheet" /> 值为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="75c63-236">The <paramref name="stylesheet" /> value is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Xml.Xsl.XsltException"><span data-ttu-id="75c63-237">样式表中有错。</span><span class="sxs-lookup"><span data-stu-id="75c63-237">The style sheet contains an error.</span></span></exception>
        <related type="Article" href="/dotnet/standard/data/xml/using-the-xslcompiledtransform-class"><span data-ttu-id="75c63-238">使用 XslCompiledTransform 类</span><span class="sxs-lookup"><span data-stu-id="75c63-238">Using the XslCompiledTransform Class</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Reflection.MethodInfo executeMethod, byte[] queryData, Type[]? earlyBoundTypes);" FrameworkAlternate="net-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Reflection.MethodInfo executeMethod, unsigned int8[] queryData, class System.Type[] earlyBoundTypes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslCompiledTransform.Load(System.Reflection.MethodInfo,System.Byte[],System.Type[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (executeMethod As MethodInfo, queryData As Byte(), earlyBoundTypes As Type())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Reflection::MethodInfo ^ executeMethod, cli::array &lt;System::Byte&gt; ^ queryData, cli::array &lt;Type ^&gt; ^ earlyBoundTypes);" />
      <MemberSignature Language="F#" Value="member this.Load : System.Reflection.MethodInfo * byte[] * Type[] -&gt; unit" Usage="xslCompiledTransform.Load (executeMethod, queryData, earlyBoundTypes)" />
      <MemberSignature Language="C#" Value="public void Load (System.Reflection.MethodInfo executeMethod, byte[] queryData, Type[] earlyBoundTypes);" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="executeMethod" Type="System.Reflection.MethodInfo" />
        <Parameter Name="queryData" Type="System.Byte[]" />
        <Parameter Name="earlyBoundTypes" Type="System.Type[]" />
      </Parameters>
      <Docs>
        <param name="executeMethod"><span data-ttu-id="75c63-239">一个 <see cref="T:System.Reflection.MethodInfo" /> 对象，表示已编译样式表中由编译器生成的 <c>execute</c> 方法。</span><span class="sxs-lookup"><span data-stu-id="75c63-239">A <see cref="T:System.Reflection.MethodInfo" /> object representing the compiler-generated <c>execute</c> method of the compiled style sheet.</span></span></param>
        <param name="queryData"><span data-ttu-id="75c63-240">已编译样式表的 <c>staticData</c> 字段中的一个序列化数据结构字节数组，该已编译样式表由 <see cref="M:System.Xml.Xsl.XslCompiledTransform.CompileToType(System.Xml.XmlReader,System.Xml.Xsl.XsltSettings,System.Xml.XmlResolver,System.Boolean,System.Reflection.Emit.TypeBuilder,System.String)" /> 方法生成。</span><span class="sxs-lookup"><span data-stu-id="75c63-240">A byte array of serialized data structures in the <c>staticData</c> field of the compiled style sheet as generated by the <see cref="M:System.Xml.Xsl.XslCompiledTransform.CompileToType(System.Xml.XmlReader,System.Xml.Xsl.XsltSettings,System.Xml.XmlResolver,System.Boolean,System.Reflection.Emit.TypeBuilder,System.String)" /> method.</span></span></param>
        <param name="earlyBoundTypes"><span data-ttu-id="75c63-241">一个类型数组，该数组存储在已编译样式表中由编译器生成的 <c>ebTypes</c> 字段中。</span><span class="sxs-lookup"><span data-stu-id="75c63-241">An array of types stored in the compiler-generated <c>ebTypes</c> field of the compiled style sheet.</span></span></param>
        <summary><span data-ttu-id="75c63-242">从使用 <see langword="XSLTC.exe" /> 实用程序编译的样式表中加载一个方法。</span><span class="sxs-lookup"><span data-stu-id="75c63-242">Loads a method from a style sheet compiled using the <see langword="XSLTC.exe" /> utility.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="75c63-243">此方法接受一个已编译的样式表，其形式为 <xref:System.Reflection.MethodInfo> 对象、字节数组和类型数组。</span><span class="sxs-lookup"><span data-stu-id="75c63-243">This method accepts a compiled style sheet in the form of a <xref:System.Reflection.MethodInfo> object, a byte array, and a type array.</span></span> <span data-ttu-id="75c63-244"><xref:System.Reflection.Emit.DynamicMethod> 对象可用于允许在回收对象时放弃编译的样式表方法 <xref:System.Xml.Xsl.XslCompiledTransform> 。</span><span class="sxs-lookup"><span data-stu-id="75c63-244"><xref:System.Reflection.Emit.DynamicMethod> objects may be used to allow compiled style sheet methods to be discarded when the <xref:System.Xml.Xsl.XslCompiledTransform> object is reclaimed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="75c63-245">下面的代码示例使用 <xref:System.Xml.Xsl.XslCompiledTransform.Load%2A> 加载已编译的样式表。</span><span class="sxs-lookup"><span data-stu-id="75c63-245">The code example below uses the <xref:System.Xml.Xsl.XslCompiledTransform.Load%2A> to load a compiled style sheet.</span></span> <span data-ttu-id="75c63-246">转换可将元素的值减少 `Price` 10%。</span><span class="sxs-lookup"><span data-stu-id="75c63-246">The transformation reduces the value of the `Price` element by ten percent.</span></span>  
  
 [!code-csharp[XsltDynamicMethodLoad#1](~/samples/snippets/csharp/VS_Snippets_Data/XsltDynamicMethodLoad/CS/XsltDynamicMethodLoad.cs#1)]
 [!code-vb[XsltDynamicMethodLoad#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XsltDynamicMethodLoad/VB/XsltDynamicMethodLoad.vb#1)]  
  
> [!NOTE]
>  <span data-ttu-id="75c63-247">本示例中使用的 "转换" 程序集是使用 xsltc.exe 实用工具生成的。</span><span class="sxs-lookup"><span data-stu-id="75c63-247">The "Transform" assembly used in this example was built using the xsltc.exe utility.</span></span> <span data-ttu-id="75c63-248">有关使用此命令行工具的详细信息，请参阅 [如何：使用程序集执行 XSLT 转换](/dotnet/standard/data/xml/how-to-perform-an-xslt-transformation-by-using-an-assembly)。</span><span class="sxs-lookup"><span data-stu-id="75c63-248">For detailed information on using this command line tool, see [How to: Perform an XSLT Transformation by Using an Assembly](/dotnet/standard/data/xml/how-to-perform-an-xslt-transformation-by-using-an-assembly).</span></span>  
  
 <span data-ttu-id="75c63-249">前面的代码示例使用以下转换：</span><span class="sxs-lookup"><span data-stu-id="75c63-249">The previous code example uses the following transformation:</span></span>  
 [!code-xml[XsltDynamicMethodLoad-xslt](~/samples/snippets/csharp/VS_Snippets_Data/XsltDynamicMethodLoad/CS/Transform.xslt)]
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (string? stylesheetUri, System.Xml.Xsl.XsltSettings settings, System.Xml.XmlResolver stylesheetResolver);" FrameworkAlternate="net-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(string stylesheetUri, class System.Xml.Xsl.XsltSettings settings, class System.Xml.XmlResolver stylesheetResolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslCompiledTransform.Load(System.String,System.Xml.Xsl.XsltSettings,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (stylesheetUri As String, settings As XsltSettings, stylesheetResolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::String ^ stylesheetUri, System::Xml::Xsl::XsltSettings ^ settings, System::Xml::XmlResolver ^ stylesheetResolver);" />
      <MemberSignature Language="F#" Value="member this.Load : string * System.Xml.Xsl.XsltSettings * System.Xml.XmlResolver -&gt; unit" Usage="xslCompiledTransform.Load (stylesheetUri, settings, stylesheetResolver)" />
      <MemberSignature Language="C#" Value="public void Load (string stylesheetUri, System.Xml.Xsl.XsltSettings settings, System.Xml.XmlResolver stylesheetResolver);" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheetUri" Type="System.String" />
        <Parameter Name="settings" Type="System.Xml.Xsl.XsltSettings" />
        <Parameter Name="stylesheetResolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="stylesheetUri"><span data-ttu-id="75c63-250">样式表的 URI。</span><span class="sxs-lookup"><span data-stu-id="75c63-250">The URI of the style sheet.</span></span></param>
        <param name="settings"><span data-ttu-id="75c63-251">应用于样式表的 <see cref="T:System.Xml.Xsl.XsltSettings" />。</span><span class="sxs-lookup"><span data-stu-id="75c63-251">The <see cref="T:System.Xml.Xsl.XsltSettings" /> to apply to the style sheet.</span></span> <span data-ttu-id="75c63-252">如果是 <see langword="null" />，则应用 <see cref="P:System.Xml.Xsl.XsltSettings.Default" /> 设置。</span><span class="sxs-lookup"><span data-stu-id="75c63-252">If this is <see langword="null" />, the <see cref="P:System.Xml.Xsl.XsltSettings.Default" /> setting is applied.</span></span></param>
        <param name="stylesheetResolver"><span data-ttu-id="75c63-253">用于解析样式表 URI 的 <see cref="T:System.Xml.XmlResolver" /> 以及在 XSLT <c>import</c> 和 <c>include</c> 元素中引用的任何样式表。</span><span class="sxs-lookup"><span data-stu-id="75c63-253">The <see cref="T:System.Xml.XmlResolver" /> used to resolve the style sheet URI and any style sheets referenced in XSLT <c>import</c> and <c>include</c> elements.</span></span></param>
        <summary><span data-ttu-id="75c63-254">加载和编译 URI 指定的 XSLT 样式表。</span><span class="sxs-lookup"><span data-stu-id="75c63-254">Loads and compiles the XSLT style sheet specified by the URI.</span></span> <span data-ttu-id="75c63-255"><see cref="T:System.Xml.XmlResolver" /> 可以解析任何 XSLT <c>import</c> 或 <c>include</c> 元素，而 XSLT 设置决定了样式表的权限。</span><span class="sxs-lookup"><span data-stu-id="75c63-255">The <see cref="T:System.Xml.XmlResolver" /> resolves any XSLT <c>import</c> or <c>include</c> elements and the XSLT settings determine the permissions for the style sheet.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="75c63-256"><xref:System.Xml.Xsl.XslCompiledTransform>类支持 XSLT 1.0 语法。</span><span class="sxs-lookup"><span data-stu-id="75c63-256">The <xref:System.Xml.Xsl.XslCompiledTransform> class supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="75c63-257">XSLT 样式表必须使用 `http://www.w3.org/1999/XSL/Transform` 命名空间。</span><span class="sxs-lookup"><span data-stu-id="75c63-257">The XSLT style sheet must use the `http://www.w3.org/1999/XSL/Transform` namespace.</span></span>  
  
 <span data-ttu-id="75c63-258">使用 <xref:System.Xml.XmlReader> 带有默认设置的来加载样式表。</span><span class="sxs-lookup"><span data-stu-id="75c63-258">An <xref:System.Xml.XmlReader> with default settings is used to load the style sheet.</span></span> <span data-ttu-id="75c63-259">在上禁用 DTD 处理 <xref:System.Xml.XmlReader> 。</span><span class="sxs-lookup"><span data-stu-id="75c63-259">DTD processing is disabled on the <xref:System.Xml.XmlReader>.</span></span> <span data-ttu-id="75c63-260">如果需要 DTD 处理，请创建一个 <xref:System.Xml.XmlReader> 启用了此功能的，并将其传递给 <xref:System.Xml.Xsl.XslCompiledTransform.Load%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="75c63-260">If you require DTD processing, create an <xref:System.Xml.XmlReader> with this feature enabled, and pass it to the <xref:System.Xml.Xsl.XslCompiledTransform.Load%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="75c63-261">下面的示例加载存储在网络资源上的样式表。</span><span class="sxs-lookup"><span data-stu-id="75c63-261">The following example loads a style sheet that is stored on a network resource.</span></span> <span data-ttu-id="75c63-262"><xref:System.Xml.XmlSecureResolver> 对象指定访问该样式表所需的凭据。</span><span class="sxs-lookup"><span data-stu-id="75c63-262">An <xref:System.Xml.XmlSecureResolver> object specifies the credentials necessary to access the style sheet.</span></span>  
  
 [!code-csharp[XslCompiledTransform.Load#2](~/samples/snippets/csharp/VS_Snippets_Data/XslCompiledTransform.Load/CS/Xslt_Load_v2.cs#2)]
 [!code-vb[XslCompiledTransform.Load#2](~/samples/snippets/visualbasic/VS_Snippets_Data/XslCompiledTransform.Load/VB/Xslt_Load_v2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="75c63-263"><paramref name="stylesheetUri" /> 或 <paramref name="stylesheetResolver" /> 值为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="75c63-263">The <paramref name="stylesheetUri" /> or <paramref name="stylesheetResolver" /> value is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Xml.Xsl.XsltException"><span data-ttu-id="75c63-264">样式表中有错。</span><span class="sxs-lookup"><span data-stu-id="75c63-264">The style sheet contains an error.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="75c63-265">无法找到该样式表。</span><span class="sxs-lookup"><span data-stu-id="75c63-265">The style sheet cannot be found.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="75c63-266"><paramref name="stylesheetUri" /> 值包含无法找到的文件名或目录。</span><span class="sxs-lookup"><span data-stu-id="75c63-266">The <paramref name="stylesheetUri" /> value includes a filename or directory that cannot be found.</span></span></exception>
        <exception cref="T:System.Net.WebException"><span data-ttu-id="75c63-267">无法解析 <paramref name="stylesheetUri" /> 值。</span><span class="sxs-lookup"><span data-stu-id="75c63-267">The <paramref name="stylesheetUri" /> value cannot be resolved.</span></span>  
  
<span data-ttu-id="75c63-268">- 或 -</span><span class="sxs-lookup"><span data-stu-id="75c63-268">-or-</span></span> 
<span data-ttu-id="75c63-269">处理该请求时出错。</span><span class="sxs-lookup"><span data-stu-id="75c63-269">An error occurred while processing the request.</span></span></exception>
        <exception cref="T:System.UriFormatException"><span data-ttu-id="75c63-270"><paramref name="stylesheetUri" /> 不是有效的 URI。</span><span class="sxs-lookup"><span data-stu-id="75c63-270"><paramref name="stylesheetUri" /> is not a valid URI.</span></span></exception>
        <exception cref="T:System.Xml.XmlException"><span data-ttu-id="75c63-271">加载样式表时出现分析错误。</span><span class="sxs-lookup"><span data-stu-id="75c63-271">There was a parsing error loading the style sheet.</span></span></exception>
        <related type="Article" href="/dotnet/standard/data/xml/using-the-xslcompiledtransform-class"><span data-ttu-id="75c63-272">使用 XslCompiledTransform 类</span><span class="sxs-lookup"><span data-stu-id="75c63-272">Using the XslCompiledTransform Class</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Xml.XmlReader? stylesheet, System.Xml.Xsl.XsltSettings settings, System.Xml.XmlResolver stylesheetResolver);" FrameworkAlternate="net-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Xml.XmlReader stylesheet, class System.Xml.Xsl.XsltSettings settings, class System.Xml.XmlResolver stylesheetResolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslCompiledTransform.Load(System.Xml.XmlReader,System.Xml.Xsl.XsltSettings,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (stylesheet As XmlReader, settings As XsltSettings, stylesheetResolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Xml::XmlReader ^ stylesheet, System::Xml::Xsl::XsltSettings ^ settings, System::Xml::XmlResolver ^ stylesheetResolver);" />
      <MemberSignature Language="F#" Value="member this.Load : System.Xml.XmlReader * System.Xml.Xsl.XsltSettings * System.Xml.XmlResolver -&gt; unit" Usage="xslCompiledTransform.Load (stylesheet, settings, stylesheetResolver)" />
      <MemberSignature Language="C#" Value="public void Load (System.Xml.XmlReader stylesheet, System.Xml.Xsl.XsltSettings settings, System.Xml.XmlResolver stylesheetResolver);" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheet" Type="System.Xml.XmlReader" />
        <Parameter Name="settings" Type="System.Xml.Xsl.XsltSettings" />
        <Parameter Name="stylesheetResolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="stylesheet"><span data-ttu-id="75c63-273">包含该样式表的 <see cref="T:System.Xml.XmlReader" />。</span><span class="sxs-lookup"><span data-stu-id="75c63-273">The <see cref="T:System.Xml.XmlReader" /> containing the style sheet.</span></span></param>
        <param name="settings"><span data-ttu-id="75c63-274">应用于样式表的 <see cref="T:System.Xml.Xsl.XsltSettings" />。</span><span class="sxs-lookup"><span data-stu-id="75c63-274">The <see cref="T:System.Xml.Xsl.XsltSettings" /> to apply to the style sheet.</span></span> <span data-ttu-id="75c63-275">如果是 <see langword="null" />，则应用 <see cref="P:System.Xml.Xsl.XsltSettings.Default" /> 设置。</span><span class="sxs-lookup"><span data-stu-id="75c63-275">If this is <see langword="null" />, the <see cref="P:System.Xml.Xsl.XsltSettings.Default" /> setting is applied.</span></span></param>
        <param name="stylesheetResolver"><span data-ttu-id="75c63-276"><see cref="T:System.Xml.XmlResolver" />，用于解析 XSLT <c>import</c> 和 <c>include</c> 元素中引用的所有样式表。</span><span class="sxs-lookup"><span data-stu-id="75c63-276">The <see cref="T:System.Xml.XmlResolver" /> used to resolve any style sheets referenced in XSLT <c>import</c> and <c>include</c> elements.</span></span> <span data-ttu-id="75c63-277">如果这为 <see langword="null" />，则不解析外部资源。</span><span class="sxs-lookup"><span data-stu-id="75c63-277">If this is <see langword="null" />, external resources are not resolved.</span></span></param>
        <summary><span data-ttu-id="75c63-278">编译 <see cref="T:System.Xml.XmlReader" /> 中包含的 XSLT 样式表。</span><span class="sxs-lookup"><span data-stu-id="75c63-278">Compiles the XSLT style sheet contained in the <see cref="T:System.Xml.XmlReader" />.</span></span> <span data-ttu-id="75c63-279"><see cref="T:System.Xml.XmlResolver" /> 可以解析任何 XSLT <c>import</c> 或 <c>include</c> 元素，而 XSLT 设置决定了样式表的权限。</span><span class="sxs-lookup"><span data-stu-id="75c63-279">The <see cref="T:System.Xml.XmlResolver" /> resolves any XSLT <c>import</c> or <c>include</c> elements and the XSLT settings determine the permissions for the style sheet.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="75c63-280"><xref:System.Xml.Xsl.XslCompiledTransform>类支持 XSLT 1.0 语法。</span><span class="sxs-lookup"><span data-stu-id="75c63-280">The <xref:System.Xml.Xsl.XslCompiledTransform> class supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="75c63-281">XSLT 样式表必须使用 `http://www.w3.org/1999/XSL/Transform` 命名空间。</span><span class="sxs-lookup"><span data-stu-id="75c63-281">The XSLT style sheet must use the `http://www.w3.org/1999/XSL/Transform` namespace.</span></span>  
  
 <span data-ttu-id="75c63-282">样式表从的当前节点加载 <xref:System.Xml.XmlReader> 到其所有子级。</span><span class="sxs-lookup"><span data-stu-id="75c63-282">The style sheet loads from the current node of the <xref:System.Xml.XmlReader> through all its children.</span></span> <span data-ttu-id="75c63-283">这使您可以使用文档的一部分作为样式表。</span><span class="sxs-lookup"><span data-stu-id="75c63-283">This enables you to use a portion of a document as the style sheet.</span></span> <span data-ttu-id="75c63-284">此 <xref:System.Xml.Xsl.XslCompiledTransform.Load%2A> 方法完成后，将 <xref:System.Xml.XmlReader> 定位到样式表末尾后的下一个节点。</span><span class="sxs-lookup"><span data-stu-id="75c63-284">After the <xref:System.Xml.Xsl.XslCompiledTransform.Load%2A> method completes, the <xref:System.Xml.XmlReader> is positioned on the next node after the end of the style sheet.</span></span> <span data-ttu-id="75c63-285">如果已到达文档结尾，<xref:System.Xml.XmlReader> 将位于文件结尾 (EOF)。</span><span class="sxs-lookup"><span data-stu-id="75c63-285">If the end of the document is reached, the <xref:System.Xml.XmlReader> is positioned at the end of file (EOF).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="75c63-286">下面的示例加载一个样式表并启用对 XSLT 脚本的支持。</span><span class="sxs-lookup"><span data-stu-id="75c63-286">The following example loads a style sheet and enables support for XSLT scripting.</span></span>  
  
 [!code-csharp[XslCompiledTransform.Load#3](~/samples/snippets/csharp/VS_Snippets_Data/XslCompiledTransform.Load/CS/Xslt_Load_v2.cs#3)]
 [!code-vb[XslCompiledTransform.Load#3](~/samples/snippets/visualbasic/VS_Snippets_Data/XslCompiledTransform.Load/VB/Xslt_Load_v2.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="75c63-287"><paramref name="stylesheet" /> 值为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="75c63-287">The <paramref name="stylesheet" /> value is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Xml.Xsl.XsltException"><span data-ttu-id="75c63-288">样式表中有错。</span><span class="sxs-lookup"><span data-stu-id="75c63-288">The style sheet contains an error.</span></span></exception>
        <related type="Article" href="/dotnet/standard/data/xml/using-the-xslcompiledtransform-class"><span data-ttu-id="75c63-289">使用 XslCompiledTransform 类</span><span class="sxs-lookup"><span data-stu-id="75c63-289">Using the XslCompiledTransform Class</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Xml.XPath.IXPathNavigable? stylesheet, System.Xml.Xsl.XsltSettings settings, System.Xml.XmlResolver stylesheetResolver);" FrameworkAlternate="net-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Xml.XPath.IXPathNavigable stylesheet, class System.Xml.Xsl.XsltSettings settings, class System.Xml.XmlResolver stylesheetResolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslCompiledTransform.Load(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltSettings,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (stylesheet As IXPathNavigable, settings As XsltSettings, stylesheetResolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Xml::XPath::IXPathNavigable ^ stylesheet, System::Xml::Xsl::XsltSettings ^ settings, System::Xml::XmlResolver ^ stylesheetResolver);" />
      <MemberSignature Language="F#" Value="member this.Load : System.Xml.XPath.IXPathNavigable * System.Xml.Xsl.XsltSettings * System.Xml.XmlResolver -&gt; unit" Usage="xslCompiledTransform.Load (stylesheet, settings, stylesheetResolver)" />
      <MemberSignature Language="C#" Value="public void Load (System.Xml.XPath.IXPathNavigable stylesheet, System.Xml.Xsl.XsltSettings settings, System.Xml.XmlResolver stylesheetResolver);" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheet" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="settings" Type="System.Xml.Xsl.XsltSettings" />
        <Parameter Name="stylesheetResolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="stylesheet"><span data-ttu-id="75c63-290">一个实现 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 接口的对象。</span><span class="sxs-lookup"><span data-stu-id="75c63-290">An object implementing the <see cref="T:System.Xml.XPath.IXPathNavigable" /> interface.</span></span> <span data-ttu-id="75c63-291">在 Microsoft .NET Framework 中，这可以是 <see cref="T:System.Xml.XmlNode" />（一般为 <see cref="T:System.Xml.XmlDocument" />），或者是包含该样式表的 <see cref="T:System.Xml.XPath.XPathDocument" />。</span><span class="sxs-lookup"><span data-stu-id="75c63-291">In the Microsoft .NET Framework, this can be either an <see cref="T:System.Xml.XmlNode" /> (typically an <see cref="T:System.Xml.XmlDocument" />), or an <see cref="T:System.Xml.XPath.XPathDocument" /> containing the style sheet.</span></span></param>
        <param name="settings"><span data-ttu-id="75c63-292">应用于样式表的 <see cref="T:System.Xml.Xsl.XsltSettings" />。</span><span class="sxs-lookup"><span data-stu-id="75c63-292">The <see cref="T:System.Xml.Xsl.XsltSettings" /> to apply to the style sheet.</span></span> <span data-ttu-id="75c63-293">如果是 <see langword="null" />，则应用 <see cref="P:System.Xml.Xsl.XsltSettings.Default" /> 设置。</span><span class="sxs-lookup"><span data-stu-id="75c63-293">If this is <see langword="null" />, the <see cref="P:System.Xml.Xsl.XsltSettings.Default" /> setting is applied.</span></span></param>
        <param name="stylesheetResolver"><span data-ttu-id="75c63-294"><see cref="T:System.Xml.XmlResolver" />，用于解析 XSLT <c>import</c> 和 <c>include</c> 元素中引用的所有样式表。</span><span class="sxs-lookup"><span data-stu-id="75c63-294">The <see cref="T:System.Xml.XmlResolver" /> used to resolve any style sheets referenced in XSLT <c>import</c> and <c>include</c> elements.</span></span> <span data-ttu-id="75c63-295">如果这为 <see langword="null" />，则不解析外部资源。</span><span class="sxs-lookup"><span data-stu-id="75c63-295">If this is <see langword="null" />, external resources are not resolved.</span></span></param>
        <summary><span data-ttu-id="75c63-296">编译 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 中包含的 XSLT 样式表。</span><span class="sxs-lookup"><span data-stu-id="75c63-296">Compiles the XSLT style sheet contained in the <see cref="T:System.Xml.XPath.IXPathNavigable" />.</span></span> <span data-ttu-id="75c63-297"><see cref="T:System.Xml.XmlResolver" /> 可以解析任何 XSLT <c>import</c> 或 <c>include</c> 元素，而 XSLT 设置决定了样式表的权限。</span><span class="sxs-lookup"><span data-stu-id="75c63-297">The <see cref="T:System.Xml.XmlResolver" /> resolves any XSLT <c>import</c> or <c>include</c> elements and the XSLT settings determine the permissions for the style sheet.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="75c63-298"><xref:System.Xml.Xsl.XslCompiledTransform>类支持 XSLT 1.0 语法。</span><span class="sxs-lookup"><span data-stu-id="75c63-298">The <xref:System.Xml.Xsl.XslCompiledTransform> class supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="75c63-299">XSLT 样式表必须使用 `http://www.w3.org/1999/XSL/Transform` 命名空间。</span><span class="sxs-lookup"><span data-stu-id="75c63-299">The XSLT style sheet must use the `http://www.w3.org/1999/XSL/Transform` namespace.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="75c63-300">下面的示例加载样式表。</span><span class="sxs-lookup"><span data-stu-id="75c63-300">The following example loads a style sheet.</span></span> <span data-ttu-id="75c63-301"><xref:System.Xml.XmlSecureResolver>对象包含访问 `import` `include` 在样式表中找到的任何或元素所需的凭据。</span><span class="sxs-lookup"><span data-stu-id="75c63-301">The <xref:System.Xml.XmlSecureResolver> object contains the credentials necessary to access any `import` or `include` elements found in the style sheet.</span></span>  
  
 [!code-csharp[XslCompiledTransform.Load#4](~/samples/snippets/csharp/VS_Snippets_Data/XslCompiledTransform.Load/CS/Xslt_Load_v2.cs#4)]
 [!code-vb[XslCompiledTransform.Load#4](~/samples/snippets/visualbasic/VS_Snippets_Data/XslCompiledTransform.Load/VB/Xslt_Load_v2.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="75c63-302"><paramref name="stylesheet" /> 值为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="75c63-302">The <paramref name="stylesheet" /> value is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Xml.Xsl.XsltException"><span data-ttu-id="75c63-303">样式表中有错。</span><span class="sxs-lookup"><span data-stu-id="75c63-303">The style sheet contains an error.</span></span></exception>
        <related type="Article" href="/dotnet/standard/data/xml/using-the-xslcompiledtransform-class"><span data-ttu-id="75c63-304">使用 XslCompiledTransform 类</span><span class="sxs-lookup"><span data-stu-id="75c63-304">Using the XslCompiledTransform Class</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="OutputSettings">
      <MemberSignature Language="C#" Value="public System.Xml.XmlWriterSettings? OutputSettings { get; }" FrameworkAlternate="net-5.0" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlWriterSettings OutputSettings" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OutputSettings As XmlWriterSettings" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::XmlWriterSettings ^ OutputSettings { System::Xml::XmlWriterSettings ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.OutputSettings : System.Xml.XmlWriterSettings" Usage="System.Xml.Xsl.XslCompiledTransform.OutputSettings" />
      <MemberSignature Language="C#" Value="public System.Xml.XmlWriterSettings OutputSettings { get; }" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.XmlWriterSettings</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="75c63-305">获取一个 <see cref="T:System.Xml.XmlWriterSettings" /> 对象，该对象包含从样式表的 <c>xsl:output</c> 元素派生的输出信息。</span><span class="sxs-lookup"><span data-stu-id="75c63-305">Gets an <see cref="T:System.Xml.XmlWriterSettings" /> object that contains the output information derived from the <c>xsl:output</c> element of the style sheet.</span></span></summary>
        <value><span data-ttu-id="75c63-306">一个只读 <see cref="T:System.Xml.XmlWriterSettings" /> 对象，其中包含从样式表的 <c>xsl： output</c> 元素派生的输出信息。</span><span class="sxs-lookup"><span data-stu-id="75c63-306">A read-only <see cref="T:System.Xml.XmlWriterSettings" /> object that contains the output information derived from the <c>xsl:output</c> element of the style sheet.</span></span> <span data-ttu-id="75c63-307">此值可为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="75c63-307">This value can be <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="75c63-308">成功调用方法后，将填充此属性 <xref:System.Xml.Xsl.XslCompiledTransform.Load%2A> 。</span><span class="sxs-lookup"><span data-stu-id="75c63-308">This property is populated after a successful call to the <xref:System.Xml.Xsl.XslCompiledTransform.Load%2A> method.</span></span> <span data-ttu-id="75c63-309">它包含从 `xsl:output` 已编译样式表的元素派生的信息。</span><span class="sxs-lookup"><span data-stu-id="75c63-309">It contains information derived from the `xsl:output` element of a compiled style sheet.</span></span> <span data-ttu-id="75c63-310">此 <xref:System.Xml.XmlWriterSettings> 对象可传递给 <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> 方法以创建要 <xref:System.Xml.XmlWriter> 输出到的对象。</span><span class="sxs-lookup"><span data-stu-id="75c63-310">This <xref:System.Xml.XmlWriterSettings> object can be passed to the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method to create the <xref:System.Xml.XmlWriter> object to which you want to output.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="75c63-311">下面的示例演示如何使用 <xref:System.Xml.Xsl.XslCompiledTransform.OutputSettings%2A> 属性创建将 <xref:System.Xml.XmlWriter> 文本写入控制台的对象。</span><span class="sxs-lookup"><span data-stu-id="75c63-311">The following example shows how to use the <xref:System.Xml.Xsl.XslCompiledTransform.OutputSettings%2A> property to create an <xref:System.Xml.XmlWriter> object that writes text to the console.</span></span>  
  
 [!code-csharp[XslCompiledTransform.OutputSettings#1](~/samples/snippets/csharp/VS_Snippets_Data/XslCompiledTransform.OutputSettings/CS/xslt_OutputSettings.cs#1)]
 [!code-vb[XslCompiledTransform.OutputSettings#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XslCompiledTransform.OutputSettings/VB/xslt_OutputSettings.vb#1)]  
  
 <span data-ttu-id="75c63-312">该示例使用 `books.xml` 和 `outputConsole.xsl` 文件作为输入。</span><span class="sxs-lookup"><span data-stu-id="75c63-312">The example uses the `books.xml` and `outputConsole.xsl` files as input.</span></span>  
  
 `books.xml`  
  
 [!code-xml[XslCompiledTransform.OutputSettings#2](~/samples/snippets/xml/VS_Snippets_Data/XslCompiledTransform.OutputSettings/XML/books.xml#2)]  
  
 `outputConsole.xsl`  
  
 [!code-xml[XslCompiledTransform.OutputSettings#3](~/samples/snippets/xml/VS_Snippets_Data/XslCompiledTransform.OutputSettings/XML/outputConsole.xsl#3)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/standard/data/xml/using-the-xslcompiledtransform-class"><span data-ttu-id="75c63-313">使用 XslCompiledTransform 类</span><span class="sxs-lookup"><span data-stu-id="75c63-313">Using the XslCompiledTransform Class</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="TemporaryFiles">
      <MemberSignature Language="C#" Value="public System.CodeDom.Compiler.TempFileCollection TemporaryFiles { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.CodeDom.Compiler.TempFileCollection TemporaryFiles" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Xsl.XslCompiledTransform.TemporaryFiles" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TemporaryFiles As TempFileCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::CodeDom::Compiler::TempFileCollection ^ TemporaryFiles { System::CodeDom::Compiler::TempFileCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TemporaryFiles : System.CodeDom.Compiler.TempFileCollection" Usage="System.Xml.Xsl.XslCompiledTransform.TemporaryFiles" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.Compiler.TempFileCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="75c63-314">获取包含临时文件的 <see cref="T:System.CodeDom.Compiler.TempFileCollection" />，这些临时文件是在成功调用 <see cref="Overload:System.Xml.Xsl.XslCompiledTransform.Load" /> 方法后在磁盘上生成的。</span><span class="sxs-lookup"><span data-stu-id="75c63-314">Gets the <see cref="T:System.CodeDom.Compiler.TempFileCollection" /> that contains the temporary files generated on disk after a successful call to the <see cref="Overload:System.Xml.Xsl.XslCompiledTransform.Load" /> method.</span></span></summary>
        <value><span data-ttu-id="75c63-315"><see cref="T:System.CodeDom.Compiler.TempFileCollection" /> 包含在磁盘上生成的临时文件。</span><span class="sxs-lookup"><span data-stu-id="75c63-315">The <see cref="T:System.CodeDom.Compiler.TempFileCollection" /> that contains the temporary files generated on disk.</span></span> <span data-ttu-id="75c63-316">如果调用 <see cref="Overload:System.Xml.Xsl.XslCompiledTransform.Load" /> 方法不成功或者尚未启用调试，则此值为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="75c63-316">This value is <see langword="null" /> if the <see cref="Overload:System.Xml.Xsl.XslCompiledTransform.Load" /> method has not been successfully called, or if debugging has not been enabled.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="75c63-317">此属性标识在 XSLT 处理期间生成的文件。</span><span class="sxs-lookup"><span data-stu-id="75c63-317">This property identifies the files that were generated during XSLT processing.</span></span> <span data-ttu-id="75c63-318">文件放在 Temp 目录中 (由% TEMP% 环境变量指定) 可以在 XSLT 处理完成后删除这些文件。</span><span class="sxs-lookup"><span data-stu-id="75c63-318">The files are placed in your Temp directory (specified by the %TEMP% environment variable) You can delete these files after the XSLT processing has completed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="75c63-319">下面的示例将临时文件的名称写入控制台。</span><span class="sxs-lookup"><span data-stu-id="75c63-319">The following example writes the names of temporary files to the console.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="75c63-320">仅在加载具有块的样式表时创建临时文件 \<msxsl:script> 。</span><span class="sxs-lookup"><span data-stu-id="75c63-320">Temporary files are created only when loading style sheets with \<msxsl:script> blocks.</span></span>  
  
 [!code-csharp[XslCompiledTransform.Transform#8](~/samples/snippets/csharp/VS_Snippets_Data/XslCompiledTransform.Transform/CS/Xslt_Transform_v2.cs#8)]
 [!code-vb[XslCompiledTransform.Transform#8](~/samples/snippets/visualbasic/VS_Snippets_Data/XslCompiledTransform.Transform/VB/Xslt_Transform_v2.vb#8)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/standard/data/xml/using-the-xslcompiledtransform-class"><span data-ttu-id="75c63-321">使用 XslCompiledTransform 类</span><span class="sxs-lookup"><span data-stu-id="75c63-321">Using the XslCompiledTransform Class</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Transform">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="75c63-322">执行 XSLT 转换。</span><span class="sxs-lookup"><span data-stu-id="75c63-322">Executes the XSLT transformation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="75c63-323">以调试模式编译的 XSLT 与以发布模式编译的 XSLT 之间有一些差别。</span><span class="sxs-lookup"><span data-stu-id="75c63-323">There are differences between XSLT compiled in Debug mode and XSLT compiled in Release mode.</span></span> <span data-ttu-id="75c63-324">在有些情况下，以调试模式编译的样式表在 <xref:System.Xml.Xsl.XslCompiledTransform.Load%2A> 期间不会引发错误，但以后在 <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> 期间会失败。</span><span class="sxs-lookup"><span data-stu-id="75c63-324">In some situations, style sheets compiled in Debug mode will not throw errors during <xref:System.Xml.Xsl.XslCompiledTransform.Load%2A>, but will later fail during <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A>.</span></span> <span data-ttu-id="75c63-325">以发布模式编译的同一个样式表在 <xref:System.Xml.Xsl.XslCompiledTransform.Load%2A> 期间就会失败。</span><span class="sxs-lookup"><span data-stu-id="75c63-325">The same style sheet compiled in Release mode will fail during <xref:System.Xml.Xsl.XslCompiledTransform.Load%2A>.</span></span> <span data-ttu-id="75c63-326">例如，当某个表达式需要节点集，而分配给该表达式的变量不是节点集类型的时，就会出现这种情况。</span><span class="sxs-lookup"><span data-stu-id="75c63-326">An example of such behavior is when a variable that is not of a node-set type is assigned to an expression where a node-set is required.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/standard/data/xml/using-the-xslcompiledtransform-class"><span data-ttu-id="75c63-327">使用 XslCompiledTransform 类</span><span class="sxs-lookup"><span data-stu-id="75c63-327">Using the XslCompiledTransform Class</span></span></related>
      </Docs>
    </MemberGroup>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (string inputUri, string resultsFile);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(string inputUri, string resultsFile) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (inputUri As String, resultsFile As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::String ^ inputUri, System::String ^ resultsFile);" />
      <MemberSignature Language="F#" Value="member this.Transform : string * string -&gt; unit" Usage="xslCompiledTransform.Transform (inputUri, resultsFile)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputUri" Type="System.String" />
        <Parameter Name="resultsFile" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="inputUri"><span data-ttu-id="75c63-328">输入文档的 URI。</span><span class="sxs-lookup"><span data-stu-id="75c63-328">The URI of the input document.</span></span></param>
        <param name="resultsFile"><span data-ttu-id="75c63-329">输出文件的 URI。</span><span class="sxs-lookup"><span data-stu-id="75c63-329">The URI of the output file.</span></span></param>
        <summary><span data-ttu-id="75c63-330">使用 URI 指定的输入文档执行转换，然后将结果输出到文件。</span><span class="sxs-lookup"><span data-stu-id="75c63-330">Executes the transform using the input document specified by the URI and outputs the results to a file.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="75c63-331">此方法使用 <xref:System.Xml.XmlUrlResolver> 没有用户凭据的默认值来解析输入和输出文档。</span><span class="sxs-lookup"><span data-stu-id="75c63-331">This method uses a default <xref:System.Xml.XmlUrlResolver> with no user credentials to resolve the input and output documents.</span></span> <span data-ttu-id="75c63-332">如果这些资源中的任何一个需要身份验证的网络资源，请使用 <xref:System.Xml.XmlResolver> 以作为其参数之一的重载，并使用 <xref:System.Xml.XmlResolver> 所需的凭据指定。</span><span class="sxs-lookup"><span data-stu-id="75c63-332">If any of these resources are located on a network resource that requires authentication, use the overload that takes an <xref:System.Xml.XmlResolver> as one of its arguments and specify an <xref:System.Xml.XmlResolver> with the necessary credentials.</span></span>  
  
 <span data-ttu-id="75c63-333">使用 <xref:System.Xml.XmlReader> 带有默认设置的来加载输入文档。</span><span class="sxs-lookup"><span data-stu-id="75c63-333">An <xref:System.Xml.XmlReader> with default settings is used to load the input document.</span></span> <span data-ttu-id="75c63-334">在上禁用 DTD 处理 <xref:System.Xml.XmlReader> 。</span><span class="sxs-lookup"><span data-stu-id="75c63-334">DTD processing is disabled on the <xref:System.Xml.XmlReader>.</span></span> <span data-ttu-id="75c63-335">如果需要 DTD 处理，请创建一个 <xref:System.Xml.XmlReader> 启用了此功能的，并将其传递给 <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="75c63-335">If you require DTD processing, create an <xref:System.Xml.XmlReader> with this feature enabled, and pass it to the <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="75c63-336">下面的示例执行转换并输出到文件。</span><span class="sxs-lookup"><span data-stu-id="75c63-336">The following example executes a transform and outputs to a file.</span></span>  
  
 [!code-csharp[XslCompiledTransform.Transform#1](~/samples/snippets/csharp/VS_Snippets_Data/XslCompiledTransform.Transform/CS/Xslt_Transform_v2.cs#1)]
 [!code-vb[XslCompiledTransform.Transform#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XslCompiledTransform.Transform/VB/Xslt_Transform_v2.vb#1)]  
  
 <span data-ttu-id="75c63-337">该示例使用以下两个输入文件：</span><span class="sxs-lookup"><span data-stu-id="75c63-337">The sample uses the following two input files:</span></span>  
  
 `books.xml`  
  
 [!code-xml[Classic WebData XslTransform.Transform7 Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/XML/books.xml#2)]  
  
 `output.xsl`  
  
 [!code-xml[Classic WebData XslTransform.Transform7 Example#3](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/XML/output.xsl#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="75c63-338"><paramref name="inputUri" /> 或 <paramref name="resultsFile" /> 值为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="75c63-338">The <paramref name="inputUri" /> or <paramref name="resultsFile" /> value is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Xml.Xsl.XsltException"><span data-ttu-id="75c63-339">执行 XSLT 转换时出错。</span><span class="sxs-lookup"><span data-stu-id="75c63-339">There was an error executing the XSLT transform.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="75c63-340">无法找到输入文档。</span><span class="sxs-lookup"><span data-stu-id="75c63-340">The input document cannot be found.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="75c63-341"><paramref name="inputUri" /> 或 <paramref name="resultsFile" /> 值包含无法找到的文件名或目录。</span><span class="sxs-lookup"><span data-stu-id="75c63-341">The <paramref name="inputUri" /> or <paramref name="resultsFile" /> value includes a filename or directory cannot be found.</span></span></exception>
        <exception cref="T:System.Net.WebException"><span data-ttu-id="75c63-342">无法解析 <paramref name="inputUri" /> 或 <paramref name="resultsFile" /> 值。</span><span class="sxs-lookup"><span data-stu-id="75c63-342">The <paramref name="inputUri" /> or <paramref name="resultsFile" /> value cannot be resolved.</span></span>  
  
<span data-ttu-id="75c63-343">- 或 -</span><span class="sxs-lookup"><span data-stu-id="75c63-343">-or-</span></span> 
<span data-ttu-id="75c63-344">处理请求时发生错误</span><span class="sxs-lookup"><span data-stu-id="75c63-344">An error occurred while processing the request</span></span></exception>
        <exception cref="T:System.UriFormatException"><span data-ttu-id="75c63-345"><paramref name="inputUri" /> 或 <paramref name="resultsFile" /> 不是有效 URI。</span><span class="sxs-lookup"><span data-stu-id="75c63-345"><paramref name="inputUri" /> or <paramref name="resultsFile" /> is not a valid URI.</span></span></exception>
        <exception cref="T:System.Xml.XmlException"><span data-ttu-id="75c63-346">加载输入文档时出现分析错误。</span><span class="sxs-lookup"><span data-stu-id="75c63-346">There was a parsing error loading the input document.</span></span></exception>
        <related type="Article" href="/dotnet/standard/data/xml/using-the-xslcompiledtransform-class"><span data-ttu-id="75c63-347">使用 XslCompiledTransform 类</span><span class="sxs-lookup"><span data-stu-id="75c63-347">Using the XslCompiledTransform Class</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (string inputUri, System.Xml.XmlWriter results);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(string inputUri, class System.Xml.XmlWriter results) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (inputUri As String, results As XmlWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::String ^ inputUri, System::Xml::XmlWriter ^ results);" />
      <MemberSignature Language="F#" Value="member this.Transform : string * System.Xml.XmlWriter -&gt; unit" Usage="xslCompiledTransform.Transform (inputUri, results)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputUri" Type="System.String" />
        <Parameter Name="results" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="inputUri"><span data-ttu-id="75c63-348">输入文档的 URI。</span><span class="sxs-lookup"><span data-stu-id="75c63-348">The URI of the input document.</span></span></param>
        <param name="results"><span data-ttu-id="75c63-349">要输出到的 <see cref="T:System.Xml.XmlWriter" />。</span><span class="sxs-lookup"><span data-stu-id="75c63-349">The <see cref="T:System.Xml.XmlWriter" /> to which you want to output.</span></span>  
  
<span data-ttu-id="75c63-350">如果样式表包含 <c>xsl:output</c> 元素，则应使用由 <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" /> 属性返回的 <see cref="T:System.Xml.XmlWriterSettings" /> 对象来创建 <see cref="T:System.Xml.XmlWriter" />。</span><span class="sxs-lookup"><span data-stu-id="75c63-350">If the style sheet contains an <c>xsl:output</c> element, you should create the <see cref="T:System.Xml.XmlWriter" /> using the <see cref="T:System.Xml.XmlWriterSettings" /> object returned from the <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" /> property.</span></span> <span data-ttu-id="75c63-351">这样可以确保 <see cref="T:System.Xml.XmlWriter" /> 的输出设置是正确的。</span><span class="sxs-lookup"><span data-stu-id="75c63-351">This ensures that the <see cref="T:System.Xml.XmlWriter" /> has the correct output settings.</span></span></param>
        <summary><span data-ttu-id="75c63-352">使用 URI 指定的输入文档执行转换，然后将结果输出到 <see cref="T:System.Xml.XmlWriter" />。</span><span class="sxs-lookup"><span data-stu-id="75c63-352">Executes the transform using the input document specified by the URI and outputs the results to an <see cref="T:System.Xml.XmlWriter" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="75c63-353">此方法使用 <xref:System.Xml.XmlUrlResolver> 没有用户凭据的默认值来解析输入文档和 `document()` 在样式表中找到的任何 XSLT 函数的实例。</span><span class="sxs-lookup"><span data-stu-id="75c63-353">This method uses a default <xref:System.Xml.XmlUrlResolver> with no user credentials to resolve the input document and any instances of the XSLT `document()` function found in the style sheet.</span></span> <span data-ttu-id="75c63-354">如果这些资源中的任何一个需要身份验证的网络资源，请使用 <xref:System.Xml.XmlResolver> 以作为其参数之一的重载，并使用 <xref:System.Xml.XmlResolver> 所需的凭据指定。</span><span class="sxs-lookup"><span data-stu-id="75c63-354">If any of these resources are located on a network resource that requires authentication, use the overload that takes an <xref:System.Xml.XmlResolver> as one of its arguments and specify an <xref:System.Xml.XmlResolver> with the necessary credentials.</span></span>  
  
 <span data-ttu-id="75c63-355">使用 <xref:System.Xml.XmlReader> 带有默认设置的来加载输入文档。</span><span class="sxs-lookup"><span data-stu-id="75c63-355">An <xref:System.Xml.XmlReader> with default settings is used to load the input document.</span></span> <span data-ttu-id="75c63-356">在上禁用 DTD 处理 <xref:System.Xml.XmlReader> 。</span><span class="sxs-lookup"><span data-stu-id="75c63-356">DTD processing is disabled on the <xref:System.Xml.XmlReader>.</span></span> <span data-ttu-id="75c63-357">如果需要 DTD 处理，请创建一个 <xref:System.Xml.XmlReader> 启用了此功能的，并将其传递给 <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="75c63-357">If you require DTD processing, create an <xref:System.Xml.XmlReader> with this feature enabled, and pass it to the <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> method.</span></span>  
  
 <span data-ttu-id="75c63-358">此方法不支持 `xsl:strip-space` 元素。</span><span class="sxs-lookup"><span data-stu-id="75c63-358">This method does not support the `xsl:strip-space` element.</span></span> <span data-ttu-id="75c63-359">如果已编译的样式表包含 `xsl:strip-space` 元素，则必须使用 <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> 重载，该重载采用 <xref:System.Xml.XmlReader> 作为输入参数。</span><span class="sxs-lookup"><span data-stu-id="75c63-359">If your compiled style sheet included the `xsl:strip-space` element, you must use the <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> overload which takes an <xref:System.Xml.XmlReader> as the input argument.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="75c63-360">下面的示例执行 XSLT 转换并输出到 <xref:System.Xml.XmlWriter> 对象。</span><span class="sxs-lookup"><span data-stu-id="75c63-360">The following example executes an XSLT transformation and outputs to an <xref:System.Xml.XmlWriter> object.</span></span>  
  
 [!code-csharp[XslCompiledTransform.Transform#2](~/samples/snippets/csharp/VS_Snippets_Data/XslCompiledTransform.Transform/CS/Xslt_Transform_v2.cs#2)]
 [!code-vb[XslCompiledTransform.Transform#2](~/samples/snippets/visualbasic/VS_Snippets_Data/XslCompiledTransform.Transform/VB/Xslt_Transform_v2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="75c63-361"><paramref name="inputUri" /> 或 <paramref name="results" /> 值为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="75c63-361">The <paramref name="inputUri" /> or <paramref name="results" /> value is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Xml.Xsl.XsltException"><span data-ttu-id="75c63-362">执行 XSLT 转换时出错。</span><span class="sxs-lookup"><span data-stu-id="75c63-362">There was an error executing the XSLT transform.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="75c63-363"><paramref name="inputUri" /> 值包含无法找到的文件名或目录。</span><span class="sxs-lookup"><span data-stu-id="75c63-363">The <paramref name="inputUri" /> value includes a filename or directory cannot be found.</span></span></exception>
        <exception cref="T:System.Net.WebException"><span data-ttu-id="75c63-364">无法解析 <paramref name="inputUri" /> 值。</span><span class="sxs-lookup"><span data-stu-id="75c63-364">The <paramref name="inputUri" /> value cannot be resolved.</span></span>  
  
<span data-ttu-id="75c63-365">- 或 -</span><span class="sxs-lookup"><span data-stu-id="75c63-365">-or-</span></span> 
<span data-ttu-id="75c63-366">处理该请求时出错。</span><span class="sxs-lookup"><span data-stu-id="75c63-366">An error occurred while processing the request.</span></span></exception>
        <exception cref="T:System.UriFormatException"><span data-ttu-id="75c63-367"><paramref name="inputUri" /> 不是有效的 URI。</span><span class="sxs-lookup"><span data-stu-id="75c63-367"><paramref name="inputUri" /> is not a valid URI.</span></span></exception>
        <exception cref="T:System.Xml.XmlException"><span data-ttu-id="75c63-368">加载输入文档时出现分析错误。</span><span class="sxs-lookup"><span data-stu-id="75c63-368">There was a parsing error loading the input document.</span></span></exception>
        <related type="Article" href="/dotnet/standard/data/xml/using-the-xslcompiledtransform-class"><span data-ttu-id="75c63-369">使用 XslCompiledTransform 类</span><span class="sxs-lookup"><span data-stu-id="75c63-369">Using the XslCompiledTransform Class</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XmlReader input, System.Xml.XmlWriter results);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XmlReader input, class System.Xml.XmlWriter results) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XmlReader,System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As XmlReader, results As XmlWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XmlReader ^ input, System::Xml::XmlWriter ^ results);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XmlReader * System.Xml.XmlWriter -&gt; unit" Usage="xslCompiledTransform.Transform (input, results)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XmlReader" />
        <Parameter Name="results" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="75c63-370">包含输入文档的 <see cref="T:System.Xml.XmlReader" />。</span><span class="sxs-lookup"><span data-stu-id="75c63-370">The <see cref="T:System.Xml.XmlReader" /> containing the input document.</span></span></param>
        <param name="results"><span data-ttu-id="75c63-371">要输出到的 <see cref="T:System.Xml.XmlWriter" />。</span><span class="sxs-lookup"><span data-stu-id="75c63-371">The <see cref="T:System.Xml.XmlWriter" /> to which you want to output.</span></span>  
  
<span data-ttu-id="75c63-372">如果样式表包含 <c>xsl:output</c> 元素，则应使用由 <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" /> 属性返回的 <see cref="T:System.Xml.XmlWriterSettings" /> 对象来创建 <see cref="T:System.Xml.XmlWriter" />。</span><span class="sxs-lookup"><span data-stu-id="75c63-372">If the style sheet contains an <c>xsl:output</c> element, you should create the <see cref="T:System.Xml.XmlWriter" /> using the <see cref="T:System.Xml.XmlWriterSettings" /> object returned from the <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" /> property.</span></span> <span data-ttu-id="75c63-373">这样可以确保 <see cref="T:System.Xml.XmlWriter" /> 的输出设置是正确的。</span><span class="sxs-lookup"><span data-stu-id="75c63-373">This ensures that the <see cref="T:System.Xml.XmlWriter" /> has the correct output settings.</span></span></param>
        <summary><span data-ttu-id="75c63-374">使用 <see cref="T:System.Xml.XmlReader" /> 对象指定的输入文档执行转换，然后将结果输出到 <see cref="T:System.Xml.XmlWriter" />。</span><span class="sxs-lookup"><span data-stu-id="75c63-374">Executes the transform using the input document specified by the <see cref="T:System.Xml.XmlReader" /> object and outputs the results to an <see cref="T:System.Xml.XmlWriter" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="75c63-375">如果启用了 XSLT `document()` 函数，则使用 <xref:System.Xml.XmlUrlResolver> 不带用户凭据的进行解析。</span><span class="sxs-lookup"><span data-stu-id="75c63-375">If the XSLT `document()` function is enabled, it is resolved using an <xref:System.Xml.XmlUrlResolver> with no user credentials.</span></span> <span data-ttu-id="75c63-376">如果外部资源位于要求身份验证的网络资源上，则使用重载，该重载采用 <xref:System.Xml.XmlResolver> 作为其参数之一的重载，并使用 <xref:System.Xml.XmlResolver> 所需的凭据指定。</span><span class="sxs-lookup"><span data-stu-id="75c63-376">If the external resource is located on a network resource that requires authentication, use the overload that takes an <xref:System.Xml.XmlResolver> as one of its arguments and specify an <xref:System.Xml.XmlResolver> with the necessary credentials.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="75c63-377">下面的示例将转换 books.xml 文件中的第一本书。</span><span class="sxs-lookup"><span data-stu-id="75c63-377">The following example transforms the first book in the books.xml file.</span></span>  
  
 [!code-csharp[XslCompiledTransform.Transform#7](~/samples/snippets/csharp/VS_Snippets_Data/XslCompiledTransform.Transform/CS/Xslt_Transform_v2.cs#7)]
 [!code-vb[XslCompiledTransform.Transform#7](~/samples/snippets/visualbasic/VS_Snippets_Data/XslCompiledTransform.Transform/VB/Xslt_Transform_v2.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="75c63-378"><paramref name="input" /> 或 <paramref name="results" /> 值为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="75c63-378">The <paramref name="input" /> or <paramref name="results" /> value is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Xml.Xsl.XsltException"><span data-ttu-id="75c63-379">执行 XSLT 转换时出错。</span><span class="sxs-lookup"><span data-stu-id="75c63-379">There was an error executing the XSLT transform.</span></span></exception>
        <related type="Article" href="/dotnet/standard/data/xml/using-the-xslcompiledtransform-class"><span data-ttu-id="75c63-380">使用 XslCompiledTransform 类</span><span class="sxs-lookup"><span data-stu-id="75c63-380">Using the XslCompiledTransform Class</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.XmlWriter results);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.IXPathNavigable input, class System.Xml.XmlWriter results) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As IXPathNavigable, results As XmlWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::IXPathNavigable ^ input, System::Xml::XmlWriter ^ results);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.IXPathNavigable * System.Xml.XmlWriter -&gt; unit" Usage="xslCompiledTransform.Transform (input, results)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="results" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="75c63-381">一个实现 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 接口的对象。</span><span class="sxs-lookup"><span data-stu-id="75c63-381">An object implementing the <see cref="T:System.Xml.XPath.IXPathNavigable" /> interface.</span></span> <span data-ttu-id="75c63-382">在 Microsoft .NET Framework 中，这可以是 <see cref="T:System.Xml.XmlNode" />（一般为 <see cref="T:System.Xml.XmlDocument" />），或者是包含要转换的数据的 <see cref="T:System.Xml.XPath.XPathDocument" />。</span><span class="sxs-lookup"><span data-stu-id="75c63-382">In the Microsoft .NET Framework, this can be either an <see cref="T:System.Xml.XmlNode" /> (typically an <see cref="T:System.Xml.XmlDocument" />), or an <see cref="T:System.Xml.XPath.XPathDocument" /> containing the data to be transformed.</span></span></param>
        <param name="results"><span data-ttu-id="75c63-383">要输出到的 <see cref="T:System.Xml.XmlWriter" />。</span><span class="sxs-lookup"><span data-stu-id="75c63-383">The <see cref="T:System.Xml.XmlWriter" /> to which you want to output.</span></span>  
  
<span data-ttu-id="75c63-384">如果样式表包含 <c>xsl:output</c> 元素，则应使用由 <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" /> 属性返回的 <see cref="T:System.Xml.XmlWriterSettings" /> 对象来创建 <see cref="T:System.Xml.XmlWriter" />。</span><span class="sxs-lookup"><span data-stu-id="75c63-384">If the style sheet contains an <c>xsl:output</c> element, you should create the <see cref="T:System.Xml.XmlWriter" /> using the <see cref="T:System.Xml.XmlWriterSettings" /> object returned from the <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" /> property.</span></span> <span data-ttu-id="75c63-385">这样可以确保 <see cref="T:System.Xml.XmlWriter" /> 的输出设置是正确的。</span><span class="sxs-lookup"><span data-stu-id="75c63-385">This ensures that the <see cref="T:System.Xml.XmlWriter" /> has the correct output settings.</span></span></param>
        <summary><span data-ttu-id="75c63-386">使用 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 对象指定的输入文档执行转换，然后将结果输出到 <see cref="T:System.Xml.XmlWriter" />。</span><span class="sxs-lookup"><span data-stu-id="75c63-386">Executes the transform using the input document specified by the <see cref="T:System.Xml.XPath.IXPathNavigable" /> object and outputs the results to an <see cref="T:System.Xml.XmlWriter" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="75c63-387">如果启用了 XSLT `document()` 函数，则使用 <xref:System.Xml.XmlUrlResolver> 不带用户凭据的进行解析。</span><span class="sxs-lookup"><span data-stu-id="75c63-387">If the XSLT `document()` function is enabled, it is resolved using an <xref:System.Xml.XmlUrlResolver> with no user credentials.</span></span> <span data-ttu-id="75c63-388">如果外部资源位于要求身份验证的网络资源上，则使用重载，该重载采用 <xref:System.Xml.XmlResolver> 作为其参数之一的重载，并使用 <xref:System.Xml.XmlResolver> 所需的凭据指定。</span><span class="sxs-lookup"><span data-stu-id="75c63-388">If the external resource is located on a network resource that requires authentication, use the overload that takes an <xref:System.Xml.XmlResolver> as one of its arguments and specify an <xref:System.Xml.XmlResolver> with the necessary credentials.</span></span>  
  
 <span data-ttu-id="75c63-389">此方法不支持 `xsl:strip-space` 元素。</span><span class="sxs-lookup"><span data-stu-id="75c63-389">This method does not support the `xsl:strip-space` element.</span></span> <span data-ttu-id="75c63-390">如果已编译的样式表包含 `xsl:strip-space` 元素，则必须使用 <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> 重载，该重载采用 <xref:System.Xml.XmlReader> 作为输入参数。</span><span class="sxs-lookup"><span data-stu-id="75c63-390">If your compiled style sheet included the `xsl:strip-space` element, you must use the <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> overload which takes an <xref:System.Xml.XmlReader> as the input argument.</span></span>  
  
 <span data-ttu-id="75c63-391"><xref:System.Xml.XPath.IXPathNavigable> 接口在 <xref:System.Xml.XmlNode> 和 <xref:System.Xml.XPath.XPathDocument> 类中实现。</span><span class="sxs-lookup"><span data-stu-id="75c63-391">The <xref:System.Xml.XPath.IXPathNavigable> interface is implemented in the <xref:System.Xml.XmlNode> and <xref:System.Xml.XPath.XPathDocument> classes.</span></span> <span data-ttu-id="75c63-392">这两个类表示 XML 数据的内存中缓存。</span><span class="sxs-lookup"><span data-stu-id="75c63-392">These classes represent an in-memory cache of XML data.</span></span>  
  
-   <span data-ttu-id="75c63-393"><xref:System.Xml.XmlNode> 类基于 W3C 文档对象模型 (DOM) 并具有编辑功能。</span><span class="sxs-lookup"><span data-stu-id="75c63-393">The <xref:System.Xml.XmlNode> class is based on the W3C Document Object Model (DOM) and includes editing capabilities.</span></span>  
  
-   <span data-ttu-id="75c63-394"><xref:System.Xml.XPath.XPathDocument> 类是基于 XPath 数据模型的只读数据存储。</span><span class="sxs-lookup"><span data-stu-id="75c63-394">The <xref:System.Xml.XPath.XPathDocument> class is a read-only data store based on the XPath data model.</span></span> <span data-ttu-id="75c63-395"><xref:System.Xml.XPath.XPathDocument> 是 XSLT 处理建议使用的类。</span><span class="sxs-lookup"><span data-stu-id="75c63-395"><xref:System.Xml.XPath.XPathDocument> is the recommended class for XSLT processing.</span></span> <span data-ttu-id="75c63-396">与 <xref:System.Xml.XmlNode> 类相比，此类的性能更强。</span><span class="sxs-lookup"><span data-stu-id="75c63-396">It provides faster performance when compared to the <xref:System.Xml.XmlNode> class.</span></span>  
  
 <span data-ttu-id="75c63-397">转换将应用于整个文档。</span><span class="sxs-lookup"><span data-stu-id="75c63-397">Transformations apply to the document as a whole.</span></span> <span data-ttu-id="75c63-398">换句话说，如果你传入文档根节点以外的一个节点，并不能防止转换进程访问已加载文档的所有节点。</span><span class="sxs-lookup"><span data-stu-id="75c63-398">In other words, if you pass in a node other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="75c63-399">若要转换节点片段，必须创建一个仅包含节点片段的对象，并将该对象传递给 <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="75c63-399">To transform a node fragment, you must create an object containing just the node fragment, and pass that object to the <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> method.</span></span> <span data-ttu-id="75c63-400">有关详细信息，请参阅[如何：转换节点片段](/dotnet/standard/data/xml/how-to-transform-a-node-fragment)。</span><span class="sxs-lookup"><span data-stu-id="75c63-400">For more information, see [How to: Transform a Node Fragment](/dotnet/standard/data/xml/how-to-transform-a-node-fragment).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="75c63-401">下面的示例执行 XSLT 转换并输出到 <xref:System.Xml.XmlWriter> 对象。</span><span class="sxs-lookup"><span data-stu-id="75c63-401">The following example executes an XSLT transformation and outputs to an <xref:System.Xml.XmlWriter> object.</span></span>  
  
 [!code-csharp[XslCompiledTransform.Transform#5](~/samples/snippets/csharp/VS_Snippets_Data/XslCompiledTransform.Transform/CS/Xslt_Transform_v2.cs#5)]
 [!code-vb[XslCompiledTransform.Transform#5](~/samples/snippets/visualbasic/VS_Snippets_Data/XslCompiledTransform.Transform/VB/Xslt_Transform_v2.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="75c63-402"><paramref name="input" /> 或 <paramref name="results" /> 值为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="75c63-402">The <paramref name="input" /> or <paramref name="results" /> value is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Xml.Xsl.XsltException"><span data-ttu-id="75c63-403">执行 XSLT 转换时出错。</span><span class="sxs-lookup"><span data-stu-id="75c63-403">There was an error executing the XSLT transform.</span></span></exception>
        <related type="Article" href="/dotnet/standard/data/xml/using-the-xslcompiledtransform-class"><span data-ttu-id="75c63-404">使用 XslCompiledTransform 类</span><span class="sxs-lookup"><span data-stu-id="75c63-404">Using the XslCompiledTransform Class</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (string inputUri, System.Xml.Xsl.XsltArgumentList? arguments, System.IO.Stream results);" FrameworkAlternate="net-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(string inputUri, class System.Xml.Xsl.XsltArgumentList arguments, class System.IO.Stream results) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.Xsl.XsltArgumentList,System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (inputUri As String, arguments As XsltArgumentList, results As Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::String ^ inputUri, System::Xml::Xsl::XsltArgumentList ^ arguments, System::IO::Stream ^ results);" />
      <MemberSignature Language="F#" Value="member this.Transform : string * System.Xml.Xsl.XsltArgumentList * System.IO.Stream -&gt; unit" Usage="xslCompiledTransform.Transform (inputUri, arguments, results)" />
      <MemberSignature Language="C#" Value="public void Transform (string inputUri, System.Xml.Xsl.XsltArgumentList arguments, System.IO.Stream results);" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputUri" Type="System.String" />
        <Parameter Name="arguments" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="results" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="inputUri"><span data-ttu-id="75c63-405">输入文档的 URI。</span><span class="sxs-lookup"><span data-stu-id="75c63-405">The URI of the input document.</span></span></param>
        <param name="arguments"><span data-ttu-id="75c63-406"><see cref="T:System.Xml.Xsl.XsltArgumentList" />，包含用作转换输入的命名空间限定的参数。</span><span class="sxs-lookup"><span data-stu-id="75c63-406">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transform.</span></span> <span data-ttu-id="75c63-407">此值可为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="75c63-407">This value can be <see langword="null" />.</span></span></param>
        <param name="results"><span data-ttu-id="75c63-408">要输出到的流。</span><span class="sxs-lookup"><span data-stu-id="75c63-408">The stream to which you want to output.</span></span></param>
        <summary><span data-ttu-id="75c63-409">使用 URI 指定的输入文档执行转换，然后将结果输出到流。</span><span class="sxs-lookup"><span data-stu-id="75c63-409">Executes the transform using the input document specified by the URI and outputs the results to stream.</span></span> <span data-ttu-id="75c63-410"><see cref="T:System.Xml.Xsl.XsltArgumentList" /> 提供附加的运行时参数。</span><span class="sxs-lookup"><span data-stu-id="75c63-410">The <see cref="T:System.Xml.Xsl.XsltArgumentList" /> provides additional run-time arguments.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="75c63-411">此方法使用 <xref:System.Xml.XmlUrlResolver> 没有用户凭据的默认值来解析输入文档和 `document()` 在样式表中找到的任何 XSLT 函数的实例。</span><span class="sxs-lookup"><span data-stu-id="75c63-411">This method uses a default <xref:System.Xml.XmlUrlResolver> with no user credentials to resolve the input document and any instances of the XSLT `document()` function found in the style sheet.</span></span> <span data-ttu-id="75c63-412">如果这些资源中的任何一个需要身份验证的网络资源，请使用 <xref:System.Xml.XmlResolver> 以作为其参数之一的重载，并使用 <xref:System.Xml.XmlResolver> 所需的凭据指定。</span><span class="sxs-lookup"><span data-stu-id="75c63-412">If any of these resources are located on a network resource that requires authentication, use the overload that takes an <xref:System.Xml.XmlResolver> as one of its arguments and specify an <xref:System.Xml.XmlResolver> with the necessary credentials.</span></span>  
  
 <span data-ttu-id="75c63-413">使用 <xref:System.Xml.XmlReader> 带有默认设置的来加载输入文档。</span><span class="sxs-lookup"><span data-stu-id="75c63-413">An <xref:System.Xml.XmlReader> with default settings is used to load the input document.</span></span> <span data-ttu-id="75c63-414">在上禁用 DTD 处理 <xref:System.Xml.XmlReader> 。</span><span class="sxs-lookup"><span data-stu-id="75c63-414">DTD processing is disabled on the <xref:System.Xml.XmlReader>.</span></span> <span data-ttu-id="75c63-415">如果需要 DTD 处理，请创建一个 <xref:System.Xml.XmlReader> 启用了此功能的，并将其传递给 <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="75c63-415">If you require DTD processing, create an <xref:System.Xml.XmlReader> with this feature enabled, and pass it to the <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="75c63-416"><paramref name="inputUri" /> 或 <paramref name="results" /> 值为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="75c63-416">The <paramref name="inputUri" /> or <paramref name="results" /> value is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Xml.Xsl.XsltException"><span data-ttu-id="75c63-417">执行 XSLT 转换时出错。</span><span class="sxs-lookup"><span data-stu-id="75c63-417">There was an error executing the XSLT transform.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="75c63-418"><paramref name="inputUri" /> 值包含无法找到的文件名或目录。</span><span class="sxs-lookup"><span data-stu-id="75c63-418">The <paramref name="inputUri" /> value includes a filename or directory cannot be found.</span></span></exception>
        <exception cref="T:System.Net.WebException"><span data-ttu-id="75c63-419">无法解析 <paramref name="inputUri" /> 值。</span><span class="sxs-lookup"><span data-stu-id="75c63-419">The <paramref name="inputUri" /> value cannot be resolved.</span></span>  
  
<span data-ttu-id="75c63-420">- 或 -</span><span class="sxs-lookup"><span data-stu-id="75c63-420">-or-</span></span> 
<span data-ttu-id="75c63-421">处理请求时发生错误</span><span class="sxs-lookup"><span data-stu-id="75c63-421">An error occurred while processing the request</span></span></exception>
        <exception cref="T:System.UriFormatException"><span data-ttu-id="75c63-422"><paramref name="inputUri" /> 不是有效的 URI。</span><span class="sxs-lookup"><span data-stu-id="75c63-422"><paramref name="inputUri" /> is not a valid URI.</span></span></exception>
        <exception cref="T:System.Xml.XmlException"><span data-ttu-id="75c63-423">加载输入文档时出现分析错误。</span><span class="sxs-lookup"><span data-stu-id="75c63-423">There was a parsing error loading the input document.</span></span></exception>
        <related type="Article" href="/dotnet/standard/data/xml/using-the-xslcompiledtransform-class"><span data-ttu-id="75c63-424">使用 XslCompiledTransform 类</span><span class="sxs-lookup"><span data-stu-id="75c63-424">Using the XslCompiledTransform Class</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (string inputUri, System.Xml.Xsl.XsltArgumentList? arguments, System.IO.TextWriter results);" FrameworkAlternate="net-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(string inputUri, class System.Xml.Xsl.XsltArgumentList arguments, class System.IO.TextWriter results) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (inputUri As String, arguments As XsltArgumentList, results As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::String ^ inputUri, System::Xml::Xsl::XsltArgumentList ^ arguments, System::IO::TextWriter ^ results);" />
      <MemberSignature Language="F#" Value="member this.Transform : string * System.Xml.Xsl.XsltArgumentList * System.IO.TextWriter -&gt; unit" Usage="xslCompiledTransform.Transform (inputUri, arguments, results)" />
      <MemberSignature Language="C#" Value="public void Transform (string inputUri, System.Xml.Xsl.XsltArgumentList arguments, System.IO.TextWriter results);" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputUri" Type="System.String" />
        <Parameter Name="arguments" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="results" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="inputUri"><span data-ttu-id="75c63-425">输入文档的 URI。</span><span class="sxs-lookup"><span data-stu-id="75c63-425">The URI of the input document.</span></span></param>
        <param name="arguments"><span data-ttu-id="75c63-426"><see cref="T:System.Xml.Xsl.XsltArgumentList" />，包含用作转换输入的命名空间限定的参数。</span><span class="sxs-lookup"><span data-stu-id="75c63-426">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transform.</span></span> <span data-ttu-id="75c63-427">此值可为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="75c63-427">This value can be <see langword="null" />.</span></span></param>
        <param name="results"><span data-ttu-id="75c63-428">要输出到的 <see cref="T:System.IO.TextWriter" />。</span><span class="sxs-lookup"><span data-stu-id="75c63-428">The <see cref="T:System.IO.TextWriter" /> to which you want to output.</span></span></param>
        <summary><span data-ttu-id="75c63-429">使用 URI 指定的输入文档执行转换，然后将结果输出到 <see cref="T:System.IO.TextWriter" />。</span><span class="sxs-lookup"><span data-stu-id="75c63-429">Executes the transform using the input document specified by the URI and outputs the results to a <see cref="T:System.IO.TextWriter" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="75c63-430">此方法使用 <xref:System.Xml.XmlUrlResolver> 没有用户凭据的默认值来解析输入文档和 `document()` 在样式表中找到的任何 XSLT 函数的实例。</span><span class="sxs-lookup"><span data-stu-id="75c63-430">This method uses a default <xref:System.Xml.XmlUrlResolver> with no user credentials to resolve the input document and any instances of the XSLT `document()` function found in the style sheet.</span></span> <span data-ttu-id="75c63-431">如果这些资源中的任何一个需要身份验证的网络资源，请使用 <xref:System.Xml.XmlResolver> 以作为其参数之一的重载，并使用 <xref:System.Xml.XmlResolver> 所需的凭据指定。</span><span class="sxs-lookup"><span data-stu-id="75c63-431">If any of these resources are located on a network resource that requires authentication, use the overload that takes an <xref:System.Xml.XmlResolver> as one of its arguments and specify an <xref:System.Xml.XmlResolver> with the necessary credentials.</span></span>  
  
 <span data-ttu-id="75c63-432">使用 <xref:System.Xml.XmlReader> 带有默认设置的来加载输入文档。</span><span class="sxs-lookup"><span data-stu-id="75c63-432">An <xref:System.Xml.XmlReader> with default settings is used to load the input document.</span></span> <span data-ttu-id="75c63-433">在上禁用 DTD 处理 <xref:System.Xml.XmlReader> 。</span><span class="sxs-lookup"><span data-stu-id="75c63-433">DTD processing is disabled on the <xref:System.Xml.XmlReader>.</span></span> <span data-ttu-id="75c63-434">如果需要 DTD 处理，请创建一个 <xref:System.Xml.XmlReader> 启用了此功能的，并将其传递给 <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="75c63-434">If you require DTD processing, create an <xref:System.Xml.XmlReader> with this feature enabled, and pass it to the <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="75c63-435">下面的示例执行 XSLT 转换并输出一个字符串。</span><span class="sxs-lookup"><span data-stu-id="75c63-435">The following example executes an XSLT transformation and outputs a string.</span></span>  
  
 [!code-csharp[XslCompiledTransform.Transform#3](~/samples/snippets/csharp/VS_Snippets_Data/XslCompiledTransform.Transform/CS/Xslt_Transform_v2.cs#3)]
 [!code-vb[XslCompiledTransform.Transform#3](~/samples/snippets/visualbasic/VS_Snippets_Data/XslCompiledTransform.Transform/VB/Xslt_Transform_v2.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="75c63-436"><paramref name="inputUri" /> 或 <paramref name="results" /> 值为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="75c63-436">The <paramref name="inputUri" /> or <paramref name="results" /> value is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Xml.Xsl.XsltException"><span data-ttu-id="75c63-437">执行 XSLT 转换时出错。</span><span class="sxs-lookup"><span data-stu-id="75c63-437">There was an error executing the XSLT transform.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="75c63-438"><paramref name="inputUri" /> 值包含无法找到的文件名或目录。</span><span class="sxs-lookup"><span data-stu-id="75c63-438">The <paramref name="inputUri" /> value includes a filename or directory cannot be found.</span></span></exception>
        <exception cref="T:System.Net.WebException"><span data-ttu-id="75c63-439">无法解析 <paramref name="inputUri" /> 值。</span><span class="sxs-lookup"><span data-stu-id="75c63-439">The <paramref name="inputUri" /> value cannot be resolved.</span></span>  
  
<span data-ttu-id="75c63-440">- 或 -</span><span class="sxs-lookup"><span data-stu-id="75c63-440">-or-</span></span> 
<span data-ttu-id="75c63-441">处理请求时发生错误</span><span class="sxs-lookup"><span data-stu-id="75c63-441">An error occurred while processing the request</span></span></exception>
        <exception cref="T:System.UriFormatException"><span data-ttu-id="75c63-442"><paramref name="inputUri" /> 不是有效的 URI。</span><span class="sxs-lookup"><span data-stu-id="75c63-442"><paramref name="inputUri" /> is not a valid URI.</span></span></exception>
        <exception cref="T:System.Xml.XmlException"><span data-ttu-id="75c63-443">加载输入文档时出现分析错误。</span><span class="sxs-lookup"><span data-stu-id="75c63-443">There was a parsing error loading the input document.</span></span></exception>
        <related type="Article" href="/dotnet/standard/data/xml/using-the-xslcompiledtransform-class"><span data-ttu-id="75c63-444">使用 XslCompiledTransform 类</span><span class="sxs-lookup"><span data-stu-id="75c63-444">Using the XslCompiledTransform Class</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (string inputUri, System.Xml.Xsl.XsltArgumentList? arguments, System.Xml.XmlWriter results);" FrameworkAlternate="net-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(string inputUri, class System.Xml.Xsl.XsltArgumentList arguments, class System.Xml.XmlWriter results) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (inputUri As String, arguments As XsltArgumentList, results As XmlWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::String ^ inputUri, System::Xml::Xsl::XsltArgumentList ^ arguments, System::Xml::XmlWriter ^ results);" />
      <MemberSignature Language="F#" Value="member this.Transform : string * System.Xml.Xsl.XsltArgumentList * System.Xml.XmlWriter -&gt; unit" Usage="xslCompiledTransform.Transform (inputUri, arguments, results)" />
      <MemberSignature Language="C#" Value="public void Transform (string inputUri, System.Xml.Xsl.XsltArgumentList arguments, System.Xml.XmlWriter results);" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputUri" Type="System.String" />
        <Parameter Name="arguments" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="results" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="inputUri"><span data-ttu-id="75c63-445">输入文档的 URI。</span><span class="sxs-lookup"><span data-stu-id="75c63-445">The URI of the input document.</span></span></param>
        <param name="arguments"><span data-ttu-id="75c63-446"><see cref="T:System.Xml.Xsl.XsltArgumentList" />，包含用作转换输入的命名空间限定的参数。</span><span class="sxs-lookup"><span data-stu-id="75c63-446">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transform.</span></span> <span data-ttu-id="75c63-447">此值可为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="75c63-447">This value can be <see langword="null" />.</span></span></param>
        <param name="results"><span data-ttu-id="75c63-448">要输出到的 <see cref="T:System.Xml.XmlWriter" />。</span><span class="sxs-lookup"><span data-stu-id="75c63-448">The <see cref="T:System.Xml.XmlWriter" /> to which you want to output.</span></span>  
  
<span data-ttu-id="75c63-449">如果样式表包含 <c>xsl:output</c> 元素，则应使用由 <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" /> 属性返回的 <see cref="T:System.Xml.XmlWriterSettings" /> 对象来创建 <see cref="T:System.Xml.XmlWriter" />。</span><span class="sxs-lookup"><span data-stu-id="75c63-449">If the style sheet contains an <c>xsl:output</c> element, you should create the <see cref="T:System.Xml.XmlWriter" /> using the <see cref="T:System.Xml.XmlWriterSettings" /> object returned from the <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" /> property.</span></span> <span data-ttu-id="75c63-450">这样可以确保 <see cref="T:System.Xml.XmlWriter" /> 的输出设置是正确的。</span><span class="sxs-lookup"><span data-stu-id="75c63-450">This ensures that the <see cref="T:System.Xml.XmlWriter" /> has the correct output settings.</span></span></param>
        <summary><span data-ttu-id="75c63-451">使用 URI 指定的输入文档执行转换，然后将结果输出到 <see cref="T:System.Xml.XmlWriter" />。</span><span class="sxs-lookup"><span data-stu-id="75c63-451">Executes the transform using the input document specified by the URI and outputs the results to an <see cref="T:System.Xml.XmlWriter" />.</span></span> <span data-ttu-id="75c63-452"><see cref="T:System.Xml.Xsl.XsltArgumentList" /> 提供附加的运行时参数。</span><span class="sxs-lookup"><span data-stu-id="75c63-452">The <see cref="T:System.Xml.Xsl.XsltArgumentList" /> provides additional run-time arguments.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="75c63-453">此方法使用 <xref:System.Xml.XmlUrlResolver> 没有用户凭据的默认值来解析输入文档和 `document()` 在样式表中找到的任何 XSLT 函数的实例。</span><span class="sxs-lookup"><span data-stu-id="75c63-453">This method uses a default <xref:System.Xml.XmlUrlResolver> with no user credentials to resolve the input document and any instances of the XSLT `document()` function found in the style sheet.</span></span> <span data-ttu-id="75c63-454">如果这些资源中的任何一个需要身份验证的网络资源，请使用 <xref:System.Xml.XmlResolver> 以作为其参数之一的重载，并使用 <xref:System.Xml.XmlResolver> 所需的凭据指定。</span><span class="sxs-lookup"><span data-stu-id="75c63-454">If any of these resources are located on a network resource that requires authentication, use the overload that takes an <xref:System.Xml.XmlResolver> as one of its arguments and specify an <xref:System.Xml.XmlResolver> with the necessary credentials.</span></span>  
  
 <span data-ttu-id="75c63-455">使用 <xref:System.Xml.XmlReader> 带有默认设置的来加载输入文档。</span><span class="sxs-lookup"><span data-stu-id="75c63-455">An <xref:System.Xml.XmlReader> with default settings is used to load the input document.</span></span> <span data-ttu-id="75c63-456">在上禁用 DTD 处理 <xref:System.Xml.XmlReader> 。</span><span class="sxs-lookup"><span data-stu-id="75c63-456">DTD processing is disabled on the <xref:System.Xml.XmlReader>.</span></span> <span data-ttu-id="75c63-457">如果需要 DTD 处理，请创建一个 <xref:System.Xml.XmlReader> 启用了此功能的，并将其传递给 <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="75c63-457">If you require DTD processing, create an <xref:System.Xml.XmlReader> with this feature enabled, and pass it to the <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="75c63-458">下面的示例使用 <xref:System.Xml.Xsl.XsltArgumentList> 对象创建一个表示当前日期和时间的参数。</span><span class="sxs-lookup"><span data-stu-id="75c63-458">The following example uses an <xref:System.Xml.Xsl.XsltArgumentList> object to create a parameter representing the current date and time.</span></span>  
  
 [!code-csharp[XsltArgumentList.AddParam#1](~/samples/snippets/csharp/VS_Snippets_Data/XsltArgumentList.AddParam/CS/addparam.cs#1)]
 [!code-vb[XsltArgumentList.AddParam#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XsltArgumentList.AddParam/VB/addparam.vb#1)]  
  
 <span data-ttu-id="75c63-459">该示例使用以下两个数据文件作为输入。</span><span class="sxs-lookup"><span data-stu-id="75c63-459">The example uses the following two data files as input.</span></span>  
  
 <span data-ttu-id="75c63-460">order.xml</span><span class="sxs-lookup"><span data-stu-id="75c63-460">order.xml</span></span>  
  
 [!code-xml[XsltArgumentList.AddParam#2](~/samples/snippets/xml/VS_Snippets_Data/XsltArgumentList.AddParam/XML/order.xml#2)]  
  
 <span data-ttu-id="75c63-461">order .xsl</span><span class="sxs-lookup"><span data-stu-id="75c63-461">order.xsl</span></span>  
  
 [!code-xml[XsltArgumentList.AddParam#3](~/samples/snippets/xml/VS_Snippets_Data/XsltArgumentList.AddParam/XML/order.xsl#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="75c63-462"><paramref name="inputUri" /> 或 <paramref name="results" /> 值为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="75c63-462">The <paramref name="inputUri" /> or <paramref name="results" /> value is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Xml.Xsl.XsltException"><span data-ttu-id="75c63-463">执行 XSLT 转换时出错。</span><span class="sxs-lookup"><span data-stu-id="75c63-463">There was an error executing the XSLT transform.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="75c63-464"><paramref name="inputtUri" /> 值包含无法找到的文件名或目录。</span><span class="sxs-lookup"><span data-stu-id="75c63-464">The <paramref name="inputtUri" /> value includes a filename or directory cannot be found.</span></span></exception>
        <exception cref="T:System.Net.WebException"><span data-ttu-id="75c63-465">无法解析 <paramref name="inputUri" /> 值。</span><span class="sxs-lookup"><span data-stu-id="75c63-465">The <paramref name="inputUri" /> value cannot be resolved.</span></span>  
  
<span data-ttu-id="75c63-466">- 或 -</span><span class="sxs-lookup"><span data-stu-id="75c63-466">-or-</span></span> 
<span data-ttu-id="75c63-467">处理该请求时出错。</span><span class="sxs-lookup"><span data-stu-id="75c63-467">An error occurred while processing the request.</span></span></exception>
        <exception cref="T:System.UriFormatException"><span data-ttu-id="75c63-468"><paramref name="inputUri" /> 不是有效的 URI。</span><span class="sxs-lookup"><span data-stu-id="75c63-468"><paramref name="inputUri" /> is not a valid URI.</span></span></exception>
        <exception cref="T:System.Xml.XmlException"><span data-ttu-id="75c63-469">加载输入文档时出现分析错误。</span><span class="sxs-lookup"><span data-stu-id="75c63-469">There was a parsing error loading the input document.</span></span></exception>
        <related type="Article" href="/dotnet/standard/data/xml/using-the-xslcompiledtransform-class"><span data-ttu-id="75c63-470">使用 XslCompiledTransform 类</span><span class="sxs-lookup"><span data-stu-id="75c63-470">Using the XslCompiledTransform Class</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XmlReader input, System.Xml.Xsl.XsltArgumentList? arguments, System.IO.Stream results);" FrameworkAlternate="net-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XmlReader input, class System.Xml.Xsl.XsltArgumentList arguments, class System.IO.Stream results) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XmlReader,System.Xml.Xsl.XsltArgumentList,System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As XmlReader, arguments As XsltArgumentList, results As Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XmlReader ^ input, System::Xml::Xsl::XsltArgumentList ^ arguments, System::IO::Stream ^ results);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XmlReader * System.Xml.Xsl.XsltArgumentList * System.IO.Stream -&gt; unit" Usage="xslCompiledTransform.Transform (input, arguments, results)" />
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XmlReader input, System.Xml.Xsl.XsltArgumentList arguments, System.IO.Stream results);" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XmlReader" />
        <Parameter Name="arguments" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="results" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="75c63-471">包含输入文档的 <see cref="T:System.Xml.XmlReader" />。</span><span class="sxs-lookup"><span data-stu-id="75c63-471">An <see cref="T:System.Xml.XmlReader" /> containing the input document.</span></span></param>
        <param name="arguments"><span data-ttu-id="75c63-472"><see cref="T:System.Xml.Xsl.XsltArgumentList" />，包含用作转换输入的命名空间限定的参数。</span><span class="sxs-lookup"><span data-stu-id="75c63-472">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transform.</span></span> <span data-ttu-id="75c63-473">此值可为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="75c63-473">This value can be <see langword="null" />.</span></span></param>
        <param name="results"><span data-ttu-id="75c63-474">要输出到的流。</span><span class="sxs-lookup"><span data-stu-id="75c63-474">The stream to which you want to output.</span></span></param>
        <summary><span data-ttu-id="75c63-475">使用 <see cref="T:System.Xml.XmlReader" /> 对象指定的输入文档执行转换，然后将结果输出到流。</span><span class="sxs-lookup"><span data-stu-id="75c63-475">Executes the transform using the input document specified by the <see cref="T:System.Xml.XmlReader" /> object and outputs the results to a stream.</span></span> <span data-ttu-id="75c63-476"><see cref="T:System.Xml.Xsl.XsltArgumentList" /> 提供附加的运行时参数。</span><span class="sxs-lookup"><span data-stu-id="75c63-476">The <see cref="T:System.Xml.Xsl.XsltArgumentList" /> provides additional run-time arguments.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="75c63-477">如果样式表包含 XSLT `document()` 函数，则使用 <xref:System.Xml.XmlUrlResolver> 不带用户凭据的进行解析。</span><span class="sxs-lookup"><span data-stu-id="75c63-477">If the style sheet includes an XSLT `document()` function, it is resolved using an <xref:System.Xml.XmlUrlResolver> with no user credentials.</span></span> <span data-ttu-id="75c63-478">如果外部资源位于要求身份验证的网络资源上，则使用重载，该重载采用 <xref:System.Xml.XmlResolver> 作为其参数之一的重载，并使用 <xref:System.Xml.XmlResolver> 所需的凭据指定。</span><span class="sxs-lookup"><span data-stu-id="75c63-478">If the external resource is located on a network resource that requires authentication, use the overload that takes an <xref:System.Xml.XmlResolver> as one of its arguments and specify an <xref:System.Xml.XmlResolver> with the necessary credentials.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="75c63-479"><paramref name="input" /> 或 <paramref name="results" /> 值为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="75c63-479">The <paramref name="input" /> or <paramref name="results" /> value is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Xml.Xsl.XsltException"><span data-ttu-id="75c63-480">执行 XSLT 转换时出错。</span><span class="sxs-lookup"><span data-stu-id="75c63-480">There was an error executing the XSLT transform.</span></span></exception>
        <related type="Article" href="/dotnet/standard/data/xml/using-the-xslcompiledtransform-class"><span data-ttu-id="75c63-481">使用 XslCompiledTransform 类</span><span class="sxs-lookup"><span data-stu-id="75c63-481">Using the XslCompiledTransform Class</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XmlReader input, System.Xml.Xsl.XsltArgumentList? arguments, System.IO.TextWriter results);" FrameworkAlternate="net-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XmlReader input, class System.Xml.Xsl.XsltArgumentList arguments, class System.IO.TextWriter results) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XmlReader,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As XmlReader, arguments As XsltArgumentList, results As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XmlReader ^ input, System::Xml::Xsl::XsltArgumentList ^ arguments, System::IO::TextWriter ^ results);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XmlReader * System.Xml.Xsl.XsltArgumentList * System.IO.TextWriter -&gt; unit" Usage="xslCompiledTransform.Transform (input, arguments, results)" />
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XmlReader input, System.Xml.Xsl.XsltArgumentList arguments, System.IO.TextWriter results);" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XmlReader" />
        <Parameter Name="arguments" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="results" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="75c63-482">包含输入文档的 <see cref="T:System.Xml.XmlReader" />。</span><span class="sxs-lookup"><span data-stu-id="75c63-482">An <see cref="T:System.Xml.XmlReader" /> containing the input document.</span></span></param>
        <param name="arguments"><span data-ttu-id="75c63-483"><see cref="T:System.Xml.Xsl.XsltArgumentList" />，包含用作转换输入的命名空间限定的参数。</span><span class="sxs-lookup"><span data-stu-id="75c63-483">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transform.</span></span> <span data-ttu-id="75c63-484">此值可为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="75c63-484">This value can be <see langword="null" />.</span></span></param>
        <param name="results"><span data-ttu-id="75c63-485">要输出到的 <see cref="T:System.IO.TextWriter" />。</span><span class="sxs-lookup"><span data-stu-id="75c63-485">The <see cref="T:System.IO.TextWriter" /> to which you want to output.</span></span></param>
        <summary><span data-ttu-id="75c63-486">使用 <see cref="T:System.Xml.XmlReader" /> 对象指定的输入文档执行转换，然后将结果输出到 <see cref="T:System.IO.TextWriter" />。</span><span class="sxs-lookup"><span data-stu-id="75c63-486">Executes the transform using the input document specified by the <see cref="T:System.Xml.XmlReader" /> object and outputs the results to a <see cref="T:System.IO.TextWriter" />.</span></span> <span data-ttu-id="75c63-487"><see cref="T:System.Xml.Xsl.XsltArgumentList" /> 提供附加的运行时参数。</span><span class="sxs-lookup"><span data-stu-id="75c63-487">The <see cref="T:System.Xml.Xsl.XsltArgumentList" /> provides additional run-time arguments.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="75c63-488">如果样式表包含 XSLT `document()` 函数，则使用 <xref:System.Xml.XmlUrlResolver> 不带用户凭据的进行解析。</span><span class="sxs-lookup"><span data-stu-id="75c63-488">If the style sheet includes an XSLT `document()` function, it is resolved using an <xref:System.Xml.XmlUrlResolver> with no user credentials.</span></span> <span data-ttu-id="75c63-489">如果外部资源位于要求身份验证的网络资源上，则使用重载，该重载采用 <xref:System.Xml.XmlResolver> 作为其参数之一的重载，并使用 <xref:System.Xml.XmlResolver> 所需的凭据指定。</span><span class="sxs-lookup"><span data-stu-id="75c63-489">If the external resource is located on a network resource that requires authentication, use the overload that takes an <xref:System.Xml.XmlResolver> as one of its arguments and specify an <xref:System.Xml.XmlResolver> with the necessary credentials.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="75c63-490"><paramref name="input" /> 或 <paramref name="results" /> 值为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="75c63-490">The <paramref name="input" /> or <paramref name="results" /> value is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Xml.Xsl.XsltException"><span data-ttu-id="75c63-491">执行 XSLT 转换时出错。</span><span class="sxs-lookup"><span data-stu-id="75c63-491">There was an error executing the XSLT transform.</span></span></exception>
        <related type="Article" href="/dotnet/standard/data/xml/using-the-xslcompiledtransform-class"><span data-ttu-id="75c63-492">使用 XslCompiledTransform 类</span><span class="sxs-lookup"><span data-stu-id="75c63-492">Using the XslCompiledTransform Class</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XmlReader input, System.Xml.Xsl.XsltArgumentList? arguments, System.Xml.XmlWriter results);" FrameworkAlternate="net-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XmlReader input, class System.Xml.Xsl.XsltArgumentList arguments, class System.Xml.XmlWriter results) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XmlReader,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As XmlReader, arguments As XsltArgumentList, results As XmlWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XmlReader ^ input, System::Xml::Xsl::XsltArgumentList ^ arguments, System::Xml::XmlWriter ^ results);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XmlReader * System.Xml.Xsl.XsltArgumentList * System.Xml.XmlWriter -&gt; unit" Usage="xslCompiledTransform.Transform (input, arguments, results)" />
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XmlReader input, System.Xml.Xsl.XsltArgumentList arguments, System.Xml.XmlWriter results);" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XmlReader" />
        <Parameter Name="arguments" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="results" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="75c63-493">包含输入文档的 <see cref="T:System.Xml.XmlReader" />。</span><span class="sxs-lookup"><span data-stu-id="75c63-493">An <see cref="T:System.Xml.XmlReader" /> containing the input document.</span></span></param>
        <param name="arguments"><span data-ttu-id="75c63-494"><see cref="T:System.Xml.Xsl.XsltArgumentList" />，包含用作转换输入的命名空间限定的参数。</span><span class="sxs-lookup"><span data-stu-id="75c63-494">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transform.</span></span> <span data-ttu-id="75c63-495">此值可为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="75c63-495">This value can be <see langword="null" />.</span></span></param>
        <param name="results"><span data-ttu-id="75c63-496">要输出到的 <see cref="T:System.Xml.XmlWriter" />。</span><span class="sxs-lookup"><span data-stu-id="75c63-496">The <see cref="T:System.Xml.XmlWriter" /> to which you want to output.</span></span>  
  
<span data-ttu-id="75c63-497">如果样式表包含 <c>xsl:output</c> 元素，则应使用由 <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" /> 属性返回的 <see cref="T:System.Xml.XmlWriterSettings" /> 对象来创建 <see cref="T:System.Xml.XmlWriter" />。</span><span class="sxs-lookup"><span data-stu-id="75c63-497">If the style sheet contains an <c>xsl:output</c> element, you should create the <see cref="T:System.Xml.XmlWriter" /> using the <see cref="T:System.Xml.XmlWriterSettings" /> object returned from the <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" /> property.</span></span> <span data-ttu-id="75c63-498">这样可以确保 <see cref="T:System.Xml.XmlWriter" /> 的输出设置是正确的。</span><span class="sxs-lookup"><span data-stu-id="75c63-498">This ensures that the <see cref="T:System.Xml.XmlWriter" /> has the correct output settings.</span></span></param>
        <summary><span data-ttu-id="75c63-499">使用 <see cref="T:System.Xml.XmlReader" /> 对象指定的输入文档执行转换，然后将结果输出到 <see cref="T:System.Xml.XmlWriter" />。</span><span class="sxs-lookup"><span data-stu-id="75c63-499">Executes the transform using the input document specified by the <see cref="T:System.Xml.XmlReader" /> object and outputs the results to an <see cref="T:System.Xml.XmlWriter" />.</span></span> <span data-ttu-id="75c63-500"><see cref="T:System.Xml.Xsl.XsltArgumentList" /> 提供附加的运行时参数。</span><span class="sxs-lookup"><span data-stu-id="75c63-500">The <see cref="T:System.Xml.Xsl.XsltArgumentList" /> provides additional run-time arguments.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="75c63-501">如果样式表包含 XSLT `document()` 函数，则使用 <xref:System.Xml.XmlUrlResolver> 不带用户凭据的进行解析。</span><span class="sxs-lookup"><span data-stu-id="75c63-501">If the style sheet includes an XSLT `document()` function, it is resolved using an <xref:System.Xml.XmlUrlResolver> with no user credentials.</span></span> <span data-ttu-id="75c63-502">如果外部资源位于要求身份验证的网络资源上，则使用重载，该重载采用 <xref:System.Xml.XmlResolver> 作为其参数之一的重载，并使用 <xref:System.Xml.XmlResolver> 所需的凭据指定。</span><span class="sxs-lookup"><span data-stu-id="75c63-502">If the external resource is located on a network resource that requires authentication, use the overload that takes an <xref:System.Xml.XmlResolver> as one of its arguments and specify an <xref:System.Xml.XmlResolver> with the necessary credentials.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="75c63-503"><paramref name="input" /> 或 <paramref name="results" /> 值为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="75c63-503">The <paramref name="input" /> or <paramref name="results" /> value is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Xml.Xsl.XsltException"><span data-ttu-id="75c63-504">执行 XSLT 转换时出错。</span><span class="sxs-lookup"><span data-stu-id="75c63-504">There was an error executing the XSLT transform.</span></span></exception>
        <related type="Article" href="/dotnet/standard/data/xml/using-the-xslcompiledtransform-class"><span data-ttu-id="75c63-505">使用 XslCompiledTransform 类</span><span class="sxs-lookup"><span data-stu-id="75c63-505">Using the XslCompiledTransform Class</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList? arguments, System.IO.Stream results);" FrameworkAlternate="net-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.IXPathNavigable input, class System.Xml.Xsl.XsltArgumentList arguments, class System.IO.Stream results) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As IXPathNavigable, arguments As XsltArgumentList, results As Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::IXPathNavigable ^ input, System::Xml::Xsl::XsltArgumentList ^ arguments, System::IO::Stream ^ results);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.IXPathNavigable * System.Xml.Xsl.XsltArgumentList * System.IO.Stream -&gt; unit" Usage="xslCompiledTransform.Transform (input, arguments, results)" />
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList arguments, System.IO.Stream results);" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="arguments" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="results" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="75c63-506">一个实现 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 接口的对象。</span><span class="sxs-lookup"><span data-stu-id="75c63-506">An object implementing the <see cref="T:System.Xml.XPath.IXPathNavigable" /> interface.</span></span> <span data-ttu-id="75c63-507">在 Microsoft .NET Framework 中，这可以是 <see cref="T:System.Xml.XmlNode" />（一般为 <see cref="T:System.Xml.XmlDocument" />），或者是包含要转换的数据的 <see cref="T:System.Xml.XPath.XPathDocument" />。</span><span class="sxs-lookup"><span data-stu-id="75c63-507">In the Microsoft .NET Framework, this can be either an <see cref="T:System.Xml.XmlNode" /> (typically an <see cref="T:System.Xml.XmlDocument" />), or an <see cref="T:System.Xml.XPath.XPathDocument" /> containing the data to be transformed.</span></span></param>
        <param name="arguments"><span data-ttu-id="75c63-508"><see cref="T:System.Xml.Xsl.XsltArgumentList" />，包含用作转换输入的命名空间限定的参数。</span><span class="sxs-lookup"><span data-stu-id="75c63-508">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transform.</span></span> <span data-ttu-id="75c63-509">此值可为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="75c63-509">This value can be <see langword="null" />.</span></span></param>
        <param name="results"><span data-ttu-id="75c63-510">要输出到的流。</span><span class="sxs-lookup"><span data-stu-id="75c63-510">The stream to which you want to output.</span></span></param>
        <summary><span data-ttu-id="75c63-511">使用 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 对象指定的输入文档执行转换，然后将结果输出到流。</span><span class="sxs-lookup"><span data-stu-id="75c63-511">Executes the transform using the input document specified by the <see cref="T:System.Xml.XPath.IXPathNavigable" /> object and outputs the results to a stream.</span></span> <span data-ttu-id="75c63-512"><see cref="T:System.Xml.Xsl.XsltArgumentList" /> 提供附加的运行时参数。</span><span class="sxs-lookup"><span data-stu-id="75c63-512">The <see cref="T:System.Xml.Xsl.XsltArgumentList" /> provides additional runtime arguments.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="75c63-513">如果启用了 XSLT `document()` 函数，则使用 <xref:System.Xml.XmlUrlResolver> 不带用户凭据的进行解析。</span><span class="sxs-lookup"><span data-stu-id="75c63-513">If the XSLT `document()` function is enabled, it is resolved using an <xref:System.Xml.XmlUrlResolver> with no user credentials.</span></span> <span data-ttu-id="75c63-514">如果外部资源位于要求身份验证的网络资源上，则使用重载，该重载采用 <xref:System.Xml.XmlResolver> 作为其参数之一的重载，并使用 <xref:System.Xml.XmlResolver> 所需的凭据指定。</span><span class="sxs-lookup"><span data-stu-id="75c63-514">If the external resource is located on a network resource that requires authentication, use the overload that takes an <xref:System.Xml.XmlResolver> as one of its arguments and specify an <xref:System.Xml.XmlResolver> with the necessary credentials.</span></span>  
  
 <span data-ttu-id="75c63-515">此方法不支持 `xsl:strip-space` 元素。</span><span class="sxs-lookup"><span data-stu-id="75c63-515">This method does not support the `xsl:strip-space` element.</span></span> <span data-ttu-id="75c63-516">如果已编译的样式表包含 `xsl:strip-space` 元素，则必须使用 <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> 重载，该重载采用 <xref:System.Xml.XmlReader> 作为输入参数。</span><span class="sxs-lookup"><span data-stu-id="75c63-516">If your compiled style sheet included the `xsl:strip-space` element, you must use the <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> overload which takes an <xref:System.Xml.XmlReader> as the input argument.</span></span>  
  
 <span data-ttu-id="75c63-517"><xref:System.Xml.XPath.IXPathNavigable> 接口在 <xref:System.Xml.XmlNode> 和 <xref:System.Xml.XPath.XPathDocument> 类中实现。</span><span class="sxs-lookup"><span data-stu-id="75c63-517">The <xref:System.Xml.XPath.IXPathNavigable> interface is implemented in the <xref:System.Xml.XmlNode> and <xref:System.Xml.XPath.XPathDocument> classes.</span></span> <span data-ttu-id="75c63-518">这两个类表示 XML 数据的内存中缓存。</span><span class="sxs-lookup"><span data-stu-id="75c63-518">These classes represent an in-memory cache of XML data.</span></span>  
  
-   <span data-ttu-id="75c63-519"><xref:System.Xml.XmlNode> 类基于 W3C 文档对象模型 (DOM) 并具有编辑功能。</span><span class="sxs-lookup"><span data-stu-id="75c63-519">The <xref:System.Xml.XmlNode> class is based on the W3C Document Object Model (DOM) and includes editing capabilities.</span></span>  
  
-   <span data-ttu-id="75c63-520"><xref:System.Xml.XPath.XPathDocument> 类是基于 XPath 数据模型的只读数据存储。</span><span class="sxs-lookup"><span data-stu-id="75c63-520">The <xref:System.Xml.XPath.XPathDocument> class is a read-only data store based on the XPath data model.</span></span> <span data-ttu-id="75c63-521"><xref:System.Xml.XPath.XPathDocument> 是 XSLT 处理建议使用的类。</span><span class="sxs-lookup"><span data-stu-id="75c63-521"><xref:System.Xml.XPath.XPathDocument> is the recommended class for XSLT processing.</span></span> <span data-ttu-id="75c63-522">与 <xref:System.Xml.XmlNode> 类相比，此类的性能更强。</span><span class="sxs-lookup"><span data-stu-id="75c63-522">It provides faster performance when compared to the <xref:System.Xml.XmlNode> class.</span></span>  
  
 <span data-ttu-id="75c63-523">转换将应用于整个文档。</span><span class="sxs-lookup"><span data-stu-id="75c63-523">Transformations apply to the document as a whole.</span></span> <span data-ttu-id="75c63-524">换句话说，如果你传入文档根节点以外的一个节点，并不能防止转换进程访问已加载文档的所有节点。</span><span class="sxs-lookup"><span data-stu-id="75c63-524">In other words, if you pass in a node other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="75c63-525">若要转换节点片段，必须创建一个仅包含节点片段的对象，并将该对象传递给 <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="75c63-525">To transform a node fragment, you must create an object containing just the node fragment, and pass that object to the <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> method.</span></span> <span data-ttu-id="75c63-526">有关详细信息，请参阅[如何：转换节点片段](/dotnet/standard/data/xml/how-to-transform-a-node-fragment)。</span><span class="sxs-lookup"><span data-stu-id="75c63-526">For more information, see [How to: Transform a Node Fragment](/dotnet/standard/data/xml/how-to-transform-a-node-fragment).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="75c63-527">下面的示例执行 XSLT 转换并输出到 <xref:System.IO.FileStream> 。</span><span class="sxs-lookup"><span data-stu-id="75c63-527">The following example executes an XSLT transformation and outputs to a <xref:System.IO.FileStream>.</span></span>  
  
 [!code-csharp[XslCompiledTransform.Transform#6](~/samples/snippets/csharp/VS_Snippets_Data/XslCompiledTransform.Transform/CS/Xslt_Transform_v2.cs#6)]
 [!code-vb[XslCompiledTransform.Transform#6](~/samples/snippets/visualbasic/VS_Snippets_Data/XslCompiledTransform.Transform/VB/Xslt_Transform_v2.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="75c63-528"><paramref name="input" /> 或 <paramref name="results" /> 值为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="75c63-528">The <paramref name="input" /> or <paramref name="results" /> value is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Xml.Xsl.XsltException"><span data-ttu-id="75c63-529">执行 XSLT 转换时出错。</span><span class="sxs-lookup"><span data-stu-id="75c63-529">There was an error executing the XSLT transform.</span></span></exception>
        <related type="Article" href="/dotnet/standard/data/xml/using-the-xslcompiledtransform-class"><span data-ttu-id="75c63-530">使用 XslCompiledTransform 类</span><span class="sxs-lookup"><span data-stu-id="75c63-530">Using the XslCompiledTransform Class</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList? arguments, System.IO.TextWriter results);" FrameworkAlternate="net-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.IXPathNavigable input, class System.Xml.Xsl.XsltArgumentList arguments, class System.IO.TextWriter results) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As IXPathNavigable, arguments As XsltArgumentList, results As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::IXPathNavigable ^ input, System::Xml::Xsl::XsltArgumentList ^ arguments, System::IO::TextWriter ^ results);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.IXPathNavigable * System.Xml.Xsl.XsltArgumentList * System.IO.TextWriter -&gt; unit" Usage="xslCompiledTransform.Transform (input, arguments, results)" />
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList arguments, System.IO.TextWriter results);" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="arguments" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="results" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="75c63-531">一个实现 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 接口的对象。</span><span class="sxs-lookup"><span data-stu-id="75c63-531">An object implementing the <see cref="T:System.Xml.XPath.IXPathNavigable" /> interface.</span></span> <span data-ttu-id="75c63-532">在 Microsoft .NET Framework 中，这可以是 <see cref="T:System.Xml.XmlNode" />（一般为 <see cref="T:System.Xml.XmlDocument" />），或者是包含要转换的数据的 <see cref="T:System.Xml.XPath.XPathDocument" />。</span><span class="sxs-lookup"><span data-stu-id="75c63-532">In the Microsoft .NET Framework, this can be either an <see cref="T:System.Xml.XmlNode" /> (typically an <see cref="T:System.Xml.XmlDocument" />), or an <see cref="T:System.Xml.XPath.XPathDocument" /> containing the data to be transformed.</span></span></param>
        <param name="arguments"><span data-ttu-id="75c63-533"><see cref="T:System.Xml.Xsl.XsltArgumentList" />，包含用作转换输入的命名空间限定的参数。</span><span class="sxs-lookup"><span data-stu-id="75c63-533">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transform.</span></span> <span data-ttu-id="75c63-534">此值可为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="75c63-534">This value can be <see langword="null" />.</span></span></param>
        <param name="results"><span data-ttu-id="75c63-535">要输出到的 <see cref="T:System.IO.TextWriter" />。</span><span class="sxs-lookup"><span data-stu-id="75c63-535">The <see cref="T:System.IO.TextWriter" /> to which you want to output.</span></span></param>
        <summary><span data-ttu-id="75c63-536">使用 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 对象指定的输入文档执行转换，然后将结果输出到 <see cref="T:System.IO.TextWriter" />。</span><span class="sxs-lookup"><span data-stu-id="75c63-536">Executes the transform using the input document specified by the <see cref="T:System.Xml.XPath.IXPathNavigable" /> object and outputs the results to an <see cref="T:System.IO.TextWriter" />.</span></span> <span data-ttu-id="75c63-537"><see cref="T:System.Xml.Xsl.XsltArgumentList" /> 提供附加的运行时参数。</span><span class="sxs-lookup"><span data-stu-id="75c63-537">The <see cref="T:System.Xml.Xsl.XsltArgumentList" /> provides additional run-time arguments.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="75c63-538">如果启用了 XSLT `document()` 函数，则使用 <xref:System.Xml.XmlUrlResolver> 不带用户凭据的进行解析。</span><span class="sxs-lookup"><span data-stu-id="75c63-538">If the XSLT `document()` function is enabled, it is resolved using an <xref:System.Xml.XmlUrlResolver> with no user credentials.</span></span> <span data-ttu-id="75c63-539">如果外部资源位于要求身份验证的网络资源上，则使用重载，该重载采用 <xref:System.Xml.XmlResolver> 作为其参数之一的重载，并使用 <xref:System.Xml.XmlResolver> 所需的凭据指定。</span><span class="sxs-lookup"><span data-stu-id="75c63-539">If the external resource is located on a network resource that requires authentication, use the overload that takes an <xref:System.Xml.XmlResolver> as one of its arguments and specify an <xref:System.Xml.XmlResolver> with the necessary credentials.</span></span>  
  
 <span data-ttu-id="75c63-540">此方法不支持 `xsl:strip-space` 元素。</span><span class="sxs-lookup"><span data-stu-id="75c63-540">This method does not support the `xsl:strip-space` element.</span></span> <span data-ttu-id="75c63-541">如果已编译的样式表包含 `xsl:strip-space` 元素，则必须使用 <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> 重载，该重载采用 <xref:System.Xml.XmlReader> 作为输入参数。</span><span class="sxs-lookup"><span data-stu-id="75c63-541">If your compiled style sheet included the `xsl:strip-space` element, you must use the <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> overload which takes an <xref:System.Xml.XmlReader> as the input argument.</span></span>  
  
 <span data-ttu-id="75c63-542"><xref:System.Xml.XPath.IXPathNavigable> 接口在 <xref:System.Xml.XmlNode> 和 <xref:System.Xml.XPath.XPathDocument> 类中实现。</span><span class="sxs-lookup"><span data-stu-id="75c63-542">The <xref:System.Xml.XPath.IXPathNavigable> interface is implemented in the <xref:System.Xml.XmlNode> and <xref:System.Xml.XPath.XPathDocument> classes.</span></span> <span data-ttu-id="75c63-543">这两个类表示 XML 数据的内存中缓存。</span><span class="sxs-lookup"><span data-stu-id="75c63-543">These classes represent an in-memory cache of XML data.</span></span>  
  
-   <span data-ttu-id="75c63-544"><xref:System.Xml.XmlNode> 类基于 W3C 文档对象模型 (DOM) 并具有编辑功能。</span><span class="sxs-lookup"><span data-stu-id="75c63-544">The <xref:System.Xml.XmlNode> class is based on the W3C Document Object Model (DOM) and includes editing capabilities.</span></span>  
  
-   <span data-ttu-id="75c63-545"><xref:System.Xml.XPath.XPathDocument> 类是基于 XPath 数据模型的只读数据存储。</span><span class="sxs-lookup"><span data-stu-id="75c63-545">The <xref:System.Xml.XPath.XPathDocument> class is a read-only data store based on the XPath data model.</span></span> <span data-ttu-id="75c63-546"><xref:System.Xml.XPath.XPathDocument> 是 XSLT 处理建议使用的类。</span><span class="sxs-lookup"><span data-stu-id="75c63-546"><xref:System.Xml.XPath.XPathDocument> is the recommended class for XSLT processing.</span></span> <span data-ttu-id="75c63-547">与 <xref:System.Xml.XmlNode> 类相比，此类的性能更强。</span><span class="sxs-lookup"><span data-stu-id="75c63-547">It provides faster performance when compared to the <xref:System.Xml.XmlNode> class.</span></span>  
  
 <span data-ttu-id="75c63-548">转换将应用于整个文档。</span><span class="sxs-lookup"><span data-stu-id="75c63-548">Transformations apply to the document as a whole.</span></span> <span data-ttu-id="75c63-549">换句话说，如果你传入文档根节点以外的一个节点，并不能防止转换进程访问已加载文档的所有节点。</span><span class="sxs-lookup"><span data-stu-id="75c63-549">In other words, if you pass in a node other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="75c63-550">若要转换节点片段，必须创建一个仅包含节点片段的对象，并将该对象传递给 <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="75c63-550">To transform a node fragment, you must create an object containing just the node fragment, and pass that object to the <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> method.</span></span> <span data-ttu-id="75c63-551">有关详细信息，请参阅[如何：转换节点片段](/dotnet/standard/data/xml/how-to-transform-a-node-fragment)。</span><span class="sxs-lookup"><span data-stu-id="75c63-551">For more information, see [How to: Transform a Node Fragment](/dotnet/standard/data/xml/how-to-transform-a-node-fragment).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="75c63-552"><paramref name="input" /> 或 <paramref name="results" /> 值为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="75c63-552">The <paramref name="input" /> or <paramref name="results" /> value is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Xml.Xsl.XsltException"><span data-ttu-id="75c63-553">执行 XSLT 转换时出错。</span><span class="sxs-lookup"><span data-stu-id="75c63-553">There was an error executing the XSLT transform.</span></span></exception>
        <related type="Article" href="/dotnet/standard/data/xml/using-the-xslcompiledtransform-class"><span data-ttu-id="75c63-554">使用 XslCompiledTransform 类</span><span class="sxs-lookup"><span data-stu-id="75c63-554">Using the XslCompiledTransform Class</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList? arguments, System.Xml.XmlWriter results);" FrameworkAlternate="net-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.IXPathNavigable input, class System.Xml.Xsl.XsltArgumentList arguments, class System.Xml.XmlWriter results) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As IXPathNavigable, arguments As XsltArgumentList, results As XmlWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::IXPathNavigable ^ input, System::Xml::Xsl::XsltArgumentList ^ arguments, System::Xml::XmlWriter ^ results);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.IXPathNavigable * System.Xml.Xsl.XsltArgumentList * System.Xml.XmlWriter -&gt; unit" Usage="xslCompiledTransform.Transform (input, arguments, results)" />
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList arguments, System.Xml.XmlWriter results);" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="arguments" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="results" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="75c63-555">一个实现 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 接口的对象。</span><span class="sxs-lookup"><span data-stu-id="75c63-555">An object implementing the <see cref="T:System.Xml.XPath.IXPathNavigable" /> interface.</span></span> <span data-ttu-id="75c63-556">在 Microsoft .NET Framework 中，这可以是 <see cref="T:System.Xml.XmlNode" />（一般为 <see cref="T:System.Xml.XmlDocument" />），或者是包含要转换的数据的 <see cref="T:System.Xml.XPath.XPathDocument" />。</span><span class="sxs-lookup"><span data-stu-id="75c63-556">In the Microsoft .NET Framework, this can be either an <see cref="T:System.Xml.XmlNode" /> (typically an <see cref="T:System.Xml.XmlDocument" />), or an <see cref="T:System.Xml.XPath.XPathDocument" /> containing the data to be transformed.</span></span></param>
        <param name="arguments"><span data-ttu-id="75c63-557"><see cref="T:System.Xml.Xsl.XsltArgumentList" />，包含用作转换输入的命名空间限定的参数。</span><span class="sxs-lookup"><span data-stu-id="75c63-557">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transform.</span></span> <span data-ttu-id="75c63-558">此值可为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="75c63-558">This value can be <see langword="null" />.</span></span></param>
        <param name="results"><span data-ttu-id="75c63-559">要输出到的 <see cref="T:System.Xml.XmlWriter" />。</span><span class="sxs-lookup"><span data-stu-id="75c63-559">The <see cref="T:System.Xml.XmlWriter" /> to which you want to output.</span></span>  
  
<span data-ttu-id="75c63-560">如果样式表包含 <c>xsl:output</c> 元素，则应使用由 <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" /> 属性返回的 <see cref="T:System.Xml.XmlWriterSettings" /> 对象来创建 <see cref="T:System.Xml.XmlWriter" />。</span><span class="sxs-lookup"><span data-stu-id="75c63-560">If the style sheet contains an <c>xsl:output</c> element, you should create the <see cref="T:System.Xml.XmlWriter" /> using the <see cref="T:System.Xml.XmlWriterSettings" /> object returned from the <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" /> property.</span></span> <span data-ttu-id="75c63-561">这样可以确保 <see cref="T:System.Xml.XmlWriter" /> 的输出设置是正确的。</span><span class="sxs-lookup"><span data-stu-id="75c63-561">This ensures that the <see cref="T:System.Xml.XmlWriter" /> has the correct output settings.</span></span></param>
        <summary><span data-ttu-id="75c63-562">使用 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 对象指定的输入文档执行转换，然后将结果输出到 <see cref="T:System.Xml.XmlWriter" />。</span><span class="sxs-lookup"><span data-stu-id="75c63-562">Executes the transform using the input document specified by the <see cref="T:System.Xml.XPath.IXPathNavigable" /> object and outputs the results to an <see cref="T:System.Xml.XmlWriter" />.</span></span> <span data-ttu-id="75c63-563"><see cref="T:System.Xml.Xsl.XsltArgumentList" /> 提供附加的运行时参数。</span><span class="sxs-lookup"><span data-stu-id="75c63-563">The <see cref="T:System.Xml.Xsl.XsltArgumentList" /> provides additional run-time arguments.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="75c63-564">如果启用了 XSLT `document()` 函数，则使用 <xref:System.Xml.XmlUrlResolver> 不带用户凭据的进行解析。</span><span class="sxs-lookup"><span data-stu-id="75c63-564">If the XSLT `document()` function is enabled, it is resolved using an <xref:System.Xml.XmlUrlResolver> with no user credentials.</span></span> <span data-ttu-id="75c63-565">如果外部资源位于要求身份验证的网络资源上，则使用重载，该重载采用 <xref:System.Xml.XmlResolver> 作为其参数之一的重载，并使用 <xref:System.Xml.XmlResolver> 所需的凭据指定。</span><span class="sxs-lookup"><span data-stu-id="75c63-565">If the external resource is located on a network resource that requires authentication, use the overload that takes an <xref:System.Xml.XmlResolver> as one of its arguments and specify an <xref:System.Xml.XmlResolver> with the necessary credentials.</span></span>  
  
 <span data-ttu-id="75c63-566">此方法不支持 `xsl:strip-space` 元素。</span><span class="sxs-lookup"><span data-stu-id="75c63-566">This method does not support the `xsl:strip-space` element.</span></span> <span data-ttu-id="75c63-567">如果已编译的样式表包含 `xsl:strip-space` 元素，则必须使用 <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> 重载，该重载采用 <xref:System.Xml.XmlReader> 作为输入参数。</span><span class="sxs-lookup"><span data-stu-id="75c63-567">If your compiled style sheet included the `xsl:strip-space` element, you must use the <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> overload which takes an <xref:System.Xml.XmlReader> as the input argument.</span></span>  
  
 <span data-ttu-id="75c63-568"><xref:System.Xml.XPath.IXPathNavigable> 接口在 <xref:System.Xml.XmlNode> 和 <xref:System.Xml.XPath.XPathDocument> 类中实现。</span><span class="sxs-lookup"><span data-stu-id="75c63-568">The <xref:System.Xml.XPath.IXPathNavigable> interface is implemented in the <xref:System.Xml.XmlNode> and <xref:System.Xml.XPath.XPathDocument> classes.</span></span> <span data-ttu-id="75c63-569">这两个类表示 XML 数据的内存中缓存。</span><span class="sxs-lookup"><span data-stu-id="75c63-569">These classes represent an in-memory cache of XML data.</span></span>  
  
-   <span data-ttu-id="75c63-570"><xref:System.Xml.XmlNode> 类基于 W3C 文档对象模型 (DOM) 并具有编辑功能。</span><span class="sxs-lookup"><span data-stu-id="75c63-570">The <xref:System.Xml.XmlNode> class is based on the W3C Document Object Model (DOM) and includes editing capabilities.</span></span>  
  
-   <span data-ttu-id="75c63-571"><xref:System.Xml.XPath.XPathDocument> 类是基于 XPath 数据模型的只读数据存储。</span><span class="sxs-lookup"><span data-stu-id="75c63-571">The <xref:System.Xml.XPath.XPathDocument> class is a read-only data store based on the XPath data model.</span></span> <span data-ttu-id="75c63-572"><xref:System.Xml.XPath.XPathDocument> 是 XSLT 处理建议使用的类。</span><span class="sxs-lookup"><span data-stu-id="75c63-572"><xref:System.Xml.XPath.XPathDocument> is the recommended class for XSLT processing.</span></span> <span data-ttu-id="75c63-573">与 <xref:System.Xml.XmlNode> 类相比，此类的性能更强。</span><span class="sxs-lookup"><span data-stu-id="75c63-573">It provides faster performance when compared to the <xref:System.Xml.XmlNode> class.</span></span>  
  
 <span data-ttu-id="75c63-574">转换将应用于整个文档。</span><span class="sxs-lookup"><span data-stu-id="75c63-574">Transformations apply to the document as a whole.</span></span> <span data-ttu-id="75c63-575">换句话说，如果你传入文档根节点以外的一个节点，并不能防止转换进程访问已加载文档的所有节点。</span><span class="sxs-lookup"><span data-stu-id="75c63-575">In other words, if you pass in a node other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="75c63-576">若要转换节点片段，必须创建一个仅包含节点片段的对象，并将该对象传递给 <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="75c63-576">To transform a node fragment, you must create an object containing just the node fragment, and pass that object to the <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> method.</span></span> <span data-ttu-id="75c63-577">有关详细信息，请参阅[如何：转换节点片段](/dotnet/standard/data/xml/how-to-transform-a-node-fragment)。</span><span class="sxs-lookup"><span data-stu-id="75c63-577">For more information, see [How to: Transform a Node Fragment](/dotnet/standard/data/xml/how-to-transform-a-node-fragment).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="75c63-578"><paramref name="input" /> 或 <paramref name="results" /> 值为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="75c63-578">The <paramref name="input" /> or <paramref name="results" /> value is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Xml.Xsl.XsltException"><span data-ttu-id="75c63-579">执行 XSLT 转换时出错。</span><span class="sxs-lookup"><span data-stu-id="75c63-579">There was an error executing the XSLT transform.</span></span></exception>
        <related type="Article" href="/dotnet/standard/data/xml/using-the-xslcompiledtransform-class"><span data-ttu-id="75c63-580">使用 XslCompiledTransform 类</span><span class="sxs-lookup"><span data-stu-id="75c63-580">Using the XslCompiledTransform Class</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XmlReader input, System.Xml.Xsl.XsltArgumentList? arguments, System.Xml.XmlWriter results, System.Xml.XmlResolver? documentResolver);" FrameworkAlternate="net-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XmlReader input, class System.Xml.Xsl.XsltArgumentList arguments, class System.Xml.XmlWriter results, class System.Xml.XmlResolver documentResolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XmlReader,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As XmlReader, arguments As XsltArgumentList, results As XmlWriter, documentResolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XmlReader ^ input, System::Xml::Xsl::XsltArgumentList ^ arguments, System::Xml::XmlWriter ^ results, System::Xml::XmlResolver ^ documentResolver);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XmlReader * System.Xml.Xsl.XsltArgumentList * System.Xml.XmlWriter * System.Xml.XmlResolver -&gt; unit" Usage="xslCompiledTransform.Transform (input, arguments, results, documentResolver)" />
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XmlReader input, System.Xml.Xsl.XsltArgumentList arguments, System.Xml.XmlWriter results, System.Xml.XmlResolver documentResolver);" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XmlReader" />
        <Parameter Name="arguments" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="results" Type="System.Xml.XmlWriter" />
        <Parameter Name="documentResolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="75c63-581">包含输入文档的 <see cref="T:System.Xml.XmlReader" />。</span><span class="sxs-lookup"><span data-stu-id="75c63-581">An <see cref="T:System.Xml.XmlReader" /> containing the input document.</span></span></param>
        <param name="arguments"><span data-ttu-id="75c63-582"><see cref="T:System.Xml.Xsl.XsltArgumentList" />，包含用作转换输入的命名空间限定的参数。</span><span class="sxs-lookup"><span data-stu-id="75c63-582">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transform.</span></span> <span data-ttu-id="75c63-583">此值可为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="75c63-583">This value can be <see langword="null" />.</span></span></param>
        <param name="results"><span data-ttu-id="75c63-584">要输出到的 <see cref="T:System.Xml.XmlWriter" />。</span><span class="sxs-lookup"><span data-stu-id="75c63-584">The <see cref="T:System.Xml.XmlWriter" /> to which you want to output.</span></span>  
  
<span data-ttu-id="75c63-585">如果样式表包含 <c>xsl:output</c> 元素，则应使用由 <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" /> 属性返回的 <see cref="T:System.Xml.XmlWriterSettings" /> 对象来创建 <see cref="T:System.Xml.XmlWriter" />。</span><span class="sxs-lookup"><span data-stu-id="75c63-585">If the style sheet contains an <c>xsl:output</c> element, you should create the <see cref="T:System.Xml.XmlWriter" /> using the <see cref="T:System.Xml.XmlWriterSettings" /> object returned from the <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" /> property.</span></span> <span data-ttu-id="75c63-586">这样可以确保 <see cref="T:System.Xml.XmlWriter" /> 的输出设置是正确的。</span><span class="sxs-lookup"><span data-stu-id="75c63-586">This ensures that the <see cref="T:System.Xml.XmlWriter" /> has the correct output settings.</span></span></param>
        <param name="documentResolver"><span data-ttu-id="75c63-587">用于解析 XSLT <c>document()</c> 函数的 <see cref="T:System.Xml.XmlResolver" />。</span><span class="sxs-lookup"><span data-stu-id="75c63-587">The <see cref="T:System.Xml.XmlResolver" /> used to resolve the XSLT <c>document()</c> function.</span></span> <span data-ttu-id="75c63-588">如果为 <see langword="null" />，则不解析 <c>document()</c> 函数。</span><span class="sxs-lookup"><span data-stu-id="75c63-588">If this is <see langword="null" />, the <c>document()</c> function is not resolved.</span></span></param>
        <summary><span data-ttu-id="75c63-589">使用 <see cref="T:System.Xml.XmlReader" /> 对象指定的输入文档执行转换，然后将结果输出到 <see cref="T:System.Xml.XmlWriter" />。</span><span class="sxs-lookup"><span data-stu-id="75c63-589">Executes the transform using the input document specified by the <see cref="T:System.Xml.XmlReader" /> object and outputs the results to an <see cref="T:System.Xml.XmlWriter" />.</span></span> <span data-ttu-id="75c63-590"><see cref="T:System.Xml.Xsl.XsltArgumentList" /> 提供附加的运行时参数，而 XmlResolver 解析 XSLT <c>document()</c> 函数。</span><span class="sxs-lookup"><span data-stu-id="75c63-590">The <see cref="T:System.Xml.Xsl.XsltArgumentList" /> provides additional run-time arguments and the XmlResolver resolves the XSLT <c>document()</c> function.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="75c63-591">下面的示例使用 <xref:System.Xml.XmlSecureResolver> 解析 XSLT `document()` 函数。</span><span class="sxs-lookup"><span data-stu-id="75c63-591">The following example uses an <xref:System.Xml.XmlSecureResolver> to resolve the XSLT `document()` function.</span></span>  
  
 [!code-csharp[XslCompiledTransform.Transform#4](~/samples/snippets/csharp/VS_Snippets_Data/XslCompiledTransform.Transform/CS/Xslt_Transform_v2.cs#4)]
 [!code-vb[XslCompiledTransform.Transform#4](~/samples/snippets/visualbasic/VS_Snippets_Data/XslCompiledTransform.Transform/VB/Xslt_Transform_v2.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="75c63-592"><paramref name="input" /> 或 <paramref name="results" /> 值为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="75c63-592">The <paramref name="input" /> or <paramref name="results" /> value is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Xml.Xsl.XsltException"><span data-ttu-id="75c63-593">执行 XSLT 转换时出错。</span><span class="sxs-lookup"><span data-stu-id="75c63-593">There was an error executing the XSLT transform.</span></span></exception>
        <related type="Article" href="/dotnet/standard/data/xml/using-the-xslcompiledtransform-class"><span data-ttu-id="75c63-594">使用 XslCompiledTransform 类</span><span class="sxs-lookup"><span data-stu-id="75c63-594">Using the XslCompiledTransform Class</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList? arguments, System.Xml.XmlWriter results, System.Xml.XmlResolver? documentResolver);" FrameworkAlternate="net-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.IXPathNavigable input, class System.Xml.Xsl.XsltArgumentList arguments, class System.Xml.XmlWriter results, class System.Xml.XmlResolver documentResolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As IXPathNavigable, arguments As XsltArgumentList, results As XmlWriter, documentResolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::IXPathNavigable ^ input, System::Xml::Xsl::XsltArgumentList ^ arguments, System::Xml::XmlWriter ^ results, System::Xml::XmlResolver ^ documentResolver);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.IXPathNavigable * System.Xml.Xsl.XsltArgumentList * System.Xml.XmlWriter * System.Xml.XmlResolver -&gt; unit" Usage="xslCompiledTransform.Transform (input, arguments, results, documentResolver)" />
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList arguments, System.Xml.XmlWriter results, System.Xml.XmlResolver documentResolver);" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="arguments" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="results" Type="System.Xml.XmlWriter" />
        <Parameter Name="documentResolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="75c63-595">由 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 对象指定的要转换的文档。</span><span class="sxs-lookup"><span data-stu-id="75c63-595">The document to transform that is specified by the <see cref="T:System.Xml.XPath.IXPathNavigable" /> object.</span></span></param>
        <param name="arguments"><span data-ttu-id="75c63-596"><see cref="T:System.Xml.Xsl.XsltArgumentList" /> 形式的参数列表。</span><span class="sxs-lookup"><span data-stu-id="75c63-596">Argument list as <see cref="T:System.Xml.Xsl.XsltArgumentList" />.</span></span></param>
        <param name="results"><span data-ttu-id="75c63-597">要输出到的 <see cref="T:System.Xml.XmlWriter" />。</span><span class="sxs-lookup"><span data-stu-id="75c63-597">The <see cref="T:System.Xml.XmlWriter" /> to which you want to output.</span></span>  
  
<span data-ttu-id="75c63-598">如果样式表包含 <see langword="xsl:output" /> 元素，则应使用由 <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" /> 属性返回的 <see cref="T:System.Xml.XmlWriterSettings" /> 对象来创建 <see cref="T:System.Xml.XmlWriter" />。</span><span class="sxs-lookup"><span data-stu-id="75c63-598">If the style sheet contains an <see langword="xsl:output" /> element, you should create the <see cref="T:System.Xml.XmlWriter" /> by using the <see cref="T:System.Xml.XmlWriterSettings" /> object that is returned from the <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" /> property.</span></span> <span data-ttu-id="75c63-599">这样可以确保 <see cref="T:System.Xml.XmlWriter" /> 的输出设置是正确的。</span><span class="sxs-lookup"><span data-stu-id="75c63-599">This ensures that the <see cref="T:System.Xml.XmlWriter" /> has the correct output settings.</span></span></param>
        <param name="documentResolver"><span data-ttu-id="75c63-600">用于解析 XSLT <see langword="document()" /> 函数的 <see cref="T:System.Xml.XmlResolver" />。</span><span class="sxs-lookup"><span data-stu-id="75c63-600">The <see cref="T:System.Xml.XmlResolver" /> used to resolve the XSLT <see langword="document()" /> function.</span></span> <span data-ttu-id="75c63-601">如果为 <see langword="null" />，则不解析 <see langword="document()" /> 函数。</span><span class="sxs-lookup"><span data-stu-id="75c63-601">If this is <see langword="null" />, the <see langword="document()" /> function is not resolved.</span></span></param>
        <summary><span data-ttu-id="75c63-602">使用 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 对象指定的输入文档执行转换，然后将结果输出到 <see cref="T:System.Xml.XmlWriter" />。</span><span class="sxs-lookup"><span data-stu-id="75c63-602">Executes the transform by using the input document that is specified by the <see cref="T:System.Xml.XPath.IXPathNavigable" /> object and outputs the results to an <see cref="T:System.Xml.XmlWriter" />.</span></span> <span data-ttu-id="75c63-603"><see cref="T:System.Xml.Xsl.XsltArgumentList" /> 提供附加的运行时参数，而 <see cref="T:System.Xml.XmlResolver" /> 解析 XSLT <see langword="document()" /> 函数。</span><span class="sxs-lookup"><span data-stu-id="75c63-603">The <see cref="T:System.Xml.Xsl.XsltArgumentList" /> provides additional run-time arguments and the <see cref="T:System.Xml.XmlResolver" /> resolves the XSLT <see langword="document()" /> function.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
