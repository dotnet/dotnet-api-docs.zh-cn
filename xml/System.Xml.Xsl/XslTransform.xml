<Type Name="XslTransform" FullName="System.Xml.Xsl.XslTransform">
  <Metadata><Meta Name="ms.openlocfilehash" Value="6e3693a9dc4dfed27d8ed5794e8eb538e74a2881" /><Meta Name="ms.sourcegitcommit" Value="5484acfd78fc29edb48fc1ca6925046c4672954a" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/16/2020" /><Meta Name="ms.locfileid" Value="90693490" /></Metadata><TypeSignature Language="C#" Value="public sealed class XslTransform" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit XslTransform extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Xsl.XslTransform" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class XslTransform" />
  <TypeSignature Language="C++ CLI" Value="public ref class XslTransform sealed" />
  <TypeSignature Language="F#" Value="type XslTransform = class" />
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.Xml.ReaderWriter" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-2.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName Language="C#">[System.Obsolete("This class has been deprecated. Please use System.Xml.Xsl.XslCompiledTransform instead. http://go.microsoft.com/fwlink/?linkid=14202")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Obsolete("This class has been deprecated. Please use System.Xml.Xsl.XslCompiledTransform instead. http://go.microsoft.com/fwlink/?linkid=14202")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="629e0-101">使用可扩展样式表转换语言 (XSLT) 转换 XML 数据。</span><span class="sxs-lookup"><span data-stu-id="629e0-101">Transforms XML data using an Extensible Stylesheet Language for Transformations (XSLT) style sheet.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="629e0-102"><xref:System.Xml.Xsl.XslTransform>类在 Microsoft .NET Framework 版本2.0 中已过时。</span><span class="sxs-lookup"><span data-stu-id="629e0-102">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the Microsoft .NET Framework version 2.0.</span></span> <span data-ttu-id="629e0-103"><xref:System.Xml.Xsl.XslCompiledTransform>类是新的 XSLT 处理器。</span><span class="sxs-lookup"><span data-stu-id="629e0-103">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="629e0-104">有关详细信息，请参阅 [使用 XslCompiledTransform 类](/dotnet/standard/data/xml/using-the-xslcompiledtransform-class) 和 [从 XslTransform 类迁移](/dotnet/standard/data/xml/migrating-from-the-xsltransform-class)。</span><span class="sxs-lookup"><span data-stu-id="629e0-104">For more information, see [Using the XslCompiledTransform Class](/dotnet/standard/data/xml/using-the-xslcompiledtransform-class) and [Migrating From the XslTransform Class](/dotnet/standard/data/xml/migrating-from-the-xsltransform-class).</span></span>  
  
 <span data-ttu-id="629e0-105"><xref:System.Xml.Xsl.XslTransform> 支持 XSLT 1.0 语法。</span><span class="sxs-lookup"><span data-stu-id="629e0-105"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="629e0-106">XSLT 样式表必须使用命名空间 `http://www.w3.org/1999/XSL/Transform` 。</span><span class="sxs-lookup"><span data-stu-id="629e0-106">The XSLT style sheet must use the namespace `http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="629e0-107">还可以使用类将其他参数添加到样式表中 <xref:System.Xml.Xsl.XsltArgumentList> 。</span><span class="sxs-lookup"><span data-stu-id="629e0-107">Additional arguments can also be added to the style sheet using the <xref:System.Xml.Xsl.XsltArgumentList> class.</span></span> <span data-ttu-id="629e0-108">此类包含可从样式表中调用的样式表和扩展对象的输入参数。</span><span class="sxs-lookup"><span data-stu-id="629e0-108">This class contains input parameters for the style sheet and extension objects which can be called from the style sheet.</span></span>  
  
 <span data-ttu-id="629e0-109">转换 XML 数据：</span><span class="sxs-lookup"><span data-stu-id="629e0-109">To transform XML data:</span></span>  
  
1.  <span data-ttu-id="629e0-110">创建 <xref:System.Xml.Xsl.XslTransform> 对象。</span><span class="sxs-lookup"><span data-stu-id="629e0-110">Create an <xref:System.Xml.Xsl.XslTransform> object.</span></span>  
  
2.  <span data-ttu-id="629e0-111">使用 <xref:System.Xml.Xsl.XslTransform.Load%2A> 方法加载转换的样式表。</span><span class="sxs-lookup"><span data-stu-id="629e0-111">Use the <xref:System.Xml.Xsl.XslTransform.Load%2A> method to load the style sheet for the transformation.</span></span> <span data-ttu-id="629e0-112">此方法具有多个重载，并且可以使用 <xref:System.Xml.XmlReader> 、 <xref:System.Xml.XPath.XPathNavigator> 、 <xref:System.Xml.XPath.IXPathNavigable> 或 URL 与文件位置一起加载样式表。</span><span class="sxs-lookup"><span data-stu-id="629e0-112">This method has several overloads and can load a style sheet using an <xref:System.Xml.XmlReader>, <xref:System.Xml.XPath.XPathNavigator>, <xref:System.Xml.XPath.IXPathNavigable>, or a URL with the location of the file.</span></span>  
  
3.  <span data-ttu-id="629e0-113">使用 <xref:System.Xml.Xsl.XslTransform.Transform%2A> 方法来转换 XML 数据。</span><span class="sxs-lookup"><span data-stu-id="629e0-113">Use the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method to transform the XML data.</span></span> <span data-ttu-id="629e0-114">此方法具有多个重载，并且可以处理不同类型的输入和输出。</span><span class="sxs-lookup"><span data-stu-id="629e0-114">This method has several overloads and can handle different types of input and output.</span></span> <span data-ttu-id="629e0-115">你还可以指定， <xref:System.Xml.Xsl.XsltArgumentList> 其中包含要在转换过程中用作输入的其他参数。</span><span class="sxs-lookup"><span data-stu-id="629e0-115">You can also specify an <xref:System.Xml.Xsl.XsltArgumentList> containing additional arguments to use as input during the transformation.</span></span>  
  
 <span data-ttu-id="629e0-116">**安全注意事项**</span><span class="sxs-lookup"><span data-stu-id="629e0-116">**Security Considerations**</span></span>  
  
 <span data-ttu-id="629e0-117">在创建使用 <xref:System.Xml.Xsl.XslTransform> 类的应用程序时，应了解下列项及其含义：</span><span class="sxs-lookup"><span data-stu-id="629e0-117">When creating an application that uses the <xref:System.Xml.Xsl.XslTransform> class, you should be aware of the following items and their implications:</span></span>  
  
-   <span data-ttu-id="629e0-118">默认情况下启用扩展对象。</span><span class="sxs-lookup"><span data-stu-id="629e0-118">Extension objects are enabled by default.</span></span> <span data-ttu-id="629e0-119">如果包含扩展对象的 <xref:System.Xml.Xsl.XsltArgumentList> 对象传递给 <xref:System.Xml.Xsl.XslTransform.Transform%2A> 方法，将利用这些扩展对象。</span><span class="sxs-lookup"><span data-stu-id="629e0-119">If an <xref:System.Xml.Xsl.XsltArgumentList> object containing extension objects is passed to the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method, they are utilized.</span></span>  
  
-   <span data-ttu-id="629e0-120">XSLT 样式表可以包括对其他文件的引用以及嵌入式脚本块。</span><span class="sxs-lookup"><span data-stu-id="629e0-120">XSLT style sheets can include references to other files and embedded script blocks.</span></span> <span data-ttu-id="629e0-121">恶意用户可以通过向您提供数据或样式表来利用此方法，在执行该操作时，将导致系统在计算机资源不足的情况下进行处理。</span><span class="sxs-lookup"><span data-stu-id="629e0-121">A malicious user can exploit this by supplying you with data or style sheets that when executed will cause your system to process until the computer runs low on resources.</span></span>  
  
-   <span data-ttu-id="629e0-122">在混合信任环境下运行的 XSLT 应用程序可能会引发样式表欺骗。</span><span class="sxs-lookup"><span data-stu-id="629e0-122">XSLT applications that run in a mixed trust environment can result in style sheet spoofing.</span></span> <span data-ttu-id="629e0-123">例如，恶意用户可能会为对象加载有害的样式表，并将其交给另一个用户，而后者会继续调用 <xref:System.Xml.Xsl.XslTransform.Transform%2A> 方法并执行转换。</span><span class="sxs-lookup"><span data-stu-id="629e0-123">For example, a malicious user can load an object with a harmful style sheet and hand it off to another user who subsequently calls the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method and executes the transformation.</span></span>  
  
 <span data-ttu-id="629e0-124">不接受 <xref:System.Xml.Xsl.XslTransform> 来自不受信任源的对象、XSLT 样式表或 XML 源数据可以减轻这些安全问题。</span><span class="sxs-lookup"><span data-stu-id="629e0-124">These security issues can be mitigated by not accepting <xref:System.Xml.Xsl.XslTransform> objects, XSLT style sheets, or XML source data from untrusted sources.</span></span>  
  
 <span data-ttu-id="629e0-125">**脚本支持**</span><span class="sxs-lookup"><span data-stu-id="629e0-125">**Scripting Support**</span></span>  
  
 <span data-ttu-id="629e0-126">此类使用元素支持嵌入 `msxsl:script` 的脚本。</span><span class="sxs-lookup"><span data-stu-id="629e0-126">This class supports embedded scripting using the `msxsl:script` element.</span></span>  
  
 <span data-ttu-id="629e0-127">在 .NET Framework 版本1.1 中，样式表的证据确定授予嵌入脚本的权限。</span><span class="sxs-lookup"><span data-stu-id="629e0-127">In version 1.1 of the .NET Framework, the evidence of the style sheet determines what permissions are given to embedded scripts.</span></span>  
  
-   <span data-ttu-id="629e0-128">如果样式表是从统一资源标识符加载的 (URI) ，则使用 URI 创建证据。</span><span class="sxs-lookup"><span data-stu-id="629e0-128">If the style sheet was loaded from a Uniform Resource Identifier (URI), the URI is used to create the evidence.</span></span> <span data-ttu-id="629e0-129">此证据包含 URI 及其站点和区域。</span><span class="sxs-lookup"><span data-stu-id="629e0-129">This evidence includes the URI along with its site and zone.</span></span>  
  
-   <span data-ttu-id="629e0-130">如果使用其他源加载了样式表，则可以通过将 <xref:System.Security.Policy.Evidence?displayProperty=nameWithType> 对象传递给方法来提供证据 <xref:System.Xml.Xsl.XslTransform.Load%2A> 。</span><span class="sxs-lookup"><span data-stu-id="629e0-130">If the style sheet was loaded using another source, you can provide evidence by passing a <xref:System.Security.Policy.Evidence?displayProperty=nameWithType> object to the <xref:System.Xml.Xsl.XslTransform.Load%2A> method.</span></span> <span data-ttu-id="629e0-131">否则，脚本程序集会完全信任。</span><span class="sxs-lookup"><span data-stu-id="629e0-131">Otherwise, the script assembly has full trust.</span></span>  
  
 <span data-ttu-id="629e0-132">不完全受信任的调用方： `UnmanagedCode` 编译嵌入式脚本需要权限。</span><span class="sxs-lookup"><span data-stu-id="629e0-132">Semi-trusted callers: `UnmanagedCode` permission is required to compile the embedded script.</span></span> <span data-ttu-id="629e0-133">`ControlEvidence` 需要提供 <xref:System.Security.Policy.Evidence> 对方法的权限 <xref:System.Xml.Xsl.XslTransform.Load%2A> 。</span><span class="sxs-lookup"><span data-stu-id="629e0-133">`ControlEvidence` permission is required to provide <xref:System.Security.Policy.Evidence> to the <xref:System.Xml.Xsl.XslTransform.Load%2A> method.</span></span> <span data-ttu-id="629e0-134"><xref:System.Security.SecurityException>如果调用方不具有所需的权限，则会引发。</span><span class="sxs-lookup"><span data-stu-id="629e0-134">A <xref:System.Security.SecurityException> is thrown if the caller does not have the necessary permissions.</span></span> <span data-ttu-id="629e0-135">有关更多信息，请参见<xref:System.Security.Permissions.SecurityPermission?displayProperty=nameWithType>和<xref:System.Security.Permissions.SecurityPermissionFlag?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="629e0-135">See <xref:System.Security.Permissions.SecurityPermission?displayProperty=nameWithType> and <xref:System.Security.Permissions.SecurityPermissionFlag?displayProperty=nameWithType> for more information.</span></span>  
  
 <span data-ttu-id="629e0-136">`msxsl:script`元素具有以下要求：</span><span class="sxs-lookup"><span data-stu-id="629e0-136">The `msxsl:script` element has the following requirements:</span></span>  
  
-   <span data-ttu-id="629e0-137">`msxsl:script`元素属于 `urn:schemas-microsoft-com:xslt` 命名空间。</span><span class="sxs-lookup"><span data-stu-id="629e0-137">The `msxsl:script` element belongs to the `urn:schemas-microsoft-com:xslt` namespace.</span></span> <span data-ttu-id="629e0-138">样式表必须包括命名空间声明 `xmlns:msxsl=urn:schemas-microsoft-com:xslt` 。</span><span class="sxs-lookup"><span data-stu-id="629e0-138">The style sheet must include the namespace declaration `xmlns:msxsl=urn:schemas-microsoft-com:xslt`.</span></span>  
  
-   <span data-ttu-id="629e0-139">`msxsl:script`元素可以包含 `language` 指定要使用的脚本语言的特性。</span><span class="sxs-lookup"><span data-stu-id="629e0-139">The `msxsl:script` element can include a `language` attribute that specifies the scripting language to use.</span></span> <span data-ttu-id="629e0-140">特性的值 `language` 必须是下列值之一： c #、CSharp、VB、操作、JScript 或 JavaScript。</span><span class="sxs-lookup"><span data-stu-id="629e0-140">The value of the `language` attribute must be one of the following: C#, CSharp, VB, VisualBasic, JScript, or JavaScript.</span></span> <span data-ttu-id="629e0-141">由于语言名称不区分大小写，因此 JavaScript 和 javascript 都是有效的。</span><span class="sxs-lookup"><span data-stu-id="629e0-141">Because the language name is not case-sensitive, JavaScript and javascript are both valid.</span></span> <span data-ttu-id="629e0-142">如果 `language` 未指定属性，则默认为 JScript。</span><span class="sxs-lookup"><span data-stu-id="629e0-142">If a `language` attribute is not specified, it defaults to JScript.</span></span>  
  
-   <span data-ttu-id="629e0-143">`msxsl:script`元素必须包括一个 `implements-prefix` 属性，该属性包含表示与脚本块关联的命名空间的前缀。</span><span class="sxs-lookup"><span data-stu-id="629e0-143">The `msxsl:script` element must include an `implements-prefix` attribute that contains the prefix representing the namespace associated with the script block.</span></span> <span data-ttu-id="629e0-144">此命名空间必须在样式表中定义。</span><span class="sxs-lookup"><span data-stu-id="629e0-144">This namespace must be defined within the style sheet.</span></span> <span data-ttu-id="629e0-145">样式表可以包含多个按命名空间分组的脚本块。</span><span class="sxs-lookup"><span data-stu-id="629e0-145">A style sheet can include multiple script blocks which are grouped by namespace.</span></span> <span data-ttu-id="629e0-146">同一命名空间中不能有多个语言的脚本块。</span><span class="sxs-lookup"><span data-stu-id="629e0-146">You cannot have script blocks with multiple languages within the same namespace.</span></span> <span data-ttu-id="629e0-147">脚本块可以调用另一个脚本块中定义的函数，前提是脚本块驻留在同一命名空间中。</span><span class="sxs-lookup"><span data-stu-id="629e0-147">Script blocks can call a function defined in another script block, provided the script blocks reside within the same namespace.</span></span> <span data-ttu-id="629e0-148">脚本块的内容根据 (特性) 提供的脚本语言的规则和语法进行分析 `language` 。</span><span class="sxs-lookup"><span data-stu-id="629e0-148">The contents of a script block are parsed according to the rules and syntax of the scripting language (supplied by the `language` attribute).</span></span> <span data-ttu-id="629e0-149">例如，如果有一个 c # 脚本块，注释将以字符作为前缀 `//` 。</span><span class="sxs-lookup"><span data-stu-id="629e0-149">For example, if you had a C# script block, comments would be prefixed by the `//` characters.</span></span> <span data-ttu-id="629e0-150">注释必须为有效的 XML 内容。</span><span class="sxs-lookup"><span data-stu-id="629e0-150">The comments must be valid XML content.</span></span>  
  
> [!NOTE]
> <span data-ttu-id="629e0-151">建议你将脚本块包装在 CDATA 节中。</span><span class="sxs-lookup"><span data-stu-id="629e0-151">It is recommended that you wrap script blocks in a CDATA section.</span></span>
  
 [!INCLUDE [xsltransform-script](~/includes/xsltransform-script.md)] 
   
 <span data-ttu-id="629e0-152">函数可以在 `msxsl:script` 元素内声明。</span><span class="sxs-lookup"><span data-stu-id="629e0-152">Functions can be declared within the `msxsl:script` element.</span></span> <span data-ttu-id="629e0-153">下表显示了默认情况下支持的命名空间。</span><span class="sxs-lookup"><span data-stu-id="629e0-153">The following table shows the namespaces that are supported by default.</span></span>  
  
|<span data-ttu-id="629e0-154">支持的命名空间</span><span class="sxs-lookup"><span data-stu-id="629e0-154">Supported Namespaces</span></span>|<span data-ttu-id="629e0-155">说明</span><span class="sxs-lookup"><span data-stu-id="629e0-155">Description</span></span>|  
|--------------------------|-----------------|  
|`System`|<span data-ttu-id="629e0-156">系统类。</span><span class="sxs-lookup"><span data-stu-id="629e0-156">System classes.</span></span>|  
|`System.Collection`|<span data-ttu-id="629e0-157">集合类。</span><span class="sxs-lookup"><span data-stu-id="629e0-157">Collection classes.</span></span>|  
|`System.Text`|<span data-ttu-id="629e0-158">文本处理类。</span><span class="sxs-lookup"><span data-stu-id="629e0-158">Text handling classes.</span></span>|  
|`System.Xml`|<span data-ttu-id="629e0-159">核心 XML 类。</span><span class="sxs-lookup"><span data-stu-id="629e0-159">Core XML classes.</span></span>|  
|`System.Xml.Xsl`|<span data-ttu-id="629e0-160">XSLT 类。</span><span class="sxs-lookup"><span data-stu-id="629e0-160">XSLT classes.</span></span>|  
|`System.Xml.XPath`|<span data-ttu-id="629e0-161">XML 路径语言 (XPath) 类。</span><span class="sxs-lookup"><span data-stu-id="629e0-161">XML Path Language (XPath) classes.</span></span>|  
  
 <span data-ttu-id="629e0-162">脚本函数定义的所提供的参数和返回值必须为下面列出的万维网联合会 (W3C) 类型之一。</span><span class="sxs-lookup"><span data-stu-id="629e0-162">The supplied arguments and return values defined by the script functions must be one of the World Wide Web Consortium (W3C) types listed below.</span></span> <span data-ttu-id="629e0-163">下表详细说明了 W3C 类型（XPath 或 XSLT）与相应 .NET Framework 类之间的映射。</span><span class="sxs-lookup"><span data-stu-id="629e0-163">The following table details the mapping between the W3C types, either XPath or XSLT, and the corresponding .NET Framework classes.</span></span>  
  
|<span data-ttu-id="629e0-164">W3C 类型</span><span class="sxs-lookup"><span data-stu-id="629e0-164">W3C Type</span></span>|<span data-ttu-id="629e0-165">等效的 .NET 类</span><span class="sxs-lookup"><span data-stu-id="629e0-165">Equivalent .NET class</span></span>|  
|--------------|---------------------------|  
|<span data-ttu-id="629e0-166">String (XPath) </span><span class="sxs-lookup"><span data-stu-id="629e0-166">String (XPath)</span></span>|`System.String`|  
|<span data-ttu-id="629e0-167">布尔 (XPath) </span><span class="sxs-lookup"><span data-stu-id="629e0-167">Boolean (XPath)</span></span>|`System.Boolean`|  
|<span data-ttu-id="629e0-168">XPath (数) </span><span class="sxs-lookup"><span data-stu-id="629e0-168">Number (XPath)</span></span>|`System.Double`|  
|<span data-ttu-id="629e0-169"> (XSLT) 的结果树片段</span><span class="sxs-lookup"><span data-stu-id="629e0-169">Result Tree Fragment (XSLT)</span></span>|`System.Xml.XPath.XPathNavigator`|  
|<span data-ttu-id="629e0-170">节点集 (XPath) </span><span class="sxs-lookup"><span data-stu-id="629e0-170">Node Set (XPath)</span></span>|`System.Xml.XPath.XPathNodeIterator`|  
  
 <span data-ttu-id="629e0-171">如果脚本函数使用下列数值类型之一： Int16、UInt16、Int32、UInt32、Int64、UInt64、Single 或 Decimal，则会将这些类型强制转换为双精度类型的双精度值。</span><span class="sxs-lookup"><span data-stu-id="629e0-171">If the script function utilizes one of the following numeric types: Int16, UInt16, Int32, UInt32, Int64, UInt64, Single, or Decimal, these types are coerced to Double, which maps to the W3C XPath type number.</span></span>  
  
 <span data-ttu-id="629e0-172">如果调用的函数无法将参数结果转换为所需的类型之一，则会引发异常。</span><span class="sxs-lookup"><span data-stu-id="629e0-172">An exception is thrown when a function is called that cannot convert the argument result to one of the required types.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="629e0-173">`msxsl:script` 和 `msxsl:node-list` 是类支持的唯一命名空间中的函数 `urn:schemas-microsoft-com:xslt` <xref:System.Xml.Xsl.XslTransform> 。</span><span class="sxs-lookup"><span data-stu-id="629e0-173">`msxsl:script` and `msxsl:node-list` are the only functions from the `urn:schemas-microsoft-com:xslt` namespace that are supported by the <xref:System.Xml.Xsl.XslTransform> class.</span></span>  
  
 <span data-ttu-id="629e0-174"><xref:System.Xml.Xsl.XslTransform> 能够利用公共语言运行时 (CLR) 代码作为扩展机制。</span><span class="sxs-lookup"><span data-stu-id="629e0-174"><xref:System.Xml.Xsl.XslTransform> has the ability to utilize common language runtime (CLR) code as an extension mechanism.</span></span> <span data-ttu-id="629e0-175">这是通过将类的实例传递给 <xref:System.Xml.Xsl.XslTransform> 类并在 XSLT 样式表中调用其公共方法来完成的。</span><span class="sxs-lookup"><span data-stu-id="629e0-175">This is accomplished by passing an instance of a class to the <xref:System.Xml.Xsl.XslTransform> class and calling its public methods within an XSLT style sheet.</span></span> <span data-ttu-id="629e0-176">使用关键字定义的方法 `params` 允许传递指定数目的参数，在这种情况下不能正常工作。</span><span class="sxs-lookup"><span data-stu-id="629e0-176">Methods that are defined with the `params` keyword, which allows an unspecified number of parameters to be passed, do not work correctly in this scenario.</span></span> <span data-ttu-id="629e0-177">有关更多详细信息，请参阅 [params](/dotnet/csharp/language-reference/keywords/params) 。</span><span class="sxs-lookup"><span data-stu-id="629e0-177">See [params](/dotnet/csharp/language-reference/keywords/params) for more details.</span></span>  
  
 <span data-ttu-id="629e0-178">有关详细信息，请参阅 [具有 XslTransform 类的 XSLT 转换](/dotnet/standard/data/xml/xslt-transformations-with-the-xsltransform-class)。</span><span class="sxs-lookup"><span data-stu-id="629e0-178">For more information see [XSLT Transformations with the XslTransform Class](/dotnet/standard/data/xml/xslt-transformations-with-the-xsltransform-class).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="629e0-179">下面的示例将转换指定的 XML 文档，并将结果输出到控制台。</span><span class="sxs-lookup"><span data-stu-id="629e0-179">The following example transforms the specified XML document and outputs the result to the console.</span></span>  
  
 [!code-csharp[Classic WebData XslTransform Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XslTransform Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XslTransform Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XslTransform Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="629e0-180"><see cref="T:System.Xml.Xsl.XslTransform" /> 对象只对转换操作而言是线程安全的。</span><span class="sxs-lookup"><span data-stu-id="629e0-180"><see cref="T:System.Xml.Xsl.XslTransform" /> objects are only thread-safe for transform operations.</span></span> <span data-ttu-id="629e0-181">其他操作不一定是线程安全的。</span><span class="sxs-lookup"><span data-stu-id="629e0-181">Other operations are not guaranteed to be thread-safe.</span></span> <span data-ttu-id="629e0-182">您必须确保在加载操作期间没有为对象调用任何其他方法。</span><span class="sxs-lookup"><span data-stu-id="629e0-182">You must ensure that no other methods are called on the object during load operations.</span></span></threadsafe>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XslTransform ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XslTransform();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="629e0-183">初始化 <see cref="T:System.Xml.Xsl.XslTransform" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="629e0-183">Initializes a new instance of the <see cref="T:System.Xml.Xsl.XslTransform" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Load">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="629e0-184">加载 XSLT 样式表，包括在 <see langword="xsl:include" /> 和 <see langword="xsl:import" /> 元素中引用的样式表。</span><span class="sxs-lookup"><span data-stu-id="629e0-184">Loads the XSLT style sheet, including style sheets referenced in <see langword="xsl:include" /> and <see langword="xsl:import" /> elements.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="629e0-185"><xref:System.Xml.Xsl.XslTransform>类在 .NET Framework 版本2.0 中已过时。</span><span class="sxs-lookup"><span data-stu-id="629e0-185">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="629e0-186"><xref:System.Xml.Xsl.XslCompiledTransform>类是新的 XSLT 处理器。</span><span class="sxs-lookup"><span data-stu-id="629e0-186">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="629e0-187">有关详细信息，请参阅 [使用 XslCompiledTransform 类](/dotnet/standard/data/xml/using-the-xslcompiledtransform-class) 和 [从 XslTransform 类迁移](/dotnet/standard/data/xml/migrating-from-the-xsltransform-class)。</span><span class="sxs-lookup"><span data-stu-id="629e0-187">For more information, see [Using the XslCompiledTransform Class](/dotnet/standard/data/xml/using-the-xslcompiledtransform-class) and [Migrating From the XslTransform Class](/dotnet/standard/data/xml/migrating-from-the-xsltransform-class).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (string url);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(string url) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Load(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (url As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::String ^ url);" />
      <MemberSignature Language="F#" Value="member this.Load : string -&gt; unit" Usage="xslTransform.Load url" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="url"><span data-ttu-id="629e0-188">指定要加载的 XSLT 样式表的 URL。</span><span class="sxs-lookup"><span data-stu-id="629e0-188">The URL that specifies the XSLT style sheet to load.</span></span></param>
        <summary><span data-ttu-id="629e0-189">加载由一个 URL 指定的 XSLT 样式表。</span><span class="sxs-lookup"><span data-stu-id="629e0-189">Loads the XSLT style sheet specified by a URL.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="629e0-190"><xref:System.Xml.Xsl.XslTransform>类在 .NET Framework 版本2.0 中已过时。</span><span class="sxs-lookup"><span data-stu-id="629e0-190">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="629e0-191"><xref:System.Xml.Xsl.XslCompiledTransform>类是新的 XSLT 处理器。</span><span class="sxs-lookup"><span data-stu-id="629e0-191">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="629e0-192">有关详细信息，请参阅 [使用 XslCompiledTransform 类](/dotnet/standard/data/xml/using-the-xslcompiledtransform-class) 和 [从 XslTransform 类迁移](/dotnet/standard/data/xml/migrating-from-the-xsltransform-class)。</span><span class="sxs-lookup"><span data-stu-id="629e0-192">For more information, see [Using the XslCompiledTransform Class](/dotnet/standard/data/xml/using-the-xslcompiledtransform-class) and [Migrating From the XslTransform Class](/dotnet/standard/data/xml/migrating-from-the-xsltransform-class).</span></span>  
  
 <span data-ttu-id="629e0-193"><xref:System.Xml.Xsl.XslTransform> 支持 XSLT 1.0 语法。</span><span class="sxs-lookup"><span data-stu-id="629e0-193"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="629e0-194">XSLT 样式表必须包括命名空间声明 `xmlns:xsl="http://www.w3.org/1999/XSL/Transform"` 。</span><span class="sxs-lookup"><span data-stu-id="629e0-194">The XSLT style sheet must include the namespace declaration `xmlns:xsl="http://www.w3.org/1999/XSL/Transform"`.</span></span>  
  
 <span data-ttu-id="629e0-195">此方法加载 XSLT 样式表，其中包括和元素中引用的所有样式表 `xsl:include` `xsl:import` 。</span><span class="sxs-lookup"><span data-stu-id="629e0-195">This method loads the XSLT style sheet, including any style sheets referenced in `xsl:include` and `xsl:import` elements.</span></span> <span data-ttu-id="629e0-196">使用没有用户凭据的来解析外部资源 <xref:System.Xml.XmlUrlResolver> 。</span><span class="sxs-lookup"><span data-stu-id="629e0-196">External resources are resolved using an <xref:System.Xml.XmlUrlResolver> with no user credentials.</span></span> <span data-ttu-id="629e0-197">如果样式表 (s) 位于要求身份验证的网络资源上，请使用将 <xref:System.Xml.XmlResolver> 作为其参数之一的重载，并使用 <xref:System.Xml.XmlResolver> 所需的凭据指定。</span><span class="sxs-lookup"><span data-stu-id="629e0-197">If the style sheet(s) are located on a network resource which requires authentication, use the overload that takes an <xref:System.Xml.XmlResolver> as one of its arguments and specify an <xref:System.Xml.XmlResolver> with the necessary credentials.</span></span>  
  
 <span data-ttu-id="629e0-198">如果样式表包含嵌入式脚本，则该脚本将编译为程序集。</span><span class="sxs-lookup"><span data-stu-id="629e0-198">If the style sheet contains embedded scripting, the script is compiled to an assembly.</span></span> <span data-ttu-id="629e0-199">样式表的 URI 用于创建将应用于程序集的证据。</span><span class="sxs-lookup"><span data-stu-id="629e0-199">The URI of the style sheet is used to create evidence, which is applied to the assembly.</span></span>
  
> [!NOTE]
>  <span data-ttu-id="629e0-200">如果调用方没有 `UnmanagedCode` 权限，则不编译嵌入的脚本并 <xref:System.Security.SecurityException> 引发。</span><span class="sxs-lookup"><span data-stu-id="629e0-200">If the caller does not have `UnmanagedCode` permission, the embedded script is not compiled and a <xref:System.Security.SecurityException> is thrown.</span></span> <span data-ttu-id="629e0-201">有关更多信息，请参见<xref:System.Security.Permissions.SecurityPermission>和<xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="629e0-201">See <xref:System.Security.Permissions.SecurityPermission> and <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType> for more information.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="629e0-202">下面的示例将 XML 文档转换为 HTML 文档。</span><span class="sxs-lookup"><span data-stu-id="629e0-202">The following example transforms an XML document into an HTML document.</span></span> <span data-ttu-id="629e0-203">它显示表中每本书的 ISBN、标题和价格。</span><span class="sxs-lookup"><span data-stu-id="629e0-203">It displays the ISBN, title, and price for each book in a table.</span></span>  
  
 [!code-cpp[Classic WebData XslTransform.Transform7 Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XslTransform.Transform7 Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XslTransform.Transform7 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/VB/source.vb#1)]  
  
 <span data-ttu-id="629e0-204">示例使用下列两个输入文件。</span><span class="sxs-lookup"><span data-stu-id="629e0-204">The sample uses the following two input files.</span></span>  
  
 `books.xml`  
  
 [!code-xml[Classic WebData XslTransform.Transform7 Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/XML/books.xml#2)]  
  
 `output.xsl`  
  
 [!code-xml[Classic WebData XslTransform.Transform7 Example#3](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/XML/output.xsl#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Xsl.XsltCompileException"><span data-ttu-id="629e0-205">加载的资源不是有效的样式表。</span><span class="sxs-lookup"><span data-stu-id="629e0-205">The loaded resource is not a valid style sheet.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="629e0-206">样式表包含嵌入式脚本，并且调用方没有 <see langword="UnmanagedCode" /> 权限。</span><span class="sxs-lookup"><span data-stu-id="629e0-206">The style sheet contains embedded script, and the caller does not have <see langword="UnmanagedCode" /> permission.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Xml.XmlReader stylesheet);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Xml.XmlReader stylesheet) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (stylesheet As XmlReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Xml::XmlReader ^ stylesheet);" />
      <MemberSignature Language="F#" Value="member this.Load : System.Xml.XmlReader -&gt; unit" Usage="xslTransform.Load stylesheet" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName Language="C#">[System.Obsolete("You should pass evidence to Load() method")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("You should pass evidence to Load() method")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheet" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="stylesheet"><span data-ttu-id="629e0-207">包含 XSLT 样式表的 <see cref="T:System.Xml.XmlReader" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="629e0-207">An <see cref="T:System.Xml.XmlReader" /> object that contains the XSLT style sheet.</span></span></param>
        <summary><span data-ttu-id="629e0-208">加载 <see cref="T:System.Xml.XmlReader" /> 中包含的 XSLT 样式表。</span><span class="sxs-lookup"><span data-stu-id="629e0-208">Loads the XSLT style sheet contained in the <see cref="T:System.Xml.XmlReader" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="629e0-209"><xref:System.Xml.Xsl.XslTransform>类在 .NET Framework 版本2.0 中已过时。</span><span class="sxs-lookup"><span data-stu-id="629e0-209">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="629e0-210"><xref:System.Xml.Xsl.XslCompiledTransform>类是新的 XSLT 处理器。</span><span class="sxs-lookup"><span data-stu-id="629e0-210">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="629e0-211">有关详细信息，请参阅 [使用 XslCompiledTransform 类](/dotnet/standard/data/xml/using-the-xslcompiledtransform-class) 和 [从 XslTransform 类迁移](/dotnet/standard/data/xml/migrating-from-the-xsltransform-class)。</span><span class="sxs-lookup"><span data-stu-id="629e0-211">For more information, see [Using the XslCompiledTransform Class](/dotnet/standard/data/xml/using-the-xslcompiledtransform-class) and [Migrating From the XslTransform Class](/dotnet/standard/data/xml/migrating-from-the-xsltransform-class).</span></span>  
  
 <span data-ttu-id="629e0-212"><xref:System.Xml.Xsl.XslTransform> 支持 XSLT 1.0 语法。</span><span class="sxs-lookup"><span data-stu-id="629e0-212"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="629e0-213">XSLT 样式表必须包括命名空间声明 `xmlns:xsl= http://www.w3.org/1999/XSL/Transform` 。</span><span class="sxs-lookup"><span data-stu-id="629e0-213">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="629e0-214">此方法加载 XSLT 样式表，其中包括和元素中引用的所有样式表 `xsl:include` `xsl:import` 。</span><span class="sxs-lookup"><span data-stu-id="629e0-214">This method loads the XSLT style sheet, including any style sheets referenced in `xsl:include` and `xsl:import` elements.</span></span> <span data-ttu-id="629e0-215">使用没有用户凭据的来解析外部资源 <xref:System.Xml.XmlUrlResolver> 。</span><span class="sxs-lookup"><span data-stu-id="629e0-215">External resources are resolved using an <xref:System.Xml.XmlUrlResolver> with no user credentials.</span></span> <span data-ttu-id="629e0-216">如果样式表 (s) 位于要求身份验证的网络资源上，请使用将 <xref:System.Xml.XmlResolver> 作为其参数之一的重载，并使用 <xref:System.Xml.XmlResolver> 所需的凭据指定。</span><span class="sxs-lookup"><span data-stu-id="629e0-216">If the style sheet(s) are located on a network resource which requires authentication, use the overload that takes an <xref:System.Xml.XmlResolver> as one of its arguments and specify an <xref:System.Xml.XmlResolver> with the necessary credentials.</span></span>  
  
 <span data-ttu-id="629e0-217">样式表从的当前节点加载 <xref:System.Xml.XmlReader> 到其所有子级。</span><span class="sxs-lookup"><span data-stu-id="629e0-217">The style sheet loads from the current node of the <xref:System.Xml.XmlReader> through all its children.</span></span> <span data-ttu-id="629e0-218">这使您可以使用文档的一部分作为样式表。</span><span class="sxs-lookup"><span data-stu-id="629e0-218">This enables you to use a portion of a document as the style sheet.</span></span> <span data-ttu-id="629e0-219">此 <xref:System.Xml.Xsl.XslTransform.Load%2A> 方法返回后， <xref:System.Xml.XmlReader> 将定位到样式表末尾后的下一个节点。</span><span class="sxs-lookup"><span data-stu-id="629e0-219">After the <xref:System.Xml.Xsl.XslTransform.Load%2A> method returns, the <xref:System.Xml.XmlReader> is positioned on the next node after the end of the style sheet.</span></span> <span data-ttu-id="629e0-220">如果已到达文档结尾，<xref:System.Xml.XmlReader> 将位于文件结尾 (EOF)。</span><span class="sxs-lookup"><span data-stu-id="629e0-220">If the end of the document is reached, the <xref:System.Xml.XmlReader> is positioned at the end of file (EOF).</span></span>  
  
 <span data-ttu-id="629e0-221">如果样式表包含实体，则应指定 <xref:System.Xml.XmlReader> 可解析实体 (<xref:System.Xml.XmlReader.CanResolveEntity%2A?displayProperty=nameWithType> 返回 `true`) 的。</span><span class="sxs-lookup"><span data-stu-id="629e0-221">If the style sheet contains entities, you should specify an <xref:System.Xml.XmlReader> that can resolve entities (<xref:System.Xml.XmlReader.CanResolveEntity%2A?displayProperty=nameWithType> returns `true`).</span></span> <span data-ttu-id="629e0-222">在这种情况下， <xref:System.Xml.XmlValidatingReader> 可以使用。</span><span class="sxs-lookup"><span data-stu-id="629e0-222">In this case, an <xref:System.Xml.XmlValidatingReader> can be used.</span></span>  
  
 <span data-ttu-id="629e0-223">如果样式表包含嵌入式脚本，则该脚本将编译为程序集。</span><span class="sxs-lookup"><span data-stu-id="629e0-223">If the style sheet contains embedded scripting, the script is compiled to an assembly.</span></span> <span data-ttu-id="629e0-224">程序集具有完全信任。</span><span class="sxs-lookup"><span data-stu-id="629e0-224">The assembly has full trust.</span></span> <span data-ttu-id="629e0-225">建议的做法是使用方法提供证据 <xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XmlReader%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29> 。</span><span class="sxs-lookup"><span data-stu-id="629e0-225">The recommended practice is to provide evidence using the <xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XmlReader%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29> method.</span></span>
  
> [!NOTE]
>  <span data-ttu-id="629e0-226">如果调用方没有 `UnmanagedCode` 权限，则不编译嵌入的脚本并 <xref:System.Security.SecurityException> 引发。</span><span class="sxs-lookup"><span data-stu-id="629e0-226">If the caller does not have `UnmanagedCode` permission, the embedded script is not compiled and a <xref:System.Security.SecurityException> is thrown.</span></span> <span data-ttu-id="629e0-227">有关更多信息，请参见<xref:System.Security.Permissions.SecurityPermission>和<xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="629e0-227">See <xref:System.Security.Permissions.SecurityPermission> and <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType> for more information.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="629e0-228">下面的示例将转换按标题对所有书籍进行排序的 XML 文件。</span><span class="sxs-lookup"><span data-stu-id="629e0-228">The following example transforms an XML file sorting all the books by title.</span></span>  
  
 [!code-cpp[XslTransform.Load3#1](~/samples/snippets/cpp/VS_Snippets_Data/XslTransform.Load3/CPP/trans3.cpp#1)]
 [!code-csharp[XslTransform.Load3#1](~/samples/snippets/csharp/VS_Snippets_Data/XslTransform.Load3/CS/trans3.cs#1)]
 [!code-vb[XslTransform.Load3#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XslTransform.Load3/VB/trans3.vb#1)]  
  
 <span data-ttu-id="629e0-229">该示例使用以下数据文件作为输入。</span><span class="sxs-lookup"><span data-stu-id="629e0-229">The example uses the following data files as input.</span></span>  
  
 `books.xml`  
  
 [!code-xml[XslTransform.Load3#2](~/samples/snippets/xml/VS_Snippets_Data/XslTransform.Load3/XML/books.xml#2)]  
  
 `titles.xsl`  
  
 [!code-xml[XslTransform.Load3#3](~/samples/snippets/xml/VS_Snippets_Data/XslTransform.Load3/XML/titles.xsl#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Xsl.XsltCompileException"><span data-ttu-id="629e0-230">当前节点不符合有效样式表的要求。</span><span class="sxs-lookup"><span data-stu-id="629e0-230">The current node does not conform to a valid style sheet.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="629e0-231">样式表包含嵌入式脚本，并且调用方没有 <see langword="UnmanagedCode" /> 权限。</span><span class="sxs-lookup"><span data-stu-id="629e0-231">The style sheet contains embedded scripts, and the caller does not have <see langword="UnmanagedCode" /> permission.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Xml.XPath.IXPathNavigable stylesheet);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Xml.XPath.IXPathNavigable stylesheet) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.IXPathNavigable)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (stylesheet As IXPathNavigable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Xml::XPath::IXPathNavigable ^ stylesheet);" />
      <MemberSignature Language="F#" Value="member this.Load : System.Xml.XPath.IXPathNavigable -&gt; unit" Usage="xslTransform.Load stylesheet" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName Language="C#">[System.Obsolete("You should pass evidence to Load() method")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("You should pass evidence to Load() method")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheet" Type="System.Xml.XPath.IXPathNavigable" />
      </Parameters>
      <Docs>
        <param name="stylesheet"><span data-ttu-id="629e0-232">一个实现 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 接口的对象。</span><span class="sxs-lookup"><span data-stu-id="629e0-232">An object implementing the <see cref="T:System.Xml.XPath.IXPathNavigable" /> interface.</span></span> <span data-ttu-id="629e0-233">在 .NET Framework 中，这可以是 <see cref="T:System.Xml.XmlNode" />（一般为 <see cref="T:System.Xml.XmlDocument" />），或者是包含 XSLT 样式表的 <see cref="T:System.Xml.XPath.XPathDocument" />。</span><span class="sxs-lookup"><span data-stu-id="629e0-233">In the .NET Framework, this can be either an <see cref="T:System.Xml.XmlNode" /> (typically an <see cref="T:System.Xml.XmlDocument" />), or an <see cref="T:System.Xml.XPath.XPathDocument" /> containing the XSLT style sheet.</span></span></param>
        <summary><span data-ttu-id="629e0-234">加载 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 中包含的 XSLT 样式表。</span><span class="sxs-lookup"><span data-stu-id="629e0-234">Loads the XSLT style sheet contained in the <see cref="T:System.Xml.XPath.IXPathNavigable" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="629e0-235"><xref:System.Xml.Xsl.XslTransform>类在 .NET Framework 版本2.0 中已过时。</span><span class="sxs-lookup"><span data-stu-id="629e0-235">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="629e0-236"><xref:System.Xml.Xsl.XslCompiledTransform>类是新的 XSLT 处理器。</span><span class="sxs-lookup"><span data-stu-id="629e0-236">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="629e0-237">有关详细信息，请参阅 [使用 XslCompiledTransform 类](/dotnet/standard/data/xml/using-the-xslcompiledtransform-class) 和 [从 XslTransform 类迁移](/dotnet/standard/data/xml/migrating-from-the-xsltransform-class)。</span><span class="sxs-lookup"><span data-stu-id="629e0-237">For more information, see [Using the XslCompiledTransform Class](/dotnet/standard/data/xml/using-the-xslcompiledtransform-class) and [Migrating From the XslTransform Class](/dotnet/standard/data/xml/migrating-from-the-xsltransform-class).</span></span>  
  
 <span data-ttu-id="629e0-238"><xref:System.Xml.Xsl.XslTransform> 支持 XSLT 1.0 语法。</span><span class="sxs-lookup"><span data-stu-id="629e0-238"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="629e0-239">XSLT 样式表必须包括命名空间声明 `xmlns:xsl= http://www.w3.org/1999/XSL/Transform` 。</span><span class="sxs-lookup"><span data-stu-id="629e0-239">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="629e0-240">此方法加载 XSLT 样式表，其中包括和元素中引用的所有样式表 `xsl:include` `xsl:import` 。</span><span class="sxs-lookup"><span data-stu-id="629e0-240">This method loads the XSLT style sheet, including any style sheets referenced in `xsl:include` and `xsl:import` elements.</span></span> <span data-ttu-id="629e0-241">使用没有用户凭据的来解析外部资源 <xref:System.Xml.XmlUrlResolver> 。</span><span class="sxs-lookup"><span data-stu-id="629e0-241">External resources are resolved using an <xref:System.Xml.XmlUrlResolver> with no user credentials.</span></span> <span data-ttu-id="629e0-242">如果样式表 (s) 位于要求身份验证的网络资源上，请使用将 <xref:System.Xml.XmlResolver> 作为其参数之一的重载，并使用 <xref:System.Xml.XmlResolver> 所需的凭据指定。</span><span class="sxs-lookup"><span data-stu-id="629e0-242">If the style sheet(s) are located on a network resource which requires authentication, use the overload that takes an <xref:System.Xml.XmlResolver> as one of its arguments and specify an <xref:System.Xml.XmlResolver> with the necessary credentials.</span></span>  
  
 <span data-ttu-id="629e0-243">如果样式表包含嵌入式脚本，则该脚本将编译为程序集。</span><span class="sxs-lookup"><span data-stu-id="629e0-243">If the style sheet contains embedded scripting, the script is compiled to an assembly.</span></span> <span data-ttu-id="629e0-244">程序集具有完全信任。</span><span class="sxs-lookup"><span data-stu-id="629e0-244">The assembly has full trust.</span></span> <span data-ttu-id="629e0-245">建议的做法是使用方法提供证据 <xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XPath.IXPathNavigable%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29> 。</span><span class="sxs-lookup"><span data-stu-id="629e0-245">The recommended practice is to provide evidence using the <xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XPath.IXPathNavigable%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29> method.</span></span>
  
> [!NOTE]
>  <span data-ttu-id="629e0-246">如果调用方没有 `UnmanagedCode` 权限，则不编译嵌入的脚本并 <xref:System.Security.SecurityException> 引发。</span><span class="sxs-lookup"><span data-stu-id="629e0-246">If the caller does not have `UnmanagedCode` permission, the embedded script is not compiled and a <xref:System.Security.SecurityException> is thrown.</span></span> <span data-ttu-id="629e0-247">有关更多信息，请参见<xref:System.Security.Permissions.SecurityPermission>和<xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="629e0-247">See <xref:System.Security.Permissions.SecurityPermission> and <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType> for more information.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Xsl.XsltCompileException"><span data-ttu-id="629e0-248">加载的资源不是有效的样式表。</span><span class="sxs-lookup"><span data-stu-id="629e0-248">The loaded resource is not a valid style sheet.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="629e0-249">样式表包含嵌入式脚本，并且调用方没有 <see langword="UnmanagedCode" /> 权限。</span><span class="sxs-lookup"><span data-stu-id="629e0-249">The style sheet contains embedded scripts, and the caller does not have <see langword="UnmanagedCode" /> permission.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Xml.XPath.XPathNavigator stylesheet);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Xml.XPath.XPathNavigator stylesheet) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.XPathNavigator)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (stylesheet As XPathNavigator)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Xml::XPath::XPathNavigator ^ stylesheet);" />
      <MemberSignature Language="F#" Value="member this.Load : System.Xml.XPath.XPathNavigator -&gt; unit" Usage="xslTransform.Load stylesheet" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName Language="C#">[System.Obsolete("You should pass evidence to Load() method")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("You should pass evidence to Load() method")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheet" Type="System.Xml.XPath.XPathNavigator" />
      </Parameters>
      <Docs>
        <param name="stylesheet"><span data-ttu-id="629e0-250">包含 XSLT 样式表的 <see cref="T:System.Xml.XPath.XPathNavigator" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="629e0-250">An <see cref="T:System.Xml.XPath.XPathNavigator" /> object that contains the XSLT style sheet.</span></span></param>
        <summary><span data-ttu-id="629e0-251">加载 <see cref="T:System.Xml.XPath.XPathNavigator" /> 中包含的 XSLT 样式表。</span><span class="sxs-lookup"><span data-stu-id="629e0-251">Loads the XSLT style sheet contained in the <see cref="T:System.Xml.XPath.XPathNavigator" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="629e0-252"><xref:System.Xml.Xsl.XslTransform>类在 .NET Framework 版本2.0 中已过时。</span><span class="sxs-lookup"><span data-stu-id="629e0-252">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="629e0-253"><xref:System.Xml.Xsl.XslCompiledTransform>类是新的 XSLT 处理器。</span><span class="sxs-lookup"><span data-stu-id="629e0-253">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="629e0-254">有关详细信息，请参阅 [使用 XslCompiledTransform 类](/dotnet/standard/data/xml/using-the-xslcompiledtransform-class) 和 [从 XslTransform 类迁移](/dotnet/standard/data/xml/migrating-from-the-xsltransform-class)。</span><span class="sxs-lookup"><span data-stu-id="629e0-254">For more information, see [Using the XslCompiledTransform Class](/dotnet/standard/data/xml/using-the-xslcompiledtransform-class) and [Migrating From the XslTransform Class](/dotnet/standard/data/xml/migrating-from-the-xsltransform-class).</span></span>  
  
 <span data-ttu-id="629e0-255"><xref:System.Xml.Xsl.XslTransform> 支持 XSLT 1.0 语法。</span><span class="sxs-lookup"><span data-stu-id="629e0-255"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="629e0-256">XSLT 样式表必须包括命名空间声明 `xmlns:xsl= http://www.w3.org/1999/XSL/Transform` 。</span><span class="sxs-lookup"><span data-stu-id="629e0-256">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="629e0-257">此方法加载 XSLT 样式表，其中包括和元素中引用的所有样式表 `xsl:include` `xsl:import` 。</span><span class="sxs-lookup"><span data-stu-id="629e0-257">This method loads the XSLT style sheet, including any style sheets referenced in `xsl:include` and `xsl:import` elements.</span></span> <span data-ttu-id="629e0-258">使用没有用户凭据的来解析外部资源 <xref:System.Xml.XmlUrlResolver> 。</span><span class="sxs-lookup"><span data-stu-id="629e0-258">External resources are resolved using an <xref:System.Xml.XmlUrlResolver> with no user credentials.</span></span> <span data-ttu-id="629e0-259">如果样式表 (s) 位于要求身份验证的网络资源上，请使用将 <xref:System.Xml.XmlResolver> 作为其参数之一的重载，并使用 <xref:System.Xml.XmlResolver> 所需的凭据指定。</span><span class="sxs-lookup"><span data-stu-id="629e0-259">If the style sheet(s) are located on a network resource which requires authentication, use the overload that takes an <xref:System.Xml.XmlResolver> as one of its arguments and specify an <xref:System.Xml.XmlResolver> with the necessary credentials.</span></span>  
  
 <span data-ttu-id="629e0-260">样式表是从的当前位置加载的 <xref:System.Xml.XPath.XPathNavigator> 。</span><span class="sxs-lookup"><span data-stu-id="629e0-260">The style sheet is loaded from the current position of the <xref:System.Xml.XPath.XPathNavigator>.</span></span> <span data-ttu-id="629e0-261">若要仅使用已加载文档的一部分作为样式表，请导航到与样式表的开头相对应的节点。</span><span class="sxs-lookup"><span data-stu-id="629e0-261">To use just a portion of the loaded document as the style sheet, navigate to the node corresponding to the beginning of the style sheet.</span></span> <span data-ttu-id="629e0-262"><xref:System.Xml.Xsl.XslTransform.Load%2A>方法返回后，位于 <xref:System.Xml.XPath.XPathNavigator> 节点)  (上的样式表的开头 `xsl:style sheet` 。</span><span class="sxs-lookup"><span data-stu-id="629e0-262">After the <xref:System.Xml.Xsl.XslTransform.Load%2A> method returns, the <xref:System.Xml.XPath.XPathNavigator> is positioned at the beginning of the style sheet (on the `xsl:style sheet` node).</span></span>  
  
 <span data-ttu-id="629e0-263">如果样式表包含嵌入式脚本，则该脚本将编译为程序集。</span><span class="sxs-lookup"><span data-stu-id="629e0-263">If the style sheet contains embedded scripting, the script is compiled to an assembly.</span></span> <span data-ttu-id="629e0-264">程序集具有完全信任。</span><span class="sxs-lookup"><span data-stu-id="629e0-264">The assembly has full trust.</span></span> <span data-ttu-id="629e0-265">建议的做法是使用方法提供证据 <xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XPath.XPathNavigator%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29> 。</span><span class="sxs-lookup"><span data-stu-id="629e0-265">The recommended practice is to provide evidence using the <xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XPath.XPathNavigator%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29> method.</span></span>
  
> [!NOTE]
>  <span data-ttu-id="629e0-266">如果调用方没有 `UnmanagedCode` 权限，则不编译嵌入的脚本并 <xref:System.Security.SecurityException> 引发。</span><span class="sxs-lookup"><span data-stu-id="629e0-266">If the caller does not have `UnmanagedCode` permission, the embedded script is not compiled and a <xref:System.Security.SecurityException> is thrown.</span></span> <span data-ttu-id="629e0-267">有关更多信息，请参见<xref:System.Security.Permissions.SecurityPermission>和<xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="629e0-267">See <xref:System.Security.Permissions.SecurityPermission> and <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType> for more information.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Xsl.XsltCompileException"><span data-ttu-id="629e0-268">当前节点不符合有效样式表的要求。</span><span class="sxs-lookup"><span data-stu-id="629e0-268">The current node does not conform to a valid style sheet.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="629e0-269">样式表包含嵌入式脚本，并且调用方没有 <see langword="UnmanagedCode" /> 权限。</span><span class="sxs-lookup"><span data-stu-id="629e0-269">The style sheet contains embedded scripts, and the caller does not have <see langword="UnmanagedCode" /> permission.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (string url, System.Xml.XmlResolver? resolver);" FrameworkAlternate="net-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(string url, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Load(System.String,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (url As String, resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::String ^ url, System::Xml::XmlResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="member this.Load : string * System.Xml.XmlResolver -&gt; unit" Usage="xslTransform.Load (url, resolver)" />
      <MemberSignature Language="C#" Value="public void Load (string url, System.Xml.XmlResolver resolver);" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="System.String" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="url"><span data-ttu-id="629e0-270">指定要加载的 XSLT 样式表的 URL。</span><span class="sxs-lookup"><span data-stu-id="629e0-270">The URL that specifies the XSLT style sheet to load.</span></span></param>
        <param name="resolver"><span data-ttu-id="629e0-271"><see cref="T:System.Xml.XmlResolver" /> 用于加载该样式表以及 <c>xsl:import</c> 和 <c>xsl:include</c> 元素中引用的任何样式表。</span><span class="sxs-lookup"><span data-stu-id="629e0-271">The <see cref="T:System.Xml.XmlResolver" /> to use to load the style sheet and any style sheet(s) referenced in <c>xsl:import</c> and <c>xsl:include</c> elements.</span></span>  
  
<span data-ttu-id="629e0-272">如果这是 <see langword="null" />，将使用不具有用户凭据的默认 <see cref="T:System.Xml.XmlUrlResolver" /> 来打开样式表。</span><span class="sxs-lookup"><span data-stu-id="629e0-272">If this is <see langword="null" />, a default <see cref="T:System.Xml.XmlUrlResolver" /> with no user credentials is used to open the style sheet.</span></span> <span data-ttu-id="629e0-273">不使用默认的 <see cref="T:System.Xml.XmlUrlResolver" /> 来解析样式表中的任何外部资源，因此将不解析 <c>xsl:import</c> 和 <c>xsl:include</c> 元素。</span><span class="sxs-lookup"><span data-stu-id="629e0-273">The default <see cref="T:System.Xml.XmlUrlResolver" /> is not used to resolve any external resources in the style sheet, so <c>xsl:import</c> and <c>xsl:include</c> elements are not resolved.</span></span>  
  
<span data-ttu-id="629e0-274">完成 <see cref="T:System.Xml.XmlResolver" /> 方法后不缓存 <see cref="M:System.Xml.Xsl.XslTransform.Load(System.String,System.Xml.XmlResolver)" />。</span><span class="sxs-lookup"><span data-stu-id="629e0-274">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="M:System.Xml.Xsl.XslTransform.Load(System.String,System.Xml.XmlResolver)" /> method completes.</span></span></param>
        <summary><span data-ttu-id="629e0-275">加载由一个 URL 指定的 XSLT 样式表。</span><span class="sxs-lookup"><span data-stu-id="629e0-275">Loads the XSLT style sheet specified by a URL.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="629e0-276"><xref:System.Xml.Xsl.XslTransform>类在 .NET Framework 版本2.0 中已过时。</span><span class="sxs-lookup"><span data-stu-id="629e0-276">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="629e0-277"><xref:System.Xml.Xsl.XslCompiledTransform>类是新的 XSLT 处理器。</span><span class="sxs-lookup"><span data-stu-id="629e0-277">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="629e0-278">有关详细信息，请参阅 [使用 XslCompiledTransform 类](/dotnet/standard/data/xml/using-the-xslcompiledtransform-class) 和 [从 XslTransform 类迁移](/dotnet/standard/data/xml/migrating-from-the-xsltransform-class)。</span><span class="sxs-lookup"><span data-stu-id="629e0-278">For more information, see [Using the XslCompiledTransform Class](/dotnet/standard/data/xml/using-the-xslcompiledtransform-class) and [Migrating From the XslTransform Class](/dotnet/standard/data/xml/migrating-from-the-xsltransform-class).</span></span>  
  
 <span data-ttu-id="629e0-279"><xref:System.Xml.Xsl.XslTransform> 支持 XSLT 1.0 语法。</span><span class="sxs-lookup"><span data-stu-id="629e0-279"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="629e0-280">XSLT 样式表必须包括命名空间声明 `xmlns:xsl= http://www.w3.org/1999/XSL/Transform` 。</span><span class="sxs-lookup"><span data-stu-id="629e0-280">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="629e0-281">如果样式表包含嵌入式脚本，则该脚本将编译为程序集。</span><span class="sxs-lookup"><span data-stu-id="629e0-281">If the style sheet contains embedded scripting, the script is compiled to an assembly.</span></span> <span data-ttu-id="629e0-282">样式表的 URI 用于创建将应用于程序集的证据。</span><span class="sxs-lookup"><span data-stu-id="629e0-282">The URI of the style sheet is used to create evidence, which is applied to the assembly.</span></span>
  
> [!NOTE]
>  <span data-ttu-id="629e0-283">如果调用方没有 `UnmanagedCode` 权限，则不编译嵌入的脚本并 <xref:System.Security.SecurityException> 引发。</span><span class="sxs-lookup"><span data-stu-id="629e0-283">If the caller does not have `UnmanagedCode` permission, the embedded script is not compiled and a <xref:System.Security.SecurityException> is thrown.</span></span> <span data-ttu-id="629e0-284">有关更多信息，请参见<xref:System.Security.Permissions.SecurityPermission>和<xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="629e0-284">See <xref:System.Security.Permissions.SecurityPermission> and <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType> for more information.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="629e0-285">下面的示例将 XML 文档转换为 HTML 文档。</span><span class="sxs-lookup"><span data-stu-id="629e0-285">The following example transforms an XML document into an HTML document.</span></span> <span data-ttu-id="629e0-286">该示例将加载一个包含 `xsl:include` 引用另一个样式表的元素的 XSLT 样式表。</span><span class="sxs-lookup"><span data-stu-id="629e0-286">The example loads an XSLT style sheet which contains an `xsl:include` element referencing another style sheet.</span></span> <span data-ttu-id="629e0-287"><xref:System.Xml.XmlUrlResolver>传递给方法，该 <xref:System.Xml.Xsl.XslTransform.Load%2A> 方法用于设置为所包含的样式表访问网络资源所需的凭据。</span><span class="sxs-lookup"><span data-stu-id="629e0-287">An <xref:System.Xml.XmlUrlResolver> is passed to the <xref:System.Xml.Xsl.XslTransform.Load%2A> method which sets the credentials necessary to access the network resource for the included style sheet.</span></span>  
  
 [!code-csharp[XslTransform.Load2#1](~/samples/snippets/csharp/VS_Snippets_Data/XslTransform.Load2/CS/trans2.cs#1)]
 [!code-vb[XslTransform.Load2#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XslTransform.Load2/VB/trans2.vb#1)]  
  
 <span data-ttu-id="629e0-288">该示例使用以下数据文件作为输入。</span><span class="sxs-lookup"><span data-stu-id="629e0-288">The example uses the following data files as input.</span></span>  
  
 `books.xml`  
  
 [!code-xml[XslTransform.Load2#2](~/samples/snippets/xml/VS_Snippets_Data/XslTransform.Load2/XML/books.xml#2)]  
  
 `sort.xsl`  
  
 [!code-xml[XslTransform.Load2#3](~/samples/snippets/xml/VS_Snippets_Data/XslTransform.Load2/XML/sort.xsl#3)]  
  
 `includefile.xsl`  
  
 [!code-xml[XslTransform.Load2#4](~/samples/snippets/xml/VS_Snippets_Data/XslTransform.Load2/XML/includefile.xsl#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Xsl.XsltCompileException"><span data-ttu-id="629e0-289">加载的资源不是有效的样式表。</span><span class="sxs-lookup"><span data-stu-id="629e0-289">The loaded resource is not a valid style sheet.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="629e0-290">样式表包含嵌入式脚本，并且调用方没有 <see langword="UnmanagedCode" /> 权限。</span><span class="sxs-lookup"><span data-stu-id="629e0-290">The style sheet contains embedded script, and the caller does not have <see langword="UnmanagedCode" /> permission.</span></span></exception>
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <altmember cref="T:System.Net.CredentialCache" />
        <altmember cref="T:System.Net.NetworkCredential" />
        <altmember cref="T:System.Xml.XmlSecureResolver" />
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Xml.XmlReader stylesheet, System.Xml.XmlResolver? resolver);" FrameworkAlternate="net-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Xml.XmlReader stylesheet, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XmlReader,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (stylesheet As XmlReader, resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Xml::XmlReader ^ stylesheet, System::Xml::XmlResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="member this.Load : System.Xml.XmlReader * System.Xml.XmlResolver -&gt; unit" Usage="xslTransform.Load (stylesheet, resolver)" />
      <MemberSignature Language="C#" Value="public void Load (System.Xml.XmlReader stylesheet, System.Xml.XmlResolver resolver);" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName Language="C#">[System.Obsolete("You should pass evidence to Load() method")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("You should pass evidence to Load() method")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheet" Type="System.Xml.XmlReader" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="stylesheet"><span data-ttu-id="629e0-291">包含 XSLT 样式表的 <see cref="T:System.Xml.XmlReader" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="629e0-291">An <see cref="T:System.Xml.XmlReader" /> object that contains the XSLT style sheet.</span></span></param>
        <param name="resolver"><span data-ttu-id="629e0-292"><see cref="T:System.Xml.XmlResolver" />，用于加载 <c>xsl:import</c> 和 <c>xsl:include</c> 元素中引用的任何样式表。</span><span class="sxs-lookup"><span data-stu-id="629e0-292">The <see cref="T:System.Xml.XmlResolver" /> used to load any style sheets referenced in <c>xsl:import</c> and <c>xsl:include</c> elements.</span></span> <span data-ttu-id="629e0-293">如果这为 <see langword="null" />，则不解析外部资源。</span><span class="sxs-lookup"><span data-stu-id="629e0-293">If this is <see langword="null" />, external resources are not resolved.</span></span>  
  
<span data-ttu-id="629e0-294">完成 <see cref="T:System.Xml.XmlResolver" /> 方法后不缓存 <see cref="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XmlReader,System.Xml.XmlResolver)" />。</span><span class="sxs-lookup"><span data-stu-id="629e0-294">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XmlReader,System.Xml.XmlResolver)" /> method completes.</span></span></param>
        <summary><span data-ttu-id="629e0-295">加载 <see cref="T:System.Xml.XmlReader" /> 中包含的 XSLT 样式表。</span><span class="sxs-lookup"><span data-stu-id="629e0-295">Loads the XSLT style sheet contained in the <see cref="T:System.Xml.XmlReader" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="629e0-296"><xref:System.Xml.Xsl.XslTransform>类在 .NET Framework 版本2.0 中已过时。</span><span class="sxs-lookup"><span data-stu-id="629e0-296">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="629e0-297"><xref:System.Xml.Xsl.XslCompiledTransform>类是新的 XSLT 处理器。</span><span class="sxs-lookup"><span data-stu-id="629e0-297">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="629e0-298">有关详细信息，请参阅 [使用 XslCompiledTransform 类](/dotnet/standard/data/xml/using-the-xslcompiledtransform-class) 和 [从 XslTransform 类迁移](/dotnet/standard/data/xml/migrating-from-the-xsltransform-class)。</span><span class="sxs-lookup"><span data-stu-id="629e0-298">For more information, see [Using the XslCompiledTransform Class](/dotnet/standard/data/xml/using-the-xslcompiledtransform-class) and [Migrating From the XslTransform Class](/dotnet/standard/data/xml/migrating-from-the-xsltransform-class).</span></span>  
  
 <span data-ttu-id="629e0-299"><xref:System.Xml.Xsl.XslTransform> 支持 XSLT 1.0 语法。</span><span class="sxs-lookup"><span data-stu-id="629e0-299"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="629e0-300">XSLT 样式表必须包括命名空间声明 `xmlns:xsl= http://www.w3.org/1999/XSL/Transform` 。</span><span class="sxs-lookup"><span data-stu-id="629e0-300">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="629e0-301">此方法加载 XSLT 样式表，其中包括和元素中引用的所有样式表 `xsl:include` `xsl:import` 。</span><span class="sxs-lookup"><span data-stu-id="629e0-301">This method loads the XSLT style sheet, including any style sheets referenced in `xsl:include` and `xsl:import` elements.</span></span> <span data-ttu-id="629e0-302">样式表从的当前节点加载 <xref:System.Xml.XmlReader> 到其所有子级。</span><span class="sxs-lookup"><span data-stu-id="629e0-302">The style sheet loads from the current node of the <xref:System.Xml.XmlReader> through all its children.</span></span> <span data-ttu-id="629e0-303">这使您可以使用文档的一部分作为样式表。</span><span class="sxs-lookup"><span data-stu-id="629e0-303">This enables you to use a portion of a document as the style sheet.</span></span>  
  
 <span data-ttu-id="629e0-304">此 <xref:System.Xml.Xsl.XslTransform.Load%2A> 方法返回后， <xref:System.Xml.XmlReader> 将定位到样式表末尾后的下一个节点。</span><span class="sxs-lookup"><span data-stu-id="629e0-304">After the <xref:System.Xml.Xsl.XslTransform.Load%2A> method returns, the <xref:System.Xml.XmlReader> is positioned on the next node after the end of the style sheet.</span></span> <span data-ttu-id="629e0-305">如果已到达文档结尾，<xref:System.Xml.XmlReader> 将位于文件结尾 (EOF)。</span><span class="sxs-lookup"><span data-stu-id="629e0-305">If the end of the document is reached, the <xref:System.Xml.XmlReader> is positioned at the end of file (EOF).</span></span>  
  
 <span data-ttu-id="629e0-306">如果样式表包含实体，则应指定 <xref:System.Xml.XmlReader> 可解析实体 (<xref:System.Xml.XmlReader.CanResolveEntity%2A?displayProperty=nameWithType> 返回 `true`) 的。</span><span class="sxs-lookup"><span data-stu-id="629e0-306">If the style sheet contains entities, you should specify an <xref:System.Xml.XmlReader> that can resolve entities (<xref:System.Xml.XmlReader.CanResolveEntity%2A?displayProperty=nameWithType> returns `true`).</span></span> <span data-ttu-id="629e0-307">在这种情况下， <xref:System.Xml.XmlValidatingReader> 可以使用。</span><span class="sxs-lookup"><span data-stu-id="629e0-307">In this case, an <xref:System.Xml.XmlValidatingReader> can be used.</span></span>  
  
 <span data-ttu-id="629e0-308">如果样式表包含嵌入式脚本，则该脚本将编译为程序集。</span><span class="sxs-lookup"><span data-stu-id="629e0-308">If the style sheet contains embedded scripting, the script is compiled to an assembly.</span></span> <span data-ttu-id="629e0-309">程序集具有完全信任。</span><span class="sxs-lookup"><span data-stu-id="629e0-309">The assembly has full trust.</span></span> <span data-ttu-id="629e0-310">建议的做法是使用方法提供证据 <xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XmlReader%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29> 。</span><span class="sxs-lookup"><span data-stu-id="629e0-310">The recommended practice is to provide evidence using the <xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XmlReader%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29> method.</span></span>
  
> [!NOTE]
>  <span data-ttu-id="629e0-311">如果调用方没有 `UnmanagedCode` 权限，则不编译嵌入的脚本并 <xref:System.Security.SecurityException> 引发。</span><span class="sxs-lookup"><span data-stu-id="629e0-311">If the caller does not have `UnmanagedCode` permission, the embedded script is not compiled and a <xref:System.Security.SecurityException> is thrown.</span></span> <span data-ttu-id="629e0-312">有关更多信息，请参见<xref:System.Security.Permissions.SecurityPermission>和<xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="629e0-312">See <xref:System.Security.Permissions.SecurityPermission> and <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType> for more information.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Xsl.XsltCompileException"><span data-ttu-id="629e0-313">当前节点不符合有效样式表的要求。</span><span class="sxs-lookup"><span data-stu-id="629e0-313">The current node does not conform to a valid style sheet.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="629e0-314">样式表包含嵌入式脚本，并且调用方没有 <see langword="UnmanagedCode" /> 权限。</span><span class="sxs-lookup"><span data-stu-id="629e0-314">The style sheet contains embedded scripts, and the caller does not have <see langword="UnmanagedCode" /> permission.</span></span></exception>
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <altmember cref="T:System.Net.CredentialCache" />
        <altmember cref="T:System.Net.NetworkCredential" />
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Xml.XPath.IXPathNavigable stylesheet, System.Xml.XmlResolver? resolver);" FrameworkAlternate="net-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Xml.XPath.IXPathNavigable stylesheet, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.IXPathNavigable,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (stylesheet As IXPathNavigable, resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Xml::XPath::IXPathNavigable ^ stylesheet, System::Xml::XmlResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="member this.Load : System.Xml.XPath.IXPathNavigable * System.Xml.XmlResolver -&gt; unit" Usage="xslTransform.Load (stylesheet, resolver)" />
      <MemberSignature Language="C#" Value="public void Load (System.Xml.XPath.IXPathNavigable stylesheet, System.Xml.XmlResolver resolver);" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName Language="C#">[System.Obsolete("You should pass evidence to Load() method")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("You should pass evidence to Load() method")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheet" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="stylesheet"><span data-ttu-id="629e0-315">一个实现 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 接口的对象。</span><span class="sxs-lookup"><span data-stu-id="629e0-315">An object implementing the <see cref="T:System.Xml.XPath.IXPathNavigable" /> interface.</span></span> <span data-ttu-id="629e0-316">在 .NET Framework 中，这可以是 <see cref="T:System.Xml.XmlNode" />（一般为 <see cref="T:System.Xml.XmlDocument" />），或者是包含 XSLT 样式表的 <see cref="T:System.Xml.XPath.XPathDocument" />。</span><span class="sxs-lookup"><span data-stu-id="629e0-316">In the .NET Framework, this can be either an <see cref="T:System.Xml.XmlNode" /> (typically an <see cref="T:System.Xml.XmlDocument" />), or an <see cref="T:System.Xml.XPath.XPathDocument" /> containing the XSLT style sheet.</span></span></param>
        <param name="resolver"><span data-ttu-id="629e0-317"><see cref="T:System.Xml.XmlResolver" />，用于加载 <c>xsl:import</c> 和 <c>xsl:include</c> 元素中引用的任何样式表。</span><span class="sxs-lookup"><span data-stu-id="629e0-317">The <see cref="T:System.Xml.XmlResolver" /> used to load any style sheets referenced in <c>xsl:import</c> and <c>xsl:include</c> elements.</span></span> <span data-ttu-id="629e0-318">如果这为 <see langword="null" />，则不解析外部资源。</span><span class="sxs-lookup"><span data-stu-id="629e0-318">If this is <see langword="null" />, external resources are not resolved.</span></span>  
  
<span data-ttu-id="629e0-319">完成 <see cref="T:System.Xml.XmlResolver" /> 方法后不缓存 <see cref="Overload:System.Xml.Xsl.XslTransform.Load" />。</span><span class="sxs-lookup"><span data-stu-id="629e0-319">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="Overload:System.Xml.Xsl.XslTransform.Load" /> method completes.</span></span></param>
        <summary><span data-ttu-id="629e0-320">加载 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 中包含的 XSLT 样式表。</span><span class="sxs-lookup"><span data-stu-id="629e0-320">Loads the XSLT style sheet contained in the <see cref="T:System.Xml.XPath.IXPathNavigable" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="629e0-321"><xref:System.Xml.Xsl.XslTransform>类在 .NET Framework 版本2.0 中已过时。</span><span class="sxs-lookup"><span data-stu-id="629e0-321">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="629e0-322"><xref:System.Xml.Xsl.XslCompiledTransform>类是新的 XSLT 处理器。</span><span class="sxs-lookup"><span data-stu-id="629e0-322">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="629e0-323">有关详细信息，请参阅 [使用 XslCompiledTransform 类](/dotnet/standard/data/xml/using-the-xslcompiledtransform-class) 和 [从 XslTransform 类迁移](/dotnet/standard/data/xml/migrating-from-the-xsltransform-class)。</span><span class="sxs-lookup"><span data-stu-id="629e0-323">For more information, see [Using the XslCompiledTransform Class](/dotnet/standard/data/xml/using-the-xslcompiledtransform-class) and [Migrating From the XslTransform Class](/dotnet/standard/data/xml/migrating-from-the-xsltransform-class).</span></span>  
  
 <span data-ttu-id="629e0-324"><xref:System.Xml.Xsl.XslTransform> 支持 XSLT 1.0 语法。</span><span class="sxs-lookup"><span data-stu-id="629e0-324"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="629e0-325">XSLT 样式表必须包括命名空间声明 `xmlns:xsl= http://www.w3.org/1999/XSL/Transform` 。</span><span class="sxs-lookup"><span data-stu-id="629e0-325">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="629e0-326">如果样式表包含嵌入式脚本，则该脚本将编译为程序集。</span><span class="sxs-lookup"><span data-stu-id="629e0-326">If the style sheet contains embedded scripting, the script is compiled to an assembly.</span></span> <span data-ttu-id="629e0-327">程序集具有完全信任。</span><span class="sxs-lookup"><span data-stu-id="629e0-327">The assembly has full trust.</span></span> <span data-ttu-id="629e0-328">建议的做法是使用方法提供证据 <xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XPath.IXPathNavigable%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29> 。</span><span class="sxs-lookup"><span data-stu-id="629e0-328">The recommended practice is to provide evidence using the <xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XPath.IXPathNavigable%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29> method.</span></span>
  
> [!NOTE]
>  <span data-ttu-id="629e0-329">如果调用方没有 `UnmanagedCode` 权限，则不编译嵌入的脚本并 <xref:System.Security.SecurityException> 引发。</span><span class="sxs-lookup"><span data-stu-id="629e0-329">If the caller does not have `UnmanagedCode` permission, the embedded script is not compiled and a <xref:System.Security.SecurityException> is thrown.</span></span> <span data-ttu-id="629e0-330">有关更多信息，请参见<xref:System.Security.Permissions.SecurityPermission>和<xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="629e0-330">See <xref:System.Security.Permissions.SecurityPermission> and <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType> for more information.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Xsl.XsltCompileException"><span data-ttu-id="629e0-331">加载的资源不是有效的样式表。</span><span class="sxs-lookup"><span data-stu-id="629e0-331">The loaded resource is not a valid style sheet.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="629e0-332">样式表包含嵌入式脚本，并且调用方没有 <see langword="UnmanagedCode" /> 权限。</span><span class="sxs-lookup"><span data-stu-id="629e0-332">The style sheet contains embedded scripts, and the caller does not have <see langword="UnmanagedCode" /> permission.</span></span></exception>
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <altmember cref="T:System.Net.CredentialCache" />
        <altmember cref="T:System.Net.NetworkCredential" />
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Xml.XPath.XPathNavigator stylesheet, System.Xml.XmlResolver? resolver);" FrameworkAlternate="net-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Xml.XPath.XPathNavigator stylesheet, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.XPathNavigator,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (stylesheet As XPathNavigator, resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Xml::XPath::XPathNavigator ^ stylesheet, System::Xml::XmlResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="member this.Load : System.Xml.XPath.XPathNavigator * System.Xml.XmlResolver -&gt; unit" Usage="xslTransform.Load (stylesheet, resolver)" />
      <MemberSignature Language="C#" Value="public void Load (System.Xml.XPath.XPathNavigator stylesheet, System.Xml.XmlResolver resolver);" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName Language="C#">[System.Obsolete("You should pass evidence to Load() method")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("You should pass evidence to Load() method")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheet" Type="System.Xml.XPath.XPathNavigator" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="stylesheet"><span data-ttu-id="629e0-333">包含 XSLT 样式表的 <see cref="T:System.Xml.XPath.XPathNavigator" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="629e0-333">An <see cref="T:System.Xml.XPath.XPathNavigator" /> object that contains the XSLT style sheet.</span></span></param>
        <param name="resolver"><span data-ttu-id="629e0-334"><see cref="T:System.Xml.XmlResolver" />，用于加载 <c>xsl:import</c> 和 <c>xsl:include</c> 元素中引用的任何样式表。</span><span class="sxs-lookup"><span data-stu-id="629e0-334">The <see cref="T:System.Xml.XmlResolver" /> used to load any style sheets referenced in <c>xsl:import</c> and <c>xsl:include</c> elements.</span></span> <span data-ttu-id="629e0-335">如果这为 <see langword="null" />，则不解析外部资源。</span><span class="sxs-lookup"><span data-stu-id="629e0-335">If this is <see langword="null" />, external resources are not resolved.</span></span>  
  
<span data-ttu-id="629e0-336">完成 <see cref="T:System.Xml.XmlResolver" /> 方法后不缓存 <see cref="Overload:System.Xml.Xsl.XslTransform.Load" />。</span><span class="sxs-lookup"><span data-stu-id="629e0-336">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="Overload:System.Xml.Xsl.XslTransform.Load" /> method completes.</span></span></param>
        <summary><span data-ttu-id="629e0-337">加载 <see cref="T:System.Xml.XPath.XPathNavigator" /> 中包含的 XSLT 样式表。</span><span class="sxs-lookup"><span data-stu-id="629e0-337">Loads the XSLT style sheet contained in the <see cref="T:System.Xml.XPath.XPathNavigator" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="629e0-338"><xref:System.Xml.Xsl.XslTransform>类在 .NET Framework 版本2.0 中已过时。</span><span class="sxs-lookup"><span data-stu-id="629e0-338">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="629e0-339"><xref:System.Xml.Xsl.XslCompiledTransform>类是新的 XSLT 处理器。</span><span class="sxs-lookup"><span data-stu-id="629e0-339">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="629e0-340">有关详细信息，请参阅 [使用 XslCompiledTransform 类](/dotnet/standard/data/xml/using-the-xslcompiledtransform-class) 和 [从 XslTransform 类迁移](/dotnet/standard/data/xml/migrating-from-the-xsltransform-class)。</span><span class="sxs-lookup"><span data-stu-id="629e0-340">For more information, see [Using the XslCompiledTransform Class](/dotnet/standard/data/xml/using-the-xslcompiledtransform-class) and [Migrating From the XslTransform Class](/dotnet/standard/data/xml/migrating-from-the-xsltransform-class).</span></span>  
  
 <span data-ttu-id="629e0-341"><xref:System.Xml.Xsl.XslTransform> 支持 XSLT 1.0 语法。</span><span class="sxs-lookup"><span data-stu-id="629e0-341"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="629e0-342">XSLT 样式表必须包括命名空间声明 `xmlns:xsl= http://www.w3.org/1999/XSL/Transform` 。</span><span class="sxs-lookup"><span data-stu-id="629e0-342">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="629e0-343">样式表是从的当前位置加载的 <xref:System.Xml.XPath.XPathNavigator> 。</span><span class="sxs-lookup"><span data-stu-id="629e0-343">The style sheet is loaded from the current position of the <xref:System.Xml.XPath.XPathNavigator>.</span></span> <span data-ttu-id="629e0-344">若要使用部分已加载的文档作为样式表，请导航到与样式表的开头相对应的节点。</span><span class="sxs-lookup"><span data-stu-id="629e0-344">To use a portion of the loaded document as the style sheet, navigate to the node corresponding to the beginning of the style sheet.</span></span> <span data-ttu-id="629e0-345"><xref:System.Xml.Xsl.XslTransform.Load%2A>方法返回后，位于 <xref:System.Xml.XPath.XPathNavigator> 节点)  (上的样式表的开头 `xsl:style sheet` 。</span><span class="sxs-lookup"><span data-stu-id="629e0-345">After the <xref:System.Xml.Xsl.XslTransform.Load%2A> method returns, the <xref:System.Xml.XPath.XPathNavigator> is positioned at the beginning of the style sheet (on the `xsl:style sheet` node).</span></span>  
  
 <span data-ttu-id="629e0-346">如果样式表包含嵌入式脚本，则该脚本将编译为程序集。</span><span class="sxs-lookup"><span data-stu-id="629e0-346">If the style sheet contains embedded scripting, the script is compiled to an assembly.</span></span> <span data-ttu-id="629e0-347">程序集具有完全信任。</span><span class="sxs-lookup"><span data-stu-id="629e0-347">The assembly has full trust.</span></span> <span data-ttu-id="629e0-348">建议的做法是使用提供证据 <xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XPath.XPathNavigator%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29> 。</span><span class="sxs-lookup"><span data-stu-id="629e0-348">The recommended practice is to provide evidence using the <xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XPath.XPathNavigator%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29>.</span></span>
  
> [!NOTE]
>  <span data-ttu-id="629e0-349">如果调用方没有 `UnmanagedCode` 权限，则不编译嵌入的脚本并 <xref:System.Security.SecurityException> 引发。</span><span class="sxs-lookup"><span data-stu-id="629e0-349">If the caller does not have `UnmanagedCode` permission, the embedded script is not compiled and a <xref:System.Security.SecurityException> is thrown.</span></span> <span data-ttu-id="629e0-350">有关更多信息，请参见<xref:System.Security.Permissions.SecurityPermission>和<xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="629e0-350">See <xref:System.Security.Permissions.SecurityPermission> and <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType> for more information.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Xsl.XsltCompileException"><span data-ttu-id="629e0-351">当前节点不符合有效样式表的要求。</span><span class="sxs-lookup"><span data-stu-id="629e0-351">The current node does not conform to a valid style sheet.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="629e0-352">样式表包含嵌入式脚本，并且调用方没有 <see langword="UnmanagedCode" /> 权限。</span><span class="sxs-lookup"><span data-stu-id="629e0-352">The style sheet contains embedded scripts, and the caller does not have <see langword="UnmanagedCode" /> permission.</span></span></exception>
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <altmember cref="T:System.Net.CredentialCache" />
        <altmember cref="T:System.Net.NetworkCredential" />
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Xml.XmlReader stylesheet, System.Xml.XmlResolver resolver, System.Security.Policy.Evidence evidence);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Xml.XmlReader stylesheet, class System.Xml.XmlResolver resolver, class System.Security.Policy.Evidence evidence) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XmlReader,System.Xml.XmlResolver,System.Security.Policy.Evidence)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (stylesheet As XmlReader, resolver As XmlResolver, evidence As Evidence)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Xml::XmlReader ^ stylesheet, System::Xml::XmlResolver ^ resolver, System::Security::Policy::Evidence ^ evidence);" />
      <MemberSignature Language="F#" Value="member this.Load : System.Xml.XmlReader * System.Xml.XmlResolver * System.Security.Policy.Evidence -&gt; unit" Usage="xslTransform.Load (stylesheet, resolver, evidence)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheet" Type="System.Xml.XmlReader" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" Index="1" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="evidence" Type="System.Security.Policy.Evidence" Index="2" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="stylesheet"><span data-ttu-id="629e0-353">包含要加载的样式表的 <see cref="T:System.Xml.XmlReader" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="629e0-353">An <see cref="T:System.Xml.XmlReader" /> object containing the style sheet to load.</span></span></param>
        <param name="resolver"><span data-ttu-id="629e0-354"><see cref="T:System.Xml.XmlResolver" />，用于加载 <c>xsl:import</c> 和 <c>xsl:include</c> 元素中引用的任何样式表。</span><span class="sxs-lookup"><span data-stu-id="629e0-354">The <see cref="T:System.Xml.XmlResolver" /> used to load any style sheets referenced in <c>xsl:import</c> and <c>xsl:include</c> elements.</span></span> <span data-ttu-id="629e0-355">如果这为 <see langword="null" />，则不解析外部资源。</span><span class="sxs-lookup"><span data-stu-id="629e0-355">If this is <see langword="null" />, external resources are not resolved.</span></span>  
  
<span data-ttu-id="629e0-356">完成 <see cref="T:System.Xml.XmlResolver" /> 方法后不缓存 <see cref="Overload:System.Xml.Xsl.XslTransform.Load" />。</span><span class="sxs-lookup"><span data-stu-id="629e0-356">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="Overload:System.Xml.Xsl.XslTransform.Load" /> method completes.</span></span></param>
        <param name="evidence"><span data-ttu-id="629e0-357">在为 XSLT 样式表中的脚本块生成的程序集上设置的 <see cref="T:System.Security.Policy.Evidence" />。</span><span class="sxs-lookup"><span data-stu-id="629e0-357">The <see cref="T:System.Security.Policy.Evidence" /> set on the assembly generated for the script block in the XSLT style sheet.</span></span>  
  
<span data-ttu-id="629e0-358">如果为 <see langword="null" />，则不处理脚本块、不支持 XSLT <c>document()</c> 函数，并且不允许使用特权扩展对象。</span><span class="sxs-lookup"><span data-stu-id="629e0-358">If this is <see langword="null" />, script blocks are not processed, the XSLT <c>document()</c> function is not supported, and privileged extension objects are disallowed.</span></span>  
  
<span data-ttu-id="629e0-359">调用方必须有 <see langword="ControlEvidence" /> 权限，才能为脚本程序集提供证据。</span><span class="sxs-lookup"><span data-stu-id="629e0-359">The caller must have <see langword="ControlEvidence" /> permission in order to supply evidence for the script assembly.</span></span> <span data-ttu-id="629e0-360">不完全受信任的调用方可以将此参数设置为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="629e0-360">Semi-trusted callers can set this parameter to <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="629e0-361">加载 <see cref="T:System.Xml.XmlReader" /> 中包含的 XSLT 样式表。</span><span class="sxs-lookup"><span data-stu-id="629e0-361">Loads the XSLT style sheet contained in the <see cref="T:System.Xml.XmlReader" />.</span></span> <span data-ttu-id="629e0-362">此方法允许您通过指定证据来限制样式表的权限。</span><span class="sxs-lookup"><span data-stu-id="629e0-362">This method allows you to limit the permissions of the style sheet by specifying evidence.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="629e0-363"><xref:System.Xml.Xsl.XslTransform>类在 .NET Framework 版本2.0 中已过时。</span><span class="sxs-lookup"><span data-stu-id="629e0-363">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="629e0-364"><xref:System.Xml.Xsl.XslCompiledTransform>类是新的 XSLT 处理器。</span><span class="sxs-lookup"><span data-stu-id="629e0-364">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="629e0-365">有关详细信息，请参阅 [使用 XslCompiledTransform 类](/dotnet/standard/data/xml/using-the-xslcompiledtransform-class) 和 [从 XslTransform 类迁移](/dotnet/standard/data/xml/migrating-from-the-xsltransform-class)。</span><span class="sxs-lookup"><span data-stu-id="629e0-365">For more information, see [Using the XslCompiledTransform Class](/dotnet/standard/data/xml/using-the-xslcompiledtransform-class) and [Migrating From the XslTransform Class](/dotnet/standard/data/xml/migrating-from-the-xsltransform-class).</span></span>  
  
 <span data-ttu-id="629e0-366"><xref:System.Xml.Xsl.XslTransform> 支持 XSLT 1.0 语法。</span><span class="sxs-lookup"><span data-stu-id="629e0-366"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="629e0-367">XSLT 样式表必须包括命名空间声明 `xmlns:xsl= http://www.w3.org/1999/XSL/Transform` 。</span><span class="sxs-lookup"><span data-stu-id="629e0-367">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="629e0-368">此方法加载 XSLT 样式表，其中包括和元素中引用的所有样式表 `xsl:include` `xsl:import` 。</span><span class="sxs-lookup"><span data-stu-id="629e0-368">This method loads the XSLT style sheet, including any style sheets referenced in `xsl:include` and `xsl:import` elements.</span></span> <span data-ttu-id="629e0-369">样式表从的当前节点加载 <xref:System.Xml.XmlReader> 到其所有子级。</span><span class="sxs-lookup"><span data-stu-id="629e0-369">The style sheet loads from the current node of the <xref:System.Xml.XmlReader> through all its children.</span></span> <span data-ttu-id="629e0-370">这使您可以使用文档的一部分作为样式表。</span><span class="sxs-lookup"><span data-stu-id="629e0-370">This enables you to use a portion of a document as the style sheet.</span></span>  
  
 <span data-ttu-id="629e0-371">此 <xref:System.Xml.Xsl.XslTransform.Load%2A> 方法返回后， <xref:System.Xml.XmlReader> 将定位到样式表末尾后的下一个节点。</span><span class="sxs-lookup"><span data-stu-id="629e0-371">After the <xref:System.Xml.Xsl.XslTransform.Load%2A> method returns, the <xref:System.Xml.XmlReader> is positioned on the next node after the end of the style sheet.</span></span> <span data-ttu-id="629e0-372">如果已到达文档结尾，<xref:System.Xml.XmlReader> 将位于文件结尾 (EOF)。</span><span class="sxs-lookup"><span data-stu-id="629e0-372">If the end of the document is reached, the <xref:System.Xml.XmlReader> is positioned at the end of file (EOF).</span></span>  
  
 <span data-ttu-id="629e0-373">如果样式表包含实体，则应指定 <xref:System.Xml.XmlReader> 可解析实体 (<xref:System.Xml.XmlReader.CanResolveEntity%2A?displayProperty=nameWithType> 返回 `true`) 的。</span><span class="sxs-lookup"><span data-stu-id="629e0-373">If the style sheet contains entities, you should specify an <xref:System.Xml.XmlReader> that can resolve entities (<xref:System.Xml.XmlReader.CanResolveEntity%2A?displayProperty=nameWithType> returns `true`).</span></span> <span data-ttu-id="629e0-374">在这种情况下， <xref:System.Xml.XmlValidatingReader> 可以使用。</span><span class="sxs-lookup"><span data-stu-id="629e0-374">In this case, an <xref:System.Xml.XmlValidatingReader> can be used.</span></span>  
  

  
 <span data-ttu-id="629e0-375">提供证据的方法有多种。</span><span class="sxs-lookup"><span data-stu-id="629e0-375">There are different ways to provide evidence.</span></span> <span data-ttu-id="629e0-376">下表描述了为常见用户方案提供的证据类型。</span><span class="sxs-lookup"><span data-stu-id="629e0-376">The following table describes what type of evidence to provide for common user scenarios.</span></span>  
  
|<span data-ttu-id="629e0-377">方案</span><span class="sxs-lookup"><span data-stu-id="629e0-377">Scenario</span></span>|<span data-ttu-id="629e0-378">要提供的证据类型</span><span class="sxs-lookup"><span data-stu-id="629e0-378">Type of evidence to provide</span></span>|  
|--------------|---------------------------------|  
|<span data-ttu-id="629e0-379">XSLT 样式表是自包含的，或来自你信任的代码库。</span><span class="sxs-lookup"><span data-stu-id="629e0-379">The XSLT style sheet is self-contained or comes from a code base that you trust.</span></span>|<span data-ttu-id="629e0-380">使用程序集中的证据。</span><span class="sxs-lookup"><span data-stu-id="629e0-380">Use the evidence from your assembly.</span></span><br /><br /> <pre><code class="lang-csharp">XsltTransform xslt = new XslTransform(); &#13;&#10;xslt.Load(xslReader, resolver, this.GetType().Assembly.Evidence);</code></pre>|  
|<span data-ttu-id="629e0-381">XSLT 样式表来自外部源。</span><span class="sxs-lookup"><span data-stu-id="629e0-381">The XSLT style sheet comes from an outside source.</span></span> <span data-ttu-id="629e0-382">源的来源已知，并且存在可验证的 URL。</span><span class="sxs-lookup"><span data-stu-id="629e0-382">The origin of the source is known, and there is a verifiable URL.</span></span>|<span data-ttu-id="629e0-383">使用 URL 创建证据。</span><span class="sxs-lookup"><span data-stu-id="629e0-383">Create evidence using the URL.</span></span><br /><br /> <pre><code class="lang-csharp">XsltTransform xslt = new XslTransform();&#13;&#10; Evidence evidence = XmlSecureResolver.CreateEvidenceForUrl(stylesheetURL); &#13;&#10;xslt.Load(xslReader,resolver,evidence);</code></pre>|  
|<span data-ttu-id="629e0-384">XSLT 样式表来自外部源。</span><span class="sxs-lookup"><span data-stu-id="629e0-384">The XSLT style sheet comes from an outside source.</span></span> <span data-ttu-id="629e0-385">源的来源未知。</span><span class="sxs-lookup"><span data-stu-id="629e0-385">The origin of the source is not known.</span></span>|<span data-ttu-id="629e0-386">将 evidence 设置为 `null`。</span><span class="sxs-lookup"><span data-stu-id="629e0-386">Set evidence to `null`.</span></span> <span data-ttu-id="629e0-387">脚本块将不进行处理，不支持 XSLT `document()` 函数，而且不允许特权扩展对象。</span><span class="sxs-lookup"><span data-stu-id="629e0-387">Script blocks are not processed, the XSLT `document()` function is not supported, and privileged extension objects are disallowed.</span></span><br /><br /> <span data-ttu-id="629e0-388">此外，还可以将参数设置 `resolver` 为 `null` 。</span><span class="sxs-lookup"><span data-stu-id="629e0-388">Additionally, you can also set the `resolver` parameter to `null`.</span></span> <span data-ttu-id="629e0-389">这可确保 `xsl:import` 和 `xsl:include` 元素不被处理。</span><span class="sxs-lookup"><span data-stu-id="629e0-389">This ensures that `xsl:import` and `xsl:include` elements are not processed.</span></span>|  
|<span data-ttu-id="629e0-390">XSLT 样式表来自外部源。</span><span class="sxs-lookup"><span data-stu-id="629e0-390">The XSLT style sheet comes from an outside source.</span></span> <span data-ttu-id="629e0-391">源的来源未知，但您需要脚本支持。</span><span class="sxs-lookup"><span data-stu-id="629e0-391">The origin of the source is not known, but you require script support.</span></span>|<span data-ttu-id="629e0-392">从调用方请求证据。</span><span class="sxs-lookup"><span data-stu-id="629e0-392">Request evidence from the caller.</span></span> <span data-ttu-id="629e0-393">调用方的 API 必须提供一种方法来提供证据，通常为 <xref:System.Security.Policy.Evidence> 类。</span><span class="sxs-lookup"><span data-stu-id="629e0-393">The API of the caller must provide a way to provide evidence, typically the <xref:System.Security.Policy.Evidence> class.</span></span>|  
  
     
## Examples  
 <span data-ttu-id="629e0-394">下面的示例执行 XSLT 转换，其中 `xsltReader` 是 <xref:System.Xml.XmlReader> 包含样式表， `secureURL` 是可用于创建的受信任 URL <xref:System.Security.Policy.Evidence> 。</span><span class="sxs-lookup"><span data-stu-id="629e0-394">The following example performs an XSLT transformation where `xsltReader` is an <xref:System.Xml.XmlReader> containing a style sheet and `secureURL` is a trusted URL that can be used to create <xref:System.Security.Policy.Evidence>.</span></span> <span data-ttu-id="629e0-395"><xref:System.Xml.XmlSecureResolver.CreateEvidenceForUrl%2A?displayProperty=nameWithType>方法用于创建 <xref:System.Security.Policy.Evidence> 应用于样式表的。</span><span class="sxs-lookup"><span data-stu-id="629e0-395">The <xref:System.Xml.XmlSecureResolver.CreateEvidenceForUrl%2A?displayProperty=nameWithType> method is used to create <xref:System.Security.Policy.Evidence> which is applied to the style sheet.</span></span>  
  
 [!code-cpp[XslTransform.Load4#1](~/samples/snippets/cpp/VS_Snippets_Data/XslTransform.Load4/CPP/trans_ev.cpp#1)]
 [!code-csharp[XslTransform.Load4#1](~/samples/snippets/csharp/VS_Snippets_Data/XslTransform.Load4/CS/trans_ev.cs#1)]
 [!code-vb[XslTransform.Load4#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XslTransform.Load4/VB/trans_ev.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Xsl.XsltCompileException"><span data-ttu-id="629e0-396">当前节点不符合有效样式表的要求。</span><span class="sxs-lookup"><span data-stu-id="629e0-396">The current node does not conform to a valid style sheet.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="629e0-397">引用的样式表需要的功能是所提供的证据不允许的。</span><span class="sxs-lookup"><span data-stu-id="629e0-397">The referenced style sheet requires functionality that is not allowed by the evidence provided.</span></span>  
  
<span data-ttu-id="629e0-398">调用方尝试提供证据但没有 <see langword="ControlEvidence" /> 权限。</span><span class="sxs-lookup"><span data-stu-id="629e0-398">The caller tries to supply evidence and does not have <see langword="ControlEvidence" /> permission.</span></span></exception>
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <altmember cref="T:System.Net.NetworkCredential" />
        <altmember cref="T:System.Net.CredentialCache" />
        <altmember cref="T:System.Security.SecurityZone" />
        <altmember cref="T:System.Xml.XmlSecureResolver" />
        <altmember cref="M:System.Xml.XmlSecureResolver.CreateEvidenceForUrl(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Xml.XPath.IXPathNavigable stylesheet, System.Xml.XmlResolver resolver, System.Security.Policy.Evidence evidence);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Xml.XPath.IXPathNavigable stylesheet, class System.Xml.XmlResolver resolver, class System.Security.Policy.Evidence evidence) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.IXPathNavigable,System.Xml.XmlResolver,System.Security.Policy.Evidence)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (stylesheet As IXPathNavigable, resolver As XmlResolver, evidence As Evidence)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Xml::XPath::IXPathNavigable ^ stylesheet, System::Xml::XmlResolver ^ resolver, System::Security::Policy::Evidence ^ evidence);" />
      <MemberSignature Language="F#" Value="member this.Load : System.Xml.XPath.IXPathNavigable * System.Xml.XmlResolver * System.Security.Policy.Evidence -&gt; unit" Usage="xslTransform.Load (stylesheet, resolver, evidence)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheet" Type="System.Xml.XPath.IXPathNavigable" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" Index="1" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="evidence" Type="System.Security.Policy.Evidence" Index="2" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="stylesheet"><span data-ttu-id="629e0-399">一个实现 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 接口的对象。</span><span class="sxs-lookup"><span data-stu-id="629e0-399">An object implementing the <see cref="T:System.Xml.XPath.IXPathNavigable" /> interface.</span></span> <span data-ttu-id="629e0-400">在 .NET Framework 中，这可以是 <see cref="T:System.Xml.XmlNode" />（一般为 <see cref="T:System.Xml.XmlDocument" />），或者是包含 XSLT 样式表的 <see cref="T:System.Xml.XPath.XPathDocument" />。</span><span class="sxs-lookup"><span data-stu-id="629e0-400">In the .NET Framework, this can be either an <see cref="T:System.Xml.XmlNode" /> (typically an <see cref="T:System.Xml.XmlDocument" />), or an <see cref="T:System.Xml.XPath.XPathDocument" /> containing the XSLT style sheet.</span></span></param>
        <param name="resolver"><span data-ttu-id="629e0-401"><see cref="T:System.Xml.XmlResolver" />，用于加载 <c>xsl:import</c> 和 <c>xsl:include</c> 元素中引用的任何样式表。</span><span class="sxs-lookup"><span data-stu-id="629e0-401">The <see cref="T:System.Xml.XmlResolver" /> used to load any style sheets referenced in <c>xsl:import</c> and <c>xsl:include</c> elements.</span></span> <span data-ttu-id="629e0-402">如果这为 <see langword="null" />，则不解析外部资源。</span><span class="sxs-lookup"><span data-stu-id="629e0-402">If this is <see langword="null" />, external resources are not resolved.</span></span>  
  
<span data-ttu-id="629e0-403">完成 <see cref="T:System.Xml.XmlResolver" /> 方法后不缓存 <see cref="Overload:System.Xml.Xsl.XslTransform.Load" />。</span><span class="sxs-lookup"><span data-stu-id="629e0-403">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="Overload:System.Xml.Xsl.XslTransform.Load" /> method completes.</span></span></param>
        <param name="evidence"><span data-ttu-id="629e0-404">在为 XSLT 样式表中的脚本块生成的程序集上设置的 <see cref="T:System.Security.Policy.Evidence" />。</span><span class="sxs-lookup"><span data-stu-id="629e0-404">The <see cref="T:System.Security.Policy.Evidence" /> set on the assembly generated for the script block in the XSLT style sheet.</span></span>  
  
<span data-ttu-id="629e0-405">如果为 <see langword="null" />，则不处理脚本块、不支持 XSLT <c>document()</c> 函数，并且不允许使用特权扩展对象。</span><span class="sxs-lookup"><span data-stu-id="629e0-405">If this is <see langword="null" />, script blocks are not processed, the XSLT <c>document()</c> function is not supported, and privileged extension objects are disallowed.</span></span>  
  
<span data-ttu-id="629e0-406">调用方必须有 <see langword="ControlEvidence" /> 权限，才能为脚本程序集提供证据。</span><span class="sxs-lookup"><span data-stu-id="629e0-406">The caller must have <see langword="ControlEvidence" /> permission in order to supply evidence for the script assembly.</span></span> <span data-ttu-id="629e0-407">不完全受信任的调用方可以将此参数设置为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="629e0-407">Semi-trusted callers can set this parameter to <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="629e0-408">加载 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 中包含的 XSLT 样式表。</span><span class="sxs-lookup"><span data-stu-id="629e0-408">Loads the XSLT style sheet contained in the <see cref="T:System.Xml.XPath.IXPathNavigable" />.</span></span> <span data-ttu-id="629e0-409">此方法允许您通过指定证据来限制样式表的权限。</span><span class="sxs-lookup"><span data-stu-id="629e0-409">This method allows you to limit the permissions of the style sheet by specifying evidence.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="629e0-410"><xref:System.Xml.Xsl.XslTransform>类在 .NET Framework 版本2.0 中已过时。</span><span class="sxs-lookup"><span data-stu-id="629e0-410">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="629e0-411"><xref:System.Xml.Xsl.XslCompiledTransform>类是新的 XSLT 处理器。</span><span class="sxs-lookup"><span data-stu-id="629e0-411">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="629e0-412">有关详细信息，请参阅 [使用 XslCompiledTransform 类](/dotnet/standard/data/xml/using-the-xslcompiledtransform-class) 和 [从 XslTransform 类迁移](/dotnet/standard/data/xml/migrating-from-the-xsltransform-class)。</span><span class="sxs-lookup"><span data-stu-id="629e0-412">For more information, see [Using the XslCompiledTransform Class](/dotnet/standard/data/xml/using-the-xslcompiledtransform-class) and [Migrating From the XslTransform Class](/dotnet/standard/data/xml/migrating-from-the-xsltransform-class).</span></span>  
  
 <span data-ttu-id="629e0-413"><xref:System.Xml.Xsl.XslTransform> 支持 XSLT 1.0 语法。</span><span class="sxs-lookup"><span data-stu-id="629e0-413"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="629e0-414">XSLT 样式表必须包括命名空间声明 `xmlns:xsl= http://www.w3.org/1999/XSL/Transform` 。</span><span class="sxs-lookup"><span data-stu-id="629e0-414">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  

  
 <span data-ttu-id="629e0-415">提供证据的方法有多种。</span><span class="sxs-lookup"><span data-stu-id="629e0-415">There are different ways to provide evidence.</span></span> <span data-ttu-id="629e0-416">下表描述了为常见用户方案提供的证据类型。</span><span class="sxs-lookup"><span data-stu-id="629e0-416">The following table describes what type of evidence to provide for common user scenarios.</span></span>  
  
|<span data-ttu-id="629e0-417">方案</span><span class="sxs-lookup"><span data-stu-id="629e0-417">Scenario</span></span>|<span data-ttu-id="629e0-418">要提供的证据类型</span><span class="sxs-lookup"><span data-stu-id="629e0-418">Type of evidence to provide</span></span>|  
|--------------|---------------------------------|  
|<span data-ttu-id="629e0-419">XSLT 样式表是自包含的，或来自你信任的代码库。</span><span class="sxs-lookup"><span data-stu-id="629e0-419">The XSLT style sheet is self-contained or comes from a code base that you trust.</span></span>|<span data-ttu-id="629e0-420">使用程序集中的证据。</span><span class="sxs-lookup"><span data-stu-id="629e0-420">Use the evidence from your assembly.</span></span><br /><br /> <pre><code class="lang-csharp">XsltTransform xslt = new XslTransform(); &#13;&#10;xslt.Load(style sheet, resolver, this.GetType().Assembly.Evidence);</code></pre>|  
|<span data-ttu-id="629e0-421">XSLT 样式表来自外部源。</span><span class="sxs-lookup"><span data-stu-id="629e0-421">The XSLT style sheet comes from an outside source.</span></span> <span data-ttu-id="629e0-422">源的来源已知，并且存在可验证的 URL。</span><span class="sxs-lookup"><span data-stu-id="629e0-422">The origin of the source is known, and there is a verifiable URL.</span></span>|<span data-ttu-id="629e0-423">使用 URL 创建证据。</span><span class="sxs-lookup"><span data-stu-id="629e0-423">Create evidence using the URL.</span></span><br /><br /> <pre><code class="lang-csharp">XsltTransform xslt = new XslTransform(); &#13;&#10;Evidence evidence = XmlSecureResolver.CreateEvidenceForUrl(style sheetURL); &#13;&#10;xslt.Load(style sheet,resolver,evidence);</code></pre>|  
|<span data-ttu-id="629e0-424">XSLT 样式表来自外部源。</span><span class="sxs-lookup"><span data-stu-id="629e0-424">The XSLT style sheet comes from an outside source.</span></span> <span data-ttu-id="629e0-425">源的来源未知。</span><span class="sxs-lookup"><span data-stu-id="629e0-425">The origin of the source is not known.</span></span>|<span data-ttu-id="629e0-426">将 evidence 设置为 `null`。</span><span class="sxs-lookup"><span data-stu-id="629e0-426">Set evidence to `null`.</span></span> <span data-ttu-id="629e0-427">脚本块将不进行处理，不支持 XSLT `document()` 函数，而且不允许特权扩展对象。</span><span class="sxs-lookup"><span data-stu-id="629e0-427">Script blocks are not processed, the XSLT `document()` function is not supported, and privileged extension objects are disallowed.</span></span><br /><br /> <span data-ttu-id="629e0-428">此外，还可以将参数设置 `resolver` 为 `null` 。</span><span class="sxs-lookup"><span data-stu-id="629e0-428">Additionally, you can also set the `resolver` parameter to `null`.</span></span> <span data-ttu-id="629e0-429">这可确保 `xsl:import` 和 `xsl:include` 元素不被处理。</span><span class="sxs-lookup"><span data-stu-id="629e0-429">This ensures that `xsl:import` and `xsl:include` elements are not processed.</span></span>|  
|<span data-ttu-id="629e0-430">XSLT 样式表来自外部源。</span><span class="sxs-lookup"><span data-stu-id="629e0-430">The XSLT style sheet comes from an outside source.</span></span> <span data-ttu-id="629e0-431">源的来源未知，但您需要脚本支持。</span><span class="sxs-lookup"><span data-stu-id="629e0-431">The origin of the source is not known, but you require script support.</span></span>|<span data-ttu-id="629e0-432">从调用方请求证据。</span><span class="sxs-lookup"><span data-stu-id="629e0-432">Request evidence from the caller.</span></span> <span data-ttu-id="629e0-433">调用方的 API 必须提供一种方法来提供证据，通常为 <xref:System.Security.Policy.Evidence> 类。</span><span class="sxs-lookup"><span data-stu-id="629e0-433">The API of the caller must provide a way to provide evidence, typically the <xref:System.Security.Policy.Evidence> class.</span></span>|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Xsl.XsltCompileException"><span data-ttu-id="629e0-434">加载的资源不是有效的样式表。</span><span class="sxs-lookup"><span data-stu-id="629e0-434">The loaded resource is not a valid style sheet.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="629e0-435">引用的样式表需要的功能是所提供的证据不允许的。</span><span class="sxs-lookup"><span data-stu-id="629e0-435">The referenced style sheet requires functionality that is not allowed by the evidence provided.</span></span>  
  
<span data-ttu-id="629e0-436">调用方尝试提供证据但没有 <see langword="ControlEvidence" /> 权限。</span><span class="sxs-lookup"><span data-stu-id="629e0-436">The caller tries to supply evidence and does not have <see langword="ControlEvidence" /> permission.</span></span></exception>
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <altmember cref="T:System.Net.NetworkCredential" />
        <altmember cref="T:System.Net.CredentialCache" />
        <altmember cref="T:System.Security.SecurityZone" />
        <altmember cref="T:System.Xml.XmlSecureResolver" />
        <altmember cref="M:System.Xml.XmlSecureResolver.CreateEvidenceForUrl(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Xml.XPath.XPathNavigator stylesheet, System.Xml.XmlResolver resolver, System.Security.Policy.Evidence evidence);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Xml.XPath.XPathNavigator stylesheet, class System.Xml.XmlResolver resolver, class System.Security.Policy.Evidence evidence) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.XPathNavigator,System.Xml.XmlResolver,System.Security.Policy.Evidence)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (stylesheet As XPathNavigator, resolver As XmlResolver, evidence As Evidence)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Xml::XPath::XPathNavigator ^ stylesheet, System::Xml::XmlResolver ^ resolver, System::Security::Policy::Evidence ^ evidence);" />
      <MemberSignature Language="F#" Value="member this.Load : System.Xml.XPath.XPathNavigator * System.Xml.XmlResolver * System.Security.Policy.Evidence -&gt; unit" Usage="xslTransform.Load (stylesheet, resolver, evidence)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheet" Type="System.Xml.XPath.XPathNavigator" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" Index="1" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="evidence" Type="System.Security.Policy.Evidence" Index="2" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="stylesheet"><span data-ttu-id="629e0-437">包含要加载的样式表的 <see cref="T:System.Xml.XPath.XPathNavigator" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="629e0-437">An <see cref="T:System.Xml.XPath.XPathNavigator" /> object containing the style sheet to load.</span></span></param>
        <param name="resolver"><span data-ttu-id="629e0-438"><see cref="T:System.Xml.XmlResolver" />，用于加载 <c>xsl:import</c> 和 <c>xsl:include</c> 元素中引用的任何样式表。</span><span class="sxs-lookup"><span data-stu-id="629e0-438">The <see cref="T:System.Xml.XmlResolver" /> used to load any style sheets referenced in <c>xsl:import</c> and <c>xsl:include</c> elements.</span></span> <span data-ttu-id="629e0-439">如果这为 <see langword="null" />，则不解析外部资源。</span><span class="sxs-lookup"><span data-stu-id="629e0-439">If this is <see langword="null" />, external resources are not resolved.</span></span>  
  
<span data-ttu-id="629e0-440">完成 <see cref="T:System.Xml.XmlResolver" /> 方法后不缓存 <see cref="Overload:System.Xml.Xsl.XslTransform.Load" />。</span><span class="sxs-lookup"><span data-stu-id="629e0-440">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="Overload:System.Xml.Xsl.XslTransform.Load" /> method completes.</span></span></param>
        <param name="evidence"><span data-ttu-id="629e0-441">在为 XSLT 样式表中的脚本块生成的程序集上设置的 <see cref="T:System.Security.Policy.Evidence" />。</span><span class="sxs-lookup"><span data-stu-id="629e0-441">The <see cref="T:System.Security.Policy.Evidence" /> set on the assembly generated for the script block in the XSLT style sheet.</span></span>  
  
<span data-ttu-id="629e0-442">如果为 <see langword="null" />，则不处理脚本块、不支持 XSLT <c>document()</c> 函数，并且不允许使用特权扩展对象。</span><span class="sxs-lookup"><span data-stu-id="629e0-442">If this is <see langword="null" />, script blocks are not processed, the XSLT <c>document()</c> function is not supported, and privileged extension objects are disallowed.</span></span>  
  
<span data-ttu-id="629e0-443">调用方必须有 <see langword="ControlEvidence" /> 权限，才能为脚本程序集提供证据。</span><span class="sxs-lookup"><span data-stu-id="629e0-443">The caller must have <see langword="ControlEvidence" /> permission in order to supply evidence for the script assembly.</span></span> <span data-ttu-id="629e0-444">不完全受信任的调用方可以将此参数设置为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="629e0-444">Semi-trusted callers can set this parameter to <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="629e0-445">加载 <see cref="T:System.Xml.XPath.XPathNavigator" /> 中包含的 XSLT 样式表。</span><span class="sxs-lookup"><span data-stu-id="629e0-445">Loads the XSLT style sheet contained in the <see cref="T:System.Xml.XPath.XPathNavigator" />.</span></span> <span data-ttu-id="629e0-446">此方法允许您通过指定证据来限制样式表的权限。</span><span class="sxs-lookup"><span data-stu-id="629e0-446">This method allows you to limit the permissions of the style sheet by specifying evidence.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="629e0-447"><xref:System.Xml.Xsl.XslTransform>类在 .NET Framework 版本2.0 中已过时。</span><span class="sxs-lookup"><span data-stu-id="629e0-447">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="629e0-448"><xref:System.Xml.Xsl.XslCompiledTransform>类是新的 XSLT 处理器。</span><span class="sxs-lookup"><span data-stu-id="629e0-448">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="629e0-449">有关详细信息，请参阅 [使用 XslCompiledTransform 类](/dotnet/standard/data/xml/using-the-xslcompiledtransform-class) 和 [从 XslTransform 类迁移](/dotnet/standard/data/xml/migrating-from-the-xsltransform-class)。</span><span class="sxs-lookup"><span data-stu-id="629e0-449">For more information, see [Using the XslCompiledTransform Class](/dotnet/standard/data/xml/using-the-xslcompiledtransform-class) and [Migrating From the XslTransform Class](/dotnet/standard/data/xml/migrating-from-the-xsltransform-class).</span></span>  
  
 <span data-ttu-id="629e0-450"><xref:System.Xml.Xsl.XslTransform> 支持 XSLT 1.0 语法。</span><span class="sxs-lookup"><span data-stu-id="629e0-450"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="629e0-451">XSLT 样式表必须包括命名空间声明 `xmlns:xsl= http://www.w3.org/1999/XSL/Transform` 。</span><span class="sxs-lookup"><span data-stu-id="629e0-451">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="629e0-452">样式表是从的当前位置加载的 <xref:System.Xml.XPath.XPathNavigator> 。</span><span class="sxs-lookup"><span data-stu-id="629e0-452">The style sheet is loaded from the current position of the <xref:System.Xml.XPath.XPathNavigator>.</span></span> <span data-ttu-id="629e0-453">若要使用部分已加载的文档作为样式表，请导航到与样式表的开头相对应的节点。</span><span class="sxs-lookup"><span data-stu-id="629e0-453">To use a portion of the loaded document as the style sheet, navigate to the node corresponding to the beginning of the style sheet.</span></span> <span data-ttu-id="629e0-454"><xref:System.Xml.Xsl.XslTransform.Load%2A>方法返回后，位于 <xref:System.Xml.XPath.XPathNavigator> 节点)  (上的样式表的开头 `xsl:style sheet` 。</span><span class="sxs-lookup"><span data-stu-id="629e0-454">After the <xref:System.Xml.Xsl.XslTransform.Load%2A> method returns, the <xref:System.Xml.XPath.XPathNavigator> is positioned at the beginning of the style sheet (on the `xsl:style sheet` node).</span></span>  
  

  
 <span data-ttu-id="629e0-455">提供证据的方法有多种。</span><span class="sxs-lookup"><span data-stu-id="629e0-455">There are different ways to provide evidence.</span></span> <span data-ttu-id="629e0-456">下表描述了为常见用户方案提供的证据类型。</span><span class="sxs-lookup"><span data-stu-id="629e0-456">The following table describes what type of evidence to provide for common user scenarios.</span></span>  
  
|<span data-ttu-id="629e0-457">方案</span><span class="sxs-lookup"><span data-stu-id="629e0-457">Scenario</span></span>|<span data-ttu-id="629e0-458">要提供的证据类型</span><span class="sxs-lookup"><span data-stu-id="629e0-458">Type of evidence to provide</span></span>|  
|--------------|---------------------------------|  
|<span data-ttu-id="629e0-459">XSLT 样式表是自包含的，或来自你信任的代码库。</span><span class="sxs-lookup"><span data-stu-id="629e0-459">The XSLT style sheet is self-contained or comes from a code base that you trust.</span></span>|<span data-ttu-id="629e0-460">使用程序集中的证据。</span><span class="sxs-lookup"><span data-stu-id="629e0-460">Use the evidence from your assembly.</span></span><br /><br /> <pre><code class="lang-csharp">XsltTransform xslt = new XslTransform(); &#13;&#10;xslt.Load(xslNav, resolver, this.GetType().Assembly.Evidence);</code></pre>|  
|<span data-ttu-id="629e0-461">XSLT 样式表来自外部源。</span><span class="sxs-lookup"><span data-stu-id="629e0-461">The XSLT style sheet comes from an outside source.</span></span> <span data-ttu-id="629e0-462">源的来源已知，并且存在可验证的 URL。</span><span class="sxs-lookup"><span data-stu-id="629e0-462">The origin of the source is known, and there is a verifiable URL.</span></span>|<span data-ttu-id="629e0-463">使用 URL 创建证据。</span><span class="sxs-lookup"><span data-stu-id="629e0-463">Create evidence using the URL.</span></span><br /><br /> <pre><code class="lang-csharp">XsltTransform xslt = new XslTransform(); &#13;&#10;Evidence evidence = XmlSecureResolver.CreateEvidenceForUrl(style sheetURL); &#13;&#10;xslt.Load(xslNav,resolver,evidence);</code></pre>|  
|<span data-ttu-id="629e0-464">XSLT 样式表来自外部源。</span><span class="sxs-lookup"><span data-stu-id="629e0-464">The XSLT style sheet comes from an outside source.</span></span> <span data-ttu-id="629e0-465">源的来源未知。</span><span class="sxs-lookup"><span data-stu-id="629e0-465">The origin of the source is not known.</span></span>|<span data-ttu-id="629e0-466">将 evidence 设置为 `null`。</span><span class="sxs-lookup"><span data-stu-id="629e0-466">Set evidence to `null`.</span></span> <span data-ttu-id="629e0-467">脚本块将不进行处理，不支持 XSLT `document()` 函数，而且不允许特权扩展对象。</span><span class="sxs-lookup"><span data-stu-id="629e0-467">Script blocks are not processed, the XSLT `document()` function is not supported, and privileged extension objects are disallowed.</span></span><br /><br /> <span data-ttu-id="629e0-468">此外，还可以将参数设置 `resolver` 为 `null` 。</span><span class="sxs-lookup"><span data-stu-id="629e0-468">Additionally, you can also set the `resolver` parameter to `null`.</span></span> <span data-ttu-id="629e0-469">这可确保 `xsl:import` 和 `xsl:include` 元素不被处理。</span><span class="sxs-lookup"><span data-stu-id="629e0-469">This ensures that `xsl:import` and `xsl:include` elements are not processed.</span></span>|  
|<span data-ttu-id="629e0-470">XSLT 样式表来自外部源。</span><span class="sxs-lookup"><span data-stu-id="629e0-470">The XSLT style sheet comes from an outside source.</span></span> <span data-ttu-id="629e0-471">源的来源未知，但您需要脚本支持。</span><span class="sxs-lookup"><span data-stu-id="629e0-471">The origin of the source is not known, but you require script support.</span></span>|<span data-ttu-id="629e0-472">从调用方请求证据。</span><span class="sxs-lookup"><span data-stu-id="629e0-472">Request evidence from the caller.</span></span> <span data-ttu-id="629e0-473">调用方的 API 必须提供一种方法来提供证据，通常为 `Evidence` 类。</span><span class="sxs-lookup"><span data-stu-id="629e0-473">The API of the caller must provide a way to provide evidence, typically the `Evidence` class.</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="629e0-474">下面的示例使用外部源中的样式表执行 XSLT 转换。</span><span class="sxs-lookup"><span data-stu-id="629e0-474">The following example performs an XSLT transformation using a style sheet from an outside source.</span></span> <span data-ttu-id="629e0-475">由于样式表来自不受信任的源，因此 `resolver` 和 `evidence` 参数设置为 `null` 。</span><span class="sxs-lookup"><span data-stu-id="629e0-475">Because the style sheet comes from an untrusted source, the `resolver` and `evidence` parameters are set to `null`.</span></span>  
 
 [!code-csharp[XslTransform.Load5#1](~/samples/snippets/csharp/VS_Snippets_Data/XslTransform.Load5/CS/trans_noev.cs#1)]
 [!code-vb[XslTransform.Load5#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XslTransform.Load5/VB/trans_noev.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Xsl.XsltCompileException"><span data-ttu-id="629e0-476">当前节点不符合有效样式表的要求。</span><span class="sxs-lookup"><span data-stu-id="629e0-476">The current node does not conform to a valid style sheet.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="629e0-477">引用的样式表需要的功能是所提供的证据不允许的。</span><span class="sxs-lookup"><span data-stu-id="629e0-477">The referenced style sheet requires functionality that is not allowed by the evidence provided.</span></span>  
  
<span data-ttu-id="629e0-478">调用方尝试提供证据但没有 <see langword="ControlEvidence" /> 权限。</span><span class="sxs-lookup"><span data-stu-id="629e0-478">The caller tries to supply evidence and does not have <see langword="ControlEvidence" /> permission.</span></span></exception>
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <altmember cref="T:System.Net.NetworkCredential" />
        <altmember cref="T:System.Net.CredentialCache" />
        <altmember cref="T:System.Security.SecurityZone" />
        <altmember cref="T:System.Xml.XmlSecureResolver" />
        <altmember cref="M:System.Xml.XmlSecureResolver.CreateEvidenceForUrl(System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Transform">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="629e0-479">使用加载的 XSLT 样式表转换 XML 数据。</span><span class="sxs-lookup"><span data-stu-id="629e0-479">Transforms the XML data using the loaded XSLT style sheet.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="629e0-480"><xref:System.Xml.Xsl.XslTransform>类在 .NET Framework 版本2.0 中已过时。</span><span class="sxs-lookup"><span data-stu-id="629e0-480">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="629e0-481"><xref:System.Xml.Xsl.XslCompiledTransform>类是新的 XSLT 处理器。</span><span class="sxs-lookup"><span data-stu-id="629e0-481">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="629e0-482">有关详细信息，请参阅 [使用 XslCompiledTransform 类](/dotnet/standard/data/xml/using-the-xslcompiledtransform-class) 和 [从 XslTransform 类迁移](/dotnet/standard/data/xml/migrating-from-the-xsltransform-class)。</span><span class="sxs-lookup"><span data-stu-id="629e0-482">For more information, see [Using the XslCompiledTransform Class](/dotnet/standard/data/xml/using-the-xslcompiledtransform-class) and [Migrating From the XslTransform Class](/dotnet/standard/data/xml/migrating-from-the-xsltransform-class).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (string inputfile, string outputfile);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(string inputfile, string outputfile) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (inputfile As String, outputfile As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::String ^ inputfile, System::String ^ outputfile);" />
      <MemberSignature Language="F#" Value="member this.Transform : string * string -&gt; unit" Usage="xslTransform.Transform (inputfile, outputfile)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName Language="C#">[System.Obsolete("You should pass XmlResolver to Transform() method")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("You should pass XmlResolver to Transform() method")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputfile" Type="System.String" />
        <Parameter Name="outputfile" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="inputfile"><span data-ttu-id="629e0-483">要转换的源文档的 URL。</span><span class="sxs-lookup"><span data-stu-id="629e0-483">The URL of the source document to be transformed.</span></span></param>
        <param name="outputfile"><span data-ttu-id="629e0-484">输出文件的 URL。</span><span class="sxs-lookup"><span data-stu-id="629e0-484">The URL of the output file.</span></span></param>
        <summary><span data-ttu-id="629e0-485">转换输入文件中的 XML 数据并将结果输出到输出文件。</span><span class="sxs-lookup"><span data-stu-id="629e0-485">Transforms the XML data in the input file and outputs the result to an output file.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="629e0-486"><xref:System.Xml.Xsl.XslTransform>类在 .NET Framework 版本2.0 中已过时。</span><span class="sxs-lookup"><span data-stu-id="629e0-486">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="629e0-487"><xref:System.Xml.Xsl.XslCompiledTransform>类是新的 XSLT 处理器。</span><span class="sxs-lookup"><span data-stu-id="629e0-487">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="629e0-488">有关详细信息，请参阅 [使用 XslCompiledTransform 类](/dotnet/standard/data/xml/using-the-xslcompiledtransform-class) 和 [从 XslTransform 类迁移](/dotnet/standard/data/xml/migrating-from-the-xsltransform-class)。</span><span class="sxs-lookup"><span data-stu-id="629e0-488">For more information, see [Using the XslCompiledTransform Class](/dotnet/standard/data/xml/using-the-xslcompiledtransform-class) and [Migrating From the XslTransform Class](/dotnet/standard/data/xml/migrating-from-the-xsltransform-class).</span></span>  
  
 <span data-ttu-id="629e0-489"><xref:System.Xml.Xsl.XslTransform> 支持 XSLT 1.0 语法。</span><span class="sxs-lookup"><span data-stu-id="629e0-489"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="629e0-490">XSLT 样式表必须包括命名空间声明 `xmlns:xsl= http://www.w3.org/1999/XSL/Transform` 。</span><span class="sxs-lookup"><span data-stu-id="629e0-490">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="629e0-491">此方法在 .NET Framework 版本1.1 中已过时。</span><span class="sxs-lookup"><span data-stu-id="629e0-491">This method is obsolete in version 1.1 of the .NET Framework.</span></span> <span data-ttu-id="629e0-492">属性的设置 <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> 确定如何 `document()` 解析 XSLT 函数。</span><span class="sxs-lookup"><span data-stu-id="629e0-492">The setting of the <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> property determines how the XSLT `document()` function is resolved.</span></span> <span data-ttu-id="629e0-493">建议的做法是使用方法，该 <xref:System.Xml.Xsl.XslTransform.Transform%2A> 方法采用 <xref:System.Xml.XmlResolver> 对象作为其参数之一。</span><span class="sxs-lookup"><span data-stu-id="629e0-493">The recommended practice is to use the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method which takes an <xref:System.Xml.XmlResolver> object as one of its arguments.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="629e0-494">下面的示例 `books.xml` 使用样式表转换文件 `output.xsl` 并将结果输出到该 `books.html` 文件。</span><span class="sxs-lookup"><span data-stu-id="629e0-494">The following example transforms the `books.xml` file using the `output.xsl` style sheet and outputs the results to the `books.html` file.</span></span>  
  
 [!code-cpp[XslTransform.Transform3#1](~/samples/snippets/cpp/VS_Snippets_Data/xsltransform.transform3/CPP/trans_snip2.cpp#1)]
 [!code-csharp[XslTransform.Transform3#1](~/samples/snippets/csharp/VS_Snippets_Data/xsltransform.transform3/CS/trans_snip2.cs#1)]
 [!code-vb[XslTransform.Transform3#1](~/samples/snippets/visualbasic/VS_Snippets_Data/xsltransform.transform3/VB/trans_snip2.vb#1)]  
  
 <span data-ttu-id="629e0-495">该示例使用以下两个输入文件：</span><span class="sxs-lookup"><span data-stu-id="629e0-495">The sample uses the following two input files:</span></span>  
  
 `books.xml`  
  
 [!code-xml[Classic WebData XslTransform.Transform7 Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/XML/books.xml#2)]  
  
 `output.xsl`  
  
 [!code-xml[Classic WebData XslTransform.Transform7 Example#3](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/XML/output.xsl#3)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/standard/data/xml/implementation-of-discretionary-behaviors-in-the-xsltransform-class"><span data-ttu-id="629e0-496">XslTransform 类中任意行为的实现</span><span class="sxs-lookup"><span data-stu-id="629e0-496">Implementation of Discretionary Behaviors in the XslTransform Class</span></span></related>
        <related type="Article" href="/dotnet/standard/data/xml/outputs-from-an-xsltransform"><span data-ttu-id="629e0-497">XslTransform 的输出</span><span class="sxs-lookup"><span data-stu-id="629e0-497">Outputs from an XslTransform</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public System.Xml.XmlReader Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList? args);" FrameworkAlternate="net-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlReader Transform(class System.Xml.XPath.IXPathNavigable input, class System.Xml.Xsl.XsltArgumentList args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList)" />
      <MemberSignature Language="VB.NET" Value="Public Function Transform (input As IXPathNavigable, args As XsltArgumentList) As XmlReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlReader ^ Transform(System::Xml::XPath::IXPathNavigable ^ input, System::Xml::Xsl::XsltArgumentList ^ args);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.IXPathNavigable * System.Xml.Xsl.XsltArgumentList -&gt; System.Xml.XmlReader" Usage="xslTransform.Transform (input, args)" />
      <MemberSignature Language="C#" Value="public System.Xml.XmlReader Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList args);" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName Language="C#">[System.Obsolete("You should pass XmlResolver to Transform() method")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("You should pass XmlResolver to Transform() method")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.XmlReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="629e0-498">一个实现 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 接口的对象。</span><span class="sxs-lookup"><span data-stu-id="629e0-498">An object implementing the <see cref="T:System.Xml.XPath.IXPathNavigable" /> interface.</span></span> <span data-ttu-id="629e0-499">在 .NET Framework 中，这可以是 <see cref="T:System.Xml.XmlNode" />（一般为 <see cref="T:System.Xml.XmlDocument" />），或者是包含要转换的数据的 <see cref="T:System.Xml.XPath.XPathDocument" />。</span><span class="sxs-lookup"><span data-stu-id="629e0-499">In the .NET Framework, this can be either an <see cref="T:System.Xml.XmlNode" /> (typically an <see cref="T:System.Xml.XmlDocument" />), or an <see cref="T:System.Xml.XPath.XPathDocument" /> containing the data to be transformed.</span></span></param>
        <param name="args"><span data-ttu-id="629e0-500"><see cref="T:System.Xml.Xsl.XsltArgumentList" />，包含用作转换输入的命名空间限定的参数。</span><span class="sxs-lookup"><span data-stu-id="629e0-500">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span></span></param>
        <summary><span data-ttu-id="629e0-501">使用指定的 <paramref name="args" /> 转换 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 中的 XML 数据，并将结果输出到 <see cref="T:System.Xml.XmlReader" />。</span><span class="sxs-lookup"><span data-stu-id="629e0-501">Transforms the XML data in the <see cref="T:System.Xml.XPath.IXPathNavigable" /> using the specified <paramref name="args" /> and outputs the result to an <see cref="T:System.Xml.XmlReader" />.</span></span></summary>
        <returns><span data-ttu-id="629e0-502">包含转换结果的 <see cref="T:System.Xml.XmlReader" />。</span><span class="sxs-lookup"><span data-stu-id="629e0-502">An <see cref="T:System.Xml.XmlReader" /> containing the results of the transformation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="629e0-503"><xref:System.Xml.Xsl.XslTransform>类在 .NET Framework 版本2.0 中已过时。</span><span class="sxs-lookup"><span data-stu-id="629e0-503">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="629e0-504"><xref:System.Xml.Xsl.XslCompiledTransform>类是新的 XSLT 处理器。</span><span class="sxs-lookup"><span data-stu-id="629e0-504">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="629e0-505">有关详细信息，请参阅 [使用 XslCompiledTransform 类](/dotnet/standard/data/xml/using-the-xslcompiledtransform-class) 和 [从 XslTransform 类迁移](/dotnet/standard/data/xml/migrating-from-the-xsltransform-class)。</span><span class="sxs-lookup"><span data-stu-id="629e0-505">For more information, see [Using the XslCompiledTransform Class](/dotnet/standard/data/xml/using-the-xslcompiledtransform-class) and [Migrating From the XslTransform Class](/dotnet/standard/data/xml/migrating-from-the-xsltransform-class).</span></span>  
  
 <span data-ttu-id="629e0-506"><xref:System.Xml.Xsl.XslTransform> 支持 XSLT 1.0 语法。</span><span class="sxs-lookup"><span data-stu-id="629e0-506"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="629e0-507">XSLT 样式表必须包括命名空间声明 `xmlns:xsl= http://www.w3.org/1999/XSL/Transform` 。</span><span class="sxs-lookup"><span data-stu-id="629e0-507">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="629e0-508">此方法现已过时。</span><span class="sxs-lookup"><span data-stu-id="629e0-508">This method is now obsolete.</span></span> <span data-ttu-id="629e0-509">属性的设置 <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> 确定如何 `document()` 解析 XSLT 函数。</span><span class="sxs-lookup"><span data-stu-id="629e0-509">The setting of the <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> property determines how the XSLT `document()` function is resolved.</span></span> <span data-ttu-id="629e0-510">建议的做法是使用方法，该 <xref:System.Xml.Xsl.XslTransform.Transform%2A> 方法采用 <xref:System.Xml.XmlResolver> 对象作为其参数之一。</span><span class="sxs-lookup"><span data-stu-id="629e0-510">The recommended practice is to use the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method which takes an <xref:System.Xml.XmlResolver> object as one of its arguments.</span></span>  
  
 <span data-ttu-id="629e0-511">`args`与 `xsl:param` 样式表中定义的元素匹配。</span><span class="sxs-lookup"><span data-stu-id="629e0-511">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span> <span data-ttu-id="629e0-512">`xsl:output`当输出到 <xref:System.Xml.XmlReader> () 忽略元素时不支持该元素 `xsl:output` 。</span><span class="sxs-lookup"><span data-stu-id="629e0-512">The `xsl:output` element is not supported when outputting to an <xref:System.Xml.XmlReader> (the `xsl:output` element is ignored).</span></span> <span data-ttu-id="629e0-513">有关详细信息，请参阅 [XslTransform 的输出](/dotnet/standard/data/xml/outputs-from-an-xsltransform) 。</span><span class="sxs-lookup"><span data-stu-id="629e0-513">See [Outputs from an XslTransform](/dotnet/standard/data/xml/outputs-from-an-xsltransform) for more information.</span></span>  
  
 <span data-ttu-id="629e0-514">此方法使您可以执行源文档的异步转换。</span><span class="sxs-lookup"><span data-stu-id="629e0-514">This method enables you to do an asynchronous transformation of the source document.</span></span>  
  
 <span data-ttu-id="629e0-515">转换将应用于整个文档。</span><span class="sxs-lookup"><span data-stu-id="629e0-515">Transformations apply to the document as a whole.</span></span> <span data-ttu-id="629e0-516">换句话说，如果你传入文档根节点以外的一个节点，并不能防止转换进程访问已加载文档的所有节点。</span><span class="sxs-lookup"><span data-stu-id="629e0-516">In other words, if you pass in a node other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="629e0-517">若要转换节点片段，必须创建一个 <xref:System.Xml.XmlDocument> 仅包含节点片段的，并将 <xref:System.Xml.XmlDocument> 其传递给 <xref:System.Xml.Xsl.XslTransform.Transform%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="629e0-517">To transform a node fragment, you must create an <xref:System.Xml.XmlDocument> containing just the node fragment and pass that <xref:System.Xml.XmlDocument> to the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method.</span></span>  
  
 <span data-ttu-id="629e0-518">下面的示例对节点片段执行转换。</span><span class="sxs-lookup"><span data-stu-id="629e0-518">The following example performs a transformation on a node fragment.</span></span>  
  
```csharp  
XslTransform xslt = new XslTransform();       
xslt.Load("print_root.xsl");  
XmlDocument doc = new XmlDocument();  
doc.Load("library.xml");  
// Create a new document containing just the node fragment.  
XmlNode testNode = doc.DocumentElement.FirstChild;   
XmlDocument tmpDoc = new XmlDocument();   
tmpDoc.LoadXml(testNode.OuterXml);  
// Pass the document containing the node fragment   
// to the Transform method.  
Console.WriteLine("Passing " + tmpDoc.OuterXml + " to print_root.xsl");  
xslt.Transform(tmpDoc, null, Console.Out);  
```  
  
 <span data-ttu-id="629e0-519">该示例使用 `library.xml` 和 `print_root.xsl` 文件作为输入，并将以下结果输出到控制台。</span><span class="sxs-lookup"><span data-stu-id="629e0-519">The example uses the `library.xml` and `print_root.xsl` files as input and outputs the following to the console.</span></span>  
  
```  
Passing <book genre="novel" ISBN="1-861001-57-5"><title>Pride And Prejudice</title></book> to print_root.xsl   
Root node is book.  
```  
  
 `library.xml`  
  
```xml  
<library>  
  <book genre='novel' ISBN='1-861001-57-5'>  
     <title>Pride And Prejudice</title>  
  </book>  
  <book genre='novel' ISBN='1-81920-21-2'>  
     <title>Hook</title>  
  </book>  
</library>  
```  
  
 `print_root.xsl`  
  
```xml  
<stylesheet version="1.0" xmlns="http://www.w3.org/1999/XSL/Transform" >  
  <output method="text" />   
  <template match="/">  
     Root node is  <value-of select="local-name(//*[position() = 1])" />   
  </template>  
</stylesheet>  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/standard/data/xml/implementation-of-discretionary-behaviors-in-the-xsltransform-class"><span data-ttu-id="629e0-520">XslTransform 类中任意行为的实现</span><span class="sxs-lookup"><span data-stu-id="629e0-520">Implementation of Discretionary Behaviors in the XslTransform Class</span></span></related>
        <related type="Article" href="/dotnet/standard/data/xml/outputs-from-an-xsltransform"><span data-ttu-id="629e0-521">XslTransform 的输出</span><span class="sxs-lookup"><span data-stu-id="629e0-521">Outputs from an XslTransform</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public System.Xml.XmlReader Transform (System.Xml.XPath.XPathNavigator input, System.Xml.Xsl.XsltArgumentList? args);" FrameworkAlternate="net-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlReader Transform(class System.Xml.XPath.XPathNavigator input, class System.Xml.Xsl.XsltArgumentList args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList)" />
      <MemberSignature Language="VB.NET" Value="Public Function Transform (input As XPathNavigator, args As XsltArgumentList) As XmlReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlReader ^ Transform(System::Xml::XPath::XPathNavigator ^ input, System::Xml::Xsl::XsltArgumentList ^ args);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.XPathNavigator * System.Xml.Xsl.XsltArgumentList -&gt; System.Xml.XmlReader" Usage="xslTransform.Transform (input, args)" />
      <MemberSignature Language="C#" Value="public System.Xml.XmlReader Transform (System.Xml.XPath.XPathNavigator input, System.Xml.Xsl.XsltArgumentList args);" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName Language="C#">[System.Obsolete("You should pass XmlResolver to Transform() method")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("You should pass XmlResolver to Transform() method")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.XmlReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.XPathNavigator" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="629e0-522"><see cref="T:System.Xml.XPath.XPathNavigator" />，包含要转换的数据。</span><span class="sxs-lookup"><span data-stu-id="629e0-522">An <see cref="T:System.Xml.XPath.XPathNavigator" /> containing the data to be transformed.</span></span></param>
        <param name="args"><span data-ttu-id="629e0-523"><see cref="T:System.Xml.Xsl.XsltArgumentList" />，包含用作转换输入的命名空间限定的参数。</span><span class="sxs-lookup"><span data-stu-id="629e0-523">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span></span></param>
        <summary><span data-ttu-id="629e0-524">使用指定的 <paramref name="args" /> 转换 <see cref="T:System.Xml.XPath.XPathNavigator" /> 中的 XML 数据，并将结果输出到 <see cref="T:System.Xml.XmlReader" />。</span><span class="sxs-lookup"><span data-stu-id="629e0-524">Transforms the XML data in the <see cref="T:System.Xml.XPath.XPathNavigator" /> using the specified <paramref name="args" /> and outputs the result to an <see cref="T:System.Xml.XmlReader" />.</span></span></summary>
        <returns><span data-ttu-id="629e0-525">包含转换结果的 <see cref="T:System.Xml.XmlReader" />。</span><span class="sxs-lookup"><span data-stu-id="629e0-525">An <see cref="T:System.Xml.XmlReader" /> containing the results of the transformation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="629e0-526"><xref:System.Xml.Xsl.XslTransform>类在 .NET Framework 版本2.0 中已过时。</span><span class="sxs-lookup"><span data-stu-id="629e0-526">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="629e0-527"><xref:System.Xml.Xsl.XslCompiledTransform>类是新的 XSLT 处理器。</span><span class="sxs-lookup"><span data-stu-id="629e0-527">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="629e0-528">有关详细信息，请参阅 [使用 XslCompiledTransform 类](/dotnet/standard/data/xml/using-the-xslcompiledtransform-class) 和 [从 XslTransform 类迁移](/dotnet/standard/data/xml/migrating-from-the-xsltransform-class)。</span><span class="sxs-lookup"><span data-stu-id="629e0-528">For more information, see [Using the XslCompiledTransform Class](/dotnet/standard/data/xml/using-the-xslcompiledtransform-class) and [Migrating From the XslTransform Class](/dotnet/standard/data/xml/migrating-from-the-xsltransform-class).</span></span>  
  
 <span data-ttu-id="629e0-529"><xref:System.Xml.Xsl.XslTransform> 支持 XSLT 1.0 语法。</span><span class="sxs-lookup"><span data-stu-id="629e0-529"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="629e0-530">XSLT 样式表必须包括命名空间声明 `xmlns:xsl= http://www.w3.org/1999/XSL/Transform` 。</span><span class="sxs-lookup"><span data-stu-id="629e0-530">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="629e0-531">`args`与 `xsl:param` 样式表中定义的元素匹配。</span><span class="sxs-lookup"><span data-stu-id="629e0-531">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span> <span data-ttu-id="629e0-532">转换选项将应用于整个文档。</span><span class="sxs-lookup"><span data-stu-id="629e0-532">The transformation selections apply to the document as a whole.</span></span> <span data-ttu-id="629e0-533">换言之，如果当前节点是在文档根节点以外的节点树上设置的，则不会阻止转换进程访问已加载文档中的所有节点。</span><span class="sxs-lookup"><span data-stu-id="629e0-533">In other words, if the current node is set on a node tree other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="629e0-534">执行转换后，将 <xref:System.Xml.XPath.XPathNavigator> 保持其原始状态。</span><span class="sxs-lookup"><span data-stu-id="629e0-534">After the transformation has been performed, the <xref:System.Xml.XPath.XPathNavigator> remains in its original state.</span></span> <span data-ttu-id="629e0-535">这意味着，在调用方法后，节点（在转换进程之前是当前节点）将保留当前节点 <xref:System.Xml.Xsl.XslTransform.Transform%2A> 。</span><span class="sxs-lookup"><span data-stu-id="629e0-535">This means that the node, which is current before the transformation process, remains the current node after the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method has been called.</span></span>  
  
 <span data-ttu-id="629e0-536">由于 <xref:System.Xml.XmlReader> 提供只读输出，因此 `xsl:output` 忽略元素。</span><span class="sxs-lookup"><span data-stu-id="629e0-536">Because <xref:System.Xml.XmlReader> provides read-only output, the `xsl:output` element is ignored.</span></span> <span data-ttu-id="629e0-537">有关详细信息，请参阅 [XslTransform 的输出](/dotnet/standard/data/xml/outputs-from-an-xsltransform) 。</span><span class="sxs-lookup"><span data-stu-id="629e0-537">See [Outputs from an XslTransform](/dotnet/standard/data/xml/outputs-from-an-xsltransform) for more information.</span></span>  
  
 <span data-ttu-id="629e0-538">此方法使您可以执行源文档的异步转换。</span><span class="sxs-lookup"><span data-stu-id="629e0-538">This method enables you to do an asynchronous transformation of the source document.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="629e0-539">此方法已过时。</span><span class="sxs-lookup"><span data-stu-id="629e0-539">This method is obsolete.</span></span> <span data-ttu-id="629e0-540">属性的设置 <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> 确定 XSLT 文档 ( # A1 函数的解析方式。</span><span class="sxs-lookup"><span data-stu-id="629e0-540">The setting of the <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> property determines how the XSLT document() function is resolved.</span></span> <span data-ttu-id="629e0-541">建议的做法是使用方法，该 <xref:System.Xml.Xsl.XslTransform.Transform%2A> 方法采用 <xref:System.Xml.XmlResolver> 对象作为其参数之一。</span><span class="sxs-lookup"><span data-stu-id="629e0-541">The recommended practice is to use the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method which takes an <xref:System.Xml.XmlResolver> object as one of its arguments.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="629e0-542">处理 XSLT 转换时出错。</span><span class="sxs-lookup"><span data-stu-id="629e0-542">There was an error processing the XSLT transformation.</span></span>  
  
<span data-ttu-id="629e0-543">注意：这是对早期版本行为的更改。</span><span class="sxs-lookup"><span data-stu-id="629e0-543">Note: This is a change in behavior from earlier versions.</span></span> <span data-ttu-id="629e0-544">如果使用的是 Microsoft .NET Framework 1.1 版或更早版本，则会引发 <see cref="T:System.Xml.Xsl.XsltException" />。</span><span class="sxs-lookup"><span data-stu-id="629e0-544">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span></span></exception>
        <related type="Article" href="/dotnet/standard/data/xml/implementation-of-discretionary-behaviors-in-the-xsltransform-class"><span data-ttu-id="629e0-545">XslTransform 类中任意行为的实现</span><span class="sxs-lookup"><span data-stu-id="629e0-545">Implementation of Discretionary Behaviors in the XslTransform Class</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (string inputfile, string outputfile, System.Xml.XmlResolver? resolver);" FrameworkAlternate="net-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(string inputfile, string outputfile, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.String,System.String,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (inputfile As String, outputfile As String, resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::String ^ inputfile, System::String ^ outputfile, System::Xml::XmlResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="member this.Transform : string * string * System.Xml.XmlResolver -&gt; unit" Usage="xslTransform.Transform (inputfile, outputfile, resolver)" />
      <MemberSignature Language="C#" Value="public void Transform (string inputfile, string outputfile, System.Xml.XmlResolver resolver);" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputfile" Type="System.String" />
        <Parameter Name="outputfile" Type="System.String" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="inputfile"><span data-ttu-id="629e0-546">要转换的源文档的 URL。</span><span class="sxs-lookup"><span data-stu-id="629e0-546">The URL of the source document to be transformed.</span></span></param>
        <param name="outputfile"><span data-ttu-id="629e0-547">输出文件的 URL。</span><span class="sxs-lookup"><span data-stu-id="629e0-547">The URL of the output file.</span></span></param>
        <param name="resolver"><span data-ttu-id="629e0-548">用于解析 XSLT <c>document()</c> 函数的 <see cref="T:System.Xml.XmlResolver" />。</span><span class="sxs-lookup"><span data-stu-id="629e0-548">The <see cref="T:System.Xml.XmlResolver" /> used to resolve the XSLT <c>document()</c> function.</span></span> <span data-ttu-id="629e0-549">如果为 <see langword="null" />，则不解析 <c>document()</c> 函数。</span><span class="sxs-lookup"><span data-stu-id="629e0-549">If this is <see langword="null" />, the <c>document()</c> function is not resolved.</span></span>  
  
<span data-ttu-id="629e0-550">完成 <see cref="T:System.Xml.XmlResolver" /> 方法后不缓存 <see cref="Overload:System.Xml.Xsl.XslTransform.Transform" />。</span><span class="sxs-lookup"><span data-stu-id="629e0-550">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="Overload:System.Xml.Xsl.XslTransform.Transform" /> method completes.</span></span></param>
        <summary><span data-ttu-id="629e0-551">转换输入文件中的 XML 数据并将结果输出到输出文件。</span><span class="sxs-lookup"><span data-stu-id="629e0-551">Transforms the XML data in the input file and outputs the result to an output file.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="629e0-552"><xref:System.Xml.Xsl.XslTransform>类在 .NET Framework 版本2.0 中已过时。</span><span class="sxs-lookup"><span data-stu-id="629e0-552">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="629e0-553"><xref:System.Xml.Xsl.XslCompiledTransform>类是新的 XSLT 处理器。</span><span class="sxs-lookup"><span data-stu-id="629e0-553">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="629e0-554">有关详细信息，请参阅 [使用 XslCompiledTransform 类](/dotnet/standard/data/xml/using-the-xslcompiledtransform-class) 和 [从 XslTransform 类迁移](/dotnet/standard/data/xml/migrating-from-the-xsltransform-class)。</span><span class="sxs-lookup"><span data-stu-id="629e0-554">For more information, see [Using the XslCompiledTransform Class](/dotnet/standard/data/xml/using-the-xslcompiledtransform-class) and [Migrating From the XslTransform Class](/dotnet/standard/data/xml/migrating-from-the-xsltransform-class).</span></span>  
  
 <span data-ttu-id="629e0-555"><xref:System.Xml.Xsl.XslTransform> 支持 XSLT 1.0 语法。</span><span class="sxs-lookup"><span data-stu-id="629e0-555"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="629e0-556">XSLT 样式表必须包括命名空间声明 `xmlns:xsl= http://www.w3.org/1999/XSL/Transform` 。</span><span class="sxs-lookup"><span data-stu-id="629e0-556">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="629e0-557">下面的示例执行 XSLT 转换并输出到文件。</span><span class="sxs-lookup"><span data-stu-id="629e0-557">The following example performs an XSLT transformation and outputs to a file.</span></span> <span data-ttu-id="629e0-558"><xref:System.Xml.XmlUrlResolver>使用具有默认凭据的来解析外部资源。</span><span class="sxs-lookup"><span data-stu-id="629e0-558">An <xref:System.Xml.XmlUrlResolver> with default credentials is used resolve an external resources.</span></span> <span data-ttu-id="629e0-559">有关详细信息，请参阅<xref:System.Net.CredentialCache.DefaultCredentials%2A>。</span><span class="sxs-lookup"><span data-stu-id="629e0-559">See <xref:System.Net.CredentialCache.DefaultCredentials%2A> for details.</span></span>  
  
 [!code-cpp[XslTransform.Transform7#1](~/samples/snippets/cpp/VS_Snippets_Data/XslTRansform.Transform7/CPP/trans_snip4.cpp#1)]
 [!code-csharp[XslTransform.Transform7#1](~/samples/snippets/csharp/VS_Snippets_Data/XslTRansform.Transform7/CS/trans_snip4.cs#1)]
 [!code-vb[XslTransform.Transform7#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XslTRansform.Transform7/VB/trans_snip4.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.NetworkCredential" />
        <altmember cref="T:System.Net.CredentialCache" />
        <altmember cref="T:System.Xml.XmlSecureResolver" />
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList? args, System.IO.Stream output);" FrameworkAlternate="net-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.IXPathNavigable input, class System.Xml.Xsl.XsltArgumentList args, class System.IO.Stream output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As IXPathNavigable, args As XsltArgumentList, output As Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::IXPathNavigable ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::IO::Stream ^ output);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.IXPathNavigable * System.Xml.Xsl.XsltArgumentList * System.IO.Stream -&gt; unit" Usage="xslTransform.Transform (input, args, output)" />
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList args, System.IO.Stream output);" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName Language="C#">[System.Obsolete("You should pass XmlResolver to Transform() method")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("You should pass XmlResolver to Transform() method")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="629e0-560">一个实现 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 接口的对象。</span><span class="sxs-lookup"><span data-stu-id="629e0-560">An object implementing the <see cref="T:System.Xml.XPath.IXPathNavigable" /> interface.</span></span> <span data-ttu-id="629e0-561">在 .NET Framework 中，这可以是 <see cref="T:System.Xml.XmlNode" />（一般为 <see cref="T:System.Xml.XmlDocument" />），或者是包含要转换的数据的 <see cref="T:System.Xml.XPath.XPathDocument" />。</span><span class="sxs-lookup"><span data-stu-id="629e0-561">In the .NET Framework, this can be either an <see cref="T:System.Xml.XmlNode" /> (typically an <see cref="T:System.Xml.XmlDocument" />), or an <see cref="T:System.Xml.XPath.XPathDocument" /> containing the data to be transformed.</span></span></param>
        <param name="args"><span data-ttu-id="629e0-562"><see cref="T:System.Xml.Xsl.XsltArgumentList" />，包含用作转换输入的命名空间限定的参数。</span><span class="sxs-lookup"><span data-stu-id="629e0-562">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span></span></param>
        <param name="output"><span data-ttu-id="629e0-563">要输出到的流。</span><span class="sxs-lookup"><span data-stu-id="629e0-563">The stream to which you want to output.</span></span></param>
        <summary><span data-ttu-id="629e0-564">使用指定的 <paramref name="args" /> 转换 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 中的 XML 数据，并将结果输出到 <see cref="T:System.IO.Stream" />。</span><span class="sxs-lookup"><span data-stu-id="629e0-564">Transforms the XML data in the <see cref="T:System.Xml.XPath.IXPathNavigable" /> using the specified <paramref name="args" /> and outputs the result to a <see cref="T:System.IO.Stream" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="629e0-565"><xref:System.Xml.Xsl.XslTransform>类在 .NET Framework 版本2.0 中已过时。</span><span class="sxs-lookup"><span data-stu-id="629e0-565">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="629e0-566"><xref:System.Xml.Xsl.XslCompiledTransform>类是新的 XSLT 处理器。</span><span class="sxs-lookup"><span data-stu-id="629e0-566">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="629e0-567">有关详细信息，请参阅 [使用 XslCompiledTransform 类](/dotnet/standard/data/xml/using-the-xslcompiledtransform-class) 和 [从 XslTransform 类迁移](/dotnet/standard/data/xml/migrating-from-the-xsltransform-class)。</span><span class="sxs-lookup"><span data-stu-id="629e0-567">For more information, see [Using the XslCompiledTransform Class](/dotnet/standard/data/xml/using-the-xslcompiledtransform-class) and [Migrating From the XslTransform Class](/dotnet/standard/data/xml/migrating-from-the-xsltransform-class).</span></span>  
  
 <span data-ttu-id="629e0-568"><xref:System.Xml.Xsl.XslTransform> 支持 XSLT 1.0 语法。</span><span class="sxs-lookup"><span data-stu-id="629e0-568"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="629e0-569">XSLT 样式表必须包括命名空间声明 `xmlns:xsl= http://www.w3.org/1999/XSL/Transform` 。</span><span class="sxs-lookup"><span data-stu-id="629e0-569">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="629e0-570">此方法现已过时。</span><span class="sxs-lookup"><span data-stu-id="629e0-570">This method is now obsolete.</span></span> <span data-ttu-id="629e0-571">属性的设置 <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> 确定如何 `document()` 解析 XSLT 函数。</span><span class="sxs-lookup"><span data-stu-id="629e0-571">The setting of the <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> property determines how the XSLT `document()` function is resolved.</span></span> <span data-ttu-id="629e0-572">建议的做法是使用方法，该 <xref:System.Xml.Xsl.XslTransform.Transform%2A> 方法采用 <xref:System.Xml.XmlResolver> 对象作为其参数之一。</span><span class="sxs-lookup"><span data-stu-id="629e0-572">The recommended practice is to use the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method which takes an <xref:System.Xml.XmlResolver> object as one of its arguments.</span></span>  
  
 <span data-ttu-id="629e0-573">`args`与 `xsl:param` 样式表中定义的元素匹配。</span><span class="sxs-lookup"><span data-stu-id="629e0-573">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span>  
  
 <span data-ttu-id="629e0-574">转换将应用于整个文档。</span><span class="sxs-lookup"><span data-stu-id="629e0-574">Transformations apply to the document as a whole.</span></span> <span data-ttu-id="629e0-575">换句话说，如果你传入文档根节点以外的一个节点，并不能防止转换进程访问已加载文档的所有节点。</span><span class="sxs-lookup"><span data-stu-id="629e0-575">In other words, if you pass in a node other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="629e0-576">若要转换节点片段，必须创建一个 <xref:System.Xml.XmlDocument> 仅包含节点片段的，并将 <xref:System.Xml.XmlDocument> 其传递给 <xref:System.Xml.Xsl.XslTransform.Transform%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="629e0-576">To transform a node fragment, you must create an <xref:System.Xml.XmlDocument> containing just the node fragment and pass that <xref:System.Xml.XmlDocument> to the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method.</span></span>  
  
 <span data-ttu-id="629e0-577">下面的示例对节点片段执行转换。</span><span class="sxs-lookup"><span data-stu-id="629e0-577">The following example performs a transformation on a node fragment.</span></span>  
  
```csharp  
XslTransform xslt = new XslTransform();       
xslt.Load("print_root.xsl");  
XmlDocument doc = new XmlDocument();  
doc.Load("library.xml");  
// Create a new document containing just the node fragment.  
XmlNode testNode = doc.DocumentElement.FirstChild;   
XmlDocument tmpDoc = new XmlDocument();   
tmpDoc.LoadXml(testNode.OuterXml);  
// Pass the document containing the node fragment   
// to the Transform method.  
Console.WriteLine("Passing " + tmpDoc.OuterXml + " to print_root.xsl");  
xslt.Transform(tmpDoc, null, Console.Out);  
```  
  
 <span data-ttu-id="629e0-578">该示例使用 `library.xml` 和 `print_root.xsl` 文件作为输入，并将以下结果输出到控制台。</span><span class="sxs-lookup"><span data-stu-id="629e0-578">The example uses the `library.xml` and `print_root.xsl` files as input and outputs the following to the console.</span></span>  
  
```  
Passing <book genre="novel" ISBN="1-861001-57-5"><title>Pride And Prejudice</title></book> to print_root.xsl   
Root node is book.  
```  
  
 `library.xml`  
  
```xml  
<library>  
  <book genre='novel' ISBN='1-861001-57-5'>  
     <title>Pride And Prejudice</title>  
  </book>  
  <book genre='novel' ISBN='1-81920-21-2'>  
     <title>Hook</title>  
  </book>  
</library>  
```  
  
 `print_root.xsl`  
  
```xml  
<stylesheet version="1.0" xmlns="http://www.w3.org/1999/XSL/Transform" >  
  <output method="text" />   
  <template match="/">  
     Root node is  <value-of select="local-name(//*[position() = 1])" />   
  </template>  
</stylesheet>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="629e0-579">处理 XSLT 转换时出错。</span><span class="sxs-lookup"><span data-stu-id="629e0-579">There was an error processing the XSLT transformation.</span></span>  
  
<span data-ttu-id="629e0-580">注意：这是对早期版本行为的更改。</span><span class="sxs-lookup"><span data-stu-id="629e0-580">Note: This is a change in behavior from earlier versions.</span></span> <span data-ttu-id="629e0-581">如果使用的是 Microsoft .NET Framework 1.1 版或更早版本，则会引发 <see cref="T:System.Xml.Xsl.XsltException" />。</span><span class="sxs-lookup"><span data-stu-id="629e0-581">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span></span></exception>
        <related type="Article" href="/dotnet/standard/data/xml/implementation-of-discretionary-behaviors-in-the-xsltransform-class"><span data-ttu-id="629e0-582">XslTransform 类中任意行为的实现</span><span class="sxs-lookup"><span data-stu-id="629e0-582">Implementation of Discretionary Behaviors in the XslTransform Class</span></span></related>
        <related type="Article" href="/dotnet/standard/data/xml/outputs-from-an-xsltransform"><span data-ttu-id="629e0-583">XslTransform 的输出</span><span class="sxs-lookup"><span data-stu-id="629e0-583">Outputs from an XslTransform</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList? args, System.IO.TextWriter output);" FrameworkAlternate="net-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.IXPathNavigable input, class System.Xml.Xsl.XsltArgumentList args, class System.IO.TextWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As IXPathNavigable, args As XsltArgumentList, output As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::IXPathNavigable ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::IO::TextWriter ^ output);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.IXPathNavigable * System.Xml.Xsl.XsltArgumentList * System.IO.TextWriter -&gt; unit" Usage="xslTransform.Transform (input, args, output)" />
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList args, System.IO.TextWriter output);" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName Language="C#">[System.Obsolete("You should pass XmlResolver to Transform() method")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("You should pass XmlResolver to Transform() method")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="629e0-584">一个实现 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 接口的对象。</span><span class="sxs-lookup"><span data-stu-id="629e0-584">An object implementing the <see cref="T:System.Xml.XPath.IXPathNavigable" /> interface.</span></span> <span data-ttu-id="629e0-585">在 .NET Framework 中，这可以是 <see cref="T:System.Xml.XmlNode" />（一般为 <see cref="T:System.Xml.XmlDocument" />），或者是包含要转换的数据的 <see cref="T:System.Xml.XPath.XPathDocument" />。</span><span class="sxs-lookup"><span data-stu-id="629e0-585">In the .NET Framework, this can be either an <see cref="T:System.Xml.XmlNode" /> (typically an <see cref="T:System.Xml.XmlDocument" />), or an <see cref="T:System.Xml.XPath.XPathDocument" /> containing the data to be transformed.</span></span></param>
        <param name="args"><span data-ttu-id="629e0-586"><see cref="T:System.Xml.Xsl.XsltArgumentList" />，包含用作转换输入的命名空间限定的参数。</span><span class="sxs-lookup"><span data-stu-id="629e0-586">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span></span></param>
        <param name="output"><span data-ttu-id="629e0-587">要输出到的 <see cref="T:System.IO.TextWriter" />。</span><span class="sxs-lookup"><span data-stu-id="629e0-587">The <see cref="T:System.IO.TextWriter" /> to which you want to output.</span></span></param>
        <summary><span data-ttu-id="629e0-588">使用指定的 <paramref name="args" /> 转换 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 中的 XML 数据，并将结果输出到 <see cref="T:System.IO.TextWriter" />。</span><span class="sxs-lookup"><span data-stu-id="629e0-588">Transforms the XML data in the <see cref="T:System.Xml.XPath.IXPathNavigable" /> using the specified <paramref name="args" /> and outputs the result to a <see cref="T:System.IO.TextWriter" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="629e0-589"><xref:System.Xml.Xsl.XslTransform>类在 .NET Framework 版本2.0 中已过时。</span><span class="sxs-lookup"><span data-stu-id="629e0-589">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="629e0-590"><xref:System.Xml.Xsl.XslCompiledTransform>类是新的 XSLT 处理器。</span><span class="sxs-lookup"><span data-stu-id="629e0-590">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="629e0-591">有关详细信息，请参阅 [使用 XslCompiledTransform 类](/dotnet/standard/data/xml/using-the-xslcompiledtransform-class) 和 [从 XslTransform 类迁移](/dotnet/standard/data/xml/migrating-from-the-xsltransform-class)。</span><span class="sxs-lookup"><span data-stu-id="629e0-591">For more information, see [Using the XslCompiledTransform Class](/dotnet/standard/data/xml/using-the-xslcompiledtransform-class) and [Migrating From the XslTransform Class](/dotnet/standard/data/xml/migrating-from-the-xsltransform-class).</span></span>  
  
 <span data-ttu-id="629e0-592"><xref:System.Xml.Xsl.XslTransform> 支持 XSLT 1.0 语法。</span><span class="sxs-lookup"><span data-stu-id="629e0-592"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="629e0-593">XSLT 样式表必须包括命名空间声明 `xmlns:xsl= http://www.w3.org/1999/XSL/Transform` 。</span><span class="sxs-lookup"><span data-stu-id="629e0-593">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="629e0-594">此方法现已过时。</span><span class="sxs-lookup"><span data-stu-id="629e0-594">This method is now obsolete.</span></span> <span data-ttu-id="629e0-595">属性的设置 <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> 确定如何 `document()` 解析 XSLT 函数。</span><span class="sxs-lookup"><span data-stu-id="629e0-595">The setting of the <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> property determines how the XSLT `document()` function is resolved.</span></span> <span data-ttu-id="629e0-596">建议的做法是使用方法，该 <xref:System.Xml.Xsl.XslTransform.Transform%2A> 方法采用 <xref:System.Xml.XmlResolver> 对象作为其参数之一。</span><span class="sxs-lookup"><span data-stu-id="629e0-596">The recommended practice is to use the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method which takes an <xref:System.Xml.XmlResolver> object as one of its arguments.</span></span>  
  
 <span data-ttu-id="629e0-597">`args`与 `xsl:param` 样式表中定义的元素匹配。</span><span class="sxs-lookup"><span data-stu-id="629e0-597">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span>  
  
 <span data-ttu-id="629e0-598">`xsl:output`当输出到时，不支持元素上的编码属性 <xref:System.IO.TextWriter> 。</span><span class="sxs-lookup"><span data-stu-id="629e0-598">The encoding attribute on an `xsl:output` element is not supported when outputting to a <xref:System.IO.TextWriter>.</span></span> <span data-ttu-id="629e0-599">有关支持的属性的详细信息，请参阅 [XslTransform 的输出](/dotnet/standard/data/xml/outputs-from-an-xsltransform) `xsl:output` 。</span><span class="sxs-lookup"><span data-stu-id="629e0-599">See [Outputs from an XslTransform](/dotnet/standard/data/xml/outputs-from-an-xsltransform) for specifics on which `xsl:output` attributes are supported.</span></span>  
  
 <span data-ttu-id="629e0-600">转换将应用于整个文档。</span><span class="sxs-lookup"><span data-stu-id="629e0-600">Transformations apply to the document as a whole.</span></span> <span data-ttu-id="629e0-601">换句话说，如果你传入文档根节点以外的一个节点，并不能防止转换进程访问已加载文档的所有节点。</span><span class="sxs-lookup"><span data-stu-id="629e0-601">In other words, if you pass in a node other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="629e0-602">若要转换节点片段，必须创建一个 <xref:System.Xml.XmlDocument> 仅包含节点片段的，并将其传递 <xref:System.Xml.XmlDocument> 给 <xref:System.Xml.Xsl.XslTransform.Transform%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="629e0-602">To transform a node fragment, you must create an <xref:System.Xml.XmlDocument> containing just the node fragment, and pass that <xref:System.Xml.XmlDocument> to the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method.</span></span>  
  
 <span data-ttu-id="629e0-603">下面的示例对节点片段执行转换。</span><span class="sxs-lookup"><span data-stu-id="629e0-603">The following example performs a transformation on a node fragment.</span></span>  
  
```csharp  
XslTransform xslt = new XslTransform();       
xslt.Load("print_root.xsl");  
XmlDocument doc = new XmlDocument();  
doc.Load("library.xml");  
// Create a new document containing just the node fragment.  
XmlNode testNode = doc.DocumentElement.FirstChild;   
XmlDocument tmpDoc = new XmlDocument();   
tmpDoc.LoadXml(testNode.OuterXml);  
// Pass the document containing the node fragment   
// to the Transform method.  
Console.WriteLine("Passing " + tmpDoc.OuterXml + " to print_root.xsl");  
xslt.Transform(tmpDoc, null, Console.Out);  
```  
  
 <span data-ttu-id="629e0-604">该示例使用 `library.xml` 和 `print_root.xsl` 文件作为输入，并将以下结果输出到控制台。</span><span class="sxs-lookup"><span data-stu-id="629e0-604">The example uses the `library.xml` and `print_root.xsl` files as input and outputs the following to the console.</span></span>  
  
```  
Passing <book genre="novel" ISBN="1-861001-57-5"><title>Pride And Prejudice</title></book> to print_root.xsl   
Root node is book.  
```  
  
 `library.xml`  
  
```xml  
<library>  
  <book genre='novel' ISBN='1-861001-57-5'>  
     <title>Pride And Prejudice</title>  
  </book>  
  <book genre='novel' ISBN='1-81920-21-2'>  
     <title>Hook</title>  
  </book>  
</library>  
```  
  
 `print_root.xsl`  
  
```xml  
<stylesheet version="1.0" xmlns="http://www.w3.org/1999/XSL/Transform" >  
  <output method="text" />   
  <template match="/">  
     Root node is  <value-of select="local-name(//*[position() = 1])" />   
  </template>  
</stylesheet>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="629e0-605">处理 XSLT 转换时出错。</span><span class="sxs-lookup"><span data-stu-id="629e0-605">There was an error processing the XSLT transformation.</span></span>  
  
<span data-ttu-id="629e0-606">注意：这是对早期版本行为的更改。</span><span class="sxs-lookup"><span data-stu-id="629e0-606">Note: This is a change in behavior from earlier versions.</span></span> <span data-ttu-id="629e0-607">如果使用的是 Microsoft .NET Framework 1.1 版或更早版本，则会引发 <see cref="T:System.Xml.Xsl.XsltException" />。</span><span class="sxs-lookup"><span data-stu-id="629e0-607">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span></span></exception>
        <related type="Article" href="/dotnet/standard/data/xml/implementation-of-discretionary-behaviors-in-the-xsltransform-class"><span data-ttu-id="629e0-608">XslTransform 类中任意行为的实现</span><span class="sxs-lookup"><span data-stu-id="629e0-608">Implementation of Discretionary Behaviors in the XslTransform Class</span></span></related>
        <related type="Article" href="/dotnet/standard/data/xml/outputs-from-an-xsltransform"><span data-ttu-id="629e0-609">XslTransform 的输出</span><span class="sxs-lookup"><span data-stu-id="629e0-609">Outputs from an XslTransform</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public System.Xml.XmlReader Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList? args, System.Xml.XmlResolver? resolver);" FrameworkAlternate="net-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlReader Transform(class System.Xml.XPath.IXPathNavigable input, class System.Xml.Xsl.XsltArgumentList args, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Function Transform (input As IXPathNavigable, args As XsltArgumentList, resolver As XmlResolver) As XmlReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlReader ^ Transform(System::Xml::XPath::IXPathNavigable ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::Xml::XmlResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.IXPathNavigable * System.Xml.Xsl.XsltArgumentList * System.Xml.XmlResolver -&gt; System.Xml.XmlReader" Usage="xslTransform.Transform (input, args, resolver)" />
      <MemberSignature Language="C#" Value="public System.Xml.XmlReader Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList args, System.Xml.XmlResolver resolver);" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="629e0-610">一个实现 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 接口的对象。</span><span class="sxs-lookup"><span data-stu-id="629e0-610">An object implementing the <see cref="T:System.Xml.XPath.IXPathNavigable" /> interface.</span></span> <span data-ttu-id="629e0-611">在 .NET Framework 中，这可以是 <see cref="T:System.Xml.XmlNode" />（一般为 <see cref="T:System.Xml.XmlDocument" />），或者是包含要转换的数据的 <see cref="T:System.Xml.XPath.XPathDocument" />。</span><span class="sxs-lookup"><span data-stu-id="629e0-611">In the .NET Framework, this can be either an <see cref="T:System.Xml.XmlNode" /> (typically an <see cref="T:System.Xml.XmlDocument" />), or an <see cref="T:System.Xml.XPath.XPathDocument" /> containing the data to be transformed.</span></span></param>
        <param name="args"><span data-ttu-id="629e0-612"><see cref="T:System.Xml.Xsl.XsltArgumentList" />，包含用作转换输入的命名空间限定的参数。</span><span class="sxs-lookup"><span data-stu-id="629e0-612">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span></span></param>
        <param name="resolver"><span data-ttu-id="629e0-613">用于解析 XSLT <c>document()</c> 函数的 <see cref="T:System.Xml.XmlResolver" />。</span><span class="sxs-lookup"><span data-stu-id="629e0-613">The <see cref="T:System.Xml.XmlResolver" /> used to resolve the XSLT <c>document()</c> function.</span></span> <span data-ttu-id="629e0-614">如果为 <see langword="null" />，则不解析 <c>document()</c> 函数。</span><span class="sxs-lookup"><span data-stu-id="629e0-614">If this is <see langword="null" />, the <c>document()</c> function is not resolved.</span></span>  
  
<span data-ttu-id="629e0-615">完成 <see cref="T:System.Xml.XmlResolver" /> 方法后不缓存 <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlResolver)" />。</span><span class="sxs-lookup"><span data-stu-id="629e0-615">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlResolver)" /> method completes.</span></span></param>
        <summary><span data-ttu-id="629e0-616">使用指定的 <paramref name="args" /> 转换 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 中的 XML 数据，并将结果输出到 <see cref="T:System.Xml.XmlReader" />。</span><span class="sxs-lookup"><span data-stu-id="629e0-616">Transforms the XML data in the <see cref="T:System.Xml.XPath.IXPathNavigable" /> using the specified <paramref name="args" /> and outputs the result to an <see cref="T:System.Xml.XmlReader" />.</span></span></summary>
        <returns><span data-ttu-id="629e0-617">包含转换结果的 <see cref="T:System.Xml.XmlReader" />。</span><span class="sxs-lookup"><span data-stu-id="629e0-617">An <see cref="T:System.Xml.XmlReader" /> containing the results of the transformation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="629e0-618"><xref:System.Xml.Xsl.XslTransform>类在 .NET Framework 版本2.0 中已过时。</span><span class="sxs-lookup"><span data-stu-id="629e0-618">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="629e0-619"><xref:System.Xml.Xsl.XslCompiledTransform>类是新的 XSLT 处理器。</span><span class="sxs-lookup"><span data-stu-id="629e0-619">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="629e0-620">有关详细信息，请参阅 [使用 XslCompiledTransform 类](/dotnet/standard/data/xml/using-the-xslcompiledtransform-class) 和 [从 XslTransform 类迁移](/dotnet/standard/data/xml/migrating-from-the-xsltransform-class)。</span><span class="sxs-lookup"><span data-stu-id="629e0-620">For more information, see [Using the XslCompiledTransform Class](/dotnet/standard/data/xml/using-the-xslcompiledtransform-class) and [Migrating From the XslTransform Class](/dotnet/standard/data/xml/migrating-from-the-xsltransform-class).</span></span>  
  
 <span data-ttu-id="629e0-621"><xref:System.Xml.Xsl.XslTransform> 支持 XSLT 1.0 语法。</span><span class="sxs-lookup"><span data-stu-id="629e0-621"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="629e0-622">XSLT 样式表必须包括命名空间声明 `xmlns:xsl= http://www.w3.org/1999/XSL/Transform` 。</span><span class="sxs-lookup"><span data-stu-id="629e0-622">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="629e0-623">`args`与 `xsl:param` 样式表中定义的元素匹配。</span><span class="sxs-lookup"><span data-stu-id="629e0-623">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span> <span data-ttu-id="629e0-624">`xsl:output`当输出到 <xref:System.Xml.XmlReader> () 忽略元素时不支持该元素 `xsl:output` 。</span><span class="sxs-lookup"><span data-stu-id="629e0-624">The `xsl:output` element is not supported when outputting to an <xref:System.Xml.XmlReader> (the `xsl:output` element is ignored).</span></span> <span data-ttu-id="629e0-625">有关详细信息，请参阅 [XslTransform 的输出](/dotnet/standard/data/xml/outputs-from-an-xsltransform) 。</span><span class="sxs-lookup"><span data-stu-id="629e0-625">See [Outputs from an XslTransform](/dotnet/standard/data/xml/outputs-from-an-xsltransform) for more information.</span></span>  
  
 <span data-ttu-id="629e0-626">此方法使您可以执行源文档的异步转换。</span><span class="sxs-lookup"><span data-stu-id="629e0-626">This method enables you to do an asynchronous transformation of the source document.</span></span>  
  
 <span data-ttu-id="629e0-627">转换将应用于整个文档。</span><span class="sxs-lookup"><span data-stu-id="629e0-627">Transformations apply to the document as a whole.</span></span> <span data-ttu-id="629e0-628">换句话说，如果你传入文档根节点以外的一个节点，并不能防止转换进程访问已加载文档的所有节点。</span><span class="sxs-lookup"><span data-stu-id="629e0-628">In other words, if you pass in a node other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="629e0-629">若要转换节点片段，必须创建一个 <xref:System.Xml.XmlDocument> 仅包含节点片段的，并将其传递 <xref:System.Xml.XmlDocument> 给 <xref:System.Xml.Xsl.XslTransform.Transform%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="629e0-629">To transform a node fragment, you must create an <xref:System.Xml.XmlDocument> containing just the node fragment, and pass that <xref:System.Xml.XmlDocument> to the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method.</span></span>  
  
 <span data-ttu-id="629e0-630">下面的示例对节点片段执行转换。</span><span class="sxs-lookup"><span data-stu-id="629e0-630">The following example performs a transformation on a node fragment.</span></span>  
  
```csharp  
XslTransform xslt = new XslTransform();       
xslt.Load("print_root.xsl");  
XmlDocument doc = new XmlDocument();  
doc.Load("library.xml");  
// Create a new document containing just the node fragment.  
XmlNode testNode = doc.DocumentElement.FirstChild;   
XmlDocument tmpDoc = new XmlDocument();   
tmpDoc.LoadXml(testNode.OuterXml);  
// Pass the document containing the node fragment   
// to the Transform method.  
Console.WriteLine("Passing " + tmpDoc.OuterXml + " to print_root.xsl");  
xslt.Transform(tmpDoc, null, Console.Out, null);  
```  
  
 <span data-ttu-id="629e0-631">该示例使用 `library.xml` 和 `print_root.xsl` 文件作为输入，并将以下结果输出到控制台。</span><span class="sxs-lookup"><span data-stu-id="629e0-631">The example uses the `library.xml` and `print_root.xsl` files as input and outputs the following to the console.</span></span>  
  
```  
Passing <book genre="novel" ISBN="1-861001-57-5"><title>Pride And Prejudice</title></book> to print_root.xsl   
Root node is book.  
```  
  
 `library.xml`  
  
```xml  
<library>  
  <book genre='novel' ISBN='1-861001-57-5'>  
     <title>Pride And Prejudice</title>  
  </book>  
  <book genre='novel' ISBN='1-81920-21-2'>  
     <title>Hook</title>  
  </book>  
</library>  
```  
  
 `print_root.xsl`  
  
```xml  
<stylesheet version="1.0" xmlns="http://www.w3.org/1999/XSL/Transform" >  
  <output method="text" />   
  <template match="/">  
     Root node is  <value-of select="local-name(//*[position() = 1])" />   
  </template>  
</stylesheet>  
```  
  
   
  
## Examples  
 <span data-ttu-id="629e0-632">下面的示例将转换 XML 文档，并将结果输出到 `XmlReader` 。</span><span class="sxs-lookup"><span data-stu-id="629e0-632">The following example transforms an XML document and outputs the results to an `XmlReader`.</span></span> <span data-ttu-id="629e0-633">使用 <xref:System.Xml.XmlUrlResolver> 必要凭据处理任何 XSLT `document()` 函数的。</span><span class="sxs-lookup"><span data-stu-id="629e0-633">An <xref:System.Xml.XmlUrlResolver> with the necessary credentials is used to process any XSLT `document()` functions.</span></span>  
  
 [!code-cpp[XslTransform.Transform4#1](~/samples/snippets/cpp/VS_Snippets_Data/XslTransform.Transform4/CPP/trans_snip3.cpp#1)]
 [!code-csharp[XslTransform.Transform4#1](~/samples/snippets/csharp/VS_Snippets_Data/XslTransform.Transform4/CS/trans_snip3.cs#1)]
 [!code-vb[XslTransform.Transform4#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XslTransform.Transform4/VB/trans_snip3.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlSecureResolver" />
        <related type="Article" href="/dotnet/standard/data/xml/implementation-of-discretionary-behaviors-in-the-xsltransform-class"><span data-ttu-id="629e0-634">XslTransform 类中任意行为的实现</span><span class="sxs-lookup"><span data-stu-id="629e0-634">Implementation of Discretionary Behaviors in the XslTransform Class</span></span></related>
        <related type="Article" href="/dotnet/standard/data/xml/outputs-from-an-xsltransform"><span data-ttu-id="629e0-635">XslTransform 的输出</span><span class="sxs-lookup"><span data-stu-id="629e0-635">Outputs from an XslTransform</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList? args, System.Xml.XmlWriter output);" FrameworkAlternate="net-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.IXPathNavigable input, class System.Xml.Xsl.XsltArgumentList args, class System.Xml.XmlWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As IXPathNavigable, args As XsltArgumentList, output As XmlWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::IXPathNavigable ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::Xml::XmlWriter ^ output);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.IXPathNavigable * System.Xml.Xsl.XsltArgumentList * System.Xml.XmlWriter -&gt; unit" Usage="xslTransform.Transform (input, args, output)" />
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList args, System.Xml.XmlWriter output);" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName Language="C#">[System.Obsolete("You should pass XmlResolver to Transform() method")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("You should pass XmlResolver to Transform() method")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="629e0-636">一个实现 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 接口的对象。</span><span class="sxs-lookup"><span data-stu-id="629e0-636">An object implementing the <see cref="T:System.Xml.XPath.IXPathNavigable" /> interface.</span></span> <span data-ttu-id="629e0-637">在 .NET Framework 中，这可以是 <see cref="T:System.Xml.XmlNode" />（一般为 <see cref="T:System.Xml.XmlDocument" />），或者是包含要转换的数据的 <see cref="T:System.Xml.XPath.XPathDocument" />。</span><span class="sxs-lookup"><span data-stu-id="629e0-637">In the .NET Framework, this can be either an <see cref="T:System.Xml.XmlNode" /> (typically an <see cref="T:System.Xml.XmlDocument" />), or an <see cref="T:System.Xml.XPath.XPathDocument" /> containing the data to be transformed.</span></span></param>
        <param name="args"><span data-ttu-id="629e0-638"><see cref="T:System.Xml.Xsl.XsltArgumentList" />，包含用作转换输入的命名空间限定的参数。</span><span class="sxs-lookup"><span data-stu-id="629e0-638">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span></span></param>
        <param name="output"><span data-ttu-id="629e0-639">要输出到的 <see cref="T:System.Xml.XmlWriter" />。</span><span class="sxs-lookup"><span data-stu-id="629e0-639">The <see cref="T:System.Xml.XmlWriter" /> to which you want to output.</span></span></param>
        <summary><span data-ttu-id="629e0-640">使用指定的 <paramref name="args" /> 转换 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 中的 XML 数据，并将结果输出到 <see cref="T:System.Xml.XmlWriter" />。</span><span class="sxs-lookup"><span data-stu-id="629e0-640">Transforms the XML data in the <see cref="T:System.Xml.XPath.IXPathNavigable" /> using the specified <paramref name="args" /> and outputs the result to an <see cref="T:System.Xml.XmlWriter" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="629e0-641"><xref:System.Xml.Xsl.XslTransform>类在 .NET Framework 版本2.0 中已过时。</span><span class="sxs-lookup"><span data-stu-id="629e0-641">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="629e0-642"><xref:System.Xml.Xsl.XslCompiledTransform>类是新的 XSLT 处理器。</span><span class="sxs-lookup"><span data-stu-id="629e0-642">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="629e0-643">有关详细信息，请参阅 [使用 XslCompiledTransform 类](/dotnet/standard/data/xml/using-the-xslcompiledtransform-class) 和 [从 XslTransform 类迁移](/dotnet/standard/data/xml/migrating-from-the-xsltransform-class)。</span><span class="sxs-lookup"><span data-stu-id="629e0-643">For more information, see [Using the XslCompiledTransform Class](/dotnet/standard/data/xml/using-the-xslcompiledtransform-class) and [Migrating From the XslTransform Class](/dotnet/standard/data/xml/migrating-from-the-xsltransform-class).</span></span>  
  
 <span data-ttu-id="629e0-644"><xref:System.Xml.Xsl.XslTransform> 支持 XSLT 1.0 语法。</span><span class="sxs-lookup"><span data-stu-id="629e0-644"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="629e0-645">XSLT 样式表必须包括命名空间声明 `xmlns:xsl= http://www.w3.org/1999/XSL/Transform` 。</span><span class="sxs-lookup"><span data-stu-id="629e0-645">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="629e0-646">此方法现已过时。</span><span class="sxs-lookup"><span data-stu-id="629e0-646">This method is now obsolete.</span></span> <span data-ttu-id="629e0-647">属性的设置 <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> 确定如何 `document()` 解析 XSLT 函数。</span><span class="sxs-lookup"><span data-stu-id="629e0-647">The setting of the <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> property determines how the XSLT `document()` function is resolved.</span></span> <span data-ttu-id="629e0-648">建议的做法是使用方法，该 <xref:System.Xml.Xsl.XslTransform.Transform%2A> 方法采用 <xref:System.Xml.XmlResolver> 对象作为其参数之一。</span><span class="sxs-lookup"><span data-stu-id="629e0-648">The recommended practice is to use the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method which takes an <xref:System.Xml.XmlResolver> object as one of its arguments.</span></span>  
  
 <span data-ttu-id="629e0-649">`args`与 `xsl:param` 样式表中定义的元素匹配。</span><span class="sxs-lookup"><span data-stu-id="629e0-649">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span> <span data-ttu-id="629e0-650">`xsl:output`当) 忽略输出到 (时，不支持该元素 <xref:System.Xml.XmlWriter> `xsl:output` 。</span><span class="sxs-lookup"><span data-stu-id="629e0-650">The `xsl:output` element is not supported when outputting to an <xref:System.Xml.XmlWriter> (`xsl:output` is ignored).</span></span> <span data-ttu-id="629e0-651">有关详细信息，请参阅 [XslTransform 的输出](/dotnet/standard/data/xml/outputs-from-an-xsltransform) 。</span><span class="sxs-lookup"><span data-stu-id="629e0-651">See [Outputs from an XslTransform](/dotnet/standard/data/xml/outputs-from-an-xsltransform) for more information.</span></span>  
  
 <span data-ttu-id="629e0-652">转换将应用于整个文档。</span><span class="sxs-lookup"><span data-stu-id="629e0-652">Transformations apply to the document as a whole.</span></span> <span data-ttu-id="629e0-653">换句话说，如果你传入文档根节点以外的一个节点，并不能防止转换进程访问已加载文档的所有节点。</span><span class="sxs-lookup"><span data-stu-id="629e0-653">In other words, if you pass in a node other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="629e0-654">若要转换节点片段，必须创建一个 <xref:System.Xml.XmlDocument> 仅包含节点片段的，并将 <xref:System.Xml.XmlDocument> 其传递给 <xref:System.Xml.Xsl.XslTransform.Transform%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="629e0-654">To transform a node fragment, you must create an <xref:System.Xml.XmlDocument> containing just the node fragment and pass that <xref:System.Xml.XmlDocument> to the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method.</span></span>  
  
 <span data-ttu-id="629e0-655">下面的示例对节点片段执行转换。</span><span class="sxs-lookup"><span data-stu-id="629e0-655">The following example performs a transformation on a node fragment.</span></span>  
  
```csharp  
XslTransform xslt = new XslTransform();       
xslt.Load("print_root.xsl");  
XmlDocument doc = new XmlDocument();  
doc.Load("library.xml");  
// Create a new document containing just the node fragment.  
XmlNode testNode = doc.DocumentElement.FirstChild;   
XmlDocument tmpDoc = new XmlDocument();   
tmpDoc.LoadXml(testNode.OuterXml);  
// Pass the document containing the node fragment   
// to the Transform method.  
Console.WriteLine("Passing " + tmpDoc.OuterXml + " to print_root.xsl");  
xslt.Transform(tmpDoc, null, Console.Out);  
```  
  
 <span data-ttu-id="629e0-656">该示例使用 `library.xml` 和 `print_root.xsl` 文件作为输入，并将以下结果输出到控制台。</span><span class="sxs-lookup"><span data-stu-id="629e0-656">The example uses the `library.xml` and `print_root.xsl` files as input and outputs the following to the console.</span></span>  
  
```  
Passing <book genre="novel" ISBN="1-861001-57-5"><title>Pride And Prejudice</title></book> to print_root.xsl   
Root node is book.  
```  
  
 `library.xml`  
  
```xml  
<library>  
  <book genre='novel' ISBN='1-861001-57-5'>  
     <title>Pride And Prejudice</title>  
  </book>  
  <book genre='novel' ISBN='1-81920-21-2'>  
     <title>Hook</title>  
  </book>  
</library>  
```  
  
 `print_root.xsl`  
  
```xml  
<stylesheet version="1.0" xmlns="http://www.w3.org/1999/XSL/Transform" >  
  <output method="text" />  
  <template match="/">  
  Root node is  <value-of select="local-name(//*[position() = 1])" />   
  </template>  
</stylesheet>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="629e0-657">处理 XSLT 转换时出错。</span><span class="sxs-lookup"><span data-stu-id="629e0-657">There was an error processing the XSLT transformation.</span></span>  
  
<span data-ttu-id="629e0-658">注意：这是对早期版本行为的更改。</span><span class="sxs-lookup"><span data-stu-id="629e0-658">Note: This is a change in behavior from earlier versions.</span></span> <span data-ttu-id="629e0-659">如果使用的是 Microsoft .NET Framework 1.1 版或更早版本，则会引发 <see cref="T:System.Xml.Xsl.XsltException" />。</span><span class="sxs-lookup"><span data-stu-id="629e0-659">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span></span></exception>
        <related type="Article" href="/dotnet/standard/data/xml/implementation-of-discretionary-behaviors-in-the-xsltransform-class"><span data-ttu-id="629e0-660">XslTransform 类中任意行为的实现</span><span class="sxs-lookup"><span data-stu-id="629e0-660">Implementation of Discretionary Behaviors in the XslTransform Class</span></span></related>
        <related type="Article" href="/dotnet/standard/data/xml/outputs-from-an-xsltransform"><span data-ttu-id="629e0-661">XslTransform 的输出</span><span class="sxs-lookup"><span data-stu-id="629e0-661">Outputs from an XslTransform</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.XPathNavigator input, System.Xml.Xsl.XsltArgumentList? args, System.IO.Stream output);" FrameworkAlternate="net-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.XPathNavigator input, class System.Xml.Xsl.XsltArgumentList args, class System.IO.Stream output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As XPathNavigator, args As XsltArgumentList, output As Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::XPathNavigator ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::IO::Stream ^ output);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.XPathNavigator * System.Xml.Xsl.XsltArgumentList * System.IO.Stream -&gt; unit" Usage="xslTransform.Transform (input, args, output)" />
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.XPathNavigator input, System.Xml.Xsl.XsltArgumentList args, System.IO.Stream output);" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName Language="C#">[System.Obsolete("You should pass XmlResolver to Transform() method")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("You should pass XmlResolver to Transform() method")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.XPathNavigator" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="629e0-662"><see cref="T:System.Xml.XPath.XPathNavigator" />，包含要转换的数据。</span><span class="sxs-lookup"><span data-stu-id="629e0-662">An <see cref="T:System.Xml.XPath.XPathNavigator" /> containing the data to be transformed.</span></span></param>
        <param name="args"><span data-ttu-id="629e0-663"><see cref="T:System.Xml.Xsl.XsltArgumentList" />，包含用作转换输入的命名空间限定的参数。</span><span class="sxs-lookup"><span data-stu-id="629e0-663">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span></span></param>
        <param name="output"><span data-ttu-id="629e0-664">要输出到的流。</span><span class="sxs-lookup"><span data-stu-id="629e0-664">The stream to which you want to output.</span></span></param>
        <summary><span data-ttu-id="629e0-665">使用指定的 <paramref name="args" /> 转换 <see cref="T:System.Xml.XPath.XPathNavigator" /> 中的 XML 数据，并将结果输出到 <see cref="T:System.IO.Stream" />。</span><span class="sxs-lookup"><span data-stu-id="629e0-665">Transforms the XML data in the <see cref="T:System.Xml.XPath.XPathNavigator" /> using the specified <paramref name="args" /> and outputs the result to a <see cref="T:System.IO.Stream" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="629e0-666"><xref:System.Xml.Xsl.XslTransform>类在 .NET Framework 版本2.0 中已过时。</span><span class="sxs-lookup"><span data-stu-id="629e0-666">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="629e0-667"><xref:System.Xml.Xsl.XslCompiledTransform>类是新的 XSLT 处理器。</span><span class="sxs-lookup"><span data-stu-id="629e0-667">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="629e0-668">有关详细信息，请参阅 [使用 XslCompiledTransform 类](/dotnet/standard/data/xml/using-the-xslcompiledtransform-class) 和 [从 XslTransform 类迁移](/dotnet/standard/data/xml/migrating-from-the-xsltransform-class)。</span><span class="sxs-lookup"><span data-stu-id="629e0-668">For more information, see [Using the XslCompiledTransform Class](/dotnet/standard/data/xml/using-the-xslcompiledtransform-class) and [Migrating From the XslTransform Class](/dotnet/standard/data/xml/migrating-from-the-xsltransform-class).</span></span>  
  
 <span data-ttu-id="629e0-669"><xref:System.Xml.Xsl.XslTransform> 支持 XSLT 1.0 语法。</span><span class="sxs-lookup"><span data-stu-id="629e0-669"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="629e0-670">XSLT 样式表必须包括命名空间声明 `xmlns:xsl= http://www.w3.org/1999/XSL/Transform` 。</span><span class="sxs-lookup"><span data-stu-id="629e0-670">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="629e0-671">`args`与 `xsl:param` 样式表中定义的元素匹配。</span><span class="sxs-lookup"><span data-stu-id="629e0-671">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span> <span data-ttu-id="629e0-672">转换选项将应用于整个文档。</span><span class="sxs-lookup"><span data-stu-id="629e0-672">The transformation selections apply to the document as a whole.</span></span> <span data-ttu-id="629e0-673">换言之，如果当前节点是在文档根节点以外的节点树上设置的，则不会阻止转换进程访问已加载文档中的所有节点。</span><span class="sxs-lookup"><span data-stu-id="629e0-673">In other words, if the current node is set on a node tree other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="629e0-674">执行转换后，将 <xref:System.Xml.XPath.XPathNavigator> 保持其原始状态。</span><span class="sxs-lookup"><span data-stu-id="629e0-674">After the transformation has been performed, the <xref:System.Xml.XPath.XPathNavigator> remains in its original state.</span></span> <span data-ttu-id="629e0-675">这意味着，在调用方法后，节点（在转换进程之前是当前节点）将保留当前节点 <xref:System.Xml.Xsl.XslTransform.Transform%2A> 。</span><span class="sxs-lookup"><span data-stu-id="629e0-675">This means that the node, which is current before the transformation process, remains the current node after the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method has been called.</span></span>  
  
 <span data-ttu-id="629e0-676">有关支持的属性的详细信息，请参阅 [XslTransform 的输出](/dotnet/standard/data/xml/outputs-from-an-xsltransform) `xsl:output` 。</span><span class="sxs-lookup"><span data-stu-id="629e0-676">See [Outputs from an XslTransform](/dotnet/standard/data/xml/outputs-from-an-xsltransform) for specifics on which `xsl:output` attributes are supported.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="629e0-677">此方法现已过时。</span><span class="sxs-lookup"><span data-stu-id="629e0-677">This method is now obsolete.</span></span> <span data-ttu-id="629e0-678">属性的设置 <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> 确定如何 `document()` 解析 XSLT 函数。</span><span class="sxs-lookup"><span data-stu-id="629e0-678">The setting of the <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> property determines how the XSLT `document()` function is resolved.</span></span> <span data-ttu-id="629e0-679">建议的做法是使用方法，该 <xref:System.Xml.Xsl.XslTransform.Transform%2A> 方法采用 <xref:System.Xml.XmlResolver> 对象作为其参数之一。</span><span class="sxs-lookup"><span data-stu-id="629e0-679">The recommended practice is to use the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method which takes an <xref:System.Xml.XmlResolver> object as one of its arguments.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="629e0-680">处理 XSLT 转换时出错。</span><span class="sxs-lookup"><span data-stu-id="629e0-680">There was an error processing the XSLT transformation.</span></span>  
  
<span data-ttu-id="629e0-681">注意：这是对早期版本行为的更改。</span><span class="sxs-lookup"><span data-stu-id="629e0-681">Note: This is a change in behavior from earlier versions.</span></span> <span data-ttu-id="629e0-682">如果使用的是 Microsoft .NET Framework 1.1 版或更早版本，则会引发 <see cref="T:System.Xml.Xsl.XsltException" />。</span><span class="sxs-lookup"><span data-stu-id="629e0-682">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span></span></exception>
        <altmember cref="T:System.Xml.Xsl.XsltArgumentList" />
        <related type="Article" href="/dotnet/standard/data/xml/implementation-of-discretionary-behaviors-in-the-xsltransform-class"><span data-ttu-id="629e0-683">XslTransform 类中任意行为的实现</span><span class="sxs-lookup"><span data-stu-id="629e0-683">Implementation of Discretionary Behaviors in the XslTransform Class</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.XPathNavigator input, System.Xml.Xsl.XsltArgumentList? args, System.IO.TextWriter output);" FrameworkAlternate="net-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.XPathNavigator input, class System.Xml.Xsl.XsltArgumentList args, class System.IO.TextWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As XPathNavigator, args As XsltArgumentList, output As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::XPathNavigator ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::IO::TextWriter ^ output);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.XPathNavigator * System.Xml.Xsl.XsltArgumentList * System.IO.TextWriter -&gt; unit" Usage="xslTransform.Transform (input, args, output)" />
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.XPathNavigator input, System.Xml.Xsl.XsltArgumentList args, System.IO.TextWriter output);" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName Language="C#">[System.Obsolete("You should pass XmlResolver to Transform() method")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("You should pass XmlResolver to Transform() method")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.XPathNavigator" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="629e0-684"><see cref="T:System.Xml.XPath.XPathNavigator" />，包含要转换的数据。</span><span class="sxs-lookup"><span data-stu-id="629e0-684">An <see cref="T:System.Xml.XPath.XPathNavigator" /> containing the data to be transformed.</span></span></param>
        <param name="args"><span data-ttu-id="629e0-685"><see cref="T:System.Xml.Xsl.XsltArgumentList" />，包含用作转换输入的命名空间限定的参数。</span><span class="sxs-lookup"><span data-stu-id="629e0-685">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span></span></param>
        <param name="output"><span data-ttu-id="629e0-686">要输出到的 <see cref="T:System.IO.TextWriter" />。</span><span class="sxs-lookup"><span data-stu-id="629e0-686">The <see cref="T:System.IO.TextWriter" /> to which you want to output.</span></span></param>
        <summary><span data-ttu-id="629e0-687">使用指定的 <paramref name="args" /> 转换 <see cref="T:System.Xml.XPath.XPathNavigator" /> 中的 XML 数据，并将结果输出到 <see cref="T:System.IO.TextWriter" />。</span><span class="sxs-lookup"><span data-stu-id="629e0-687">Transforms the XML data in the <see cref="T:System.Xml.XPath.XPathNavigator" /> using the specified <paramref name="args" /> and outputs the result to a <see cref="T:System.IO.TextWriter" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="629e0-688"><xref:System.Xml.Xsl.XslTransform>类在 .NET Framework 版本2.0 中已过时。</span><span class="sxs-lookup"><span data-stu-id="629e0-688">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="629e0-689"><xref:System.Xml.Xsl.XslCompiledTransform>类是新的 XSLT 处理器。</span><span class="sxs-lookup"><span data-stu-id="629e0-689">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="629e0-690">有关详细信息，请参阅 [使用 XslCompiledTransform 类](/dotnet/standard/data/xml/using-the-xslcompiledtransform-class) 和 [从 XslTransform 类迁移](/dotnet/standard/data/xml/migrating-from-the-xsltransform-class)。</span><span class="sxs-lookup"><span data-stu-id="629e0-690">For more information, see [Using the XslCompiledTransform Class](/dotnet/standard/data/xml/using-the-xslcompiledtransform-class) and [Migrating From the XslTransform Class](/dotnet/standard/data/xml/migrating-from-the-xsltransform-class).</span></span>  
  
 <span data-ttu-id="629e0-691"><xref:System.Xml.Xsl.XslTransform> 支持 XSLT 1.0 语法。</span><span class="sxs-lookup"><span data-stu-id="629e0-691"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="629e0-692">XSLT 样式表必须包括命名空间声明 `xmlns:xsl= http://www.w3.org/1999/XSL/Transform` 。</span><span class="sxs-lookup"><span data-stu-id="629e0-692">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="629e0-693">`args`与 `xsl:param` 样式表中定义的元素匹配。</span><span class="sxs-lookup"><span data-stu-id="629e0-693">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span> <span data-ttu-id="629e0-694">转换选项将应用于整个文档。</span><span class="sxs-lookup"><span data-stu-id="629e0-694">The transformation selections apply to the document as a whole.</span></span> <span data-ttu-id="629e0-695">换言之，如果当前节点是在文档根节点以外的节点树上设置的，则不会阻止转换进程访问已加载文档中的所有节点。</span><span class="sxs-lookup"><span data-stu-id="629e0-695">In other words, if the current node is set on a node tree other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="629e0-696">执行转换后，将 <xref:System.Xml.XPath.XPathNavigator> 保持其原始状态。</span><span class="sxs-lookup"><span data-stu-id="629e0-696">After the transformation is performed, the <xref:System.Xml.XPath.XPathNavigator> remains in its original state.</span></span> <span data-ttu-id="629e0-697">这意味着，在调用方法后，节点（在转换进程之前是当前节点）将保留当前节点 <xref:System.Xml.Xsl.XslTransform.Transform%2A> 。</span><span class="sxs-lookup"><span data-stu-id="629e0-697">This means that the node, which is current before the transformation process, remains the current node after the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method has been called.</span></span>  
  
 <span data-ttu-id="629e0-698">`xsl:output`当输出到时，不支持元素上的编码属性 <xref:System.IO.TextWriter> 。</span><span class="sxs-lookup"><span data-stu-id="629e0-698">The encoding attribute on an `xsl:output` element is not supported when outputting to a <xref:System.IO.TextWriter>.</span></span> <span data-ttu-id="629e0-699">有关支持的属性的详细信息，请参阅 [XslTransform 的输出](/dotnet/standard/data/xml/outputs-from-an-xsltransform) `xsl:output` 。</span><span class="sxs-lookup"><span data-stu-id="629e0-699">See [Outputs from an XslTransform](/dotnet/standard/data/xml/outputs-from-an-xsltransform) for specifics on which `xsl:output` attributes are supported.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="629e0-700">此方法现已过时。</span><span class="sxs-lookup"><span data-stu-id="629e0-700">This method is now obsolete.</span></span> <span data-ttu-id="629e0-701">属性的设置 <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> 确定如何 `document()` 解析 XSLT 函数。</span><span class="sxs-lookup"><span data-stu-id="629e0-701">The setting of the <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> property determines how the XSLT `document()` function is resolved.</span></span> <span data-ttu-id="629e0-702">建议的做法是使用方法，该 <xref:System.Xml.Xsl.XslTransform.Transform%2A> 方法采用 <xref:System.Xml.XmlResolver> 对象作为其参数之一。</span><span class="sxs-lookup"><span data-stu-id="629e0-702">The recommended practice is to use the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method which takes an <xref:System.Xml.XmlResolver> object as one of its arguments.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="629e0-703">处理 XSLT 转换时出错。</span><span class="sxs-lookup"><span data-stu-id="629e0-703">There was an error processing the XSLT transformation.</span></span>  
  
<span data-ttu-id="629e0-704">注意：这是对早期版本行为的更改。</span><span class="sxs-lookup"><span data-stu-id="629e0-704">Note: This is a change in behavior from earlier versions.</span></span> <span data-ttu-id="629e0-705">如果使用的是 Microsoft .NET Framework 1.1 版或更早版本，则会引发 <see cref="T:System.Xml.Xsl.XsltException" />。</span><span class="sxs-lookup"><span data-stu-id="629e0-705">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span></span></exception>
        <altmember cref="T:System.Xml.Xsl.XsltArgumentList" />
        <related type="Article" href="/dotnet/standard/data/xml/implementation-of-discretionary-behaviors-in-the-xsltransform-class"><span data-ttu-id="629e0-706">XslTransform 类中任意行为的实现</span><span class="sxs-lookup"><span data-stu-id="629e0-706">Implementation of Discretionary Behaviors in the XslTransform Class</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public System.Xml.XmlReader Transform (System.Xml.XPath.XPathNavigator input, System.Xml.Xsl.XsltArgumentList? args, System.Xml.XmlResolver? resolver);" FrameworkAlternate="net-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlReader Transform(class System.Xml.XPath.XPathNavigator input, class System.Xml.Xsl.XsltArgumentList args, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Function Transform (input As XPathNavigator, args As XsltArgumentList, resolver As XmlResolver) As XmlReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlReader ^ Transform(System::Xml::XPath::XPathNavigator ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::Xml::XmlResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.XPathNavigator * System.Xml.Xsl.XsltArgumentList * System.Xml.XmlResolver -&gt; System.Xml.XmlReader" Usage="xslTransform.Transform (input, args, resolver)" />
      <MemberSignature Language="C#" Value="public System.Xml.XmlReader Transform (System.Xml.XPath.XPathNavigator input, System.Xml.Xsl.XsltArgumentList args, System.Xml.XmlResolver resolver);" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.XPathNavigator" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="629e0-707"><see cref="T:System.Xml.XPath.XPathNavigator" />，包含要转换的数据。</span><span class="sxs-lookup"><span data-stu-id="629e0-707">An <see cref="T:System.Xml.XPath.XPathNavigator" /> containing the data to be transformed.</span></span></param>
        <param name="args"><span data-ttu-id="629e0-708"><see cref="T:System.Xml.Xsl.XsltArgumentList" />，包含用作转换输入的命名空间限定的参数。</span><span class="sxs-lookup"><span data-stu-id="629e0-708">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span></span></param>
        <param name="resolver"><span data-ttu-id="629e0-709">用于解析 XSLT <c>document()</c> 函数的 <see cref="T:System.Xml.XmlResolver" />。</span><span class="sxs-lookup"><span data-stu-id="629e0-709">The <see cref="T:System.Xml.XmlResolver" /> used to resolve the XSLT <c>document()</c> function.</span></span> <span data-ttu-id="629e0-710">如果为 <see langword="null" />，则不解析 <c>document()</c> 函数。</span><span class="sxs-lookup"><span data-stu-id="629e0-710">If this is <see langword="null" />, the <c>document()</c> function is not resolved.</span></span>  
  
<span data-ttu-id="629e0-711">完成 <see cref="T:System.Xml.XmlResolver" /> 方法后不缓存 <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlResolver)" />。</span><span class="sxs-lookup"><span data-stu-id="629e0-711">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlResolver)" /> method completes.</span></span></param>
        <summary><span data-ttu-id="629e0-712">使用指定的 <paramref name="args" /> 转换 <see cref="T:System.Xml.XPath.XPathNavigator" /> 中的 XML 数据，并将结果输出到 <see cref="T:System.Xml.XmlReader" />。</span><span class="sxs-lookup"><span data-stu-id="629e0-712">Transforms the XML data in the <see cref="T:System.Xml.XPath.XPathNavigator" /> using the specified <paramref name="args" /> and outputs the result to an <see cref="T:System.Xml.XmlReader" />.</span></span></summary>
        <returns><span data-ttu-id="629e0-713">包含转换结果的 <see cref="T:System.Xml.XmlReader" />。</span><span class="sxs-lookup"><span data-stu-id="629e0-713">An <see cref="T:System.Xml.XmlReader" /> containing the results of the transformation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="629e0-714"><xref:System.Xml.Xsl.XslTransform>类在 .NET Framework 版本2.0 中已过时。</span><span class="sxs-lookup"><span data-stu-id="629e0-714">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="629e0-715"><xref:System.Xml.Xsl.XslCompiledTransform>类是新的 XSLT 处理器。</span><span class="sxs-lookup"><span data-stu-id="629e0-715">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="629e0-716">有关详细信息，请参阅 [使用 XslCompiledTransform 类](/dotnet/standard/data/xml/using-the-xslcompiledtransform-class) 和 [从 XslTransform 类迁移](/dotnet/standard/data/xml/migrating-from-the-xsltransform-class)。</span><span class="sxs-lookup"><span data-stu-id="629e0-716">For more information, see [Using the XslCompiledTransform Class](/dotnet/standard/data/xml/using-the-xslcompiledtransform-class) and [Migrating From the XslTransform Class](/dotnet/standard/data/xml/migrating-from-the-xsltransform-class).</span></span>  
  
 <span data-ttu-id="629e0-717"><xref:System.Xml.Xsl.XslTransform> 支持 XSLT 1.0 语法。</span><span class="sxs-lookup"><span data-stu-id="629e0-717"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="629e0-718">XSLT 样式表必须包括命名空间声明 `xmlns:xsl= http://www.w3.org/1999/XSL/Transform` 。</span><span class="sxs-lookup"><span data-stu-id="629e0-718">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="629e0-719">`args`与 `xsl:param` 样式表中定义的元素匹配。</span><span class="sxs-lookup"><span data-stu-id="629e0-719">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span> <span data-ttu-id="629e0-720">转换选项将应用于整个文档。</span><span class="sxs-lookup"><span data-stu-id="629e0-720">The transformation selections apply to the document as a whole.</span></span> <span data-ttu-id="629e0-721">换言之，如果当前节点是在文档根节点以外的节点树上设置的，则不会阻止转换进程访问已加载文档中的所有节点。</span><span class="sxs-lookup"><span data-stu-id="629e0-721">In other words, if the current node is set on a node tree other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="629e0-722">执行转换后，将 <xref:System.Xml.XPath.XPathNavigator> 保持其原始状态。</span><span class="sxs-lookup"><span data-stu-id="629e0-722">After the transformation has been performed, the <xref:System.Xml.XPath.XPathNavigator> remains in its original state.</span></span> <span data-ttu-id="629e0-723">这意味着，在调用方法后，节点（在转换进程之前是当前节点）将保留当前节点 <xref:System.Xml.Xsl.XslTransform.Transform%2A> 。</span><span class="sxs-lookup"><span data-stu-id="629e0-723">This means that the node, which is current before the transformation process, remains the current node after the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method has been called.</span></span>  
  
 <span data-ttu-id="629e0-724">由于 <xref:System.Xml.XmlReader> 提供只读输出，因此 `xsl:output` 忽略元素。</span><span class="sxs-lookup"><span data-stu-id="629e0-724">Because <xref:System.Xml.XmlReader> provides read-only output, the `xsl:output` element is ignored.</span></span> <span data-ttu-id="629e0-725">有关详细信息，请参阅 [XslTransform 的输出](/dotnet/standard/data/xml/outputs-from-an-xsltransform) 。</span><span class="sxs-lookup"><span data-stu-id="629e0-725">See [Outputs from an XslTransform](/dotnet/standard/data/xml/outputs-from-an-xsltransform) for more information.</span></span>  
  
 <span data-ttu-id="629e0-726">此方法使您可以执行源文档的异步转换。</span><span class="sxs-lookup"><span data-stu-id="629e0-726">This method enables you to do an asynchronous transformation of the source document.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="629e0-727">处理 XSLT 转换时出错。</span><span class="sxs-lookup"><span data-stu-id="629e0-727">There was an error processing the XSLT transformation.</span></span>  
  
<span data-ttu-id="629e0-728">注意：这是对早期版本行为的更改。</span><span class="sxs-lookup"><span data-stu-id="629e0-728">Note: This is a change in behavior from earlier versions.</span></span> <span data-ttu-id="629e0-729">如果使用的是 Microsoft .NET Framework 1.1 版或更早版本，则会引发 <see cref="T:System.Xml.Xsl.XsltException" />。</span><span class="sxs-lookup"><span data-stu-id="629e0-729">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span></span></exception>
        <altmember cref="T:System.Xml.XmlSecureResolver" />
        <related type="Article" href="/dotnet/standard/data/xml/implementation-of-discretionary-behaviors-in-the-xsltransform-class"><span data-ttu-id="629e0-730">XslTransform 类中任意行为的实现</span><span class="sxs-lookup"><span data-stu-id="629e0-730">Implementation of Discretionary Behaviors in the XslTransform Class</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.XPathNavigator input, System.Xml.Xsl.XsltArgumentList? args, System.Xml.XmlWriter output);" FrameworkAlternate="net-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.XPathNavigator input, class System.Xml.Xsl.XsltArgumentList args, class System.Xml.XmlWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As XPathNavigator, args As XsltArgumentList, output As XmlWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::XPathNavigator ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::Xml::XmlWriter ^ output);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.XPathNavigator * System.Xml.Xsl.XsltArgumentList * System.Xml.XmlWriter -&gt; unit" Usage="xslTransform.Transform (input, args, output)" />
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.XPathNavigator input, System.Xml.Xsl.XsltArgumentList args, System.Xml.XmlWriter output);" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName Language="C#">[System.Obsolete("You should pass XmlResolver to Transform() method")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("You should pass XmlResolver to Transform() method")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.XPathNavigator" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="629e0-731"><see cref="T:System.Xml.XPath.XPathNavigator" />，包含要转换的数据。</span><span class="sxs-lookup"><span data-stu-id="629e0-731">An <see cref="T:System.Xml.XPath.XPathNavigator" /> containing the data to be transformed.</span></span></param>
        <param name="args"><span data-ttu-id="629e0-732"><see cref="T:System.Xml.Xsl.XsltArgumentList" />，包含用作转换输入的命名空间限定的参数。</span><span class="sxs-lookup"><span data-stu-id="629e0-732">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span></span></param>
        <param name="output"><span data-ttu-id="629e0-733">要输出到的 <see cref="T:System.Xml.XmlWriter" />。</span><span class="sxs-lookup"><span data-stu-id="629e0-733">The <see cref="T:System.Xml.XmlWriter" /> to which you want to output.</span></span></param>
        <summary><span data-ttu-id="629e0-734">使用指定的参数转换 <see cref="T:System.Xml.XPath.XPathNavigator" /> 中的 XML 数据，并将结果输出到 <see cref="T:System.Xml.XmlWriter" />。</span><span class="sxs-lookup"><span data-stu-id="629e0-734">Transforms the XML data in the <see cref="T:System.Xml.XPath.XPathNavigator" /> using the specified args and outputs the result to an <see cref="T:System.Xml.XmlWriter" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="629e0-735"><xref:System.Xml.Xsl.XslTransform>类在 .NET Framework 版本2.0 中已过时。</span><span class="sxs-lookup"><span data-stu-id="629e0-735">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="629e0-736"><xref:System.Xml.Xsl.XslCompiledTransform>类是新的 XSLT 处理器。</span><span class="sxs-lookup"><span data-stu-id="629e0-736">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="629e0-737">有关详细信息，请参阅 [使用 XslCompiledTransform 类](/dotnet/standard/data/xml/using-the-xslcompiledtransform-class) 和 [从 XslTransform 类迁移](/dotnet/standard/data/xml/migrating-from-the-xsltransform-class)。</span><span class="sxs-lookup"><span data-stu-id="629e0-737">For more information, see [Using the XslCompiledTransform Class](/dotnet/standard/data/xml/using-the-xslcompiledtransform-class) and [Migrating From the XslTransform Class](/dotnet/standard/data/xml/migrating-from-the-xsltransform-class).</span></span>  
  
 <span data-ttu-id="629e0-738"><xref:System.Xml.Xsl.XslTransform> 支持 XSLT 1.0 语法。</span><span class="sxs-lookup"><span data-stu-id="629e0-738"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="629e0-739">XSLT 样式表必须包括命名空间声明 `xmlns:xsl= http://www.w3.org/1999/XSL/Transform` 。</span><span class="sxs-lookup"><span data-stu-id="629e0-739">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="629e0-740">`args`与 `xsl:param` 样式表中定义的元素匹配。</span><span class="sxs-lookup"><span data-stu-id="629e0-740">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span> <span data-ttu-id="629e0-741">转换选项将应用于整个文档。</span><span class="sxs-lookup"><span data-stu-id="629e0-741">The transformation selections apply to the document as a whole.</span></span> <span data-ttu-id="629e0-742">换言之，如果当前节点是在文档根节点以外的节点树上设置的，则不会阻止转换进程访问已加载文档中的所有节点。</span><span class="sxs-lookup"><span data-stu-id="629e0-742">In other words, if the current node is set on a node tree other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="629e0-743">执行转换后，将 <xref:System.Xml.XPath.XPathNavigator> 保持其原始状态。</span><span class="sxs-lookup"><span data-stu-id="629e0-743">After the transformation is performed, the <xref:System.Xml.XPath.XPathNavigator> remains in its original state.</span></span> <span data-ttu-id="629e0-744">这意味着，在调用该方法后，在转换进程之前是当前节点的节点将保留为当前节点 <xref:System.Xml.Xsl.XslTransform.Transform%2A> 。</span><span class="sxs-lookup"><span data-stu-id="629e0-744">This means that the node, that is current before the transformation process, remains the current node after the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method has been called.</span></span>  
  
 <span data-ttu-id="629e0-745">`xsl:output`当) 忽略输出到 (时，不支持该元素 <xref:System.Xml.XmlWriter> `xsl:output` 。</span><span class="sxs-lookup"><span data-stu-id="629e0-745">The `xsl:output` element is not supported when outputting to an <xref:System.Xml.XmlWriter> (`xsl:output` is ignored).</span></span> <span data-ttu-id="629e0-746">有关详细信息，请参阅 [XslTransform 的输出](/dotnet/standard/data/xml/outputs-from-an-xsltransform) 。</span><span class="sxs-lookup"><span data-stu-id="629e0-746">See [Outputs from an XslTransform](/dotnet/standard/data/xml/outputs-from-an-xsltransform) for more information.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="629e0-747">此方法现已过时。</span><span class="sxs-lookup"><span data-stu-id="629e0-747">This method is now obsolete.</span></span> <span data-ttu-id="629e0-748">属性的设置 <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> 确定如何 `document()` 解析 XSLT 函数。</span><span class="sxs-lookup"><span data-stu-id="629e0-748">The setting of the <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> property determines how the XSLT `document()` function is resolved.</span></span> <span data-ttu-id="629e0-749">建议的做法是使用方法，该 <xref:System.Xml.Xsl.XslTransform.Transform%2A> 方法采用 <xref:System.Xml.XmlResolver> 对象作为其参数之一。</span><span class="sxs-lookup"><span data-stu-id="629e0-749">The recommended practice is to use the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method which takes an <xref:System.Xml.XmlResolver> object as one of its arguments.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="629e0-750">处理 XSLT 转换时出错。</span><span class="sxs-lookup"><span data-stu-id="629e0-750">There was an error processing the XSLT transformation.</span></span>  
  
<span data-ttu-id="629e0-751">注意：这是对早期版本行为的更改。</span><span class="sxs-lookup"><span data-stu-id="629e0-751">Note: This is a change in behavior from earlier versions.</span></span> <span data-ttu-id="629e0-752">如果使用的是 Microsoft .NET Framework 1.1 版或更早版本，则会引发 <see cref="T:System.Xml.Xsl.XsltException" />。</span><span class="sxs-lookup"><span data-stu-id="629e0-752">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span></span></exception>
        <altmember cref="T:System.Xml.Xsl.XsltArgumentList" />
        <related type="Article" href="/dotnet/standard/data/xml/implementation-of-discretionary-behaviors-in-the-xsltransform-class"><span data-ttu-id="629e0-753">XslTransform 类中任意行为的实现</span><span class="sxs-lookup"><span data-stu-id="629e0-753">Implementation of Discretionary Behaviors in the XslTransform Class</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList? args, System.IO.Stream output, System.Xml.XmlResolver? resolver);" FrameworkAlternate="net-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.IXPathNavigable input, class System.Xml.Xsl.XsltArgumentList args, class System.IO.Stream output, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.Stream,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As IXPathNavigable, args As XsltArgumentList, output As Stream, resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::IXPathNavigable ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::IO::Stream ^ output, System::Xml::XmlResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.IXPathNavigable * System.Xml.Xsl.XsltArgumentList * System.IO.Stream * System.Xml.XmlResolver -&gt; unit" Usage="xslTransform.Transform (input, args, output, resolver)" />
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList args, System.IO.Stream output, System.Xml.XmlResolver resolver);" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.IO.Stream" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="629e0-754">一个实现 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 接口的对象。</span><span class="sxs-lookup"><span data-stu-id="629e0-754">An object implementing the <see cref="T:System.Xml.XPath.IXPathNavigable" /> interface.</span></span> <span data-ttu-id="629e0-755">在 .NET Framework 中，这可以是 <see cref="T:System.Xml.XmlNode" />（一般为 <see cref="T:System.Xml.XmlDocument" />），或者是包含要转换的数据的 <see cref="T:System.Xml.XPath.XPathDocument" />。</span><span class="sxs-lookup"><span data-stu-id="629e0-755">In the .NET Framework, this can be either an <see cref="T:System.Xml.XmlNode" /> (typically an <see cref="T:System.Xml.XmlDocument" />), or an <see cref="T:System.Xml.XPath.XPathDocument" /> containing the data to be transformed.</span></span></param>
        <param name="args"><span data-ttu-id="629e0-756"><see cref="T:System.Xml.Xsl.XsltArgumentList" />，包含用作转换输入的命名空间限定的参数。</span><span class="sxs-lookup"><span data-stu-id="629e0-756">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span></span></param>
        <param name="output"><span data-ttu-id="629e0-757">要输出到的流。</span><span class="sxs-lookup"><span data-stu-id="629e0-757">The stream to which you want to output.</span></span></param>
        <param name="resolver"><span data-ttu-id="629e0-758">用于解析 XSLT <c>document()</c> 函数的 <see cref="T:System.Xml.XmlResolver" />。</span><span class="sxs-lookup"><span data-stu-id="629e0-758">The <see cref="T:System.Xml.XmlResolver" /> used to resolve the XSLT <c>document()</c> function.</span></span> <span data-ttu-id="629e0-759">如果为 <see langword="null" />，则不解析 <c>document()</c> 函数。</span><span class="sxs-lookup"><span data-stu-id="629e0-759">If this is <see langword="null" />, the <c>document()</c> function is not resolved.</span></span>  
  
<span data-ttu-id="629e0-760">完成 <see cref="T:System.Xml.XmlResolver" /> 方法后不缓存 <see cref="Overload:System.Xml.Xsl.XslTransform.Transform" />。</span><span class="sxs-lookup"><span data-stu-id="629e0-760">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="Overload:System.Xml.Xsl.XslTransform.Transform" /> method completes.</span></span></param>
        <summary><span data-ttu-id="629e0-761">使用指定的 <paramref name="args" /> 转换 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 中的 XML 数据，并将结果输出到 <see cref="T:System.IO.Stream" />。</span><span class="sxs-lookup"><span data-stu-id="629e0-761">Transforms the XML data in the <see cref="T:System.Xml.XPath.IXPathNavigable" /> using the specified <paramref name="args" /> and outputs the result to a <see cref="T:System.IO.Stream" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="629e0-762"><xref:System.Xml.Xsl.XslTransform>类在 .NET Framework 版本2.0 中已过时。</span><span class="sxs-lookup"><span data-stu-id="629e0-762">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="629e0-763"><xref:System.Xml.Xsl.XslCompiledTransform>类是新的 XSLT 处理器。</span><span class="sxs-lookup"><span data-stu-id="629e0-763">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="629e0-764">有关详细信息，请参阅 [使用 XslCompiledTransform 类](/dotnet/standard/data/xml/using-the-xslcompiledtransform-class) 和 [从 XslTransform 类迁移](/dotnet/standard/data/xml/migrating-from-the-xsltransform-class)。</span><span class="sxs-lookup"><span data-stu-id="629e0-764">For more information, see [Using the XslCompiledTransform Class](/dotnet/standard/data/xml/using-the-xslcompiledtransform-class) and [Migrating From the XslTransform Class](/dotnet/standard/data/xml/migrating-from-the-xsltransform-class).</span></span>  
  
 <span data-ttu-id="629e0-765"><xref:System.Xml.Xsl.XslTransform> 支持 XSLT 1.0 语法。</span><span class="sxs-lookup"><span data-stu-id="629e0-765"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="629e0-766">XSLT 样式表必须包括命名空间声明 `xmlns:xsl= http://www.w3.org/1999/XSL/Transform` 。</span><span class="sxs-lookup"><span data-stu-id="629e0-766">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="629e0-767">`args`与 `xsl:param` 样式表中定义的元素匹配。</span><span class="sxs-lookup"><span data-stu-id="629e0-767">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span>  
  
 <span data-ttu-id="629e0-768">转换将应用于整个文档。</span><span class="sxs-lookup"><span data-stu-id="629e0-768">Transformations apply to the document as a whole.</span></span> <span data-ttu-id="629e0-769">换句话说，如果你传入文档根节点以外的一个节点，并不能防止转换进程访问已加载文档的所有节点。</span><span class="sxs-lookup"><span data-stu-id="629e0-769">In other words, if you pass in a node other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="629e0-770">若要转换节点片段，必须创建一个 <xref:System.Xml.XmlDocument> 仅包含节点片段的，并将 <xref:System.Xml.XmlDocument> 其传递给 <xref:System.Xml.Xsl.XslTransform.Transform%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="629e0-770">To transform a node fragment, you must create an <xref:System.Xml.XmlDocument> containing just the node fragment and pass that <xref:System.Xml.XmlDocument> to the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method.</span></span>  
  
 <span data-ttu-id="629e0-771">下面的示例对节点片段执行转换。</span><span class="sxs-lookup"><span data-stu-id="629e0-771">The following example performs a transformation on a node fragment.</span></span>  
  
```csharp  
XslTransform xslt = new XslTransform();       
xslt.Load("print_root.xsl");  
XmlDocument doc = new XmlDocument();  
doc.Load("library.xml");  
// Create a new document containing just the node fragment.  
XmlNode testNode = doc.DocumentElement.FirstChild;   
XmlDocument tmpDoc = new XmlDocument();   
tmpDoc.LoadXml(testNode.OuterXml);  
// Pass the document containing the node fragment   
// to the Transform method.  
Console.WriteLine("Passing " + tmpDoc.OuterXml + " to print_root.xsl");  
xslt.Transform(tmpDoc, null, Console.Out, null);  
```  
  
 <span data-ttu-id="629e0-772">该示例使用 `library.xml` 和 `print_root.xsl` 文件作为输入，并将以下结果输出到控制台。</span><span class="sxs-lookup"><span data-stu-id="629e0-772">The example uses the `library.xml` and `print_root.xsl` files as input and outputs the following to the console.</span></span>  
  
```  
Passing <book genre="novel" ISBN="1-861001-57-5"><title>Pride And Prejudice</title></book> to print_root.xsl   
Root node is book.  
```  
  
 `library.xml`  
  
```xml  
<library>  
  <book genre='novel' ISBN='1-861001-57-5'>  
     <title>Pride And Prejudice</title>  
  </book>  
  <book genre='novel' ISBN='1-81920-21-2'>  
     <title>Hook</title>  
  </book>  
</library>  
```  
  
 `print_root.xsl`  
  
```xml  
<stylesheet version="1.0" xmlns="http://www.w3.org/1999/XSL/Transform" >  
  <output method="text" />   
  <template match="/">  
     Root node is  <value-of select="local-name(//*[position() = 1])" />   
  </template>  
</stylesheet>  
```  
  
   
  
## Examples  
 <span data-ttu-id="629e0-773">下面的示例在 ASP.NET 页中执行转换。</span><span class="sxs-lookup"><span data-stu-id="629e0-773">The following example performs a transformation within an ASP.NET page.</span></span>  
  
 [!code-aspx-csharp[XslTransform.Transform5#1](~/samples/snippets/csharp/VS_Snippets_Data/XslTransform.Transform5/CS/transcs.aspx#1)]
 [!code-aspx-vb[XslTransform.Transform5#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XslTransform.Transform5/VB/transvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="629e0-774">处理 XSLT 转换时出错。</span><span class="sxs-lookup"><span data-stu-id="629e0-774">There was an error processing the XSLT transformation.</span></span>  
  
<span data-ttu-id="629e0-775">注意：这是对早期版本行为的更改。</span><span class="sxs-lookup"><span data-stu-id="629e0-775">Note: This is a change in behavior from earlier versions.</span></span> <span data-ttu-id="629e0-776">如果使用的是 Microsoft .NET Framework 1.1 版或更早版本，则会引发 <see cref="T:System.Xml.Xsl.XsltException" />。</span><span class="sxs-lookup"><span data-stu-id="629e0-776">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span></span></exception>
        <altmember cref="T:System.Xml.XmlSecureResolver" />
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <related type="Article" href="/dotnet/standard/data/xml/implementation-of-discretionary-behaviors-in-the-xsltransform-class"><span data-ttu-id="629e0-777">XslTransform 类中任意行为的实现</span><span class="sxs-lookup"><span data-stu-id="629e0-777">Implementation of Discretionary Behaviors in the XslTransform Class</span></span></related>
        <related type="Article" href="/dotnet/standard/data/xml/outputs-from-an-xsltransform"><span data-ttu-id="629e0-778">XslTransform 的输出</span><span class="sxs-lookup"><span data-stu-id="629e0-778">Outputs from an XslTransform</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList? args, System.IO.TextWriter output, System.Xml.XmlResolver? resolver);" FrameworkAlternate="net-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.IXPathNavigable input, class System.Xml.Xsl.XsltArgumentList args, class System.IO.TextWriter output, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As IXPathNavigable, args As XsltArgumentList, output As TextWriter, resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::IXPathNavigable ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::IO::TextWriter ^ output, System::Xml::XmlResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.IXPathNavigable * System.Xml.Xsl.XsltArgumentList * System.IO.TextWriter * System.Xml.XmlResolver -&gt; unit" Usage="xslTransform.Transform (input, args, output, resolver)" />
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList args, System.IO.TextWriter output, System.Xml.XmlResolver resolver);" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.IO.TextWriter" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="629e0-779">一个实现 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 接口的对象。</span><span class="sxs-lookup"><span data-stu-id="629e0-779">An object implementing the <see cref="T:System.Xml.XPath.IXPathNavigable" /> interface.</span></span> <span data-ttu-id="629e0-780">在 .NET Framework 中，这可以是 <see cref="T:System.Xml.XmlNode" />（一般为 <see cref="T:System.Xml.XmlDocument" />），或者是包含要转换的数据的 <see cref="T:System.Xml.XPath.XPathDocument" />。</span><span class="sxs-lookup"><span data-stu-id="629e0-780">In the .NET Framework, this can be either an <see cref="T:System.Xml.XmlNode" /> (typically an <see cref="T:System.Xml.XmlDocument" />), or an <see cref="T:System.Xml.XPath.XPathDocument" /> containing the data to be transformed.</span></span></param>
        <param name="args"><span data-ttu-id="629e0-781"><see cref="T:System.Xml.Xsl.XsltArgumentList" />，包含用作转换输入的命名空间限定的参数。</span><span class="sxs-lookup"><span data-stu-id="629e0-781">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span></span></param>
        <param name="output"><span data-ttu-id="629e0-782">要输出到的 <see cref="T:System.IO.TextWriter" />。</span><span class="sxs-lookup"><span data-stu-id="629e0-782">The <see cref="T:System.IO.TextWriter" /> to which you want to output.</span></span></param>
        <param name="resolver"><span data-ttu-id="629e0-783">用于解析 XSLT <c>document()</c> 函数的 <see cref="T:System.Xml.XmlResolver" />。</span><span class="sxs-lookup"><span data-stu-id="629e0-783">The <see cref="T:System.Xml.XmlResolver" /> used to resolve the XSLT <c>document()</c> function.</span></span> <span data-ttu-id="629e0-784">如果为 <see langword="null" />，则不解析 <c>document()</c> 函数。</span><span class="sxs-lookup"><span data-stu-id="629e0-784">If this is <see langword="null" />, the <c>document()</c> function is not resolved.</span></span>  
  
<span data-ttu-id="629e0-785">完成 <see cref="T:System.Xml.XmlResolver" /> 方法后不缓存 <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter,System.Xml.XmlResolver)" />。</span><span class="sxs-lookup"><span data-stu-id="629e0-785">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter,System.Xml.XmlResolver)" /> method completes.</span></span></param>
        <summary><span data-ttu-id="629e0-786">使用指定的 <paramref name="args" /> 转换 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 中的 XML 数据，并将结果输出到 <see cref="T:System.IO.TextWriter" />。</span><span class="sxs-lookup"><span data-stu-id="629e0-786">Transforms the XML data in the <see cref="T:System.Xml.XPath.IXPathNavigable" /> using the specified <paramref name="args" /> and outputs the result to a <see cref="T:System.IO.TextWriter" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="629e0-787"><xref:System.Xml.Xsl.XslTransform>类在 .NET Framework 版本2.0 中已过时。</span><span class="sxs-lookup"><span data-stu-id="629e0-787">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="629e0-788"><xref:System.Xml.Xsl.XslCompiledTransform>类是新的 XSLT 处理器。</span><span class="sxs-lookup"><span data-stu-id="629e0-788">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="629e0-789">有关详细信息，请参阅 [使用 XslCompiledTransform 类](/dotnet/standard/data/xml/using-the-xslcompiledtransform-class) 和 [从 XslTransform 类迁移](/dotnet/standard/data/xml/migrating-from-the-xsltransform-class)。</span><span class="sxs-lookup"><span data-stu-id="629e0-789">For more information, see [Using the XslCompiledTransform Class](/dotnet/standard/data/xml/using-the-xslcompiledtransform-class) and [Migrating From the XslTransform Class](/dotnet/standard/data/xml/migrating-from-the-xsltransform-class).</span></span>  
  
 <span data-ttu-id="629e0-790"><xref:System.Xml.Xsl.XslTransform> 支持 XSLT 1.0 语法。</span><span class="sxs-lookup"><span data-stu-id="629e0-790"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="629e0-791">XSLT 样式表必须包括命名空间声明 `xmlns:xsl= http://www.w3.org/1999/XSL/Transform` 。</span><span class="sxs-lookup"><span data-stu-id="629e0-791">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="629e0-792">`args`与 `xsl:param` 样式表中定义的元素匹配。</span><span class="sxs-lookup"><span data-stu-id="629e0-792">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span>  
  
 <span data-ttu-id="629e0-793">`xsl:output`当输出到时，不支持元素上的编码属性 <xref:System.IO.TextWriter> 。</span><span class="sxs-lookup"><span data-stu-id="629e0-793">The encoding attribute on an `xsl:output` element is not supported when outputting to a <xref:System.IO.TextWriter>.</span></span> <span data-ttu-id="629e0-794">有关支持的属性的详细信息，请参阅 [XslTransform 的输出](/dotnet/standard/data/xml/outputs-from-an-xsltransform) `xsl:output` 。</span><span class="sxs-lookup"><span data-stu-id="629e0-794">See [Outputs from an XslTransform](/dotnet/standard/data/xml/outputs-from-an-xsltransform) for specifics on which `xsl:output` attributes are supported.</span></span>  
  
 <span data-ttu-id="629e0-795">转换将应用于整个文档。</span><span class="sxs-lookup"><span data-stu-id="629e0-795">Transformations apply to the document as a whole.</span></span> <span data-ttu-id="629e0-796">换句话说，如果你传入文档根节点以外的一个节点，并不能防止转换进程访问已加载文档的所有节点。</span><span class="sxs-lookup"><span data-stu-id="629e0-796">In other words, if you pass in a node other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="629e0-797">若要转换节点片段，必须创建一个 <xref:System.Xml.XmlDocument> 仅包含节点片段的，并将 <xref:System.Xml.XmlDocument> 其传递给 <xref:System.Xml.Xsl.XslTransform.Transform%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="629e0-797">To transform a node fragment, you must create an <xref:System.Xml.XmlDocument> containing just the node fragment and pass that <xref:System.Xml.XmlDocument> to the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method.</span></span>  
  
 <span data-ttu-id="629e0-798">下面的示例对节点片段执行转换。</span><span class="sxs-lookup"><span data-stu-id="629e0-798">The following example performs a transformation on a node fragment.</span></span>  
  
```csharp  
XslTransform xslt = new XslTransform();       
xslt.Load("print_root.xsl");  
XmlDocument doc = new XmlDocument();  
doc.Load("library.xml");  
// Create a new document containing just the node fragment.  
XmlNode testNode = doc.DocumentElement.FirstChild;   
XmlDocument tmpDoc = new XmlDocument();   
tmpDoc.LoadXml(testNode.OuterXml);  
// Pass the document containing the node fragment   
// to the Transform method.  
Console.WriteLine("Passing " + tmpDoc.OuterXml + " to print_root.xsl");  
xslt.Transform(tmpDoc, null, Console.Out, null);  
```  
  
 <span data-ttu-id="629e0-799">该示例使用 `library.xml` 和 `print_root.xsl` 文件作为输入，并将以下结果输出到控制台。</span><span class="sxs-lookup"><span data-stu-id="629e0-799">The example uses the `library.xml` and `print_root.xsl` files as input and outputs the following to the console.</span></span>  
  
```  
Passing <book genre="novel" ISBN="1-861001-57-5"><title>Pride And Prejudice</title></book> to print_root.xsl   
Root node is book.  
```  
  
 `library.xml`  
  
```xml  
<library>  
  <book genre='novel' ISBN='1-861001-57-5'>  
     <title>Pride And Prejudice</title>  
  </book>  
  <book genre='novel' ISBN='1-81920-21-2'>  
     <title>Hook</title>  
  </book>  
</library>  
```  
  
 `print_root.xsl`  
  
```xml  
<stylesheet version="1.0" xmlns="http://www.w3.org/1999/XSL/Transform" >  
  <output method="text" />   
  <template match="/">  
     Root node is  <value-of select="local-name(//*[position() = 1])" />   
  </template>  
</stylesheet>  
```  
  
   
  
## Examples  
 <span data-ttu-id="629e0-800">下面的示例转换 XML 文件并输出 HTML 字符串。</span><span class="sxs-lookup"><span data-stu-id="629e0-800">The following example transforms an XML file and outputs an HTML string.</span></span> <span data-ttu-id="629e0-801"><xref:System.IO.StringReader>和 <xref:System.IO.StringWriter> 类用于读取和写入字符串。</span><span class="sxs-lookup"><span data-stu-id="629e0-801">The <xref:System.IO.StringReader> and <xref:System.IO.StringWriter> classes are used to read and write the strings.</span></span>  
  
 [!code-csharp[XslTransform.Transform6#1](~/samples/snippets/csharp/VS_Snippets_Data/XslTransform.Transform6/CS/transstring.cs#1)]
 [!code-vb[XslTransform.Transform6#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XslTransform.Transform6/VB/transstring.vb#1)]  
  
 <span data-ttu-id="629e0-802">示例使用 `books.xml` 文件作为输入。</span><span class="sxs-lookup"><span data-stu-id="629e0-802">The example uses the `books.xml` file as input.</span></span>  
  
 [!code-xml[XslTransform.Transform6#2](~/samples/snippets/xml/VS_Snippets_Data/XslTransform.Transform6/XML/books.xml#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="629e0-803">处理 XSLT 转换时出错。</span><span class="sxs-lookup"><span data-stu-id="629e0-803">There was an error processing the XSLT transformation.</span></span>  
  
<span data-ttu-id="629e0-804">注意：这是对早期版本行为的更改。</span><span class="sxs-lookup"><span data-stu-id="629e0-804">Note: This is a change in behavior from earlier versions.</span></span> <span data-ttu-id="629e0-805">如果使用的是 Microsoft .NET Framework 1.1 版或更早版本，则会引发 <see cref="T:System.Xml.Xsl.XsltException" />。</span><span class="sxs-lookup"><span data-stu-id="629e0-805">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span></span></exception>
        <altmember cref="T:System.Xml.XmlSecureResolver" />
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <related type="Article" href="/dotnet/standard/data/xml/implementation-of-discretionary-behaviors-in-the-xsltransform-class"><span data-ttu-id="629e0-806">XslTransform 类中任意行为的实现</span><span class="sxs-lookup"><span data-stu-id="629e0-806">Implementation of Discretionary Behaviors in the XslTransform Class</span></span></related>
        <related type="Article" href="/dotnet/standard/data/xml/outputs-from-an-xsltransform"><span data-ttu-id="629e0-807">XslTransform 的输出</span><span class="sxs-lookup"><span data-stu-id="629e0-807">Outputs from an XslTransform</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList? args, System.Xml.XmlWriter output, System.Xml.XmlResolver? resolver);" FrameworkAlternate="net-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.IXPathNavigable input, class System.Xml.Xsl.XsltArgumentList args, class System.Xml.XmlWriter output, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As IXPathNavigable, args As XsltArgumentList, output As XmlWriter, resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::IXPathNavigable ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::Xml::XmlWriter ^ output, System::Xml::XmlResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.IXPathNavigable * System.Xml.Xsl.XsltArgumentList * System.Xml.XmlWriter * System.Xml.XmlResolver -&gt; unit" Usage="xslTransform.Transform (input, args, output, resolver)" />
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList args, System.Xml.XmlWriter output, System.Xml.XmlResolver resolver);" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.Xml.XmlWriter" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="629e0-808">一个实现 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 接口的对象。</span><span class="sxs-lookup"><span data-stu-id="629e0-808">An object implementing the <see cref="T:System.Xml.XPath.IXPathNavigable" /> interface.</span></span> <span data-ttu-id="629e0-809">在 .NET Framework 中，这可以是 <see cref="T:System.Xml.XmlNode" />（一般为 <see cref="T:System.Xml.XmlDocument" />），或者是包含要转换的数据的 <see cref="T:System.Xml.XPath.XPathDocument" />。</span><span class="sxs-lookup"><span data-stu-id="629e0-809">In the .NET Framework, this can be either an <see cref="T:System.Xml.XmlNode" /> (typically an <see cref="T:System.Xml.XmlDocument" />), or an <see cref="T:System.Xml.XPath.XPathDocument" /> containing the data to be transformed.</span></span></param>
        <param name="args"><span data-ttu-id="629e0-810"><see cref="T:System.Xml.Xsl.XsltArgumentList" />，包含用作转换输入的命名空间限定的参数。</span><span class="sxs-lookup"><span data-stu-id="629e0-810">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span></span></param>
        <param name="output"><span data-ttu-id="629e0-811">要输出到的 <see cref="T:System.Xml.XmlWriter" />。</span><span class="sxs-lookup"><span data-stu-id="629e0-811">The <see cref="T:System.Xml.XmlWriter" /> to which you want to output.</span></span></param>
        <param name="resolver"><span data-ttu-id="629e0-812">用于解析 XSLT <c>document()</c> 函数的 <see cref="T:System.Xml.XmlResolver" />。</span><span class="sxs-lookup"><span data-stu-id="629e0-812">The <see cref="T:System.Xml.XmlResolver" /> used to resolve the XSLT <c>document()</c> function.</span></span> <span data-ttu-id="629e0-813">如果为 <see langword="null" />，则不解析 <c>document()</c> 函数。</span><span class="sxs-lookup"><span data-stu-id="629e0-813">If this is <see langword="null" />, the <c>document()</c> function is not resolved.</span></span>  
  
<span data-ttu-id="629e0-814">完成 <see cref="T:System.Xml.XmlResolver" /> 方法后不缓存 <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)" />。</span><span class="sxs-lookup"><span data-stu-id="629e0-814">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)" /> method completes.</span></span></param>
        <summary><span data-ttu-id="629e0-815">使用指定的 <paramref name="args" /> 转换 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 中的 XML 数据，并将结果输出到 <see cref="T:System.Xml.XmlWriter" />。</span><span class="sxs-lookup"><span data-stu-id="629e0-815">Transforms the XML data in the <see cref="T:System.Xml.XPath.IXPathNavigable" /> using the specified <paramref name="args" /> and outputs the result to an <see cref="T:System.Xml.XmlWriter" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="629e0-816"><xref:System.Xml.Xsl.XslTransform>类在 .NET Framework 版本2.0 中已过时。</span><span class="sxs-lookup"><span data-stu-id="629e0-816">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="629e0-817"><xref:System.Xml.Xsl.XslCompiledTransform>类是新的 XSLT 处理器。</span><span class="sxs-lookup"><span data-stu-id="629e0-817">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="629e0-818">有关详细信息，请参阅 [使用 XslCompiledTransform 类](/dotnet/standard/data/xml/using-the-xslcompiledtransform-class) 和 [从 XslTransform 类迁移](/dotnet/standard/data/xml/migrating-from-the-xsltransform-class)。</span><span class="sxs-lookup"><span data-stu-id="629e0-818">For more information, see [Using the XslCompiledTransform Class](/dotnet/standard/data/xml/using-the-xslcompiledtransform-class) and [Migrating From the XslTransform Class](/dotnet/standard/data/xml/migrating-from-the-xsltransform-class).</span></span>  
  
 <span data-ttu-id="629e0-819"><xref:System.Xml.Xsl.XslTransform> 支持 XSLT 1.0 语法。</span><span class="sxs-lookup"><span data-stu-id="629e0-819"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="629e0-820">XSLT 样式表必须包括命名空间声明 `xmlns:xsl= http://www.w3.org/1999/XSL/Transform` 。</span><span class="sxs-lookup"><span data-stu-id="629e0-820">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="629e0-821">`args`与 `xsl:param` 样式表中定义的元素匹配。</span><span class="sxs-lookup"><span data-stu-id="629e0-821">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span> <span data-ttu-id="629e0-822">`xsl:output`当) 忽略输出到 (时，不支持该元素 <xref:System.Xml.XmlWriter> `xsl:output` 。</span><span class="sxs-lookup"><span data-stu-id="629e0-822">The `xsl:output` element is not supported when outputting to an <xref:System.Xml.XmlWriter> (`xsl:output` is ignored).</span></span> <span data-ttu-id="629e0-823">有关详细信息，请参阅 [XslTransform 的输出](/dotnet/standard/data/xml/outputs-from-an-xsltransform) 。</span><span class="sxs-lookup"><span data-stu-id="629e0-823">See [Outputs from an XslTransform](/dotnet/standard/data/xml/outputs-from-an-xsltransform) for more information.</span></span>  
  
 <span data-ttu-id="629e0-824">转换将应用于整个文档。</span><span class="sxs-lookup"><span data-stu-id="629e0-824">Transformations apply to the document as a whole.</span></span> <span data-ttu-id="629e0-825">换句话说，如果你传入文档根节点以外的一个节点，并不能防止转换进程访问已加载文档的所有节点。</span><span class="sxs-lookup"><span data-stu-id="629e0-825">In other words, if you pass in a node other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="629e0-826">若要转换节点片段，必须创建一个 <xref:System.Xml.XmlDocument> 仅包含节点片段的，并将 <xref:System.Xml.XmlDocument> 其传递给 <xref:System.Xml.Xsl.XslTransform.Transform%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="629e0-826">To transform a node fragment, you must create an <xref:System.Xml.XmlDocument> containing just the node fragment and pass that <xref:System.Xml.XmlDocument> to the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method.</span></span>  
  
 <span data-ttu-id="629e0-827">下面的示例对节点片段执行转换。</span><span class="sxs-lookup"><span data-stu-id="629e0-827">The following example performs a transformation on a node fragment.</span></span>  
  
```csharp  
XslTransform xslt = new XslTransform();       
xslt.Load("print_root.xsl");  
XmlDocument doc = new XmlDocument();  
doc.Load("library.xml");  
// Create a new document containing just the node fragment.  
XmlNode testNode = doc.DocumentElement.FirstChild;   
XmlDocument tmpDoc = new XmlDocument();   
tmpDoc.LoadXml(testNode.OuterXml);  
// Pass the document containing the node fragment   
// to the Transform method.  
Console.WriteLine("Passing " + tmpDoc.OuterXml + " to print_root.xsl");  
xslt.Transform(tmpDoc, null, Console.Out, null);  
```  
  
 <span data-ttu-id="629e0-828">该示例使用 `library.xml` 和 `print_root.xsl` 文件作为输入，并将以下结果输出到控制台。</span><span class="sxs-lookup"><span data-stu-id="629e0-828">The example uses the `library.xml` and `print_root.xsl` files as input and outputs the following to the console.</span></span>  
  
```  
Passing <book genre="novel" ISBN="1-861001-57-5"><title>Pride And Prejudice</title></book> to print_root.xsl   
Root node is book.  
```  
  
 `library.xml`  
  
```xml  
<library>  
  <book genre='novel' ISBN='1-861001-57-5'>  
     <title>Pride And Prejudice</title>  
  </book>  
  <book genre='novel' ISBN='1-81920-21-2'>  
     <title>Hook</title>  
  </book>  
</library>  
```  
  
 `print_root.xsl`  
  
```xml  
<stylesheet version="1.0" xmlns="http://www.w3.org/1999/XSL/Transform" >  
  <output method="text" />  
  <template match="/">  
  Root node is  <value-of select="local-name(//*[position() = 1])" />   
  </template>  
</stylesheet>  
```  
  
   
  
## Examples  
 <span data-ttu-id="629e0-829">下面的示例将 XML 文档转换为 HTML 文档。</span><span class="sxs-lookup"><span data-stu-id="629e0-829">The following example transforms an XML document into an HTML document.</span></span> <span data-ttu-id="629e0-830">它显示表中每本书的 ISBN、标题和价格。</span><span class="sxs-lookup"><span data-stu-id="629e0-830">It displays the ISBN, title, and price for each book in a table.</span></span>  
  
 [!code-cpp[Classic WebData XslTransform.Transform7 Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XslTransform.Transform7 Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XslTransform.Transform7 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/VB/source.vb#1)]  
  
 <span data-ttu-id="629e0-831">示例使用下列两个输入文件。</span><span class="sxs-lookup"><span data-stu-id="629e0-831">The sample uses the following two input files.</span></span>  
  
 `books.xml`  
  
 [!code-xml[Classic WebData XslTransform.Transform7 Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/XML/books.xml#2)]  
  
 `output.xsl`  
  
 [!code-xml[Classic WebData XslTransform.Transform7 Example#3](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/XML/output.xsl#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="629e0-832">处理 XSLT 转换时出错。</span><span class="sxs-lookup"><span data-stu-id="629e0-832">There was an error processing the XSLT transformation.</span></span>  
  
<span data-ttu-id="629e0-833">注意：这是对早期版本行为的更改。</span><span class="sxs-lookup"><span data-stu-id="629e0-833">Note: This is a change in behavior from earlier versions.</span></span> <span data-ttu-id="629e0-834">如果使用的是 Microsoft .NET Framework 1.1 版或更早版本，则会引发 <see cref="T:System.Xml.Xsl.XsltException" />。</span><span class="sxs-lookup"><span data-stu-id="629e0-834">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span></span></exception>
        <altmember cref="T:System.Xml.XmlSecureResolver" />
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <related type="Article" href="/dotnet/standard/data/xml/implementation-of-discretionary-behaviors-in-the-xsltransform-class"><span data-ttu-id="629e0-835">XslTransform 类中任意行为的实现</span><span class="sxs-lookup"><span data-stu-id="629e0-835">Implementation of Discretionary Behaviors in the XslTransform Class</span></span></related>
        <related type="Article" href="/dotnet/standard/data/xml/outputs-from-an-xsltransform"><span data-ttu-id="629e0-836">XslTransform 的输出</span><span class="sxs-lookup"><span data-stu-id="629e0-836">Outputs from an XslTransform</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.XPathNavigator input, System.Xml.Xsl.XsltArgumentList? args, System.IO.Stream output, System.Xml.XmlResolver? resolver);" FrameworkAlternate="net-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.XPathNavigator input, class System.Xml.Xsl.XsltArgumentList args, class System.IO.Stream output, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.Stream,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As XPathNavigator, args As XsltArgumentList, output As Stream, resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::XPathNavigator ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::IO::Stream ^ output, System::Xml::XmlResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.XPathNavigator * System.Xml.Xsl.XsltArgumentList * System.IO.Stream * System.Xml.XmlResolver -&gt; unit" Usage="xslTransform.Transform (input, args, output, resolver)" />
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.XPathNavigator input, System.Xml.Xsl.XsltArgumentList args, System.IO.Stream output, System.Xml.XmlResolver resolver);" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.XPathNavigator" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.IO.Stream" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="629e0-837"><see cref="T:System.Xml.XPath.XPathNavigator" />，包含要转换的数据。</span><span class="sxs-lookup"><span data-stu-id="629e0-837">An <see cref="T:System.Xml.XPath.XPathNavigator" /> containing the data to be transformed.</span></span></param>
        <param name="args"><span data-ttu-id="629e0-838"><see cref="T:System.Xml.Xsl.XsltArgumentList" />，包含用作转换输入的命名空间限定的参数。</span><span class="sxs-lookup"><span data-stu-id="629e0-838">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span></span></param>
        <param name="output"><span data-ttu-id="629e0-839">要输出到的流。</span><span class="sxs-lookup"><span data-stu-id="629e0-839">The stream to which you want to output.</span></span></param>
        <param name="resolver"><span data-ttu-id="629e0-840">用于解析 XSLT <c>document()</c> 函数的 <see cref="T:System.Xml.XmlResolver" />。</span><span class="sxs-lookup"><span data-stu-id="629e0-840">The <see cref="T:System.Xml.XmlResolver" /> used to resolve the XSLT <c>document()</c> function.</span></span> <span data-ttu-id="629e0-841">如果为 <see langword="null" />，则不解析 <c>document()</c> 函数。</span><span class="sxs-lookup"><span data-stu-id="629e0-841">If this is <see langword="null" />, the <c>document()</c> function is not resolved.</span></span>  
  
<span data-ttu-id="629e0-842">完成 <see cref="T:System.Xml.XmlResolver" /> 方法后不缓存 <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.Stream,System.Xml.XmlResolver)" />。</span><span class="sxs-lookup"><span data-stu-id="629e0-842">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.Stream,System.Xml.XmlResolver)" /> method completes.</span></span></param>
        <summary><span data-ttu-id="629e0-843">使用指定的 <paramref name="args" /> 转换 <see cref="T:System.Xml.XPath.XPathNavigator" /> 中的 XML 数据，并将结果输出到 <see cref="T:System.IO.Stream" />。</span><span class="sxs-lookup"><span data-stu-id="629e0-843">Transforms the XML data in the <see cref="T:System.Xml.XPath.XPathNavigator" /> using the specified <paramref name="args" /> and outputs the result to a <see cref="T:System.IO.Stream" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="629e0-844"><xref:System.Xml.Xsl.XslTransform>类在 .NET Framework 版本2.0 中已过时。</span><span class="sxs-lookup"><span data-stu-id="629e0-844">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="629e0-845"><xref:System.Xml.Xsl.XslCompiledTransform>类是新的 XSLT 处理器。</span><span class="sxs-lookup"><span data-stu-id="629e0-845">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="629e0-846">有关详细信息，请参阅 [使用 XslCompiledTransform 类](/dotnet/standard/data/xml/using-the-xslcompiledtransform-class) 和 [从 XslTransform 类迁移](/dotnet/standard/data/xml/migrating-from-the-xsltransform-class)。</span><span class="sxs-lookup"><span data-stu-id="629e0-846">For more information, see [Using the XslCompiledTransform Class](/dotnet/standard/data/xml/using-the-xslcompiledtransform-class) and [Migrating From the XslTransform Class](/dotnet/standard/data/xml/migrating-from-the-xsltransform-class).</span></span>  
  
 <span data-ttu-id="629e0-847"><xref:System.Xml.Xsl.XslTransform> 支持 XSLT 1.0 语法。</span><span class="sxs-lookup"><span data-stu-id="629e0-847"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="629e0-848">XSLT 样式表必须包括命名空间声明 `xmlns:xsl= http://www.w3.org/1999/XSL/Transform` 。</span><span class="sxs-lookup"><span data-stu-id="629e0-848">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="629e0-849">`args`与 `xsl:param` 样式表中定义的元素匹配。</span><span class="sxs-lookup"><span data-stu-id="629e0-849">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span> <span data-ttu-id="629e0-850">转换选项将应用于整个文档。</span><span class="sxs-lookup"><span data-stu-id="629e0-850">The transformation selections apply to the document as a whole.</span></span> <span data-ttu-id="629e0-851">换言之，如果当前节点是在文档根节点以外的节点树上设置的，则不会阻止转换进程访问已加载文档中的所有节点。</span><span class="sxs-lookup"><span data-stu-id="629e0-851">In other words, if the current node is set on a node tree other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="629e0-852">执行转换后，将 <xref:System.Xml.XPath.XPathNavigator> 保持其原始状态。</span><span class="sxs-lookup"><span data-stu-id="629e0-852">After the transformation has been performed, the <xref:System.Xml.XPath.XPathNavigator> remains in its original state.</span></span> <span data-ttu-id="629e0-853">这意味着，在调用方法后，节点（在转换进程之前是当前节点）将保留当前节点 <xref:System.Xml.Xsl.XslTransform.Transform%2A> 。</span><span class="sxs-lookup"><span data-stu-id="629e0-853">This means that the node, which is current before the transformation process, remains the current node after the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method has been called.</span></span>  
  
 <span data-ttu-id="629e0-854">有关支持的属性的详细信息，请参阅 [XslTransform 的输出](/dotnet/standard/data/xml/outputs-from-an-xsltransform) `xsl:output` 。</span><span class="sxs-lookup"><span data-stu-id="629e0-854">See [Outputs from an XslTransform](/dotnet/standard/data/xml/outputs-from-an-xsltransform) for specifics on which `xsl:output` attributes are supported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="629e0-855">下面的示例将 customer 表加载到中 <xref:System.Xml.XmlDataDocument> ，并执行 XSLT 转换，以将客户数据提取到 HTML 表中。</span><span class="sxs-lookup"><span data-stu-id="629e0-855">The following example loads a customer table into an <xref:System.Xml.XmlDataDocument> and performs an XSLT transformation to pull the customer data into an HTML table.</span></span> <span data-ttu-id="629e0-856">该示例使用 Microsoft SQL Server 2000 Northwind 数据库。</span><span class="sxs-lookup"><span data-stu-id="629e0-856">The example uses the Microsoft SQL Server 2000 Northwind database.</span></span>  
  
 [!code-csharp[XmlDataDocument.CreateNavigator#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlDataDocument.CreateNavigator/CS/dataset_trans.cs#1)]
 [!code-vb[XmlDataDocument.CreateNavigator#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlDataDocument.CreateNavigator/VB/dataset_trans.vb#1)]  
  
 <span data-ttu-id="629e0-857">示例使用 `customers.xsl` 文件作为输入。</span><span class="sxs-lookup"><span data-stu-id="629e0-857">The example uses the `customers.xsl` file as input.</span></span>  
  
 [!code-xml[XmlDataDocument.CreateNavigator#2](~/samples/snippets/xml/VS_Snippets_Data/XmlDataDocument.CreateNavigator/XML/customers.xsl#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="629e0-858">处理 XSLT 转换时出错。</span><span class="sxs-lookup"><span data-stu-id="629e0-858">There was an error processing the XSLT transformation.</span></span>  
  
<span data-ttu-id="629e0-859">注意：这是对早期版本行为的更改。</span><span class="sxs-lookup"><span data-stu-id="629e0-859">Note: This is a change in behavior from earlier versions.</span></span> <span data-ttu-id="629e0-860">如果使用的是 Microsoft .NET Framework 1.1 版或更早版本，则会引发 <see cref="T:System.Xml.Xsl.XsltException" />。</span><span class="sxs-lookup"><span data-stu-id="629e0-860">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span></span></exception>
        <altmember cref="T:System.Xml.Xsl.XsltArgumentList" />
        <altmember cref="T:System.Xml.XmlSecureResolver" />
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <related type="Article" href="/dotnet/standard/data/xml/implementation-of-discretionary-behaviors-in-the-xsltransform-class"><span data-ttu-id="629e0-861">XslTransform 类中任意行为的实现</span><span class="sxs-lookup"><span data-stu-id="629e0-861">Implementation of Discretionary Behaviors in the XslTransform Class</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.XPathNavigator input, System.Xml.Xsl.XsltArgumentList? args, System.IO.TextWriter output, System.Xml.XmlResolver? resolver);" FrameworkAlternate="net-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.XPathNavigator input, class System.Xml.Xsl.XsltArgumentList args, class System.IO.TextWriter output, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As XPathNavigator, args As XsltArgumentList, output As TextWriter, resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::XPathNavigator ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::IO::TextWriter ^ output, System::Xml::XmlResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.XPathNavigator * System.Xml.Xsl.XsltArgumentList * System.IO.TextWriter * System.Xml.XmlResolver -&gt; unit" Usage="xslTransform.Transform (input, args, output, resolver)" />
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.XPathNavigator input, System.Xml.Xsl.XsltArgumentList args, System.IO.TextWriter output, System.Xml.XmlResolver resolver);" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.XPathNavigator" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.IO.TextWriter" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="629e0-862"><see cref="T:System.Xml.XPath.XPathNavigator" />，包含要转换的数据。</span><span class="sxs-lookup"><span data-stu-id="629e0-862">An <see cref="T:System.Xml.XPath.XPathNavigator" /> containing the data to be transformed.</span></span></param>
        <param name="args"><span data-ttu-id="629e0-863"><see cref="T:System.Xml.Xsl.XsltArgumentList" />，包含用作转换输入的命名空间限定的参数。</span><span class="sxs-lookup"><span data-stu-id="629e0-863">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span></span></param>
        <param name="output"><span data-ttu-id="629e0-864">要输出到的 <see cref="T:System.IO.TextWriter" />。</span><span class="sxs-lookup"><span data-stu-id="629e0-864">The <see cref="T:System.IO.TextWriter" /> to which you want to output.</span></span></param>
        <param name="resolver"><span data-ttu-id="629e0-865">用于解析 XSLT <c>document()</c> 函数的 <see cref="T:System.Xml.XmlResolver" />。</span><span class="sxs-lookup"><span data-stu-id="629e0-865">The <see cref="T:System.Xml.XmlResolver" /> used to resolve the XSLT <c>document()</c> function.</span></span> <span data-ttu-id="629e0-866">如果为 <see langword="null" />，则不解析 <c>document()</c> 函数。</span><span class="sxs-lookup"><span data-stu-id="629e0-866">If this is <see langword="null" />, the <c>document()</c> function is not resolved.</span></span>  
  
<span data-ttu-id="629e0-867">完成 <see cref="T:System.Xml.XmlResolver" /> 方法后不缓存 <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter,System.Xml.XmlResolver)" />。</span><span class="sxs-lookup"><span data-stu-id="629e0-867">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter,System.Xml.XmlResolver)" /> method completes.</span></span></param>
        <summary><span data-ttu-id="629e0-868">使用指定的 <paramref name="args" /> 转换 <see cref="T:System.Xml.XPath.XPathNavigator" /> 中的 XML 数据，并将结果输出到 <see cref="T:System.IO.TextWriter" />。</span><span class="sxs-lookup"><span data-stu-id="629e0-868">Transforms the XML data in the <see cref="T:System.Xml.XPath.XPathNavigator" /> using the specified <paramref name="args" /> and outputs the result to a <see cref="T:System.IO.TextWriter" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="629e0-869"><xref:System.Xml.Xsl.XslTransform>类在 .NET Framework 版本2.0 中已过时。</span><span class="sxs-lookup"><span data-stu-id="629e0-869">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="629e0-870"><xref:System.Xml.Xsl.XslCompiledTransform>类是新的 XSLT 处理器。</span><span class="sxs-lookup"><span data-stu-id="629e0-870">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="629e0-871">有关详细信息，请参阅 [使用 XslCompiledTransform 类](/dotnet/standard/data/xml/using-the-xslcompiledtransform-class) 和 [从 XslTransform 类迁移](/dotnet/standard/data/xml/migrating-from-the-xsltransform-class)。</span><span class="sxs-lookup"><span data-stu-id="629e0-871">For more information, see [Using the XslCompiledTransform Class](/dotnet/standard/data/xml/using-the-xslcompiledtransform-class) and [Migrating From the XslTransform Class](/dotnet/standard/data/xml/migrating-from-the-xsltransform-class).</span></span>  
  
 <span data-ttu-id="629e0-872"><xref:System.Xml.Xsl.XslTransform> 支持 XSLT 1.0 语法。</span><span class="sxs-lookup"><span data-stu-id="629e0-872"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="629e0-873">XSLT 样式表必须包括命名空间声明 `xmlns:xsl= http://www.w3.org/1999/XSL/Transform` 。</span><span class="sxs-lookup"><span data-stu-id="629e0-873">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="629e0-874">`args`与 `xsl:param` 样式表中定义的元素匹配。</span><span class="sxs-lookup"><span data-stu-id="629e0-874">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span> <span data-ttu-id="629e0-875">转换选项将应用于整个文档。</span><span class="sxs-lookup"><span data-stu-id="629e0-875">The transformation selections apply to the document as a whole.</span></span> <span data-ttu-id="629e0-876">换言之，如果当前节点是在文档根节点以外的节点树上设置的，则不会阻止转换进程访问已加载文档中的所有节点。</span><span class="sxs-lookup"><span data-stu-id="629e0-876">In other words, if the current node is set on a node tree other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="629e0-877">执行转换后，将 <xref:System.Xml.XPath.XPathNavigator> 保持其原始状态。</span><span class="sxs-lookup"><span data-stu-id="629e0-877">After the transformation is performed, the <xref:System.Xml.XPath.XPathNavigator> remains in its original state.</span></span> <span data-ttu-id="629e0-878">这意味着，在调用方法后，节点（在转换进程之前是当前节点）将保留当前节点 <xref:System.Xml.Xsl.XslTransform.Transform%2A> 。</span><span class="sxs-lookup"><span data-stu-id="629e0-878">This means that the node, which is current before the transformation process, remains the current node after the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method has been called.</span></span>  
  
 <span data-ttu-id="629e0-879">`xsl:output`当输出到时，不支持元素上的编码属性 <xref:System.IO.TextWriter> 。</span><span class="sxs-lookup"><span data-stu-id="629e0-879">The encoding attribute on an `xsl:output` element is not supported when outputting to a <xref:System.IO.TextWriter>.</span></span> <span data-ttu-id="629e0-880">有关支持的属性的详细信息，请参阅 [XslTransform 的输出](/dotnet/standard/data/xml/outputs-from-an-xsltransform) `xsl:output` 。</span><span class="sxs-lookup"><span data-stu-id="629e0-880">See [Outputs from an XslTransform](/dotnet/standard/data/xml/outputs-from-an-xsltransform) for specifics on which `xsl:output` attributes are supported.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="629e0-881">处理 XSLT 转换时出错。</span><span class="sxs-lookup"><span data-stu-id="629e0-881">There was an error processing the XSLT transformation.</span></span>  
  
<span data-ttu-id="629e0-882">注意：这是对早期版本行为的更改。</span><span class="sxs-lookup"><span data-stu-id="629e0-882">Note: This is a change in behavior from earlier versions.</span></span> <span data-ttu-id="629e0-883">如果使用的是 Microsoft .NET Framework 1.1 版或更早版本，则会引发 <see cref="T:System.Xml.Xsl.XsltException" />。</span><span class="sxs-lookup"><span data-stu-id="629e0-883">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span></span></exception>
        <altmember cref="T:System.Xml.Xsl.XsltArgumentList" />
        <altmember cref="T:System.Xml.XmlSecureResolver" />
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <related type="Article" href="/dotnet/standard/data/xml/implementation-of-discretionary-behaviors-in-the-xsltransform-class"><span data-ttu-id="629e0-884">XslTransform 类中任意行为的实现</span><span class="sxs-lookup"><span data-stu-id="629e0-884">Implementation of Discretionary Behaviors in the XslTransform Class</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.XPathNavigator input, System.Xml.Xsl.XsltArgumentList? args, System.Xml.XmlWriter output, System.Xml.XmlResolver? resolver);" FrameworkAlternate="net-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.XPathNavigator input, class System.Xml.Xsl.XsltArgumentList args, class System.Xml.XmlWriter output, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As XPathNavigator, args As XsltArgumentList, output As XmlWriter, resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::XPathNavigator ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::Xml::XmlWriter ^ output, System::Xml::XmlResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.XPathNavigator * System.Xml.Xsl.XsltArgumentList * System.Xml.XmlWriter * System.Xml.XmlResolver -&gt; unit" Usage="xslTransform.Transform (input, args, output, resolver)" />
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.XPathNavigator input, System.Xml.Xsl.XsltArgumentList args, System.Xml.XmlWriter output, System.Xml.XmlResolver resolver);" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.XPathNavigator" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.Xml.XmlWriter" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="629e0-885"><see cref="T:System.Xml.XPath.XPathNavigator" />，包含要转换的数据。</span><span class="sxs-lookup"><span data-stu-id="629e0-885">An <see cref="T:System.Xml.XPath.XPathNavigator" /> containing the data to be transformed.</span></span></param>
        <param name="args"><span data-ttu-id="629e0-886"><see cref="T:System.Xml.Xsl.XsltArgumentList" />，包含用作转换输入的命名空间限定的参数。</span><span class="sxs-lookup"><span data-stu-id="629e0-886">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span></span></param>
        <param name="output"><span data-ttu-id="629e0-887">要输出到的 <see cref="T:System.Xml.XmlWriter" />。</span><span class="sxs-lookup"><span data-stu-id="629e0-887">The <see cref="T:System.Xml.XmlWriter" /> to which you want to output.</span></span></param>
        <param name="resolver"><span data-ttu-id="629e0-888">用于解析 XSLT <c>document()</c> 函数的 <see cref="T:System.Xml.XmlResolver" />。</span><span class="sxs-lookup"><span data-stu-id="629e0-888">The <see cref="T:System.Xml.XmlResolver" /> used to resolve the XSLT <c>document()</c> function.</span></span> <span data-ttu-id="629e0-889">如果为 <see langword="null" />，则不解析 <c>document()</c> 函数。</span><span class="sxs-lookup"><span data-stu-id="629e0-889">If this is <see langword="null" />, the <c>document()</c> function is not resolved.</span></span>  
  
<span data-ttu-id="629e0-890">完成 <see cref="T:System.Xml.XmlResolver" /> 方法后不缓存 <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)" />。</span><span class="sxs-lookup"><span data-stu-id="629e0-890">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)" /> method completes.</span></span></param>
        <summary><span data-ttu-id="629e0-891">使用指定的参数转换 <see cref="T:System.Xml.XPath.XPathNavigator" /> 中的 XML 数据，并将结果输出到 <see cref="T:System.Xml.XmlWriter" />。</span><span class="sxs-lookup"><span data-stu-id="629e0-891">Transforms the XML data in the <see cref="T:System.Xml.XPath.XPathNavigator" /> using the specified args and outputs the result to an <see cref="T:System.Xml.XmlWriter" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="629e0-892"><xref:System.Xml.Xsl.XslTransform>类在 .NET Framework 版本2.0 中已过时。</span><span class="sxs-lookup"><span data-stu-id="629e0-892">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="629e0-893"><xref:System.Xml.Xsl.XslCompiledTransform>类是新的 XSLT 处理器。</span><span class="sxs-lookup"><span data-stu-id="629e0-893">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="629e0-894">有关详细信息，请参阅 [使用 XslCompiledTransform 类](/dotnet/standard/data/xml/using-the-xslcompiledtransform-class) 和 [从 XslTransform 类迁移](/dotnet/standard/data/xml/migrating-from-the-xsltransform-class)。</span><span class="sxs-lookup"><span data-stu-id="629e0-894">For more information, see [Using the XslCompiledTransform Class](/dotnet/standard/data/xml/using-the-xslcompiledtransform-class) and [Migrating From the XslTransform Class](/dotnet/standard/data/xml/migrating-from-the-xsltransform-class).</span></span>  
  
 <span data-ttu-id="629e0-895"><xref:System.Xml.Xsl.XslTransform> 支持 XSLT 1.0 语法。</span><span class="sxs-lookup"><span data-stu-id="629e0-895"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="629e0-896">XSLT 样式表必须包括命名空间声明 `xmlns:xsl= http://www.w3.org/1999/XSL/Transform` 。</span><span class="sxs-lookup"><span data-stu-id="629e0-896">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="629e0-897">`args`与 `xsl:param` 样式表中定义的元素匹配。</span><span class="sxs-lookup"><span data-stu-id="629e0-897">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span> <span data-ttu-id="629e0-898">转换选项将应用于整个文档。</span><span class="sxs-lookup"><span data-stu-id="629e0-898">The transformation selections apply to the document as a whole.</span></span> <span data-ttu-id="629e0-899">换言之，如果当前节点是在文档根节点以外的节点树上设置的，则不会阻止转换进程访问已加载文档中的所有节点。</span><span class="sxs-lookup"><span data-stu-id="629e0-899">In other words, if the current node is set on a node tree other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="629e0-900">执行转换后，将 <xref:System.Xml.XPath.XPathNavigator> 保持其原始状态。</span><span class="sxs-lookup"><span data-stu-id="629e0-900">After the transformation is performed, the <xref:System.Xml.XPath.XPathNavigator> remains in its original state.</span></span> <span data-ttu-id="629e0-901">这意味着，在调用该方法后，在转换进程之前是当前节点的节点将保留为当前节点 <xref:System.Xml.Xsl.XslTransform.Transform%2A> 。</span><span class="sxs-lookup"><span data-stu-id="629e0-901">This means that the node, that is current before the transformation process, remains the current node after the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method has been called.</span></span>  
  
 <span data-ttu-id="629e0-902">`xsl:output`当) 忽略输出到 (时，不支持该元素 <xref:System.Xml.XmlWriter> `xsl:output` 。</span><span class="sxs-lookup"><span data-stu-id="629e0-902">The `xsl:output` element is not supported when outputting to an <xref:System.Xml.XmlWriter> (`xsl:output` is ignored).</span></span> <span data-ttu-id="629e0-903">有关详细信息，请参阅 [XslTransform 的输出](/dotnet/standard/data/xml/outputs-from-an-xsltransform) 。</span><span class="sxs-lookup"><span data-stu-id="629e0-903">See [Outputs from an XslTransform](/dotnet/standard/data/xml/outputs-from-an-xsltransform) for more information.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="629e0-904">下面的示例在执行 XSLT 转换之前加载并编辑 XML 文档。</span><span class="sxs-lookup"><span data-stu-id="629e0-904">The following example loads and edits an XML document before performing an XSLT transform.</span></span>  
  
 [!code-cpp[XslTransform.Transform2#1](~/samples/snippets/cpp/VS_Snippets_Data/XslTransform.Transform2/CPP/trans_snip.cpp#1)]
 [!code-csharp[XslTransform.Transform2#1](~/samples/snippets/csharp/VS_Snippets_Data/XslTransform.Transform2/CS/trans_snip.cs#1)]
 [!code-vb[XslTransform.Transform2#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XslTransform.Transform2/VB/trans_snip.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="629e0-905">处理 XSLT 转换时出错。</span><span class="sxs-lookup"><span data-stu-id="629e0-905">There was an error processing the XSLT transformation.</span></span>  
  
<span data-ttu-id="629e0-906">注意：这是对早期版本行为的更改。</span><span class="sxs-lookup"><span data-stu-id="629e0-906">Note: This is a change in behavior from earlier versions.</span></span> <span data-ttu-id="629e0-907">如果使用的是 Microsoft .NET Framework 1.1 版或更早版本，则会引发 <see cref="T:System.Xml.Xsl.XsltException" />。</span><span class="sxs-lookup"><span data-stu-id="629e0-907">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span></span></exception>
        <altmember cref="T:System.Xml.Xsl.XsltArgumentList" />
        <altmember cref="T:System.Xml.XmlSecureResolver" />
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <related type="Article" href="/dotnet/standard/data/xml/implementation-of-discretionary-behaviors-in-the-xsltransform-class"><span data-ttu-id="629e0-908">XslTransform 类中任意行为的实现</span><span class="sxs-lookup"><span data-stu-id="629e0-908">Implementation of Discretionary Behaviors in the XslTransform Class</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="XmlResolver">
      <MemberSignature Language="C#" Value="public System.Xml.XmlResolver? XmlResolver { set; }" FrameworkAlternate="net-5.0" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlResolver XmlResolver" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Xsl.XslTransform.XmlResolver" />
      <MemberSignature Language="VB.NET" Value="Public Property XmlResolver As XmlResolver" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::XmlResolver ^ XmlResolver {  void set(System::Xml::XmlResolver ^ value); };" />
      <MemberSignature Language="F#" Value="member this.XmlResolver : System.Xml.XmlResolver" Usage="System.Xml.Xsl.XslTransform.XmlResolver" />
      <MemberSignature Language="C#" Value="public System.Xml.XmlResolver XmlResolver { set; }" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName Language="C#">[System.Obsolete("You should pass XmlResolver to Transform() method")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("You should pass XmlResolver to Transform() method")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.XmlResolver</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="629e0-909">设置调用 <see cref="T:System.Xml.XmlResolver" /> 方法时用于解析外部资源的 <see cref="Overload:System.Xml.Xsl.XslTransform.Transform" />。</span><span class="sxs-lookup"><span data-stu-id="629e0-909">Sets the <see cref="T:System.Xml.XmlResolver" /> used to resolve external resources when the <see cref="Overload:System.Xml.Xsl.XslTransform.Transform" /> method is called.</span></span></summary>
        <value><span data-ttu-id="629e0-910">要在转换期间使用的 <see cref="T:System.Xml.XmlResolver" />。</span><span class="sxs-lookup"><span data-stu-id="629e0-910">The <see cref="T:System.Xml.XmlResolver" /> to use during transformation.</span></span> <span data-ttu-id="629e0-911">如果设置为 <see langword="null" /> ，则不解析 XSLT <c>文档 ( # B1 </c> 函数。</span><span class="sxs-lookup"><span data-stu-id="629e0-911">If set to <see langword="null" />, the XSLT <c>document()</c> function is not resolved.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="629e0-912"><xref:System.Xml.Xsl.XslTransform>类在 .NET Framework 版本2.0 中已过时。</span><span class="sxs-lookup"><span data-stu-id="629e0-912">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="629e0-913"><xref:System.Xml.Xsl.XslCompiledTransform>类是新的 XSLT 处理器。</span><span class="sxs-lookup"><span data-stu-id="629e0-913">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="629e0-914">有关详细信息，请参阅 [使用 XslCompiledTransform 类](/dotnet/standard/data/xml/using-the-xslcompiledtransform-class) 和 [从 XslTransform 类迁移](/dotnet/standard/data/xml/migrating-from-the-xsltransform-class)。</span><span class="sxs-lookup"><span data-stu-id="629e0-914">For more information, see [Using the XslCompiledTransform Class](/dotnet/standard/data/xml/using-the-xslcompiledtransform-class) and [Migrating From the XslTransform Class](/dotnet/standard/data/xml/migrating-from-the-xsltransform-class).</span></span>  
  
 <span data-ttu-id="629e0-915">在 .NET Framework 版本1.1 中，应用程序的信任级别确定了默认行为：</span><span class="sxs-lookup"><span data-stu-id="629e0-915">In version 1.1 of the .NET Framework, the trust level of the application determines the default behavior:</span></span>  
  
 <span data-ttu-id="629e0-916">`Fully trusted code:`<xref:System.Xml.XmlUrlResolver>使用不带用户凭据的默认值来解析 `document()` 函数。</span><span class="sxs-lookup"><span data-stu-id="629e0-916">`Fully trusted code:` A default <xref:System.Xml.XmlUrlResolver> with no user credentials is used to resolve the `document()` function.</span></span> <span data-ttu-id="629e0-917">如果访问外部资源需要身份验证，请使用此属性指定 <xref:System.Xml.XmlResolver> 具有必要凭据的。</span><span class="sxs-lookup"><span data-stu-id="629e0-917">If authentication is required to access the external resource, use this property to specify an <xref:System.Xml.XmlResolver> with the necessary credentials.</span></span>  
  
 <span data-ttu-id="629e0-918">`Semi-trusted code:` 属性设置为 `null` ，这意味着 `document()` 不会解析函数。</span><span class="sxs-lookup"><span data-stu-id="629e0-918">`Semi-trusted code:` The property is set to `null`, which means the `document()` function is not resolved.</span></span> <span data-ttu-id="629e0-919">由于需要完全信任来指定，因此 <xref:System.Xml.XmlResolver> 也不能设置此属性。</span><span class="sxs-lookup"><span data-stu-id="629e0-919">Because full trust is required to specify an <xref:System.Xml.XmlResolver>, this property also cannot be set.</span></span>  
  
 <span data-ttu-id="629e0-920">调用 XSLT 函数时，将使用此解析程序 `document()` 。</span><span class="sxs-lookup"><span data-stu-id="629e0-920">This resolver is used when the XSLT `document()` function is invoked.</span></span> <span data-ttu-id="629e0-921">它不用于解析 `xsl:import` `xsl:include` 样式表中引用的元素和元素。</span><span class="sxs-lookup"><span data-stu-id="629e0-921">It is not used to resolve `xsl:import` and `xsl:include` elements referenced in the style sheet.</span></span> <span data-ttu-id="629e0-922">若要指定 <xref:System.Xml.XmlResolver> 要用于解析 `xsl:import` 的和 `xsl:include` 样式表中引用的元素，请使用 <xref:System.Xml.Xsl.XslTransform.Load%2A> 重载，该重载采用 <xref:System.Xml.XmlResolver> 作为其参数之一。</span><span class="sxs-lookup"><span data-stu-id="629e0-922">To specify an <xref:System.Xml.XmlResolver> to use to resolve `xsl:import` and `xsl:include` elements referenced in the style sheet, use the <xref:System.Xml.Xsl.XslTransform.Load%2A> overload, which takes an <xref:System.Xml.XmlResolver> as one of its arguments.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="629e0-923">此属性在 .NET Framework 版本1.1 中已过时。</span><span class="sxs-lookup"><span data-stu-id="629e0-923">This property is obsolete in version 1.1 of the .NET Framework.</span></span> <span data-ttu-id="629e0-924"><xref:System.Xml.XmlResolver>建议使用方法来指定 <xref:System.Xml.Xsl.XslTransform.Transform%2A> 。</span><span class="sxs-lookup"><span data-stu-id="629e0-924">Specifying an <xref:System.Xml.XmlResolver> using the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method is the recommended practice.</span></span> <span data-ttu-id="629e0-925">在这种情况下，在 <xref:System.Xml.XmlResolver> 方法完成后，不会缓存 <xref:System.Xml.Xsl.XslTransform.Transform%2A> 。</span><span class="sxs-lookup"><span data-stu-id="629e0-925">In this case, the <xref:System.Xml.XmlResolver> is not cached after the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method completes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <altmember cref="T:System.Net.CredentialCache" />
        <altmember cref="T:System.Net.NetworkCredential" />
      </Docs>
    </Member>
  </Members>
</Type>