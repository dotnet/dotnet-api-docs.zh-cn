<Type Name="PolicyHttpMessageHandler" FullName="Microsoft.Extensions.Http.PolicyHttpMessageHandler">
  <Metadata><Meta Name="ms.openlocfilehash" Value="324e7a535fe45003c2ed3af6e4cbfa64f2fcff26" /><Meta Name="ms.sourcegitcommit" Value="397961a0164281b579f68064c3bb66c071f374d9" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/14/2020" /><Meta Name="ms.locfileid" Value="78806161" /></Metadata><TypeSignature Language="C#" Value="public class PolicyHttpMessageHandler : System.Net.Http.DelegatingHandler" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit PolicyHttpMessageHandler extends System.Net.Http.DelegatingHandler" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Extensions.Http.PolicyHttpMessageHandler" />
  <TypeSignature Language="VB.NET" Value="Public Class PolicyHttpMessageHandler&#xA;Inherits DelegatingHandler" />
  <TypeSignature Language="C++ CLI" Value="public ref class PolicyHttpMessageHandler : System::Net::Http::DelegatingHandler" />
  <TypeSignature Language="F#" Value="type PolicyHttpMessageHandler = class&#xA;    inherit DelegatingHandler" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Extensions.Http.Polly</AssemblyName>
    <AssemblyVersion>2.2.0.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Net.Http.DelegatingHandler</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="90814-101"><see cref="T:System.Net.Http.DelegatingHandler" /> 实现，执行由 <see cref="T:Polly.Policy" /> 包围的请求处理。</span><span class="sxs-lookup"><span data-stu-id="90814-101">A <see cref="T:System.Net.Http.DelegatingHandler" /> implementation that executes request processing surrounded by a <see cref="T:Polly.Policy" />.</span></span></summary>
    <remarks><para>
<span data-ttu-id="90814-102">此消息处理程序实现支持使用由 Polly 库提供的策略来实现暂时性故障处理和复原。</span><span class="sxs-lookup"><span data-stu-id="90814-102">This message handler implementation supports the use of policies provided by the Polly library for transient-fault-handling and resiliency.</span></span>
            </para>
      <para>
<span data-ttu-id="90814-103">此处提供的文档是将 Polly 与结合使用的重点指导 <see cref="T:System.Net.Http.IHttpClientFactory" /> 。</span><span class="sxs-lookup"><span data-stu-id="90814-103">The documentation provided here is focused guidance for using Polly together with the <see cref="T:System.Net.Http.IHttpClientFactory" />.</span></span> <span data-ttu-id="90814-104">有关 Polly 的权威信息，请参阅 Polly 项目及其文档 https://github.com/app-vnext/Polly) 。</span><span class="sxs-lookup"><span data-stu-id="90814-104">See the Polly project and its documentation (https://github.com/app-vnext/Polly) for authoritative information on Polly.</span></span>
            </para>
      <para>
<span data-ttu-id="90814-105">上的扩展方法 <see cref="T:Microsoft.Extensions.DependencyInjection.PollyHttpClientBuilderExtensions" /> 旨在用作一种方便且正确的方法来创建 <see cref="T:Microsoft.Extensions.Http.PolicyHttpMessageHandler" /> 。</span><span class="sxs-lookup"><span data-stu-id="90814-105">The extension methods on <see cref="T:Microsoft.Extensions.DependencyInjection.PollyHttpClientBuilderExtensions" /> are designed as a convenient and correct way to create a <see cref="T:Microsoft.Extensions.Http.PolicyHttpMessageHandler" />.</span></span>
            </para>
      <para>
<span data-ttu-id="90814-106"><see cref="M:Microsoft.Extensions.DependencyInjection.PollyHttpClientBuilderExtensions.AddPolicyHandler(Microsoft.Extensions.DependencyInjection.IHttpClientBuilder,Polly.IAsyncPolicy{System.Net.Http.HttpResponseMessage})" />方法支持 <see cref="T:Microsoft.Extensions.Http.PolicyHttpMessageHandler" /> 为任何类型的策略创建。</span><span class="sxs-lookup"><span data-stu-id="90814-106">The <see cref="M:Microsoft.Extensions.DependencyInjection.PollyHttpClientBuilderExtensions.AddPolicyHandler(Microsoft.Extensions.DependencyInjection.IHttpClientBuilder,Polly.IAsyncPolicy{System.Net.Http.HttpResponseMessage})" /> method supports the creation of a <see cref="T:Microsoft.Extensions.Http.PolicyHttpMessageHandler" /> for any kind of policy.</span></span> <span data-ttu-id="90814-107">这包括非反应策略（如超时或缓存），这不需要基础请求首先失败。</span><span class="sxs-lookup"><span data-stu-id="90814-107">This includes non-reactive policies, such as Timeout or Cache, which don't require the underlying request to fail first.</span></span>
            </para>
      <para><span data-ttu-id="90814-108">
        <see cref="T:Microsoft.Extensions.Http.PolicyHttpMessageHandler" />并且 <see cref="T:Microsoft.Extensions.DependencyInjection.PollyHttpClientBuilderExtensions" /> 便利方法仅接受泛型 <see cref="T:Polly.IAsyncPolicy`1" /> 。</span><span class="sxs-lookup"><span data-stu-id="90814-108">
        <see cref="T:Microsoft.Extensions.Http.PolicyHttpMessageHandler" /> and the <see cref="T:Microsoft.Extensions.DependencyInjection.PollyHttpClientBuilderExtensions" /> convenience methods only accept the generic <see cref="T:Polly.IAsyncPolicy`1" />.</span></span> <span data-ttu-id="90814-109">可以通过使用上的泛型方法来创建泛型策略实例， <see cref="T:Polly.Policy" /> 如 <see cref="M:Polly.Policy.TimeoutAsync``1(System.Int32)" /> 。</span><span class="sxs-lookup"><span data-stu-id="90814-109">Generic policy instances can be created by using the generic methods on <see cref="T:Polly.Policy" /> such as <see cref="M:Polly.Policy.TimeoutAsync``1(System.Int32)" />.</span></span>
            </para>
      <para>
<span data-ttu-id="90814-110">若要改编现有的非泛型 <see cref="T:Polly.IAsyncPolicy" /> ，请使用如下所示的代码：</span><span class="sxs-lookup"><span data-stu-id="90814-110">To adapt an existing non-generic <see cref="T:Polly.IAsyncPolicy" />, use code like the following:</span></span> <example>
<span data-ttu-id="90814-111">将非泛型<c>IAsyncPolicy 策略</c>转换为 <see cref="T:Polly.IAsyncPolicy`1" /> 。</span><span class="sxs-lookup"><span data-stu-id="90814-111">Converting a non-generic <c>IAsyncPolicy policy</c> to <see cref="T:Polly.IAsyncPolicy`1" />.</span></span>
            <code>
            policy.AsAsyncPolicy&lt;HttpResponseMessage&gt;()
            </code></example></para>
      <para>
<span data-ttu-id="90814-112">此 <see cref="M:Microsoft.Extensions.DependencyInjection.PollyHttpClientBuilderExtensions.AddTransientHttpErrorPolicy(Microsoft.Extensions.DependencyInjection.IHttpClientBuilder,System.Func{Polly.PolicyBuilder{System.Net.Http.HttpResponseMessage},Polly.IAsyncPolicy{System.Net.Http.HttpResponseMessage}})" /> 方法是一种固执的简便方法，该方法支持应用程序因连接失败或服务器错误而失败的请求（5XX HTTP 状态代码）。</span><span class="sxs-lookup"><span data-stu-id="90814-112">The <see cref="M:Microsoft.Extensions.DependencyInjection.PollyHttpClientBuilderExtensions.AddTransientHttpErrorPolicy(Microsoft.Extensions.DependencyInjection.IHttpClientBuilder,System.Func{Polly.PolicyBuilder{System.Net.Http.HttpResponseMessage},Polly.IAsyncPolicy{System.Net.Http.HttpResponseMessage}})" /> method is an opinionated convenience method that supports the application of a policy for requests that fail due to a connection failure or server error (5XX HTTP status code).</span></span> <span data-ttu-id="90814-113">此类方法仅支持反应策略，如重试、断路器或回退。</span><span class="sxs-lookup"><span data-stu-id="90814-113">This kind of method supports only reactive policies such as Retry, Circuit-Breaker or Fallback.</span></span> <span data-ttu-id="90814-114">此方法仅为方便而提供;如果这不能满足您的要求，我们建议根据需要创建您自己的策略。</span><span class="sxs-lookup"><span data-stu-id="90814-114">This method is only provided for convenience; we recommend creating your own policies as needed if this does not meet your requirements.</span></span>
            </para>
      <para>
<span data-ttu-id="90814-115">使用重试或超时等策略时请小心，因为 HttpClient 通过提供自己的超时 <see cref="P:System.Net.Http.HttpClient.Timeout" /> 。</span><span class="sxs-lookup"><span data-stu-id="90814-115">Take care when using policies such as Retry or Timeout together as HttpClient provides its own timeout via <see cref="P:System.Net.Http.HttpClient.Timeout" />.</span></span>  <span data-ttu-id="90814-116">合并重试和超时时， <see cref="P:System.Net.Http.HttpClient.Timeout" /> 将在所有尝试中充当超时; 可在配置序列中的重试策略后配置 Polly 超时策略，以提供每次尝试超时。</span><span class="sxs-lookup"><span data-stu-id="90814-116">When combining Retry and Timeout, <see cref="P:System.Net.Http.HttpClient.Timeout" /> will act as a timeout across all tries; a Polly Timeout policy can be configured after a Retry policy in the configuration sequence, to provide a timeout-per-try.</span></span>
            </para>
      <para>
<span data-ttu-id="90814-117">Polly 提供的所有策略都设计为在长期使用时有效。</span><span class="sxs-lookup"><span data-stu-id="90814-117">All policies provided by Polly are designed to be efficient when used in a long-lived way.</span></span> <span data-ttu-id="90814-118">某些策略（如 Bulkhead）和断路器维护状态，并且应在你想要共享 Bulkhead 或断路器状态的调用范围内。</span><span class="sxs-lookup"><span data-stu-id="90814-118">Certain policies such as the Bulkhead and Circuit-Breaker maintain state and should be scoped across calls you wish to share the Bulkhead or Circuit-Breaker state.</span></span> <span data-ttu-id="90814-119">在自定义方案中结合使用策略和消息处理程序时，请务必确保正确的生存期。</span><span class="sxs-lookup"><span data-stu-id="90814-119">Take care to ensure the correct lifetimes when using policies and message handlers together in custom scenarios.</span></span> <span data-ttu-id="90814-120">提供的扩展方法 <see cref="T:Microsoft.Extensions.DependencyInjection.PollyHttpClientBuilderExtensions" /> 旨在为策略分配长生存期，并确保在处理程序轮换功能处于活动状态时可以使用它们。</span><span class="sxs-lookup"><span data-stu-id="90814-120">The extension methods provided by <see cref="T:Microsoft.Extensions.DependencyInjection.PollyHttpClientBuilderExtensions" /> are designed to assign a long lifetime to policies and ensure that they can be used when the handler rotation feature is active.</span></span>
            </para>
      <para>
<span data-ttu-id="90814-121"><see cref="T:Microsoft.Extensions.Http.PolicyHttpMessageHandler" /> <see cref="T:System.Net.Http.HttpRequestMessage" /> 如果不存在，将在执行之前将上下文附加到 <see cref="T:Polly.Policy" /> 。</span><span class="sxs-lookup"><span data-stu-id="90814-121">The <see cref="T:Microsoft.Extensions.Http.PolicyHttpMessageHandler" /> will attach a context to the <see cref="T:System.Net.Http.HttpRequestMessage" /> prior to executing a <see cref="T:Polly.Policy" />, if one does not already exist.</span></span> <span data-ttu-id="90814-122"><see cref="T:Polly.Context" />将向策略提供，以供在 <see cref="T:Polly.Policy" /> 和其他消息处理程序中使用。</span><span class="sxs-lookup"><span data-stu-id="90814-122">The <see cref="T:Polly.Context" /> will be provided to the policy for use inside the <see cref="T:Polly.Policy" /> and in other message handlers.</span></span>
            </para></remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PolicyHttpMessageHandler (Polly.IAsyncPolicy&lt;System.Net.Http.HttpResponseMessage&gt; policy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Polly.IAsyncPolicy`1&lt;class System.Net.Http.HttpResponseMessage&gt; policy) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Http.PolicyHttpMessageHandler.#ctor(Polly.IAsyncPolicy{System.Net.Http.HttpResponseMessage})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (policy As IAsyncPolicy(Of HttpResponseMessage))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PolicyHttpMessageHandler(Polly::IAsyncPolicy&lt;System::Net::Http::HttpResponseMessage ^&gt; ^ policy);" />
      <MemberSignature Language="F#" Value="new Microsoft.Extensions.Http.PolicyHttpMessageHandler : Polly.IAsyncPolicy&lt;System.Net.Http.HttpResponseMessage&gt; -&gt; Microsoft.Extensions.Http.PolicyHttpMessageHandler" Usage="new Microsoft.Extensions.Http.PolicyHttpMessageHandler policy" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Http.Polly</AssemblyName>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="policy" Type="Polly.IAsyncPolicy&lt;System.Net.Http.HttpResponseMessage&gt;" />
      </Parameters>
      <Docs>
        <param name="policy"><span data-ttu-id="90814-123">策略。</span><span class="sxs-lookup"><span data-stu-id="90814-123">The policy.</span></span></param>
        <summary><span data-ttu-id="90814-124">创建一个新的 <see cref="T:Microsoft.Extensions.Http.PolicyHttpMessageHandler" />。</span><span class="sxs-lookup"><span data-stu-id="90814-124">Creates a new <see cref="T:Microsoft.Extensions.Http.PolicyHttpMessageHandler" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PolicyHttpMessageHandler (Func&lt;System.Net.Http.HttpRequestMessage,Polly.IAsyncPolicy&lt;System.Net.Http.HttpResponseMessage&gt;&gt; policySelector);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Func`2&lt;class System.Net.Http.HttpRequestMessage, class Polly.IAsyncPolicy`1&lt;class System.Net.Http.HttpResponseMessage&gt;&gt; policySelector) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Http.PolicyHttpMessageHandler.#ctor(System.Func{System.Net.Http.HttpRequestMessage,Polly.IAsyncPolicy{System.Net.Http.HttpResponseMessage}})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (policySelector As Func(Of HttpRequestMessage, IAsyncPolicy(Of HttpResponseMessage)))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PolicyHttpMessageHandler(Func&lt;System::Net::Http::HttpRequestMessage ^, Polly::IAsyncPolicy&lt;System::Net::Http::HttpResponseMessage ^&gt; ^&gt; ^ policySelector);" />
      <MemberSignature Language="F#" Value="new Microsoft.Extensions.Http.PolicyHttpMessageHandler : Func&lt;System.Net.Http.HttpRequestMessage, Polly.IAsyncPolicy&lt;System.Net.Http.HttpResponseMessage&gt;&gt; -&gt; Microsoft.Extensions.Http.PolicyHttpMessageHandler" Usage="new Microsoft.Extensions.Http.PolicyHttpMessageHandler policySelector" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Http.Polly</AssemblyName>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="policySelector" Type="System.Func&lt;System.Net.Http.HttpRequestMessage,Polly.IAsyncPolicy&lt;System.Net.Http.HttpResponseMessage&gt;&gt;" />
      </Parameters>
      <Docs>
        <param name="policySelector"><span data-ttu-id="90814-125">可为给定 <see cref="T:System.Net.Http.HttpRequestMessage" /> 选择所需策略的函数。</span><span class="sxs-lookup"><span data-stu-id="90814-125">A function which can select the desired policy for a given <see cref="T:System.Net.Http.HttpRequestMessage" />.</span></span></param>
        <summary><span data-ttu-id="90814-126">创建一个新的 <see cref="T:Microsoft.Extensions.Http.PolicyHttpMessageHandler" />。</span><span class="sxs-lookup"><span data-stu-id="90814-126">Creates a new <see cref="T:Microsoft.Extensions.Http.PolicyHttpMessageHandler" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SendAsync">
      <MemberSignature Language="C#" Value="protected override System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt; SendAsync (System.Net.Http.HttpRequestMessage request, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Threading.Tasks.Task`1&lt;class System.Net.Http.HttpResponseMessage&gt; SendAsync(class System.Net.Http.HttpRequestMessage request, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Http.PolicyHttpMessageHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function SendAsync (request As HttpRequestMessage, cancellationToken As CancellationToken) As Task(Of HttpResponseMessage)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Threading::Tasks::Task&lt;System::Net::Http::HttpResponseMessage ^&gt; ^ SendAsync(System::Net::Http::HttpRequestMessage ^ request, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="override this.SendAsync : System.Net.Http.HttpRequestMessage * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;" Usage="policyHttpMessageHandler.SendAsync (request, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Http.Polly</AssemblyName>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Net.Http.HttpRequestMessage" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="request">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="SendCoreAsync">
      <MemberSignature Language="C#" Value="protected virtual System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt; SendCoreAsync (System.Net.Http.HttpRequestMessage request, Polly.Context context, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Net.Http.HttpResponseMessage&gt; SendCoreAsync(class System.Net.Http.HttpRequestMessage request, class Polly.Context context, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Http.PolicyHttpMessageHandler.SendCoreAsync(System.Net.Http.HttpRequestMessage,Polly.Context,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function SendCoreAsync (request As HttpRequestMessage, context As Context, cancellationToken As CancellationToken) As Task(Of HttpResponseMessage)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Threading::Tasks::Task&lt;System::Net::Http::HttpResponseMessage ^&gt; ^ SendCoreAsync(System::Net::Http::HttpRequestMessage ^ request, Polly::Context ^ context, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="abstract member SendCoreAsync : System.Net.Http.HttpRequestMessage * Polly.Context * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;&#xA;override this.SendCoreAsync : System.Net.Http.HttpRequestMessage * Polly.Context * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;" Usage="policyHttpMessageHandler.SendCoreAsync (request, context, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Http.Polly</AssemblyName>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Net.Http.HttpRequestMessage" />
        <Parameter Name="context" Type="Polly.Context" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="request"><span data-ttu-id="90814-127"><see cref="T:System.Net.Http.HttpRequestMessage" /></span><span class="sxs-lookup"><span data-stu-id="90814-127">The <see cref="T:System.Net.Http.HttpRequestMessage" />.</span></span></param>
        <param name="context"><span data-ttu-id="90814-128"><see cref="T:Polly.Context" /></span><span class="sxs-lookup"><span data-stu-id="90814-128">The <see cref="T:Polly.Context" />.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="90814-129"><see cref="T:System.Threading.CancellationToken" /></span><span class="sxs-lookup"><span data-stu-id="90814-129">The <see cref="T:System.Threading.CancellationToken" />.</span></span></param>
        <summary><span data-ttu-id="90814-130">已在 <see cref="T:Polly.Policy" /> 的执行内部调用，以执行请求处理。</span><span class="sxs-lookup"><span data-stu-id="90814-130">Called inside the execution of the <see cref="T:Polly.Policy" /> to perform request processing.</span></span></summary>
        <returns><span data-ttu-id="90814-131">返回在完成时作出响应的 <see cref="T:System.Threading.Tasks.Task`1" />。</span><span class="sxs-lookup"><span data-stu-id="90814-131">Returns a <see cref="T:System.Threading.Tasks.Task`1" /> that will yield a response when completed.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
