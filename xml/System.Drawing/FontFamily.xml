<Type Name="FontFamily" FullName="System.Drawing.FontFamily">
  <Metadata><Meta Name="ms.openlocfilehash" Value="4cd862479047324c0809dca379c55fd21c50c7dd" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86819497" /></Metadata><TypeSignature Language="C#" Value="public sealed class FontFamily : MarshalByRefObject, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit FontFamily extends System.MarshalByRefObject implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Drawing.FontFamily" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class FontFamily&#xA;Inherits MarshalByRefObject&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class FontFamily sealed : MarshalByRefObject, IDisposable" />
  <TypeSignature Language="F#" Value="type FontFamily = class&#xA;    inherit MarshalByRefObject&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Drawing</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Drawing.Common</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.1</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.MarshalByRefObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>定义有着相似的基本设计但在形式上有某些差异的一组字样。 此类不能被继承。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码示例演示了类的属性中的所有字体系列 <xref:System.Drawing.FontFamily.Families%2A> <xref:System.Drawing.FontFamily> 。 此示例旨在与 Windows 窗体一起使用。 若要运行此示例，请向 <xref:System.Windows.Forms.ListBox> 窗体添加一个名为的， `listBox1` 并 `PopulateListBoxWithFonts` 从窗体的构造函数中调用方法。  
  
 [!code-cpp[System.Drawing.MiscExamples#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.MiscExamples/CPP/form1.cpp#1)]
 [!code-csharp[System.Drawing.MiscExamples#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.MiscExamples/CS/form1.cs#1)]
 [!code-vb[System.Drawing.MiscExamples#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.MiscExamples/VB/form1.vb#1)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="/dotnet/framework/winforms/advanced/using-fonts-and-text">使用字体和文本</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>初始化使用指定名称的新 <see cref="T:System.Drawing.FontFamily" />。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FontFamily (System.Drawing.Text.GenericFontFamilies genericFamily);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Drawing.Text.GenericFontFamilies genericFamily) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.FontFamily.#ctor(System.Drawing.Text.GenericFontFamilies)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (genericFamily As GenericFontFamilies)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FontFamily(System::Drawing::Text::GenericFontFamilies genericFamily);" />
      <MemberSignature Language="F#" Value="new System.Drawing.FontFamily : System.Drawing.Text.GenericFontFamilies -&gt; System.Drawing.FontFamily" Usage="new System.Drawing.FontFamily genericFamily" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="genericFamily" Type="System.Drawing.Text.GenericFontFamilies" />
      </Parameters>
      <Docs>
        <param name="genericFamily">从中创建新 <see cref="T:System.Drawing.FontFamily" /> 的 <see cref="T:System.Drawing.Text.GenericFontFamilies" />。</param>
        <summary>从指定的一般字体系列初始化新 <see cref="T:System.Drawing.FontFamily" />。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FontFamily (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.FontFamily.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FontFamily(System::String ^ name);" />
      <MemberSignature Language="F#" Value="new System.Drawing.FontFamily : string -&gt; System.Drawing.FontFamily" Usage="new System.Drawing.FontFamily name" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">新 <see cref="T:System.Drawing.FontFamily" /> 的名称。</param>
        <summary>用指定的名称初始化新 <see cref="T:System.Drawing.FontFamily" />。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 向参数传递空字符串 ( "" ) 将 `name` 导致异常。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="name" /> 为空字符串 ("")。  
  
- 或 - 
 <paramref name="name" /> 指定运行应用程序的计算机上未安装的字体。  
  
-或- 
 <paramref name="name" /> 指定非 TrueType 字体的字体。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FontFamily (string name, System.Drawing.Text.FontCollection fontCollection);" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, class System.Drawing.Text.FontCollection fontCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.FontFamily.#ctor(System.String,System.Drawing.Text.FontCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, fontCollection As FontCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FontFamily(System::String ^ name, System::Drawing::Text::FontCollection ^ fontCollection);" />
      <MemberSignature Language="F#" Value="new System.Drawing.FontFamily : string * System.Drawing.Text.FontCollection -&gt; System.Drawing.FontFamily" Usage="new System.Drawing.FontFamily (name, fontCollection)" />
      <MemberSignature Language="C#" Value="public FontFamily (string name, System.Drawing.Text.FontCollection? fontCollection);" FrameworkAlternate="dotnet-plat-ext-5.0;net-5.0" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="fontCollection" Type="System.Drawing.Text.FontCollection" />
      </Parameters>
      <Docs>
        <param name="name">一个 <see cref="T:System.String" />，表示新 <see cref="T:System.Drawing.FontFamily" /> 的名称。</param>
        <param name="fontCollection">包含此 <see cref="T:System.Drawing.FontFamily" /> 的 <see cref="T:System.Drawing.Text.FontCollection" />。</param>
        <summary>使用指定名称初始化指定的 <see cref="T:System.Drawing.Text.FontCollection" /> 中的新 <see cref="T:System.Drawing.FontFamily" />。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><paramref name="name" /> 为空字符串 ("")。  
  
- 或 - 
 <paramref name="name" /> 指定运行应用程序的计算机上未安装的字体。  
  
-或- 
 <paramref name="name" /> 指定非 TrueType 字体的字体。</exception>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.FontFamily.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="fontFamily.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>释放此 <see cref="T:System.Drawing.FontFamily" /> 使用的所有资源。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 调用 <xref:System.Drawing.FontFamily.Dispose%2A> 会允许出于其他目的重新分配此所使用的资源 <xref:System.Drawing.FontFamily> 。  
  
 在完成使用 <xref:System.Drawing.FontFamily.Dispose%2A> 后，应调用 <xref:System.Drawing.FontFamily>。 <xref:System.Drawing.FontFamily.Dispose%2A> 方法使 <xref:System.Drawing.FontFamily> 处于不可用状态。 调用后 <xref:System.Drawing.FontFamily.Dispose%2A> ，必须释放对的所有引用， <xref:System.Drawing.FontFamily> 以便垃圾回收器能够回收占用的内存 <xref:System.Drawing.FontFamily> 。 有关详细信息，请参阅 [清理非托管资源](/dotnet/standard/garbage-collection/unmanaged) 和 [实现 Dispose 方法](/dotnet/standard/garbage-collection/implementing-dispose)。  
  
> [!NOTE]
>  每次释放对 <xref:System.Drawing.FontFamily.Dispose%2A> 的最后一个引用前，均应调用 <xref:System.Drawing.FontFamily>。 否则，在垃圾回收器调用 <xref:System.Drawing.FontFamily> 对象的 `Finalize` 方法之前，该对象正在使用的资源不会被释放。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.FontFamily.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="fontFamily.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">要测试的对象。</param>
        <summary>指示指定的对象是否为 <see cref="T:System.Drawing.FontFamily" /> 以及是否与此 <see cref="T:System.Drawing.FontFamily" /> 相等。</summary>
        <returns>如果 <paramref name="obj" /> 为 <see cref="T:System.Drawing.FontFamily" /> 且与此 <see cref="T:System.Drawing.FontFamily" /> 相等，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码示例旨在与 Windows 窗体一起使用，并且它需要作为 <xref:System.Windows.Forms.PaintEventArgs> `e` <xref:System.Windows.Forms.Control.Paint> 事件处理程序的参数。 此代码执行以下操作：  
  
-   创建两个 <xref:System.Drawing.Font> 对象。  
  
-   测试它们是否等效。  
  
-   在消息框中显示测试结果。  
  
 [!code-cpp[System.Drawing.ClassicFontFamilyExamples#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicFontFamilyExamples/CPP/form1.cpp#1)]
 [!code-csharp[System.Drawing.ClassicFontFamilyExamples#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicFontFamilyExamples/CS/form1.cs#1)]
 [!code-vb[System.Drawing.ClassicFontFamilyExamples#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicFontFamilyExamples/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Families">
      <MemberSignature Language="C#" Value="public static System.Drawing.FontFamily[] Families { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Drawing.FontFamily[] Families" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.FontFamily.Families" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Families As FontFamily()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property cli::array &lt;System::Drawing::FontFamily ^&gt; ^ Families { cli::array &lt;System::Drawing::FontFamily ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Families : System.Drawing.FontFamily[]" Usage="System.Drawing.FontFamily.Families" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.FontFamily[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回一个数组，该数组包含与当前图形上下文相关的所有 <see cref="T:System.Drawing.FontFamily" /> 对象。</summary>
        <value>与当前图形上下文相关的 <see cref="T:System.Drawing.FontFamily" /> 对象的数组。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码示例演示了类的属性中的所有字体系列 <xref:System.Drawing.FontFamily.Families%2A> <xref:System.Drawing.FontFamily> 。 此示例旨在与 Windows 窗体一起使用。 若要运行此示例，请向 <xref:System.Windows.Forms.ListBox> 窗体添加一个名为的， `listBox1` 并 `PopulateListBoxWithFonts` 从窗体的构造函数中调用方法。  
  
 [!code-cpp[System.Drawing.MiscExamples#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.MiscExamples/CPP/form1.cpp#1)]
 [!code-csharp[System.Drawing.MiscExamples#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.MiscExamples/CS/form1.cs#1)]
 [!code-vb[System.Drawing.MiscExamples#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.MiscExamples/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~FontFamily ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.FontFamily.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!FontFamily ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="fontFamily.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>在垃圾回收将某一对象回收前允许该对象尝试释放资源并执行其他清理操作。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenericMonospace">
      <MemberSignature Language="C#" Value="public static System.Drawing.FontFamily GenericMonospace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Drawing.FontFamily GenericMonospace" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.FontFamily.GenericMonospace" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property GenericMonospace As FontFamily" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Drawing::FontFamily ^ GenericMonospace { System::Drawing::FontFamily ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.GenericMonospace : System.Drawing.FontFamily" Usage="System.Drawing.FontFamily.GenericMonospace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.FontFamily</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一般 monospace <see cref="T:System.Drawing.FontFamily" />。</summary>
        <value>表示一般 monospace 字体的 <see cref="T:System.Drawing.FontFamily" />。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenericSansSerif">
      <MemberSignature Language="C#" Value="public static System.Drawing.FontFamily GenericSansSerif { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Drawing.FontFamily GenericSansSerif" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.FontFamily.GenericSansSerif" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property GenericSansSerif As FontFamily" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Drawing::FontFamily ^ GenericSansSerif { System::Drawing::FontFamily ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.GenericSansSerif : System.Drawing.FontFamily" Usage="System.Drawing.FontFamily.GenericSansSerif" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.FontFamily</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一般 sans serif <see cref="T:System.Drawing.FontFamily" /> 对象。</summary>
        <value>表示一般 sans serif 字体的 <see cref="T:System.Drawing.FontFamily" /> 对象。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenericSerif">
      <MemberSignature Language="C#" Value="public static System.Drawing.FontFamily GenericSerif { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Drawing.FontFamily GenericSerif" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.FontFamily.GenericSerif" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property GenericSerif As FontFamily" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Drawing::FontFamily ^ GenericSerif { System::Drawing::FontFamily ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.GenericSerif : System.Drawing.FontFamily" Usage="System.Drawing.FontFamily.GenericSerif" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.FontFamily</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一般 serif <see cref="T:System.Drawing.FontFamily" />。</summary>
        <value>表示一般 serif 字体的 <see cref="T:System.Drawing.FontFamily" />。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCellAscent">
      <MemberSignature Language="C#" Value="public int GetCellAscent (System.Drawing.FontStyle style);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetCellAscent(valuetype System.Drawing.FontStyle style) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.FontFamily.GetCellAscent(System.Drawing.FontStyle)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCellAscent (style As FontStyle) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetCellAscent(System::Drawing::FontStyle style);" />
      <MemberSignature Language="F#" Value="member this.GetCellAscent : System.Drawing.FontStyle -&gt; int" Usage="fontFamily.GetCellAscent style" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="style" Type="System.Drawing.FontStyle" />
      </Parameters>
      <Docs>
        <param name="style"><see cref="T:System.Drawing.FontStyle" />，它包含字体的样式信息。</param>
        <summary>返回指定样式的 <see cref="T:System.Drawing.FontFamily" /> 的单元格上升，采用设计单位。</summary>
        <returns>使用了指定的 <see cref="T:System.Drawing.FontStyle" /> 的此 <see cref="T:System.Drawing.FontFamily" /> 的单元格上升。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码示例旨在与 Windows 窗体一起使用，并且它需要作为 <xref:System.Windows.Forms.PaintEventArgs> `e` <xref:System.Windows.Forms.Control.Paint> 事件处理程序的参数。 此代码执行以下操作：  
  
-   创建一个 <xref:System.Drawing.FontFamily>。  
  
-   获取该字体系列的单元格上升。  
  
-   将单元格上升值作为文本绘制到屏幕上。  
  
 [!code-cpp[System.Drawing.ClassicFontFamilyExamples#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicFontFamilyExamples/CPP/form1.cpp#2)]
 [!code-csharp[System.Drawing.ClassicFontFamilyExamples#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicFontFamilyExamples/CS/form1.cs#2)]
 [!code-vb[System.Drawing.ClassicFontFamilyExamples#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicFontFamilyExamples/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/winforms/advanced/how-to-obtain-font-metrics">如何：获取字体规格</related>
      </Docs>
    </Member>
    <Member MemberName="GetCellDescent">
      <MemberSignature Language="C#" Value="public int GetCellDescent (System.Drawing.FontStyle style);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetCellDescent(valuetype System.Drawing.FontStyle style) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.FontFamily.GetCellDescent(System.Drawing.FontStyle)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCellDescent (style As FontStyle) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetCellDescent(System::Drawing::FontStyle style);" />
      <MemberSignature Language="F#" Value="member this.GetCellDescent : System.Drawing.FontStyle -&gt; int" Usage="fontFamily.GetCellDescent style" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="style" Type="System.Drawing.FontStyle" />
      </Parameters>
      <Docs>
        <param name="style"><see cref="T:System.Drawing.FontStyle" />，它包含字体的样式信息。</param>
        <summary>返回指定样式的 <see cref="T:System.Drawing.FontFamily" /> 的单元格下降，采用设计单位。</summary>
        <returns>使用了指定的 <see cref="T:System.Drawing.FontFamily" /> 的此 <see cref="T:System.Drawing.FontStyle" /> 的单元格下降度量。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码示例旨在与 Windows 窗体一起使用，并且它需要作为 <xref:System.Windows.Forms.PaintEventArgs> `e` <xref:System.Windows.Forms.Control.Paint> 事件处理程序的参数。 此代码执行以下操作：  
  
-   创建一个 <xref:System.Drawing.FontFamily>。  
  
-   获取该字体系列的单元格下降。  
  
-   将单元格下降值作为文本绘制到屏幕上。  
  
 [!code-cpp[System.Drawing.ClassicFontFamilyExamples#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicFontFamilyExamples/CPP/form1.cpp#3)]
 [!code-csharp[System.Drawing.ClassicFontFamilyExamples#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicFontFamilyExamples/CS/form1.cs#3)]
 [!code-vb[System.Drawing.ClassicFontFamilyExamples#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicFontFamilyExamples/VB/form1.vb#3)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/winforms/advanced/how-to-obtain-font-metrics">如何：获取字体规格</related>
      </Docs>
    </Member>
    <Member MemberName="GetEmHeight">
      <MemberSignature Language="C#" Value="public int GetEmHeight (System.Drawing.FontStyle style);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetEmHeight(valuetype System.Drawing.FontStyle style) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.FontFamily.GetEmHeight(System.Drawing.FontStyle)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEmHeight (style As FontStyle) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetEmHeight(System::Drawing::FontStyle style);" />
      <MemberSignature Language="F#" Value="member this.GetEmHeight : System.Drawing.FontStyle -&gt; int" Usage="fontFamily.GetEmHeight style" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="style" Type="System.Drawing.FontStyle" />
      </Parameters>
      <Docs>
        <param name="style">为其获取全身高度的 <see cref="T:System.Drawing.FontStyle" />。</param>
        <summary>获取指定样式的 em 方形的高度，采用字体设计单位。</summary>
        <returns>em 方形的高度。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 *Em 方形* 是一种版式术语，指的是由字体的最宽字符（传统字母 M）占用的矩形。  
  
   
  
## Examples  
 下面的代码示例旨在与 Windows 窗体一起使用，并且它需要作为 <xref:System.Windows.Forms.PaintEventArgs> `e` <xref:System.Windows.Forms.Control.Paint> 事件处理程序的参数。 此代码执行以下操作：  
  
-   创建一个 <xref:System.Drawing.FontFamily>。  
  
-   获取该字体系列的 em 方形高度。  
  
-   将全身高度的值作为文本绘制到屏幕上。  
  
 [!code-cpp[System.Drawing.ClassicFontFamilyExamples#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicFontFamilyExamples/CPP/form1.cpp#4)]
 [!code-csharp[System.Drawing.ClassicFontFamilyExamples#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicFontFamilyExamples/CS/form1.cs#4)]
 [!code-vb[System.Drawing.ClassicFontFamilyExamples#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicFontFamilyExamples/VB/form1.vb#4)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/winforms/advanced/how-to-obtain-font-metrics">如何：获取字体规格</related>
      </Docs>
    </Member>
    <Member MemberName="GetFamilies">
      <MemberSignature Language="C#" Value="public static System.Drawing.FontFamily[] GetFamilies (System.Drawing.Graphics graphics);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Drawing.FontFamily[] GetFamilies(class System.Drawing.Graphics graphics) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.FontFamily.GetFamilies(System.Drawing.Graphics)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetFamilies (graphics As Graphics) As FontFamily()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Drawing::FontFamily ^&gt; ^ GetFamilies(System::Drawing::Graphics ^ graphics);" />
      <MemberSignature Language="F#" Value="static member GetFamilies : System.Drawing.Graphics -&gt; System.Drawing.FontFamily[]" Usage="System.Drawing.FontFamily.GetFamilies graphics" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Obsolete("Do not use method GetFamilies, use property Families instead")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("Do not use method GetFamilies, use property Families instead")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.FontFamily[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
      </Parameters>
      <Docs>
        <param name="graphics">从其返回 <see cref="T:System.Drawing.FontFamily" /> 对象的 <see cref="T:System.Drawing.Graphics" /> 对象。</param>
        <summary>返回一个数组，该数组包含指定的图形上下文可用的所有 <see cref="T:System.Drawing.FontFamily" /> 对象。</summary>
        <returns>指定的 <see cref="T:System.Drawing.Graphics" /> 对象可用的 <see cref="T:System.Drawing.FontFamily" /> 对象的数组。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="graphics" /> 为 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.FontFamily.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="fontFamily.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>获取此 <see cref="T:System.Drawing.FontFamily" /> 的哈希代码。</summary>
        <returns>此 <see cref="T:System.Drawing.FontFamily" /> 的哈希代码。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码示例旨在与 Windows 窗体一起使用，并且它需要作为 <xref:System.Windows.Forms.PaintEventArgs> `e` <xref:System.Windows.Forms.Control.Paint> 事件处理程序的参数。 此代码执行以下操作：  
  
-   创建一个 <xref:System.Drawing.FontFamily>。  
  
-   获取字体系列的哈希代码。  
  
-   将哈希代码值作为文本绘制到屏幕上。  
  
 [!code-cpp[System.Drawing.ClassicFontFamilyExamples#6](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicFontFamilyExamples/CPP/form1.cpp#6)]
 [!code-csharp[System.Drawing.ClassicFontFamilyExamples#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicFontFamilyExamples/CS/form1.cs#6)]
 [!code-vb[System.Drawing.ClassicFontFamilyExamples#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicFontFamilyExamples/VB/form1.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetLineSpacing">
      <MemberSignature Language="C#" Value="public int GetLineSpacing (System.Drawing.FontStyle style);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetLineSpacing(valuetype System.Drawing.FontStyle style) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.FontFamily.GetLineSpacing(System.Drawing.FontStyle)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetLineSpacing (style As FontStyle) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetLineSpacing(System::Drawing::FontStyle style);" />
      <MemberSignature Language="F#" Value="member this.GetLineSpacing : System.Drawing.FontStyle -&gt; int" Usage="fontFamily.GetLineSpacing style" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="style" Type="System.Drawing.FontStyle" />
      </Parameters>
      <Docs>
        <param name="style">要应用的 <see cref="T:System.Drawing.FontStyle" />。</param>
        <summary>返回指定样式的 <see cref="T:System.Drawing.FontFamily" /> 的行距，采用设计单位。 行距是两个连续文本行的基线之间的垂直距离。</summary>
        <returns>两行相邻文本之间的距离。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码示例旨在与 Windows 窗体一起使用，并且它需要作为 <xref:System.Windows.Forms.PaintEventArgs> `e` <xref:System.Windows.Forms.Control.Paint> 事件处理程序的参数。 此代码执行以下操作：  
  
-   创建一个 <xref:System.Drawing.FontFamily>。  
  
-   获取字体系列的行距。  
  
-   将行距值作为文本绘制到屏幕上。  
  
 [!code-cpp[System.Drawing.ClassicFontFamilyExamples#7](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicFontFamilyExamples/CPP/form1.cpp#7)]
 [!code-csharp[System.Drawing.ClassicFontFamilyExamples#7](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicFontFamilyExamples/CS/form1.cs#7)]
 [!code-vb[System.Drawing.ClassicFontFamilyExamples#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicFontFamilyExamples/VB/form1.vb#7)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/winforms/advanced/how-to-obtain-font-metrics">如何：获取字体规格</related>
      </Docs>
    </Member>
    <Member MemberName="GetName">
      <MemberSignature Language="C#" Value="public string GetName (int language);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetName(int32 language) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.FontFamily.GetName(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetName (language As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetName(int language);" />
      <MemberSignature Language="F#" Value="member this.GetName : int -&gt; string" Usage="fontFamily.GetName language" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="language" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="language">返回此名称所用的语言。</param>
        <summary>用指定的语言返回此 <see cref="T:System.Drawing.FontFamily" /> 的名称。</summary>
        <returns>一个 <see cref="T:System.String" />，它用指定的语言表示此 <see cref="T:System.Drawing.FontFamily" /> 的名称。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 若要指示非特定语言，则应将参数指定为 0 `language` 。 有关可用语言和 sublanguages 的列表，请参阅 Winnt 标头文件。 如果安装了 Visual Studio，则通常可以在 \VC\PlatformSDK\Include. 上找到此头文件（相对于 Visual Studio 安装目录）。 \\  
  
   
  
## Examples  
 下面的代码示例旨在与 Windows 窗体一起使用，并且它需要作为 <xref:System.Windows.Forms.PaintEventArgs> `e` <xref:System.Windows.Forms.Control.Paint> 事件处理程序的参数。 此代码执行以下操作：  
  
-   创建一个 <xref:System.Drawing.FontFamily>。  
  
-   获取字体系列的名称。  
  
-   将字体系列的名称以文本形式绘制到屏幕上。  
  
 [!code-cpp[System.Drawing.ClassicFontFamilyExamples#8](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicFontFamilyExamples/CPP/form1.cpp#8)]
 [!code-csharp[System.Drawing.ClassicFontFamilyExamples#8](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicFontFamilyExamples/CS/form1.cs#8)]
 [!code-vb[System.Drawing.ClassicFontFamilyExamples#8](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicFontFamilyExamples/VB/form1.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsStyleAvailable">
      <MemberSignature Language="C#" Value="public bool IsStyleAvailable (System.Drawing.FontStyle style);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsStyleAvailable(valuetype System.Drawing.FontStyle style) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.FontFamily.IsStyleAvailable(System.Drawing.FontStyle)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsStyleAvailable (style As FontStyle) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsStyleAvailable(System::Drawing::FontStyle style);" />
      <MemberSignature Language="F#" Value="member this.IsStyleAvailable : System.Drawing.FontStyle -&gt; bool" Usage="fontFamily.IsStyleAvailable style" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="style" Type="System.Drawing.FontStyle" />
      </Parameters>
      <Docs>
        <param name="style">要测试的 <see cref="T:System.Drawing.FontStyle" />。</param>
        <summary>指示指定的 <see cref="T:System.Drawing.FontStyle" /> 枚举是否可用。</summary>
        <returns>如果指定的 <see cref="T:System.Drawing.FontStyle" /> 可用，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码示例旨在与 Windows 窗体一起使用，并且它需要作为 <xref:System.Windows.Forms.PaintEventArgs> `e` <xref:System.Windows.Forms.Control.Paint> 事件处理程序的参数。 此代码执行以下操作：  
  
-   创建一个 <xref:System.Drawing.FontFamily>。  
  
-   测试字体系列是否以斜体显示。  
  
-   如果是，则在屏幕上绘制文本。  
  
 [!code-cpp[System.Drawing.ClassicFontFamilyExamples#9](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicFontFamilyExamples/CPP/form1.cpp#9)]
 [!code-csharp[System.Drawing.ClassicFontFamilyExamples#9](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicFontFamilyExamples/CS/form1.cs#9)]
 [!code-vb[System.Drawing.ClassicFontFamilyExamples#9](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicFontFamilyExamples/VB/form1.vb#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.FontFamily.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.Drawing.FontFamily.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取此 <see cref="T:System.Drawing.FontFamily" /> 的名称。</summary>
        <value>一个 <see cref="T:System.String" />，表示此 <see cref="T:System.Drawing.FontFamily" /> 的名称。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码示例演示了类的属性中的所有字体系列 <xref:System.Drawing.FontFamily.Families%2A> <xref:System.Drawing.FontFamily> 。 此示例旨在与 Windows 窗体一起使用。 若要运行此示例，请将一个名为的 <xref:System.Windows.Forms.ListBox> 命名 `listBox1` 为窗体，并 `PopulateListBoxWithFonts` 从窗体的构造函数中调用方法。  
  
 [!code-cpp[System.Drawing.MiscExamples#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.MiscExamples/CPP/form1.cpp#1)]
 [!code-csharp[System.Drawing.MiscExamples#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.MiscExamples/CS/form1.cs#1)]
 [!code-vb[System.Drawing.MiscExamples#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.MiscExamples/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.FontFamily.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="fontFamily.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>将此 <see cref="T:System.Drawing.FontFamily" /> 转换为可读的字符串表示形式。</summary>
        <returns>表示此 <see cref="T:System.Drawing.FontFamily" /> 的字符串。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码示例旨在与 Windows 窗体一起使用，并且它需要作为 <xref:System.Windows.Forms.PaintEventArgs> `e` <xref:System.Windows.Forms.Control.Paint> 事件处理程序的参数。 此代码将创建一个 <xref:System.Drawing.FontFamily> ，并在屏幕上绘制字体系列的字符串表示形式。  
  
 [!code-cpp[System.Drawing.ClassicFontFamilyExamples#10](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicFontFamilyExamples/CPP/form1.cpp#10)]
 [!code-csharp[System.Drawing.ClassicFontFamilyExamples#10](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicFontFamilyExamples/CS/form1.cs#10)]
 [!code-vb[System.Drawing.ClassicFontFamilyExamples#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicFontFamilyExamples/VB/form1.vb#10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
