<Type Name="Graphics+EnumerateMetafileProc" FullName="System.Drawing.Graphics+EnumerateMetafileProc">
  <Metadata><Meta Name="ms.openlocfilehash" Value="3e91a7dd6440064ec1fe0e8037736c261844b6af" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86819380" /></Metadata><TypeSignature Language="C#" Value="public delegate bool Graphics.EnumerateMetafileProc(EmfPlusRecordType recordType, int flags, int dataSize, IntPtr data, PlayRecordCallback callbackData);" />
  <TypeSignature Language="ILAsm" Value=".class nested public auto ansi sealed Graphics/EnumerateMetafileProc extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Drawing.Graphics.EnumerateMetafileProc" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Function Graphics.EnumerateMetafileProc(recordType As EmfPlusRecordType, flags As Integer, dataSize As Integer, data As IntPtr, callbackData As PlayRecordCallback) As Boolean " />
  <TypeSignature Language="C++ CLI" Value="public: delegate bool Graphics::EnumerateMetafileProc(EmfPlusRecordType recordType, int flags, int dataSize, IntPtr data, PlayRecordCallback ^ callbackData);" />
  <TypeSignature Language="F#" Value="type Graphics.EnumerateMetafileProc = delegate of EmfPlusRecordType * int * int * nativeint * PlayRecordCallback -&gt; bool" />
  <AssemblyInfo>
    <AssemblyName>System.Drawing</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Drawing.Common</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.1</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1">
      <AttributeName Language="C#">[System.Runtime.InteropServices.ComVisible(false)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.ComVisible(false)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Parameters>
    <Parameter Name="recordType" Type="System.Drawing.Imaging.EmfPlusRecordType" />
    <Parameter Name="flags" Type="System.Int32" />
    <Parameter Name="dataSize" Type="System.Int32" />
    <Parameter Name="data" Type="System.IntPtr" />
    <Parameter Name="callbackData" Type="System.Drawing.Imaging.PlayRecordCallback" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Boolean</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="recordType"><see cref="T:System.Drawing.Imaging.EmfPlusRecordType" /> 枚举的成员，它指定图元文件记录的类型。</param>
    <param name="flags">指定记录特性的标志集。</param>
    <param name="dataSize">记录数据中的字节数。</param>
    <param name="data">指向包含记录数据的缓冲区的指针。</param>
    <param name="callbackData">未使用。</param>
    <summary>为 <see cref="Overload:System.Drawing.Graphics.EnumerateMetafile" /> 方法提供回调方法。</summary>
    <returns>如果要继续枚举记录，则返回 <see langword="true" />，否则返回 <see langword="false" />。</returns>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法与类的方法结合使用 <xref:System.Drawing.Graphics.EnumerateMetafile%2A> <xref:System.Drawing.Graphics> 。 方法的某些重载 <xref:System.Drawing.Graphics.EnumerateMetafile%2A> 将为指定的图元文件中的每个记录调用此类型的应用程序定义的回调方法。 回调函数可以通过调用所枚举的的方法来显示 (或所选记录) 的每条记录 <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> <xref:System.Drawing.Imaging.Metafile> 。  
  
 此回调方法的用户声明必须具有与委托声明相同的参数 <xref:System.Drawing.Graphics.EnumerateMetafileProc> 。  
  
   
  
## Examples  
 有关示例，请参阅 <xref:System.Drawing.Graphics.EnumerateMetafile%2A> 。  
  
 ]]></format>
    </remarks>
  </Docs>
</Type>
