<Type Name="PointConverter" FullName="System.Drawing.PointConverter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="3586181b1dc719c741a10daf7da0e0671318c5cb" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89916949" /></Metadata><TypeSignature Language="C#" Value="public class PointConverter : System.ComponentModel.TypeConverter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit PointConverter extends System.ComponentModel.TypeConverter" />
  <TypeSignature Language="DocId" Value="T:System.Drawing.PointConverter" />
  <TypeSignature Language="VB.NET" Value="Public Class PointConverter&#xA;Inherits TypeConverter" />
  <TypeSignature Language="C++ CLI" Value="public ref class PointConverter : System::ComponentModel::TypeConverter" />
  <TypeSignature Language="F#" Value="type PointConverter = class&#xA;    inherit TypeConverter" />
  <AssemblyInfo>
    <AssemblyName>System.Drawing</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.ComponentModel.TypeConverter" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.ComponentModel.TypeConverter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="b63db-101">将 <see cref="T:System.Drawing.Point" /> 对象从一种数据类型转换为另一种数据类型。</span><span class="sxs-lookup"><span data-stu-id="b63db-101">Converts a <see cref="T:System.Drawing.Point" /> object from one data type to another.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b63db-102"><xref:System.Drawing.PointConverter>类通常用于为具有类型为的属性的控件创建设计时体验 <xref:System.Drawing.GraphicsUnit.Point> ，并用于将点转换为字符串以便在设计器中显示以及将设计器中输入的字符串转换为 <xref:System.Drawing.GraphicsUnit.Point> 对象。</span><span class="sxs-lookup"><span data-stu-id="b63db-102">The <xref:System.Drawing.PointConverter> class is typically used for creating a design-time experience for controls that have properties that are of type <xref:System.Drawing.GraphicsUnit.Point>, and is used to convert points to strings for display in a designer and to convert strings entered in a designer to a <xref:System.Drawing.GraphicsUnit.Point> object.</span></span> <span data-ttu-id="b63db-103">通过 <xref:System.ComponentModel.TypeDescriptor> 对象访问此类。</span><span class="sxs-lookup"><span data-stu-id="b63db-103">Access this class through the <xref:System.ComponentModel.TypeDescriptor> object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b63db-104">下面的代码示例演示如何使用 <xref:System.Drawing.PointConverter> 和 <xref:System.Drawing.Point.op_Subtraction%2A> 运算符。</span><span class="sxs-lookup"><span data-stu-id="b63db-104">The following code example demonstrates how to use the <xref:System.Drawing.PointConverter> and the <xref:System.Drawing.Point.op_Subtraction%2A> operator.</span></span> <span data-ttu-id="b63db-105">此示例旨在与 Windows 窗体一起使用。</span><span class="sxs-lookup"><span data-stu-id="b63db-105">This example is designed to be used with Windows Forms.</span></span> <span data-ttu-id="b63db-106">将此代码粘贴到窗体中 `ShowPointConverter` ，并在处理窗体事件时调用方法，并将 <xref:System.Windows.Forms.Control.Paint> `e` 作为传递 <xref:System.Windows.Forms.PaintEventArgs> 。</span><span class="sxs-lookup"><span data-stu-id="b63db-106">Paste this code into a form and call the `ShowPointConverter` method when handling the form's <xref:System.Windows.Forms.Control.Paint> event, passing `e` as <xref:System.Windows.Forms.PaintEventArgs> .</span></span>  
  
 [!code-cpp[System.Drawing.Converters#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Converters/CPP/form1.cpp#1)]
 [!code-csharp[System.Drawing.Converters#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Converters/CS/form1.cs#1)]
 [!code-vb[System.Drawing.Converters#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Converters/VB/form1.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PointConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.PointConverter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PointConverter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b63db-107">初始化 <see cref="T:System.Drawing.PointConverter" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="b63db-107">Initializes a new instance of the <see cref="T:System.Drawing.PointConverter" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertFrom">
      <MemberSignature Language="C#" Value="public override bool CanConvertFrom (System.ComponentModel.ITypeDescriptorContext context, Type sourceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Type sourceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.PointConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanConvertFrom (context As ITypeDescriptorContext, sourceType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ context, Type ^ sourceType);" />
      <MemberSignature Language="F#" Value="override this.CanConvertFrom : System.ComponentModel.ITypeDescriptorContext * Type -&gt; bool" Usage="pointConverter.CanConvertFrom (context, sourceType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="sourceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="b63db-108">格式化程序上下文。</span><span class="sxs-lookup"><span data-stu-id="b63db-108">A formatter context.</span></span> <span data-ttu-id="b63db-109">此对象可用于获取有关从中调用此转换器的环境的附加信息。</span><span class="sxs-lookup"><span data-stu-id="b63db-109">This object can be used to get additional information about the environment this converter is being called from.</span></span> <span data-ttu-id="b63db-110">这可能为 <see langword="null" />，因此应总是对其进行检查。</span><span class="sxs-lookup"><span data-stu-id="b63db-110">This may be <see langword="null" />, so you should always check.</span></span> <span data-ttu-id="b63db-111">同样，上下文对象上的属性也可能返回 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="b63db-111">Also, properties on the context object may also return <see langword="null" />.</span></span></param>
        <param name="sourceType"><span data-ttu-id="b63db-112">要从其进行转换的类型。</span><span class="sxs-lookup"><span data-stu-id="b63db-112">The type you want to convert from.</span></span></param>
        <summary><span data-ttu-id="b63db-113">确定该转换器是否可以将给定源类型的对象转换为转换器的本机类型。</span><span class="sxs-lookup"><span data-stu-id="b63db-113">Determines if this converter can convert an object in the given source type to the native type of the converter.</span></span></summary>
        <returns><span data-ttu-id="b63db-114">如果此对象可以执行转换，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="b63db-114"><see langword="true" /> if this object can perform the conversion; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertTo">
      <MemberSignature Language="C#" Value="public override bool CanConvertTo (System.ComponentModel.ITypeDescriptorContext context, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.PointConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanConvertTo (context As ITypeDescriptorContext, destinationType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanConvertTo(System::ComponentModel::ITypeDescriptorContext ^ context, Type ^ destinationType);" />
      <MemberSignature Language="F#" Value="override this.CanConvertTo : System.ComponentModel.ITypeDescriptorContext * Type -&gt; bool" Usage="pointConverter.CanConvertTo (context, destinationType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="b63db-115">一个提供格式上下文的 <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="b63db-115">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> object that provides a format context.</span></span></param>
        <param name="destinationType"><span data-ttu-id="b63db-116"><see cref="T:System.Type" /> 对象，它表示您希望转换为的类型。</span><span class="sxs-lookup"><span data-stu-id="b63db-116">A <see cref="T:System.Type" /> object that represents the type you want to convert to.</span></span></param>
        <summary><span data-ttu-id="b63db-117">获取一个值，该值指示此转换器能否使用上下文将对象转换为给定的目标类型。</span><span class="sxs-lookup"><span data-stu-id="b63db-117">Gets a value indicating whether this converter can convert an object to the given destination type using the context.</span></span></summary>
        <returns><span data-ttu-id="b63db-118">如果该转换器能够执行转换，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="b63db-118"><see langword="true" /> if this converter can perform the conversion; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b63db-119">`context`参数可用于获取有关从中调用此转换器的环境的其他信息。</span><span class="sxs-lookup"><span data-stu-id="b63db-119">The `context` parameter can be used to get additional information about the environment this converter is being called from.</span></span> <span data-ttu-id="b63db-120">这可能为 `null`，因此应总是对其进行检查。</span><span class="sxs-lookup"><span data-stu-id="b63db-120">This can be `null`, so you should always check.</span></span> <span data-ttu-id="b63db-121">同样，上下文对象上的属性也可能 `null`。</span><span class="sxs-lookup"><span data-stu-id="b63db-121">Also, properties on the context object can also return `null`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertFrom">
      <MemberSignature Language="C#" Value="public override object ConvertFrom (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.PointConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ConvertFrom (context As ITypeDescriptorContext, culture As CultureInfo, value As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="override this.ConvertFrom : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj -&gt; obj" Usage="pointConverter.ConvertFrom (context, culture, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="b63db-122">格式化程序上下文。</span><span class="sxs-lookup"><span data-stu-id="b63db-122">A formatter context.</span></span> <span data-ttu-id="b63db-123">此对象可用于获取有关从中调用此转换器的环境的附加信息。</span><span class="sxs-lookup"><span data-stu-id="b63db-123">This object can be used to get additional information about the environment this converter is being called from.</span></span> <span data-ttu-id="b63db-124">这可能为 <see langword="null" />，因此应总是对其进行检查。</span><span class="sxs-lookup"><span data-stu-id="b63db-124">This may be <see langword="null" />, so you should always check.</span></span> <span data-ttu-id="b63db-125">同样，上下文对象上的属性也可能返回 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="b63db-125">Also, properties on the context object may also return <see langword="null" />.</span></span></param>
        <param name="culture"><span data-ttu-id="b63db-126">包含区域性特定信息（如语言、日历和与特定区域性关联的区域性约定）的对象。</span><span class="sxs-lookup"><span data-stu-id="b63db-126">An object that contains culture specific information, such as the language, calendar, and cultural conventions associated with a specific culture.</span></span> <span data-ttu-id="b63db-127">它基于 RFC 1766 标准。</span><span class="sxs-lookup"><span data-stu-id="b63db-127">It is based on the RFC 1766 standard.</span></span></param>
        <param name="value"><span data-ttu-id="b63db-128">要转换的对象。</span><span class="sxs-lookup"><span data-stu-id="b63db-128">The object to convert.</span></span></param>
        <summary><span data-ttu-id="b63db-129">将指定对象转换为 <see cref="T:System.Drawing.Point" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="b63db-129">Converts the specified object to a <see cref="T:System.Drawing.Point" /> object.</span></span></summary>
        <returns><span data-ttu-id="b63db-130">被转换的对象。</span><span class="sxs-lookup"><span data-stu-id="b63db-130">The converted object.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="b63db-131">无法完成转换。</span><span class="sxs-lookup"><span data-stu-id="b63db-131">The conversion cannot be completed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ConvertTo">
      <MemberSignature Language="C#" Value="public override object ConvertTo (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.PointConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ConvertTo (context As ITypeDescriptorContext, culture As CultureInfo, value As Object, destinationType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ConvertTo(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ value, Type ^ destinationType);" />
      <MemberSignature Language="F#" Value="override this.ConvertTo : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj * Type -&gt; obj" Usage="pointConverter.ConvertTo (context, culture, value, destinationType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="b63db-132">格式化程序上下文。</span><span class="sxs-lookup"><span data-stu-id="b63db-132">A formatter context.</span></span> <span data-ttu-id="b63db-133">此对象可用于获取有关从中调用此转换器的环境的附加信息。</span><span class="sxs-lookup"><span data-stu-id="b63db-133">This object can be used to get additional information about the environment this converter is being called from.</span></span> <span data-ttu-id="b63db-134">这可能为 <see langword="null" />，因此应总是对其进行检查。</span><span class="sxs-lookup"><span data-stu-id="b63db-134">This may be <see langword="null" />, so you should always check.</span></span> <span data-ttu-id="b63db-135">同样，上下文对象上的属性也可能返回 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="b63db-135">Also, properties on the context object may also return <see langword="null" />.</span></span></param>
        <param name="culture"><span data-ttu-id="b63db-136">包含区域性特定信息（如语言、日历和与特定区域性关联的区域性约定）的对象。</span><span class="sxs-lookup"><span data-stu-id="b63db-136">An object that contains culture specific information, such as the language, calendar, and cultural conventions associated with a specific culture.</span></span> <span data-ttu-id="b63db-137">它基于 RFC 1766 标准。</span><span class="sxs-lookup"><span data-stu-id="b63db-137">It is based on the RFC 1766 standard.</span></span></param>
        <param name="value"><span data-ttu-id="b63db-138">要转换的对象。</span><span class="sxs-lookup"><span data-stu-id="b63db-138">The object to convert.</span></span></param>
        <param name="destinationType"><span data-ttu-id="b63db-139">对象要转换为的类型。</span><span class="sxs-lookup"><span data-stu-id="b63db-139">The type to convert the object to.</span></span></param>
        <summary><span data-ttu-id="b63db-140">将指定的对象转换成指定的类型。</span><span class="sxs-lookup"><span data-stu-id="b63db-140">Converts the specified object to the specified type.</span></span></summary>
        <returns><span data-ttu-id="b63db-141">被转换的对象。</span><span class="sxs-lookup"><span data-stu-id="b63db-141">The converted object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b63db-142">最常见的转换类型是与字符串对象的相互转换。</span><span class="sxs-lookup"><span data-stu-id="b63db-142">The most common types to convert are to and from a string object.</span></span> <span data-ttu-id="b63db-143"><xref:System.Object.ToString%2A>如果对象有效并且目标类型为 string，则默认实现将调用对象的方法。</span><span class="sxs-lookup"><span data-stu-id="b63db-143">The default implementation calls the object's <xref:System.Object.ToString%2A> method if the object is valid and if the destination type is string.</span></span> <span data-ttu-id="b63db-144">如果此方法无法转换为目标类型，则将引发 <xref:System.NotSupportedException> 异常。</span><span class="sxs-lookup"><span data-stu-id="b63db-144">If this method cannot convert to the destination type, this will throw a <xref:System.NotSupportedException> exception.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="b63db-145">无法完成转换。</span><span class="sxs-lookup"><span data-stu-id="b63db-145">The conversion cannot be completed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public override object CreateInstance (System.ComponentModel.ITypeDescriptorContext context, System.Collections.IDictionary propertyValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object CreateInstance(class System.ComponentModel.ITypeDescriptorContext context, class System.Collections.IDictionary propertyValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.PointConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CreateInstance (context As ITypeDescriptorContext, propertyValues As IDictionary) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ CreateInstance(System::ComponentModel::ITypeDescriptorContext ^ context, System::Collections::IDictionary ^ propertyValues);" />
      <MemberSignature Language="F#" Value="override this.CreateInstance : System.ComponentModel.ITypeDescriptorContext * System.Collections.IDictionary -&gt; obj" Usage="pointConverter.CreateInstance (context, propertyValues)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="propertyValues" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="b63db-146">可通过其提供附加上下文的类型说明符。</span><span class="sxs-lookup"><span data-stu-id="b63db-146">A type descriptor through which additional context can be provided.</span></span></param>
        <param name="propertyValues"><span data-ttu-id="b63db-147">新属性值的字典。</span><span class="sxs-lookup"><span data-stu-id="b63db-147">A dictionary of new property values.</span></span> <span data-ttu-id="b63db-148">该字典包括一系列名称-值对，每对对应一个从 <see cref="M:System.Drawing.PointConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])" /> 返回的属性。</span><span class="sxs-lookup"><span data-stu-id="b63db-148">The dictionary contains a series of name-value pairs, one for each property returned from <see cref="M:System.Drawing.PointConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])" />.</span></span></param>
        <summary><span data-ttu-id="b63db-149">已知对象的属性值集，创建此类型的实例。</span><span class="sxs-lookup"><span data-stu-id="b63db-149">Creates an instance of this type given a set of property values for the object.</span></span></summary>
        <returns><span data-ttu-id="b63db-150">新创建的对象；如果未能创建该对象，则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="b63db-150">The newly created object, or <see langword="null" /> if the object could not be created.</span></span> <span data-ttu-id="b63db-151">默认实现返回 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="b63db-151">The default implementation returns <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b63db-152"><xref:System.Drawing.PointConverter.CreateInstance%2A> 对于不可变但仍要提供可变属性的对象非常有用。</span><span class="sxs-lookup"><span data-stu-id="b63db-152"><xref:System.Drawing.PointConverter.CreateInstance%2A> is useful for objects that are immutable but still want to provide changeable properties.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCreateInstanceSupported">
      <MemberSignature Language="C#" Value="public override bool GetCreateInstanceSupported (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool GetCreateInstanceSupported(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.PointConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetCreateInstanceSupported (context As ITypeDescriptorContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool GetCreateInstanceSupported(System::ComponentModel::ITypeDescriptorContext ^ context);" />
      <MemberSignature Language="F#" Value="override this.GetCreateInstanceSupported : System.ComponentModel.ITypeDescriptorContext -&gt; bool" Usage="pointConverter.GetCreateInstanceSupported context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="b63db-153">通过其可提供附加上下文的 <see cref="T:System.ComponentModel.TypeDescriptor" />。</span><span class="sxs-lookup"><span data-stu-id="b63db-153">A <see cref="T:System.ComponentModel.TypeDescriptor" /> through which additional context can be provided.</span></span></param>
        <summary><span data-ttu-id="b63db-154">确定更改此对象的值是否需要调用 <see cref="M:System.Drawing.PointConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)" /> 以创建新值。</span><span class="sxs-lookup"><span data-stu-id="b63db-154">Determines if changing a value on this object should require a call to <see cref="M:System.Drawing.PointConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)" /> to create a new value.</span></span></summary>
        <returns><span data-ttu-id="b63db-155">如果在更改此对象的一个或多个属性时应当调用 <see cref="M:System.Drawing.PointConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)" /> 方法，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="b63db-155"><see langword="true" /> if the <see cref="M:System.Drawing.PointConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)" /> method should be called when a change is made to one or more properties of this object; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProperties">
      <MemberSignature Language="C#" Value="public override System.ComponentModel.PropertyDescriptorCollection GetProperties (System.ComponentModel.ITypeDescriptorContext context, object value, Attribute[] attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.ComponentModel.PropertyDescriptorCollection GetProperties(class System.ComponentModel.ITypeDescriptorContext context, object value, class System.Attribute[] attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.PointConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetProperties (context As ITypeDescriptorContext, value As Object, attributes As Attribute()) As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::ComponentModel::PropertyDescriptorCollection ^ GetProperties(System::ComponentModel::ITypeDescriptorContext ^ context, System::Object ^ value, cli::array &lt;Attribute ^&gt; ^ attributes);" />
      <MemberSignature Language="F#" Value="override this.GetProperties : System.ComponentModel.ITypeDescriptorContext * obj * Attribute[] -&gt; System.ComponentModel.PropertyDescriptorCollection" Usage="pointConverter.GetProperties (context, value, attributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="attributes" Type="System.Attribute[]" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="b63db-156">可通过其提供附加上下文的类型说明符。</span><span class="sxs-lookup"><span data-stu-id="b63db-156">A type descriptor through which additional context can be provided.</span></span></param>
        <param name="value"><span data-ttu-id="b63db-157">要获取其属性的对象的值。</span><span class="sxs-lookup"><span data-stu-id="b63db-157">The value of the object to get the properties for.</span></span></param>
        <param name="attributes"><span data-ttu-id="b63db-158">描述属性的 <see cref="T:System.Attribute" /> 对象数组。</span><span class="sxs-lookup"><span data-stu-id="b63db-158">An array of <see cref="T:System.Attribute" /> objects that describe the properties.</span></span></param>
        <summary><span data-ttu-id="b63db-159">检索此类型的属性集。</span><span class="sxs-lookup"><span data-stu-id="b63db-159">Retrieves the set of properties for this type.</span></span> <span data-ttu-id="b63db-160">默认情况下，类型不返回任何属性。</span><span class="sxs-lookup"><span data-stu-id="b63db-160">By default, a type does not return any properties.</span></span></summary>
        <returns><span data-ttu-id="b63db-161">为该数据类型公开的属性集。</span><span class="sxs-lookup"><span data-stu-id="b63db-161">The set of properties that are exposed for this data type.</span></span> <span data-ttu-id="b63db-162">如果未公开任何属性，则此方法可能返回 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="b63db-162">If no properties are exposed, this method might return <see langword="null" />.</span></span> <span data-ttu-id="b63db-163">默认实现始终返回 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="b63db-163">The default implementation always returns <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b63db-164">此方法的简单实现只能调用正确的 <xref:System.ComponentModel.TypeDescriptor.GetProperties%2A> 数据类型。</span><span class="sxs-lookup"><span data-stu-id="b63db-164">A simple implementation of this method can just call <xref:System.ComponentModel.TypeDescriptor.GetProperties%2A> for the correct data type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPropertiesSupported">
      <MemberSignature Language="C#" Value="public override bool GetPropertiesSupported (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool GetPropertiesSupported(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.PointConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetPropertiesSupported (context As ITypeDescriptorContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool GetPropertiesSupported(System::ComponentModel::ITypeDescriptorContext ^ context);" />
      <MemberSignature Language="F#" Value="override this.GetPropertiesSupported : System.ComponentModel.ITypeDescriptorContext -&gt; bool" Usage="pointConverter.GetPropertiesSupported context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="b63db-165">通过其可提供附加上下文的 <see cref="T:System.ComponentModel.TypeDescriptor" />。</span><span class="sxs-lookup"><span data-stu-id="b63db-165">A <see cref="T:System.ComponentModel.TypeDescriptor" /> through which additional context can be provided.</span></span></param>
        <summary><span data-ttu-id="b63db-166">确定该对象是否支持属性。</span><span class="sxs-lookup"><span data-stu-id="b63db-166">Determines if this object supports properties.</span></span> <span data-ttu-id="b63db-167">默认情况下，该属性为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="b63db-167">By default, this is <see langword="false" />.</span></span></summary>
        <returns><span data-ttu-id="b63db-168">如果应调用 <see langword="true" /> 来查找此对象的属性，则为 <see cref="M:System.Drawing.PointConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="b63db-168"><see langword="true" /> if <see cref="M:System.Drawing.PointConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])" /> should be called to find the properties of this object; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
