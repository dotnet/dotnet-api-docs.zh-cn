<Type Name="Pen" FullName="System.Drawing.Pen">
  <Metadata><Meta Name="ms.openlocfilehash" Value="8dffe08b55e04fc9c23dbde8ab49690542abde2a" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86819146" /></Metadata><TypeSignature Language="C#" Value="public sealed class Pen : MarshalByRefObject, ICloneable, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit Pen extends System.MarshalByRefObject implements class System.ICloneable, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Drawing.Pen" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class Pen&#xA;Inherits MarshalByRefObject&#xA;Implements ICloneable, IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class Pen sealed : MarshalByRefObject, ICloneable, IDisposable" />
  <TypeSignature Language="F#" Value="type Pen = class&#xA;    inherit MarshalByRefObject&#xA;    interface ICloneable&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Drawing</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Drawing.Common</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.1</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.MarshalByRefObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="950f3-101">定义用于绘制直线和曲线的对象。</span><span class="sxs-lookup"><span data-stu-id="950f3-101">Defines an object used to draw lines and curves.</span></span> <span data-ttu-id="950f3-102">此类不能被继承。</span><span class="sxs-lookup"><span data-stu-id="950f3-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="950f3-103"><xref:System.Drawing.Pen>绘制指定宽度和样式的线条。</span><span class="sxs-lookup"><span data-stu-id="950f3-103">A <xref:System.Drawing.Pen> draws a line of specified width and style.</span></span> <span data-ttu-id="950f3-104">使用 <xref:System.Drawing.Drawing2D.DashStyle> 属性可绘制多种虚线。</span><span class="sxs-lookup"><span data-stu-id="950f3-104">Use the <xref:System.Drawing.Drawing2D.DashStyle> property to draw several varieties of dashed lines.</span></span> <span data-ttu-id="950f3-105">绘制的线条 <xref:System.Drawing.Pen> 可以使用各种填充样式（包括纯色和纹理）进行填充。</span><span class="sxs-lookup"><span data-stu-id="950f3-105">The line drawn by a <xref:System.Drawing.Pen> can be filled in a variety of fill styles, including solid colors and textures.</span></span> <span data-ttu-id="950f3-106">填充样式取决于用作填充对象的画笔或纹理。</span><span class="sxs-lookup"><span data-stu-id="950f3-106">The fill style depends on brush or texture that is used as the fill object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="950f3-107">下面的代码示例演示如何 <xref:System.Drawing.Pen> 使用和在 <xref:System.Drawing.Pen.Brush%2A> 上设置属性的效果来构造 <xref:System.Drawing.Pen.LineJoin%2A> <xref:System.Drawing.Pen> 。</span><span class="sxs-lookup"><span data-stu-id="950f3-107">The following code example demonstrates constructing a <xref:System.Drawing.Pen> with a <xref:System.Drawing.Pen.Brush%2A> and the effects of setting the <xref:System.Drawing.Pen.LineJoin%2A> property on a <xref:System.Drawing.Pen>.</span></span>  
  
 <span data-ttu-id="950f3-108">此示例旨在与 Windows 窗体一起使用。</span><span class="sxs-lookup"><span data-stu-id="950f3-108">This example is designed to be used with Windows Forms.</span></span> <span data-ttu-id="950f3-109">将代码粘贴到窗体中，并 `ShowLineJoin` 在处理窗体事件时调用方法，并将 <xref:System.Windows.Forms.Control.Paint> `e` 作为传递 <xref:System.Windows.Forms.PaintEventArgs> 。</span><span class="sxs-lookup"><span data-stu-id="950f3-109">Paste the code into a form and call the `ShowLineJoin` method when handling the form's <xref:System.Windows.Forms.Control.Paint> event, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.</span></span>  
  
 [!code-cpp[System.Drawing.PensExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.PensExample/CPP/form1.cpp#1)]
 [!code-csharp[System.Drawing.PensExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.PensExample/CS/form1.cs#1)]
 [!code-vb[System.Drawing.PensExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.PensExample/VB/form1.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="950f3-110">用指定颜色初始化 <see cref="T:System.Drawing.Pen" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="950f3-110">Initializes a new instance of the <see cref="T:System.Drawing.Pen" /> class with the specified color.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Pen (System.Drawing.Brush brush);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Drawing.Brush brush) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Pen.#ctor(System.Drawing.Brush)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (brush As Brush)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Pen(System::Drawing::Brush ^ brush);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Pen : System.Drawing.Brush -&gt; System.Drawing.Pen" Usage="new System.Drawing.Pen brush" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="brush" Type="System.Drawing.Brush" />
      </Parameters>
      <Docs>
        <param name="brush"><span data-ttu-id="950f3-111">一个 <see cref="T:System.Drawing.Brush" />，确定该 <see cref="T:System.Drawing.Pen" /> 的填充属性。</span><span class="sxs-lookup"><span data-stu-id="950f3-111">A <see cref="T:System.Drawing.Brush" /> that determines the fill properties of this <see cref="T:System.Drawing.Pen" />.</span></span></param>
        <summary><span data-ttu-id="950f3-112">使用指定的 <see cref="T:System.Drawing.Pen" /> 初始化 <see cref="T:System.Drawing.Brush" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="950f3-112">Initializes a new instance of the <see cref="T:System.Drawing.Pen" /> class with the specified <see cref="T:System.Drawing.Brush" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="950f3-113"><xref:System.Drawing.Pen.Brush%2A>属性确定 <xref:System.Drawing.Pen> 绘制线条的方式。</span><span class="sxs-lookup"><span data-stu-id="950f3-113">The <xref:System.Drawing.Pen.Brush%2A> property determines how the <xref:System.Drawing.Pen> draws lines.</span></span> <span data-ttu-id="950f3-114">线条的绘制方式与填充的矩形相同，并具有指定的特征 <xref:System.Drawing.Brush> 。</span><span class="sxs-lookup"><span data-stu-id="950f3-114">Lines are drawn as if they are filled rectangles, with the characteristics of the specified <xref:System.Drawing.Brush>.</span></span>  
  
 <span data-ttu-id="950f3-115">新的的 <xref:System.Drawing.Pen.Width%2A> 属性 <xref:System.Drawing.Pen> 设置为 1 (默认) 。</span><span class="sxs-lookup"><span data-stu-id="950f3-115">The <xref:System.Drawing.Pen.Width%2A> property of the new <xref:System.Drawing.Pen> is set to 1 (the default).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="950f3-116">下面的代码示例演示如何 <xref:System.Drawing.Pen> 使用和在 <xref:System.Drawing.Pen.Brush%2A> 上设置属性的效果来构造 <xref:System.Drawing.Pen.LineJoin%2A> <xref:System.Drawing.Pen> 。</span><span class="sxs-lookup"><span data-stu-id="950f3-116">The following code example demonstrates constructing a <xref:System.Drawing.Pen> with a <xref:System.Drawing.Pen.Brush%2A> and the effects of setting the <xref:System.Drawing.Pen.LineJoin%2A> property on a <xref:System.Drawing.Pen>.</span></span>  
  
 <span data-ttu-id="950f3-117">此示例旨在与 Windows 窗体一起使用。</span><span class="sxs-lookup"><span data-stu-id="950f3-117">This example is designed to be used with Windows Forms.</span></span> <span data-ttu-id="950f3-118">将代码粘贴到窗体中，并 `ShowLineJoin` 在处理窗体事件时调用方法，并将 <xref:System.Windows.Forms.Control.Paint> `e` 作为传递 <xref:System.Windows.Forms.PaintEventArgs> 。</span><span class="sxs-lookup"><span data-stu-id="950f3-118">Paste the code into a form and call the `ShowLineJoin` method when handling the form's <xref:System.Windows.Forms.Control.Paint> event, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.</span></span>  
  
 [!code-cpp[System.Drawing.PensExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.PensExample/CPP/form1.cpp#1)]
 [!code-csharp[System.Drawing.PensExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.PensExample/CS/form1.cs#1)]
 [!code-vb[System.Drawing.PensExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.PensExample/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="950f3-119"><paramref name="brush" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="950f3-119"><paramref name="brush" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Pen (System.Drawing.Color color);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Drawing.Color color) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Pen.#ctor(System.Drawing.Color)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (color As Color)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Pen(System::Drawing::Color color);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Pen : System.Drawing.Color -&gt; System.Drawing.Pen" Usage="new System.Drawing.Pen color" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="color" Type="System.Drawing.Color" />
      </Parameters>
      <Docs>
        <param name="color"><span data-ttu-id="950f3-120"><see cref="T:System.Drawing.Color" /> 结构，指示此 <see cref="T:System.Drawing.Pen" /> 的颜色。</span><span class="sxs-lookup"><span data-stu-id="950f3-120">A <see cref="T:System.Drawing.Color" /> structure that indicates the color of this <see cref="T:System.Drawing.Pen" />.</span></span></param>
        <summary><span data-ttu-id="950f3-121">用指定颜色初始化 <see cref="T:System.Drawing.Pen" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="950f3-121">Initializes a new instance of the <see cref="T:System.Drawing.Pen" /> class with the specified color.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="950f3-122"><xref:System.Drawing.Color>属性设置为参数所指定的颜色 `color` 。</span><span class="sxs-lookup"><span data-stu-id="950f3-122">The <xref:System.Drawing.Color> property is set to the color specified by the `color` parameter.</span></span> <span data-ttu-id="950f3-123"><xref:System.Drawing.Pen.Width%2A>属性设置为 1 (默认) 。</span><span class="sxs-lookup"><span data-stu-id="950f3-123">The <xref:System.Drawing.Pen.Width%2A> property is set to 1 (the default).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Pen (System.Drawing.Brush brush, float width);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Drawing.Brush brush, float32 width) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Pen.#ctor(System.Drawing.Brush,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (brush As Brush, width As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Pen(System::Drawing::Brush ^ brush, float width);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Pen : System.Drawing.Brush * single -&gt; System.Drawing.Pen" Usage="new System.Drawing.Pen (brush, width)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="brush" Type="System.Drawing.Brush" />
        <Parameter Name="width" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="brush"><span data-ttu-id="950f3-124">一个 <see cref="T:System.Drawing.Brush" />，决定此 <see cref="T:System.Drawing.Pen" /> 的特征。</span><span class="sxs-lookup"><span data-stu-id="950f3-124">A <see cref="T:System.Drawing.Brush" /> that determines the characteristics of this <see cref="T:System.Drawing.Pen" />.</span></span></param>
        <param name="width"><span data-ttu-id="950f3-125">新 <see cref="T:System.Drawing.Pen" /> 的宽度。</span><span class="sxs-lookup"><span data-stu-id="950f3-125">The width of the new <see cref="T:System.Drawing.Pen" />.</span></span></param>
        <summary><span data-ttu-id="950f3-126">使用指定的 <see cref="T:System.Drawing.Pen" /> 和 <see cref="T:System.Drawing.Brush" /> 初始化 <see cref="P:System.Drawing.Pen.Width" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="950f3-126">Initializes a new instance of the <see cref="T:System.Drawing.Pen" /> class with the specified <see cref="T:System.Drawing.Brush" /> and <see cref="P:System.Drawing.Pen.Width" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="950f3-127"><xref:System.Drawing.Brush>设置为参数中指定的颜色 `brush` ， <xref:System.Drawing.Pen.Width%2A> 属性设置为参数中指定的值 `width` ，单位设置为 <xref:System.Drawing.GraphicsUnit.World> 。</span><span class="sxs-lookup"><span data-stu-id="950f3-127">The <xref:System.Drawing.Brush> is set to the color specified in the `brush` parameter, the <xref:System.Drawing.Pen.Width%2A> property is set to the value specified in the `width` parameter, and the units are set to <xref:System.Drawing.GraphicsUnit.World>.</span></span>  
  
 <span data-ttu-id="950f3-128">请注意， `brush` 参数还指定 <xref:System.Drawing.Color> 此的属性 <xref:System.Drawing.Pen> 。</span><span class="sxs-lookup"><span data-stu-id="950f3-128">Note that the `brush` parameter also specifies the <xref:System.Drawing.Color> property of this <xref:System.Drawing.Pen>.</span></span>  
  
 <span data-ttu-id="950f3-129">如果为0，则 `width` 将导致 <xref:System.Drawing.Pen> 绘图的宽度为1。</span><span class="sxs-lookup"><span data-stu-id="950f3-129">A `width` of 0 will result in the <xref:System.Drawing.Pen> drawing as if the width were 1.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="950f3-130">下面的代码示例创建一个 <xref:System.Drawing.Pen> ，并演示在 <xref:System.Drawing.Pen.StartCap%2A> 上设置和属性的效果 <xref:System.Drawing.Pen.EndCap%2A> <xref:System.Drawing.Pen> 。</span><span class="sxs-lookup"><span data-stu-id="950f3-130">The following code example creates a <xref:System.Drawing.Pen> and demonstrates the effects of setting the <xref:System.Drawing.Pen.StartCap%2A> and <xref:System.Drawing.Pen.EndCap%2A> properties on a <xref:System.Drawing.Pen>.</span></span>  
  
 <span data-ttu-id="950f3-131">此示例旨在与 Windows 窗体一起使用。</span><span class="sxs-lookup"><span data-stu-id="950f3-131">This example is designed to be used with Windows Forms.</span></span> <span data-ttu-id="950f3-132">将代码粘贴到窗体中，并 `ShowStartAndEndCaps` 在处理窗体事件时调用方法，并将 <xref:System.Windows.Forms.Control.Paint> `e` 作为传递 <xref:System.Windows.Forms.PaintEventArgs> 。</span><span class="sxs-lookup"><span data-stu-id="950f3-132">Paste the code into a form and call the `ShowStartAndEndCaps` method when handling the form's <xref:System.Windows.Forms.Control.Paint> event, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.</span></span>  
  
 [!code-cpp[System.Drawing.ImageExample#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ImageExample/CPP/form1.cpp#3)]
 [!code-csharp[System.Drawing.ImageExample#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ImageExample/CS/form1.cs#3)]
 [!code-vb[System.Drawing.ImageExample#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ImageExample/VB/form1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="950f3-133"><paramref name="brush" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="950f3-133"><paramref name="brush" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Pen (System.Drawing.Color color, float width);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Drawing.Color color, float32 width) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Pen.#ctor(System.Drawing.Color,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (color As Color, width As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Pen(System::Drawing::Color color, float width);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Pen : System.Drawing.Color * single -&gt; System.Drawing.Pen" Usage="new System.Drawing.Pen (color, width)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="color" Type="System.Drawing.Color" />
        <Parameter Name="width" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="color"><span data-ttu-id="950f3-134"><see cref="T:System.Drawing.Color" /> 结构，指示此 <see cref="T:System.Drawing.Pen" /> 的颜色。</span><span class="sxs-lookup"><span data-stu-id="950f3-134">A <see cref="T:System.Drawing.Color" /> structure that indicates the color of this <see cref="T:System.Drawing.Pen" />.</span></span></param>
        <param name="width"><span data-ttu-id="950f3-135">指示此 <see cref="T:System.Drawing.Pen" /> 的宽度的值。</span><span class="sxs-lookup"><span data-stu-id="950f3-135">A value indicating the width of this <see cref="T:System.Drawing.Pen" />.</span></span></param>
        <summary><span data-ttu-id="950f3-136">用指定的 <see cref="T:System.Drawing.Pen" /> 和 <see cref="T:System.Drawing.Color" /> 属性初始化 <see cref="P:System.Drawing.Pen.Width" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="950f3-136">Initializes a new instance of the <see cref="T:System.Drawing.Pen" /> class with the specified <see cref="T:System.Drawing.Color" /> and <see cref="P:System.Drawing.Pen.Width" /> properties.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="950f3-137"><xref:System.Drawing.Color>属性设置为参数所指定的颜色 `color` 。</span><span class="sxs-lookup"><span data-stu-id="950f3-137">The <xref:System.Drawing.Color> property is set to the color specified by the `color` parameter.</span></span> <span data-ttu-id="950f3-138">此 <xref:System.Drawing.Pen.Width%2A> 属性设置为参数中指定的值 `width` 。</span><span class="sxs-lookup"><span data-stu-id="950f3-138">The <xref:System.Drawing.Pen.Width%2A> property is set to the value specified in the `width` parameter.</span></span> <span data-ttu-id="950f3-139">如果为0，则 `width` 将导致 <xref:System.Drawing.Pen> 绘图的宽度为1。</span><span class="sxs-lookup"><span data-stu-id="950f3-139">A `width` of 0 will result in the <xref:System.Drawing.Pen> drawing as if the width were 1.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="950f3-140">下面的代码示例演示如何创建 <xref:System.Drawing.Pen> 和设置 <xref:System.Drawing.Pen.DashCap%2A> 、和属性的效果 <xref:System.Drawing.Pen.DashPattern%2A> <xref:System.Drawing.Graphics.SmoothingMode%2A> 。</span><span class="sxs-lookup"><span data-stu-id="950f3-140">The following code example demonstrates creating a <xref:System.Drawing.Pen> and the effects of setting the <xref:System.Drawing.Pen.DashCap%2A>, <xref:System.Drawing.Pen.DashPattern%2A>, and <xref:System.Drawing.Graphics.SmoothingMode%2A> properties.</span></span>  
  
 <span data-ttu-id="950f3-141">此示例旨在与 Windows 窗体一起使用。</span><span class="sxs-lookup"><span data-stu-id="950f3-141">This example is designed to be used with Windows Forms.</span></span> <span data-ttu-id="950f3-142">将代码粘贴到窗体中，并 `ShowPensAndSmoothingMode` 在处理窗体事件时调用方法，并将 <xref:System.Windows.Forms.Control.Paint> e 作为传递 <xref:System.Windows.Forms.PaintEventArgs> 。</span><span class="sxs-lookup"><span data-stu-id="950f3-142">Paste the code into a form and call the `ShowPensAndSmoothingMode` method when handling the form's <xref:System.Windows.Forms.Control.Paint> event, passing e as <xref:System.Windows.Forms.PaintEventArgs>.</span></span>  
  
 [!code-cpp[System.Drawing.PensExample#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.PensExample/CPP/form1.cpp#3)]
 [!code-csharp[System.Drawing.PensExample#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.PensExample/CS/form1.cs#3)]
 [!code-vb[System.Drawing.PensExample#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.PensExample/VB/form1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Alignment">
      <MemberSignature Language="C#" Value="public System.Drawing.Drawing2D.PenAlignment Alignment { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Drawing2D.PenAlignment Alignment" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Pen.Alignment" />
      <MemberSignature Language="VB.NET" Value="Public Property Alignment As PenAlignment" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Drawing2D::PenAlignment Alignment { System::Drawing::Drawing2D::PenAlignment get(); void set(System::Drawing::Drawing2D::PenAlignment value); };" />
      <MemberSignature Language="F#" Value="member this.Alignment : System.Drawing.Drawing2D.PenAlignment with get, set" Usage="System.Drawing.Pen.Alignment" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Drawing2D.PenAlignment</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="950f3-143">获取或设置此 <see cref="T:System.Drawing.Pen" /> 的对齐方式。</span><span class="sxs-lookup"><span data-stu-id="950f3-143">Gets or sets the alignment for this <see cref="T:System.Drawing.Pen" />.</span></span></summary>
        <value><span data-ttu-id="950f3-144">表示该 <see cref="T:System.Drawing.Drawing2D.PenAlignment" /> 的对齐方式的 <see cref="T:System.Drawing.Pen" />。</span><span class="sxs-lookup"><span data-stu-id="950f3-144">A <see cref="T:System.Drawing.Drawing2D.PenAlignment" /> that represents the alignment for this <see cref="T:System.Drawing.Pen" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="950f3-145">此属性确定 <xref:System.Drawing.Pen> 绘制闭合曲线和多边形的方式。</span><span class="sxs-lookup"><span data-stu-id="950f3-145">This property determines how the <xref:System.Drawing.Pen> draws closed curves and polygons.</span></span> <span data-ttu-id="950f3-146"><xref:System.Drawing.Drawing2D.PenAlignment>枚举指定5个值; 但是，只有两个值 <xref:System.Drawing.Drawing2D.PenAlignment.Center> <xref:System.Drawing.Drawing2D.PenAlignment.Inset> 会改变绘制线条的外观。</span><span class="sxs-lookup"><span data-stu-id="950f3-146">The <xref:System.Drawing.Drawing2D.PenAlignment> enumeration specifies five values; however, only two values - <xref:System.Drawing.Drawing2D.PenAlignment.Center> and <xref:System.Drawing.Drawing2D.PenAlignment.Inset> - will change the appearance of a drawn line.</span></span> <span data-ttu-id="950f3-147"><xref:System.Drawing.Drawing2D.PenAlignment.Center>此属性的默认值，它指定笔的宽度在曲线或多边形的轮廓上居中。</span><span class="sxs-lookup"><span data-stu-id="950f3-147"><xref:System.Drawing.Drawing2D.PenAlignment.Center> is the default value for this property and specifies that the width of the pen is centered on the outline of the curve or polygon.</span></span> <span data-ttu-id="950f3-148"><xref:System.Drawing.Drawing2D.PenAlignment.Inset>此属性的值指定笔的宽度位于曲线或多边形的轮廓内。</span><span class="sxs-lookup"><span data-stu-id="950f3-148">A value of <xref:System.Drawing.Drawing2D.PenAlignment.Inset> for this property specifies that the width of the pen is inside the outline of the curve or polygon.</span></span> <span data-ttu-id="950f3-149">其他三个值（ <xref:System.Drawing.Drawing2D.PenAlignment.Right> 、 <xref:System.Drawing.Drawing2D.PenAlignment.Left> 和 <xref:System.Drawing.Drawing2D.PenAlignment.Outset> ）将生成居中的笔。</span><span class="sxs-lookup"><span data-stu-id="950f3-149">The other three values, <xref:System.Drawing.Drawing2D.PenAlignment.Right>, <xref:System.Drawing.Drawing2D.PenAlignment.Left>, and <xref:System.Drawing.Drawing2D.PenAlignment.Outset>, will result in a pen that is centered.</span></span>  
  
 <span data-ttu-id="950f3-150">如果将 <xref:System.Drawing.Pen> 其对齐方式设置为， <xref:System.Drawing.Drawing2D.PenAlignment.Inset> 则会产生不可靠的结果，有时会在插入位置绘制，有时在居中位置。</span><span class="sxs-lookup"><span data-stu-id="950f3-150">A <xref:System.Drawing.Pen> that has its alignment set to <xref:System.Drawing.Drawing2D.PenAlignment.Inset> will yield unreliable results, sometimes drawing in the inset position and sometimes in the centered position.</span></span> <span data-ttu-id="950f3-151">此外，不能使用嵌入笔绘制复合线条，也不能用 <xref:System.Drawing.Drawing2D.DashCap.Triangle> 虚线帽绘制虚线。</span><span class="sxs-lookup"><span data-stu-id="950f3-151">Also, an inset pen cannot be used to draw compound lines and cannot draw dashed lines with <xref:System.Drawing.Drawing2D.DashCap.Triangle> dash caps.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><span data-ttu-id="950f3-152">指定值不是 <see cref="T:System.Drawing.Drawing2D.PenAlignment" /> 的成员。</span><span class="sxs-lookup"><span data-stu-id="950f3-152">The specified value is not a member of <see cref="T:System.Drawing.Drawing2D.PenAlignment" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="950f3-153">对不可变的 <see cref="P:System.Drawing.Pen.Alignment" />（比如由 <see cref="T:System.Drawing.Pen" /> 类所返回）设置 <see cref="T:System.Drawing.Pens" /> 属性。</span><span class="sxs-lookup"><span data-stu-id="950f3-153">The <see cref="P:System.Drawing.Pen.Alignment" /> property is set on an immutable <see cref="T:System.Drawing.Pen" />, such as those returned by the <see cref="T:System.Drawing.Pens" /> class.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Brush">
      <MemberSignature Language="C#" Value="public System.Drawing.Brush Brush { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Brush Brush" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Pen.Brush" />
      <MemberSignature Language="VB.NET" Value="Public Property Brush As Brush" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Brush ^ Brush { System::Drawing::Brush ^ get(); void set(System::Drawing::Brush ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Brush : System.Drawing.Brush with get, set" Usage="System.Drawing.Pen.Brush" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Brush</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="950f3-154">获取或设置 <see cref="T:System.Drawing.Brush" />，用于确定此 <see cref="T:System.Drawing.Pen" /> 的特性。</span><span class="sxs-lookup"><span data-stu-id="950f3-154">Gets or sets the <see cref="T:System.Drawing.Brush" /> that determines attributes of this <see cref="T:System.Drawing.Pen" />.</span></span></summary>
        <value><span data-ttu-id="950f3-155">一个 <see cref="T:System.Drawing.Brush" />，用于确定此 <see cref="T:System.Drawing.Pen" /> 的特性。</span><span class="sxs-lookup"><span data-stu-id="950f3-155">A <see cref="T:System.Drawing.Brush" /> that determines attributes of this <see cref="T:System.Drawing.Pen" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="950f3-156">分配此属性将导致笔绘制填充直线和曲线。</span><span class="sxs-lookup"><span data-stu-id="950f3-156">Assigning this property causes the pen to draw filled lines and curves.</span></span> <span data-ttu-id="950f3-157">它重写 <xref:System.Drawing.Color> 的属性 <xref:System.Drawing.Pen> 。</span><span class="sxs-lookup"><span data-stu-id="950f3-157">It overrides the <xref:System.Drawing.Color> property of the <xref:System.Drawing.Pen>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="950f3-158">对不可变的 <see cref="P:System.Drawing.Pen.Brush" />（比如由 <see cref="T:System.Drawing.Pen" /> 类所返回）设置 <see cref="T:System.Drawing.Pens" /> 属性。</span><span class="sxs-lookup"><span data-stu-id="950f3-158">The <see cref="P:System.Drawing.Pen.Brush" /> property is set on an immutable <see cref="T:System.Drawing.Pen" />, such as those returned by the <see cref="T:System.Drawing.Pens" /> class.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Pen.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Clone();" />
      <MemberSignature Language="F#" Value="abstract member Clone : unit -&gt; obj&#xA;override this.Clone : unit -&gt; obj" Usage="pen.Clone " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="950f3-159">创建此 <see cref="T:System.Drawing.Pen" /> 的一个精确副本。</span><span class="sxs-lookup"><span data-stu-id="950f3-159">Creates an exact copy of this <see cref="T:System.Drawing.Pen" />.</span></span></summary>
        <returns><span data-ttu-id="950f3-160">一个可以强制转换为 <see cref="T:System.Drawing.Pen" /> 的 <see cref="T:System.Object" />。</span><span class="sxs-lookup"><span data-stu-id="950f3-160">An <see cref="T:System.Object" /> that can be cast to a <see cref="T:System.Drawing.Pen" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="950f3-161">下面的代码示例旨在与 Windows 窗体一起使用，并且它需要作为 <xref:System.Windows.Forms.PaintEventArgs> `e` <xref:System.Windows.Forms.Control.Paint> 事件处理程序的参数。</span><span class="sxs-lookup"><span data-stu-id="950f3-161">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="950f3-162">此代码执行以下操作：</span><span class="sxs-lookup"><span data-stu-id="950f3-162">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="950f3-163">创建一个 <xref:System.Drawing.Pen>。</span><span class="sxs-lookup"><span data-stu-id="950f3-163">Creates a <xref:System.Drawing.Pen>.</span></span>  
  
-   <span data-ttu-id="950f3-164">创建该笔的副本。</span><span class="sxs-lookup"><span data-stu-id="950f3-164">Creates a copy of that pen.</span></span>  
  
-   <span data-ttu-id="950f3-165">使用笔的副本在屏幕上绘制线条。</span><span class="sxs-lookup"><span data-stu-id="950f3-165">Draws a line to the screen, using the copy of the pen.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicPenExamples#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicPenExamples/CPP/form1.cpp#1)]
 [!code-csharp[System.Drawing.ClassicPenExamples#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicPenExamples/CS/form1.cs#1)]
 [!code-vb[System.Drawing.ClassicPenExamples#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicPenExamples/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Color">
      <MemberSignature Language="C#" Value="public System.Drawing.Color Color { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color Color" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Pen.Color" />
      <MemberSignature Language="VB.NET" Value="Public Property Color As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color Color { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.Color : System.Drawing.Color with get, set" Usage="System.Drawing.Pen.Color" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="950f3-166">获取或设置此 <see cref="T:System.Drawing.Pen" /> 的颜色。</span><span class="sxs-lookup"><span data-stu-id="950f3-166">Gets or sets the color of this <see cref="T:System.Drawing.Pen" />.</span></span></summary>
        <value><span data-ttu-id="950f3-167">一个 <see cref="T:System.Drawing.Color" /> 结构，表示此 <see cref="T:System.Drawing.Pen" /> 的颜色。</span><span class="sxs-lookup"><span data-stu-id="950f3-167">A <see cref="T:System.Drawing.Color" /> structure that represents the color of this <see cref="T:System.Drawing.Pen" />.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="950f3-168">对不可变的 <see cref="P:System.Drawing.Pen.Color" />（比如由 <see cref="T:System.Drawing.Pen" /> 类所返回）设置 <see cref="T:System.Drawing.Pens" /> 属性。</span><span class="sxs-lookup"><span data-stu-id="950f3-168">The <see cref="P:System.Drawing.Pen.Color" /> property is set on an immutable <see cref="T:System.Drawing.Pen" />, such as those returned by the <see cref="T:System.Drawing.Pens" /> class.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CompoundArray">
      <MemberSignature Language="C#" Value="public float[] CompoundArray { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32[] CompoundArray" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Pen.CompoundArray" />
      <MemberSignature Language="VB.NET" Value="Public Property CompoundArray As Single()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;float&gt; ^ CompoundArray { cli::array &lt;float&gt; ^ get(); void set(cli::array &lt;float&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CompoundArray : single[] with get, set" Usage="System.Drawing.Pen.CompoundArray" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="950f3-169">获取或设置用于指定复合钢笔的值数组。</span><span class="sxs-lookup"><span data-stu-id="950f3-169">Gets or sets an array of values that specifies a compound pen.</span></span> <span data-ttu-id="950f3-170">复合钢笔绘制由平行直线和空白区域组成的复合直线。</span><span class="sxs-lookup"><span data-stu-id="950f3-170">A compound pen draws a compound line made up of parallel lines and spaces.</span></span></summary>
        <value><span data-ttu-id="950f3-171">用于指定复合数组的实数组。</span><span class="sxs-lookup"><span data-stu-id="950f3-171">An array of real numbers that specifies the compound array.</span></span> <span data-ttu-id="950f3-172">该数组中的元素必须按升序排列，不能小于 0，也不能大于 1。</span><span class="sxs-lookup"><span data-stu-id="950f3-172">The elements in the array must be in increasing order, not less than 0, and not greater than 1.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="950f3-173">复合行由不同宽度的交替行和空格组成。</span><span class="sxs-lookup"><span data-stu-id="950f3-173">A compound line is made up of alternating parallel lines and spaces of varying widths.</span></span> <span data-ttu-id="950f3-174">数组中的值指定复合行的每个组件相对于钢笔宽度的起点。</span><span class="sxs-lookup"><span data-stu-id="950f3-174">The values in the array specify the starting points of each component of the compound line relative to the pen's width.</span></span> <span data-ttu-id="950f3-175">数组中的第一个值指定第一个组件 (线条的位置) 从笔宽度的距离部分开始。</span><span class="sxs-lookup"><span data-stu-id="950f3-175">The first value in the array specifies where the first component (a line) begins as a fraction of the distance across the width of the pen.</span></span> <span data-ttu-id="950f3-176">数组中的第二个值指定下一个组件的开始位置 (一个空间) 为笔宽度的一小部分。</span><span class="sxs-lookup"><span data-stu-id="950f3-176">The second value in the array specifies the beginning of the next component (a space) as a fraction of the distance across the width of the pen.</span></span> <span data-ttu-id="950f3-177">数组中的最后一个值指定最后一个组件的结束位置。</span><span class="sxs-lookup"><span data-stu-id="950f3-177">The final value in the array specifies where the last component ends.</span></span>  
  
 <span data-ttu-id="950f3-178">假设您想要一笔绘制两条平行线，其中第一行的宽度是笔宽度的20%，分隔这两行的空间的宽度是笔宽度的50%，第二行的宽度是笔宽度的30%。</span><span class="sxs-lookup"><span data-stu-id="950f3-178">Suppose you want a pen to draw two parallel lines where the width of the first line is 20 percent of the pen's width, the width of the space that separates the two lines is 50 percent of the pen' s width, and the width of the second line is 30 percent of the pen's width.</span></span> <span data-ttu-id="950f3-179">首先，创建一个 <xref:System.Drawing.Pen> 和一个实数数组。</span><span class="sxs-lookup"><span data-stu-id="950f3-179">Start by creating a <xref:System.Drawing.Pen> and an array of real numbers.</span></span> <span data-ttu-id="950f3-180">通过将值为0.0、0.2、0.7 和1.0 的数组传递到此属性来设置复合数组。</span><span class="sxs-lookup"><span data-stu-id="950f3-180">Set the compound array by passing the array with the values 0.0, 0.2, 0.7, and 1.0 to this property.</span></span>  
  
 <span data-ttu-id="950f3-181">如果将 <xref:System.Drawing.Pen> 其 <xref:System.Drawing.Pen.Alignment%2A> 属性设置为，则不要设置此属性 <xref:System.Drawing.Drawing2D.PenAlignment.Inset> 。</span><span class="sxs-lookup"><span data-stu-id="950f3-181">Do not set this property if the <xref:System.Drawing.Pen> has its <xref:System.Drawing.Pen.Alignment%2A> property set to <xref:System.Drawing.Drawing2D.PenAlignment.Inset>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="950f3-182">对不可变的 <see cref="P:System.Drawing.Pen.CompoundArray" />（比如由 <see cref="T:System.Drawing.Pen" /> 类所返回）设置 <see cref="T:System.Drawing.Pens" /> 属性。</span><span class="sxs-lookup"><span data-stu-id="950f3-182">The <see cref="P:System.Drawing.Pen.CompoundArray" /> property is set on an immutable <see cref="T:System.Drawing.Pen" />, such as those returned by the <see cref="T:System.Drawing.Pens" /> class.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CustomEndCap">
      <MemberSignature Language="C#" Value="public System.Drawing.Drawing2D.CustomLineCap CustomEndCap { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Drawing2D.CustomLineCap CustomEndCap" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Pen.CustomEndCap" />
      <MemberSignature Language="VB.NET" Value="Public Property CustomEndCap As CustomLineCap" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Drawing2D::CustomLineCap ^ CustomEndCap { System::Drawing::Drawing2D::CustomLineCap ^ get(); void set(System::Drawing::Drawing2D::CustomLineCap ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CustomEndCap : System.Drawing.Drawing2D.CustomLineCap with get, set" Usage="System.Drawing.Pen.CustomEndCap" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Drawing2D.CustomLineCap</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="950f3-183">获取或设置要在通过此 <see cref="T:System.Drawing.Pen" /> 绘制的直线终点使用的自定义线帽。</span><span class="sxs-lookup"><span data-stu-id="950f3-183">Gets or sets a custom cap to use at the end of lines drawn with this <see cref="T:System.Drawing.Pen" />.</span></span></summary>
        <value><span data-ttu-id="950f3-184">一个 <see cref="T:System.Drawing.Drawing2D.CustomLineCap" />，表示在通过此 <see cref="T:System.Drawing.Pen" /> 绘制的直线终点使用的线帽。</span><span class="sxs-lookup"><span data-stu-id="950f3-184">A <see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> that represents the cap used at the end of lines drawn with this <see cref="T:System.Drawing.Pen" />.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="950f3-185">对不可变的 <see cref="P:System.Drawing.Pen.CustomEndCap" />（比如由 <see cref="T:System.Drawing.Pen" /> 类所返回）设置 <see cref="T:System.Drawing.Pens" /> 属性。</span><span class="sxs-lookup"><span data-stu-id="950f3-185">The <see cref="P:System.Drawing.Pen.CustomEndCap" /> property is set on an immutable <see cref="T:System.Drawing.Pen" />, such as those returned by the <see cref="T:System.Drawing.Pens" /> class.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CustomStartCap">
      <MemberSignature Language="C#" Value="public System.Drawing.Drawing2D.CustomLineCap CustomStartCap { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Drawing2D.CustomLineCap CustomStartCap" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Pen.CustomStartCap" />
      <MemberSignature Language="VB.NET" Value="Public Property CustomStartCap As CustomLineCap" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Drawing2D::CustomLineCap ^ CustomStartCap { System::Drawing::Drawing2D::CustomLineCap ^ get(); void set(System::Drawing::Drawing2D::CustomLineCap ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CustomStartCap : System.Drawing.Drawing2D.CustomLineCap with get, set" Usage="System.Drawing.Pen.CustomStartCap" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Drawing2D.CustomLineCap</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="950f3-186">获取或设置要在通过此 <see cref="T:System.Drawing.Pen" /> 绘制的直线起点使用的自定义线帽。</span><span class="sxs-lookup"><span data-stu-id="950f3-186">Gets or sets a custom cap to use at the beginning of lines drawn with this <see cref="T:System.Drawing.Pen" />.</span></span></summary>
        <value><span data-ttu-id="950f3-187">一个 <see cref="T:System.Drawing.Drawing2D.CustomLineCap" />，表示在通过此 <see cref="T:System.Drawing.Pen" /> 绘制的直线起点使用的线帽。</span><span class="sxs-lookup"><span data-stu-id="950f3-187">A <see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> that represents the cap used at the beginning of lines drawn with this <see cref="T:System.Drawing.Pen" />.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="950f3-188">对不可变的 <see cref="P:System.Drawing.Pen.CustomStartCap" />（比如由 <see cref="T:System.Drawing.Pen" /> 类所返回）设置 <see cref="T:System.Drawing.Pens" /> 属性。</span><span class="sxs-lookup"><span data-stu-id="950f3-188">The <see cref="P:System.Drawing.Pen.CustomStartCap" /> property is set on an immutable <see cref="T:System.Drawing.Pen" />, such as those returned by the <see cref="T:System.Drawing.Pens" /> class.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DashCap">
      <MemberSignature Language="C#" Value="public System.Drawing.Drawing2D.DashCap DashCap { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Drawing2D.DashCap DashCap" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Pen.DashCap" />
      <MemberSignature Language="VB.NET" Value="Public Property DashCap As DashCap" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Drawing2D::DashCap DashCap { System::Drawing::Drawing2D::DashCap get(); void set(System::Drawing::Drawing2D::DashCap value); };" />
      <MemberSignature Language="F#" Value="member this.DashCap : System.Drawing.Drawing2D.DashCap with get, set" Usage="System.Drawing.Pen.DashCap" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Drawing2D.DashCap</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="950f3-189">获取或设置用在短划线终点的线帽样式，这些短划线构成通过此 <see cref="T:System.Drawing.Pen" /> 绘制的虚线。</span><span class="sxs-lookup"><span data-stu-id="950f3-189">Gets or sets the cap style used at the end of the dashes that make up dashed lines drawn with this <see cref="T:System.Drawing.Pen" />.</span></span></summary>
        <value><span data-ttu-id="950f3-190"><see cref="T:System.Drawing.Drawing2D.DashCap" /> 值之一，表示用在短划线起点和终点的线帽样式，这些短划线构成通过此 <see cref="T:System.Drawing.Pen" /> 绘制的虚线。</span><span class="sxs-lookup"><span data-stu-id="950f3-190">One of the <see cref="T:System.Drawing.Drawing2D.DashCap" /> values that represents the cap style used at the beginning and end of the dashes that make up dashed lines drawn with this <see cref="T:System.Drawing.Pen" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="950f3-191">如果将此属性 <xref:System.Drawing.Drawing2D.DashCap.Triangle> 的 <xref:System.Drawing.Pen> <xref:System.Drawing.Pen.Alignment%2A> 属性设置为，则不要将此属性设置为 <xref:System.Drawing.Drawing2D.PenAlignment.Inset> 。</span><span class="sxs-lookup"><span data-stu-id="950f3-191">Do not set this property to <xref:System.Drawing.Drawing2D.DashCap.Triangle> if the <xref:System.Drawing.Pen> has its <xref:System.Drawing.Pen.Alignment%2A> property set to <xref:System.Drawing.Drawing2D.PenAlignment.Inset>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="950f3-192">下面的代码示例演示如何创建 <xref:System.Drawing.Pen> 和设置 <xref:System.Drawing.Pen.DashCap%2A> 、和属性的效果 <xref:System.Drawing.Pen.DashPattern%2A> <xref:System.Drawing.Graphics.SmoothingMode%2A> 。</span><span class="sxs-lookup"><span data-stu-id="950f3-192">The following code example demonstrates creating a <xref:System.Drawing.Pen> and the effects of setting the <xref:System.Drawing.Pen.DashCap%2A>, <xref:System.Drawing.Pen.DashPattern%2A>, and <xref:System.Drawing.Graphics.SmoothingMode%2A> properties.</span></span>  
  
 <span data-ttu-id="950f3-193">此示例旨在与 Windows 窗体一起使用。</span><span class="sxs-lookup"><span data-stu-id="950f3-193">This example is designed to be used with Windows Forms.</span></span> <span data-ttu-id="950f3-194">将代码粘贴到窗体中，并 `ShowPensAndSmoothingMode` 在处理窗体事件时调用方法，并将 <xref:System.Windows.Forms.Control.Paint> `e` 作为传递 <xref:System.Windows.Forms.PaintEventArgs> 。</span><span class="sxs-lookup"><span data-stu-id="950f3-194">Paste the code into a form and call the `ShowPensAndSmoothingMode` method when handling the form's <xref:System.Windows.Forms.Control.Paint> event, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.</span></span>  
  
 [!code-cpp[System.Drawing.PensExample#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.PensExample/CPP/form1.cpp#3)]
 [!code-csharp[System.Drawing.PensExample#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.PensExample/CS/form1.cs#3)]
 [!code-vb[System.Drawing.PensExample#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.PensExample/VB/form1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><span data-ttu-id="950f3-195">指定值不是 <see cref="T:System.Drawing.Drawing2D.DashCap" /> 的成员。</span><span class="sxs-lookup"><span data-stu-id="950f3-195">The specified value is not a member of <see cref="T:System.Drawing.Drawing2D.DashCap" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="950f3-196">对不可变的 <see cref="P:System.Drawing.Pen.DashCap" />（比如由 <see cref="T:System.Drawing.Pen" /> 类所返回）设置 <see cref="T:System.Drawing.Pens" /> 属性。</span><span class="sxs-lookup"><span data-stu-id="950f3-196">The <see cref="P:System.Drawing.Pen.DashCap" /> property is set on an immutable <see cref="T:System.Drawing.Pen" />, such as those returned by the <see cref="T:System.Drawing.Pens" /> class.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DashOffset">
      <MemberSignature Language="C#" Value="public float DashOffset { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 DashOffset" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Pen.DashOffset" />
      <MemberSignature Language="VB.NET" Value="Public Property DashOffset As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property float DashOffset { float get(); void set(float value); };" />
      <MemberSignature Language="F#" Value="member this.DashOffset : single with get, set" Usage="System.Drawing.Pen.DashOffset" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="950f3-197">获取或设置直线的起点到短划线图案起始处的距离。</span><span class="sxs-lookup"><span data-stu-id="950f3-197">Gets or sets the distance from the start of a line to the beginning of a dash pattern.</span></span></summary>
        <value><span data-ttu-id="950f3-198">直线的起点到短划线图案起始处的距离。</span><span class="sxs-lookup"><span data-stu-id="950f3-198">The distance from the start of a line to the beginning of a dash pattern.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="950f3-199">对不可变的 <see cref="P:System.Drawing.Pen.DashOffset" />（比如由 <see cref="T:System.Drawing.Pen" /> 类所返回）设置 <see cref="T:System.Drawing.Pens" /> 属性。</span><span class="sxs-lookup"><span data-stu-id="950f3-199">The <see cref="P:System.Drawing.Pen.DashOffset" /> property is set on an immutable <see cref="T:System.Drawing.Pen" />, such as those returned by the <see cref="T:System.Drawing.Pens" /> class.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DashPattern">
      <MemberSignature Language="C#" Value="public float[] DashPattern { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32[] DashPattern" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Pen.DashPattern" />
      <MemberSignature Language="VB.NET" Value="Public Property DashPattern As Single()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;float&gt; ^ DashPattern { cli::array &lt;float&gt; ^ get(); void set(cli::array &lt;float&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DashPattern : single[] with get, set" Usage="System.Drawing.Pen.DashPattern" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="950f3-200">获取或设置自定义的短划线和空白区域的数组。</span><span class="sxs-lookup"><span data-stu-id="950f3-200">Gets or sets an array of custom dashes and spaces.</span></span></summary>
        <value><span data-ttu-id="950f3-201">实数数组，指定虚线中交替出现的短划线和空白区域的长度。</span><span class="sxs-lookup"><span data-stu-id="950f3-201">An array of real numbers that specifies the lengths of alternating dashes and spaces in dashed lines.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="950f3-202">如果为此属性指定的值不是 `null` ，则会将 <xref:System.Drawing.Drawing2D.DashStyle> 此的属性设置 <xref:System.Drawing.Pen> 为 <xref:System.Drawing.Drawing2D.DashStyle.Custom> 。</span><span class="sxs-lookup"><span data-stu-id="950f3-202">Assigning a value other than `null` to this property will set the <xref:System.Drawing.Drawing2D.DashStyle> property for this <xref:System.Drawing.Pen> to <xref:System.Drawing.Drawing2D.DashStyle.Custom>.</span></span>  
  
 <span data-ttu-id="950f3-203">数组中的元素 `dashArray` 设置破折号模式中每个短划线和空间的长度。</span><span class="sxs-lookup"><span data-stu-id="950f3-203">The elements in the `dashArray` array set the length of each dash and space in the dash pattern.</span></span> <span data-ttu-id="950f3-204">第一个元素设置短划线的长度，第二个元素设置空格的长度，第三个元素设置短划线的长度，依此类推。</span><span class="sxs-lookup"><span data-stu-id="950f3-204">The first element sets the length of a dash, the second element sets the length of a space, the third element sets the length of a dash, and so on.</span></span> <span data-ttu-id="950f3-205">因此，每个元素应为非零正数。</span><span class="sxs-lookup"><span data-stu-id="950f3-205">Consequently, each element should be a non-zero positive number.</span></span>  
  
 <span data-ttu-id="950f3-206">破折号模式中每个短划线和空间的长度是数组中元素值和的宽度的乘积 <xref:System.Drawing.Pen> 。</span><span class="sxs-lookup"><span data-stu-id="950f3-206">The length of each dash and space in the dash pattern is the product of the element value in the array and the width of the <xref:System.Drawing.Pen>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="950f3-207">下面的代码示例演示设置 <xref:System.Drawing.Pen.DashCap%2A> 、和属性的效果 <xref:System.Drawing.Pen.DashPattern%2A> <xref:System.Drawing.Graphics.SmoothingMode%2A> 。</span><span class="sxs-lookup"><span data-stu-id="950f3-207">The following code example demonstrates the effects of setting the <xref:System.Drawing.Pen.DashCap%2A>, <xref:System.Drawing.Pen.DashPattern%2A>, and <xref:System.Drawing.Graphics.SmoothingMode%2A> properties.</span></span>  
  
 <span data-ttu-id="950f3-208">此示例旨在与 Windows 窗体一起使用。</span><span class="sxs-lookup"><span data-stu-id="950f3-208">This example is designed to be used with Windows Forms.</span></span> <span data-ttu-id="950f3-209">将代码粘贴到窗体中，并 `ShowPensAndSmoothingMode` 在处理窗体事件时调用方法，并将 <xref:System.Windows.Forms.Control.Paint> `e` 作为传递 <xref:System.Windows.Forms.PaintEventArgs> 。</span><span class="sxs-lookup"><span data-stu-id="950f3-209">Paste the code into a form and call the `ShowPensAndSmoothingMode` method when handling the form's <xref:System.Windows.Forms.Control.Paint> event, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.</span></span>  
  
 [!code-cpp[System.Drawing.PensExample#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.PensExample/CPP/form1.cpp#3)]
 [!code-csharp[System.Drawing.PensExample#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.PensExample/CS/form1.cs#3)]
 [!code-vb[System.Drawing.PensExample#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.PensExample/VB/form1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="950f3-210">对不可变的 <see cref="P:System.Drawing.Pen.DashPattern" />（比如由 <see cref="T:System.Drawing.Pen" /> 类所返回）设置 <see cref="T:System.Drawing.Pens" /> 属性。</span><span class="sxs-lookup"><span data-stu-id="950f3-210">The <see cref="P:System.Drawing.Pen.DashPattern" /> property is set on an immutable <see cref="T:System.Drawing.Pen" />, such as those returned by the <see cref="T:System.Drawing.Pens" /> class.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DashStyle">
      <MemberSignature Language="C#" Value="public System.Drawing.Drawing2D.DashStyle DashStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Drawing2D.DashStyle DashStyle" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Pen.DashStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property DashStyle As DashStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Drawing2D::DashStyle DashStyle { System::Drawing::Drawing2D::DashStyle get(); void set(System::Drawing::Drawing2D::DashStyle value); };" />
      <MemberSignature Language="F#" Value="member this.DashStyle : System.Drawing.Drawing2D.DashStyle with get, set" Usage="System.Drawing.Pen.DashStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Drawing2D.DashStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="950f3-211">获取或设置用于通过此 <see cref="T:System.Drawing.Pen" /> 绘制的虚线的样式。</span><span class="sxs-lookup"><span data-stu-id="950f3-211">Gets or sets the style used for dashed lines drawn with this <see cref="T:System.Drawing.Pen" />.</span></span></summary>
        <value><span data-ttu-id="950f3-212">一个 <see cref="T:System.Drawing.Drawing2D.DashStyle" />，表示用于通过此 <see cref="T:System.Drawing.Pen" /> 绘制的虚线的样式。</span><span class="sxs-lookup"><span data-stu-id="950f3-212">A <see cref="T:System.Drawing.Drawing2D.DashStyle" /> that represents the style used for dashed lines drawn with this <see cref="T:System.Drawing.Pen" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="950f3-213">如果此属性的值为，则 <xref:System.Drawing.Drawing2D.DashStyle.Custom> 指定由属性定义的虚线和空格的自定义模式 <xref:System.Drawing.Pen.DashPattern%2A> 构成使用此绘制的直线 <xref:System.Drawing.Pen> 。</span><span class="sxs-lookup"><span data-stu-id="950f3-213">A value of <xref:System.Drawing.Drawing2D.DashStyle.Custom> for this property specifies that a custom pattern of dashes and spaces, defined by the <xref:System.Drawing.Pen.DashPattern%2A> property, makes up lines drawn with this <xref:System.Drawing.Pen>.</span></span> <span data-ttu-id="950f3-214">如果此属性的值为， <xref:System.Drawing.Drawing2D.DashStyle.Custom> 并且属性的值 <xref:System.Drawing.Pen.DashPattern%2A> 为，则 `null` 笔绘制实线。</span><span class="sxs-lookup"><span data-stu-id="950f3-214">If the value of this property is <xref:System.Drawing.Drawing2D.DashStyle.Custom> and the value of the <xref:System.Drawing.Pen.DashPattern%2A> property is `null`, the pen draws solid lines.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="950f3-215">对不可变的 <see cref="P:System.Drawing.Pen.DashStyle" />（比如由 <see cref="T:System.Drawing.Pen" /> 类所返回）设置 <see cref="T:System.Drawing.Pens" /> 属性。</span><span class="sxs-lookup"><span data-stu-id="950f3-215">The <see cref="P:System.Drawing.Pen.DashStyle" /> property is set on an immutable <see cref="T:System.Drawing.Pen" />, such as those returned by the <see cref="T:System.Drawing.Pens" /> class.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Pen.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="pen.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="950f3-216">释放此 <see cref="T:System.Drawing.Pen" /> 使用的所有资源。</span><span class="sxs-lookup"><span data-stu-id="950f3-216">Releases all resources used by this <see cref="T:System.Drawing.Pen" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="950f3-217">调用 <xref:System.Drawing.Pen.Dispose%2A> 会允许出于其他目的重新分配此所使用的资源 <xref:System.Drawing.Brush> 。</span><span class="sxs-lookup"><span data-stu-id="950f3-217">Calling <xref:System.Drawing.Pen.Dispose%2A> allows the resources used by this <xref:System.Drawing.Brush> to be reallocated for other purposes.</span></span>  
  
 <span data-ttu-id="950f3-218">在完成使用 <xref:System.Drawing.Pen.Dispose%2A> 后，应调用 <xref:System.Drawing.Pen>。</span><span class="sxs-lookup"><span data-stu-id="950f3-218">Call <xref:System.Drawing.Pen.Dispose%2A> when you are finished using the <xref:System.Drawing.Pen>.</span></span> <span data-ttu-id="950f3-219"><xref:System.Drawing.Pen.Dispose%2A> 方法使 <xref:System.Drawing.Pen> 处于不可用状态。</span><span class="sxs-lookup"><span data-stu-id="950f3-219">The <xref:System.Drawing.Pen.Dispose%2A> method leaves the <xref:System.Drawing.Pen> in an unusable state.</span></span> <span data-ttu-id="950f3-220">调用后 <xref:System.Drawing.Pen.Dispose%2A> ，必须释放对的所有引用， <xref:System.Drawing.Pen> 以便垃圾回收器能够回收占用的内存 <xref:System.Drawing.Pen> 。</span><span class="sxs-lookup"><span data-stu-id="950f3-220">After calling <xref:System.Drawing.Pen.Dispose%2A>, you must release all references to the <xref:System.Drawing.Pen> so the garbage collector can reclaim the memory that the <xref:System.Drawing.Pen> was occupying.</span></span> <span data-ttu-id="950f3-221">有关详细信息，请参阅[清理非托管资源](/dotnet/standard/garbage-collection/unmanaged)和[实现 Dispose 方法](/dotnet/standard/garbage-collection/implementing-dispose)。</span><span class="sxs-lookup"><span data-stu-id="950f3-221">For more information, see [Cleaning Up Unmanaged Resources](/dotnet/standard/garbage-collection/unmanaged) and [Implementing a Dispose Method](/dotnet/standard/garbage-collection/implementing-dispose).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="950f3-222">每次释放对 <xref:System.Drawing.Pen.Dispose%2A> 的最后一个引用前，均应调用 <xref:System.Drawing.Pen>。</span><span class="sxs-lookup"><span data-stu-id="950f3-222">Always call <xref:System.Drawing.Pen.Dispose%2A> before you release your last reference to the <xref:System.Drawing.Pen>.</span></span> <span data-ttu-id="950f3-223">否则，在垃圾回收器调用 <xref:System.Drawing.Pen> 对象的 `Finalize` 方法之前，该对象正在使用的资源不会被释放。</span><span class="sxs-lookup"><span data-stu-id="950f3-223">Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Drawing.Pen> object's `Finalize` method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="950f3-224">下面的代码示例演示了设置 <xref:System.Drawing.Pen.Width%2A> 和属性的效果 <xref:System.Drawing.Pen.LineJoin%2A> ，并演示了如何调用的 <xref:System.Drawing.Pen.Dispose%2A> 方法 <xref:System.Drawing.Pen> 。</span><span class="sxs-lookup"><span data-stu-id="950f3-224">The following code example demonstrates the effects of setting the <xref:System.Drawing.Pen.Width%2A> and <xref:System.Drawing.Pen.LineJoin%2A> properties, and shows how to call the <xref:System.Drawing.Pen.Dispose%2A> method for a <xref:System.Drawing.Pen>.</span></span>  
  
 <span data-ttu-id="950f3-225">此示例旨在与 Windows 窗体一起使用。</span><span class="sxs-lookup"><span data-stu-id="950f3-225">This example is designed to be used with Windows Forms.</span></span> <span data-ttu-id="950f3-226">将代码粘贴到窗体中，并 `ShowLineJoin` 在处理窗体事件时调用方法，并将 <xref:System.Windows.Forms.Control.Paint> `e` 作为传递 <xref:System.Windows.Forms.PaintEventArgs> 。</span><span class="sxs-lookup"><span data-stu-id="950f3-226">Paste the code into a form and call the `ShowLineJoin` method when handling the form's <xref:System.Windows.Forms.Control.Paint> event, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.</span></span>  
  
 [!code-cpp[System.Drawing.PensExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.PensExample/CPP/form1.cpp#1)]
 [!code-csharp[System.Drawing.PensExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.PensExample/CS/form1.cs#1)]
 [!code-vb[System.Drawing.PensExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.PensExample/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndCap">
      <MemberSignature Language="C#" Value="public System.Drawing.Drawing2D.LineCap EndCap { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Drawing2D.LineCap EndCap" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Pen.EndCap" />
      <MemberSignature Language="VB.NET" Value="Public Property EndCap As LineCap" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Drawing2D::LineCap EndCap { System::Drawing::Drawing2D::LineCap get(); void set(System::Drawing::Drawing2D::LineCap value); };" />
      <MemberSignature Language="F#" Value="member this.EndCap : System.Drawing.Drawing2D.LineCap with get, set" Usage="System.Drawing.Pen.EndCap" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Drawing2D.LineCap</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="950f3-227">获取或设置要在通过此 <see cref="T:System.Drawing.Pen" /> 绘制的直线终点使用的线帽样式。</span><span class="sxs-lookup"><span data-stu-id="950f3-227">Gets or sets the cap style used at the end of lines drawn with this <see cref="T:System.Drawing.Pen" />.</span></span></summary>
        <value><span data-ttu-id="950f3-228"><see cref="T:System.Drawing.Drawing2D.LineCap" /> 值之一，表示在通过此 <see cref="T:System.Drawing.Pen" /> 绘制的直线终点使用的线帽样式。</span><span class="sxs-lookup"><span data-stu-id="950f3-228">One of the <see cref="T:System.Drawing.Drawing2D.LineCap" /> values that represents the cap style used at the end of lines drawn with this <see cref="T:System.Drawing.Pen" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="950f3-229">下面的代码示例演示了 <xref:System.Drawing.Pen.StartCap%2A> 在上设置和属性的影响 <xref:System.Drawing.Pen.EndCap%2A> <xref:System.Drawing.Pen> 。</span><span class="sxs-lookup"><span data-stu-id="950f3-229">The following code example demonstrates the effects of setting the <xref:System.Drawing.Pen.StartCap%2A> and <xref:System.Drawing.Pen.EndCap%2A> properties on a <xref:System.Drawing.Pen>.</span></span>  
  
 <span data-ttu-id="950f3-230">此示例旨在与 Windows 窗体一起使用。</span><span class="sxs-lookup"><span data-stu-id="950f3-230">This example is designed to be used with Windows Forms.</span></span> <span data-ttu-id="950f3-231">将代码粘贴到窗体中，并 `ShowStartAndEndCaps` 在处理窗体事件时调用方法，并将 <xref:System.Windows.Forms.Control.Paint> `e` 作为传递 <xref:System.Windows.Forms.PaintEventArgs> 。</span><span class="sxs-lookup"><span data-stu-id="950f3-231">Paste the code into a form and call the `ShowStartAndEndCaps` method when handling the form's <xref:System.Windows.Forms.Control.Paint> event, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.</span></span>  
  
 [!code-cpp[System.Drawing.PensExample#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.PensExample/CPP/form1.cpp#2)]
 [!code-csharp[System.Drawing.PensExample#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.PensExample/CS/form1.cs#2)]
 [!code-vb[System.Drawing.PensExample#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.PensExample/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><span data-ttu-id="950f3-232">指定值不是 <see cref="T:System.Drawing.Drawing2D.LineCap" /> 的成员。</span><span class="sxs-lookup"><span data-stu-id="950f3-232">The specified value is not a member of <see cref="T:System.Drawing.Drawing2D.LineCap" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="950f3-233">对不可变的 <see cref="P:System.Drawing.Pen.EndCap" />（比如由 <see cref="T:System.Drawing.Pen" /> 类所返回）设置 <see cref="T:System.Drawing.Pens" /> 属性。</span><span class="sxs-lookup"><span data-stu-id="950f3-233">The <see cref="P:System.Drawing.Pen.EndCap" /> property is set on an immutable <see cref="T:System.Drawing.Pen" />, such as those returned by the <see cref="T:System.Drawing.Pens" /> class.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~Pen ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Pen.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!Pen ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="pen.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="950f3-234">在垃圾回收将某一对象回收前允许该对象尝试释放资源并执行其他清理操作。</span><span class="sxs-lookup"><span data-stu-id="950f3-234">Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LineJoin">
      <MemberSignature Language="C#" Value="public System.Drawing.Drawing2D.LineJoin LineJoin { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Drawing2D.LineJoin LineJoin" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Pen.LineJoin" />
      <MemberSignature Language="VB.NET" Value="Public Property LineJoin As LineJoin" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Drawing2D::LineJoin LineJoin { System::Drawing::Drawing2D::LineJoin get(); void set(System::Drawing::Drawing2D::LineJoin value); };" />
      <MemberSignature Language="F#" Value="member this.LineJoin : System.Drawing.Drawing2D.LineJoin with get, set" Usage="System.Drawing.Pen.LineJoin" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Drawing2D.LineJoin</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="950f3-235">获取或设置通过此 <see cref="T:System.Drawing.Pen" /> 绘制的两条连续直线的端点的联接样式。</span><span class="sxs-lookup"><span data-stu-id="950f3-235">Gets or sets the join style for the ends of two consecutive lines drawn with this <see cref="T:System.Drawing.Pen" />.</span></span></summary>
        <value><span data-ttu-id="950f3-236">一个 <see cref="T:System.Drawing.Drawing2D.LineJoin" />，表示通过此 <see cref="T:System.Drawing.Pen" /> 绘制的两条连续直线的端点的联接样式。</span><span class="sxs-lookup"><span data-stu-id="950f3-236">A <see cref="T:System.Drawing.Drawing2D.LineJoin" /> that represents the join style for the ends of two consecutive lines drawn with this <see cref="T:System.Drawing.Pen" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="950f3-237">行联接是由两行构成的通用区域，它们的结束时间都达到或重叠。</span><span class="sxs-lookup"><span data-stu-id="950f3-237">A line join is the common area that is formed by two lines whose ends meet or overlap.</span></span> <span data-ttu-id="950f3-238">有三个线条联接样式：斜接、凹凸和圆形。</span><span class="sxs-lookup"><span data-stu-id="950f3-238">There are three line join styles: miter, bevel, and round.</span></span> <span data-ttu-id="950f3-239">为对象指定线条联接样式时 <xref:System.Drawing.Pen> ，该联接样式将应用于 <xref:System.Drawing.Drawing2D.GraphicsPath> 使用该钢笔绘制的任何对象中的所有连接行。</span><span class="sxs-lookup"><span data-stu-id="950f3-239">When you specify a line join style for a <xref:System.Drawing.Pen> object, that join style will be applied to all the connected lines in any <xref:System.Drawing.Drawing2D.GraphicsPath> object drawn using that pen.</span></span> <span data-ttu-id="950f3-240">下图显示了斜切行联接示例的结果。</span><span class="sxs-lookup"><span data-stu-id="950f3-240">The following illustration shows the results of the beveled line join example.</span></span>  
  
 <span data-ttu-id="950f3-241">![笔](~/add/media/pens5.gif "笔")</span><span class="sxs-lookup"><span data-stu-id="950f3-241">![Pens](~/add/media/pens5.gif "Pens")</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="950f3-242">下面的代码示例演示了 <xref:System.Drawing.Pen.Width%2A> 在上设置和属性的影响 <xref:System.Drawing.Pen.LineJoin%2A> <xref:System.Drawing.Pen> 。</span><span class="sxs-lookup"><span data-stu-id="950f3-242">The following code example demonstrates the effects of setting the <xref:System.Drawing.Pen.Width%2A> and <xref:System.Drawing.Pen.LineJoin%2A> properties on a <xref:System.Drawing.Pen>.</span></span>  
  
 <span data-ttu-id="950f3-243">此示例旨在与 Windows 窗体一起使用。</span><span class="sxs-lookup"><span data-stu-id="950f3-243">This example is designed to be used with Windows Forms.</span></span> <span data-ttu-id="950f3-244">将代码粘贴到窗体中，并 `ShowLineJoin` 在处理窗体事件时调用方法，并将 <xref:System.Windows.Forms.Control.Paint> `e` 作为传递 <xref:System.Windows.Forms.PaintEventArgs> 。</span><span class="sxs-lookup"><span data-stu-id="950f3-244">Paste the code into a form and call the `ShowLineJoin` method when handling the form's <xref:System.Windows.Forms.Control.Paint> event, passing `e` as <xref:System.Windows.Forms.PaintEventArgs> .</span></span>  
  
 [!code-cpp[System.Drawing.PensExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.PensExample/CPP/form1.cpp#1)]
 [!code-csharp[System.Drawing.PensExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.PensExample/CS/form1.cs#1)]
 [!code-vb[System.Drawing.PensExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.PensExample/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="950f3-245">对不可变的 <see cref="P:System.Drawing.Pen.LineJoin" />（比如由 <see cref="T:System.Drawing.Pen" /> 类所返回）设置 <see cref="T:System.Drawing.Pens" /> 属性。</span><span class="sxs-lookup"><span data-stu-id="950f3-245">The <see cref="P:System.Drawing.Pen.LineJoin" /> property is set on an immutable <see cref="T:System.Drawing.Pen" />, such as those returned by the <see cref="T:System.Drawing.Pens" /> class.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="MiterLimit">
      <MemberSignature Language="C#" Value="public float MiterLimit { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 MiterLimit" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Pen.MiterLimit" />
      <MemberSignature Language="VB.NET" Value="Public Property MiterLimit As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property float MiterLimit { float get(); void set(float value); };" />
      <MemberSignature Language="F#" Value="member this.MiterLimit : single with get, set" Usage="System.Drawing.Pen.MiterLimit" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="950f3-246">获取或设置斜接角上联接宽度的限制。</span><span class="sxs-lookup"><span data-stu-id="950f3-246">Gets or sets the limit of the thickness of the join on a mitered corner.</span></span></summary>
        <value><span data-ttu-id="950f3-247">斜接角上联接宽度的限制。</span><span class="sxs-lookup"><span data-stu-id="950f3-247">The limit of the thickness of the join on a mitered corner.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="950f3-248">斜接长度是从联接内的直线壁与联接外线条壁的交点之间的距离。</span><span class="sxs-lookup"><span data-stu-id="950f3-248">The miter length is the distance from the intersection of the line walls on the inside of the join to the intersection of the line walls outside of the join.</span></span> <span data-ttu-id="950f3-249">如果两条线之间的角度很小，则斜接长度可能会很大。</span><span class="sxs-lookup"><span data-stu-id="950f3-249">The miter length can be large when the angle between two lines is small.</span></span> <span data-ttu-id="950f3-250">斜接限制是最大允许的斜接长度与笔划宽度之间的比值。</span><span class="sxs-lookup"><span data-stu-id="950f3-250">The miter limit is the maximum allowed ratio of miter length to stroke width.</span></span> <span data-ttu-id="950f3-251">默认值为 10.0 f。</span><span class="sxs-lookup"><span data-stu-id="950f3-251">The default value is 10.0f.</span></span>  
  
 <span data-ttu-id="950f3-252">如果交集联接的斜接长度超出联接的限制，则联接将会被斜切，使其保持在交集联接的限制范围内。</span><span class="sxs-lookup"><span data-stu-id="950f3-252">If the miter length of the join of the intersection exceeds the limit of the join, then the join will be beveled to keep it within the limit of the join of the intersection.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="950f3-253">对不可变的 <see cref="P:System.Drawing.Pen.MiterLimit" />（比如由 <see cref="T:System.Drawing.Pen" /> 类所返回）设置 <see cref="T:System.Drawing.Pens" /> 属性。</span><span class="sxs-lookup"><span data-stu-id="950f3-253">The <see cref="P:System.Drawing.Pen.MiterLimit" /> property is set on an immutable <see cref="T:System.Drawing.Pen" />, such as those returned by the <see cref="T:System.Drawing.Pens" /> class.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="MultiplyTransform">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="950f3-254">用指定的 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 乘以此 <see cref="T:System.Drawing.Pen" /> 的转换矩阵。</span><span class="sxs-lookup"><span data-stu-id="950f3-254">Multiplies the transformation matrix for this <see cref="T:System.Drawing.Pen" /> by the specified <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="MultiplyTransform">
      <MemberSignature Language="C#" Value="public void MultiplyTransform (System.Drawing.Drawing2D.Matrix matrix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void MultiplyTransform(class System.Drawing.Drawing2D.Matrix matrix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Pen.MultiplyTransform(System.Drawing.Drawing2D.Matrix)" />
      <MemberSignature Language="VB.NET" Value="Public Sub MultiplyTransform (matrix As Matrix)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void MultiplyTransform(System::Drawing::Drawing2D::Matrix ^ matrix);" />
      <MemberSignature Language="F#" Value="member this.MultiplyTransform : System.Drawing.Drawing2D.Matrix -&gt; unit" Usage="pen.MultiplyTransform matrix" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="matrix" Type="System.Drawing.Drawing2D.Matrix" />
      </Parameters>
      <Docs>
        <param name="matrix"><span data-ttu-id="950f3-255">用来乘转换矩阵的 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="950f3-255">The <see cref="T:System.Drawing.Drawing2D.Matrix" /> object by which to multiply the transformation matrix.</span></span></param>
        <summary><span data-ttu-id="950f3-256">用指定的 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 乘以此 <see cref="T:System.Drawing.Pen" /> 的转换矩阵。</span><span class="sxs-lookup"><span data-stu-id="950f3-256">Multiplies the transformation matrix for this <see cref="T:System.Drawing.Pen" /> by the specified <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="950f3-257">此方法将参数中指定的乘法矩阵前面预置 `matrix` 到乘法运算的变换矩阵。</span><span class="sxs-lookup"><span data-stu-id="950f3-257">This method prepends the multiplication matrix specified in the `matrix` parameter to the transformation matrix for the multiplication operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="950f3-258">下面的代码示例旨在与 Windows 窗体一起使用，并且它需要作为 <xref:System.Windows.Forms.PaintEventArgs> `e` <xref:System.Windows.Forms.Control.Paint> 事件处理程序的参数。</span><span class="sxs-lookup"><span data-stu-id="950f3-258">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="950f3-259">此代码执行以下操作：</span><span class="sxs-lookup"><span data-stu-id="950f3-259">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="950f3-260">创建一个 <xref:System.Drawing.Pen>。</span><span class="sxs-lookup"><span data-stu-id="950f3-260">Creates a <xref:System.Drawing.Pen>.</span></span>  
  
-   <span data-ttu-id="950f3-261">在屏幕上绘制线条。</span><span class="sxs-lookup"><span data-stu-id="950f3-261">Draws a line to the screen.</span></span>  
  
-   <span data-ttu-id="950f3-262">将笔的变换矩阵与指定的矩阵相乘。</span><span class="sxs-lookup"><span data-stu-id="950f3-262">Multiplies the transformation matrix of the pen by the specified matrix.</span></span>  
  
-   <span data-ttu-id="950f3-263">使用转换后的笔绘制一条直线。</span><span class="sxs-lookup"><span data-stu-id="950f3-263">Draws a line with the transformed pen.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicPenExamples#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicPenExamples/CPP/form1.cpp#2)]
 [!code-csharp[System.Drawing.ClassicPenExamples#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicPenExamples/CS/form1.cs#2)]
 [!code-vb[System.Drawing.ClassicPenExamples#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicPenExamples/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MultiplyTransform">
      <MemberSignature Language="C#" Value="public void MultiplyTransform (System.Drawing.Drawing2D.Matrix matrix, System.Drawing.Drawing2D.MatrixOrder order);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void MultiplyTransform(class System.Drawing.Drawing2D.Matrix matrix, valuetype System.Drawing.Drawing2D.MatrixOrder order) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Pen.MultiplyTransform(System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.MatrixOrder)" />
      <MemberSignature Language="VB.NET" Value="Public Sub MultiplyTransform (matrix As Matrix, order As MatrixOrder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void MultiplyTransform(System::Drawing::Drawing2D::Matrix ^ matrix, System::Drawing::Drawing2D::MatrixOrder order);" />
      <MemberSignature Language="F#" Value="member this.MultiplyTransform : System.Drawing.Drawing2D.Matrix * System.Drawing.Drawing2D.MatrixOrder -&gt; unit" Usage="pen.MultiplyTransform (matrix, order)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="matrix" Type="System.Drawing.Drawing2D.Matrix" />
        <Parameter Name="order" Type="System.Drawing.Drawing2D.MatrixOrder" />
      </Parameters>
      <Docs>
        <param name="matrix"><span data-ttu-id="950f3-264">用来乘变换矩阵的 <see cref="T:System.Drawing.Drawing2D.Matrix" />。</span><span class="sxs-lookup"><span data-stu-id="950f3-264">The <see cref="T:System.Drawing.Drawing2D.Matrix" /> by which to multiply the transformation matrix.</span></span></param>
        <param name="order"><span data-ttu-id="950f3-265">执行乘法运算的顺序。</span><span class="sxs-lookup"><span data-stu-id="950f3-265">The order in which to perform the multiplication operation.</span></span></param>
        <summary><span data-ttu-id="950f3-266">按照指定的顺序，用指定的 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 乘以此 <see cref="T:System.Drawing.Pen" /> 的变换矩阵。</span><span class="sxs-lookup"><span data-stu-id="950f3-266">Multiplies the transformation matrix for this <see cref="T:System.Drawing.Pen" /> by the specified <see cref="T:System.Drawing.Drawing2D.Matrix" /> in the specified order.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="950f3-267">此方法使用 <xref:System.Drawing.Drawing2D.MatrixOrder> 枚举元素， (预置或追加参数指定的) `order` 以执行乘法运算。</span><span class="sxs-lookup"><span data-stu-id="950f3-267">This method uses the <xref:System.Drawing.Drawing2D.MatrixOrder> enumeration element (either prepend or append) specified by the `order` parameter to carry out the multiplication operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="950f3-268">下面的代码示例旨在与 Windows 窗体一起使用，并且它需要作为 <xref:System.Windows.Forms.PaintEventArgs> `e` <xref:System.Windows.Forms.Control.Paint> 事件处理程序的参数。</span><span class="sxs-lookup"><span data-stu-id="950f3-268">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="950f3-269">此代码执行以下操作：</span><span class="sxs-lookup"><span data-stu-id="950f3-269">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="950f3-270">创建一个 <xref:System.Drawing.Pen>。</span><span class="sxs-lookup"><span data-stu-id="950f3-270">Creates a <xref:System.Drawing.Pen>.</span></span>  
  
-   <span data-ttu-id="950f3-271">在屏幕上绘制线条。</span><span class="sxs-lookup"><span data-stu-id="950f3-271">Draws a line to the screen.</span></span>  
  
-   <span data-ttu-id="950f3-272">将笔的变换矩阵与指定的矩阵相乘。</span><span class="sxs-lookup"><span data-stu-id="950f3-272">Multiplies the transformation matrix of the pen by the specified matrix.</span></span>  
  
-   <span data-ttu-id="950f3-273">使用转换后的笔绘制一条直线。</span><span class="sxs-lookup"><span data-stu-id="950f3-273">Draws a line with the transformed pen.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicPenExamples#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicPenExamples/CPP/form1.cpp#3)]
 [!code-csharp[System.Drawing.ClassicPenExamples#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicPenExamples/CS/form1.cs#3)]
 [!code-vb[System.Drawing.ClassicPenExamples#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicPenExamples/VB/form1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PenType">
      <MemberSignature Language="C#" Value="public System.Drawing.Drawing2D.PenType PenType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Drawing2D.PenType PenType" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Pen.PenType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PenType As PenType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Drawing2D::PenType PenType { System::Drawing::Drawing2D::PenType get(); };" />
      <MemberSignature Language="F#" Value="member this.PenType : System.Drawing.Drawing2D.PenType" Usage="System.Drawing.Pen.PenType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Drawing2D.PenType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="950f3-274">获取用此 <see cref="T:System.Drawing.Pen" /> 绘制的直线的样式。</span><span class="sxs-lookup"><span data-stu-id="950f3-274">Gets the style of lines drawn with this <see cref="T:System.Drawing.Pen" />.</span></span></summary>
        <value><span data-ttu-id="950f3-275"><see cref="T:System.Drawing.Drawing2D.PenType" /> 枚举，指定用此 <see cref="T:System.Drawing.Pen" /> 绘制的直线的样式。</span><span class="sxs-lookup"><span data-stu-id="950f3-275">A <see cref="T:System.Drawing.Drawing2D.PenType" /> enumeration that specifies the style of lines drawn with this <see cref="T:System.Drawing.Pen" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="950f3-276"><xref:System.Drawing.Pen>根据枚举的成员指定的样式，可以绘制实线、已填充的线条或纹理线条 <xref:System.Drawing.Drawing2D.PenType> 。</span><span class="sxs-lookup"><span data-stu-id="950f3-276">A <xref:System.Drawing.Pen> can draw solid lines, filled lines, or textured lines, depending on the style specified by a member of the <xref:System.Drawing.Drawing2D.PenType> enumeration.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetTransform">
      <MemberSignature Language="C#" Value="public void ResetTransform ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResetTransform() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Pen.ResetTransform" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetTransform ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetTransform();" />
      <MemberSignature Language="F#" Value="member this.ResetTransform : unit -&gt; unit" Usage="pen.ResetTransform " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="950f3-277">将此 <see cref="T:System.Drawing.Pen" /> 的几何变换矩阵重置为单位矩阵。</span><span class="sxs-lookup"><span data-stu-id="950f3-277">Resets the geometric transformation matrix for this <see cref="T:System.Drawing.Pen" /> to identity.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="950f3-278">下面的代码示例旨在与 Windows 窗体一起使用，并且它需要作为 <xref:System.Windows.Forms.PaintEventArgs> `e` <xref:System.Windows.Forms.Control.Paint> 事件处理程序的参数。</span><span class="sxs-lookup"><span data-stu-id="950f3-278">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="950f3-279">此代码执行以下操作：</span><span class="sxs-lookup"><span data-stu-id="950f3-279">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="950f3-280">创建一个 <xref:System.Drawing.Pen>。</span><span class="sxs-lookup"><span data-stu-id="950f3-280">Creates a <xref:System.Drawing.Pen>.</span></span>  
  
-   <span data-ttu-id="950f3-281">将笔的变换矩阵设置为 x 轴方向的2倍。</span><span class="sxs-lookup"><span data-stu-id="950f3-281">Sets the transformation matrix of the pen to scale 2 times in the x-axis direction.</span></span>  
  
-   <span data-ttu-id="950f3-282">在屏幕上绘制线条。</span><span class="sxs-lookup"><span data-stu-id="950f3-282">Draws a line to the screen.</span></span>  
  
-   <span data-ttu-id="950f3-283">将变换矩阵重置为标识。</span><span class="sxs-lookup"><span data-stu-id="950f3-283">Resets the transformation matrix to identity.</span></span>  
  
-   <span data-ttu-id="950f3-284">在屏幕上绘制第二行。</span><span class="sxs-lookup"><span data-stu-id="950f3-284">Draws a second line to the screen.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicPenExamples#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicPenExamples/CPP/form1.cpp#4)]
 [!code-csharp[System.Drawing.ClassicPenExamples#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicPenExamples/CS/form1.cs#4)]
 [!code-vb[System.Drawing.ClassicPenExamples#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicPenExamples/VB/form1.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="RotateTransform">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="950f3-285">将局部几何转换旋转指定角度。</span><span class="sxs-lookup"><span data-stu-id="950f3-285">Rotates the local geometric transformation by the specified angle.</span></span> <span data-ttu-id="950f3-286">此方法将旋转添加到转换前。</span><span class="sxs-lookup"><span data-stu-id="950f3-286">This method prepends the rotation to the transformation.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RotateTransform">
      <MemberSignature Language="C#" Value="public void RotateTransform (float angle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RotateTransform(float32 angle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Pen.RotateTransform(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RotateTransform (angle As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RotateTransform(float angle);" />
      <MemberSignature Language="F#" Value="member this.RotateTransform : single -&gt; unit" Usage="pen.RotateTransform angle" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="angle" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="angle"><span data-ttu-id="950f3-287">旋转角度。</span><span class="sxs-lookup"><span data-stu-id="950f3-287">The angle of rotation.</span></span></param>
        <summary><span data-ttu-id="950f3-288">将局部几何转换旋转指定角度。</span><span class="sxs-lookup"><span data-stu-id="950f3-288">Rotates the local geometric transformation by the specified angle.</span></span> <span data-ttu-id="950f3-289">此方法将旋转添加到转换前。</span><span class="sxs-lookup"><span data-stu-id="950f3-289">This method prepends the rotation to the transformation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="950f3-290">因为笔的形状是圆形的，所以旋转不会有任何明显的效果，除非笔在 x 轴或 y 轴方向缩放。</span><span class="sxs-lookup"><span data-stu-id="950f3-290">Because the shape of a pen is circular, a rotation does not have any visible effect unless the pen is scaled in the x- or y-axis direction.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="950f3-291">下面的代码示例旨在与 Windows 窗体一起使用，并且它需要作为 <xref:System.Windows.Forms.PaintEventArgs> `e` <xref:System.Windows.Forms.Control.Paint> 事件处理程序的参数。</span><span class="sxs-lookup"><span data-stu-id="950f3-291">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="950f3-292">此代码执行以下操作：</span><span class="sxs-lookup"><span data-stu-id="950f3-292">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="950f3-293">创建一个 <xref:System.Drawing.Pen>。</span><span class="sxs-lookup"><span data-stu-id="950f3-293">Creates a <xref:System.Drawing.Pen>.</span></span>  
  
-   <span data-ttu-id="950f3-294">使用笔绘制矩形。</span><span class="sxs-lookup"><span data-stu-id="950f3-294">Draws a rectangle using the pen.</span></span>  
  
-   <span data-ttu-id="950f3-295">在 x 轴方向上将笔按2次缩放。</span><span class="sxs-lookup"><span data-stu-id="950f3-295">Scales the pen by 2 times in the x-axis direction.</span></span>  
  
-   <span data-ttu-id="950f3-296">将笔顺时针旋转90度。</span><span class="sxs-lookup"><span data-stu-id="950f3-296">Rotates the pen 90 degrees clockwise.</span></span>  
  
-   <span data-ttu-id="950f3-297">绘制第二个矩形以演示差异。</span><span class="sxs-lookup"><span data-stu-id="950f3-297">Draws a second rectangle to demonstrate the difference.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicPenExamples#5](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicPenExamples/CPP/form1.cpp#5)]
 [!code-csharp[System.Drawing.ClassicPenExamples#5](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicPenExamples/CS/form1.cs#5)]
 [!code-vb[System.Drawing.ClassicPenExamples#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicPenExamples/VB/form1.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RotateTransform">
      <MemberSignature Language="C#" Value="public void RotateTransform (float angle, System.Drawing.Drawing2D.MatrixOrder order);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RotateTransform(float32 angle, valuetype System.Drawing.Drawing2D.MatrixOrder order) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Pen.RotateTransform(System.Single,System.Drawing.Drawing2D.MatrixOrder)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RotateTransform (angle As Single, order As MatrixOrder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RotateTransform(float angle, System::Drawing::Drawing2D::MatrixOrder order);" />
      <MemberSignature Language="F#" Value="member this.RotateTransform : single * System.Drawing.Drawing2D.MatrixOrder -&gt; unit" Usage="pen.RotateTransform (angle, order)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="angle" Type="System.Single" />
        <Parameter Name="order" Type="System.Drawing.Drawing2D.MatrixOrder" />
      </Parameters>
      <Docs>
        <param name="angle"><span data-ttu-id="950f3-298">旋转角度。</span><span class="sxs-lookup"><span data-stu-id="950f3-298">The angle of rotation.</span></span></param>
        <param name="order"><span data-ttu-id="950f3-299">一个 <see cref="T:System.Drawing.Drawing2D.MatrixOrder" />，它指定是在后面追加旋转矩阵还是在前面添加旋转矩阵。</span><span class="sxs-lookup"><span data-stu-id="950f3-299">A <see cref="T:System.Drawing.Drawing2D.MatrixOrder" /> that specifies whether to append or prepend the rotation matrix.</span></span></param>
        <summary><span data-ttu-id="950f3-300">以指定顺序将局部几何变换旋转指定角度。</span><span class="sxs-lookup"><span data-stu-id="950f3-300">Rotates the local geometric transformation by the specified angle in the specified order.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="950f3-301">因为笔的形状是圆形的，所以旋转不会有任何明显的效果，除非笔在 x 轴或 y 轴方向缩放。</span><span class="sxs-lookup"><span data-stu-id="950f3-301">Because the shape of a pen is circular, a rotation does not have any visible effect unless the pen is scaled in the x- or y-axis direction.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="950f3-302">下面的代码示例旨在与 Windows 窗体一起使用，并且它需要作为 <xref:System.Windows.Forms.PaintEventArgs> `e` <xref:System.Windows.Forms.Control.Paint> 事件处理程序的参数。</span><span class="sxs-lookup"><span data-stu-id="950f3-302">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="950f3-303">此代码执行以下操作：</span><span class="sxs-lookup"><span data-stu-id="950f3-303">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="950f3-304">创建一个 <xref:System.Drawing.Pen>。</span><span class="sxs-lookup"><span data-stu-id="950f3-304">Creates a <xref:System.Drawing.Pen>.</span></span>  
  
-   <span data-ttu-id="950f3-305">在 x 轴方向上将笔按2次缩放。</span><span class="sxs-lookup"><span data-stu-id="950f3-305">Scales the pen by 2 times in the x-axis direction.</span></span>  
  
-   <span data-ttu-id="950f3-306">使用笔绘制矩形。</span><span class="sxs-lookup"><span data-stu-id="950f3-306">Draws a rectangle using the pen.</span></span>  
  
-   <span data-ttu-id="950f3-307">将笔顺时针旋转90度。</span><span class="sxs-lookup"><span data-stu-id="950f3-307">Rotates the pen 90 degrees clockwise.</span></span>  
  
-   <span data-ttu-id="950f3-308">绘制第二个矩形以演示差异。</span><span class="sxs-lookup"><span data-stu-id="950f3-308">Draws a second rectangle to demonstrate the difference.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicPenExamples#6](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicPenExamples/CPP/form1.cpp#6)]
 [!code-csharp[System.Drawing.ClassicPenExamples#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicPenExamples/CS/form1.cs#6)]
 [!code-vb[System.Drawing.ClassicPenExamples#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicPenExamples/VB/form1.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ScaleTransform">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="950f3-309">按指定因子缩放局部几何变换。</span><span class="sxs-lookup"><span data-stu-id="950f3-309">Scales the local geometric transformation by the specified factors.</span></span> <span data-ttu-id="950f3-310">此方法将缩放矩阵添加到转换前。</span><span class="sxs-lookup"><span data-stu-id="950f3-310">This method prepends the scaling matrix to the transformation.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ScaleTransform">
      <MemberSignature Language="C#" Value="public void ScaleTransform (float sx, float sy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ScaleTransform(float32 sx, float32 sy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Pen.ScaleTransform(System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ScaleTransform (sx As Single, sy As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ScaleTransform(float sx, float sy);" />
      <MemberSignature Language="F#" Value="member this.ScaleTransform : single * single -&gt; unit" Usage="pen.ScaleTransform (sx, sy)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sx" Type="System.Single" />
        <Parameter Name="sy" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="sx"><span data-ttu-id="950f3-311">沿 x 轴方向缩放转换的因子。</span><span class="sxs-lookup"><span data-stu-id="950f3-311">The factor by which to scale the transformation in the x-axis direction.</span></span></param>
        <param name="sy"><span data-ttu-id="950f3-312">沿 y 轴方向缩放转换的因子。</span><span class="sxs-lookup"><span data-stu-id="950f3-312">The factor by which to scale the transformation in the y-axis direction.</span></span></param>
        <summary><span data-ttu-id="950f3-313">按指定因子缩放局部几何变换。</span><span class="sxs-lookup"><span data-stu-id="950f3-313">Scales the local geometric transformation by the specified factors.</span></span> <span data-ttu-id="950f3-314">此方法将缩放矩阵添加到转换前。</span><span class="sxs-lookup"><span data-stu-id="950f3-314">This method prepends the scaling matrix to the transformation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="950f3-315">下面的代码示例旨在与 Windows 窗体一起使用，并且它需要作为 <xref:System.Windows.Forms.PaintEventArgs> `e` <xref:System.Windows.Forms.Control.Paint> 事件处理程序的参数。</span><span class="sxs-lookup"><span data-stu-id="950f3-315">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="950f3-316">此代码执行以下操作：</span><span class="sxs-lookup"><span data-stu-id="950f3-316">The code performs the following actions:</span></span>  
  
 <span data-ttu-id="950f3-317">创建一个 <xref:System.Drawing.Pen>。</span><span class="sxs-lookup"><span data-stu-id="950f3-317">Creates a <xref:System.Drawing.Pen>.</span></span>  
  
 <span data-ttu-id="950f3-318">使用笔绘制矩形。</span><span class="sxs-lookup"><span data-stu-id="950f3-318">Draws a rectangle using the pen.</span></span>  
  
 <span data-ttu-id="950f3-319">在 x 轴方向上将笔按2次缩放。</span><span class="sxs-lookup"><span data-stu-id="950f3-319">Scales the pen by 2 times in the x-axis direction.</span></span>  
  
 <span data-ttu-id="950f3-320">绘制第二个矩形以演示差异。</span><span class="sxs-lookup"><span data-stu-id="950f3-320">Draws a second rectangle to demonstrate the difference.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicPenExamples#7](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicPenExamples/CPP/form1.cpp#7)]
 [!code-csharp[System.Drawing.ClassicPenExamples#7](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicPenExamples/CS/form1.cs#7)]
 [!code-vb[System.Drawing.ClassicPenExamples#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicPenExamples/VB/form1.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ScaleTransform">
      <MemberSignature Language="C#" Value="public void ScaleTransform (float sx, float sy, System.Drawing.Drawing2D.MatrixOrder order);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ScaleTransform(float32 sx, float32 sy, valuetype System.Drawing.Drawing2D.MatrixOrder order) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Pen.ScaleTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ScaleTransform (sx As Single, sy As Single, order As MatrixOrder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ScaleTransform(float sx, float sy, System::Drawing::Drawing2D::MatrixOrder order);" />
      <MemberSignature Language="F#" Value="member this.ScaleTransform : single * single * System.Drawing.Drawing2D.MatrixOrder -&gt; unit" Usage="pen.ScaleTransform (sx, sy, order)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sx" Type="System.Single" />
        <Parameter Name="sy" Type="System.Single" />
        <Parameter Name="order" Type="System.Drawing.Drawing2D.MatrixOrder" />
      </Parameters>
      <Docs>
        <param name="sx"><span data-ttu-id="950f3-321">沿 x 轴方向缩放转换的因子。</span><span class="sxs-lookup"><span data-stu-id="950f3-321">The factor by which to scale the transformation in the x-axis direction.</span></span></param>
        <param name="sy"><span data-ttu-id="950f3-322">沿 y 轴方向缩放转换的因子。</span><span class="sxs-lookup"><span data-stu-id="950f3-322">The factor by which to scale the transformation in the y-axis direction.</span></span></param>
        <param name="order"><span data-ttu-id="950f3-323">一个 <see cref="T:System.Drawing.Drawing2D.MatrixOrder" />，指定是在后面追加缩放矩阵还是在前面添加缩放矩阵。</span><span class="sxs-lookup"><span data-stu-id="950f3-323">A <see cref="T:System.Drawing.Drawing2D.MatrixOrder" /> that specifies whether to append or prepend the scaling matrix.</span></span></param>
        <summary><span data-ttu-id="950f3-324">将局部几何变换以指定顺序缩放指定因子。</span><span class="sxs-lookup"><span data-stu-id="950f3-324">Scales the local geometric transformation by the specified factors in the specified order.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="950f3-325">下面的代码示例旨在与 Windows 窗体一起使用，并且它需要作为 <xref:System.Windows.Forms.PaintEventArgs> `e` <xref:System.Windows.Forms.Control.Paint> 事件处理程序的参数。</span><span class="sxs-lookup"><span data-stu-id="950f3-325">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="950f3-326">此代码执行以下操作：</span><span class="sxs-lookup"><span data-stu-id="950f3-326">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="950f3-327">创建一个 <xref:System.Drawing.Pen>。</span><span class="sxs-lookup"><span data-stu-id="950f3-327">Creates a <xref:System.Drawing.Pen>.</span></span>  
  
-   <span data-ttu-id="950f3-328">使用笔绘制矩形。</span><span class="sxs-lookup"><span data-stu-id="950f3-328">Draws a rectangle using the pen.</span></span>  
  
-   <span data-ttu-id="950f3-329">在 x 轴方向上将笔按2次缩放。</span><span class="sxs-lookup"><span data-stu-id="950f3-329">Scales the pen by 2 times in the x-axis direction.</span></span>  
  
-   <span data-ttu-id="950f3-330">绘制第二个矩形以演示差异。</span><span class="sxs-lookup"><span data-stu-id="950f3-330">Draws a second rectangle to demonstrate the difference.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicPenExamples#8](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicPenExamples/CPP/form1.cpp#8)]
 [!code-csharp[System.Drawing.ClassicPenExamples#8](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicPenExamples/CS/form1.cs#8)]
 [!code-vb[System.Drawing.ClassicPenExamples#8](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicPenExamples/VB/form1.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetLineCap">
      <MemberSignature Language="C#" Value="public void SetLineCap (System.Drawing.Drawing2D.LineCap startCap, System.Drawing.Drawing2D.LineCap endCap, System.Drawing.Drawing2D.DashCap dashCap);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetLineCap(valuetype System.Drawing.Drawing2D.LineCap startCap, valuetype System.Drawing.Drawing2D.LineCap endCap, valuetype System.Drawing.Drawing2D.DashCap dashCap) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Pen.SetLineCap(System.Drawing.Drawing2D.LineCap,System.Drawing.Drawing2D.LineCap,System.Drawing.Drawing2D.DashCap)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetLineCap (startCap As LineCap, endCap As LineCap, dashCap As DashCap)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetLineCap(System::Drawing::Drawing2D::LineCap startCap, System::Drawing::Drawing2D::LineCap endCap, System::Drawing::Drawing2D::DashCap dashCap);" />
      <MemberSignature Language="F#" Value="member this.SetLineCap : System.Drawing.Drawing2D.LineCap * System.Drawing.Drawing2D.LineCap * System.Drawing.Drawing2D.DashCap -&gt; unit" Usage="pen.SetLineCap (startCap, endCap, dashCap)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startCap" Type="System.Drawing.Drawing2D.LineCap" />
        <Parameter Name="endCap" Type="System.Drawing.Drawing2D.LineCap" />
        <Parameter Name="dashCap" Type="System.Drawing.Drawing2D.DashCap" />
      </Parameters>
      <Docs>
        <param name="startCap"><span data-ttu-id="950f3-331">一个 <see cref="T:System.Drawing.Drawing2D.LineCap" />，表示要在通过此 <see cref="T:System.Drawing.Pen" /> 绘制的直线起点使用的线帽样式。</span><span class="sxs-lookup"><span data-stu-id="950f3-331">A <see cref="T:System.Drawing.Drawing2D.LineCap" /> that represents the cap style to use at the beginning of lines drawn with this <see cref="T:System.Drawing.Pen" />.</span></span></param>
        <param name="endCap"><span data-ttu-id="950f3-332">一个 <see cref="T:System.Drawing.Drawing2D.LineCap" />，表示要在通过此 <see cref="T:System.Drawing.Pen" /> 绘制的直线终点使用的线帽样式。</span><span class="sxs-lookup"><span data-stu-id="950f3-332">A <see cref="T:System.Drawing.Drawing2D.LineCap" /> that represents the cap style to use at the end of lines drawn with this <see cref="T:System.Drawing.Pen" />.</span></span></param>
        <param name="dashCap"><span data-ttu-id="950f3-333">一个 <see cref="T:System.Drawing.Drawing2D.LineCap" />，表示要在通过此 <see cref="T:System.Drawing.Pen" /> 绘制的虚线起点或终点使用的线帽样式。</span><span class="sxs-lookup"><span data-stu-id="950f3-333">A <see cref="T:System.Drawing.Drawing2D.LineCap" /> that represents the cap style to use at the beginning or end of dashed lines drawn with this <see cref="T:System.Drawing.Pen" />.</span></span></param>
        <summary><span data-ttu-id="950f3-334">设置用于确定线帽样式的值，线帽用于结束通过此 <see cref="T:System.Drawing.Pen" /> 绘制的直线。</span><span class="sxs-lookup"><span data-stu-id="950f3-334">Sets the values that determine the style of cap used to end lines drawn by this <see cref="T:System.Drawing.Pen" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="950f3-335">下面的代码示例旨在与 Windows 窗体一起使用，并且它需要作为 <xref:System.Windows.Forms.PaintEventArgs> `e` <xref:System.Windows.Forms.Control.Paint> 事件处理程序的参数。</span><span class="sxs-lookup"><span data-stu-id="950f3-335">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="950f3-336">该代码将创建一个 <xref:System.Drawing.Pen> ，并将其设置为在行首绘制箭头定位点帽：</span><span class="sxs-lookup"><span data-stu-id="950f3-336">The code creates a <xref:System.Drawing.Pen> and sets it to draw arrow anchor caps at the beginning of lines:</span></span>  
  
 [!code-cpp[System.Drawing.ClassicPenExamples#9](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicPenExamples/CPP/form1.cpp#9)]
 [!code-csharp[System.Drawing.ClassicPenExamples#9](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicPenExamples/CS/form1.cs#9)]
 [!code-vb[System.Drawing.ClassicPenExamples#9](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicPenExamples/VB/form1.vb#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StartCap">
      <MemberSignature Language="C#" Value="public System.Drawing.Drawing2D.LineCap StartCap { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Drawing2D.LineCap StartCap" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Pen.StartCap" />
      <MemberSignature Language="VB.NET" Value="Public Property StartCap As LineCap" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Drawing2D::LineCap StartCap { System::Drawing::Drawing2D::LineCap get(); void set(System::Drawing::Drawing2D::LineCap value); };" />
      <MemberSignature Language="F#" Value="member this.StartCap : System.Drawing.Drawing2D.LineCap with get, set" Usage="System.Drawing.Pen.StartCap" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Drawing2D.LineCap</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="950f3-337">获取或设置在通过此 <see cref="T:System.Drawing.Pen" /> 绘制的直线起点使用的线帽样式。</span><span class="sxs-lookup"><span data-stu-id="950f3-337">Gets or sets the cap style used at the beginning of lines drawn with this <see cref="T:System.Drawing.Pen" />.</span></span></summary>
        <value><span data-ttu-id="950f3-338"><see cref="T:System.Drawing.Drawing2D.LineCap" /> 值之一，表示在通过此 <see cref="T:System.Drawing.Pen" /> 绘制的直线起点使用的线帽样式。</span><span class="sxs-lookup"><span data-stu-id="950f3-338">One of the <see cref="T:System.Drawing.Drawing2D.LineCap" /> values that represents the cap style used at the beginning of lines drawn with this <see cref="T:System.Drawing.Pen" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="950f3-339">下面的代码示例演示了 <xref:System.Drawing.Pen.StartCap%2A> 在上设置和属性的影响 <xref:System.Drawing.Pen.EndCap%2A> <xref:System.Drawing.Pen> 。</span><span class="sxs-lookup"><span data-stu-id="950f3-339">The following code example demonstrates the effects of setting the <xref:System.Drawing.Pen.StartCap%2A> and <xref:System.Drawing.Pen.EndCap%2A> properties on a <xref:System.Drawing.Pen>.</span></span>  
  
 <span data-ttu-id="950f3-340">此示例旨在与 Windows 窗体一起使用。</span><span class="sxs-lookup"><span data-stu-id="950f3-340">This example is designed to be used with Windows Forms.</span></span> <span data-ttu-id="950f3-341">将代码粘贴到窗体中，并 `ShowStartAndEndCaps` 在处理窗体事件时调用方法，并将 <xref:System.Windows.Forms.Control.Paint> `e` 作为传递 <xref:System.Windows.Forms.PaintEventArgs> 。</span><span class="sxs-lookup"><span data-stu-id="950f3-341">Paste the code into a form and call the `ShowStartAndEndCaps` method when handling the form's <xref:System.Windows.Forms.Control.Paint> event, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.</span></span>  
  
 [!code-cpp[System.Drawing.PensExample#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.PensExample/CPP/form1.cpp#2)]
 [!code-csharp[System.Drawing.PensExample#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.PensExample/CS/form1.cs#2)]
 [!code-vb[System.Drawing.PensExample#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.PensExample/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><span data-ttu-id="950f3-342">指定值不是 <see cref="T:System.Drawing.Drawing2D.LineCap" /> 的成员。</span><span class="sxs-lookup"><span data-stu-id="950f3-342">The specified value is not a member of <see cref="T:System.Drawing.Drawing2D.LineCap" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="950f3-343">对不可变的 <see cref="P:System.Drawing.Pen.StartCap" />（比如由 <see cref="T:System.Drawing.Pen" /> 类所返回）设置 <see cref="T:System.Drawing.Pens" /> 属性。</span><span class="sxs-lookup"><span data-stu-id="950f3-343">The <see cref="P:System.Drawing.Pen.StartCap" /> property is set on an immutable <see cref="T:System.Drawing.Pen" />, such as those returned by the <see cref="T:System.Drawing.Pens" /> class.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public System.Drawing.Drawing2D.Matrix Transform { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Drawing2D.Matrix Transform" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Pen.Transform" />
      <MemberSignature Language="VB.NET" Value="Public Property Transform As Matrix" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Drawing2D::Matrix ^ Transform { System::Drawing::Drawing2D::Matrix ^ get(); void set(System::Drawing::Drawing2D::Matrix ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Drawing.Drawing2D.Matrix with get, set" Usage="System.Drawing.Pen.Transform" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Drawing2D.Matrix</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="950f3-344">获取或设置此 <see cref="T:System.Drawing.Pen" /> 的几何变换的副本。</span><span class="sxs-lookup"><span data-stu-id="950f3-344">Gets or sets a copy of the geometric transformation for this <see cref="T:System.Drawing.Pen" />.</span></span></summary>
        <value><span data-ttu-id="950f3-345">一个 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 副本，表示此 <see cref="T:System.Drawing.Pen" /> 的几何转换。</span><span class="sxs-lookup"><span data-stu-id="950f3-345">A copy of the <see cref="T:System.Drawing.Drawing2D.Matrix" /> that represents the geometric transformation for this <see cref="T:System.Drawing.Pen" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="950f3-346">此属性定义笔尖的椭圆形形状。</span><span class="sxs-lookup"><span data-stu-id="950f3-346">This property defines an elliptical shape for the pen tip.</span></span> <span data-ttu-id="950f3-347">此椭圆通过应用变换矩阵从默认循环获得。</span><span class="sxs-lookup"><span data-stu-id="950f3-347">This ellipse is obtained from the default circular shape by applying the transformation matrix.</span></span> <span data-ttu-id="950f3-348">请注意，将忽略矩阵的翻译部分。</span><span class="sxs-lookup"><span data-stu-id="950f3-348">Note that the translation portion of the matrix is ignored.</span></span> <span data-ttu-id="950f3-349">由于由属性返回的矩阵 <xref:System.Drawing.Pen.Transform%2A> 是笔的几何转换的副本，因此，当您不再需要矩阵时，您应该释放它。</span><span class="sxs-lookup"><span data-stu-id="950f3-349">Because the matrix returned and by the <xref:System.Drawing.Pen.Transform%2A> property is a copy of the pen's geometric transform, you should dispose of the matrix when you no longer need it.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="950f3-350">对不可变的 <see cref="P:System.Drawing.Pen.Transform" />（比如由 <see cref="T:System.Drawing.Pen" /> 类所返回）设置 <see cref="T:System.Drawing.Pens" /> 属性。</span><span class="sxs-lookup"><span data-stu-id="950f3-350">The <see cref="P:System.Drawing.Pen.Transform" /> property is set on an immutable <see cref="T:System.Drawing.Pen" />, such as those returned by the <see cref="T:System.Drawing.Pens" /> class.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="TranslateTransform">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="950f3-351">将局部几何转换平移指定尺寸。</span><span class="sxs-lookup"><span data-stu-id="950f3-351">Translates the local geometric transformation by the specified dimensions.</span></span> <span data-ttu-id="950f3-352">此方法将平移添加到转换前。</span><span class="sxs-lookup"><span data-stu-id="950f3-352">This method prepends the translation to the transformation.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TranslateTransform">
      <MemberSignature Language="C#" Value="public void TranslateTransform (float dx, float dy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void TranslateTransform(float32 dx, float32 dy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Pen.TranslateTransform(System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub TranslateTransform (dx As Single, dy As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void TranslateTransform(float dx, float dy);" />
      <MemberSignature Language="F#" Value="member this.TranslateTransform : single * single -&gt; unit" Usage="pen.TranslateTransform (dx, dy)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dx" Type="System.Single" />
        <Parameter Name="dy" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="dx"><span data-ttu-id="950f3-353">X 方向的转换值。</span><span class="sxs-lookup"><span data-stu-id="950f3-353">The value of the translation in x.</span></span></param>
        <param name="dy"><span data-ttu-id="950f3-354">Y 方向的转换值。</span><span class="sxs-lookup"><span data-stu-id="950f3-354">The value of the translation in y.</span></span></param>
        <summary><span data-ttu-id="950f3-355">将局部几何转换平移指定尺寸。</span><span class="sxs-lookup"><span data-stu-id="950f3-355">Translates the local geometric transformation by the specified dimensions.</span></span> <span data-ttu-id="950f3-356">此方法将平移添加到转换前。</span><span class="sxs-lookup"><span data-stu-id="950f3-356">This method prepends the translation to the transformation.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TranslateTransform">
      <MemberSignature Language="C#" Value="public void TranslateTransform (float dx, float dy, System.Drawing.Drawing2D.MatrixOrder order);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void TranslateTransform(float32 dx, float32 dy, valuetype System.Drawing.Drawing2D.MatrixOrder order) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Pen.TranslateTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)" />
      <MemberSignature Language="VB.NET" Value="Public Sub TranslateTransform (dx As Single, dy As Single, order As MatrixOrder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void TranslateTransform(float dx, float dy, System::Drawing::Drawing2D::MatrixOrder order);" />
      <MemberSignature Language="F#" Value="member this.TranslateTransform : single * single * System.Drawing.Drawing2D.MatrixOrder -&gt; unit" Usage="pen.TranslateTransform (dx, dy, order)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dx" Type="System.Single" />
        <Parameter Name="dy" Type="System.Single" />
        <Parameter Name="order" Type="System.Drawing.Drawing2D.MatrixOrder" />
      </Parameters>
      <Docs>
        <param name="dx"><span data-ttu-id="950f3-357">X 方向的转换值。</span><span class="sxs-lookup"><span data-stu-id="950f3-357">The value of the translation in x.</span></span></param>
        <param name="dy"><span data-ttu-id="950f3-358">Y 方向的转换值。</span><span class="sxs-lookup"><span data-stu-id="950f3-358">The value of the translation in y.</span></span></param>
        <param name="order"><span data-ttu-id="950f3-359">应用转换的顺序（在前面添加或在后面追加）。</span><span class="sxs-lookup"><span data-stu-id="950f3-359">The order (prepend or append) in which to apply the translation.</span></span></param>
        <summary><span data-ttu-id="950f3-360">按指定的顺序将局部几何变换平移指定的尺寸。</span><span class="sxs-lookup"><span data-stu-id="950f3-360">Translates the local geometric transformation by the specified dimensions in the specified order.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Width">
      <MemberSignature Language="C#" Value="public float Width { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 Width" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Pen.Width" />
      <MemberSignature Language="VB.NET" Value="Public Property Width As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property float Width { float get(); void set(float value); };" />
      <MemberSignature Language="F#" Value="member this.Width : single with get, set" Usage="System.Drawing.Pen.Width" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="950f3-361">获取或设置此 <see cref="T:System.Drawing.Pen" /> 的宽度，以用于绘图的 <see cref="T:System.Drawing.Graphics" /> 对象为单位。</span><span class="sxs-lookup"><span data-stu-id="950f3-361">Gets or sets the width of this <see cref="T:System.Drawing.Pen" />, in units of the <see cref="T:System.Drawing.Graphics" /> object used for drawing.</span></span></summary>
        <value><span data-ttu-id="950f3-362">此 <see cref="T:System.Drawing.Pen" /> 的宽度。</span><span class="sxs-lookup"><span data-stu-id="950f3-362">The width of this <see cref="T:System.Drawing.Pen" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="950f3-363">可以使用对象的属性访问该对象的度量单位 <xref:System.Drawing.Graphics> <xref:System.Drawing.Graphics.PageUnit%2A> 。</span><span class="sxs-lookup"><span data-stu-id="950f3-363">You can access the unit of measure of the <xref:System.Drawing.Graphics> object using its <xref:System.Drawing.Graphics.PageUnit%2A> property.</span></span> <span data-ttu-id="950f3-364">度量单位通常是像素。</span><span class="sxs-lookup"><span data-stu-id="950f3-364">The unit of measure is typically pixels.</span></span> <span data-ttu-id="950f3-365"><xref:System.Drawing.Pen.Width%2A>如果为0，则将导致 <xref:System.Drawing.Pen> 绘图，就像 <xref:System.Drawing.Pen.Width%2A> 是1。</span><span class="sxs-lookup"><span data-stu-id="950f3-365">A <xref:System.Drawing.Pen.Width%2A> of 0 will result in the <xref:System.Drawing.Pen> drawing as if the <xref:System.Drawing.Pen.Width%2A> were 1.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="950f3-366">下面的代码示例演示了 <xref:System.Drawing.Pen.Width%2A> 在上设置和属性的影响 <xref:System.Drawing.Pen.LineJoin%2A> <xref:System.Drawing.Pen> 。</span><span class="sxs-lookup"><span data-stu-id="950f3-366">The following code example demonstrates the effects of setting the <xref:System.Drawing.Pen.Width%2A> and <xref:System.Drawing.Pen.LineJoin%2A> properties on a <xref:System.Drawing.Pen>.</span></span>  
  
 <span data-ttu-id="950f3-367">此示例旨在与 Windows 窗体一起使用。</span><span class="sxs-lookup"><span data-stu-id="950f3-367">This example is designed to be used with Windows Forms.</span></span> <span data-ttu-id="950f3-368">将代码粘贴到窗体中，并 `ShowLineJoin` 在处理窗体事件时调用方法，并将 <xref:System.Windows.Forms.Control.Paint> `e` 作为传递 <xref:System.Windows.Forms.PaintEventArgs> 。</span><span class="sxs-lookup"><span data-stu-id="950f3-368">Paste the code into a form and call the `ShowLineJoin` method when handling the form's <xref:System.Windows.Forms.Control.Paint> event, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.</span></span>  
  
 [!code-cpp[System.Drawing.PensExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.PensExample/CPP/form1.cpp#1)]
 [!code-csharp[System.Drawing.PensExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.PensExample/CS/form1.cs#1)]
 [!code-vb[System.Drawing.PensExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.PensExample/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="950f3-369">对不可变的 <see cref="P:System.Drawing.Pen.Width" />（比如由 <see cref="T:System.Drawing.Pen" /> 类所返回）设置 <see cref="T:System.Drawing.Pens" /> 属性。</span><span class="sxs-lookup"><span data-stu-id="950f3-369">The <see cref="P:System.Drawing.Pen.Width" /> property is set on an immutable <see cref="T:System.Drawing.Pen" />, such as those returned by the <see cref="T:System.Drawing.Pens" /> class.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
