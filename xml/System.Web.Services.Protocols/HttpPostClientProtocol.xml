<Type Name="HttpPostClientProtocol" FullName="System.Web.Services.Protocols.HttpPostClientProtocol">
  <Metadata><Meta Name="ms.openlocfilehash" Value="1e06462642e6a6188ec22133e5b82a35d8866671" /><Meta Name="ms.sourcegitcommit" Value="397961a0164281b579f68064c3bb66c071f374d9" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/14/2020" /><Meta Name="ms.locfileid" Value="78771243" /></Metadata><TypeSignature Language="C#" Value="public class HttpPostClientProtocol : System.Web.Services.Protocols.HttpSimpleClientProtocol" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit HttpPostClientProtocol extends System.Web.Services.Protocols.HttpSimpleClientProtocol" />
  <TypeSignature Language="DocId" Value="T:System.Web.Services.Protocols.HttpPostClientProtocol" />
  <TypeSignature Language="VB.NET" Value="Public Class HttpPostClientProtocol&#xA;Inherits HttpSimpleClientProtocol" />
  <TypeSignature Language="C++ CLI" Value="public ref class HttpPostClientProtocol : System::Web::Services::Protocols::HttpSimpleClientProtocol" />
  <TypeSignature Language="F#" Value="type HttpPostClientProtocol = class&#xA;    inherit HttpSimpleClientProtocol" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Services</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.Services.Protocols.HttpSimpleClientProtocol</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="5feba-101">使用 HTTP-POST 协议的 XML Web services 客户端代理的基类。</span><span class="sxs-lookup"><span data-stu-id="5feba-101">The base class for XML Web service client proxies that use the HTTP-POST protocol.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5feba-102">如果 XML Web service 客户端使用 HTTP POST 协议，则默认情况下，使用 URL 编码规则在 HTTP 正文中对参数进行编码，并使用纯 XML 来响应。</span><span class="sxs-lookup"><span data-stu-id="5feba-102">When an XML Web service client uses the HTTP-POST protocol, by default parameters are encoded within the HTTP body using URL encoding rules and uses plain XML for the response.</span></span> <span data-ttu-id="5feba-103">此协议使用派生自的类 <xref:System.Web.Services.Protocols.MimeFormatter> 将参数编码并将值返回到标准的 MIME 格式。</span><span class="sxs-lookup"><span data-stu-id="5feba-103">This protocol uses classes that derive from <xref:System.Web.Services.Protocols.MimeFormatter> to encode parameters and return values into standard MIME formats.</span></span> <span data-ttu-id="5feba-104">在服务说明中指定要使用的编码器。</span><span class="sxs-lookup"><span data-stu-id="5feba-104">The encoders to use are specified in the service description.</span></span>  
  
 <span data-ttu-id="5feba-105">如果使用 ASP.NET 生成 XML Web service 客户端，则 <xref:System.Web.Services.Protocols.WebClientProtocol> 需要为要调用的 XML Web service 创建间接或直接派生的代理类。</span><span class="sxs-lookup"><span data-stu-id="5feba-105">If you are building an XML Web service client using ASP.NET, then a proxy class deriving indirectly or directly from <xref:System.Web.Services.Protocols.WebClientProtocol> needs to be created for the XML Web service you want to call.</span></span> <span data-ttu-id="5feba-106">当 XML Web service 客户端使用 HTTP 调用时，派生代理类 <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol> ，后者反过来派生自 <xref:System.Web.Services.Protocols.WebClientProtocol> 。</span><span class="sxs-lookup"><span data-stu-id="5feba-106">When the XML Web service client is calling using HTTP, derive the proxy class <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol>, which in turn derives from <xref:System.Web.Services.Protocols.WebClientProtocol>.</span></span>  
  
 <span data-ttu-id="5feba-107"><xref:System.Web.Services.Protocols.HttpGetClientProtocol>和 <xref:System.Web.Services.Protocols.HttpPostClientProtocol> 派生自 <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol> ，它提供对使用 HTTP GET 和 http POST 调用 XML Web service 方法的支持。</span><span class="sxs-lookup"><span data-stu-id="5feba-107"><xref:System.Web.Services.Protocols.HttpGetClientProtocol> and <xref:System.Web.Services.Protocols.HttpPostClientProtocol> derive from <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol>, providing the support for calling an XML Web service method using HTTP-GET and HTTP-POST respectively.</span></span> <span data-ttu-id="5feba-108">使用 SOAP 调用 XML Web service 的客户端应派生自 <xref:System.Web.Services.Protocols.SoapHttpClientProtocol> 。</span><span class="sxs-lookup"><span data-stu-id="5feba-108">Clients calling an XML Web service using SOAP should derive from <xref:System.Web.Services.Protocols.SoapHttpClientProtocol>.</span></span>  
  
 <span data-ttu-id="5feba-109">有关生成代理类的详细信息，请参阅[创建 XML Web Services 代理](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/d2s8y7bs(v=vs.100))。</span><span class="sxs-lookup"><span data-stu-id="5feba-109">For details on building a proxy class, see [Creating an XML Web Service Proxy](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/d2s8y7bs(v=vs.100)).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5feba-110">下面的示例是 Wsdl.exe 实用工具为以下 XML Web service 生成的代理类 `Math` 。</span><span class="sxs-lookup"><span data-stu-id="5feba-110">The following example is a proxy class generated by the Wsdl.exe utility for the `Math` XML Web service below.</span></span> <span data-ttu-id="5feba-111">代理类派生自 <xref:System.Web.Services.Protocols.HttpPostClientProtocol> 抽象类，后者派生自抽象 <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol> 类。</span><span class="sxs-lookup"><span data-stu-id="5feba-111">The proxy class derives from <xref:System.Web.Services.Protocols.HttpPostClientProtocol>, which derives from the abstract <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol> class.</span></span>  
  
 [!code-cpp[Classic HttpPostClientProtocol Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic HttpPostClientProtocol Example/CPP/source.cpp#1)]
 [!code-csharp[Classic HttpPostClientProtocol Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic HttpPostClientProtocol Example/CS/source.cs#1)]
 [!code-vb[Classic HttpPostClientProtocol Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic HttpPostClientProtocol Example/VB/source.vb#1)]  
  
 <span data-ttu-id="5feba-112">下面的示例是 `Math` 从其创建上一个代理类的 XML Web service。</span><span class="sxs-lookup"><span data-stu-id="5feba-112">The following example is the `Math` XML Web service, from which the previous proxy class was created.</span></span>  
  
 [!code-aspx-csharp[Classic HttpPostClientProtocol Example#2](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic HttpPostClientProtocol Example/CS/sourcecs.asmx)]
 [!code-aspx-vb[Classic HttpPostClientProtocol Example#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic HttpPostClientProtocol Example/VB/sourcevb.asmx)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Services.Protocols.HttpGetClientProtocol" />
    <altmember cref="T:System.Web.Services.Protocols.HttpSimpleClientProtocol" />
    <altmember cref="T:System.Web.Services.Protocols.WebClientProtocol" />
    <altmember cref="T:System.Web.Services.Protocols.SoapHttpClientProtocol" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpPostClientProtocol ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.HttpPostClientProtocol.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HttpPostClientProtocol();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="5feba-113">初始化 <see cref="T:System.Web.Services.Protocols.HttpPostClientProtocol" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="5feba-113">Initializes a new instance of the <see cref="T:System.Web.Services.Protocols.HttpPostClientProtocol" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-cpp[HttpPostClientProtocol_Constructor#1](~/samples/snippets/cpp/VS_Snippets_Remoting/HttpPostClientProtocol_Constructor/CPP/httppostclientprotocol_constructor.cpp#1)]
 [!code-csharp[HttpPostClientProtocol_Constructor#1](~/samples/snippets/csharp/VS_Snippets_Remoting/HttpPostClientProtocol_Constructor/CS/httppostclientprotocol_constructor.cs#1)]
 [!code-vb[HttpPostClientProtocol_Constructor#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/HttpPostClientProtocol_Constructor/VB/httppostclientprotocol_constructor.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetWebRequest">
      <MemberSignature Language="C#" Value="protected override System.Net.WebRequest GetWebRequest (Uri uri);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Net.WebRequest GetWebRequest(class System.Uri uri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.HttpPostClientProtocol.GetWebRequest(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetWebRequest (uri As Uri) As WebRequest" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Net::WebRequest ^ GetWebRequest(Uri ^ uri);" />
      <MemberSignature Language="F#" Value="override this.GetWebRequest : Uri -&gt; System.Net.WebRequest" Usage="httpPostClientProtocol.GetWebRequest uri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.WebRequest</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="uri"><span data-ttu-id="5feba-114"><see cref="T:System.Uri" /> 在创建 <see cref="T:System.Net.WebRequest" /> 时使用。</span><span class="sxs-lookup"><span data-stu-id="5feba-114">The <see cref="T:System.Uri" /> to use when creating the <see cref="T:System.Net.WebRequest" />.</span></span></param>
        <summary><span data-ttu-id="5feba-115">为指定的 URI 创建一个 <see cref="T:System.Net.WebRequest" /> 实例。</span><span class="sxs-lookup"><span data-stu-id="5feba-115">Creates a <see cref="T:System.Net.WebRequest" /> instance for the specified URI.</span></span></summary>
        <returns><span data-ttu-id="5feba-116"><see cref="T:System.Net.WebRequest" /> 实例。</span><span class="sxs-lookup"><span data-stu-id="5feba-116">The <see cref="T:System.Net.WebRequest" /> instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5feba-117">此方法重写的基版本 <xref:System.Web.Services.Protocols.WebClientProtocol.GetWebRequest%2A> ，以指定使用 HTTP POST 对 XML Web service 发出 http 请求。</span><span class="sxs-lookup"><span data-stu-id="5feba-117">This method overrides the base version of <xref:System.Web.Services.Protocols.WebClientProtocol.GetWebRequest%2A> to specify that the HTTP request to the XML Web service is made using HTTP-POST.</span></span> <span data-ttu-id="5feba-118">通过重写此方法，您可以在 <xref:System.Net.WebRequest> 发出 XML Web service 请求之前自定义对象。</span><span class="sxs-lookup"><span data-stu-id="5feba-118">By overriding this method, you can customize the <xref:System.Net.WebRequest> object before the XML Web service request is made.</span></span> <span data-ttu-id="5feba-119">例如，可以将自定义标头添加到请求。</span><span class="sxs-lookup"><span data-stu-id="5feba-119">For example, you can add a custom header to the request.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="5feba-120"><paramref name="uri" /> 参数为空或长度为零。</span><span class="sxs-lookup"><span data-stu-id="5feba-120">The <paramref name="uri" /> parameter is null or has a length of zero.</span></span></exception>
        <altmember cref="M:System.Web.Services.Protocols.WebClientProtocol.GetWebRequest(System.Uri)" />
        <altmember cref="T:System.Net.WebRequest" />
        <altmember cref="T:System.Uri" />
      </Docs>
    </Member>
  </Members>
</Type>
