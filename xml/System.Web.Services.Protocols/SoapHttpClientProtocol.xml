<Type Name="SoapHttpClientProtocol" FullName="System.Web.Services.Protocols.SoapHttpClientProtocol">
  <Metadata><Meta Name="ms.openlocfilehash" Value="cf10a98675636414b480f83fb16086e86dcab030" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89905209" /></Metadata><TypeSignature Language="C#" Value="public class SoapHttpClientProtocol : System.Web.Services.Protocols.HttpWebClientProtocol" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SoapHttpClientProtocol extends System.Web.Services.Protocols.HttpWebClientProtocol" />
  <TypeSignature Language="DocId" Value="T:System.Web.Services.Protocols.SoapHttpClientProtocol" />
  <TypeSignature Language="VB.NET" Value="Public Class SoapHttpClientProtocol&#xA;Inherits HttpWebClientProtocol" />
  <TypeSignature Language="C++ CLI" Value="public ref class SoapHttpClientProtocol : System::Web::Services::Protocols::HttpWebClientProtocol" />
  <TypeSignature Language="F#" Value="type SoapHttpClientProtocol = class&#xA;    inherit HttpWebClientProtocol" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Services</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.Services.Protocols.HttpWebClientProtocol</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName Language="C#">[System.Runtime.InteropServices.ComVisible(true)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.ComVisible(true)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="7aee7-101">指定当使用 SOAP 时客户端代理从其中派生的类。</span><span class="sxs-lookup"><span data-stu-id="7aee7-101">Specifies the class client that proxies derive from when using SOAP.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="7aee7-102">如果要生成 XML Web service 客户端，则必须为 XML Web service 创建间接或直接从其派生的代理类 <xref:System.Web.Services.Protocols.WebClientProtocol> 。</span><span class="sxs-lookup"><span data-stu-id="7aee7-102">If you are building an XML Web service client, then a proxy class that derives indirectly or directly from <xref:System.Web.Services.Protocols.WebClientProtocol> must be created for the XML Web service.</span></span> <span data-ttu-id="7aee7-103">当 XML Web service 客户端使用 SOAP 调用时，代理类必须从派生自的派生 <xref:System.Web.Services.Protocols.SoapHttpClientProtocol> <xref:System.Web.Services.Protocols.HttpWebClientProtocol> 。</span><span class="sxs-lookup"><span data-stu-id="7aee7-103">When the XML Web service client calls using SOAP, the proxy class must derive from <xref:System.Web.Services.Protocols.SoapHttpClientProtocol>, which derives from <xref:System.Web.Services.Protocols.HttpWebClientProtocol>.</span></span> <span data-ttu-id="7aee7-104"><xref:System.Web.Services.Protocols.HttpWebClientProtocol>反过来，派生自 <xref:System.Web.Services.Protocols.WebClientProtocol> 。</span><span class="sxs-lookup"><span data-stu-id="7aee7-104"><xref:System.Web.Services.Protocols.HttpWebClientProtocol>, in turn, derives from <xref:System.Web.Services.Protocols.WebClientProtocol>.</span></span>

 <span data-ttu-id="7aee7-105">若要与 XML Web service 通信，请创建间接或直接从中为要调用的 XML Web service 派生的代理类 <xref:System.Web.Services.Protocols.WebClientProtocol> 。</span><span class="sxs-lookup"><span data-stu-id="7aee7-105">To communicate with an XML Web service, create a proxy class that derives indirectly or directly from <xref:System.Web.Services.Protocols.WebClientProtocol> for the XML Web service you want to call.</span></span> <span data-ttu-id="7aee7-106">不是手动创建代理类，而是使用 Web 服务描述语言工具 ( # A0) 为给定 XML Web service 的服务说明创建代理类。</span><span class="sxs-lookup"><span data-stu-id="7aee7-106">Instead of creating the proxy class manually, use the Web Services Description Language tool (Wsdl.exe) to create a proxy class for a given XML Web service's service description.</span></span> <span data-ttu-id="7aee7-107">为 SOAP 协议生成代理类时，通过方法对 XML Web service 方法进行同步调用 <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.Invoke%2A> ，而使用 <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke%2A> 方法和方法进行异步调用 <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.EndInvoke%2A> 。</span><span class="sxs-lookup"><span data-stu-id="7aee7-107">When a proxy class is generated for the SOAP protocol, synchronous calls to XML Web service methods are made via the <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.Invoke%2A> method, whereas asynchronous calls are made using the <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke%2A> method and the <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.EndInvoke%2A> method.</span></span>



## Examples
 <span data-ttu-id="7aee7-108">下面的代码示例是 Wsdl.exe 为 XML Web service 生成的代理类 `Math` 。</span><span class="sxs-lookup"><span data-stu-id="7aee7-108">The following code example is a proxy class generated by Wsdl.exe for the `Math` XML Web service.</span></span> <span data-ttu-id="7aee7-109">代理类派生自 <xref:System.Web.Services.Protocols.SoapHttpClientProtocol> 抽象类，后者派生自抽象 <xref:System.Web.Services.Protocols.WebClientProtocol> 类。</span><span class="sxs-lookup"><span data-stu-id="7aee7-109">The proxy class derives from <xref:System.Web.Services.Protocols.SoapHttpClientProtocol>, which derives from the abstract <xref:System.Web.Services.Protocols.WebClientProtocol> class.</span></span>

 [!code-cpp[Classic SoapHttpClientProtocol Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic SoapHttpClientProtocol Example/CPP/source.cpp#1)]
 [!code-csharp[Classic SoapHttpClientProtocol Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic SoapHttpClientProtocol Example/CS/source.cs#1)]
 [!code-vb[Classic SoapHttpClientProtocol Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic SoapHttpClientProtocol Example/VB/source.vb#1)]

 <span data-ttu-id="7aee7-110">下面的代码示例是 `Math` 从其生成上一个代理类的 XML Web service。</span><span class="sxs-lookup"><span data-stu-id="7aee7-110">The following code example is the `Math` XML Web service, from which the preceding proxy class was generated.</span></span>

> [!IMPORTANT]
>  <span data-ttu-id="7aee7-111">此示例具有一个接受用户输入的文本框，这是一个潜在的安全威胁。</span><span class="sxs-lookup"><span data-stu-id="7aee7-111">This example has a text box that accepts user input, which is a potential security threat.</span></span> <span data-ttu-id="7aee7-112">默认情况下，ASP.NET 网页验证用户输入是否不包含脚本或 HTML 元素。</span><span class="sxs-lookup"><span data-stu-id="7aee7-112">By default, ASP.NET Web pages validate that user input does not include script or HTML elements.</span></span> <span data-ttu-id="7aee7-113">有关详细信息，请参阅[脚本侵入概述](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100))。</span><span class="sxs-lookup"><span data-stu-id="7aee7-113">For more information, see [Script Exploits Overview](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100)).</span></span>

 [!code-aspx-csharp[Classic SoapHttpClientProtocol Example#2](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic SoapHttpClientProtocol Example/CS/sourcecs.asmx)]
 [!code-aspx-vb[Classic SoapHttpClientProtocol Example#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic SoapHttpClientProtocol Example/VB/sourcevb.asmx)]


 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="7aee7-114">此类型是线程安全的。</span><span class="sxs-lookup"><span data-stu-id="7aee7-114">This type is thread safe.</span></span></threadsafe>
    <block subset="none" type="overrides"><para><span data-ttu-id="7aee7-115">重写此类时，可以在派生类中引入特定于特定类型的 XML Web service 的方法。</span><span class="sxs-lookup"><span data-stu-id="7aee7-115">When you override this class, you can introduce methods in the derived class which are specific to a particular type of XML Web service.</span></span> <span data-ttu-id="7aee7-116">方法捕获参数，并调用基类来完成与 XML Web service 通信的工作。</span><span class="sxs-lookup"><span data-stu-id="7aee7-116">The methods capture the parameters and call the base class to do the work of communicating with the XML Web service.</span></span> <span data-ttu-id="7aee7-117">如果引入的方法是异步的，则调用 <see cref="M:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)" /> 方法和 <see cref="M:System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke(System.IAsyncResult)" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="7aee7-117">If the introduced methods are asynchronous, call the <see cref="M:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)" /> method and the <see cref="M:System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke(System.IAsyncResult)" /> method.</span></span> <span data-ttu-id="7aee7-118">如果引入的方法是同步的，请调用 <see cref="M:System.Web.Services.Protocols.SoapHttpClientProtocol.Invoke(System.String,System.Object[])" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="7aee7-118">If the introduced methods are synchronous, call the <see cref="M:System.Web.Services.Protocols.SoapHttpClientProtocol.Invoke(System.String,System.Object[])" /> method.</span></span> <span data-ttu-id="7aee7-119">重写的构造函数通常将 <see cref="P:System.Web.Services.Protocols.WebClientProtocol.Url" /> 属性设置为 XML Web service 方法的 URL。</span><span class="sxs-lookup"><span data-stu-id="7aee7-119">The overridden constructor typically sets the <see cref="P:System.Web.Services.Protocols.WebClientProtocol.Url" /> property to the URL of the XML Web service method.</span></span></para></block>
    <altmember cref="T:System.Web.Services.Protocols.HttpSimpleClientProtocol" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SoapHttpClientProtocol ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.SoapHttpClientProtocol.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SoapHttpClientProtocol();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7aee7-120">初始化 <see cref="T:System.Web.Services.Protocols.SoapHttpClientProtocol" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="7aee7-120">Initializes a new instance of the <see cref="T:System.Web.Services.Protocols.SoapHttpClientProtocol" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginInvoke">
      <MemberSignature Language="C#" Value="protected IAsyncResult BeginInvoke (string methodName, object[] parameters, AsyncCallback callback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.IAsyncResult BeginInvoke(string methodName, object[] parameters, class System.AsyncCallback callback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Function BeginInvoke (methodName As String, parameters As Object(), callback As AsyncCallback, asyncState As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; IAsyncResult ^ BeginInvoke(System::String ^ methodName, cli::array &lt;System::Object ^&gt; ^ parameters, AsyncCallback ^ callback, System::Object ^ asyncState);" />
      <MemberSignature Language="F#" Value="member this.BeginInvoke : string * obj[] * AsyncCallback * obj -&gt; IAsyncResult" Usage="soapHttpClientProtocol.BeginInvoke (methodName, parameters, callback, asyncState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="methodName" Type="System.String" />
        <Parameter Name="parameters" Type="System.Object[]" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="methodName"><span data-ttu-id="7aee7-121">正调用 <see cref="M:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)" /> 方法的派生类中的 XML Web services 方法的名称。</span><span class="sxs-lookup"><span data-stu-id="7aee7-121">The name of the XML Web service method in the derived class that is invoking the <see cref="M:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)" /> method.</span></span></param>
        <param name="parameters"><span data-ttu-id="7aee7-122">对象的数组，包含要传递给 XML Web services 的参数。</span><span class="sxs-lookup"><span data-stu-id="7aee7-122">An array of objects containing the parameters to pass to the XML Web service.</span></span> <span data-ttu-id="7aee7-123">数组中值的顺序与派生类的调用方法中的参数顺序对应。</span><span class="sxs-lookup"><span data-stu-id="7aee7-123">The order of the values in the array correspond to the order of the parameters in the calling method of the derived class.</span></span></param>
        <param name="callback"><span data-ttu-id="7aee7-124">异步调用完成时要调用的委托。</span><span class="sxs-lookup"><span data-stu-id="7aee7-124">The delegate to call when the asynchronous invoke is complete.</span></span> <span data-ttu-id="7aee7-125">如果 <paramref name="callback" /> 为 <see langword="null" />，则不调用委托。</span><span class="sxs-lookup"><span data-stu-id="7aee7-125">If <paramref name="callback" /> is <see langword="null" />, the delegate is not called.</span></span></param>
        <param name="asyncState"><span data-ttu-id="7aee7-126">调用方提供的额外信息。</span><span class="sxs-lookup"><span data-stu-id="7aee7-126">Extra information supplied by the caller.</span></span></param>
        <summary><span data-ttu-id="7aee7-127">开始使用 SOAP 异步调用 XML Web services 方法。</span><span class="sxs-lookup"><span data-stu-id="7aee7-127">Starts an asynchronous invocation of an XML Web service method using SOAP.</span></span></summary>
        <returns><span data-ttu-id="7aee7-128"><see cref="T:System.IAsyncResult" />，传递给 <see cref="M:System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke(System.IAsyncResult)" /> 方法以从远程方法调用中获取返回值。</span><span class="sxs-lookup"><span data-stu-id="7aee7-128">An <see cref="T:System.IAsyncResult" /> that is passed to the <see cref="M:System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke(System.IAsyncResult)" /> method to obtain the return values from the remote method call.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="7aee7-129">通常，您不会直接调用 <xref:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke%2A> 方法，除非您为 XML Web service 生成自己的代理类。</span><span class="sxs-lookup"><span data-stu-id="7aee7-129">Typically, you would not call the <xref:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke%2A> method directly, unless you were building your own proxy class for an XML Web service.</span></span>

 <span data-ttu-id="7aee7-130">Web 服务描述语言工具生成的代理类 ( 从服务说明中 # A0) 将 XML Web service 方法公开为从代理类派生的名称，以同步调用 XML Web service 方法。</span><span class="sxs-lookup"><span data-stu-id="7aee7-130">A proxy class generated by the Web Services Description Language tool (Wsdl.exe) from a Service Description exposes the XML Web service methods as names derived from the proxy class to call the XML Web service methods synchronously.</span></span> <span data-ttu-id="7aee7-131">若要异步调用 XML Web service 方法，需要向每个 XML Web service 方法的代理类中添加另外两个方法，其中一个 `Begin` 前缀添加到了 XML Web service 方法的名称，另一个添加了 `End` 前缀。</span><span class="sxs-lookup"><span data-stu-id="7aee7-131">To call the XML Web service methods asynchronously, two additional methods are added to the proxy class for each XML Web service method, one with the `Begin` prefix added to the name of the XML Web service method and one with the `End` prefix added.</span></span>

 <span data-ttu-id="7aee7-132">代理类调用 <xref:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke%2A> 方法来启动对 XML Web service 方法的异步调用调用。</span><span class="sxs-lookup"><span data-stu-id="7aee7-132">The proxy class calls the <xref:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke%2A> method to start an asynchronous invocation call to the XML Web service method.</span></span> <span data-ttu-id="7aee7-133">例如，如果 XML Web service 公开名为的 XML Web service 方法 `Add` ，则代理类包含名为的方法 `BeginAdd` ，用于启动对 XML Web service 方法的调用。</span><span class="sxs-lookup"><span data-stu-id="7aee7-133">For example, if an XML Web service exposes an XML Web service method named `Add`, the proxy class contains a method named `BeginAdd`, for starting an invocation to the XML Web service method.</span></span> <span data-ttu-id="7aee7-134">在的代码中 `BeginAdd` ，对方法进行调用， <xref:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke%2A> 并将结果放入的预期返回类型中 `Add` 。</span><span class="sxs-lookup"><span data-stu-id="7aee7-134">Within the code for the `BeginAdd`, a call is made to the <xref:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke%2A> method and the results are placed into the expected return type for `Add`.</span></span>

 <span data-ttu-id="7aee7-135">`methodName`用于查找可能已添加到方法中的自定义特性，例如 <xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute> 。</span><span class="sxs-lookup"><span data-stu-id="7aee7-135">The `methodName` is used to find the custom attributes which may have been added to the method, such as <xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute>.</span></span> <span data-ttu-id="7aee7-136"><xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute> 提供有关 SOAP 协议所需的派生方法的其他信息。</span><span class="sxs-lookup"><span data-stu-id="7aee7-136"><xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute> provides additional information about the derived method that is required for the SOAP protocol.</span></span>

 <span data-ttu-id="7aee7-137">`asyncState` 传入 `callback` ，并且包含在 <xref:System.IAsyncResult> 从方法返回的中 <xref:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke%2A> 。</span><span class="sxs-lookup"><span data-stu-id="7aee7-137">`asyncState` is passed into `callback` and is included in the <xref:System.IAsyncResult> that is returned from the <xref:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke%2A> method.</span></span> <span data-ttu-id="7aee7-138">`asyncState`参数可用于将与参数中指定的异步调用上下文有关的信息传递 `callback` 给处理结果的委托。</span><span class="sxs-lookup"><span data-stu-id="7aee7-138">The `asyncState` parameter can be used to pass information about the context of the asynchronous call, specified in the `callback` parameter, to the delegate that handles the result.</span></span>



## Examples
 <span data-ttu-id="7aee7-139">下面的代码示例是由 Web 服务描述语言工具为 XML Web service ( # A0) 生成的代理类 `Math` 。</span><span class="sxs-lookup"><span data-stu-id="7aee7-139">The following code example is a proxy class generated by the Web Services Description Language tool (Wsdl.exe) for the `Math` XML Web service.</span></span> <span data-ttu-id="7aee7-140">在 `BeginAdd` proxy 类的方法中， <xref:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke%2A> 方法将启动对 XML Web service 方法的异步调用 `Add` 。</span><span class="sxs-lookup"><span data-stu-id="7aee7-140">Within the `BeginAdd` method of the proxy class, the <xref:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke%2A> method is starting an asynchronous invocation to the `Add` XML Web service method.</span></span>

 [!code-cpp[Classic SoapHttpClientProtocol.BeginInvoke Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic SoapHttpClientProtocol.BeginInvoke Example/CPP/source.cpp#1)]
 [!code-csharp[Classic SoapHttpClientProtocol.BeginInvoke Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic SoapHttpClientProtocol.BeginInvoke Example/CS/source.cs#1)]
 [!code-vb[Classic SoapHttpClientProtocol.BeginInvoke Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic SoapHttpClientProtocol.BeginInvoke Example/VB/source.vb#1)]

 <span data-ttu-id="7aee7-141">下面的代码示例是 `Math` 从其创建前面的代理类的 XML Web service。</span><span class="sxs-lookup"><span data-stu-id="7aee7-141">The following code example is the `Math` XML Web service, from which the preceding proxy class was created.</span></span>

 [!code-aspx-csharp[Classic SoapHttpClientProtocol.BeginInvoke Example#2](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic SoapHttpClientProtocol.BeginInvoke Example/CS/sourcecs.asmx)]
 [!code-aspx-vb[Classic SoapHttpClientProtocol.BeginInvoke Example#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic SoapHttpClientProtocol.BeginInvoke Example/VB/sourcevb.asmx)]

 ]]></format>
        </remarks>
        <exception cref="T:System.Web.Services.Protocols.SoapException"><span data-ttu-id="7aee7-142">请求到达了服务器计算机，但未被成功处理。</span><span class="sxs-lookup"><span data-stu-id="7aee7-142">The request reached the server computer, but was not processed successfully.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="7aee7-143">请求对对象的当前状态无效。</span><span class="sxs-lookup"><span data-stu-id="7aee7-143">The request was not valid for the object's current state.</span></span></exception>
        <exception cref="T:System.Net.WebException"><span data-ttu-id="7aee7-144">访问网络时出错。</span><span class="sxs-lookup"><span data-stu-id="7aee7-144">An error occurred while accessing the network.</span></span></exception>
        <altmember cref="T:System.IAsyncResult" />
        <altmember cref="T:System.AsyncCallback" />
        <altmember cref="M:System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke(System.IAsyncResult)" />
        <altmember cref="T:System.Web.Services.Protocols.SoapDocumentMethodAttribute" />
        <altmember cref="T:System.Web.Services.Protocols.WebClientProtocol" />
      </Docs>
    </Member>
    <Member MemberName="Discover">
      <MemberSignature Language="C#" Value="public void Discover ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Discover() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.SoapHttpClientProtocol.Discover" />
      <MemberSignature Language="VB.NET" Value="Public Sub Discover ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Discover();" />
      <MemberSignature Language="F#" Value="member this.Discover : unit -&gt; unit" Usage="soapHttpClientProtocol.Discover " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7aee7-145">动态绑定到 <see cref="P:System.Web.Services.Protocols.WebClientProtocol.Url" /> 处的发现文档中描述的 XML Web services。</span><span class="sxs-lookup"><span data-stu-id="7aee7-145">Dynamically binds to an XML Web service described in the discovery document at <see cref="P:System.Web.Services.Protocols.WebClientProtocol.Url" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="7aee7-146">XML Web service 客户端可以动态绑定到 XML Web service，而不是使用方法在代理类中引用的另一个 <xref:System.Web.Services.Protocols.SoapHttpClientProtocol.Discover%2A> 。</span><span class="sxs-lookup"><span data-stu-id="7aee7-146">An XML Web service client can dynamically bind to an XML Web service other than the one referenced in the proxy class using the <xref:System.Web.Services.Protocols.SoapHttpClientProtocol.Discover%2A> method.</span></span> <span data-ttu-id="7aee7-147">通常， <xref:System.Web.Services.Protocols.WebClientProtocol.Url%2A> 属性指的是 XML Web service 的基址。</span><span class="sxs-lookup"><span data-stu-id="7aee7-147">Typically, the <xref:System.Web.Services.Protocols.WebClientProtocol.Url%2A> property refers to the base address of the XML Web service.</span></span> <span data-ttu-id="7aee7-148">但是，在调用方法之前， <xref:System.Web.Services.Protocols.SoapHttpClientProtocol.Discover%2A> 将 <xref:System.Web.Services.Protocols.WebClientProtocol.Url%2A> 属性设置为发现文档的 URL。</span><span class="sxs-lookup"><span data-stu-id="7aee7-148">However, before invoking the <xref:System.Web.Services.Protocols.SoapHttpClientProtocol.Discover%2A> method, set the <xref:System.Web.Services.Protocols.WebClientProtocol.Url%2A> property to a URL of a discovery document.</span></span> <span data-ttu-id="7aee7-149"><xref:System.Web.Services.Protocols.SoapHttpClientProtocol.Discover%2A>方法尝试在发现文档中找到与代理类中定义的绑定匹配的匹配项，然后动态绑定到该绑定。</span><span class="sxs-lookup"><span data-stu-id="7aee7-149">The <xref:System.Web.Services.Protocols.SoapHttpClientProtocol.Discover%2A> method attempts to find a match in the discovery document to the binding defined in the proxy class and then dynamically bind to it.</span></span> <span data-ttu-id="7aee7-150">如果成功，则后续方法调用会定向到发现文档中所述的 XML Web service。</span><span class="sxs-lookup"><span data-stu-id="7aee7-150">If successful, subsequent method calls are directed to the XML Web service described in the discovery document.</span></span>

 <span data-ttu-id="7aee7-151">如果使用 Web 服务描述语言工具生成的代理类 ( # A0) ，则代理类将定义由它使用调用的 XML Web service 方法实现的绑定 <xref:System.Web.Services.WebServiceBindingAttribute> 。</span><span class="sxs-lookup"><span data-stu-id="7aee7-151">If the proxy class is built using the Web Services Description Language tool (Wsdl.exe), the proxy class defines the binding implemented by the XML Web service methods it invokes using the <xref:System.Web.Services.WebServiceBindingAttribute>.</span></span> <span data-ttu-id="7aee7-152">当 XML Web service 实现多个绑定时，Wsdl.exe 为每个绑定创建一个代理类。</span><span class="sxs-lookup"><span data-stu-id="7aee7-152">When an XML Web service implements multiple bindings, Wsdl.exe creates a proxy class for each binding.</span></span> <span data-ttu-id="7aee7-153">应用于每个代理类是一个 <xref:System.Web.Services.WebServiceBindingAttribute> ，它定义绑定的名称及其命名空间。</span><span class="sxs-lookup"><span data-stu-id="7aee7-153">Applied to each proxy class is a <xref:System.Web.Services.WebServiceBindingAttribute> that defines the name of the binding and its namespace.</span></span> <span data-ttu-id="7aee7-154">将属性设置为的发现文档 <xref:System.Web.Services.Protocols.WebClientProtocol.Url%2A> 必须包含对实现相同绑定名称和命名空间的 XML Web service 的引用，否则会引发异常。</span><span class="sxs-lookup"><span data-stu-id="7aee7-154">The discovery document you set the <xref:System.Web.Services.Protocols.WebClientProtocol.Url%2A> property to must contain a reference to an XML Web service that implements the same binding name and namespace, or an exception is thrown.</span></span>



## Examples
 <span data-ttu-id="7aee7-155">下面的代码示例是一个使用 XML Web service 的 Wsdl.exe 实用程序生成的代理类 `Math` 。</span><span class="sxs-lookup"><span data-stu-id="7aee7-155">The following code example is a proxy class generated using the Wsdl.exe utility for the `Math` XML Web service.</span></span> <span data-ttu-id="7aee7-156"><xref:System.Web.Services.WebServiceBindingAttribute>应用于 `Math` 代理类，该代理类将绑定名称设置为 `MathSoap` ，并将其命名空间设置为 `http://tempuri.org/` 。</span><span class="sxs-lookup"><span data-stu-id="7aee7-156">A <xref:System.Web.Services.WebServiceBindingAttribute> is applied to the `Math` proxy class setting the binding name to `MathSoap` and its namespace to `http://tempuri.org/`.</span></span>

 [!code-cpp[SoapHttpClientProtocol.Discover Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapHttpClientProtocol.Discover Example/CPP/source.cpp#1)]
 [!code-csharp[SoapHttpClientProtocol.Discover Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapHttpClientProtocol.Discover Example/CS/source.cs#1)]
 [!code-vb[SoapHttpClientProtocol.Discover Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapHttpClientProtocol.Discover Example/VB/source.vb#1)]

 <span data-ttu-id="7aee7-157">下面的代码示例是使用上述代理类的 Web 服务客户端。</span><span class="sxs-lookup"><span data-stu-id="7aee7-157">The following code example is a Web Service client using the preceding proxy class.</span></span> <span data-ttu-id="7aee7-158">在 `EnterBtn_Click` Web 窗体的事件中，XML Web service 客户端调用 <xref:System.Web.Services.Protocols.SoapHttpClientProtocol.Discover%2A> 尝试动态绑定到用户提供的 URL 的方法。</span><span class="sxs-lookup"><span data-stu-id="7aee7-158">Within the `EnterBtn_Click` event of the Web Form, the XML Web service client calls the <xref:System.Web.Services.Protocols.SoapHttpClientProtocol.Discover%2A> method attempting to dynamically bind to the URL supplied by the user.</span></span>

> [!IMPORTANT]
>  <span data-ttu-id="7aee7-159">此示例具有一个接受用户输入的文本框，这是一个潜在的安全威胁。</span><span class="sxs-lookup"><span data-stu-id="7aee7-159">This example has a text box that accepts user input, which is a potential security threat.</span></span> <span data-ttu-id="7aee7-160">默认情况下，ASP.NET 网页验证用户输入是否不包含脚本或 HTML 元素。</span><span class="sxs-lookup"><span data-stu-id="7aee7-160">By default, ASP.NET Web pages validate that user input does not include script or HTML elements.</span></span> <span data-ttu-id="7aee7-161">有关详细信息，请参阅[脚本侵入概述](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100))。</span><span class="sxs-lookup"><span data-stu-id="7aee7-161">For more information, see [Script Exploits Overview](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100)).</span></span>

 [!code-csharp[SoapHttpClientProtocol.Discover Example#2](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapHttpClientProtocol.Discover Example/CS/sourcecs.aspx#2)]
 [!code-vb[SoapHttpClientProtocol.Discover Example#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapHttpClientProtocol.Discover Example/VB/sourcevb.aspx#2)]

 ]]></format>
        </remarks>
        <exception cref="T:System.Exception"><span data-ttu-id="7aee7-162">未能在 <see cref="P:System.Web.Services.Protocols.WebClientProtocol.Url" /> 处的发现文档中找到代理类中定义的绑定。</span><span class="sxs-lookup"><span data-stu-id="7aee7-162">The binding defined in the proxy class could not be found in the discovery document at <see cref="P:System.Web.Services.Protocols.WebClientProtocol.Url" />.</span></span>

<span data-ttu-id="7aee7-163">- 或 -</span><span class="sxs-lookup"><span data-stu-id="7aee7-163">-or-</span></span>

<span data-ttu-id="7aee7-164">代理类没有定义绑定。</span><span class="sxs-lookup"><span data-stu-id="7aee7-164">The proxy class does not have a binding defined.</span></span></exception>
        <altmember cref="T:System.Web.Services.WebServiceBindingAttribute" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/fxx6cfx2(v=vs.100)"><span data-ttu-id="7aee7-165">XML Web services 发现</span><span class="sxs-lookup"><span data-stu-id="7aee7-165">XML Web Service Discovery</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="EndInvoke">
      <MemberSignature Language="C#" Value="protected object[] EndInvoke (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance object[] EndInvoke(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Protected Function EndInvoke (asyncResult As IAsyncResult) As Object()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; cli::array &lt;System::Object ^&gt; ^ EndInvoke(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="member this.EndInvoke : IAsyncResult -&gt; obj[]" Usage="soapHttpClientProtocol.EndInvoke asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult"><span data-ttu-id="7aee7-166">从 <see cref="T:System.IAsyncResult" /> 方法返回的 <see cref="M:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)" />。</span><span class="sxs-lookup"><span data-stu-id="7aee7-166">The <see cref="T:System.IAsyncResult" /> returned from the <see cref="M:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)" /> method.</span></span></param>
        <summary><span data-ttu-id="7aee7-167">结束使用 SOAP 异步调用 XML Web services 方法。</span><span class="sxs-lookup"><span data-stu-id="7aee7-167">Ends an asynchronous invocation of an XML Web service method using SOAP.</span></span></summary>
        <returns><span data-ttu-id="7aee7-168">包含派生类方法的返回值、所有引用或 <see langword="out" /> 参数的对象数组。</span><span class="sxs-lookup"><span data-stu-id="7aee7-168">An array of objects that contains the return value and any by-reference or <see langword="out" /> parameters of the derived class method.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="7aee7-169">通常，您不会直接调用 <xref:System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke%2A> 方法，除非您为 XML Web service 生成自己的代理类。</span><span class="sxs-lookup"><span data-stu-id="7aee7-169">Typically, you would not call the <xref:System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke%2A> method directly, unless you were building your own proxy class for an XML Web service.</span></span>

 <span data-ttu-id="7aee7-170">由 Web 服务描述语言工具生成的代理类 ( # A0) XML Web service 将 XML Web service 方法公开为代理类的名称，以便同步调用 XML Web service 方法。</span><span class="sxs-lookup"><span data-stu-id="7aee7-170">A proxy class generated by the Web Services Description Language tool (Wsdl.exe) for an XML Web service exposes the XML Web service methods as names off of the proxy class for calling the XML Web service methods synchronously.</span></span> <span data-ttu-id="7aee7-171">若要异步调用 XML Web service 方法，需要为每个 XML Web service 方法将两个附加方法添加到代理类，其中一个 `Begin` 前缀添加到了 XML Web service 方法的名称，另一个添加了 `End` 前缀。</span><span class="sxs-lookup"><span data-stu-id="7aee7-171">For calling the XML Web service methods asynchronously, two additional methods are added to the proxy class for each XML Web service method, one with the `Begin` prefix added to the name of the XML Web service method and one with the `End` prefix added.</span></span>

 <span data-ttu-id="7aee7-172">代理类调用 <xref:System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke%2A> 方法来完成对 XML Web service 方法的异步调用调用。</span><span class="sxs-lookup"><span data-stu-id="7aee7-172">The proxy class calls the <xref:System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke%2A> method to complete an asynchronous invocation call to the XML Web service method.</span></span> <span data-ttu-id="7aee7-173">例如，如果 XML Web service 公开名为的 XML Web service 方法 `Add` ，则代理类包含一个名为 `EndAdd` 的方法，用于完成对 XML Web service 方法的异步调用。</span><span class="sxs-lookup"><span data-stu-id="7aee7-173">For example, if an XML Web service exposes an XML Web service method named `Add`, the proxy class contains a method named `EndAdd`, for completing an asynchronous invocation of an XML Web service method.</span></span> <span data-ttu-id="7aee7-174">在调用的代码中，对 `EndAdd` 方法进行调用 <xref:System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke%2A> ，然后将结果放入的预期返回类型中 `Add` 。</span><span class="sxs-lookup"><span data-stu-id="7aee7-174">Within the code for the `EndAdd` a call is made to the <xref:System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke%2A> method and then the results are placed into the expected return type for `Add`.</span></span>



## Examples
 <span data-ttu-id="7aee7-175">下面的代码示例是 Wsdl.exe 为 XML Web service 生成的代理类 `Math` 。</span><span class="sxs-lookup"><span data-stu-id="7aee7-175">The following code example is a proxy class generated by Wsdl.exe for the `Math` XML Web service.</span></span> <span data-ttu-id="7aee7-176">在 `EndAdd` proxy 类的方法中， <xref:System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke%2A> 方法完成对 XML Web service 方法的异步调用 `Add` 。</span><span class="sxs-lookup"><span data-stu-id="7aee7-176">Within the `EndAdd` method of the proxy class, the <xref:System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke%2A> method completes the asynchronous invocation to the `Add` XML Web service method.</span></span>

 [!code-cpp[Classic SoapHttpClientProtocol.EndInvoke Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic SoapHttpClientProtocol.EndInvoke Example/CPP/source.cpp#1)]
 [!code-csharp[Classic SoapHttpClientProtocol.EndInvoke Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic SoapHttpClientProtocol.EndInvoke Example/CS/source.cs#1)]
 [!code-vb[Classic SoapHttpClientProtocol.EndInvoke Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic SoapHttpClientProtocol.EndInvoke Example/VB/source.vb#1)]

 <span data-ttu-id="7aee7-177">下面的代码示例是 `Math` 从其创建前面的代理类的 XML Web service。</span><span class="sxs-lookup"><span data-stu-id="7aee7-177">The following code example is the `Math` XML Web service, from which the preceding proxy class was created.</span></span>

 [!code-aspx-csharp[Classic SoapHttpClientProtocol.EndInvoke Example#2](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic SoapHttpClientProtocol.EndInvoke Example/CS/sourcecs.asmx)]
 [!code-aspx-vb[Classic SoapHttpClientProtocol.EndInvoke Example#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic SoapHttpClientProtocol.EndInvoke Example/VB/sourcevb.asmx)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="7aee7-178"><paramref name="asyncResult" /> 不是 <see cref="M:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)" /> 方法的返回值。</span><span class="sxs-lookup"><span data-stu-id="7aee7-178"><paramref name="asyncResult" /> is not the return value from the <see cref="M:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)" /> method.</span></span></exception>
        <exception cref="T:System.Web.Services.Protocols.SoapException"><span data-ttu-id="7aee7-179">请求到达了服务器计算机，但未被成功处理。</span><span class="sxs-lookup"><span data-stu-id="7aee7-179">The request reached the server computer, but was not processed successfully.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="7aee7-180">请求对对象的当前状态无效。</span><span class="sxs-lookup"><span data-stu-id="7aee7-180">The request was not valid for the object's current state.</span></span></exception>
        <exception cref="T:System.Net.WebException"><span data-ttu-id="7aee7-181">访问网络时出错。</span><span class="sxs-lookup"><span data-stu-id="7aee7-181">An error occurred while accessing the network.</span></span></exception>
        <altmember cref="T:System.IAsyncResult" />
        <altmember cref="M:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)" />
        <altmember cref="T:System.Web.Services.Protocols.WebClientProtocol" />
      </Docs>
    </Member>
    <Member MemberName="GetReaderForMessage">
      <MemberSignature Language="C#" Value="protected virtual System.Xml.XmlReader GetReaderForMessage (System.Web.Services.Protocols.SoapClientMessage message, int bufferSize);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xml.XmlReader GetReaderForMessage(class System.Web.Services.Protocols.SoapClientMessage message, int32 bufferSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.SoapHttpClientProtocol.GetReaderForMessage(System.Web.Services.Protocols.SoapClientMessage,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetReaderForMessage (message As SoapClientMessage, bufferSize As Integer) As XmlReader" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xml::XmlReader ^ GetReaderForMessage(System::Web::Services::Protocols::SoapClientMessage ^ message, int bufferSize);" />
      <MemberSignature Language="F#" Value="abstract member GetReaderForMessage : System.Web.Services.Protocols.SoapClientMessage * int -&gt; System.Xml.XmlReader&#xA;override this.GetReaderForMessage : System.Web.Services.Protocols.SoapClientMessage * int -&gt; System.Xml.XmlReader" Usage="soapHttpClientProtocol.GetReaderForMessage (message, bufferSize)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.Web.Services.Protocols.SoapClientMessage" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="bufferSize" Type="System.Int32" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="7aee7-182"><see cref="T:System.Web.Services.Protocols.SoapClientMessage" />，提供 <see cref="P:System.Web.Services.Protocols.SoapMessage.Stream" /> 来初始化 <see cref="T:System.Xml.XmlReader" />。</span><span class="sxs-lookup"><span data-stu-id="7aee7-182">A <see cref="T:System.Web.Services.Protocols.SoapClientMessage" /> that provides the <see cref="P:System.Web.Services.Protocols.SoapMessage.Stream" /> to initialize the <see cref="T:System.Xml.XmlReader" />.</span></span></param>
        <param name="bufferSize"><span data-ttu-id="7aee7-183"><see cref="T:System.IO.StreamReader" /> 使用的 <see cref="T:System.Xml.XmlReader" /> 的初始缓冲区大小。</span><span class="sxs-lookup"><span data-stu-id="7aee7-183">The initial buffer size of the <see cref="T:System.IO.StreamReader" /> used by the <see cref="T:System.Xml.XmlReader" />.</span></span></param>
        <summary><span data-ttu-id="7aee7-184">返回一个用 <see cref="T:System.Xml.XmlReader" /> 参数的 <see cref="P:System.Web.Services.Protocols.SoapMessage.Stream" /> 属性初始化的 <see cref="T:System.Web.Services.Protocols.SoapClientMessage" />。</span><span class="sxs-lookup"><span data-stu-id="7aee7-184">Returns an <see cref="T:System.Xml.XmlReader" /> initialized with the <see cref="P:System.Web.Services.Protocols.SoapMessage.Stream" /> property of the <see cref="T:System.Web.Services.Protocols.SoapClientMessage" /> parameter.</span></span></summary>
        <returns><span data-ttu-id="7aee7-185">用 <paramref name="message" /> 参数的 <see cref="T:System.Xml.XmlReader" /> 属性初始化的 <see cref="P:System.Web.Services.Protocols.SoapMessage.Stream" />。</span><span class="sxs-lookup"><span data-stu-id="7aee7-185">A <see cref="T:System.Xml.XmlReader" /> initialized with the <see cref="P:System.Web.Services.Protocols.SoapMessage.Stream" /> property of the <paramref name="message" /> parameter.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetWebRequest">
      <MemberSignature Language="C#" Value="protected override System.Net.WebRequest GetWebRequest (Uri uri);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Net.WebRequest GetWebRequest(class System.Uri uri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.SoapHttpClientProtocol.GetWebRequest(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetWebRequest (uri As Uri) As WebRequest" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Net::WebRequest ^ GetWebRequest(Uri ^ uri);" />
      <MemberSignature Language="F#" Value="override this.GetWebRequest : Uri -&gt; System.Net.WebRequest" Usage="soapHttpClientProtocol.GetWebRequest uri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.WebRequest</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="uri"><span data-ttu-id="7aee7-186"><see cref="T:System.Uri" /> 在创建 <see cref="T:System.Net.WebRequest" /> 时使用。</span><span class="sxs-lookup"><span data-stu-id="7aee7-186">The <see cref="T:System.Uri" /> to use when creating the <see cref="T:System.Net.WebRequest" />.</span></span></param>
        <summary><span data-ttu-id="7aee7-187">为指定的 <paramref name="uri" /> 创建 <see cref="T:System.Net.WebRequest" />。</span><span class="sxs-lookup"><span data-stu-id="7aee7-187">Creates a <see cref="T:System.Net.WebRequest" /> for the specified <paramref name="uri" />.</span></span></summary>
        <returns><span data-ttu-id="7aee7-188">指定 URI 的 <see cref="T:System.Net.WebRequest" />。</span><span class="sxs-lookup"><span data-stu-id="7aee7-188">The <see cref="T:System.Net.WebRequest" /> for the specified URI.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="7aee7-189">可以重写此方法，以便在 <xref:System.Net.WebRequest> 发出 XML Web service 请求之前自定义。</span><span class="sxs-lookup"><span data-stu-id="7aee7-189">This method can be overridden to customize the <xref:System.Net.WebRequest> before the XML Web service request is made.</span></span> <span data-ttu-id="7aee7-190">例如，可以将自定义标头添加到请求。</span><span class="sxs-lookup"><span data-stu-id="7aee7-190">For example, you could add a custom header to the request.</span></span>

 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="7aee7-191"><paramref name="uri" /> 参数为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="7aee7-191">The <paramref name="uri" /> parameter is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.Net.WebRequest" />
        <altmember cref="T:System.Web.Services.Protocols.WebClientProtocol" />
        <altmember cref="M:System.Web.Services.Protocols.WebClientProtocol.GetWebResponse(System.Net.WebRequest)" />
        <altmember cref="T:System.Net.HttpWebRequest" />
        <altmember cref="T:System.Uri" />
      </Docs>
    </Member>
    <Member MemberName="GetWriterForMessage">
      <MemberSignature Language="C#" Value="protected virtual System.Xml.XmlWriter GetWriterForMessage (System.Web.Services.Protocols.SoapClientMessage message, int bufferSize);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xml.XmlWriter GetWriterForMessage(class System.Web.Services.Protocols.SoapClientMessage message, int32 bufferSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.SoapHttpClientProtocol.GetWriterForMessage(System.Web.Services.Protocols.SoapClientMessage,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetWriterForMessage (message As SoapClientMessage, bufferSize As Integer) As XmlWriter" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xml::XmlWriter ^ GetWriterForMessage(System::Web::Services::Protocols::SoapClientMessage ^ message, int bufferSize);" />
      <MemberSignature Language="F#" Value="abstract member GetWriterForMessage : System.Web.Services.Protocols.SoapClientMessage * int -&gt; System.Xml.XmlWriter&#xA;override this.GetWriterForMessage : System.Web.Services.Protocols.SoapClientMessage * int -&gt; System.Xml.XmlWriter" Usage="soapHttpClientProtocol.GetWriterForMessage (message, bufferSize)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlWriter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.Web.Services.Protocols.SoapClientMessage" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="bufferSize" Type="System.Int32" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="7aee7-192"><see cref="T:System.Web.Services.Protocols.SoapClientMessage" />，提供 <see cref="P:System.Web.Services.Protocols.SoapMessage.Stream" /> 来初始化 <see cref="T:System.Xml.XmlWriter" />。</span><span class="sxs-lookup"><span data-stu-id="7aee7-192">A <see cref="T:System.Web.Services.Protocols.SoapClientMessage" /> that provides the <see cref="P:System.Web.Services.Protocols.SoapMessage.Stream" /> to initialize the <see cref="T:System.Xml.XmlWriter" />.</span></span></param>
        <param name="bufferSize"><span data-ttu-id="7aee7-193"><see cref="T:System.IO.StreamWriter" /> 使用的 <see cref="T:System.Xml.XmlWriter" /> 的初始缓冲区大小。</span><span class="sxs-lookup"><span data-stu-id="7aee7-193">The initial buffer size of the <see cref="T:System.IO.StreamWriter" /> used by the <see cref="T:System.Xml.XmlWriter" />.</span></span></param>
        <summary><span data-ttu-id="7aee7-194">返回用 <see cref="T:System.Xml.XmlWriter" /> 参数的 <see cref="P:System.Web.Services.Protocols.SoapMessage.Stream" /> 属性初始化的 <see cref="T:System.Web.Services.Protocols.SoapClientMessage" />。</span><span class="sxs-lookup"><span data-stu-id="7aee7-194">Returns a <see cref="T:System.Xml.XmlWriter" /> initialized with the <see cref="P:System.Web.Services.Protocols.SoapMessage.Stream" /> property of the <see cref="T:System.Web.Services.Protocols.SoapClientMessage" /> parameter.</span></span></summary>
        <returns><span data-ttu-id="7aee7-195">用 <paramref name="message" /> 参数的 <see cref="T:System.Xml.XmlWriter" /> 属性初始化的 <see cref="P:System.Web.Services.Protocols.SoapMessage.Stream" />。</span><span class="sxs-lookup"><span data-stu-id="7aee7-195">A <see cref="T:System.Xml.XmlWriter" /> initialized with the <see cref="P:System.Web.Services.Protocols.SoapMessage.Stream" /> property of the <paramref name="message" /> parameter.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="protected object[] Invoke (string methodName, object[] parameters);" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance object[] Invoke(string methodName, object[] parameters) cil managed" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.SoapHttpClientProtocol.Invoke(System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Protected Function Invoke (methodName As String, parameters As Object()) As Object()" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; cli::array &lt;System::Object ^&gt; ^ Invoke(System::String ^ methodName, cli::array &lt;System::Object ^&gt; ^ parameters);" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="F#" Value="member this.Invoke : string * obj[] -&gt; obj[]" Usage="soapHttpClientProtocol.Invoke (methodName, parameters)" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C#" Value="protected object[] Invoke (string method_name, object[] parameters);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance object[] Invoke(string method_name, object[] parameters) cil managed" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Protected Function Invoke (method_name As String, parameters As Object()) As Object()" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; cli::array &lt;System::Object ^&gt; ^ Invoke(System::String ^ method_name, cli::array &lt;System::Object ^&gt; ^ parameters);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="member this.Invoke : string * obj[] -&gt; obj[]" Usage="soapHttpClientProtocol.Invoke (method_name, parameters)" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="methodName" Type="System.String" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="method_name" Type="System.String" Index="0" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="parameters" Type="System.Object[]" Index="1" />
      </Parameters>
      <Docs>
        <param name="methodName"><span data-ttu-id="7aee7-196">XML Web services 方法的名称。</span><span class="sxs-lookup"><span data-stu-id="7aee7-196">The name of the XML Web service method.</span></span></param>
        <param name="method_name"><span data-ttu-id="7aee7-197">XML Web services 方法的名称。</span><span class="sxs-lookup"><span data-stu-id="7aee7-197">The name of the XML Web service method.</span></span></param>
        <param name="parameters"><span data-ttu-id="7aee7-198">包含要传递给 XML Web services 的参数的对象数组。</span><span class="sxs-lookup"><span data-stu-id="7aee7-198">An array of objects that contains the parameters to pass to the XML Web service.</span></span> <span data-ttu-id="7aee7-199">数组中值的顺序与派生类的调用方法中的参数顺序对应。</span><span class="sxs-lookup"><span data-stu-id="7aee7-199">The order of the values in the array corresponds to the order of the parameters in the calling method of the derived class.</span></span></param>
        <summary><span data-ttu-id="7aee7-200">使用 SOAP 同步调用 XML Web services 方法。</span><span class="sxs-lookup"><span data-stu-id="7aee7-200">Invokes an XML Web service method synchronously using SOAP.</span></span></summary>
        <returns><span data-ttu-id="7aee7-201">包含派生类方法的返回值、所有 <see langword="reference" /> 或 <see langword="out" /> 参数的对象数组。</span><span class="sxs-lookup"><span data-stu-id="7aee7-201">An array of objects that contains the return value and any <see langword="reference" /> or <see langword="out" /> parameters of the derived class method.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="7aee7-202">通常，你不 <xref:System.Web.Services.Protocols.SoapHttpClientProtocol.Invoke%2A> 会直接调用方法，除非你要为 XML Web service 生成自己的代理类。</span><span class="sxs-lookup"><span data-stu-id="7aee7-202">Typically, you do not call the <xref:System.Web.Services.Protocols.SoapHttpClientProtocol.Invoke%2A> method directly, unless you are building your own proxy class for an XML Web service.</span></span>

 <span data-ttu-id="7aee7-203">由 Web 服务描述语言工具生成的代理类 ( # A0) XML Web service 将 XML Web service 方法公开为代理类的名称。</span><span class="sxs-lookup"><span data-stu-id="7aee7-203">A proxy class generated by the Web Services Description Language tool (Wsdl.exe) for an XML Web service exposes the XML Web service methods as names off of the proxy class.</span></span> <span data-ttu-id="7aee7-204">代理类调用 <xref:System.Web.Services.Protocols.SoapHttpClientProtocol.Invoke%2A> 方法来调用 XML Web service 方法调用。</span><span class="sxs-lookup"><span data-stu-id="7aee7-204">The proxy class calls the <xref:System.Web.Services.Protocols.SoapHttpClientProtocol.Invoke%2A> method to invoke an XML Web service method call.</span></span> <span data-ttu-id="7aee7-205">例如，如果 XML Web service 公开名为的 XML Web service 方法 `Add` ，则代理类还包含一个名为的方法 `Add` 。</span><span class="sxs-lookup"><span data-stu-id="7aee7-205">For example, if an XML Web service exposes an XML Web service method named `Add`, the proxy class also contains a method named `Add`.</span></span> <span data-ttu-id="7aee7-206">在 `Add` 代理类中方法的代码中，通过方法对 XML Web service 方法进行同步调用， <xref:System.Web.Services.Protocols.SoapHttpClientProtocol.Invoke%2A> 然后将结果放入的预期返回类型中 `Add` 。</span><span class="sxs-lookup"><span data-stu-id="7aee7-206">Within the code for the `Add` method in the proxy class, a synchronous call is made to the XML Web service method through the <xref:System.Web.Services.Protocols.SoapHttpClientProtocol.Invoke%2A> method and then the results are placed into the expected return type for `Add`.</span></span>

 <span data-ttu-id="7aee7-207">`methodName`参数用于查找可能已添加到方法（如）的自定义属性 <xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute> 。</span><span class="sxs-lookup"><span data-stu-id="7aee7-207">The `methodName` parameter is used to find the custom attributes that may have been added to the method, such as <xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute>.</span></span> <span data-ttu-id="7aee7-208"><xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute> 提供有关 SOAP 协议所需的派生方法的其他信息。</span><span class="sxs-lookup"><span data-stu-id="7aee7-208"><xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute> provides additional information on the derived method which is required for the SOAP protocol.</span></span>



## Examples
 <span data-ttu-id="7aee7-209">下面的代码示例是 Wsdl.exe 为 XML Web service 生成的代理类 `Math` 。</span><span class="sxs-lookup"><span data-stu-id="7aee7-209">The following code example is a proxy class generated by Wsdl.exe for the `Math` XML Web service.</span></span> <span data-ttu-id="7aee7-210">在 `Add` proxy 类的方法中， <xref:System.Web.Services.Protocols.SoapHttpClientProtocol.Invoke%2A> 方法调用 `Add` XML Web service 方法。</span><span class="sxs-lookup"><span data-stu-id="7aee7-210">Within the `Add` method of the proxy class, the <xref:System.Web.Services.Protocols.SoapHttpClientProtocol.Invoke%2A> method is calling the `Add` XML Web service method.</span></span>

 [!code-cpp[Classic SoapHttpClientProtocol.Invoke Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic SoapHttpClientProtocol.Invoke Example/CPP/source.cpp#1)]
 [!code-csharp[Classic SoapHttpClientProtocol.Invoke Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic SoapHttpClientProtocol.Invoke Example/CS/source.cs#1)]
 [!code-vb[Classic SoapHttpClientProtocol.Invoke Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic SoapHttpClientProtocol.Invoke Example/VB/source.vb#1)]

 <span data-ttu-id="7aee7-211">下面的代码示例是 `Math` 从其创建前面的代理类的 XML Web service。</span><span class="sxs-lookup"><span data-stu-id="7aee7-211">The following code example is the `Math` XML Web service, from which the preceding proxy class was created.</span></span>

 [!code-aspx-csharp[Classic SoapHttpClientProtocol.Invoke Example#2](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic SoapHttpClientProtocol.Invoke Example/CS/sourcecs.asmx)]
 [!code-aspx-vb[Classic SoapHttpClientProtocol.Invoke Example#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic SoapHttpClientProtocol.Invoke Example/VB/sourcevb.asmx)]

 ]]></format>
        </remarks>
        <exception cref="T:System.Web.Services.Protocols.SoapException"><span data-ttu-id="7aee7-212">请求到达了服务器计算机，但未被成功处理。</span><span class="sxs-lookup"><span data-stu-id="7aee7-212">The request reached the server computer, but was not processed successfully.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="7aee7-213">请求对对象的当前状态无效。</span><span class="sxs-lookup"><span data-stu-id="7aee7-213">The request was not valid for the object's current state.</span></span></exception>
        <exception cref="T:System.Net.WebException"><span data-ttu-id="7aee7-214">访问网络时出错。</span><span class="sxs-lookup"><span data-stu-id="7aee7-214">An error occurred while accessing the network.</span></span></exception>
        <altmember cref="T:System.Web.Services.Protocols.SoapDocumentMethodAttribute" />
        <altmember cref="T:System.Web.Services.Protocols.WebClientProtocol" />
      </Docs>
    </Member>
    <MemberGroup MemberName="InvokeAsync">
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="7aee7-215">异步调用指定的方法。</span><span class="sxs-lookup"><span data-stu-id="7aee7-215">Invokes the specified method asynchronously.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="InvokeAsync">
      <MemberSignature Language="C#" Value="protected void InvokeAsync (string methodName, object[] parameters, System.Threading.SendOrPostCallback callback);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void InvokeAsync(string methodName, object[] parameters, class System.Threading.SendOrPostCallback callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.SoapHttpClientProtocol.InvokeAsync(System.String,System.Object[],System.Threading.SendOrPostCallback)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub InvokeAsync (methodName As String, parameters As Object(), callback As SendOrPostCallback)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void InvokeAsync(System::String ^ methodName, cli::array &lt;System::Object ^&gt; ^ parameters, System::Threading::SendOrPostCallback ^ callback);" />
      <MemberSignature Language="F#" Value="member this.InvokeAsync : string * obj[] * System.Threading.SendOrPostCallback -&gt; unit" Usage="soapHttpClientProtocol.InvokeAsync (methodName, parameters, callback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="methodName" Type="System.String" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="parameters" Type="System.Object[]" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="callback" Type="System.Threading.SendOrPostCallback" Index="2" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="methodName"><span data-ttu-id="7aee7-216">要调用的方法的名称。</span><span class="sxs-lookup"><span data-stu-id="7aee7-216">The name of the method to invoke.</span></span></param>
        <param name="parameters"><span data-ttu-id="7aee7-217">要传递给该方法的参数。</span><span class="sxs-lookup"><span data-stu-id="7aee7-217">The parameters to pass to the method.</span></span></param>
        <param name="callback"><span data-ttu-id="7aee7-218">当方法调用完成后调用的委托。</span><span class="sxs-lookup"><span data-stu-id="7aee7-218">The delegate called when the method invocation has completed.</span></span></param>
        <summary><span data-ttu-id="7aee7-219">异步调用指定的方法。</span><span class="sxs-lookup"><span data-stu-id="7aee7-219">Invokes the specified method asynchronously.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvokeAsync">
      <MemberSignature Language="C#" Value="protected void InvokeAsync (string methodName, object[] parameters, System.Threading.SendOrPostCallback callback, object userState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void InvokeAsync(string methodName, object[] parameters, class System.Threading.SendOrPostCallback callback, object userState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.SoapHttpClientProtocol.InvokeAsync(System.String,System.Object[],System.Threading.SendOrPostCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub InvokeAsync (methodName As String, parameters As Object(), callback As SendOrPostCallback, userState As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void InvokeAsync(System::String ^ methodName, cli::array &lt;System::Object ^&gt; ^ parameters, System::Threading::SendOrPostCallback ^ callback, System::Object ^ userState);" />
      <MemberSignature Language="F#" Value="member this.InvokeAsync : string * obj[] * System.Threading.SendOrPostCallback * obj -&gt; unit" Usage="soapHttpClientProtocol.InvokeAsync (methodName, parameters, callback, userState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="methodName" Type="System.String" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="parameters" Type="System.Object[]" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="callback" Type="System.Threading.SendOrPostCallback" Index="2" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="userState" Type="System.Object" Index="3" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="methodName"><span data-ttu-id="7aee7-220">要调用的方法的名称。</span><span class="sxs-lookup"><span data-stu-id="7aee7-220">The name of the method to invoke.</span></span></param>
        <param name="parameters"><span data-ttu-id="7aee7-221">要传递给该方法的参数。</span><span class="sxs-lookup"><span data-stu-id="7aee7-221">The parameters to pass to the method.</span></span></param>
        <param name="callback"><span data-ttu-id="7aee7-222">当方法调用完成后调用的委托。</span><span class="sxs-lookup"><span data-stu-id="7aee7-222">The delegate called when the method invocation has completed.</span></span></param>
        <param name="userState"><span data-ttu-id="7aee7-223">用于将状态信息传入 <paramref name="callback" /> 委托的对象。</span><span class="sxs-lookup"><span data-stu-id="7aee7-223">An object used to pass state information into the <paramref name="callback" /> delegate.</span></span></param>
        <summary><span data-ttu-id="7aee7-224">异步调用指定的方法。</span><span class="sxs-lookup"><span data-stu-id="7aee7-224">Invokes the specified method asynchronously.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SoapVersion">
      <MemberSignature Language="C#" Value="public System.Web.Services.Protocols.SoapProtocolVersion SoapVersion { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.Services.Protocols.SoapProtocolVersion SoapVersion" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.SoapHttpClientProtocol.SoapVersion" />
      <MemberSignature Language="VB.NET" Value="Public Property SoapVersion As SoapProtocolVersion" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::Services::Protocols::SoapProtocolVersion SoapVersion { System::Web::Services::Protocols::SoapProtocolVersion get(); void set(System::Web::Services::Protocols::SoapProtocolVersion value); };" />
      <MemberSignature Language="F#" Value="member this.SoapVersion : System.Web.Services.Protocols.SoapProtocolVersion with get, set" Usage="System.Web.Services.Protocols.SoapHttpClientProtocol.SoapVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.Runtime.InteropServices.ComVisible(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.ComVisible(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.Services.Protocols.SoapProtocolVersion</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7aee7-225">获取或设置用于对 XML Web services 修改的 SOAP 请求的 SOAP 协议版本。</span><span class="sxs-lookup"><span data-stu-id="7aee7-225">Gets or sets the version of the SOAP protocol used to make the SOAP request to the XML Web service.</span></span></summary>
        <value><span data-ttu-id="7aee7-226"><see cref="T:System.Web.Services.Protocols.SoapProtocolVersion" /> 值之一。</span><span class="sxs-lookup"><span data-stu-id="7aee7-226">One of the <see cref="T:System.Web.Services.Protocols.SoapProtocolVersion" /> values.</span></span> <span data-ttu-id="7aee7-227">默认值为 <see cref="F:System.Web.Services.Protocols.SoapProtocolVersion.Soap11" />。</span><span class="sxs-lookup"><span data-stu-id="7aee7-227">The default is <see cref="F:System.Web.Services.Protocols.SoapProtocolVersion.Soap11" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="7aee7-228">在 <xref:System.Web.Services.Protocols.SoapHttpClientProtocol.SoapVersion%2A> Web 服务描述语言工具生成的代理类中设置属性 ( # A0) <xref:System.Web.Services.Protocols.SoapProtocolVersion.Soap11> 默认情况下，当 XML WEB SERVICE 的 WSDL 文档支持 SOAP 版本1.1 时，默认为。</span><span class="sxs-lookup"><span data-stu-id="7aee7-228">The <xref:System.Web.Services.Protocols.SoapHttpClientProtocol.SoapVersion%2A> property is set in the proxy class generated by the Web Services Description Language tool (Wsdl.exe) to <xref:System.Web.Services.Protocols.SoapProtocolVersion.Soap11> by default when a WSDL document for an XML Web service supports SOAP version 1.1.</span></span> <span data-ttu-id="7aee7-229">但是，当 XML Web service 仅支持 SOAP 1.2 时，Wsdl.exe 将 <xref:System.Web.Services.Protocols.SoapHttpClientProtocol.SoapVersion%2A> 属性设置为 <xref:System.Web.Services.Protocols.SoapProtocolVersion.Soap12> 。</span><span class="sxs-lookup"><span data-stu-id="7aee7-229">However, when an XML Web service only supports SOAP 1.2, Wsdl.exe sets the <xref:System.Web.Services.Protocols.SoapHttpClientProtocol.SoapVersion%2A> property to <xref:System.Web.Services.Protocols.SoapProtocolVersion.Soap12>.</span></span> <span data-ttu-id="7aee7-230">若要在使用 Wsdl.exe 生成代理类时选择 SOAP 协议的版本，请将 `/protocol` 开关与或设置一起使用， `SOAP` `SOAP12` 以将 <xref:System.Web.Services.Protocols.SoapHttpClientProtocol.SoapVersion%2A> 属性分别设置为 <xref:System.Web.Services.Protocols.SoapProtocolVersion.Soap11> 和 <xref:System.Web.Services.Protocols.SoapProtocolVersion.Soap12> 。</span><span class="sxs-lookup"><span data-stu-id="7aee7-230">To choose the version of the SOAP protocol when generating the proxy class with Wsdl.exe, use the `/protocol` switch with the `SOAP` or `SOAP12` settings to set the <xref:System.Web.Services.Protocols.SoapHttpClientProtocol.SoapVersion%2A> property to <xref:System.Web.Services.Protocols.SoapProtocolVersion.Soap11> and <xref:System.Web.Services.Protocols.SoapProtocolVersion.Soap12>, respectively.</span></span>



## Examples
 <span data-ttu-id="7aee7-231">下面的代码示例将用于与 XML Web service 通信的协议版本设置为 SOAP 1.2。</span><span class="sxs-lookup"><span data-stu-id="7aee7-231">The following code example sets the version of the protocol used to communicate with an XML Web service to SOAP 1.2.</span></span>

 [!code-aspx-csharp[SoapHttpClientProtocol.SoapVersion#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapHttpClientProtocol.SoapVersion/CS/serverusageclientcs.aspx#1)]
 [!code-aspx-vb[SoapHttpClientProtocol.SoapVersion#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapHttpClientProtocol.SoapVersion/VB/serverusageclientvb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Services.Protocols.SoapProtocolVersion" />
        <altmember cref="P:System.Web.HttpContext.Items" />
      </Docs>
    </Member>
  </Members>
</Type>
