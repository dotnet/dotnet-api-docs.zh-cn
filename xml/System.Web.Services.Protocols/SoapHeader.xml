<Type Name="SoapHeader" FullName="System.Web.Services.Protocols.SoapHeader">
  <Metadata><Meta Name="ms.openlocfilehash" Value="c0b9c317531bf4db7366f41c260e90d0cddbccb6" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89914019" /></Metadata><TypeSignature Language="C#" Value="public abstract class SoapHeader" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit SoapHeader extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.Services.Protocols.SoapHeader" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class SoapHeader" />
  <TypeSignature Language="C++ CLI" Value="public ref class SoapHeader abstract" />
  <TypeSignature Language="F#" Value="type SoapHeader = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Services</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.Xml.Serialization.SoapType(IncludeInSchema=false)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Xml.Serialization.SoapType(IncludeInSchema=false)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Xml.Serialization.XmlType(IncludeInSchema=false)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Xml.Serialization.XmlType(IncludeInSchema=false)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>当在派生类中被重写时，表示 SOAP 标头的内容。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果数据与 XML Web service 方法的主要功能无关，则 SOAP 标头提供一种方法，用于将数据传入和向 XML Web service 方法传递数据。 例如，XML Web service 可能包含若干 XML Web service 方法，每个方法都需要自定义身份验证方案。 不是将参数添加到自定义身份验证方案的每个 XML Web service 方法，而是 <xref:System.Web.Services.Protocols.SoapHeaderAttribute> 引用派生自的类， <xref:System.Web.Services.Protocols.SoapHeader> 可应用于每个 XML Web service 方法。 派生自的类的实现 <xref:System.Web.Services.Protocols.SoapHeader> 处理自定义的身份验证方案。 通过这种方式，XML Web service 方法仅实现特定于该方法的功能，并使用 SOAP 标头添加附加功能。  
  
 以下列表概述了接收和处理 SOAP 标头的基本步骤：  
  
1.  创建一个派生自的类，该类 <xref:System.Web.Services.Protocols.SoapHeader> 表示传入 SOAP 标头的数据。  
  
2.  向实现第一步中创建的类型的 XML Web service 或 XML Web service 客户端代理类的类添加成员。  
  
3.  将应用 <xref:System.Web.Services.Protocols.SoapHeaderAttribute> 到代理类中的 XML Web service 方法或相应方法，并指定在属性的第二步中创建的成员 <xref:System.Web.Services.Protocols.SoapHeaderAttribute.MemberName%2A> 。  
  
4.  在 XML Web service 方法或 XML Web service 客户端代码中，访问 <xref:System.Web.Services.Protocols.SoapHeaderAttribute.MemberName%2A> 属性来处理 SOAP 标头中发送的数据。  
  
   
  
## Examples  
 下面的 `MyWebService` XML Web service 定义 `MyHeader` SOAP 标头，并要求它与对 XML Web service 方法的任何调用一起发送 `MyWebMethod` 。 此外，还会 `MyWebMethod` 接收 `MyHeader` soap 标头以外的任何 soap 标头。  
  
 [!code-aspx-csharp[Classic SoapHeader.DidUnderstand Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic SoapHeader.DidUnderstand Example/CS/sourcecs.asmx)]
 [!code-aspx-vb[Classic SoapHeader.DidUnderstand Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic SoapHeader.DidUnderstand Example/VB/sourcevb.asmx)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Services.Protocols.SoapUnknownHeader" />
    <altmember cref="T:System.Web.Services.Protocols.SoapHeaderException" />
    <altmember cref="T:System.Web.Services.Protocols.SoapHeaderAttribute" />
    <altmember cref="T:System.Web.Services.Protocols.SoapHeaderDirection" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SoapHeader ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.SoapHeader.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; SoapHeader();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Web.Services.Protocols.SoapHeader" /> 类的新实例。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Actor">
      <MemberSignature Language="C#" Value="public string Actor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Actor" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.SoapHeader.Actor" />
      <MemberSignature Language="VB.NET" Value="Public Property Actor As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Actor { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Actor : string with get, set" Usage="System.Web.Services.Protocols.SoapHeader.Actor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue("")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue("")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Xml.Serialization.SoapAttribute("actor", Namespace="http://schemas.xmlsoap.org/soap/envelope/")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Xml.Serialization.SoapAttribute("actor", Namespace="http://schemas.xmlsoap.org/soap/envelope/")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Xml.Serialization.XmlAttribute("actor", Namespace="http://schemas.xmlsoap.org/soap/envelope/")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Xml.Serialization.XmlAttribute("actor", Namespace="http://schemas.xmlsoap.org/soap/envelope/")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置 SOAP 标头的接收者。</summary>
        <value>SOAP 标头的接收者。 默认值为空字符串("")。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 若要设置 SOAP 标头的接收方，请设置 <xref:System.Web.Services.Protocols.SoapHeader.Actor%2A> 属性。 无论用于与 XML Web service 进行通信的 SOAP 协议的版本如何，.NET Framework 都会自动生成特定于 SOAP 协议版本的 SOAP 消息。 具体而言，这两个版本的表示接收者的 XML 元素和 XML 命名空间不同。  
  
 接收 SOAP 标头的 XML Web services 可以通过获取或属性来获取目标接收方 <xref:System.Web.Services.Protocols.SoapHeader.Role%2A> <xref:System.Web.Services.Protocols.SoapHeader.Actor%2A> 。  
  
 对于元素，接收方 (s) `Body` ，soap 消息的元素内的每个 soap 标头都 `Header` 不需要相同。 如果 `Header` SOAP 消息中存在元素，则它表示可与 XML Web service 方法或中介一起发送和的附加数据。 在版本1.1 中，该数据的接收方称为 SOAP， `Actor` 可以是与 XML Web service 方法的 uri 不同的 uri。  
  
 有关 SOAP 特性的详细信息 `actor` ，请参阅 [soap](https://www.w3.org/TR/soap/) 规范。
  
   
  
## Examples  
 以下 XML Web service 客户端在 `MyWebMethod` 创建类型的自定义 SOAP 标头 `MyHeader` 并将属性设置为后，将调用 XML Web service 方法 <xref:System.Web.Services.Protocols.SoapHeader.Actor%2A> `http://www.contoso.com/MySoapHeaderHandler` 。  
  
 [!code-cpp[Classic SoapHeader.Actor Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic SoapHeader.Actor Example/CPP/source.cpp#1)]
 [!code-csharp[Classic SoapHeader.Actor Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic SoapHeader.Actor Example/CS/source.cs#1)]
 [!code-vb[Classic SoapHeader.Actor Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic SoapHeader.Actor Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DidUnderstand">
      <MemberSignature Language="C#" Value="public bool DidUnderstand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DidUnderstand" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.SoapHeader.DidUnderstand" />
      <MemberSignature Language="VB.NET" Value="Public Property DidUnderstand As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DidUnderstand { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.DidUnderstand : bool with get, set" Usage="System.Web.Services.Protocols.SoapHeader.DidUnderstand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Xml.Serialization.SoapIgnore]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Xml.Serialization.SoapIgnore&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Xml.Serialization.XmlIgnore]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Xml.Serialization.XmlIgnore&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示 XML Web services 方法是否已正确处理 SOAP 标头。</summary>
        <value>如果已正确处理 SOAP 标头，则为 <see langword="true" />；否则为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 对于由 XML Web service 定义的 SOAP 标头，ASP.NET 假定 XML Web service 方法通过将的初始值设置为，正确处理 SOAP 标 <xref:System.Web.Services.Protocols.SoapHeader.DidUnderstand%2A> 头 `true` 。 对于 XML Web service 未定义的 SOAP 标头，初始值为 `false` 。 如果 ASP.NET 检测到在方法返回后传递到 XML Web service 方法的 SOAP 标头 <xref:System.Web.Services.Protocols.SoapHeader.DidUnderstand%2A> ，并将其设置为，则会将返回 `false` <xref:System.Web.Services.Protocols.SoapHeaderException> 到 XML Web service 客户端，而不是 XML Web service 方法的结果。  
  
   
  
## Examples  
 下面的 `MyWebService` XML Web service 定义 `MyHeader` SOAP 标头，并要求它与对 XML Web service 方法的任何调用一起发送 `MyWebMethod` 。 此外，还会 `MyWebMethod` 接收 `MyHeader` soap 标头以外的任何 soap 标头。 对于可以处理的 SOAP 标头 `MyWebMethod` ， <xref:System.Web.Services.Protocols.SoapHeader.DidUnderstand%2A> 将设置为 `true` 。  
  
 [!code-aspx-csharp[Classic SoapHeader.DidUnderstand Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic SoapHeader.DidUnderstand Example/CS/sourcecs.asmx)]
 [!code-aspx-vb[Classic SoapHeader.DidUnderstand Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic SoapHeader.DidUnderstand Example/VB/sourcevb.asmx)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.Services.Protocols.SoapHeader.MustUnderstand" />
        <altmember cref="T:System.Web.Services.Protocols.SoapHeaderException" />
      </Docs>
    </Member>
    <Member MemberName="EncodedMustUnderstand">
      <MemberSignature Language="C#" Value="public string EncodedMustUnderstand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string EncodedMustUnderstand" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.SoapHeader.EncodedMustUnderstand" />
      <MemberSignature Language="VB.NET" Value="Public Property EncodedMustUnderstand As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ EncodedMustUnderstand { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.EncodedMustUnderstand : string with get, set" Usage="System.Web.Services.Protocols.SoapHeader.EncodedMustUnderstand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue("0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue("0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Xml.Serialization.SoapAttribute("mustUnderstand", Namespace="http://schemas.xmlsoap.org/soap/envelope/")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Xml.Serialization.SoapAttribute("mustUnderstand", Namespace="http://schemas.xmlsoap.org/soap/envelope/")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Xml.Serialization.XmlAttribute("mustUnderstand", Namespace="http://schemas.xmlsoap.org/soap/envelope/")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Xml.Serialization.XmlAttribute("mustUnderstand", Namespace="http://schemas.xmlsoap.org/soap/envelope/")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>当与 SOAP 协议 1.1 版通信时，获取或设置 SOAP 标头的 <see langword="mustUnderstand" /> XML 特性值。</summary>
        <value><see langword="mustUnderstand" /> 特性的值。 默认为“0”。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 请勿使用此属性。 请改用 <xref:System.Web.Services.Protocols.SoapHeader.MustUnderstand%2A> 属性。  
  
   
  
## Examples  
 [!code-cpp[SoapHeader_EncodedMustUnderstand#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapHeader_EncodedMustUnderstand/CPP/soapheader_encodedmustunderstand.cpp#1)]
 [!code-csharp[SoapHeader_EncodedMustUnderstand#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapHeader_EncodedMustUnderstand/CS/soapheader_encodedmustunderstand.cs#1)]
 [!code-vb[SoapHeader_EncodedMustUnderstand#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapHeader_EncodedMustUnderstand/VB/soapheader_encodedmustunderstand.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">属性设置为“0”、“1”、“true”或“false”之外的值。</exception>
        <altmember cref="P:System.Web.Services.Protocols.SoapHeader.MustUnderstand" />
      </Docs>
    </Member>
    <Member MemberName="EncodedMustUnderstand12">
      <MemberSignature Language="C#" Value="public string EncodedMustUnderstand12 { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string EncodedMustUnderstand12" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.SoapHeader.EncodedMustUnderstand12" />
      <MemberSignature Language="VB.NET" Value="Public Property EncodedMustUnderstand12 As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ EncodedMustUnderstand12 { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.EncodedMustUnderstand12 : string with get, set" Usage="System.Web.Services.Protocols.SoapHeader.EncodedMustUnderstand12" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue("0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue("0")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.Runtime.InteropServices.ComVisible(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.ComVisible(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.Xml.Serialization.SoapAttribute("mustUnderstand", Namespace="http://www.w3.org/2003/05/soap-envelope")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Xml.Serialization.SoapAttribute("mustUnderstand", Namespace="http://www.w3.org/2003/05/soap-envelope")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.Xml.Serialization.XmlAttribute("mustUnderstand", Namespace="http://www.w3.org/2003/05/soap-envelope")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Xml.Serialization.XmlAttribute("mustUnderstand", Namespace="http://www.w3.org/2003/05/soap-envelope")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>与 SOAP 协议 1.2 版通信时，获取或设置 SOAP 标头的 <see langword="mustUnderstand" /> XML 属性的值。</summary>
        <value>SOAP 标头的 <see langword="mustUnderstand" /> XML 特性的值。 默认为“0”。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 请勿使用此属性。 请改用 <xref:System.Web.Services.Protocols.SoapHeader.MustUnderstand%2A> 属性。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">属性设置为“0”、“1”、“true”或“false”之外的值。</exception>
        <altmember cref="P:System.Web.Services.Protocols.SoapHeader.MustUnderstand" />
      </Docs>
    </Member>
    <Member MemberName="EncodedRelay">
      <MemberSignature Language="C#" Value="public string EncodedRelay { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string EncodedRelay" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.SoapHeader.EncodedRelay" />
      <MemberSignature Language="VB.NET" Value="Public Property EncodedRelay As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ EncodedRelay { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.EncodedRelay : string with get, set" Usage="System.Web.Services.Protocols.SoapHeader.EncodedRelay" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue("0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue("0")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.Runtime.InteropServices.ComVisible(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.ComVisible(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.Xml.Serialization.SoapAttribute("relay", Namespace="http://www.w3.org/2003/05/soap-envelope")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Xml.Serialization.SoapAttribute("relay", Namespace="http://www.w3.org/2003/05/soap-envelope")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.Xml.Serialization.XmlAttribute("relay", Namespace="http://www.w3.org/2003/05/soap-envelope")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Xml.Serialization.XmlAttribute("relay", Namespace="http://www.w3.org/2003/05/soap-envelope")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置 SOAP 1.2 标头的中转特性。</summary>
        <value>“0”、“false”、“1”或“true”。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此 <xref:System.Web.Services.Protocols.SoapHeader.EncodedRelay%2A> 属性仅适用于 SOAP 1.2，指示消息的接收方在将消息转发到下一个节点时是否转发此标头。 由于 .NET Framework 不支持 SOAP 中介，因此此属性将进行序列化和反序列化，但会被忽略。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MustUnderstand">
      <MemberSignature Language="C#" Value="public bool MustUnderstand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool MustUnderstand" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.SoapHeader.MustUnderstand" />
      <MemberSignature Language="VB.NET" Value="Public Property MustUnderstand As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool MustUnderstand { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.MustUnderstand : bool with get, set" Usage="System.Web.Services.Protocols.SoapHeader.MustUnderstand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Xml.Serialization.SoapIgnore]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Xml.Serialization.SoapIgnore&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Xml.Serialization.XmlIgnore]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Xml.Serialization.XmlIgnore&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示是否必须理解 <see cref="T:System.Web.Services.Protocols.SoapHeader" />。</summary>
        <value>如果 XML Web services 必须正确解释和处理 <see cref="T:System.Web.Services.Protocols.SoapHeader" />，则为 <see langword="true" />；否则为 <see langword="false" />。 默认值为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 当 XML Web service 客户端将 SOAP 标头添加到属性设置为的 XML Web service 方法调用 <xref:System.Web.Services.Protocols.SoapHeader.MustUnderstand%2A> `true` 中时，XML Web service 方法必须将 <xref:System.Web.Services.Protocols.SoapHeader.DidUnderstand%2A> 属性设置为 `true` ; 否则， <xref:System.Web.Services.Protocols.SoapHeaderException> ASP.NET 将 XML Web service 引发。  
  
 尽管 <xref:System.Web.Services.Protocols.SoapHeader.EncodedMustUnderstand%2A> 和属性都 <xref:System.Web.Services.Protocols.SoapHeader.MustUnderstand%2A> 可用于在 `mustUnderstand` SOAP 标头中设置属性的值，但 <xref:System.Web.Services.Protocols.SoapHeader.MustUnderstand%2A> 属性允许使用布尔值设置特性。  
  
 有关向客户端添加 SOAP 标头的详细信息，请参阅 [使用 Soap 标头](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/77hkfhh8(v=vs.100))。  
  
   
  
## Examples  
 以下 XML Web service 客户端定义类型的自定义 SOAP 标头 `MyHeader` ，将 <xref:System.Web.Services.Protocols.SoapHeader.MustUnderstand%2A> 属性设置为 `true` ，并调用 `MyWebMethod` XML Web service 方法。 如果 XML Web service 方法未将 <xref:System.Web.Services.Protocols.SoapHeader.DidUnderstand%2A> SOAP 标头的属性设置 `MyHeader` 为，则 `true` <xref:System.Web.Services.Protocols.SoapHeaderException> 会引发。  
  
 [!code-cpp[Classic SoapHeader.MustUnderstand Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic SoapHeader.MustUnderstand Example/CPP/source.cpp#1)]
 [!code-csharp[Classic SoapHeader.MustUnderstand Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic SoapHeader.MustUnderstand Example/CS/source.cs#1)]
 [!code-vb[Classic SoapHeader.MustUnderstand Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic SoapHeader.MustUnderstand Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.Services.Protocols.SoapHeader.DidUnderstand" />
        <altmember cref="T:System.Web.Services.Protocols.SoapHeaderException" />
      </Docs>
    </Member>
    <Member MemberName="Relay">
      <MemberSignature Language="C#" Value="public bool Relay { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Relay" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.SoapHeader.Relay" />
      <MemberSignature Language="VB.NET" Value="Public Property Relay As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Relay { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Relay : bool with get, set" Usage="System.Web.Services.Protocols.SoapHeader.Relay" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.Runtime.InteropServices.ComVisible(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.ComVisible(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.Xml.Serialization.SoapIgnore]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Xml.Serialization.SoapIgnore&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.Xml.Serialization.XmlIgnore]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Xml.Serialization.XmlIgnore&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示当前节点不理解 SOAP 标头时是否将该标头中转到下一个 SOAP 节点。</summary>
        <value>如果 SOAP 标头的某个“relay”特性设置为“true”，则为 <see langword="true" />；否则为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 默认 SOAP 1.2 处理规则要求 SOAP 节点在将消息传递到下一个节点之前删除 SOAP 处理节点不能理解的标头。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Role">
      <MemberSignature Language="C#" Value="public string Role { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Role" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.SoapHeader.Role" />
      <MemberSignature Language="VB.NET" Value="Public Property Role As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Role { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Role : string with get, set" Usage="System.Web.Services.Protocols.SoapHeader.Role" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue("")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue("")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.Runtime.InteropServices.ComVisible(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.ComVisible(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.Xml.Serialization.SoapAttribute("role", Namespace="http://www.w3.org/2003/05/soap-envelope")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Xml.Serialization.SoapAttribute("role", Namespace="http://www.w3.org/2003/05/soap-envelope")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.Xml.Serialization.XmlAttribute("role", Namespace="http://www.w3.org/2003/05/soap-envelope")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Xml.Serialization.XmlAttribute("role", Namespace="http://www.w3.org/2003/05/soap-envelope")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置 SOAP 标头的接收者。</summary>
        <value>一个 URI，表示 SOAP 标头的接收者。 默认值为空字符串("")。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 若要设置 SOAP 标头的接收方，请设置 <xref:System.Web.Services.Protocols.SoapHeader.Actor%2A> 属性。 无论用于与 XML Web service 进行通信的 SOAP 协议的版本如何，.NET Framework 都会自动生成特定于 SOAP 协议版本的 SOAP 消息。 具体而言，这两个版本的表示接收者的 XML 元素和 XML 命名空间不同。  
  
 接收 SOAP 标头的 XML Web services 可以通过获取或属性来获取目标接收方 <xref:System.Web.Services.Protocols.SoapHeader.Role%2A> <xref:System.Web.Services.Protocols.SoapHeader.Actor%2A> 。  
  
 对于元素，接收方 (s) `Body` ，soap 消息的元素内的每个 soap 标头都 `Header` 不需要相同。 如果 `Header` SOAP 消息中存在元素，则它表示可与 XML Web service 方法或中介一起发送和的附加数据。 该数据的接收方（ `Role` 在 soap 规范的版本1.2 中称为 soap， `Actor` 版本1.1 中的 soap）可以是与 XML Web service 方法的 uri 不同的 uri。  
  
 有关 SOAP 特性的详细信息 `actor` ，请参阅 [soap](https://www.w3.org/TR/soap/) 规范。
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
