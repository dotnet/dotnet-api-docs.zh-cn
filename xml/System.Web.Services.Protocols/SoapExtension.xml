<Type Name="SoapExtension" FullName="System.Web.Services.Protocols.SoapExtension">
  <Metadata><Meta Name="ms.openlocfilehash" Value="6008300f656bd87ea908aa7d27145052c96e4607" /><Meta Name="ms.sourcegitcommit" Value="397961a0164281b579f68064c3bb66c071f374d9" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/14/2020" /><Meta Name="ms.locfileid" Value="78771035" /></Metadata><TypeSignature Language="C#" Value="public abstract class SoapExtension" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit SoapExtension extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.Services.Protocols.SoapExtension" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class SoapExtension" />
  <TypeSignature Language="C++ CLI" Value="public ref class SoapExtension abstract" />
  <TypeSignature Language="F#" Value="type SoapExtension = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Services</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="4c76f-101">使用 ASP.NET 创建的 XML Web services 的 SOAP 扩展的基类。</span><span class="sxs-lookup"><span data-stu-id="4c76f-101">The base class for SOAP extensions for XML Web services created using ASP.NET.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4c76f-102">ASP.NET 允许通过扩展性机制构建与 SOAP 相关的基础结构。</span><span class="sxs-lookup"><span data-stu-id="4c76f-102">ASP.NET allows a SOAP-related infrastructure to be built by means of an extensibility mechanism.</span></span> <span data-ttu-id="4c76f-103">ASP.NET SOAP 扩展体系结构围绕一个扩展，可以在客户端或服务器上的消息处理的特定阶段检查或修改消息。</span><span class="sxs-lookup"><span data-stu-id="4c76f-103">The ASP.NET SOAP extension architecture revolves around an extension that can inspect or modify a message at specific stages in message processing on either the client or the server.</span></span>  
  
 <span data-ttu-id="4c76f-104">ASP.NET SOAP 扩展派生自 <xref:System.Web.Services.Protocols.SoapExtension> 类。</span><span class="sxs-lookup"><span data-stu-id="4c76f-104">ASP.NET SOAP extensions derive from the <xref:System.Web.Services.Protocols.SoapExtension> class.</span></span> <span data-ttu-id="4c76f-105"><xref:System.Web.Services.Protocols.SoapExtension.GetInitializer%2A>和 <xref:System.Web.Services.Protocols.SoapExtension.Initialize%2A> 方法提供了用于初始化 SOAP 扩展以提高性能的替代机制。</span><span class="sxs-lookup"><span data-stu-id="4c76f-105">The <xref:System.Web.Services.Protocols.SoapExtension.GetInitializer%2A> and <xref:System.Web.Services.Protocols.SoapExtension.Initialize%2A> methods provide alternative mechanisms for initializing the SOAP extension to enhance performance.</span></span> <span data-ttu-id="4c76f-106"><xref:System.Web.Services.Protocols.SoapExtension.ProcessMessage%2A>是大多数 SOAP 扩展的核心，因为方法是在中定义的每个阶段调用的 <xref:System.Web.Services.Protocols.SoapMessageStage> ，因此，soap 扩展可以执行该特定 SOAP 扩展所需的行为。</span><span class="sxs-lookup"><span data-stu-id="4c76f-106"><xref:System.Web.Services.Protocols.SoapExtension.ProcessMessage%2A> is the heart of most SOAP extensions, as the method is called at each stage defined in <xref:System.Web.Services.Protocols.SoapMessageStage>, allowing the SOAP extension to perform the desired behavior of that specific SOAP extension.</span></span> <span data-ttu-id="4c76f-107">对于需要修改 SOAP 请求或 SOAP 响应的 SOAP 扩展，提供了 <xref:System.Web.Services.Protocols.SoapExtension.ChainStream%2A> 接收通过网络发送的建议数据的机会。</span><span class="sxs-lookup"><span data-stu-id="4c76f-107">For SOAP extensions that need to modify the SOAP request or SOAP response, <xref:System.Web.Services.Protocols.SoapExtension.ChainStream%2A> provides an opportunity to receive the proposed data to be sent across the wire.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4c76f-108">以下 `TraceExtension` soap 扩展在应用于 XML Web service 方法时，会将 soap 请求和 soap 响应输出到指定的文件。</span><span class="sxs-lookup"><span data-stu-id="4c76f-108">The following `TraceExtension` SOAP extension outputs the SOAP request and SOAP response to a specified file when applied to an XML Web service method.</span></span> <span data-ttu-id="4c76f-109">如果安装了以下 SOAP 扩展以使用 XML Web service 运行，ASPNET 用户帐户必须具有写入日志文件的目录的权限。</span><span class="sxs-lookup"><span data-stu-id="4c76f-109">If the following SOAP extension is installed to run with an XML Web service, the ASPNET user account must have permission to write to the directory in which the log file is written.</span></span>  
  
 [!code-cpp[Classic SoapExtension Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic SoapExtension Example/CPP/source.cpp#1)]
 [!code-csharp[Classic SoapExtension Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic SoapExtension Example/CS/source.cs#1)]
 [!code-vb[Classic SoapExtension Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic SoapExtension Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Services.Protocols.SoapMessageStage" />
    <altmember cref="T:System.Web.Services.Protocols.SoapExtensionAttribute" />
    <altmember cref="T:System.Web.Services.Protocols.LogicalMethodInfo" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SoapExtension ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.SoapExtension.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; SoapExtension();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4c76f-110">初始化 <see cref="T:System.Web.Services.Protocols.SoapExtension" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="4c76f-110">Initializes a new instance of the <see cref="T:System.Web.Services.Protocols.SoapExtension" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ChainStream">
      <MemberSignature Language="C#" Value="public virtual System.IO.Stream ChainStream (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IO.Stream ChainStream(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.SoapExtension.ChainStream(System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ChainStream (stream As Stream) As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IO::Stream ^ ChainStream(System::IO::Stream ^ stream);" />
      <MemberSignature Language="F#" Value="abstract member ChainStream : System.IO.Stream -&gt; System.IO.Stream&#xA;override this.ChainStream : System.IO.Stream -&gt; System.IO.Stream" Usage="soapExtension.ChainStream stream" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream"><span data-ttu-id="4c76f-111">包含 SOAP 请求或响应的内存缓冲区。</span><span class="sxs-lookup"><span data-stu-id="4c76f-111">A memory buffer containing the SOAP request or response.</span></span></param>
        <summary><span data-ttu-id="4c76f-112">当在派生类中被重写时，允许 SOAP 扩展访问包含 SOAP 请求或响应的内存缓冲区。</span><span class="sxs-lookup"><span data-stu-id="4c76f-112">When overridden in a derived class, allows a SOAP extension access to the memory buffer containing the SOAP request or response.</span></span></summary>
        <returns><span data-ttu-id="4c76f-113"><see cref="T:System.IO.Stream" />，它表示此 SOAP 扩展可以修改的新内存缓冲区。</span><span class="sxs-lookup"><span data-stu-id="4c76f-113">A <see cref="T:System.IO.Stream" /> representing a new memory buffer that this SOAP extension can modify.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4c76f-114"><xref:System.Web.Services.Protocols.SoapExtension.ChainStream%2A>确保具有最高优先级的 SOAP 扩展可以修改最接近发送或通过线路返回的 SOAP 消息的实际数据。</span><span class="sxs-lookup"><span data-stu-id="4c76f-114"><xref:System.Web.Services.Protocols.SoapExtension.ChainStream%2A> ensures that SOAP extensions with the highest priority can modify the actual data closest to the SOAP message sent or returned over the wire.</span></span>  
  
 <span data-ttu-id="4c76f-115">SOAP 扩展应保存 <xref:System.IO.Stream> 传入的 <xref:System.Web.Services.Protocols.SoapExtension.ChainStream%2A> 和 <xref:System.IO.Stream> 从返回的的引用 <xref:System.Web.Services.Protocols.SoapExtension.ChainStream%2A> 。</span><span class="sxs-lookup"><span data-stu-id="4c76f-115">SOAP extensions should save references of the <xref:System.IO.Stream> passed into <xref:System.Web.Services.Protocols.SoapExtension.ChainStream%2A> and the <xref:System.IO.Stream> returned from <xref:System.Web.Services.Protocols.SoapExtension.ChainStream%2A>.</span></span> <span data-ttu-id="4c76f-116">如果 SOAP 扩展配置为使用 XML Web service 方法运行，则传入的将 <xref:System.IO.Stream> 包含中的 <xref:System.Web.Services.Protocols.SoapExtension.ChainStream%2A> 序列化 SOAP 请求 <xref:System.Web.Services.Protocols.SoapMessageStage.BeforeDeserialize> <xref:System.Web.Services.Protocols.SoapMessageStage> 。</span><span class="sxs-lookup"><span data-stu-id="4c76f-116">If the SOAP extension is configured to run with a XML Web service method, the <xref:System.IO.Stream> passed into <xref:System.Web.Services.Protocols.SoapExtension.ChainStream%2A> contains the serialized SOAP request at the <xref:System.Web.Services.Protocols.SoapMessageStage.BeforeDeserialize><xref:System.Web.Services.Protocols.SoapMessageStage>.</span></span> <span data-ttu-id="4c76f-117">同样， <xref:System.IO.Stream> 从返回的引用 <xref:System.Web.Services.Protocols.SoapExtension.ChainStream%2A> 会在序列化发生时写入到中，因此包含中的序列化 SOAP 响应 <xref:System.Web.Services.Protocols.SoapMessageStage.AfterSerialize> <xref:System.Web.Services.Protocols.SoapMessageStage> 。</span><span class="sxs-lookup"><span data-stu-id="4c76f-117">Similarly, the <xref:System.IO.Stream> reference returned from <xref:System.Web.Services.Protocols.SoapExtension.ChainStream%2A> is written into when the serialization occurs and thus contains the serialized SOAP response in the <xref:System.Web.Services.Protocols.SoapMessageStage.AfterSerialize><xref:System.Web.Services.Protocols.SoapMessageStage>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4c76f-118">下面的示例将 <xref:System.IO.Stream> 和分别保存在 <xref:System.Web.Services.Protocols.SoapExtension.ChainStream%2A> <xref:System.IO.Stream> <xref:System.Web.Services.Protocols.SoapExtension.ChainStream%2A> 成员变量和中的和 `oldStream` `newStream` 。</span><span class="sxs-lookup"><span data-stu-id="4c76f-118">The following example saves both the <xref:System.IO.Stream> passed into <xref:System.Web.Services.Protocols.SoapExtension.ChainStream%2A> and the <xref:System.IO.Stream> returned from <xref:System.Web.Services.Protocols.SoapExtension.ChainStream%2A> in the member variables `oldStream` and `newStream`, respectively.</span></span>  
  
 [!code-cpp[Classic SoapExtension.ChainStream Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic SoapExtension.ChainStream Example/CPP/source.cpp#1)]
 [!code-csharp[Classic SoapExtension.ChainStream Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic SoapExtension.ChainStream Example/CS/source.cs#1)]
 [!code-vb[Classic SoapExtension.ChainStream Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic SoapExtension.ChainStream Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetInitializer">
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="4c76f-119">当在派生类中重写时，允许 SOAP 扩展以一次执行的成本初始化特定于 XML Web services 方法的数据。</span><span class="sxs-lookup"><span data-stu-id="4c76f-119">When overridden in a derived class, allows a SOAP extension to initialize data specific to an XML Web service method at a one time performance cost.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetInitializer">
      <MemberSignature Language="C#" Value="public abstract object GetInitializer (Type serviceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetInitializer(class System.Type serviceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.SoapExtension.GetInitializer(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetInitializer (serviceType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Object ^ GetInitializer(Type ^ serviceType);" />
      <MemberSignature Language="F#" Value="abstract member GetInitializer : Type -&gt; obj" Usage="soapExtension.GetInitializer serviceType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="serviceType"><span data-ttu-id="4c76f-120">实现应用 SOAP 扩展的 XML Web services 的类的类型。</span><span class="sxs-lookup"><span data-stu-id="4c76f-120">The type of the class implementing the XML Web service to which the SOAP extension is applied.</span></span></param>
        <summary><span data-ttu-id="4c76f-121">当在派生类中重写时，允许 SOAP 扩展以一次执行的成本初始化特定于实现 XML Web services 的类的数据。</span><span class="sxs-lookup"><span data-stu-id="4c76f-121">When overridden in a derived class, allows a SOAP extension to initialize data specific to a class implementing an XML Web service at a one time performance cost.</span></span></summary>
        <returns><span data-ttu-id="4c76f-122"><see cref="T:System.Object" />，SOAP 扩展将对其进行初始化以用于缓存。</span><span class="sxs-lookup"><span data-stu-id="4c76f-122">The <see cref="T:System.Object" /> that the SOAP extension initializes for caching.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4c76f-123"><xref:System.Web.Services.Protocols.SoapExtension.GetInitializer%2A>ASP.NET 调用的的重载取决于 SOAP 扩展的指定方式。</span><span class="sxs-lookup"><span data-stu-id="4c76f-123">The overload of <xref:System.Web.Services.Protocols.SoapExtension.GetInitializer%2A> that gets called by ASP.NET depends on how the SOAP extension was specified.</span></span> <span data-ttu-id="4c76f-124">可以通过两种方法来指定 SOAP 扩展：</span><span class="sxs-lookup"><span data-stu-id="4c76f-124">There are two methods for specifying a SOAP extension:</span></span>  
  
-   <span data-ttu-id="4c76f-125">将派生自的自定义属性应用于 <xref:System.Web.Services.Protocols.SoapExtensionAttribute> 单个 XML Web service 方法。</span><span class="sxs-lookup"><span data-stu-id="4c76f-125">Apply a custom attribute, deriving from <xref:System.Web.Services.Protocols.SoapExtensionAttribute>, to the individual XML Web service method.</span></span>  
  
-   <span data-ttu-id="4c76f-126">在 web.config 或 app.config 配置文件中添加引用。</span><span class="sxs-lookup"><span data-stu-id="4c76f-126">Add a reference in either the web.config or app.config configuration files.</span></span>  
  
 <span data-ttu-id="4c76f-127">如果添加对其中一个配置文件的引用，SOAP 扩展将针对该配置文件范围内的所有 XML Web 服务运行。</span><span class="sxs-lookup"><span data-stu-id="4c76f-127">If you add a reference to one of the configuration files, the SOAP extension runs for all XML Web services within the scope of that configuration file.</span></span> <span data-ttu-id="4c76f-128">当通过引用配置文件指定 SOAP 扩展时，ASP.NET 将调用传入的 <xref:System.Web.Services.Protocols.SoapExtension.GetInitializer%2A> 重载 <xref:System.Type> 。</span><span class="sxs-lookup"><span data-stu-id="4c76f-128">When specifying, a SOAP extension by referencing a configuration file, ASP.NET invokes the <xref:System.Web.Services.Protocols.SoapExtension.GetInitializer%2A> overload that passes in a <xref:System.Type>.</span></span> <span data-ttu-id="4c76f-129">通过应用自定义属性指定扩展时，ASP.NET 将调用 <xref:System.Web.Services.Protocols.SoapExtension.GetInitializer%2A> 传入 <xref:System.Web.Services.Protocols.LogicalMethodInfo> 和的 <xref:System.Web.Services.Protocols.SoapExtensionAttribute> 。</span><span class="sxs-lookup"><span data-stu-id="4c76f-129">When specifying an extension by applying a custom attribute, ASP.NET invokes the <xref:System.Web.Services.Protocols.SoapExtension.GetInitializer%2A> that passes in a <xref:System.Web.Services.Protocols.LogicalMethodInfo> and a <xref:System.Web.Services.Protocols.SoapExtensionAttribute>.</span></span>  
  
 <span data-ttu-id="4c76f-130">有关将 SOAP 扩展添加到配置文件的详细信息，请参阅[使用 ASP.NET 创建的 XML Web Services 的配置选项](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/b2c0ew36(v=vs.100))。</span><span class="sxs-lookup"><span data-stu-id="4c76f-130">For details on adding SOAP extensions to a configuration file, see [Configuration Options for XML Web Services Created Using ASP.NET](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/b2c0ew36(v=vs.100)).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4c76f-131">下面的代码演示了如何根据每个 XML Web service 来保存特定于 SOAP 扩展的数据。</span><span class="sxs-lookup"><span data-stu-id="4c76f-131">The following code demonstrates how one can save SOAP extension specific data on a per XML Web service basis.</span></span> <span data-ttu-id="4c76f-132">如果使用配置文件而不是属性配置了 SOAP 扩展，SOAP 扩展可以存储应用 SOAP 扩展的每个类的数据。</span><span class="sxs-lookup"><span data-stu-id="4c76f-132">If the SOAP extension is configured using a configuration file instead of an attribute, the SOAP extension can store data for each class to which the SOAP extension is applied.</span></span> <span data-ttu-id="4c76f-133">此示例保存一个文件的名称，在该文件中，将根据实现 XML Web service 的类的名称将发送到 XML Web service 方法的 SOAP 消息记录到缓存中。</span><span class="sxs-lookup"><span data-stu-id="4c76f-133">This example saves the name of a file in which to log the SOAP messages sent to and from the XML Web service method based on the name of the class implementing the XML Web service into the cache.</span></span> <span data-ttu-id="4c76f-134">此代码示例是 TraceExtension SOAP 扩展的完整代码示例的一部分，可在 <xref:System.Web.Services.Protocols.SoapExtension> 类概述中找到。</span><span class="sxs-lookup"><span data-stu-id="4c76f-134">This code example is part of a full code example for a TraceExtension SOAP extension that can be found in the <xref:System.Web.Services.Protocols.SoapExtension> class overview.</span></span>  
  
 [!code-cpp[SoapExtension.GetInitializer-Type#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapExtension.GetInitializer-Type/CPP/traceextension.cpp#1)]
 [!code-csharp[SoapExtension.GetInitializer-Type#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapExtension.GetInitializer-Type/CS/traceextension.cs#1)]
 [!code-vb[SoapExtension.GetInitializer-Type#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapExtension.GetInitializer-Type/VB/traceextension.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInitializer">
      <MemberSignature Language="C#" Value="public abstract object GetInitializer (System.Web.Services.Protocols.LogicalMethodInfo methodInfo, System.Web.Services.Protocols.SoapExtensionAttribute attribute);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetInitializer(class System.Web.Services.Protocols.LogicalMethodInfo methodInfo, class System.Web.Services.Protocols.SoapExtensionAttribute attribute) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.SoapExtension.GetInitializer(System.Web.Services.Protocols.LogicalMethodInfo,System.Web.Services.Protocols.SoapExtensionAttribute)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetInitializer (methodInfo As LogicalMethodInfo, attribute As SoapExtensionAttribute) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Object ^ GetInitializer(System::Web::Services::Protocols::LogicalMethodInfo ^ methodInfo, System::Web::Services::Protocols::SoapExtensionAttribute ^ attribute);" />
      <MemberSignature Language="F#" Value="abstract member GetInitializer : System.Web.Services.Protocols.LogicalMethodInfo * System.Web.Services.Protocols.SoapExtensionAttribute -&gt; obj" Usage="soapExtension.GetInitializer (methodInfo, attribute)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="methodInfo" Type="System.Web.Services.Protocols.LogicalMethodInfo" />
        <Parameter Name="attribute" Type="System.Web.Services.Protocols.SoapExtensionAttribute" />
      </Parameters>
      <Docs>
        <param name="methodInfo"><span data-ttu-id="4c76f-135"><see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" />，它表示应用 SOAP 扩展的 XML Web services 方法的特定函数原型。</span><span class="sxs-lookup"><span data-stu-id="4c76f-135">A <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" /> representing the specific function prototype for the XML Web service method to which the SOAP extension is applied.</span></span></param>
        <param name="attribute"><span data-ttu-id="4c76f-136">应用于 XML Web services 方法的 <see cref="T:System.Web.Services.Protocols.SoapExtensionAttribute" />。</span><span class="sxs-lookup"><span data-stu-id="4c76f-136">The <see cref="T:System.Web.Services.Protocols.SoapExtensionAttribute" /> applied to the XML Web service method.</span></span></param>
        <summary><span data-ttu-id="4c76f-137">当在派生类中重写时，允许 SOAP 扩展以一次执行的成本使用应用于 XML Web services 方法的特性来初始化特定于 XML Web services 方法的数据。</span><span class="sxs-lookup"><span data-stu-id="4c76f-137">When overridden in a derived class, allows a SOAP extension to initialize data specific to an XML Web service method using an attribute applied to the XML Web service method at a one time performance cost.</span></span></summary>
        <returns><span data-ttu-id="4c76f-138"><see cref="T:System.Object" />，SOAP 扩展将对其进行初始化以用于缓存。</span><span class="sxs-lookup"><span data-stu-id="4c76f-138">The <see cref="T:System.Object" /> that the SOAP extension initializes for caching.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4c76f-139">如果使用配置文件配置 SOAP 扩展，请参见接受的 <xref:System.Web.Services.Protocols.SoapExtension.GetInitializer%2A> 重载 <xref:System.Type> 。</span><span class="sxs-lookup"><span data-stu-id="4c76f-139">If the SOAP extension is configured using a configuration file see the <xref:System.Web.Services.Protocols.SoapExtension.GetInitializer%2A> overload that accepts a <xref:System.Type>.</span></span>  
  
 <span data-ttu-id="4c76f-140">SOAP 扩展有三个用于初始化数据的机会，它们都具有不同的用途：</span><span class="sxs-lookup"><span data-stu-id="4c76f-140">A SOAP extension has three opportunities to initialize data and they all have different purposes:</span></span>  
  
-   <span data-ttu-id="4c76f-141">类构造函数-每次实例化 SOAP 扩展并通常用于初始化成员变量时，都会调用类构造函数。</span><span class="sxs-lookup"><span data-stu-id="4c76f-141">Class constructor - The class constructor is called every time a SOAP extension is instantiated and is typically used to initialize member variables.</span></span>  
  
-   <span data-ttu-id="4c76f-142"><xref:System.Web.Services.Protocols.SoapExtension.GetInitializer%2A> - <xref:System.Web.Services.Protocols.SoapExtension.GetInitializer%2A>但是，在首次向 XML Web services 方法发出 SOAP 请求时，只调用一次。</span><span class="sxs-lookup"><span data-stu-id="4c76f-142"><xref:System.Web.Services.Protocols.SoapExtension.GetInitializer%2A> - <xref:System.Web.Services.Protocols.SoapExtension.GetInitializer%2A>, however, is called just once, the first time a SOAP request is made to an XML Web services method.</span></span> <span data-ttu-id="4c76f-143">如果将自定义属性应用于 XML Web service 方法，将 <xref:System.Web.Services.Protocols.SoapExtension.GetInitializer%2A> 调用方法。</span><span class="sxs-lookup"><span data-stu-id="4c76f-143">If a custom attribute is applied to the XML Web service method, the <xref:System.Web.Services.Protocols.SoapExtension.GetInitializer%2A> method is invoked.</span></span> <span data-ttu-id="4c76f-144">这允许 SOAP 扩展为 <xref:System.Web.Services.Protocols.LogicalMethodInfo> 原型信息询问 XML Web service 方法的，或访问由派生自的类所传递的特定于扩展的数据 <xref:System.Web.Services.Protocols.SoapExtensionAttribute> 。</span><span class="sxs-lookup"><span data-stu-id="4c76f-144">This allows the SOAP extension to interrogate the <xref:System.Web.Services.Protocols.LogicalMethodInfo> of an XML Web service method for prototype information or to access extension-specific data passed by a class deriving from <xref:System.Web.Services.Protocols.SoapExtensionAttribute>.</span></span> <span data-ttu-id="4c76f-145">返回值由 ASP.NET 缓存并传入到后面的 <xref:System.Web.Services.Protocols.SoapExtension.Initialize%2A> 方法中。</span><span class="sxs-lookup"><span data-stu-id="4c76f-145">The return value is cached by ASP.NET and passed into subsequent <xref:System.Web.Services.Protocols.SoapExtension.Initialize%2A> methods.</span></span> <span data-ttu-id="4c76f-146">因此，在中执行的初始化操作 <xref:System.Web.Services.Protocols.SoapExtension.GetInitializer%2A> 实质上是在一次性能方面的影响。</span><span class="sxs-lookup"><span data-stu-id="4c76f-146">Therefore, initialization done in <xref:System.Web.Services.Protocols.SoapExtension.GetInitializer%2A> is encapsulated essentially into a one-time performance hit.</span></span>  
  
-   <span data-ttu-id="4c76f-147"><xref:System.Web.Services.Protocols.SoapExtension.Initialize%2A> - <xref:System.Web.Services.Protocols.SoapExtension.Initialize%2A>每次向 XML Web service 方法发出 SOAP 请求，但在类构造函数上具有优势时，将调用，因为在中， <xref:System.Object> 会将在中初始化的 <xref:System.Web.Services.Protocols.SoapExtension.GetInitializer%2A> 传递给它。</span><span class="sxs-lookup"><span data-stu-id="4c76f-147"><xref:System.Web.Services.Protocols.SoapExtension.Initialize%2A> - <xref:System.Web.Services.Protocols.SoapExtension.Initialize%2A> is called every time a SOAP request is made to an XML Web service method, but has an advantage over the class constructor, in that the <xref:System.Object> initialized in <xref:System.Web.Services.Protocols.SoapExtension.GetInitializer%2A> is passed to it.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4c76f-148">下面的代码演示如何使用派生自的类来获取中传递的 SOAP 扩展特定的数据 <xref:System.Web.Services.Protocols.SoapExtensionAttribute> ，然后将这些数据缓存在中 <xref:System.Web.Services.Protocols.SoapExtension.GetInitializer%2A> 。</span><span class="sxs-lookup"><span data-stu-id="4c76f-148">The following code demonstrates how you can obtain SOAP extension-specific data passed in using a class that derives from <xref:System.Web.Services.Protocols.SoapExtensionAttribute>, and then cache that data in <xref:System.Web.Services.Protocols.SoapExtension.GetInitializer%2A>.</span></span> <span data-ttu-id="4c76f-149">此代码示例是 `TraceExtension` 可在类概述中找到的 SOAP 扩展的完整代码示例的一部分 <xref:System.Web.Services.Protocols.SoapExtension> 。</span><span class="sxs-lookup"><span data-stu-id="4c76f-149">This code example is part of a full code example for a `TraceExtension` SOAP extension that can be found in the <xref:System.Web.Services.Protocols.SoapExtension> class overview.</span></span> <span data-ttu-id="4c76f-150">此代码示例依赖于 `TraceExtensionAttribute` 传入 `attribute` 参数。</span><span class="sxs-lookup"><span data-stu-id="4c76f-150">This code example relies on a `TraceExtensionAttribute` being passed into the `attribute` parameter.</span></span> <span data-ttu-id="4c76f-151">在完整的代码示例中， `TraceExtensionAttribute` 从派生， <xref:System.Web.Services.Protocols.SoapExtensionAttribute> 并添加一个 `Filename` 属性，该属性是 <xref:System.Web.Services.Protocols.SoapExtension.GetInitializer%2A> 缓存中的存储区。</span><span class="sxs-lookup"><span data-stu-id="4c76f-151">In the full code example, `TraceExtensionAttribute` derives from <xref:System.Web.Services.Protocols.SoapExtensionAttribute> and adds a `Filename` property, which is what <xref:System.Web.Services.Protocols.SoapExtension.GetInitializer%2A> stores in the cache.</span></span>  
  
 [!code-cpp[Classic SoapExtension.GetInitializer Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic SoapExtension.GetInitializer Example/CPP/source.cpp#1)]
 [!code-csharp[Classic SoapExtension.GetInitializer Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic SoapExtension.GetInitializer Example/CS/source.cs#1)]
 [!code-vb[Classic SoapExtension.GetInitializer Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic SoapExtension.GetInitializer Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.Services.Protocols.SoapExtension.Initialize(System.Object)" />
        <altmember cref="T:System.Web.Services.Protocols.LogicalMethodInfo" />
        <altmember cref="T:System.Web.Services.Protocols.SoapExtensionAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public abstract void Initialize (object initializer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Initialize(object initializer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.SoapExtension.Initialize(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Initialize (initializer As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Initialize(System::Object ^ initializer);" />
      <MemberSignature Language="F#" Value="abstract member Initialize : obj -&gt; unit" Usage="soapExtension.Initialize initializer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="initializer" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="initializer"><span data-ttu-id="4c76f-152"><see cref="T:System.Object" /> 从 ASP.NET 缓存的 <see cref="M:System.Web.Services.Protocols.SoapExtension.GetInitializer(System.Web.Services.Protocols.LogicalMethodInfo,System.Web.Services.Protocols.SoapExtensionAttribute)" /> 中返回。</span><span class="sxs-lookup"><span data-stu-id="4c76f-152">The <see cref="T:System.Object" /> returned from <see cref="M:System.Web.Services.Protocols.SoapExtension.GetInitializer(System.Web.Services.Protocols.LogicalMethodInfo,System.Web.Services.Protocols.SoapExtensionAttribute)" /> cached by ASP.NET.</span></span></param>
        <summary><span data-ttu-id="4c76f-153">当在派生类中被重写时，允许 SOAP 扩展使用缓存于 <see cref="M:System.Web.Services.Protocols.SoapExtension.GetInitializer(System.Web.Services.Protocols.LogicalMethodInfo,System.Web.Services.Protocols.SoapExtensionAttribute)" /> 方法中的数据初始化其自身。</span><span class="sxs-lookup"><span data-stu-id="4c76f-153">When overridden in a derived class, allows a SOAP extension to initialize itself using the data cached in the <see cref="M:System.Web.Services.Protocols.SoapExtension.GetInitializer(System.Web.Services.Protocols.LogicalMethodInfo,System.Web.Services.Protocols.SoapExtensionAttribute)" /> method.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4c76f-154">SOAP 扩展有三个用于初始化数据的机会，它们都具有不同的用途：</span><span class="sxs-lookup"><span data-stu-id="4c76f-154">A SOAP extension has three opportunities to initialize data and they all have different purposes:</span></span>  
  
-   <span data-ttu-id="4c76f-155">类构造函数-每次实例化 SOAP 扩展并通常用于初始化成员变量时，都会调用类构造函数。</span><span class="sxs-lookup"><span data-stu-id="4c76f-155">Class constructor - The class constructor is called every time a SOAP extension is instantiated and is typically used to initialize member variables.</span></span>  
  
-   <span data-ttu-id="4c76f-156"><xref:System.Web.Services.Protocols.SoapExtension.GetInitializer%2A>-在首次向 XML Web services 方法发出 SOAP 请求时，只调用此方法一次。</span><span class="sxs-lookup"><span data-stu-id="4c76f-156"><xref:System.Web.Services.Protocols.SoapExtension.GetInitializer%2A> - This method is called just once, the first time a SOAP request is made to an XML Web services method.</span></span> <span data-ttu-id="4c76f-157">如果将自定义属性应用于 XML Web service 方法，将 <xref:System.Web.Services.Protocols.SoapExtension.GetInitializer%2A> 调用方法。</span><span class="sxs-lookup"><span data-stu-id="4c76f-157">If a custom attribute is applied to the XML Web service method, the <xref:System.Web.Services.Protocols.SoapExtension.GetInitializer%2A> method is invoked.</span></span> <span data-ttu-id="4c76f-158">这允许 SOAP 扩展为 <xref:System.Web.Services.Protocols.LogicalMethodInfo> 原型信息询问 XML Web service 方法的，或访问由派生自的类所传递的特定于扩展的数据 <xref:System.Web.Services.Protocols.SoapExtensionAttribute> 。</span><span class="sxs-lookup"><span data-stu-id="4c76f-158">This allows the SOAP extension to interrogate the <xref:System.Web.Services.Protocols.LogicalMethodInfo> of an XML Web service method for prototype information or to access extension-specific data passed by a class deriving from <xref:System.Web.Services.Protocols.SoapExtensionAttribute>.</span></span> <span data-ttu-id="4c76f-159">返回值由 ASP.NET 缓存并传入到后面的 <xref:System.Web.Services.Protocols.SoapExtension.Initialize%2A> 方法中。</span><span class="sxs-lookup"><span data-stu-id="4c76f-159">The return value is cached by ASP.NET and passed into subsequent <xref:System.Web.Services.Protocols.SoapExtension.Initialize%2A> methods.</span></span> <span data-ttu-id="4c76f-160">因此，在中执行的初始化操作 <xref:System.Web.Services.Protocols.SoapExtension.GetInitializer%2A> 实质上是在一次性能方面的影响。</span><span class="sxs-lookup"><span data-stu-id="4c76f-160">Therefore, initialization done in <xref:System.Web.Services.Protocols.SoapExtension.GetInitializer%2A> is encapsulated essentially into a one-time performance hit.</span></span>  
  
-   <span data-ttu-id="4c76f-161"><xref:System.Web.Services.Protocols.SoapExtension.Initialize%2A>-每次向 XML Web service 方法发出 SOAP 请求时都会调用此方法，但此方法比类构造函数的优点更强，因为在中，已初始化的将 <xref:System.Object> <xref:System.Web.Services.Protocols.SoapExtension.GetInitializer%2A> 传递给它。</span><span class="sxs-lookup"><span data-stu-id="4c76f-161"><xref:System.Web.Services.Protocols.SoapExtension.Initialize%2A> - This method is called every time a SOAP request is made to an XML Web service method, but has an advantage over the class constructor, in that the <xref:System.Object> initialized in <xref:System.Web.Services.Protocols.SoapExtension.GetInitializer%2A> is passed to it.</span></span>
  
> [!NOTE]
>  <span data-ttu-id="4c76f-162">你还可以 <xref:System.Web.Services.Protocols.SoapExtensionAttribute> 使用配置文件中的[ \<soapExtensionTypes> 元素](https://msdn.microsoft.com/library/7a373a98-6d82-4f8d-a6fc-2996da3fd54c)，添加不从派生的 SOAP 扩展。</span><span class="sxs-lookup"><span data-stu-id="4c76f-162">You can also add a SOAP extension without deriving from <xref:System.Web.Services.Protocols.SoapExtensionAttribute> by using the [\<soapExtensionTypes> Element](https://msdn.microsoft.com/library/7a373a98-6d82-4f8d-a6fc-2996da3fd54c) in a configuration file.</span></span> <span data-ttu-id="4c76f-163">有关详细信息，请参阅[使用 SOAP 扩展修改](https://msdn.microsoft.com/library/97d81ace-95e7-4acc-ae39-9692a0021e95) [ \<soapExtensionTypes> 元素](https://msdn.microsoft.com/library/7a373a98-6d82-4f8d-a6fc-2996da3fd54c)和 soap 消息。</span><span class="sxs-lookup"><span data-stu-id="4c76f-163">For details, see [\<soapExtensionTypes> Element](https://msdn.microsoft.com/library/7a373a98-6d82-4f8d-a6fc-2996da3fd54c) and [SOAP Message Modification Using SOAP Extensions](https://msdn.microsoft.com/library/97d81ace-95e7-4acc-ae39-9692a0021e95).</span></span>  
  
## Examples  
 <span data-ttu-id="4c76f-164">下面的示例演示如何使用在方法中缓存的数据 <xref:System.Web.Services.Protocols.SoapExtension.GetInitializer%2A> 。</span><span class="sxs-lookup"><span data-stu-id="4c76f-164">The following example demonstrates how you can use the data cached during the <xref:System.Web.Services.Protocols.SoapExtension.GetInitializer%2A> method.</span></span>  
  
 [!code-cpp[Classic SoapExtension.Initialize Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic SoapExtension.Initialize Example/CPP/source.cpp#1)]
 [!code-csharp[Classic SoapExtension.Initialize Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic SoapExtension.Initialize Example/CS/source.cs#1)]
 [!code-vb[Classic SoapExtension.Initialize Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic SoapExtension.Initialize Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessMessage">
      <MemberSignature Language="C#" Value="public abstract void ProcessMessage (System.Web.Services.Protocols.SoapMessage message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ProcessMessage(class System.Web.Services.Protocols.SoapMessage message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.SoapExtension.ProcessMessage(System.Web.Services.Protocols.SoapMessage)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub ProcessMessage (message As SoapMessage)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void ProcessMessage(System::Web::Services::Protocols::SoapMessage ^ message);" />
      <MemberSignature Language="F#" Value="abstract member ProcessMessage : System.Web.Services.Protocols.SoapMessage -&gt; unit" Usage="soapExtension.ProcessMessage message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.Web.Services.Protocols.SoapMessage" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="4c76f-165">要处理的 <see cref="T:System.Web.Services.Protocols.SoapMessage" />。</span><span class="sxs-lookup"><span data-stu-id="4c76f-165">The <see cref="T:System.Web.Services.Protocols.SoapMessage" /> to process.</span></span></param>
        <summary><span data-ttu-id="4c76f-166">当在派生类中被重写时，允许 SOAP 扩展接收要在每个 <see cref="T:System.Web.Services.Protocols.SoapMessage" /> 中处理的 <see cref="T:System.Web.Services.Protocols.SoapMessageStage" />。</span><span class="sxs-lookup"><span data-stu-id="4c76f-166">When overridden in a derived class, allows a SOAP extension to receive a <see cref="T:System.Web.Services.Protocols.SoapMessage" /> to process at each <see cref="T:System.Web.Services.Protocols.SoapMessageStage" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4c76f-167"><xref:System.Web.Services.Protocols.SoapExtension.ProcessMessage%2A><xref:System.Web.Services.Protocols.SoapMessageStage>对于应用到使用 ASP.NET 和客户端创建的 XML Web services 的所有 SOAP 扩展，都将调用。</span><span class="sxs-lookup"><span data-stu-id="4c76f-167"><xref:System.Web.Services.Protocols.SoapExtension.ProcessMessage%2A> is called at all <xref:System.Web.Services.Protocols.SoapMessageStage> stages for SOAP extensions applied to both XML Web services created using ASP.NET and their clients.</span></span> <span data-ttu-id="4c76f-168">每个 <xref:System.Web.Services.Protocols.SoapMessageStage> 实例都将派生自的类的实例 <xref:System.Web.Services.Protocols.SoapMessage> 传递给 <xref:System.Web.Services.Protocols.SoapExtension.ProcessMessage%2A> 。</span><span class="sxs-lookup"><span data-stu-id="4c76f-168">At each <xref:System.Web.Services.Protocols.SoapMessageStage>, an instance of a class deriving from <xref:System.Web.Services.Protocols.SoapMessage> is passed to <xref:System.Web.Services.Protocols.SoapExtension.ProcessMessage%2A>.</span></span> <span data-ttu-id="4c76f-169">如果 SOAP 扩展在 XML Web service 客户端上运行，则会将一个 <xref:System.Web.Services.Protocols.SoapClientMessage> 对象传递到 <xref:System.Web.Services.Protocols.SoapExtension.ProcessMessage%2A> ; 否则， <xref:System.Web.Services.Protocols.SoapServerMessage> 传递对象。</span><span class="sxs-lookup"><span data-stu-id="4c76f-169">If the SOAP extension is running on the XML Web service client, then a <xref:System.Web.Services.Protocols.SoapClientMessage> object is passed into <xref:System.Web.Services.Protocols.SoapExtension.ProcessMessage%2A>; otherwise a <xref:System.Web.Services.Protocols.SoapServerMessage> object is passed in.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4c76f-170">下面的示例是 <xref:System.Web.Services.Protocols.SoapExtension.ProcessMessage%2A> 用于记录 soap 请求和 soap 响应的 soap 扩展的一部分。</span><span class="sxs-lookup"><span data-stu-id="4c76f-170">The following example is the <xref:System.Web.Services.Protocols.SoapExtension.ProcessMessage%2A> portion of a SOAP extension that logs SOAP requests and SOAP responses.</span></span> <span data-ttu-id="4c76f-171">通过 <xref:System.Web.Services.Protocols.SoapMessage> 在 <xref:System.Web.Services.Protocols.SoapMessageStage.AfterSerialize> <xref:System.Web.Services.Protocols.SoapMessageStage> 中记录，SOAP 扩展访问将 <xref:System.Web.Services.Protocols.SoapMessage.Stream%2A> 通过网络发送。</span><span class="sxs-lookup"><span data-stu-id="4c76f-171">By logging the <xref:System.Web.Services.Protocols.SoapMessage> at the <xref:System.Web.Services.Protocols.SoapMessageStage.AfterSerialize><xref:System.Web.Services.Protocols.SoapMessageStage>, the SOAP extension accesses the <xref:System.Web.Services.Protocols.SoapMessage.Stream%2A> to be sent over the wire.</span></span> <span data-ttu-id="4c76f-172">如果 SOAP 扩展应用到使用 ASP.NET 创建的 XML Web service 方法，则 <xref:System.Web.Services.Protocols.SoapMessage.Stream%2A> 包含 XML Web service 方法中的 soap 响应。</span><span class="sxs-lookup"><span data-stu-id="4c76f-172">If the SOAP extension is applied to an XML Web service method created using ASP.NET, then the <xref:System.Web.Services.Protocols.SoapMessage.Stream%2A> contains the SOAP response from the XML Web service method.</span></span> <span data-ttu-id="4c76f-173">如果 SOAP 扩展应用于 XML Web service 的客户端，则 <xref:System.Web.Services.Protocols.SoapMessage.Stream%2A> 包含对 XML Web service 方法的 soap 请求。</span><span class="sxs-lookup"><span data-stu-id="4c76f-173">If the SOAP extension is applied to an XML Web service client, the <xref:System.Web.Services.Protocols.SoapMessage.Stream%2A> contains the SOAP request to an XML Web service method.</span></span>  
  
 <span data-ttu-id="4c76f-174">经典 SoapExtension. ProcessMessage 示例 # 1</span><span class="sxs-lookup"><span data-stu-id="4c76f-174">Classic SoapExtension.ProcessMessage Example#1</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
