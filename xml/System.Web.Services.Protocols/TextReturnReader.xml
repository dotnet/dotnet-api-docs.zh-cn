<Type Name="TextReturnReader" FullName="System.Web.Services.Protocols.TextReturnReader">
  <Metadata><Meta Name="ms.openlocfilehash" Value="0f88934c34661f2377f408195a0333fc643ef8e9" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89957395" /></Metadata><TypeSignature Language="C#" Value="public class TextReturnReader : System.Web.Services.Protocols.MimeReturnReader" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TextReturnReader extends System.Web.Services.Protocols.MimeReturnReader" />
  <TypeSignature Language="DocId" Value="T:System.Web.Services.Protocols.TextReturnReader" />
  <TypeSignature Language="VB.NET" Value="Public Class TextReturnReader&#xA;Inherits MimeReturnReader" />
  <TypeSignature Language="C++ CLI" Value="public ref class TextReturnReader : System::Web::Services::Protocols::MimeReturnReader" />
  <TypeSignature Language="F#" Value="type TextReturnReader = class&#xA;    inherit MimeReturnReader" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Services</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.Services.Protocols.MimeReturnReader</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>从使用 HTTP 实现但不支持 SOAP 的 Web 服务客户端的 HTTP 响应文本中读取返回值。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Services.Protocols.TextReturnReader> 命名空间中的其他类 <xref:System.Web.Services.Protocols> 通过 HTTP GET 和 HTTP POST 操作支持 Web 服务的 .NET Framework 实现。 Web 服务编写器和读取器分别在参数或返回 Web 方法的对象和 HTTP 请求或响应流之间进行序列化和反序列化。 Web 服务编写器和读取器使用 HTTP 进行传输，但不使用 SOAP 标准交换消息。  
  
 <xref:System.Web.Services.Protocols.TextReturnReader>类将非 XML 文本的客户端读取实现为 Web 方法返回值。 若要获取返回值，则使用正则表达式模式匹配（在 HTTP 响应正文中编码）来分析文本，该文本 <xref:System.Web.Services.Protocols.MatchAttribute> 可应用于客户端代理类中的 Web 方法。 <xref:System.Web.Services.Protocols.TextReturnReader>类调用 <xref:System.Web.Services.Protocols.PatternMatcher> 类以实际执行模式匹配。  
  
 文本模式匹配为 Web 服务提供了一种检索 HTML 内容的方式，而无需将其转换为必须绑定到 XML 架构定义的 XML 文档。 正则表达式搜索目标是通过 Web 服务描述语言 (WSDL) 文档通过 `match` 元素中的 XML 元素指定的 `text` 。 这两个元素属于命名空间 `http://microsoft.com/wsdl/mime/textMatching/` 。  
  
 如果在 WSDL 文档中指定 **match** 元素，则 Wsdl.exe 工具会将 <xref:System.Web.Services.Protocols.MatchAttribute> 特性应用于生成的客户端代理类中的相应 Web 方法。 此外，还 <xref:System.Web.Services.Protocols.TextReturnReader> 用于替代的 <xref:System.Web.Services.Protocols.XmlReturnReader> 默认类，用于根据 .NET Framework 的 web 服务实现，通过 http GET 和 http POST 操作来返回值。  
  
 通常不需要 <xref:System.Web.Services.Protocols.TextReturnReader> 直接使用类。  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Services.Protocols.MimeFormatter" />
    <altmember cref="T:System.Web.Services.Protocols.MimeReturnReader" />
    <altmember cref="T:System.Web.Services.Protocols.PatternMatcher" />
    <altmember cref="T:System.Web.Services.Protocols.MatchAttribute" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TextReturnReader ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.TextReturnReader.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TextReturnReader();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Web.Services.Protocols.TextReturnReader" /> 类的新实例。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInitializer">
      <MemberSignature Language="C#" Value="public override object GetInitializer (System.Web.Services.Protocols.LogicalMethodInfo methodInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object GetInitializer(class System.Web.Services.Protocols.LogicalMethodInfo methodInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.TextReturnReader.GetInitializer(System.Web.Services.Protocols.LogicalMethodInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetInitializer (methodInfo As LogicalMethodInfo) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ GetInitializer(System::Web::Services::Protocols::LogicalMethodInfo ^ methodInfo);" />
      <MemberSignature Language="F#" Value="override this.GetInitializer : System.Web.Services.Protocols.LogicalMethodInfo -&gt; obj" Usage="textReturnReader.GetInitializer methodInfo" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="methodInfo" Type="System.Web.Services.Protocols.LogicalMethodInfo" />
      </Parameters>
      <Docs>
        <param name="methodInfo"><see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" />，指定为其获取初始值设定项的 Web 方法。</param>
        <summary>返回指定方法的初始值设定项。</summary>
        <returns>指定方法的初始值设定项</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 初始值设定项是作为参数传递给方法的对象 <xref:System.Web.Services.Protocols.TextReturnReader.Initialize%2A> 。 对于 <xref:System.Web.Services.Protocols.TextReturnReader> 类，初始值设定项是 <xref:System.Web.Services.Protocols.PatternMatcher> 基于 Web 方法的返回类型的对象。  
  
 <xref:System.Web.Services.Protocols.TextReturnReader.GetInitializer%2A>方法在服务初始化过程中调用。 稍后，在处理响应时，初始值设定项对象将传递给 <xref:System.Web.Services.Protocols.TextReturnReader.Initialize%2A> 另一个实例的方法 <xref:System.Web.Services.Protocols.TextReturnReader> 。 另一个实例执行实际的读取。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public override void Initialize (object o);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Initialize(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.TextReturnReader.Initialize(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Initialize (o As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Initialize(System::Object ^ o);" />
      <MemberSignature Language="F#" Value="override this.Initialize : obj -&gt; unit" Usage="textReturnReader.Initialize o" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o">一个 <see cref="T:System.Web.Services.Protocols.PatternMatcher" /> 对象，用于正在调用的 Web 方法的返回类型。</param>
        <summary>初始化一个实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Services.Protocols.TextReturnReader.Initialize%2A>方法提供 <xref:System.Web.Services.Protocols.PatternMatcher> <xref:System.Web.Services.Protocols.TextReturnReader.Read%2A> 方法用来分析 HTTP 响应中包含的文本的对象。 处理请求时，将 <xref:System.Web.Services.Protocols.TextReturnReader.Initialize%2A> 调用方法。 `o`通过 <xref:System.Web.Services.Protocols.TextReturnReader.GetInitializer%2A> 在客户端初始化期间获取的类的另一个实例上调用方法来获取输入参数。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public override object Read (System.Net.WebResponse response, System.IO.Stream responseStream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object Read(class System.Net.WebResponse response, class System.IO.Stream responseStream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.TextReturnReader.Read(System.Net.WebResponse,System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Read (response As WebResponse, responseStream As Stream) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ Read(System::Net::WebResponse ^ response, System::IO::Stream ^ responseStream);" />
      <MemberSignature Language="F#" Value="override this.Read : System.Net.WebResponse * System.IO.Stream -&gt; obj" Usage="textReturnReader.Read (response, responseStream)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="response" Type="System.Net.WebResponse" />
        <Parameter Name="responseStream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="response">一个包含操作的输出消息的 <see cref="T:System.Net.WebResponse" /> 对象。</param>
        <param name="responseStream">一个 <see cref="T:System.IO.Stream" />，其内容是由 <paramref name="response" /> 参数表示的 HTTP 响应的正文。</param>
        <summary>分析包含在 HTTP 响应中的文本。</summary>
        <returns>一个包含反序列化的 Web 方法返回值的对象。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 若要分析 HTTP 响应的文本内容，方法的 <xref:System.Web.Services.Protocols.TextReturnReader> 类实现将 <xref:System.Web.Services.Protocols.TextReturnReader.Read%2A> 使用 <xref:System.Web.Services.Protocols.PatternMatcher> 作为参数传递给方法的对象 <xref:System.Web.Services.Protocols.TextReturnReader.Initialize%2A> 。 它在返回反序列化的 Web 方法返回值之前关闭响应流。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
