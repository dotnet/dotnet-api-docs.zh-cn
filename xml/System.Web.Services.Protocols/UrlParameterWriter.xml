<Type Name="UrlParameterWriter" FullName="System.Web.Services.Protocols.UrlParameterWriter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="6c35c4bdae3a5ca878a0c433ef4efbb3bd81d0fd" /><Meta Name="ms.sourcegitcommit" Value="397961a0164281b579f68064c3bb66c071f374d9" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/14/2020" /><Meta Name="ms.locfileid" Value="69257120" /></Metadata><TypeSignature Language="C#" Value="public class UrlParameterWriter : System.Web.Services.Protocols.UrlEncodedParameterWriter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit UrlParameterWriter extends System.Web.Services.Protocols.UrlEncodedParameterWriter" />
  <TypeSignature Language="DocId" Value="T:System.Web.Services.Protocols.UrlParameterWriter" />
  <TypeSignature Language="VB.NET" Value="Public Class UrlParameterWriter&#xA;Inherits UrlEncodedParameterWriter" />
  <TypeSignature Language="C++ CLI" Value="public ref class UrlParameterWriter : System::Web::Services::Protocols::UrlEncodedParameterWriter" />
  <TypeSignature Language="F#" Value="type UrlParameterWriter = class&#xA;    inherit UrlEncodedParameterWriter" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Services</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.Services.Protocols.UrlEncodedParameterWriter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="cc19d-101">编写使用 HTTP 实现的 Web 服务的传出请求参数，参数的名称/值对编码到 URL 请求字符串中，而不是编码为 SOAP 消息。</span><span class="sxs-lookup"><span data-stu-id="cc19d-101">Writes out-going request parameters for Web services implemented using HTTP with name-value pairs encoded in the URL's query string rather than as a SOAP message.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc19d-102"><xref:System.Web.Services.Protocols.UrlParameterWriter>命名空间中的其他类 <xref:System.Web.Services.Protocols> 通过 HTTP GET 和 HTTP POST 操作支持 Web 服务的 .NET Framework 实现。</span><span class="sxs-lookup"><span data-stu-id="cc19d-102"><xref:System.Web.Services.Protocols.UrlParameterWriter> and other classes in the <xref:System.Web.Services.Protocols> namespace support the .NET Framework's implementations of Web services via the HTTP-GET and HTTP-POST operations.</span></span> <span data-ttu-id="cc19d-103">Web 服务编写器和读取器分别在参数或返回 Web 方法的对象和 HTTP 请求或响应流之间进行序列化和反序列化。</span><span class="sxs-lookup"><span data-stu-id="cc19d-103">Web service writers and readers serialize and deserialize, respectively, between the parameters or return objects of Web methods and the HTTP request or response streams.</span></span> <span data-ttu-id="cc19d-104">Web 服务编写器和读取器使用 HTTP 进行传输，但不使用 SOAP 标准交换消息。</span><span class="sxs-lookup"><span data-stu-id="cc19d-104">Web service writers and readers use HTTP for transport but don't exchange messages using the SOAP standard.</span></span>  
  
 <span data-ttu-id="cc19d-105"><xref:System.Web.Services.Protocols.UrlParameterWriter>类提供了一个客户端方法， <xref:System.Web.Services.Protocols.UrlParameterWriter.GetRequestUrl%2A> 用于将参数名称/值对编码为 HTTP 请求 URL 的查询字符串。</span><span class="sxs-lookup"><span data-stu-id="cc19d-105">The <xref:System.Web.Services.Protocols.UrlParameterWriter> class provides a client-side method, <xref:System.Web.Services.Protocols.UrlParameterWriter.GetRequestUrl%2A>, to encode parameters name/value pairs into an HTTP request URL's query string.</span></span> <span data-ttu-id="cc19d-106">例如，在 URL 中 `http://contoso.com?a=1&b=2` ， `a` 和 `b` 是参数名称，并且 `1` 和 `2` 是其值。</span><span class="sxs-lookup"><span data-stu-id="cc19d-106">For example, in the URL `http://contoso.com?a=1&b=2`, `a` and `b` are parameter names, and `1` and `2` are their values.</span></span>  
  
 <span data-ttu-id="cc19d-107">通常不需要 <xref:System.Web.Services.Protocols.UrlParameterWriter> 直接使用。</span><span class="sxs-lookup"><span data-stu-id="cc19d-107">You typically will not need to use <xref:System.Web.Services.Protocols.UrlParameterWriter> directly.</span></span> <span data-ttu-id="cc19d-108">相反，当 Wsdl.exe 工具根据 HTTP GET 实现生成客户端代理代码时，它将应用于 <xref:System.Web.Services.Protocols.HttpMethodAttribute> 每个 Web 方法，并将属性的 <xref:System.Web.Services.Protocols.HttpMethodAttribute.ParameterFormatter%2A> 属性设置为 <xref:System.Web.Services.Protocols.UrlParameterWriter> 。</span><span class="sxs-lookup"><span data-stu-id="cc19d-108">Instead, when the Wsdl.exe tool generates client proxy code according to the HTTP-GET implementation, it applies the <xref:System.Web.Services.Protocols.HttpMethodAttribute> to each Web method and sets the attribute's <xref:System.Web.Services.Protocols.HttpMethodAttribute.ParameterFormatter%2A> property to <xref:System.Web.Services.Protocols.UrlParameterWriter>.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Services.Protocols.MimeFormatter" />
    <altmember cref="T:System.Web.Services.Protocols.MimeParameterWriter" />
    <altmember cref="T:System.Web.Services.Protocols.UrlEncodedParameterWriter" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UrlParameterWriter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.UrlParameterWriter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UrlParameterWriter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="cc19d-109">初始化 <see cref="T:System.Web.Services.Protocols.UrlParameterWriter" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="cc19d-109">Initializes a new instance of the <see cref="T:System.Web.Services.Protocols.UrlParameterWriter" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRequestUrl">
      <MemberSignature Language="C#" Value="public override string GetRequestUrl (string url, object[] parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetRequestUrl(string url, object[] parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.UrlParameterWriter.GetRequestUrl(System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetRequestUrl (url As String, parameters As Object()) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ GetRequestUrl(System::String ^ url, cli::array &lt;System::Object ^&gt; ^ parameters);" />
      <MemberSignature Language="F#" Value="override this.GetRequestUrl : string * obj[] -&gt; string" Usage="urlParameterWriter.GetRequestUrl (url, parameters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="System.String" />
        <Parameter Name="parameters" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="url"><span data-ttu-id="cc19d-110">HTTP 请求的原始 URL。</span><span class="sxs-lookup"><span data-stu-id="cc19d-110">The HTTP request's original URL.</span></span></param>
        <param name="parameters"><span data-ttu-id="cc19d-111">要添加到 URL 中的 Web 方法参数值（如果需要）。</span><span class="sxs-lookup"><span data-stu-id="cc19d-111">The Web method parameter values to be added to the URL, if necessary.</span></span></param>
        <summary><span data-ttu-id="cc19d-112">将 Web 方法的参数值写入 HTTP 请求的查询字符串。</span><span class="sxs-lookup"><span data-stu-id="cc19d-112">Writes Web method parameter values to the query string of an HTTP request.</span></span></summary>
        <returns><span data-ttu-id="cc19d-113">包含查询字符串和参数值的 <see cref="T:System.String" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="cc19d-113">A <see cref="T:System.String" /> object that contains the query string and the parameter values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc19d-114"><xref:System.Web.Services.Protocols.UrlParameterWriter.GetRequestUrl%2A>方法将参数名称/值对编码到 HTTP 请求 URL 的查询字符串中。</span><span class="sxs-lookup"><span data-stu-id="cc19d-114">The <xref:System.Web.Services.Protocols.UrlParameterWriter.GetRequestUrl%2A> method encodes parameters name/value pairs into an HTTP request URL's query string.</span></span> <span data-ttu-id="cc19d-115">例如，在 URL 中 `http://contoso.com?a=1&b=2` ， `a` 和 `b` 是参数名称，并且 `1` 和 `2` 是其值。</span><span class="sxs-lookup"><span data-stu-id="cc19d-115">For example, in the URL `http://contoso.com?a=1&b=2`, `a` and `b` are parameter names, and `1` and `2` are their values.</span></span> <span data-ttu-id="cc19d-116">返回一个具有任何编码参数的新 URL 字符串。</span><span class="sxs-lookup"><span data-stu-id="cc19d-116">A new URL string, with any encoded parameters, is returned.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
