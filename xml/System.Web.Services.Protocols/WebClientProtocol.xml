<Type Name="WebClientProtocol" FullName="System.Web.Services.Protocols.WebClientProtocol">
  <Metadata><Meta Name="ms.openlocfilehash" Value="459f368ecb13c6db5835f491f6ee709cadcb4d55" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89690494" /></Metadata><TypeSignature Language="C#" Value="public abstract class WebClientProtocol : System.ComponentModel.Component" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract WebClientProtocol extends System.ComponentModel.Component" />
  <TypeSignature Language="DocId" Value="T:System.Web.Services.Protocols.WebClientProtocol" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class WebClientProtocol&#xA;Inherits Component" />
  <TypeSignature Language="C++ CLI" Value="public ref class WebClientProtocol abstract : System::ComponentModel::Component" />
  <TypeSignature Language="F#" Value="type WebClientProtocol = class&#xA;    inherit Component" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Services</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.Component</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName Language="C#">[System.Runtime.InteropServices.ComVisible(true)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.ComVisible(true)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="4adff-101">指定使用 ASP.NET 创建的所有 XML Web services 客户端代理的基类。</span><span class="sxs-lookup"><span data-stu-id="4adff-101">Specifies the base class for all XML Web service client proxies created using ASP.NET.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="4adff-102">类的属性 <xref:System.Web.Services.Protocols.WebClientProtocol> 用于控制传输 XML Web service 请求和响应时使用的传输行为。</span><span class="sxs-lookup"><span data-stu-id="4adff-102">The properties of the <xref:System.Web.Services.Protocols.WebClientProtocol> class are used to control the behavior of the transport used to transmit the XML Web service request and response.</span></span> <span data-ttu-id="4adff-103">此类的属性映射到上找到的属性 <xref:System.Net.WebRequest> 。</span><span class="sxs-lookup"><span data-stu-id="4adff-103">The properties on this class map to properties found on <xref:System.Net.WebRequest>.</span></span> <span data-ttu-id="4adff-104">派生自的类的实例（ <xref:System.Net.WebRequest> 如 <xref:System.Net.HttpWebRequest> ）用作使用 ASP.NET 创建的 XML Web services 的传输机制。</span><span class="sxs-lookup"><span data-stu-id="4adff-104">Instances of classes deriving from <xref:System.Net.WebRequest>, such as <xref:System.Net.HttpWebRequest>, are used as the transport mechanism for XML Web services created using ASP.NET.</span></span>

 <span data-ttu-id="4adff-105">若要与 XML Web service 通信，您必须创建一个间接或直接从中派生的代理类， <xref:System.Web.Services.Protocols.WebClientProtocol> 以便要调用的 XML Web service。</span><span class="sxs-lookup"><span data-stu-id="4adff-105">To communicate with an XML Web service, you must create a proxy class deriving indirectly or directly from <xref:System.Web.Services.Protocols.WebClientProtocol> for the XML Web service you want to call.</span></span> <span data-ttu-id="4adff-106">您可以使用 Wsdl.exe 工具为给定 XML Web service 的服务说明创建代理类，而不是手动创建代理类。</span><span class="sxs-lookup"><span data-stu-id="4adff-106">Instead of creating the proxy class manually, you can use the Wsdl.exe tool to create a proxy class for a given XML Web service's service description.</span></span> <span data-ttu-id="4adff-107">由于 <xref:System.Web.Services.Protocols.WebClientProtocol> 是你的客户端代理的基类，因此你将在代理类中找到其属性。</span><span class="sxs-lookup"><span data-stu-id="4adff-107">Since <xref:System.Web.Services.Protocols.WebClientProtocol> is the base class for your client proxy, you will find its properties on your proxy classes.</span></span> <span data-ttu-id="4adff-108">这些属性对于控制基础传输的请求行为很有用。</span><span class="sxs-lookup"><span data-stu-id="4adff-108">These properties are useful for controlling the request behavior of the underlying transport.</span></span> <span data-ttu-id="4adff-109">例如，使用 <xref:System.Web.Services.Protocols.WebClientProtocol.Credentials%2A> 属性调用通过身份验证的 XML Web 服务。</span><span class="sxs-lookup"><span data-stu-id="4adff-109">For instance, use the <xref:System.Web.Services.Protocols.WebClientProtocol.Credentials%2A> property for calling authenticated XML Web services.</span></span> <span data-ttu-id="4adff-110">许多 <xref:System.Web.Services.Protocols.WebClientProtocol> 属性用于初始化 <xref:System.Net.WebRequest> 用于发出 Web 请求的对象。</span><span class="sxs-lookup"><span data-stu-id="4adff-110">Many of the <xref:System.Web.Services.Protocols.WebClientProtocol> properties are used to initialize the <xref:System.Net.WebRequest> object that is used to make the Web request.</span></span>



## Examples
 <span data-ttu-id="4adff-111">下面的示例是 ASP.NET Web 窗体，它调用名为的 XML Web service `Math` 。</span><span class="sxs-lookup"><span data-stu-id="4adff-111">The following example is an ASP.NET Web Form, which calls an XML Web service named `Math`.</span></span> <span data-ttu-id="4adff-112">在 `EnterBtn_Click` 函数中，Web 窗体在调用远程 XML Web service 方法之前在代理类上设置代理信息和客户端凭据。</span><span class="sxs-lookup"><span data-stu-id="4adff-112">Within the `EnterBtn_Click` function, the Web Form sets proxy information and client credentials on the proxy class prior to calling the remote XML Web service method.</span></span>

> [!IMPORTANT]
>  <span data-ttu-id="4adff-113">此示例具有一个接受用户输入的文本框，这是一个潜在的安全威胁。</span><span class="sxs-lookup"><span data-stu-id="4adff-113">This example has a text box that accepts user input, which is a potential security threat.</span></span> <span data-ttu-id="4adff-114">默认情况下，ASP.NET 网页验证用户输入是否不包含脚本或 HTML 元素。</span><span class="sxs-lookup"><span data-stu-id="4adff-114">By default, ASP.NET Web pages validate that user input does not include script or HTML elements.</span></span> <span data-ttu-id="4adff-115">有关详细信息，请参阅[脚本侵入概述](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100))。</span><span class="sxs-lookup"><span data-stu-id="4adff-115">For more information, see [Script Exploits Overview](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100)).</span></span>

 [!code-aspx-csharp[Classic WebClientProtocol Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic WebClientProtocol Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic WebClientProtocol Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic WebClientProtocol Example/VB/sourcevb.aspx#1)]

 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="4adff-116"><see cref="T:System.Net.WebRequest" />对于每个 XML Web service 方法调用，此类的属性都将复制到对象的新实例中。</span><span class="sxs-lookup"><span data-stu-id="4adff-116">The properties on this class are copied into a new instance of a <see cref="T:System.Net.WebRequest" /> object for each XML Web service method call.</span></span> <span data-ttu-id="4adff-117">尽管可以同时从不同线程的同一实例调用 XML Web service 方法 <see cref="T:System.Web.Services.Protocols.WebClientProtocol" /> ，但没有完成同步，以确保将属性的一致快照传输到 <see cref="T:System.Net.WebRequest" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="4adff-117">While you can call XML Web service methods on the same <see cref="T:System.Web.Services.Protocols.WebClientProtocol" /> instance from different threads at the same time, there is no synchronization done to ensure that a consistent snapshot of the properties will get transferred to the <see cref="T:System.Net.WebRequest" /> object.</span></span> <span data-ttu-id="4adff-118">因此，如果需要修改属性并从不同线程进行并发方法调用，则应使用 XML Web service 代理的不同实例，或提供自己的同步。</span><span class="sxs-lookup"><span data-stu-id="4adff-118">Therefore if you need to modify the properties and make concurrent method calls from different threads you should use a different instance of the XML Web service proxy or provide your own synchronization.</span></span></threadsafe>
    <altmember cref="T:System.Web.Services.Protocols.SoapHttpClientProtocol" />
    <altmember cref="T:System.Net.HttpWebRequest" />
    <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100)"><span data-ttu-id="4adff-119">脚本攻击概述</span><span class="sxs-lookup"><span data-stu-id="4adff-119">Script Exploits Overview</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected WebClientProtocol ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.WebClientProtocol.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; WebClientProtocol();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4adff-120">初始化 <see cref="T:System.Web.Services.Protocols.WebClientProtocol" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="4adff-120">Initializes a new instance of the <see cref="T:System.Web.Services.Protocols.WebClientProtocol" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Examples
 [!code-cpp[System.Web.Services.Protocols.WebClientProtocol constructor#1](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Web.Services.Protocols.WebClientProtocol constructor/CPP/class1.cpp#1)]
 [!code-csharp[System.Web.Services.Protocols.WebClientProtocol constructor#1](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Web.Services.Protocols.WebClientProtocol constructor/CS/class1.cs#1)]
 [!code-vb[System.Web.Services.Protocols.WebClientProtocol constructor#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Web.Services.Protocols.WebClientProtocol constructor/VB/class1.vb#1)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Services.Protocols.SoapHttpClientProtocol" />
        <altmember cref="T:System.Net.HttpWebRequest" />
      </Docs>
    </Member>
    <Member MemberName="Abort">
      <MemberSignature Language="C#" Value="public virtual void Abort ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Abort() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.WebClientProtocol.Abort" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Abort ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Abort();" />
      <MemberSignature Language="F#" Value="abstract member Abort : unit -&gt; unit&#xA;override this.Abort : unit -&gt; unit" Usage="webClientProtocol.Abort " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4adff-121">取消对 XML Web services 方法的请求。</span><span class="sxs-lookup"><span data-stu-id="4adff-121">Cancels a request to an XML Web service method.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.Services.Protocols.WebClientProtocol.GetWebRequest(System.Uri)" />
        <altmember cref="M:System.Web.Services.Protocols.WebClientProtocol.GetWebResponse(System.Net.WebRequest)" />
        <altmember cref="T:System.Net.WebRequest" />
        <altmember cref="M:System.Net.WebRequest.Abort" />
        <altmember cref="T:System.Web.Services.Protocols.WebClientAsyncResult" />
      </Docs>
    </Member>
    <Member MemberName="AddToCache">
      <MemberSignature Language="C#" Value="protected static void AddToCache (Type type, object value);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig void AddToCache(class System.Type type, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.WebClientProtocol.AddToCache(System.Type,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Sub AddToCache (type As Type, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static void AddToCache(Type ^ type, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="static member AddToCache : Type * obj -&gt; unit" Usage="System.Web.Services.Protocols.WebClientProtocol.AddToCache (type, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="4adff-122">客户端协议处理程序的 <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="4adff-122">The <see cref="T:System.Type" /> of the client protocol handler.</span></span></param>
        <param name="value"><span data-ttu-id="4adff-123">要添加到缓存中的客户端协议处理程序。</span><span class="sxs-lookup"><span data-stu-id="4adff-123">The client protocol handler to be added to the cache.</span></span></param>
        <summary><span data-ttu-id="4adff-124">向缓存添加客户端协议处理程序的实例。</span><span class="sxs-lookup"><span data-stu-id="4adff-124">Add an instance of the client protocol handler to the cache.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConnectionGroupName">
      <MemberSignature Language="C#" Value="public string ConnectionGroupName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ConnectionGroupName" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.WebClientProtocol.ConnectionGroupName" />
      <MemberSignature Language="VB.NET" Value="Public Property ConnectionGroupName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ConnectionGroupName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ConnectionGroupName : string with get, set" Usage="System.Web.Services.Protocols.WebClientProtocol.ConnectionGroupName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue("")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue("")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4adff-125">获取或设置请求的连接组的名称。</span><span class="sxs-lookup"><span data-stu-id="4adff-125">Gets or sets the name of the connection group for the request.</span></span></summary>
        <value><span data-ttu-id="4adff-126">连接组的名称。</span><span class="sxs-lookup"><span data-stu-id="4adff-126">The name of the connection group.</span></span> <span data-ttu-id="4adff-127">默认值为 <see cref="F:System.String.Empty" />。</span><span class="sxs-lookup"><span data-stu-id="4adff-127">The default is <see cref="F:System.String.Empty" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="4adff-128"><xref:System.Web.Services.Protocols.WebClientProtocol.ConnectionGroupName%2A>属性使你能够将请求关联到连接组。</span><span class="sxs-lookup"><span data-stu-id="4adff-128">The <xref:System.Web.Services.Protocols.WebClientProtocol.ConnectionGroupName%2A> property enables you to associate a request to a connection group.</span></span> <span data-ttu-id="4adff-129">如需了解详情，请访问 <xref:System.Net.HttpWebRequest.ConnectionGroupName%2A>。</span><span class="sxs-lookup"><span data-stu-id="4adff-129">For more details, see <xref:System.Net.HttpWebRequest.ConnectionGroupName%2A>.</span></span>

 ]]></format>
        </remarks>
        <altmember cref="P:System.Net.WebRequest.ConnectionGroupName" />
        <altmember cref="P:System.Net.HttpWebRequest.ConnectionGroupName" />
      </Docs>
    </Member>
    <Member MemberName="Credentials">
      <MemberSignature Language="C#" Value="public System.Net.ICredentials Credentials { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.ICredentials Credentials" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.WebClientProtocol.Credentials" />
      <MemberSignature Language="VB.NET" Value="Public Property Credentials As ICredentials" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::ICredentials ^ Credentials { System::Net::ICredentials ^ get(); void set(System::Net::ICredentials ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Credentials : System.Net.ICredentials with get, set" Usage="System.Web.Services.Protocols.WebClientProtocol.Credentials" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.ICredentials</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4adff-130">获取或设置 XML Web services 客户端身份验证的安全凭据。</span><span class="sxs-lookup"><span data-stu-id="4adff-130">Gets or sets security credentials for XML Web service client authentication.</span></span></summary>
        <value><span data-ttu-id="4adff-131">XML Web services 客户端的 <see cref="T:System.Net.ICredentials" />。</span><span class="sxs-lookup"><span data-stu-id="4adff-131">The <see cref="T:System.Net.ICredentials" /> for the XML Web service client.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="4adff-132">使用属性时 `Credentials` ，XML Web service 客户端必须实例化实现的类（ <xref:System.Net.ICredentials> 如 <xref:System.Net.NetworkCredential> ），然后设置特定于身份验证机制的客户端凭据。</span><span class="sxs-lookup"><span data-stu-id="4adff-132">When using the `Credentials` property, a XML Web service client must instantiate a class implementing <xref:System.Net.ICredentials>, such as <xref:System.Net.NetworkCredential>, and then set the client credentials specific to the authentication mechanism.</span></span> <span data-ttu-id="4adff-133"><xref:System.Net.NetworkCredential>类可用于设置使用基本、摘要式、NTLM 和 Kerberos 身份验证机制的身份验证凭据。</span><span class="sxs-lookup"><span data-stu-id="4adff-133">The <xref:System.Net.NetworkCredential> class can be used to set authentication credentials using the basic, digest, NTLM and Kerberos authentication mechanisms.</span></span>

 <span data-ttu-id="4adff-134">如果将 <xref:System.Web.Services.Protocols.WebClientProtocol.Credentials%2A> 属性设置为 <xref:System.Net.CredentialCache.DefaultCredentials%2A?displayProperty=nameWithType>，则客户端将与服务器进行协商，并根据服务器的配置方式执行 Kerberos 和/或 NTLM 身份验证。</span><span class="sxs-lookup"><span data-stu-id="4adff-134">When the <xref:System.Web.Services.Protocols.WebClientProtocol.Credentials%2A> property is set to <xref:System.Net.CredentialCache.DefaultCredentials%2A?displayProperty=nameWithType> then the client negotiates with the server to do Kerberos and/or NTLM authentication depending on how the server is configured.</span></span>



## Examples
 <span data-ttu-id="4adff-135">下面的示例是 ASP.NET Web 窗体，它调用名为的 XML Web service `Math` 。</span><span class="sxs-lookup"><span data-stu-id="4adff-135">The following example is an ASP.NET Web Form, which calls an XML Web service named `Math`.</span></span> <span data-ttu-id="4adff-136">在 `EnterBtn_Click` 函数中，Web 窗体使用属性显式设置身份验证凭据 `Credentials` 。</span><span class="sxs-lookup"><span data-stu-id="4adff-136">Within the `EnterBtn_Click` function, the Web Form explicitly sets authentication credentials using the `Credentials` property.</span></span> <span data-ttu-id="4adff-137">用户名、密码和域会传递到类的构造函数中 <xref:System.Net.NetworkCredential> 。</span><span class="sxs-lookup"><span data-stu-id="4adff-137">The user name, password and domain are passed into the constructor for the <xref:System.Net.NetworkCredential> class.</span></span>

> [!IMPORTANT]
>  <span data-ttu-id="4adff-138">此示例具有一个接受用户输入的文本框，这是一个潜在的安全威胁。</span><span class="sxs-lookup"><span data-stu-id="4adff-138">This example has a text box that accepts user input, which is a potential security threat.</span></span> <span data-ttu-id="4adff-139">默认情况下，ASP.NET 网页验证用户输入是否不包含脚本或 HTML 元素。</span><span class="sxs-lookup"><span data-stu-id="4adff-139">By default, ASP.NET Web pages validate that user input does not include script or HTML elements.</span></span> <span data-ttu-id="4adff-140">有关详细信息，请参阅：</span><span class="sxs-lookup"><span data-stu-id="4adff-140">For more information, see.</span></span>

 [!code-aspx-csharp[Classic WebClientProtocol.Credentials Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic WebClientProtocol.Credentials Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic WebClientProtocol.Credentials Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic WebClientProtocol.Credentials Example/VB/sourcevb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.ICredentials" />
        <altmember cref="T:System.Net.NetworkCredential" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100)"><span data-ttu-id="4adff-141">脚本攻击概述</span><span class="sxs-lookup"><span data-stu-id="4adff-141">Script Exploits Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetFromCache">
      <MemberSignature Language="C#" Value="protected static object GetFromCache (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig object GetFromCache(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.WebClientProtocol.GetFromCache(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Function GetFromCache (type As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static System::Object ^ GetFromCache(Type ^ type);" />
      <MemberSignature Language="F#" Value="static member GetFromCache : Type -&gt; obj" Usage="System.Web.Services.Protocols.WebClientProtocol.GetFromCache type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="4adff-142">要从缓存返回的客户端协议处理程序的 <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="4adff-142">The <see cref="T:System.Type" /> of the client protocol handler to be returned from the cache.</span></span></param>
        <summary><span data-ttu-id="4adff-143">获取缓存中的客户端协议处理程序的实例。</span><span class="sxs-lookup"><span data-stu-id="4adff-143">Gets an instance of a client protocol handler from the cache.</span></span></summary>
        <returns><span data-ttu-id="4adff-144">缓存中的客户端协议处理程序的实例。</span><span class="sxs-lookup"><span data-stu-id="4adff-144">An instance of a client protocol handler from the cache.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Net.ICredentials" />
        <altmember cref="T:System.Net.NetworkCredential" />
      </Docs>
    </Member>
    <Member MemberName="GetWebRequest">
      <MemberSignature Language="C#" Value="protected virtual System.Net.WebRequest GetWebRequest (Uri uri);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Net.WebRequest GetWebRequest(class System.Uri uri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.WebClientProtocol.GetWebRequest(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetWebRequest (uri As Uri) As WebRequest" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Net::WebRequest ^ GetWebRequest(Uri ^ uri);" />
      <MemberSignature Language="F#" Value="abstract member GetWebRequest : Uri -&gt; System.Net.WebRequest&#xA;override this.GetWebRequest : Uri -&gt; System.Net.WebRequest" Usage="webClientProtocol.GetWebRequest uri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.WebRequest</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="uri"><span data-ttu-id="4adff-145"><see cref="T:System.Uri" /> 在创建 <see cref="T:System.Net.WebRequest" /> 时使用。</span><span class="sxs-lookup"><span data-stu-id="4adff-145">The <see cref="T:System.Uri" /> to use when creating the <see cref="T:System.Net.WebRequest" />.</span></span></param>
        <summary><span data-ttu-id="4adff-146">为指定的 <paramref name="uri" /> 创建一个 <see cref="T:System.Net.WebRequest" /> 实例。</span><span class="sxs-lookup"><span data-stu-id="4adff-146">Creates a <see cref="T:System.Net.WebRequest" /> instance for the specified <paramref name="uri" />.</span></span> <span data-ttu-id="4adff-147">这一受保护的方法由 XML Web services 客户端基础结构调用来获取新的 <see cref="T:System.Net.WebRequest" /> 传输对象，以传输 XML Web services 请求。</span><span class="sxs-lookup"><span data-stu-id="4adff-147">This protected method is called by the XML Web service client infrastructure to get a new <see cref="T:System.Net.WebRequest" /> transport object to transmit the XML Web service request.</span></span></summary>
        <returns><span data-ttu-id="4adff-148"><see cref="T:System.Net.WebRequest" /> 实例。</span><span class="sxs-lookup"><span data-stu-id="4adff-148">The <see cref="T:System.Net.WebRequest" /> instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="4adff-149">可以重写此方法，以便在 <xref:System.Net.WebRequest> 发出 XML Web service 请求之前自定义对象。</span><span class="sxs-lookup"><span data-stu-id="4adff-149">This method can be overridden to customize the <xref:System.Net.WebRequest> object before the XML Web service request is made.</span></span> <span data-ttu-id="4adff-150">例如，可以将自定义标头添加到请求。</span><span class="sxs-lookup"><span data-stu-id="4adff-150">For example you could add a custom header to the request.</span></span>

 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="4adff-151"><paramref name="uri" /> 参数为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="4adff-151">The <paramref name="uri" /> parameter is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.Net.WebRequest" />
        <altmember cref="M:System.Web.Services.Protocols.WebClientProtocol.GetWebResponse(System.Net.WebRequest)" />
        <altmember cref="T:System.Net.HttpWebRequest" />
        <altmember cref="T:System.Web.Services.Protocols.SoapHttpClientProtocol" />
        <altmember cref="M:System.Web.Services.Protocols.WebClientProtocol.Abort" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetWebResponse">
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="4adff-152">将请求中的响应返回给 XML Web services 方法。</span><span class="sxs-lookup"><span data-stu-id="4adff-152">Returns a response from a request to an XML Web service method.</span></span> <span data-ttu-id="4adff-153">这一受保护的方法由 XML Web services 客户端基础结构调用来获取来自同步 XML Web services 请求的响应。</span><span class="sxs-lookup"><span data-stu-id="4adff-153">This protected method is called by the XML Web service client infrastructure to get the response from a synchronous XML Web service request.</span></span></summary>
        <altmember cref="M:System.Web.Services.Protocols.WebClientProtocol.GetWebRequest(System.Uri)" />
        <altmember cref="T:System.Net.WebRequest" />
        <altmember cref="M:System.Web.Services.Protocols.WebClientProtocol.Abort" />
      </Docs>
    </MemberGroup>
    <Member MemberName="GetWebResponse">
      <MemberSignature Language="C#" Value="protected virtual System.Net.WebResponse GetWebResponse (System.Net.WebRequest request);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Net.WebResponse GetWebResponse(class System.Net.WebRequest request) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.WebClientProtocol.GetWebResponse(System.Net.WebRequest)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetWebResponse (request As WebRequest) As WebResponse" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Net::WebResponse ^ GetWebResponse(System::Net::WebRequest ^ request);" />
      <MemberSignature Language="F#" Value="abstract member GetWebResponse : System.Net.WebRequest -&gt; System.Net.WebResponse&#xA;override this.GetWebResponse : System.Net.WebRequest -&gt; System.Net.WebResponse" Usage="webClientProtocol.GetWebResponse request" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.WebResponse</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Net.WebRequest" />
      </Parameters>
      <Docs>
        <param name="request"><span data-ttu-id="4adff-154">从中获取响应的 <see cref="T:System.Net.WebRequest" />。</span><span class="sxs-lookup"><span data-stu-id="4adff-154">The <see cref="T:System.Net.WebRequest" /> to get the response from.</span></span></param>
        <summary><span data-ttu-id="4adff-155">将同步请求中的响应返回给 XML Web services 方法。</span><span class="sxs-lookup"><span data-stu-id="4adff-155">Returns a response from a synchronous request to an XML Web service method.</span></span></summary>
        <returns><span data-ttu-id="4adff-156">从同步请求到 XML Web services 方法的响应。</span><span class="sxs-lookup"><span data-stu-id="4adff-156">A response from a synchronous request to an XML Web service method.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Net.WebException"><span data-ttu-id="4adff-157">如果在调用 <see cref="M:System.Web.Services.Protocols.WebClientProtocol.Abort" /> 之前调用 <see cref="M:System.Web.Services.Protocols.WebClientProtocol.GetWebResponse(System.Net.WebRequest)" />。</span><span class="sxs-lookup"><span data-stu-id="4adff-157">If <see cref="M:System.Web.Services.Protocols.WebClientProtocol.Abort" /> is invoked prior to calling <see cref="M:System.Web.Services.Protocols.WebClientProtocol.GetWebResponse(System.Net.WebRequest)" />.</span></span></exception>
        <altmember cref="M:System.Web.Services.Protocols.WebClientProtocol.GetWebRequest(System.Uri)" />
        <altmember cref="T:System.Net.WebRequest" />
        <altmember cref="M:System.Web.Services.Protocols.WebClientProtocol.Abort" />
      </Docs>
    </Member>
    <Member MemberName="GetWebResponse">
      <MemberSignature Language="C#" Value="protected virtual System.Net.WebResponse GetWebResponse (System.Net.WebRequest request, IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Net.WebResponse GetWebResponse(class System.Net.WebRequest request, class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.WebClientProtocol.GetWebResponse(System.Net.WebRequest,System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetWebResponse (request As WebRequest, result As IAsyncResult) As WebResponse" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Net::WebResponse ^ GetWebResponse(System::Net::WebRequest ^ request, IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="abstract member GetWebResponse : System.Net.WebRequest * IAsyncResult -&gt; System.Net.WebResponse&#xA;override this.GetWebResponse : System.Net.WebRequest * IAsyncResult -&gt; System.Net.WebResponse" Usage="webClientProtocol.GetWebResponse (request, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.WebResponse</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Net.WebRequest" />
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="request"><span data-ttu-id="4adff-158">从中获取响应的 <see cref="T:System.Net.WebRequest" />。</span><span class="sxs-lookup"><span data-stu-id="4adff-158">The <see cref="T:System.Net.WebRequest" /> to get the response from.</span></span></param>
        <param name="result"><span data-ttu-id="4adff-159">当响应完成时要传递到 <see cref="T:System.IAsyncResult" /> 的 <see cref="M:System.Net.HttpWebRequest.EndGetResponse(System.IAsyncResult)" />。</span><span class="sxs-lookup"><span data-stu-id="4adff-159">The <see cref="T:System.IAsyncResult" /> to pass to <see cref="M:System.Net.HttpWebRequest.EndGetResponse(System.IAsyncResult)" /> when the response has completed.</span></span></param>
        <summary><span data-ttu-id="4adff-160">将异步请求中的响应返回给 XML Web services 方法。</span><span class="sxs-lookup"><span data-stu-id="4adff-160">Returns a response from an asynchronous request to an XML Web service method.</span></span> <span data-ttu-id="4adff-161">这一受保护的方法由 XML Web services 客户端基础结构调用来获取来自异步 XML Web services 请求的响应。</span><span class="sxs-lookup"><span data-stu-id="4adff-161">This protected method is called by the XML Web service client infrastructure to get the response from an asynchronous XML Web service request.</span></span></summary>
        <returns><span data-ttu-id="4adff-162">从异步请求到 XML Web services 方法的响应。</span><span class="sxs-lookup"><span data-stu-id="4adff-162">A response from an asynchronous request to an XML Web service method.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Net.WebException"><span data-ttu-id="4adff-163">如果在调用 <see cref="M:System.Web.Services.Protocols.WebClientProtocol.Abort" /> 之前调用 <see cref="M:System.Web.Services.Protocols.WebClientProtocol.GetWebResponse(System.Net.WebRequest)" />。</span><span class="sxs-lookup"><span data-stu-id="4adff-163">If <see cref="M:System.Web.Services.Protocols.WebClientProtocol.Abort" /> is invoked prior to calling <see cref="M:System.Web.Services.Protocols.WebClientProtocol.GetWebResponse(System.Net.WebRequest)" />.</span></span></exception>
        <altmember cref="M:System.Web.Services.Protocols.WebClientProtocol.GetWebRequest(System.Uri)" />
        <altmember cref="T:System.Net.WebRequest" />
        <altmember cref="M:System.Web.Services.Protocols.WebClientProtocol.Abort" />
      </Docs>
    </Member>
    <Member MemberName="PreAuthenticate">
      <MemberSignature Language="C#" Value="public bool PreAuthenticate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PreAuthenticate" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.WebClientProtocol.PreAuthenticate" />
      <MemberSignature Language="VB.NET" Value="Public Property PreAuthenticate As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool PreAuthenticate { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.PreAuthenticate : bool with get, set" Usage="System.Web.Services.Protocols.WebClientProtocol.PreAuthenticate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4adff-164">获取或设置是否启用了预身份验证。</span><span class="sxs-lookup"><span data-stu-id="4adff-164">Gets or sets whether pre-authentication is enabled.</span></span></summary>
        <value><span data-ttu-id="4adff-165">若要对请求进行预身份验证，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="4adff-165"><see langword="true" /> to pre-authenticate the request; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="4adff-166">默认值为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="4adff-166">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="4adff-167">当客户端请求资源时，如果没有使用凭据，则服务器会质询请求，并指示它支持的身份验证方案。</span><span class="sxs-lookup"><span data-stu-id="4adff-167">When a client requests a resource without using credentials, the server challenges the request and indicates what authentication schemes it supports.</span></span> <span data-ttu-id="4adff-168">客户端选择身份验证方案，并向服务器发送相应的 `WWW-authenticate` 标头。</span><span class="sxs-lookup"><span data-stu-id="4adff-168">The client chooses an authentication scheme and sends the appropriate `WWW-authenticate` header to the server.</span></span> <span data-ttu-id="4adff-169">当 <xref:System.Web.Services.Protocols.WebClientProtocol.PreAuthenticate%2A> 为时 `true` ， `WWW-authenticate` 标头将与所有后续请求一起发送。</span><span class="sxs-lookup"><span data-stu-id="4adff-169">When <xref:System.Web.Services.Protocols.WebClientProtocol.PreAuthenticate%2A> is `true`, the `WWW-authenticate` header is sent with all subsequent requests.</span></span>

 <span data-ttu-id="4adff-170">当 <xref:System.Web.Services.Protocols.WebClientProtocol.PreAuthenticate%2A> 为时，将对 `false` XML Web service 方法发出请求，而不会在最初尝试对用户进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="4adff-170">When <xref:System.Web.Services.Protocols.WebClientProtocol.PreAuthenticate%2A> is `false`, a request is made to the XML Web service method without initially attempting to authenticate the user.</span></span> <span data-ttu-id="4adff-171">如果 XML Web service 允许匿名访问，则执行 XML Web service 方法。</span><span class="sxs-lookup"><span data-stu-id="4adff-171">If the XML Web service allows anonymous access, then the XML Web service method is executed.</span></span> <span data-ttu-id="4adff-172">如果不允许匿名访问，则会向客户端发回 401 HTTP 返回代码。</span><span class="sxs-lookup"><span data-stu-id="4adff-172">If anonymous access is disallowed, a 401 HTTP return code is sent back to the client.</span></span> <span data-ttu-id="4adff-173">作为响应， <xref:System.Web.Services.Protocols.WebClientProtocol> 类将身份验证凭据返回到 Web 服务器。</span><span class="sxs-lookup"><span data-stu-id="4adff-173">In response, the <xref:System.Web.Services.Protocols.WebClientProtocol> class returns authentication credentials to the Web server.</span></span> <span data-ttu-id="4adff-174">如果客户端进行了身份验证，并且随后有权访问 XML Web service，则执行 XML Web service 方法;否则，客户端将被拒绝访问。</span><span class="sxs-lookup"><span data-stu-id="4adff-174">If the client is authenticated and subsequently authorized to access the XML Web service, the XML Web service method is executed; otherwise the client is denied access.</span></span>

 ]]></format>
        </remarks>
        <altmember cref="P:System.Net.HttpWebRequest.PreAuthenticate" />
      </Docs>
    </Member>
    <Member MemberName="RequestEncoding">
      <MemberSignature Language="C#" Value="public System.Text.Encoding RequestEncoding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.Encoding RequestEncoding" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.WebClientProtocol.RequestEncoding" />
      <MemberSignature Language="VB.NET" Value="Public Property RequestEncoding As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Text::Encoding ^ RequestEncoding { System::Text::Encoding ^ get(); void set(System::Text::Encoding ^ value); };" />
      <MemberSignature Language="F#" Value="member this.RequestEncoding : System.Text.Encoding with get, set" Usage="System.Web.Services.Protocols.WebClientProtocol.RequestEncoding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(null)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(null)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.ComponentModel.RecommendedAsConfigurable(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.RecommendedAsConfigurable(true)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.SettingsBindable(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.SettingsBindable(true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4adff-175">用于对 XML Web services 发出客户端请求的 <see cref="T:System.Text.Encoding" />。</span><span class="sxs-lookup"><span data-stu-id="4adff-175">The <see cref="T:System.Text.Encoding" /> used to make the client request to the XML Web service.</span></span></summary>
        <value><span data-ttu-id="4adff-176">客户端请求的字符编码。</span><span class="sxs-lookup"><span data-stu-id="4adff-176">The character encoding for the client request.</span></span> <span data-ttu-id="4adff-177">默认值为 <see langword="null" />，它将默认编码用于基础传输和协议。</span><span class="sxs-lookup"><span data-stu-id="4adff-177">The default is <see langword="null" />, which uses the default encoding for the underlying transport and protocol.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="4adff-178"><xref:System.Web.Services.Protocols.WebClientProtocol.RequestEncoding%2A>确定请求消息的编码。</span><span class="sxs-lookup"><span data-stu-id="4adff-178">The <xref:System.Web.Services.Protocols.WebClientProtocol.RequestEncoding%2A> determines the encoding for the request message.</span></span> <span data-ttu-id="4adff-179"><xref:System.Net.WebRequest.ContentType%2A>将用编码值注释请求的。</span><span class="sxs-lookup"><span data-stu-id="4adff-179">The <xref:System.Net.WebRequest.ContentType%2A> of the request will be annotated with the encoding value.</span></span>

 <span data-ttu-id="4adff-180">从派生的类 <xref:System.Web.Services.Protocols.WebClientProtocol> 支持特定协议，例如 <xref:System.Web.Services.Protocols.SoapHttpClientProtocol> for SOAP，请将此属性设置为符合特定协议的编码要求。</span><span class="sxs-lookup"><span data-stu-id="4adff-180">Classes deriving from <xref:System.Web.Services.Protocols.WebClientProtocol> support a particular protocol, such as <xref:System.Web.Services.Protocols.SoapHttpClientProtocol> does for SOAP, set this property to conform to encoding requirements for the specific protocol.</span></span> <span data-ttu-id="4adff-181">例如，将 <xref:System.Web.Services.Protocols.SoapHttpClientProtocol> 默认编码设置为 utf-8。</span><span class="sxs-lookup"><span data-stu-id="4adff-181">For example, the <xref:System.Web.Services.Protocols.SoapHttpClientProtocol> sets the default encoding to UTF-8.</span></span>



## Examples
 <span data-ttu-id="4adff-182">下面的示例是 ASP.NET Web 窗体，它调用名为的 XML Web service `Math` 。</span><span class="sxs-lookup"><span data-stu-id="4adff-182">The following example is an ASP.NET Web Form, which calls an XML Web service named `Math`.</span></span> <span data-ttu-id="4adff-183">在 `EnterBtn_Click` 函数中，Web 窗体将 RequestEncoding 显式设置为 utf-8。</span><span class="sxs-lookup"><span data-stu-id="4adff-183">Within the `EnterBtn_Click` function, the Web Form explicitly sets RequestEncoding to UTF-8.</span></span>

> [!IMPORTANT]
>  <span data-ttu-id="4adff-184">此示例具有一个接受用户输入的文本框，这是一个潜在的安全威胁。</span><span class="sxs-lookup"><span data-stu-id="4adff-184">This example has a text box that accepts user input, which is a potential security threat.</span></span> <span data-ttu-id="4adff-185">默认情况下，ASP.NET 网页验证用户输入是否不包含脚本或 HTML 元素。</span><span class="sxs-lookup"><span data-stu-id="4adff-185">By default, ASP.NET Web pages validate that user input does not include script or HTML elements.</span></span> <span data-ttu-id="4adff-186">有关详细信息，请参阅[脚本侵入概述](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100))。</span><span class="sxs-lookup"><span data-stu-id="4adff-186">For more information, see [Script Exploits Overview](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100)).</span></span>

 [!code-aspx-csharp[Classic WebClientProtocol.RequestEncoding Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic WebClientProtocol.RequestEncoding Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic WebClientProtocol.RequestEncoding Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic WebClientProtocol.RequestEncoding Example/VB/sourcevb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Text.Encoding" />
        <altmember cref="P:System.Net.WebRequest.ContentType" />
        <altmember cref="T:System.Net.WebRequest" />
      </Docs>
    </Member>
    <Member MemberName="Timeout">
      <MemberSignature Language="C#" Value="public int Timeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Timeout" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.WebClientProtocol.Timeout" />
      <MemberSignature Language="VB.NET" Value="Public Property Timeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Timeout { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Timeout : int with get, set" Usage="System.Web.Services.Protocols.WebClientProtocol.Timeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(100000)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(100000)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.ComponentModel.RecommendedAsConfigurable(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.RecommendedAsConfigurable(true)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.SettingsBindable(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.SettingsBindable(true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4adff-187">指示 XML Web services 客户端等待同步 XML Web services 请求完成的时间（以毫秒计）的回复。</span><span class="sxs-lookup"><span data-stu-id="4adff-187">Indicates the time an XML Web service client waits for the reply to a synchronous XML Web service request to arrive (in milliseconds).</span></span></summary>
        <value><span data-ttu-id="4adff-188">对 XML Web services 的同步调用的超时（以毫秒为单位）。</span><span class="sxs-lookup"><span data-stu-id="4adff-188">The time out, in milliseconds, for synchronous calls to the XML Web service.</span></span> <span data-ttu-id="4adff-189">默认值为100000毫秒。</span><span class="sxs-lookup"><span data-stu-id="4adff-189">The default is 100000 milliseconds.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="4adff-190">将 <xref:System.Web.Services.Protocols.WebClientProtocol.Timeout%2A> 属性设置为 <xref:System.Threading.Timeout.Infinite?displayProperty=nameWithType> 指示请求不会超时。即使 XML Web service 的客户端可以将 <xref:System.Web.Services.Protocols.WebClientProtocol.Timeout%2A> 属性设置为不超时，Web 服务器仍可以在服务器端导致请求超时。</span><span class="sxs-lookup"><span data-stu-id="4adff-190">Setting the <xref:System.Web.Services.Protocols.WebClientProtocol.Timeout%2A> property to <xref:System.Threading.Timeout.Infinite?displayProperty=nameWithType> indicates that the request does not time out. Even though an XML Web service client can set the <xref:System.Web.Services.Protocols.WebClientProtocol.Timeout%2A> property to not time out, the Web server can still cause the request to time out on the server side.</span></span>



## Examples
 <span data-ttu-id="4adff-191">下面的示例将 `Timeout` 值设置为 15000 (15 秒) 对 `Add` XML Web service 中的 XML Web service 方法的同步调用 `Math` 。</span><span class="sxs-lookup"><span data-stu-id="4adff-191">The following example sets the `Timeout` value to 15000 (15 seconds) for the synchronous call to the `Add` XML Web service method within the `Math` XML Web service.</span></span>

 [!code-cpp[Classic WebClientProtocol.Timeout Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic WebClientProtocol.Timeout Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebClientProtocol.Timeout Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic WebClientProtocol.Timeout Example/CS/source.cs#1)]
 [!code-vb[Classic WebClientProtocol.Timeout Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic WebClientProtocol.Timeout Example/VB/source.vb#1)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Text.Encoding" />
        <altmember cref="P:System.Net.WebRequest.ContentType" />
        <altmember cref="T:System.Net.WebRequest" />
      </Docs>
    </Member>
    <Member MemberName="Url">
      <MemberSignature Language="C#" Value="public string Url { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Url" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.WebClientProtocol.Url" />
      <MemberSignature Language="VB.NET" Value="Public Property Url As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Url { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Url : string with get, set" Usage="System.Web.Services.Protocols.WebClientProtocol.Url" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue("")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue("")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.ComponentModel.RecommendedAsConfigurable(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.RecommendedAsConfigurable(true)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.SettingsBindable(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.SettingsBindable(true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4adff-192">获取或设置客户端正在请求的 XML Web services 的基 URL。</span><span class="sxs-lookup"><span data-stu-id="4adff-192">Gets or sets the base URL of the XML Web service the client is requesting.</span></span></summary>
        <value><span data-ttu-id="4adff-193">客户端正在请求的 XML Web services 的基 URL。</span><span class="sxs-lookup"><span data-stu-id="4adff-193">The base URL of the XML Web service the client is requesting.</span></span> <span data-ttu-id="4adff-194">默认值为 <see cref="F:System.String.Empty" />。</span><span class="sxs-lookup"><span data-stu-id="4adff-194">The default is <see cref="F:System.String.Empty" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="4adff-195">使用 Wsdl.exe 生成的代理类将设置用于 <xref:System.Web.Services.Protocols.WebClientProtocol.Url%2A> 客户端使用的默认属性。</span><span class="sxs-lookup"><span data-stu-id="4adff-195">Proxy classes generated using Wsdl.exe will set a default <xref:System.Web.Services.Protocols.WebClientProtocol.Url%2A> property for the client to use.</span></span> <span data-ttu-id="4adff-196">默认值由 <xref:System.Web.Services.Protocols.WebClientProtocol.Url%2A> 在从中生成代理类的服务说明中找到的 location 特性决定。</span><span class="sxs-lookup"><span data-stu-id="4adff-196">The default <xref:System.Web.Services.Protocols.WebClientProtocol.Url%2A> is determined by the location attribute found in the service description from which the proxy class was generated.</span></span>

 <span data-ttu-id="4adff-197">支持特定协议的派生类（如 <xref:System.Web.Services.Protocols.HttpGetClientProtocol> 和） <xref:System.Web.Services.Protocols.HttpPostClientProtocol> 可能会将额外信息添加到 <xref:System.Web.Services.Protocols.WebClientProtocol.Url%2A> 中，以发出 XML Web service 请求。</span><span class="sxs-lookup"><span data-stu-id="4adff-197">Derived classes supporting specific protocols, such as <xref:System.Web.Services.Protocols.HttpGetClientProtocol> and <xref:System.Web.Services.Protocols.HttpPostClientProtocol> might add extra information to <xref:System.Web.Services.Protocols.WebClientProtocol.Url%2A> to make the XML Web service request.</span></span>

 <span data-ttu-id="4adff-198"><xref:System.Web.Services.Protocols.WebClientProtocol.Url%2A>可以更改此属性，以引用实现代理类生成的相同服务说明的任何 XML Web service。</span><span class="sxs-lookup"><span data-stu-id="4adff-198">The <xref:System.Web.Services.Protocols.WebClientProtocol.Url%2A> property can be changed to refer to any XML Web service that implements the same service description that the proxy class was generated from.</span></span>



## Examples
 <span data-ttu-id="4adff-199">下面的示例将 XML Web service 的属性更改为 <xref:System.Web.Services.Protocols.WebClientProtocol.Url%2A> `math` 名为的 Web 服务器 `http:// www.contoso.com` 。</span><span class="sxs-lookup"><span data-stu-id="4adff-199">The following example changes the <xref:System.Web.Services.Protocols.WebClientProtocol.Url%2A> property for the `math` XML Web service to the Web server named `http:// www.contoso.com`.</span></span>

 [!code-cpp[Classic WebClientProtocol.Url Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic WebClientProtocol.Url Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebClientProtocol.Url Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic WebClientProtocol.Url Example/CS/source.cs#1)]
 [!code-vb[Classic WebClientProtocol.Url Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic WebClientProtocol.Url Example/VB/source.vb#1)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Text.Encoding" />
        <altmember cref="P:System.Net.WebRequest.ContentType" />
        <altmember cref="T:System.Net.WebRequest" />
      </Docs>
    </Member>
    <Member MemberName="UseDefaultCredentials">
      <MemberSignature Language="C#" Value="public bool UseDefaultCredentials { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseDefaultCredentials" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.WebClientProtocol.UseDefaultCredentials" />
      <MemberSignature Language="VB.NET" Value="Public Property UseDefaultCredentials As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseDefaultCredentials { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseDefaultCredentials : bool with get, set" Usage="System.Web.Services.Protocols.WebClientProtocol.UseDefaultCredentials" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4adff-200">获取或设置一个值，该值指示是否将 <see cref="P:System.Web.Services.Protocols.WebClientProtocol.Credentials" /> 属性设置为 <see cref="P:System.Net.CredentialCache.DefaultCredentials" /> 属性的值。</span><span class="sxs-lookup"><span data-stu-id="4adff-200">Gets or sets a value that indicates whether to set the <see cref="P:System.Web.Services.Protocols.WebClientProtocol.Credentials" /> property to the value of the <see cref="P:System.Net.CredentialCache.DefaultCredentials" /> property.</span></span></summary>
        <value><span data-ttu-id="4adff-201">如果将 Credentials 属性设置为 <see cref="P:System.Net.CredentialCache.DefaultCredentials" /> 属性的值，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="4adff-201"><see langword="true" /> if the Credentials property is set to the value of the <see cref="P:System.Net.CredentialCache.DefaultCredentials" /> property; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Text.Encoding" />
        <altmember cref="P:System.Net.WebRequest.ContentType" />
        <altmember cref="T:System.Net.WebRequest" />
      </Docs>
    </Member>
  </Members>
</Type>
