<Type Name="Soap12FaultCodes" FullName="System.Web.Services.Protocols.Soap12FaultCodes">
  <Metadata><Meta Name="ms.openlocfilehash" Value="38ba72ce597f6dada71a3d1ec0c0504ccce85b6c" /><Meta Name="ms.sourcegitcommit" Value="397961a0164281b579f68064c3bb66c071f374d9" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/14/2020" /><Meta Name="ms.locfileid" Value="78736442" /></Metadata><TypeSignature Language="C#" Value="public sealed class Soap12FaultCodes" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit Soap12FaultCodes extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.Services.Protocols.Soap12FaultCodes" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class Soap12FaultCodes" />
  <TypeSignature Language="C++ CLI" Value="public ref class Soap12FaultCodes sealed" />
  <TypeSignature Language="F#" Value="type Soap12FaultCodes = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Services</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>定义在使用 SOAP 1.2 版协议与 XML Web services 进行通信期间发生错误时，显示在 SOAP 消息中的 SOAP 错误代码。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 SOAP 规范1.2 版中的 SOAP 错误包含一个 `Code` 元素，以及其他元素中的一个可选 `Subcode` 元素。 

`Code`元素是预定义的一组代码，通知收件人导致错误的原因分为五个大错误类别之一。 这五个错误代码由、、 <xref:System.Web.Services.Protocols.Soap12FaultCodes.ReceiverFaultCode?displayProperty=nameWithType> 、 <xref:System.Web.Services.Protocols.Soap12FaultCodes.SenderFaultCode?displayProperty=nameWithType> <xref:System.Web.Services.Protocols.Soap12FaultCodes.VersionMismatchFaultCode?displayProperty=nameWithType> <xref:System.Web.Services.Protocols.Soap12FaultCodes.MustUnderstandFaultCode?displayProperty=nameWithType> 和 <xref:System.Web.Services.Protocols.Soap12FaultCodes.DataEncodingUnknownFaultCode?displayProperty=nameWithType> 字段表示。 

`Subcode`元素允许 SOAP 错误的发送方提供特定于应用程序的错误代码。 ASP.NET 定义由 <xref:System.Web.Services.Protocols.Soap12FaultCodes.RpcProcedureNotPresentFaultCode?displayProperty=nameWithType> 、 <xref:System.Web.Services.Protocols.Soap12FaultCodes.RpcBadArgumentsFaultCode?displayProperty=nameWithType> 、 <xref:System.Web.Services.Protocols.Soap12FaultCodes.EncodingMissingIdFaultCode?displayProperty=nameWithType> 和字段表示的四个这类代码 <xref:System.Web.Services.Protocols.Soap12FaultCodes.EncodingUntypedValueFaultCode?displayProperty=nameWithType> 。  
  
 <xref:System.Web.Services.Protocols.SoapException.Code%2A> `Code` 当 <xref:System.Web.Services.Protocols.SoapException> 创建或类的新实例时，引发异常的 XML Web service 会设置属性，该属性表示元素 <xref:System.Web.Services.Protocols.SoapHeaderException> 。 该错误是作为 SOAP 错误在网络上传输的，.NET Framework 客户端可以将其捕获为 <xref:System.Web.Services.Protocols.SoapException> 或 <xref:System.Web.Services.Protocols.SoapHeaderException> 。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="DataEncodingUnknownFaultCode">
      <MemberSignature Language="C#" Value="public static readonly System.Xml.XmlQualifiedName DataEncodingUnknownFaultCode;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Xml.XmlQualifiedName DataEncodingUnknownFaultCode" />
      <MemberSignature Language="DocId" Value="F:System.Web.Services.Protocols.Soap12FaultCodes.DataEncodingUnknownFaultCode" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DataEncodingUnknownFaultCode As XmlQualifiedName " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Xml::XmlQualifiedName ^ DataEncodingUnknownFaultCode;" />
      <MemberSignature Language="F#" Value=" staticval mutable DataEncodingUnknownFaultCode : System.Xml.XmlQualifiedName" Usage="System.Web.Services.Protocols.Soap12FaultCodes.DataEncodingUnknownFaultCode" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlQualifiedName</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>表示 SOAP 1.2 版 <see langword="DataEncodingUnknown" /> 错误代码，用于指示 SOAP 消息所使用的编码格式无法识别。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 当 <xref:System.Web.Services.Protocols.SoapException> 属性设置为时，ASP.NET 不会自动引发 <xref:System.Web.Services.Protocols.SoapException.Code%2A> <xref:System.Web.Services.Protocols.Soap12FaultCodes.DataEncodingUnknownFaultCode> 。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EncodingMissingIdFaultCode">
      <MemberSignature Language="C#" Value="public static readonly System.Xml.XmlQualifiedName EncodingMissingIdFaultCode;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Xml.XmlQualifiedName EncodingMissingIdFaultCode" />
      <MemberSignature Language="DocId" Value="F:System.Web.Services.Protocols.Soap12FaultCodes.EncodingMissingIdFaultCode" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly EncodingMissingIdFaultCode As XmlQualifiedName " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Xml::XmlQualifiedName ^ EncodingMissingIdFaultCode;" />
      <MemberSignature Language="F#" Value=" staticval mutable EncodingMissingIdFaultCode : System.Xml.XmlQualifiedName" Usage="System.Web.Services.Protocols.Soap12FaultCodes.EncodingMissingIdFaultCode" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlQualifiedName</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>表示 SOAP 编码数据中缺少 ID 的错误代码。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EncodingUntypedValueFaultCode">
      <MemberSignature Language="C#" Value="public static readonly System.Xml.XmlQualifiedName EncodingUntypedValueFaultCode;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Xml.XmlQualifiedName EncodingUntypedValueFaultCode" />
      <MemberSignature Language="DocId" Value="F:System.Web.Services.Protocols.Soap12FaultCodes.EncodingUntypedValueFaultCode" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly EncodingUntypedValueFaultCode As XmlQualifiedName " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Xml::XmlQualifiedName ^ EncodingUntypedValueFaultCode;" />
      <MemberSignature Language="F#" Value=" staticval mutable EncodingUntypedValueFaultCode : System.Xml.XmlQualifiedName" Usage="System.Web.Services.Protocols.Soap12FaultCodes.EncodingUntypedValueFaultCode" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlQualifiedName</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>表示 SOAP 1.2 版 <see langword="enc:UntypedValue" /> 错误子代码，用于指示 SOAP 消息采用了 RPC 编码并且未指定编码图形节点的类型名称属性。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  当 <xref:System.Web.Services.Protocols.SoapException> 属性设置为时，ASP.NET 不会自动引发 <xref:System.Web.Services.Protocols.SoapFaultSubCode.Code%2A?displayProperty=nameWithType> <xref:System.Web.Services.Protocols.Soap12FaultCodes.EncodingUntypedValueFaultCode?displayProperty=nameWithType> 。  
  
 <xref:System.Web.Services.Protocols.SoapException>类具有一个类型为的 <xref:System.Web.Services.Protocols.SoapException.SubCode%2A> 属性 <xref:System.Web.Services.Protocols.SoapFaultSubCode> ，该属性表示 SOAP 错误子代码。 <xref:System.Web.Services.Protocols.SoapFaultSubCode.Code%2A?displayProperty=nameWithType>属性表示实际 SOAP 错误子代码的 URI。 在将 <xref:System.Web.Services.Protocols.SoapFaultSubCode.Code%2A?displayProperty=nameWithType> 属性设置为时 <xref:System.Web.Services.Protocols.Soap12FaultCodes.EncodingUntypedValueFaultCode?displayProperty=nameWithType> ，将 <xref:System.Web.Services.Protocols.SoapException.Code%2A?displayProperty=nameWithType> 属性设置为 <xref:System.Web.Services.Protocols.Soap12FaultCodes.SenderFaultCode?displayProperty=nameWithType> 。  
    
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MustUnderstandFaultCode">
      <MemberSignature Language="C#" Value="public static readonly System.Xml.XmlQualifiedName MustUnderstandFaultCode;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Xml.XmlQualifiedName MustUnderstandFaultCode" />
      <MemberSignature Language="DocId" Value="F:System.Web.Services.Protocols.Soap12FaultCodes.MustUnderstandFaultCode" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MustUnderstandFaultCode As XmlQualifiedName " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Xml::XmlQualifiedName ^ MustUnderstandFaultCode;" />
      <MemberSignature Language="F#" Value=" staticval mutable MustUnderstandFaultCode : System.Xml.XmlQualifiedName" Usage="System.Web.Services.Protocols.Soap12FaultCodes.MustUnderstandFaultCode" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlQualifiedName</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>表示 SOAP 1.2 版 <see langword="MustUnderstand" /> 错误代码，用于指示未处理用 <see langword="MustUnderstand" /> 特性标记的 SOAP 标头。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 并非所有 SOAP 标头都需要接收方进行处理。 但是，如果 SOAP 标头的 `MustUnderstand` 属性等于 "true"，则需要进行处理。 如果标头位于 SOAP 1.2 请求中，则无法对其进行处理将生成 <xref:System.Web.Services.Protocols.SoapHeaderException> ，并将 <xref:System.Web.Services.Protocols.SoapException.Code%2A> 属性设置为 <xref:System.Web.Services.Protocols.Soap12FaultCodes.MustUnderstandFaultCode?displayProperty=nameWithType> 。 如果 SOAP 请求驻留在 SOAP 1.1 请求中，则将 <xref:System.Web.Services.Protocols.SoapException.Code%2A> 属性设置为 <xref:System.Web.Services.Protocols.SoapException.MustUnderstandFaultCode?displayProperty=nameWithType> 。  
  
 SOAP 1.1 和1.2 都定义 `MustUnderstand` 了仅使用用于发送 soap 消息的 soap 协议版本的 soap 错误代码。 此字段表示 SOAP 1.2 版本，SOAP 1.1 版本由表示 <xref:System.Web.Services.Protocols.SoapException.MustUnderstandFaultCode?displayProperty=nameWithType> 。 这两个字段映射到不同的限定名称，但你可以 <xref:System.Web.Services.Protocols.SoapException.Code%2A> 通过调用方法来检查该属性是否为错误代码之一 <xref:System.Web.Services.Protocols.SoapException.IsMustUnderstandFaultCode%2A> 。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReceiverFaultCode">
      <MemberSignature Language="C#" Value="public static readonly System.Xml.XmlQualifiedName ReceiverFaultCode;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Xml.XmlQualifiedName ReceiverFaultCode" />
      <MemberSignature Language="DocId" Value="F:System.Web.Services.Protocols.Soap12FaultCodes.ReceiverFaultCode" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ReceiverFaultCode As XmlQualifiedName " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Xml::XmlQualifiedName ^ ReceiverFaultCode;" />
      <MemberSignature Language="F#" Value=" staticval mutable ReceiverFaultCode : System.Xml.XmlQualifiedName" Usage="System.Web.Services.Protocols.Soap12FaultCodes.ReceiverFaultCode" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlQualifiedName</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>表示 SOAP 1.2 版 <see langword="Receiver" /> 错误代码，用于指示在处理客户端对服务器的调用期间因接收方出现问题而发生的错误。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Services.Protocols.SoapException> <xref:System.Web.Services.Protocols.SoapException.Code%2A> <xref:System.Web.Services.Protocols.Soap12FaultCodes.ReceiverFaultCode> 当调用服务器并且由于网络问题而无法响应某一请求时，将引发。 通常，对于这种类型的异常，客户端调用以后可能会成功。  
  
 `Receiver`Soap 错误代码与 `Server` 错误代码相似，后者由 <xref:System.Web.Services.Protocols.SoapException.ServerFaultCode> 字段表示，但 `Server` 当使用 soap 1.1 发送 soap 请求时，将使用错误代码。 若要检查 <xref:System.Web.Services.Protocols.SoapException.Code%2A> 属性是否为 `Receiver` 或 `Server` SOAP 错误代码，请调用 <xref:System.Web.Services.Protocols.SoapException.IsServerFaultCode%2A> 方法。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RpcBadArgumentsFaultCode">
      <MemberSignature Language="C#" Value="public static readonly System.Xml.XmlQualifiedName RpcBadArgumentsFaultCode;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Xml.XmlQualifiedName RpcBadArgumentsFaultCode" />
      <MemberSignature Language="DocId" Value="F:System.Web.Services.Protocols.Soap12FaultCodes.RpcBadArgumentsFaultCode" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly RpcBadArgumentsFaultCode As XmlQualifiedName " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Xml::XmlQualifiedName ^ RpcBadArgumentsFaultCode;" />
      <MemberSignature Language="F#" Value=" staticval mutable RpcBadArgumentsFaultCode : System.Xml.XmlQualifiedName" Usage="System.Web.Services.Protocols.Soap12FaultCodes.RpcBadArgumentsFaultCode" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlQualifiedName</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>表示 SOAP 1.2 版 <see langword="rpc:BadArguments" /> 错误子代码，用于指示发送到 XML Web services 方法的参数不正确或未能分析。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 当 <xref:System.Web.Services.Protocols.SoapException> 属性设置为时，ASP.NET 不会自动引发 <xref:System.Web.Services.Protocols.SoapFaultSubCode.Code%2A?displayProperty=nameWithType> <xref:System.Web.Services.Protocols.Soap12FaultCodes.RpcBadArgumentsFaultCode> 。  
  
 <xref:System.Web.Services.Protocols.SoapException>类具有一个类型为的 <xref:System.Web.Services.Protocols.SoapException.SubCode%2A> 属性 <xref:System.Web.Services.Protocols.SoapFaultSubCode> ，该属性表示 SOAP 错误子代码。 <xref:System.Web.Services.Protocols.SoapFaultSubCode.Code%2A?displayProperty=nameWithType>属性表示实际 SOAP 错误子代码的 URI。 在将 <xref:System.Web.Services.Protocols.SoapFaultSubCode.Code%2A?displayProperty=nameWithType> 属性设置为时 <xref:System.Web.Services.Protocols.Soap12FaultCodes.RpcBadArgumentsFaultCode> ，将 <xref:System.Web.Services.Protocols.SoapException.Code%2A?displayProperty=nameWithType> 属性设置为 <xref:System.Web.Services.Protocols.Soap12FaultCodes.SenderFaultCode> 。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RpcProcedureNotPresentFaultCode">
      <MemberSignature Language="C#" Value="public static readonly System.Xml.XmlQualifiedName RpcProcedureNotPresentFaultCode;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Xml.XmlQualifiedName RpcProcedureNotPresentFaultCode" />
      <MemberSignature Language="DocId" Value="F:System.Web.Services.Protocols.Soap12FaultCodes.RpcProcedureNotPresentFaultCode" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly RpcProcedureNotPresentFaultCode As XmlQualifiedName " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Xml::XmlQualifiedName ^ RpcProcedureNotPresentFaultCode;" />
      <MemberSignature Language="F#" Value=" staticval mutable RpcProcedureNotPresentFaultCode : System.Xml.XmlQualifiedName" Usage="System.Web.Services.Protocols.Soap12FaultCodes.RpcProcedureNotPresentFaultCode" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlQualifiedName</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>表示 SOAP 1.2 版 <see langword="rpc:ProcedureNotPresent" /> 错误子代码，用于指示 XML Web services 不支持请求的 XML Web services 方法。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 当 <xref:System.Web.Services.Protocols.SoapException> 属性设置为时，ASP.NET 不会自动引发 <xref:System.Web.Services.Protocols.SoapFaultSubCode.Code%2A?displayProperty=nameWithType> <xref:System.Web.Services.Protocols.Soap12FaultCodes.RpcProcedureNotPresentFaultCode> 。  
  
 <xref:System.Web.Services.Protocols.SoapException>类具有一个类型为的 <xref:System.Web.Services.Protocols.SoapException.SubCode%2A> 属性 <xref:System.Web.Services.Protocols.SoapFaultSubCode> ，该属性表示 SOAP 错误子代码。 <xref:System.Web.Services.Protocols.SoapFaultSubCode.Code%2A?displayProperty=nameWithType>属性表示实际 SOAP 错误子代码的 URI。 在将 <xref:System.Web.Services.Protocols.SoapFaultSubCode.Code%2A?displayProperty=nameWithType> 属性设置为时 <xref:System.Web.Services.Protocols.Soap12FaultCodes.RpcProcedureNotPresentFaultCode> ，将 <xref:System.Web.Services.Protocols.SoapException.Code%2A?displayProperty=nameWithType> 属性设置为 <xref:System.Web.Services.Protocols.Soap12FaultCodes.SenderFaultCode> 。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SenderFaultCode">
      <MemberSignature Language="C#" Value="public static readonly System.Xml.XmlQualifiedName SenderFaultCode;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Xml.XmlQualifiedName SenderFaultCode" />
      <MemberSignature Language="DocId" Value="F:System.Web.Services.Protocols.Soap12FaultCodes.SenderFaultCode" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly SenderFaultCode As XmlQualifiedName " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Xml::XmlQualifiedName ^ SenderFaultCode;" />
      <MemberSignature Language="F#" Value=" staticval mutable SenderFaultCode : System.Xml.XmlQualifiedName" Usage="System.Web.Services.Protocols.Soap12FaultCodes.SenderFaultCode" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlQualifiedName</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>表示 SOAP 1.2 版 <see langword="Sender" /> 错误代码，用于指示客户端调用的格式不正确或者没有包含适当的信息。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Services.Protocols.SoapException> <xref:System.Web.Services.Protocols.SoapException.Code%2A> <xref:System.Web.Services.Protocols.Soap12FaultCodes.SenderFaultCode> 当 SOAP 1.2 请求格式不正确或缺少参数时，将引发。  
  
 `Sender`Soap 错误代码与 `Client` 错误代码相似，后者由 <xref:System.Web.Services.Protocols.SoapException.ClientFaultCode> 字段表示，但 `Client` 当使用 soap 1.1 发送 soap 请求时，将使用错误代码。 若要检查 <xref:System.Web.Services.Protocols.SoapException.Code%2A> 属性是否为 `Sender` 或 `Client` SOAP 错误代码，请调用 <xref:System.Web.Services.Protocols.SoapException.IsClientFaultCode%2A> 方法。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VersionMismatchFaultCode">
      <MemberSignature Language="C#" Value="public static readonly System.Xml.XmlQualifiedName VersionMismatchFaultCode;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Xml.XmlQualifiedName VersionMismatchFaultCode" />
      <MemberSignature Language="DocId" Value="F:System.Web.Services.Protocols.Soap12FaultCodes.VersionMismatchFaultCode" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly VersionMismatchFaultCode As XmlQualifiedName " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Xml::XmlQualifiedName ^ VersionMismatchFaultCode;" />
      <MemberSignature Language="F#" Value=" staticval mutable VersionMismatchFaultCode : System.Xml.XmlQualifiedName" Usage="System.Web.Services.Protocols.Soap12FaultCodes.VersionMismatchFaultCode" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlQualifiedName</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>表示 SOAP 1.2 版 <see langword="VersionMismatch" /> 错误代码，用于指示 XML Web services 希望接收符合 SOAP 1.2 规范的 SOAP 消息，但收到一条符合 SOAP 1.1 规范的 SOAP 消息。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Services.Protocols.SoapException> <xref:System.Web.Services.Protocols.SoapException.Code%2A> <xref:System.Web.Services.Protocols.Soap12FaultCodes.VersionMismatchFaultCode?displayProperty=nameWithType> 如果 XML Web service 配置为仅接受 soap 1.2 请求并收到 soap 1.1 消息，则将引发，并将属性设置为。 同样，如果 XML Web service 配置为仅接受 SOAP 1.1 消息并收到 SOAP 1.2 消息，则会引发，并将 <xref:System.Web.Services.Protocols.SoapException> <xref:System.Web.Services.Protocols.SoapException.Code%2A> 属性设置为 <xref:System.Web.Services.Protocols.SoapException.VersionMismatchFaultCode?displayProperty=nameWithType> 。 有关配置 XML Web services 的详细信息，请参阅[使用 ASP.NET 创建的 XML Web services 的配置选项](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/b2c0ew36(v=vs.100))。  
  
 SOAP 1.1 和1.2 都定义了 `VersionMismatch` 与所需 soap 协议版本不同的 soap 错误代码。 此字段表示 SOAP 1.2 版本，而 SOAP 1.1 版本由表示 <xref:System.Web.Services.Protocols.SoapException.VersionMismatchFaultCode> 。 这两个字段映射到不同的限定名称，但你可以 <xref:System.Web.Services.Protocols.SoapException.Code%2A> 通过调用方法来检查该属性是否为错误代码之一 <xref:System.Web.Services.Protocols.SoapException.IsVersionMismatchFaultCode%2A> 。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
