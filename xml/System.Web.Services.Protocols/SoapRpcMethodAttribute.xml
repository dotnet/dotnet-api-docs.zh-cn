<Type Name="SoapRpcMethodAttribute" FullName="System.Web.Services.Protocols.SoapRpcMethodAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="b6e506650659d3e94dccabd453d8bf72ede5da79" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86842624" /></Metadata><TypeSignature Language="C#" Value="public sealed class SoapRpcMethodAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SoapRpcMethodAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Web.Services.Protocols.SoapRpcMethodAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SoapRpcMethodAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class SoapRpcMethodAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type SoapRpcMethodAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Services</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName Language="C#">[System.AttributeUsage(System.AttributeTargets.Method)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.AttributeUsage(System.AttributeTargets.Method)&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName Language="C#">[System.AttributeUsage(System.AttributeTargets.Method, Inherited=true)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.AttributeUsage(System.AttributeTargets.Method, Inherited=true)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>指定发送至和源自该方法的 SOAP 消息使用 <see langword="RPC" /> 格式设置。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Web 服务描述语言 (WSDL) 为如何在 SOAP 消息中设置 XML Web service 方法或操作的格式定义两种样式： `RPC` 和 `Document` 。 `RPC` 格式设置是指根据用于 RPC 的 soap 规范对操作进行格式设置;其他称为 SOAP 规范的第7部分。 `RPC` 格式设置表明，所有参数都封装在 XML Web service 方法后面的一个名为的 XML 元素中，并且该 XML 元素中的每个 XML 元素都表示一个名为的参数，该元素以它所表示的参数命名。  
  
 在和样式中格式化的 SOAP 消息 `RPC` `Document` 可用于与远程过程调用中的 XML WEB SERVICE (RPC) 方式进行通信; 但是， `Document` 也可以轻松地使用该样式以松散耦合的方式进行通信。 因此， `Document` 建议使用样式 XML Web services。 有关更多详细信息，请参阅 `Customizing SOAP Messages` 主题。  
  
 有关更多详细信息，请参阅 [自定义 SOAP 消息格式](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/dkwy2d72(v=vs.100))。  
  
 此特性可应用于服务器上的 XML Web service 方法和客户端上的代理类。 <xref:System.Web.Services.Protocols.SoapRpcMethodAttribute.OneWay%2A>将属性设置为不能访问其的 XML Web service 方法 `true` <xref:System.Web.HttpContext> 。 同样，访问类的任何属性都将 <xref:System.Web.Services.WebService> 返回 `null` 。  
  
   
  
## Examples  
 下面的代码示例将 XML Web service 方法的消息样式设置为 `Rpc` `GetUserName` 。  
  
 [!code-aspx-csharp[SoapRpcMethodAttribute#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapRpcMethodAttribute/CS/sourcecs.asmx)]
 [!code-aspx-vb[SoapRpcMethodAttribute#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapRpcMethodAttribute/VB/sourcevb.asmx)]
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Services.Protocols.SoapDocumentMethodAttribute" />
    <altmember cref="T:System.Web.Services.Protocols.SoapRpcServiceAttribute" />
    <altmember cref="T:System.Web.Services.Protocols.SoapDocumentServiceAttribute" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>初始化 <see cref="T:System.Web.Services.Protocols.SoapRpcMethodAttribute" /> 类的新实例。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SoapRpcMethodAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.SoapRpcMethodAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SoapRpcMethodAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Web.Services.Protocols.SoapRpcMethodAttribute" /> 类的新实例，将所有属性都设置为其默认值。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SoapRpcMethodAttribute (string action);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string action) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.SoapRpcMethodAttribute.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (action As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SoapRpcMethodAttribute(System::String ^ action);" />
      <MemberSignature Language="F#" Value="new System.Web.Services.Protocols.SoapRpcMethodAttribute : string -&gt; System.Web.Services.Protocols.SoapRpcMethodAttribute" Usage="new System.Web.Services.Protocols.SoapRpcMethodAttribute action" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="action" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="action">SOAP 请求的目标。 设置 <see cref="P:System.Web.Services.Protocols.SoapRpcMethodAttribute.Action" /> 属性。</param>
        <summary>初始化 <see cref="T:System.Web.Services.Protocols.SoapRpcMethodAttribute" /> 类的新实例，并将 <see cref="P:System.Web.Services.Protocols.SoapRpcMethodAttribute.Action" /> 属性设置为 <paramref name="action" /> 参数的值。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Action">
      <MemberSignature Language="C#" Value="public string Action { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Action" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.SoapRpcMethodAttribute.Action" />
      <MemberSignature Language="VB.NET" Value="Public Property Action As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Action { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Action : string with get, set" Usage="System.Web.Services.Protocols.SoapRpcMethodAttribute.Action" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置 SOAP 请求的 <see langword="SOAPAction" />HTTP 标头字段。</summary>
        <value>SOAP 请求的 <see langword="SOAPAction" />HTTP 标头字段。 默认值为 <c>http://tempuri.org/MethodName</c> ，其中方法名称是 XML Web service 方法的名称。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 通常， <xref:System.Web.Services.Protocols.SoapRpcMethodAttribute.Action%2A> 属性是一个 URI，用于指示 SOAP 请求的意图。 不过，SOAP 规范不会限制格式，也不会对 URI 是否引用现有文档。 Web 服务器（如防火墙）可以使用该属性的状态和内容来 <xref:System.Web.Services.Protocols.SoapRpcMethodAttribute.Action%2A> 适当筛选 HTTP 中的 SOAP 请求消息。  
  
 默认情况下，.NET Framework 版本1.1 将 <xref:System.Web.Services.Protocols.SoapRpcMethodAttribute.Action%2A> 在 `soapAction` `soap:operation` 为 XML WEB SERVICE 生成的 WSDL 文档中的每个受支持的 SOAP 绑定的元素的属性中发布属性。 支持的 SOAP 绑定是 SOAP 1.1。  
  
 有关详细信息，请参阅 W3C 网站上的 [SOAP](https://www.w3.org/TR/soap/) 规范。
  
   
  
## Examples  
 下面的代码示例将 <xref:System.Web.Services.Protocols.SoapRpcMethodAttribute.Action%2A> 属性设置为 `http://www.contoso.com/Sample` 。  
  
 [!code-aspx-csharp[SoapRpcMethodAttribute.Action#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapRpcMethodAttribute.Action/CS/sourcecs.asmx)]
 [!code-aspx-vb[SoapRpcMethodAttribute.Action#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapRpcMethodAttribute.Action/VB/sourcevb.asmx)]
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Binding">
      <MemberSignature Language="C#" Value="public string Binding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Binding" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.SoapRpcMethodAttribute.Binding" />
      <MemberSignature Language="VB.NET" Value="Public Property Binding As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Binding { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Binding : string with get, set" Usage="System.Web.Services.Protocols.SoapRpcMethodAttribute.Binding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置 XML Web services 方法为其实现操作的绑定。</summary>
        <value>XML Web services 方法为其实现操作的绑定。 默认为追加了“Soap”的 XML Web services 名称。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 由 Web 服务描述语言 (WSDL) 定义的绑定类似于接口，因为它定义一组具体的操作。 对于 ASP.NET，每个 XML Web service 方法都是绑定中的一个操作。 XML Web service 方法是在应用到 XML Web service 的中指定的 XML Web service 或绑定的默认绑定的成员 <xref:System.Web.Services.WebServiceBindingAttribute> 。 如果将多个属性应用于一个 XML Web service，则 XML Web service 可以实现多个绑定 <xref:System.Web.Services.WebServiceBindingAttribute> 。  
  
 将一个或多个 <xref:System.Web.Services.WebServiceBindingAttribute> 特性应用到 XML Web service 后， <xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute> 或 <xref:System.Web.Services.Protocols.SoapRpcMethodAttribute> 可应用于单个 XML Web service 方法以指示特定 XML Web service 方法实现的绑定操作。 设置 <xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute.Binding%2A> 或的属性 <xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute> <xref:System.Web.Services.Protocols.SoapRpcMethodAttribute> ，以指定 XML Web service 方法为其实现操作的绑定。 只有一个 <xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute> 或 <xref:System.Web.Services.Protocols.SoapRpcMethodAttribute> 可应用于 XML Web service 方法。 因此，XML Web service 方法只能实现一个绑定的操作。  
  
   
  
## Examples  
 下面的代码示例演示如何在 XML Web service 中实现多个绑定。  
  
 [!code-aspx-csharp[SoapRpcMethodAttribute.Binding#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapRpcMethodAttribute.Binding/CS/bindingcs.asmx)]
 [!code-aspx-vb[SoapRpcMethodAttribute.Binding#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapRpcMethodAttribute.Binding/VB/bindingvb.asmx)]
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Services.WebServiceBindingAttribute" />
      </Docs>
    </Member>
    <Member MemberName="OneWay">
      <MemberSignature Language="C#" Value="public bool OneWay { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool OneWay" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.SoapRpcMethodAttribute.OneWay" />
      <MemberSignature Language="VB.NET" Value="Public Property OneWay As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool OneWay { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.OneWay : bool with get, set" Usage="System.Web.Services.Protocols.SoapRpcMethodAttribute.OneWay" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置 XML Web services 客户端是否等待 Web 服务器完成对 XML Web services 方法的处理。</summary>
        <value>如果 XML Web services 客户端不等待 Web 服务器完成对 XML Web services 方法的处理，则为 <see langword="true" />；否则为 <see langword="false" />。 默认值为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 当 XML Web service 方法的 <xref:System.Web.Services.Protocols.SoapRpcMethodAttribute.OneWay%2A> 属性设置为时 `true` ，XML Web service 客户端不必等待 Web 服务器完成处理 XML Web service 方法。 一旦 Web 服务器对进行反序列化 <xref:System.Web.Services.Protocols.SoapServerMessage> ，但在调用 XML Web service 方法之前，服务器将返回 HTTP 202 状态代码。 HTTP 202 状态代码向客户端指示 Web 服务器已经开始处理消息。 因此，XML Web service 客户端不会收到 Web 服务器成功处理该消息的确认。  
  
 单向方法不能有返回值或任何 `out` 参数。  
  
 如果使用的是 .NET Framework 版本 1.0 XML Web service 方法，这些方法应用了 <xref:System.Web.Services.Protocols.SoapRpcMethodAttribute> 或 <xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute> 特性，并将 <xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute.OneWay%2A> 属性设置为，则 `true` 不允许 <xref:System.Web.HttpContext> 使用静态 <xref:System.Web.HttpContext.Current%2A> 属性访问这些方法。 若要访问 <xref:System.Web.HttpContext> ，请派生类实现 XML Web service 方法， <xref:System.Web.Services.WebService> 并访问 <xref:System.Web.Services.WebService.Context%2A> 属性。  
  
   
  
## Examples  
 下面的代码示例将 <xref:System.Web.Services.Protocols.SoapRpcMethodAttribute.OneWay%2A> 属性设置为 `true` 。  
  
 [!code-aspx-csharp[SoapRpcMethodAttribute.OneWay#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapRpcMethodAttribute.OneWay/CS/sourcecs.asmx)]
 [!code-aspx-vb[SoapRpcMethodAttribute.OneWay#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapRpcMethodAttribute.OneWay/VB/sourcevb.asmx)]
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequestElementName">
      <MemberSignature Language="C#" Value="public string RequestElementName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RequestElementName" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.SoapRpcMethodAttribute.RequestElementName" />
      <MemberSignature Language="VB.NET" Value="Public Property RequestElementName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ RequestElementName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.RequestElementName : string with get, set" Usage="System.Web.Services.Protocols.SoapRpcMethodAttribute.RequestElementName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置与 XML Web services 方法的 SOAP 请求关联的 XML 元素。</summary>
        <value>与 XML Web services 方法的 SOAP 请求关联的 XML 元素。 默认值是 XML Web services 方法的名称。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此属性已过时。 它不会影响任何行为。  
  
   
  
## Examples  
 下面的代码示例将 <xref:System.Web.Services.Protocols.SoapRpcMethodAttribute.RequestElementName%2A> 属性设置为 `MyCustomRequestElement` 。  
  
 [!code-aspx-csharp[SoapRpcMethodAttribute.RequestNamespace#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapRpcMethodAttribute.RequestNamespace/CS/examplecs.asmx)]
 [!code-aspx-vb[SoapRpcMethodAttribute.RequestNamespace#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapRpcMethodAttribute.RequestNamespace/VB/examplevb.asmx)]
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequestNamespace">
      <MemberSignature Language="C#" Value="public string RequestNamespace { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RequestNamespace" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.SoapRpcMethodAttribute.RequestNamespace" />
      <MemberSignature Language="VB.NET" Value="Public Property RequestNamespace As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ RequestNamespace { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.RequestNamespace : string with get, set" Usage="System.Web.Services.Protocols.SoapRpcMethodAttribute.RequestNamespace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置与 XML Web services 方法的 SOAP 请求关联的 XML 命名空间。</summary>
        <value>与 XML Web services 方法的 SOAP 请求关联的 XML 命名空间。 默认值为 http://tempuri.org/。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码示例将 <xref:System.Web.Services.Protocols.SoapRpcMethodAttribute.RequestNamespace%2A> 属性设置为 `http://www.contoso.com` 。  
  
 [!code-aspx-csharp[SoapRpcMethodAttribute.RequestNamespace#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapRpcMethodAttribute.RequestNamespace/CS/examplecs.asmx)]
 [!code-aspx-vb[SoapRpcMethodAttribute.RequestNamespace#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapRpcMethodAttribute.RequestNamespace/VB/examplevb.asmx)]
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResponseElementName">
      <MemberSignature Language="C#" Value="public string ResponseElementName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ResponseElementName" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.SoapRpcMethodAttribute.ResponseElementName" />
      <MemberSignature Language="VB.NET" Value="Public Property ResponseElementName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ResponseElementName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ResponseElementName : string with get, set" Usage="System.Web.Services.Protocols.SoapRpcMethodAttribute.ResponseElementName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置与 XML Web services 方法的 SOAP 响应关联的 XML 元素。</summary>
        <value>与 XML Web services 方法的 SOAP 请求关联的 XML 元素。 默认值为 <c>WebServiceNameResult</c>，其中 <c>WebServiceName</c> 是 XML Web service 方法的名称。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Services.Protocols.SoapRpcMethodAttribute.ResponseElementName%2A>属性定义用于封装 SOAP 响应的元素中的参数的 XML 元素 `Body` 。  
  
   
  
## Examples  
 下面的代码示例将 <xref:System.Web.Services.Protocols.SoapRpcMethodAttribute.ResponseElementName%2A> 属性设置为 `MyCustomResponseElement` 。  
  
 [!code-aspx-csharp[SoapRpcMethodAttribute.ResponseNamespace#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapRpcMethodAttribute.ResponseNamespace/CS/examplecs.asmx)]
 [!code-aspx-vb[SoapRpcMethodAttribute.ResponseNamespace#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapRpcMethodAttribute.ResponseNamespace/VB/examplevb.asmx)]
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResponseNamespace">
      <MemberSignature Language="C#" Value="public string ResponseNamespace { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ResponseNamespace" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.SoapRpcMethodAttribute.ResponseNamespace" />
      <MemberSignature Language="VB.NET" Value="Public Property ResponseNamespace As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ResponseNamespace { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ResponseNamespace : string with get, set" Usage="System.Web.Services.Protocols.SoapRpcMethodAttribute.ResponseNamespace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置与 XML Web services 方法的 SOAP 响应关联的 XML 命名空间。</summary>
        <value>与 XML Web services 方法的 SOAP 响应关联的 XML 命名空间。 默认值为 http://tempuri.org/。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Services.Protocols.SoapRpcMethodAttribute.ResponseNamespace%2A>属性在其服务说明中的 XML Web service 方法的 XSD 架构中使用。  
  
   
  
## Examples  
 下面的代码示例将 <xref:System.Web.Services.Protocols.SoapRpcMethodAttribute.ResponseNamespace%2A> 属性设置为 `http://www.contoso.com` 。  
  
 [!code-aspx-csharp[SoapRpcMethodAttribute.ResponseNamespace#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapRpcMethodAttribute.ResponseNamespace/CS/examplecs.asmx)]
 [!code-aspx-vb[SoapRpcMethodAttribute.ResponseNamespace#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapRpcMethodAttribute.ResponseNamespace/VB/examplevb.asmx)]
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Use">
      <MemberSignature Language="C#" Value="public System.Web.Services.Description.SoapBindingUse Use { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.Services.Description.SoapBindingUse Use" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.SoapRpcMethodAttribute.Use" />
      <MemberSignature Language="VB.NET" Value="Public Property Use As SoapBindingUse" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::Services::Description::SoapBindingUse Use { System::Web::Services::Description::SoapBindingUse get(); void set(System::Web::Services::Description::SoapBindingUse value); };" />
      <MemberSignature Language="F#" Value="member this.Use : System.Web.Services.Description.SoapBindingUse with get, set" Usage="System.Web.Services.Protocols.SoapRpcMethodAttribute.Use" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.Runtime.InteropServices.ComVisible(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.ComVisible(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.Services.Description.SoapBindingUse</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置在调用该方法时所使用的绑定。</summary>
        <value><see cref="T:System.Web.Services.Description.SoapBindingUse" /> 枚举的成员，指定在调用该方法时所使用的绑定。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此属性的默认值为 <xref:System.Web.Services.Description.SoapBindingUse.Default>。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
