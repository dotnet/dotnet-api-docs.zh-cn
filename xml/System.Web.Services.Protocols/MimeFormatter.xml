<Type Name="MimeFormatter" FullName="System.Web.Services.Protocols.MimeFormatter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="8bf2546c15836db0a8140825b5ba4d7ed218388f" /><Meta Name="ms.sourcegitcommit" Value="397961a0164281b579f68064c3bb66c071f374d9" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/14/2020" /><Meta Name="ms.locfileid" Value="78771113" /></Metadata><TypeSignature Language="C#" Value="public abstract class MimeFormatter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit MimeFormatter extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.Services.Protocols.MimeFormatter" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class MimeFormatter" />
  <TypeSignature Language="C++ CLI" Value="public ref class MimeFormatter abstract" />
  <TypeSignature Language="F#" Value="type MimeFormatter = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Services</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="8b6c1-101">为使用 HTTP 实现但不支持 SOAP 的 Web 服务和客户端提供所有读取器和编写器的抽象基类。</span><span class="sxs-lookup"><span data-stu-id="8b6c1-101">Provides an abstract base class for all readers and writers for Web services and clients implemented using HTTP but without SOAP.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b6c1-102">Web 服务编写器和读取器分别在参数或返回 Web 方法的对象和 HTTP 请求或响应流之间进行序列化和反序列化。</span><span class="sxs-lookup"><span data-stu-id="8b6c1-102">Web service writers and readers serialize and deserialize, respectively, between the parameter or return objects of Web methods and the HTTP request or response streams.</span></span> <span data-ttu-id="8b6c1-103"><xref:System.Web.Services.Protocols.MimeFormatter>类在客户端和服务端为读取器和编写器类建立通用接口和功能。</span><span class="sxs-lookup"><span data-stu-id="8b6c1-103">The <xref:System.Web.Services.Protocols.MimeFormatter> class establishes a common interface and functionality for reader and writer classes, in both client and service-side .</span></span>  
  
 <span data-ttu-id="8b6c1-104"><xref:System.Web.Services.Protocols.MimeFormatter>类支持通过 HTTP GET 和 HTTP POST 操作来实现 Web 服务的 .NET Framework 实现。</span><span class="sxs-lookup"><span data-stu-id="8b6c1-104">The <xref:System.Web.Services.Protocols.MimeFormatter> class supports the .NET Framework's implementations of Web services via the HTTP-GET and HTTP-POST operations.</span></span> <span data-ttu-id="8b6c1-105">在 HTTP 中，GET 操作请求参数以 HTTP 请求的统一资源定位器（URL）进行编码。</span><span class="sxs-lookup"><span data-stu-id="8b6c1-105">In HTTP-GET operations request parameters are encoded in the HTTP request's Uniform Resource Locator (URL).</span></span> <span data-ttu-id="8b6c1-106">在 HTTP POST 操作中，请求参数在 HTTP 请求正文中使用 HTML 格式进行编码。</span><span class="sxs-lookup"><span data-stu-id="8b6c1-106">In HTTP-POST operations, request parameters are encoded in the HTTP request body, as with an HTML form.</span></span> <span data-ttu-id="8b6c1-107">对于这两种实现，返回值将作为非 SOAP XML 文档出现在 HTTP 响应正文中。</span><span class="sxs-lookup"><span data-stu-id="8b6c1-107">With both implementations, the return value appears in the HTTP response body as a non-SOAP XML document.</span></span>  
  
 <span data-ttu-id="8b6c1-108">开发人员通常不需要直接使用 <xref:System.Web.Services.Protocols.MimeFormatter> 或其子类。</span><span class="sxs-lookup"><span data-stu-id="8b6c1-108">A developer typically does not need to directly use <xref:System.Web.Services.Protocols.MimeFormatter> or its descendant classes.</span></span> <span data-ttu-id="8b6c1-109">相反，当 Wsdl.exe 工具根据 HTTP GET 或 HTTP POST 实现生成客户端代理代码时，它会将应用于 <xref:System.Web.Services.Protocols.HttpMethodAttribute> 每个 Web 方法，并将属性的 <xref:System.Web.Services.Protocols.HttpMethodAttribute.ParameterFormatter%2A> 和属性设置 <xref:System.Web.Services.Protocols.HttpMethodAttribute.ReturnFormatter%2A> 为派生自类的适当类型 <xref:System.Web.Services.Protocols.MimeFormatter> 。</span><span class="sxs-lookup"><span data-stu-id="8b6c1-109">Instead, when the Wsdl.exe tool generates client proxy code according to the HTTP-GET or HTTP-POST implementations, it applies the <xref:System.Web.Services.Protocols.HttpMethodAttribute> to each Web method and sets the attribute's <xref:System.Web.Services.Protocols.HttpMethodAttribute.ParameterFormatter%2A> and <xref:System.Web.Services.Protocols.HttpMethodAttribute.ReturnFormatter%2A> properties to the appropriate type derived from the <xref:System.Web.Services.Protocols.MimeFormatter> class.</span></span> <span data-ttu-id="8b6c1-110">在服务器上，将根据 ASP.NET 配置文件（Web.config）中的设置使用适当的派生类型。</span><span class="sxs-lookup"><span data-stu-id="8b6c1-110">On the server, the appropriate derived types are used according to settings in an ASP.NET configuration file (Web.config).</span></span> <span data-ttu-id="8b6c1-111">在客户端上，根据 WSDL 确定适当的派生类型。</span><span class="sxs-lookup"><span data-stu-id="8b6c1-111">On the client the appropriate derived types are determined from the WSDL.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Services.Protocols.HttpMethodAttribute" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MimeFormatter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.MimeFormatter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; MimeFormatter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8b6c1-112">初始化 <see cref="T:System.Web.Services.Protocols.MimeFormatter" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="8b6c1-112">Initializes a new instance of the <see cref="T:System.Web.Services.Protocols.MimeFormatter" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public static System.Web.Services.Protocols.MimeFormatter CreateInstance (Type type, object initializer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Services.Protocols.MimeFormatter CreateInstance(class System.Type type, object initializer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.MimeFormatter.CreateInstance(System.Type,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateInstance (type As Type, initializer As Object) As MimeFormatter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Services::Protocols::MimeFormatter ^ CreateInstance(Type ^ type, System::Object ^ initializer);" />
      <MemberSignature Language="F#" Value="static member CreateInstance : Type * obj -&gt; System.Web.Services.Protocols.MimeFormatter" Usage="System.Web.Services.Protocols.MimeFormatter.CreateInstance (type, initializer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Services.Protocols.MimeFormatter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="initializer" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="8b6c1-113">要创建其实例的派生自 <see cref="T:System.Web.Services.Protocols.MimeFormatter" /> 的类型。</span><span class="sxs-lookup"><span data-stu-id="8b6c1-113">The Type, derived from <see cref="T:System.Web.Services.Protocols.MimeFormatter" />, of which to create an instance.</span></span></param>
        <param name="initializer"><span data-ttu-id="8b6c1-114">用于初始化早期通过派生类的 <see cref="M:System.Web.Services.Protocols.MimeFormatter.GetInitializer(System.Web.Services.Protocols.LogicalMethodInfo)" /> 方法的实现获取的实例的对象。</span><span class="sxs-lookup"><span data-stu-id="8b6c1-114">An object used to initialize the instance obtained earlier through the derived class's implementation of the <see cref="M:System.Web.Services.Protocols.MimeFormatter.GetInitializer(System.Web.Services.Protocols.LogicalMethodInfo)" /> method.</span></span></param>
        <summary><span data-ttu-id="8b6c1-115">创建和初始化从 <see cref="T:System.Web.Services.Protocols.MimeFormatter" /> 派生的具体类的实例。</span><span class="sxs-lookup"><span data-stu-id="8b6c1-115">Creates and initializes an instance of a concrete class derived from <see cref="T:System.Web.Services.Protocols.MimeFormatter" />.</span></span></summary>
        <returns><span data-ttu-id="8b6c1-116"><see cref="T:System.Web.Services.Protocols.MimeFormatter" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="8b6c1-116">A <see cref="T:System.Web.Services.Protocols.MimeFormatter" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b6c1-117"><xref:System.Web.Services.Protocols.MimeFormatter.CreateInstance%2A>方法创建派生类的实例并调用该抽象方法的派生类的实现 <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> 。</span><span class="sxs-lookup"><span data-stu-id="8b6c1-117">The <xref:System.Web.Services.Protocols.MimeFormatter.CreateInstance%2A> method creates an instance of the derived class and invokes the derived class's implementation of the abstract <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> method.</span></span> <span data-ttu-id="8b6c1-118">在 <xref:System.Web.Services.Protocols.MimeFormatter.CreateInstance%2A> 处理请求或响应时调用方法。</span><span class="sxs-lookup"><span data-stu-id="8b6c1-118">The <xref:System.Web.Services.Protocols.MimeFormatter.CreateInstance%2A> method is invoked at the time a request or response is processed.</span></span>  
  
 <span data-ttu-id="8b6c1-119">初始值设定项是作为参数传递给方法的对象 <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> 。</span><span class="sxs-lookup"><span data-stu-id="8b6c1-119">An initializer is an object passed as a parameter to the <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> method.</span></span> <span data-ttu-id="8b6c1-120">将初始值设定项作为参数传递给 <xref:System.Web.Services.Protocols.MimeFormatter.CreateInstance%2A> 方法是从派生类的另一个实例获取的，方法是 <xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A> 在客户端或服务初始化过程中调用方法。</span><span class="sxs-lookup"><span data-stu-id="8b6c1-120">The initializer passed as a parameter to the <xref:System.Web.Services.Protocols.MimeFormatter.CreateInstance%2A> method is obtained from another instance of the derived class, by invoking the <xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A> method during client or service initialization.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetInitializer">
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8b6c1-121">在派生类中重写时，返回指定方法的初始值设定项。</span><span class="sxs-lookup"><span data-stu-id="8b6c1-121">When overridden in a derived class, returns an initializer for the specified method.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetInitializer">
      <MemberSignature Language="C#" Value="public abstract object GetInitializer (System.Web.Services.Protocols.LogicalMethodInfo methodInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetInitializer(class System.Web.Services.Protocols.LogicalMethodInfo methodInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.MimeFormatter.GetInitializer(System.Web.Services.Protocols.LogicalMethodInfo)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetInitializer (methodInfo As LogicalMethodInfo) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Object ^ GetInitializer(System::Web::Services::Protocols::LogicalMethodInfo ^ methodInfo);" />
      <MemberSignature Language="F#" Value="abstract member GetInitializer : System.Web.Services.Protocols.LogicalMethodInfo -&gt; obj" Usage="mimeFormatter.GetInitializer methodInfo" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="methodInfo" Type="System.Web.Services.Protocols.LogicalMethodInfo" />
      </Parameters>
      <Docs>
        <param name="methodInfo"><span data-ttu-id="8b6c1-122"><see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" />，指定为其获取初始值设定项的 Web 方法。</span><span class="sxs-lookup"><span data-stu-id="8b6c1-122">A <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" /> that specifies the Web method for which the initializer is obtained.</span></span></param>
        <summary><span data-ttu-id="8b6c1-123">在派生类中重写时，返回指定方法的初始值设定项。</span><span class="sxs-lookup"><span data-stu-id="8b6c1-123">When overridden in a derived class, returns an initializer for the specified method.</span></span></summary>
        <returns><span data-ttu-id="8b6c1-124">包含指定方法的初始值设定项的 <see cref="T:System.Object" />。</span><span class="sxs-lookup"><span data-stu-id="8b6c1-124">An <see cref="T:System.Object" /> that contains the initializer for the specified method.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b6c1-125">初始值设定项是作为参数传递给方法的对象 <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> 。</span><span class="sxs-lookup"><span data-stu-id="8b6c1-125">An initializer is an object passed as a parameter to the <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> method.</span></span>  
  
 <span data-ttu-id="8b6c1-126">实例方法的派生类实现 <xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A> 在客户端或服务初始化过程中调用。</span><span class="sxs-lookup"><span data-stu-id="8b6c1-126">A derived class's implementation of the <xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A> instance method is invoked during client or service initialization.</span></span> <span data-ttu-id="8b6c1-127">稍后，在处理请求或响应时，初始值设定项对象将被传递给静态 <xref:System.Web.Services.Protocols.MimeFormatter.CreateInstance%2A> 方法，该方法将创建派生类的另一个对象的实例，然后传递给 <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> 方法以对其进行初始化。</span><span class="sxs-lookup"><span data-stu-id="8b6c1-127">Later, at the time a request or response is processed, the initializer object is passed to the static <xref:System.Web.Services.Protocols.MimeFormatter.CreateInstance%2A> method, which creates an instance of another object of the derived class, and then to the <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> method to initialize it.</span></span> <span data-ttu-id="8b6c1-128">其他对象执行实际的读取或写入。</span><span class="sxs-lookup"><span data-stu-id="8b6c1-128">The other object performs the actual reading or writing.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInitializer">
      <MemberSignature Language="C#" Value="public static object GetInitializer (Type type, System.Web.Services.Protocols.LogicalMethodInfo methodInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetInitializer(class System.Type type, class System.Web.Services.Protocols.LogicalMethodInfo methodInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.MimeFormatter.GetInitializer(System.Type,System.Web.Services.Protocols.LogicalMethodInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetInitializer (type As Type, methodInfo As LogicalMethodInfo) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ GetInitializer(Type ^ type, System::Web::Services::Protocols::LogicalMethodInfo ^ methodInfo);" />
      <MemberSignature Language="F#" Value="static member GetInitializer : Type * System.Web.Services.Protocols.LogicalMethodInfo -&gt; obj" Usage="System.Web.Services.Protocols.MimeFormatter.GetInitializer (type, methodInfo)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="methodInfo" Type="System.Web.Services.Protocols.LogicalMethodInfo" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="8b6c1-129">为其获取初始值设定项的派生自 <see cref="T:System.Web.Services.Protocols.MimeFormatter" /> 的类型。</span><span class="sxs-lookup"><span data-stu-id="8b6c1-129">The Type, derived from <see cref="T:System.Web.Services.Protocols.MimeFormatter" />,- for which an initializer is obtained.</span></span></param>
        <param name="methodInfo"><span data-ttu-id="8b6c1-130"><see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" />，指定为其获取初始值设定项的 Web 方法。</span><span class="sxs-lookup"><span data-stu-id="8b6c1-130">A <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" /> that specifies the Web method for which the initializer is obtained.</span></span></param>
        <summary><span data-ttu-id="8b6c1-131">返回指定方法的初始值设定项。</span><span class="sxs-lookup"><span data-stu-id="8b6c1-131">Returns an initializer for the specified method.</span></span></summary>
        <returns><span data-ttu-id="8b6c1-132">一个 <see cref="T:System.Object" /> 对象，其中包含指定方法的初始值设定项。</span><span class="sxs-lookup"><span data-stu-id="8b6c1-132">A <see cref="T:System.Object" /> object that contains the initializer for the specified method.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b6c1-133">初始值设定项是作为参数传递给方法的对象 <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> 。</span><span class="sxs-lookup"><span data-stu-id="8b6c1-133">An initializer is an object passed as a parameter to the <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> method.</span></span>  
  
 <span data-ttu-id="8b6c1-134">静态 <xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A> 方法调用派生类的 <xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A> 方法，隐式创建派生类的实例。</span><span class="sxs-lookup"><span data-stu-id="8b6c1-134">The static <xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A> method invokes the derived class's <xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A> method, implicitly creating an instance of the derived class.</span></span> <span data-ttu-id="8b6c1-135">在处理请求或响应时，初始值设定项对象将传递给 <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> 派生类的另一个实例的方法。</span><span class="sxs-lookup"><span data-stu-id="8b6c1-135">At the time a request or response is processed, the initializer object is passed to the <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> method of another instance of the derived class.</span></span> <span data-ttu-id="8b6c1-136">后一对象执行实际的读取或写入。</span><span class="sxs-lookup"><span data-stu-id="8b6c1-136">The latter object performs the actual reading or writing.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetInitializers">
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8b6c1-137">在派生类中重写时，返回与方法定义的输入数组对应的初始值设定项对象的数组。</span><span class="sxs-lookup"><span data-stu-id="8b6c1-137">When overridden in a derived class, returns an array of initializer objects corresponding to an input array of method definitions.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetInitializers">
      <MemberSignature Language="C#" Value="public virtual object[] GetInitializers (System.Web.Services.Protocols.LogicalMethodInfo[] methodInfos);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object[] GetInitializers(class System.Web.Services.Protocols.LogicalMethodInfo[] methodInfos) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.MimeFormatter.GetInitializers(System.Web.Services.Protocols.LogicalMethodInfo[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetInitializers (methodInfos As LogicalMethodInfo()) As Object()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Object ^&gt; ^ GetInitializers(cli::array &lt;System::Web::Services::Protocols::LogicalMethodInfo ^&gt; ^ methodInfos);" />
      <MemberSignature Language="F#" Value="abstract member GetInitializers : System.Web.Services.Protocols.LogicalMethodInfo[] -&gt; obj[]&#xA;override this.GetInitializers : System.Web.Services.Protocols.LogicalMethodInfo[] -&gt; obj[]" Usage="mimeFormatter.GetInitializers methodInfos" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="methodInfos" Type="System.Web.Services.Protocols.LogicalMethodInfo[]" />
      </Parameters>
      <Docs>
        <param name="methodInfos"><span data-ttu-id="8b6c1-138">一个 Web 方法数组，对于每个方法，都将从该数组中获取一个对象，获取的对象与返回的初始值设定项数组中相应的索引对应。</span><span class="sxs-lookup"><span data-stu-id="8b6c1-138">An array of Web methods where, for each method, the object of the corresponding index in the returned initializer array is obtained.</span></span></param>
        <summary><span data-ttu-id="8b6c1-139">在派生类中重写时，返回与方法定义的输入数组对应的初始值设定项对象的数组。</span><span class="sxs-lookup"><span data-stu-id="8b6c1-139">When overridden in a derived class, returns an array of initializer objects corresponding to an input array of method definitions.</span></span></summary>
        <returns><span data-ttu-id="8b6c1-140">与方法定义的输入数组对应的初始值设定项对象的数组。</span><span class="sxs-lookup"><span data-stu-id="8b6c1-140">An array of initializer objects corresponding to the input array of method definitions.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b6c1-141">初始值设定项是作为参数传递给方法的对象 <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> 。</span><span class="sxs-lookup"><span data-stu-id="8b6c1-141">An initializer is an object passed as a parameter to the <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> method.</span></span>  
  
 <span data-ttu-id="8b6c1-142"><xref:System.Web.Services.Protocols.MimeFormatter.GetInitializers%2A>实例方法 <xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A> 为每个输入 Web 方法调用实例方法。</span><span class="sxs-lookup"><span data-stu-id="8b6c1-142">The <xref:System.Web.Services.Protocols.MimeFormatter.GetInitializers%2A> instance method invokes the <xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A> instance method for each input Web method.</span></span> <span data-ttu-id="8b6c1-143">这意味着已创建从派生的类的实例 <xref:System.Web.Services.Protocols.MimeFormatter> 。</span><span class="sxs-lookup"><span data-stu-id="8b6c1-143">This means an instance of a class derived from <xref:System.Web.Services.Protocols.MimeFormatter> has already been created.</span></span> <span data-ttu-id="8b6c1-144">在处理请求或响应时，初始值设定项将传递到 <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> 派生类的另一个实例的方法。</span><span class="sxs-lookup"><span data-stu-id="8b6c1-144">At the time a request or response is processed, the initializer is passed to the <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> method of another instance of the derived class.</span></span> <span data-ttu-id="8b6c1-145">后一对象执行实际的读取或写入。</span><span class="sxs-lookup"><span data-stu-id="8b6c1-145">The latter object performs the actual reading or writing.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInitializers">
      <MemberSignature Language="C#" Value="public static object[] GetInitializers (Type type, System.Web.Services.Protocols.LogicalMethodInfo[] methodInfos);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object[] GetInitializers(class System.Type type, class System.Web.Services.Protocols.LogicalMethodInfo[] methodInfos) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.MimeFormatter.GetInitializers(System.Type,System.Web.Services.Protocols.LogicalMethodInfo[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetInitializers (type As Type, methodInfos As LogicalMethodInfo()) As Object()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Object ^&gt; ^ GetInitializers(Type ^ type, cli::array &lt;System::Web::Services::Protocols::LogicalMethodInfo ^&gt; ^ methodInfos);" />
      <MemberSignature Language="F#" Value="static member GetInitializers : Type * System.Web.Services.Protocols.LogicalMethodInfo[] -&gt; obj[]" Usage="System.Web.Services.Protocols.MimeFormatter.GetInitializers (type, methodInfos)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="methodInfos" Type="System.Web.Services.Protocols.LogicalMethodInfo[]" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="8b6c1-146">为其获取初始值设定项的派生自 <see cref="T:System.Web.Services.Protocols.MimeFormatter" /> 的类型。</span><span class="sxs-lookup"><span data-stu-id="8b6c1-146">The Type, derived from <see cref="T:System.Web.Services.Protocols.MimeFormatter" />, for which initializers are obtained.</span></span></param>
        <param name="methodInfos"><span data-ttu-id="8b6c1-147"><see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" /> 类型的数组，指定为其获取初始值设定项的 Web 方法。</span><span class="sxs-lookup"><span data-stu-id="8b6c1-147">An array of type <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" /> that specifies the Web methods for which the initializers are obtained.</span></span></param>
        <summary><span data-ttu-id="8b6c1-148">返回与派生自 <see cref="T:System.Web.Services.Protocols.MimeFormatter" /> 的指定类的方法定义输入数组对应的初始值设定项对象的数组。</span><span class="sxs-lookup"><span data-stu-id="8b6c1-148">Returns an array of initializer objects corresponding to an input array of method definitions for a specified class derived from <see cref="T:System.Web.Services.Protocols.MimeFormatter" />.</span></span></summary>
        <returns><span data-ttu-id="8b6c1-149">与派生自 <see cref="T:System.Web.Services.Protocols.MimeFormatter" /> 的指定类的方法定义输入数组对应的初始值设定项对象的数组。</span><span class="sxs-lookup"><span data-stu-id="8b6c1-149">An array of initializer objects corresponding to the input array of method definitions for a specified class derived from <see cref="T:System.Web.Services.Protocols.MimeFormatter" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b6c1-150">初始值设定项是作为参数传递给方法的对象 <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> 。</span><span class="sxs-lookup"><span data-stu-id="8b6c1-150">An initializer is an object passed as a parameter to the <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> method.</span></span>  
  
 <span data-ttu-id="8b6c1-151">静态 <xref:System.Web.Services.Protocols.MimeFormatter.GetInitializers%2A> 方法导致调用 <xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A> 属于由参数指定的派生类的方法 `type` 。</span><span class="sxs-lookup"><span data-stu-id="8b6c1-151">The static <xref:System.Web.Services.Protocols.MimeFormatter.GetInitializers%2A> method causes the invocation of the <xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A> method belonging to the derived class specified by the `type` parameter.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public abstract void Initialize (object initializer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Initialize(object initializer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.MimeFormatter.Initialize(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Initialize (initializer As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Initialize(System::Object ^ initializer);" />
      <MemberSignature Language="F#" Value="abstract member Initialize : obj -&gt; unit" Usage="mimeFormatter.Initialize initializer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="initializer" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="initializer"><span data-ttu-id="8b6c1-152">适用于实现该方法的特定类的类型的对象。</span><span class="sxs-lookup"><span data-stu-id="8b6c1-152">An object of a type appropriate to the particular class that is implementing the method.</span></span></param>
        <summary><span data-ttu-id="8b6c1-153">在派生类中重写时，初始化一个实例。</span><span class="sxs-lookup"><span data-stu-id="8b6c1-153">When overridden in a derived class, initializes an instance.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b6c1-154"><xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A>方法是在处理请求或响应时调用的; 但是，在 <xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A> 客户端或服务初始化过程中，通过在另一个实例上调用方法获取初始值设定项。</span><span class="sxs-lookup"><span data-stu-id="8b6c1-154">The <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> method is invoked at the time a request or response is processed; however, the initializer is obtained by calling the <xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A> method on another instance during client or service initialization.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
