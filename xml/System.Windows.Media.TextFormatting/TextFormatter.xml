<Type Name="TextFormatter" FullName="System.Windows.Media.TextFormatting.TextFormatter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="0a1f694e54c915312be8d5705958c6481821c564" /><Meta Name="ms.sourcegitcommit" Value="b6b9d5f3f9c7eb43f14a8a1a68d044603cb8ed73" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="05/18/2020" /><Meta Name="ms.locfileid" Value="83517023" /></Metadata><TypeSignature Language="C#" Value="public abstract class TextFormatter : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit TextFormatter extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Media.TextFormatting.TextFormatter" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class TextFormatter&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class TextFormatter abstract : IDisposable" />
  <TypeSignature Language="F#" Value="type TextFormatter = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>使用自定义文本布局客户端提供用于为文本设置格式及断开文本行的服务。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Media.TextFormatting.TextFormatter> 是提供用于设置文本格式和断开文本线条的服务的 [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] 文本引擎。 <xref:System.Windows.Media.TextFormatting.TextFormatter> 可以处理不同的文本字符格式和段落样式，并提供对国际文本布局的支持。  
  
 与传统的文本 API 不同，<xref:System.Windows.Media.TextFormatting.TextFormatter> 通过一组回调方法与文本布局客户端进行交互。 它要求客户端在 <xref:System.Windows.Media.TextFormatting.TextSource> 类的实现中提供这些方法。 下图说明了文本格式化程序客户端和文本布局客户端的交互。  
  
 ![文本布局客户端和 TextFormatter 示意图](~/add/media/textformatter01.png "文本布局客户端和 TextFormatter 示意图")  
文本布局客户端与 System.windows.media.textformatting.textformatter> 对象之间的交互  
  
## <a name="text-formatting-services"></a>文本格式设置服务  
 <xref:System.Windows.Media.TextFormatting.TextFormatter> 提供对文本功能（如 OpenType 版式）的支持，以及对文本运行、线条和段落级别功能的支持。  
  
 下表是 <xref:System.Windows.Media.TextFormatting.TextFormatter> 支持的文本功能服务的密钥列表。  
  
|功能|说明|  
|-------------|-----------------|  
|背景画笔|用于背景色的 <xref:System.Windows.Media.Brush>。 请参阅 <xref:System.Windows.Media.TextFormatting.TextRunProperties.BackgroundBrush%2A> 属性。|  
|基线对齐|确定线条的基线距离。 请参阅 <xref:System.Windows.Media.TextFormatting.TextRunProperties.BaselineAlignment%2A> 属性。|  
|字体链接|通过使用复合字体提供字体链接。|  
|前景画笔|用于前景色的 <xref:System.Windows.Media.Brush>。 请参阅 <xref:System.Windows.Media.TextFormatting.TextRunProperties.ForegroundBrush%2A> 属性。|  
|OpenType|高级 OpenType 排字功能，如上下文备用字和标准连字。 请参阅 <xref:System.Windows.Media.TextFormatting.TextRunTypographyProperties> 类属性。|  
|字样|确定字样、粗细、样式和拉伸。 请参阅 <xref:System.Windows.Media.TextFormatting.TextRunProperties.Typeface%2A> 属性。|  
|文本修饰|提供对 <xref:System.Windows.TextDecoration> 对象（如下划线或删除线）的支持。 请参阅 <xref:System.Windows.Media.TextFormatting.TextRunProperties.TextDecorations%2A> 属性。|  
|文本效果|为 <xref:System.Windows.Media.TextEffect> 对象提供支持。 请参阅 <xref:System.Windows.Media.TextFormatting.TextRunProperties.TextEffects%2A> 属性。|  
  
 下表列出了 <xref:System.Windows.Media.TextFormatting.TextFormatter> 支持的段落级功能的服务的密钥列表。  
  
|功能|说明|  
|-------------|-----------------|  
|流方向|从左到右或从右到左的段落的流动方向。 请参阅 <xref:System.Windows.Media.TextFormatting.TextParagraphProperties.FlowDirection%2A> 属性。|  
|行缩进|段落中每行的缩进量。 请参阅 <xref:System.Windows.Media.TextFormatting.TextParagraphProperties.Indent%2A> 属性。|  
|标记|段落中第一行的标记特征。 请参阅 <xref:System.Windows.Media.TextFormatting.TextParagraphProperties.TextMarkerProperties%2A> 属性。|  
|段落缩进|段落中第一行的缩进量。 请参阅 <xref:System.Windows.Media.TextFormatting.TextParagraphProperties.ParagraphIndent%2A> 属性。|  
|选项卡|支持制表符对齐和制表符前导符。|  
|宽度|确定最小和最大段落宽度。 请参阅 <xref:System.Windows.Media.TextFormatting.TextFormatter.FormatMinMaxParagraphWidth%2A> 方法。|  
|“自动换行”|确定文本在到达流边缘时如何换行。 请参阅 <xref:System.Windows.Media.TextFormatting.TextParagraphProperties.TextWrapping%2A> 属性。|  
  
 下表列出了用于行级功能的支持服务 <xref:System.Windows.Media.TextFormatting.TextFormatter>。  
  
|功能|说明|  
|-------------|-----------------|  
|对齐|文本对齐方式（左对齐、右对齐、居中或两端对齐）。 请参阅 <xref:System.Windows.Media.TextFormatting.TextParagraphProperties.TextAlignment%2A> 属性。|  
|行高|线条的高度。 请参阅 <xref:System.Windows.Media.TextFormatting.TextLine.Height%2A> 属性。|  
|行折叠|支持行折叠。 请参阅 <xref:System.Windows.Media.TextFormatting.TextLine.Collapse%2A> 方法。|  
|黑盒度量|表示用于对设备字体字符进行布局的规格。 请参阅 <xref:System.Windows.Media.CharacterMetrics> 类。|  
|插入符号支持|插入点导航和编辑支持。 请参阅 <xref:System.Windows.Media.TextFormatting.TextLine> 字符命中属性，如 <xref:System.Windows.Media.TextFormatting.TextLine.GetNextCaretCharacterHit%2A> 和 <xref:System.Windows.Media.TextFormatting.TextLine.GetPreviousCaretCharacterHit%2A>。|  
  
 下表列出了 <xref:System.Windows.Media.TextFormatting.TextFormatter> 支持的文本运行级功能的服务的密钥列表。  
  
|功能|说明|  
|-------------|-----------------|  
|隐藏运行|不可见的字符范围。 请参阅 <xref:System.Windows.Media.TextFormatting.TextHidden> 对象。|  
|正在中断|行和段落中断。|  
  
   
  
## Examples  
 下面的示例演示如何使用 <xref:System.Windows.Media.TextFormatting.TextFormatter> 对象生成可显示为绘图对象的格式化文本行。  
  
 [!code-csharp[TextFormattingSnippets#TextFormattingSnippet1](~/samples/snippets/csharp/VS_Snippets_Wpf/TextFormattingSnippets/CSharp/Window1.xaml.cs#textformattingsnippet1)]
 [!code-vb[TextFormattingSnippets#TextFormattingSnippet1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextFormattingSnippets/visualbasic/window1.xaml.vb#textformattingsnippet1)]  
  
 ]]></format>
    </remarks>
    <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=159965">高级文本格式设置示例</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected TextFormatter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.TextFormatting.TextFormatter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; TextFormatter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Windows.Media.TextFormatting.TextFormatter" /> 类的新实例。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Create">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>创建 <see cref="T:System.Windows.Media.TextFormatting.TextFormatter" /> 类的新实例。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Windows.Media.TextFormatting.TextFormatter Create ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Media.TextFormatting.TextFormatter Create() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.TextFormatting.TextFormatter.Create" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create () As TextFormatter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Media::TextFormatting::TextFormatter ^ Create();" />
      <MemberSignature Language="F#" Value="static member Create : unit -&gt; System.Windows.Media.TextFormatting.TextFormatter" Usage="System.Windows.Media.TextFormatting.TextFormatter.Create " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.TextFormatting.TextFormatter</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>创建 <see cref="T:System.Windows.Media.TextFormatting.TextFormatter" /> 类的新实例。 这是一种静态方法。</summary>
        <returns><see cref="T:System.Windows.Media.TextFormatting.TextFormatter" /> 的新实例。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Windows.Media.TextFormatting.TextFormatter Create (System.Windows.Media.TextFormattingMode textFormattingMode);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Media.TextFormatting.TextFormatter Create(valuetype System.Windows.Media.TextFormattingMode textFormattingMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.TextFormatting.TextFormatter.Create(System.Windows.Media.TextFormattingMode)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (textFormattingMode As TextFormattingMode) As TextFormatter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Media::TextFormatting::TextFormatter ^ Create(System::Windows::Media::TextFormattingMode textFormattingMode);" />
      <MemberSignature Language="F#" Value="static member Create : System.Windows.Media.TextFormattingMode -&gt; System.Windows.Media.TextFormatting.TextFormatter" Usage="System.Windows.Media.TextFormatting.TextFormatter.Create textFormattingMode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.TextFormatting.TextFormatter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textFormattingMode" Type="System.Windows.Media.TextFormattingMode" Index="0" FrameworkAlternate="dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="textFormattingMode"><see cref="T:System.Windows.Media.TextFormattingMode" />，可指定 <see cref="T:System.Windows.Media.TextFormatting.TextFormatter" /> 的文本布局。</param>
        <summary>使用指定的格式设置模式创建 <see cref="T:System.Windows.Media.TextFormatting.TextFormatter" /> 类的新实例。 这是一种静态方法。</summary>
        <returns><see cref="T:System.Windows.Media.TextFormatting.TextFormatter" /> 的新实例。</returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Media.TextFormattingMode" />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public virtual void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.TextFormatting.TextFormatter.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="textFormatter.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>释放由 <see cref="T:System.Windows.Media.TextFormatting.TextFormatter" /> 对象使用的所有托管资源和非托管资源。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="FormatLine">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>创建一个 <see cref="T:System.Windows.Media.TextFormatting.TextLine" />，用来为文档内容设置格式并显示文档内容。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FormatLine">
      <MemberSignature Language="C#" Value="public abstract System.Windows.Media.TextFormatting.TextLine FormatLine (System.Windows.Media.TextFormatting.TextSource textSource, int firstCharIndex, double paragraphWidth, System.Windows.Media.TextFormatting.TextParagraphProperties paragraphProperties, System.Windows.Media.TextFormatting.TextLineBreak previousLineBreak);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Media.TextFormatting.TextLine FormatLine(class System.Windows.Media.TextFormatting.TextSource textSource, int32 firstCharIndex, float64 paragraphWidth, class System.Windows.Media.TextFormatting.TextParagraphProperties paragraphProperties, class System.Windows.Media.TextFormatting.TextLineBreak previousLineBreak) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.TextFormatting.TextFormatter.FormatLine(System.Windows.Media.TextFormatting.TextSource,System.Int32,System.Double,System.Windows.Media.TextFormatting.TextParagraphProperties,System.Windows.Media.TextFormatting.TextLineBreak)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function FormatLine (textSource As TextSource, firstCharIndex As Integer, paragraphWidth As Double, paragraphProperties As TextParagraphProperties, previousLineBreak As TextLineBreak) As TextLine" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Windows::Media::TextFormatting::TextLine ^ FormatLine(System::Windows::Media::TextFormatting::TextSource ^ textSource, int firstCharIndex, double paragraphWidth, System::Windows::Media::TextFormatting::TextParagraphProperties ^ paragraphProperties, System::Windows::Media::TextFormatting::TextLineBreak ^ previousLineBreak);" />
      <MemberSignature Language="F#" Value="abstract member FormatLine : System.Windows.Media.TextFormatting.TextSource * int * double * System.Windows.Media.TextFormatting.TextParagraphProperties * System.Windows.Media.TextFormatting.TextLineBreak -&gt; System.Windows.Media.TextFormatting.TextLine" Usage="textFormatter.FormatLine (textSource, firstCharIndex, paragraphWidth, paragraphProperties, previousLineBreak)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.TextFormatting.TextLine</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textSource" Type="System.Windows.Media.TextFormatting.TextSource" />
        <Parameter Name="firstCharIndex" Type="System.Int32" />
        <Parameter Name="paragraphWidth" Type="System.Double" />
        <Parameter Name="paragraphProperties" Type="System.Windows.Media.TextFormatting.TextParagraphProperties" />
        <Parameter Name="previousLineBreak" Type="System.Windows.Media.TextFormatting.TextLineBreak" />
      </Parameters>
      <Docs>
        <param name="textSource">一个 <see cref="T:System.Windows.Media.TextFormatting.TextSource" /> 值，表示行的文本源。</param>
        <param name="firstCharIndex">一个 <see cref="T:System.Int32" /> 值，指定行中起始字符的字符索引。</param>
        <param name="paragraphWidth">一个 <see cref="T:System.Double" /> 值，指定行所占据的段落宽度。</param>
        <param name="paragraphProperties">一个 <see cref="T:System.Windows.Media.TextFormatting.TextParagraphProperties" /> 值，表示流方向、对齐方式或缩进等段落属性。</param>
        <param name="previousLineBreak">一个 <see cref="T:System.Windows.Media.TextFormatting.TextLineBreak" /> 值，它根据文本格式设置进程断开段落中前一行的位置来指定文本格式化程序状态。</param>
        <summary>创建一个 <see cref="T:System.Windows.Media.TextFormatting.TextLine" />，用来为文档内容设置格式并显示文档内容。</summary>
        <returns>一个 <see cref="T:System.Windows.Media.TextFormatting.TextLine" /> 值，表示可显示的文本行。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的示例演示如何使用 <xref:System.Windows.Media.TextFormatting.TextFormatter.FormatLine%2A> 方法返回格式化的 <xref:System.Windows.Media.TextFormatting.TextLine>。  
  
 [!code-csharp[TextFormattingSnippets#TextFormattingSnippet2](~/samples/snippets/csharp/VS_Snippets_Wpf/TextFormattingSnippets/CSharp/Window1.xaml.cs#textformattingsnippet2)]
 [!code-vb[TextFormattingSnippets#TextFormattingSnippet2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextFormattingSnippets/visualbasic/window1.xaml.vb#textformattingsnippet2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FormatLine">
      <MemberSignature Language="C#" Value="public abstract System.Windows.Media.TextFormatting.TextLine FormatLine (System.Windows.Media.TextFormatting.TextSource textSource, int firstCharIndex, double paragraphWidth, System.Windows.Media.TextFormatting.TextParagraphProperties paragraphProperties, System.Windows.Media.TextFormatting.TextLineBreak previousLineBreak, System.Windows.Media.TextFormatting.TextRunCache textRunCache);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Media.TextFormatting.TextLine FormatLine(class System.Windows.Media.TextFormatting.TextSource textSource, int32 firstCharIndex, float64 paragraphWidth, class System.Windows.Media.TextFormatting.TextParagraphProperties paragraphProperties, class System.Windows.Media.TextFormatting.TextLineBreak previousLineBreak, class System.Windows.Media.TextFormatting.TextRunCache textRunCache) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.TextFormatting.TextFormatter.FormatLine(System.Windows.Media.TextFormatting.TextSource,System.Int32,System.Double,System.Windows.Media.TextFormatting.TextParagraphProperties,System.Windows.Media.TextFormatting.TextLineBreak,System.Windows.Media.TextFormatting.TextRunCache)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function FormatLine (textSource As TextSource, firstCharIndex As Integer, paragraphWidth As Double, paragraphProperties As TextParagraphProperties, previousLineBreak As TextLineBreak, textRunCache As TextRunCache) As TextLine" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Windows::Media::TextFormatting::TextLine ^ FormatLine(System::Windows::Media::TextFormatting::TextSource ^ textSource, int firstCharIndex, double paragraphWidth, System::Windows::Media::TextFormatting::TextParagraphProperties ^ paragraphProperties, System::Windows::Media::TextFormatting::TextLineBreak ^ previousLineBreak, System::Windows::Media::TextFormatting::TextRunCache ^ textRunCache);" />
      <MemberSignature Language="F#" Value="abstract member FormatLine : System.Windows.Media.TextFormatting.TextSource * int * double * System.Windows.Media.TextFormatting.TextParagraphProperties * System.Windows.Media.TextFormatting.TextLineBreak * System.Windows.Media.TextFormatting.TextRunCache -&gt; System.Windows.Media.TextFormatting.TextLine" Usage="textFormatter.FormatLine (textSource, firstCharIndex, paragraphWidth, paragraphProperties, previousLineBreak, textRunCache)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.TextFormatting.TextLine</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textSource" Type="System.Windows.Media.TextFormatting.TextSource" />
        <Parameter Name="firstCharIndex" Type="System.Int32" />
        <Parameter Name="paragraphWidth" Type="System.Double" />
        <Parameter Name="paragraphProperties" Type="System.Windows.Media.TextFormatting.TextParagraphProperties" />
        <Parameter Name="previousLineBreak" Type="System.Windows.Media.TextFormatting.TextLineBreak" />
        <Parameter Name="textRunCache" Type="System.Windows.Media.TextFormatting.TextRunCache" />
      </Parameters>
      <Docs>
        <param name="textSource">一个 <see cref="T:System.Windows.Media.TextFormatting.TextSource" /> 对象，表示行的文本源。</param>
        <param name="firstCharIndex">一个 <see cref="T:System.Int32" /> 值，指定行中起始字符的字符索引。</param>
        <param name="paragraphWidth">一个 <see cref="T:System.Double" /> 值，指定行所占据的段落宽度。</param>
        <param name="paragraphProperties">一个 <see cref="T:System.Windows.Media.TextFormatting.TextParagraphProperties" /> 对象，表示流方向、对齐方式或缩进等段落属性。</param>
        <param name="previousLineBreak">一个 <see cref="T:System.Windows.Media.TextFormatting.TextLineBreak" /> 对象，它根据文本格式设置进程断开段落中前一行的位置来指定文本格式化程序状态。</param>
        <param name="textRunCache">一个 <see cref="T:System.Windows.Media.TextFormatting.TextRunCache" /> 对象，表示文本布局的缓存机制。</param>
        <summary>创建一个 <see cref="T:System.Windows.Media.TextFormatting.TextLine" />，用来为文档内容设置格式并显示文档内容。</summary>
        <returns>一个 <see cref="T:System.Windows.Media.TextFormatting.TextLine" /> 值，表示可显示的文本行。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法用于提高应用程序的性能，在这些应用程序中，<xref:System.Windows.Media.TextFormatting.TextLine> 对性能有重大影响。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="FormatMinMaxParagraphWidth">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>返回一个值，该值表示可完全包含指定文本内容的最小和最大可能的段落宽度。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FormatMinMaxParagraphWidth">
      <MemberSignature Language="C#" Value="public abstract System.Windows.Media.TextFormatting.MinMaxParagraphWidth FormatMinMaxParagraphWidth (System.Windows.Media.TextFormatting.TextSource textSource, int firstCharIndex, System.Windows.Media.TextFormatting.TextParagraphProperties paragraphProperties);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Windows.Media.TextFormatting.MinMaxParagraphWidth FormatMinMaxParagraphWidth(class System.Windows.Media.TextFormatting.TextSource textSource, int32 firstCharIndex, class System.Windows.Media.TextFormatting.TextParagraphProperties paragraphProperties) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.TextFormatting.TextFormatter.FormatMinMaxParagraphWidth(System.Windows.Media.TextFormatting.TextSource,System.Int32,System.Windows.Media.TextFormatting.TextParagraphProperties)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function FormatMinMaxParagraphWidth (textSource As TextSource, firstCharIndex As Integer, paragraphProperties As TextParagraphProperties) As MinMaxParagraphWidth" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Windows::Media::TextFormatting::MinMaxParagraphWidth FormatMinMaxParagraphWidth(System::Windows::Media::TextFormatting::TextSource ^ textSource, int firstCharIndex, System::Windows::Media::TextFormatting::TextParagraphProperties ^ paragraphProperties);" />
      <MemberSignature Language="F#" Value="abstract member FormatMinMaxParagraphWidth : System.Windows.Media.TextFormatting.TextSource * int * System.Windows.Media.TextFormatting.TextParagraphProperties -&gt; System.Windows.Media.TextFormatting.MinMaxParagraphWidth" Usage="textFormatter.FormatMinMaxParagraphWidth (textSource, firstCharIndex, paragraphProperties)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.TextFormatting.MinMaxParagraphWidth</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textSource" Type="System.Windows.Media.TextFormatting.TextSource" />
        <Parameter Name="firstCharIndex" Type="System.Int32" />
        <Parameter Name="paragraphProperties" Type="System.Windows.Media.TextFormatting.TextParagraphProperties" />
      </Parameters>
      <Docs>
        <param name="textSource">一个 <see cref="T:System.Windows.Media.TextFormatting.TextSource" /> 对象，表示行的文本源。</param>
        <param name="firstCharIndex">一个 <see cref="T:System.Int32" /> 值，指定行中起始字符的字符索引。</param>
        <param name="paragraphProperties">一个 <see cref="T:System.Windows.Media.TextFormatting.TextParagraphProperties" /> 对象，表示流方向、对齐方式或缩进等段落属性。</param>
        <summary>返回一个值，该值表示可完全包含指定文本内容的最小和最大可能的段落宽度。</summary>
        <returns>一个 <see cref="T:System.Windows.Media.TextFormatting.MinMaxParagraphWidth" /> 值，表示可完全包含指定文本内容的最小和最大可能的段落宽度。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 以下文本为源文本使用最小段落宽度，其中显示为多个行。 最小段落宽度对应于具有最大宽度的单词（在本例中为 "跳过"）。 请注意，只要总宽度不超过最小段落宽度，多个单词就会出现在同一行上。  
  
 ![使用最小段落宽度的文本格式化程序](~/add/media/textformatter03.png "使用最小段落宽度的文本格式化程序")  
最小段落宽度  
  
   
  
## Examples  
 下面的示例演示如何使用 <xref:System.Windows.Media.TextFormatting.TextFormatter.FormatMinMaxParagraphWidth%2A> 方法为格式化文本行生成最小段落宽度。  
  
 [!code-csharp[TextFormattingSnippets#TextFormattingSnippet3](~/samples/snippets/csharp/VS_Snippets_Wpf/TextFormattingSnippets/CSharp/Window1.xaml.cs#textformattingsnippet3)]
 [!code-vb[TextFormattingSnippets#TextFormattingSnippet3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextFormattingSnippets/visualbasic/window1.xaml.vb#textformattingsnippet3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FormatMinMaxParagraphWidth">
      <MemberSignature Language="C#" Value="public abstract System.Windows.Media.TextFormatting.MinMaxParagraphWidth FormatMinMaxParagraphWidth (System.Windows.Media.TextFormatting.TextSource textSource, int firstCharIndex, System.Windows.Media.TextFormatting.TextParagraphProperties paragraphProperties, System.Windows.Media.TextFormatting.TextRunCache textRunCache);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Windows.Media.TextFormatting.MinMaxParagraphWidth FormatMinMaxParagraphWidth(class System.Windows.Media.TextFormatting.TextSource textSource, int32 firstCharIndex, class System.Windows.Media.TextFormatting.TextParagraphProperties paragraphProperties, class System.Windows.Media.TextFormatting.TextRunCache textRunCache) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.TextFormatting.TextFormatter.FormatMinMaxParagraphWidth(System.Windows.Media.TextFormatting.TextSource,System.Int32,System.Windows.Media.TextFormatting.TextParagraphProperties,System.Windows.Media.TextFormatting.TextRunCache)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function FormatMinMaxParagraphWidth (textSource As TextSource, firstCharIndex As Integer, paragraphProperties As TextParagraphProperties, textRunCache As TextRunCache) As MinMaxParagraphWidth" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Windows::Media::TextFormatting::MinMaxParagraphWidth FormatMinMaxParagraphWidth(System::Windows::Media::TextFormatting::TextSource ^ textSource, int firstCharIndex, System::Windows::Media::TextFormatting::TextParagraphProperties ^ paragraphProperties, System::Windows::Media::TextFormatting::TextRunCache ^ textRunCache);" />
      <MemberSignature Language="F#" Value="abstract member FormatMinMaxParagraphWidth : System.Windows.Media.TextFormatting.TextSource * int * System.Windows.Media.TextFormatting.TextParagraphProperties * System.Windows.Media.TextFormatting.TextRunCache -&gt; System.Windows.Media.TextFormatting.MinMaxParagraphWidth" Usage="textFormatter.FormatMinMaxParagraphWidth (textSource, firstCharIndex, paragraphProperties, textRunCache)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.TextFormatting.MinMaxParagraphWidth</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textSource" Type="System.Windows.Media.TextFormatting.TextSource" />
        <Parameter Name="firstCharIndex" Type="System.Int32" />
        <Parameter Name="paragraphProperties" Type="System.Windows.Media.TextFormatting.TextParagraphProperties" />
        <Parameter Name="textRunCache" Type="System.Windows.Media.TextFormatting.TextRunCache" />
      </Parameters>
      <Docs>
        <param name="textSource">一个 <see cref="T:System.Windows.Media.TextFormatting.TextSource" /> 对象，表示行的文本源。</param>
        <param name="firstCharIndex">一个 <see cref="T:System.Int32" /> 值，指定行中起始字符的字符索引。</param>
        <param name="paragraphProperties">一个 <see cref="T:System.Windows.Media.TextFormatting.TextParagraphProperties" /> 对象，表示流方向、对齐方式或缩进等段落属性。</param>
        <param name="textRunCache">一个 <see cref="T:System.Windows.Media.TextFormatting.TextRunCache" /> 对象，表示文本布局的缓存机制。</param>
        <summary>返回一个值，该值表示可完全包含指定文本内容的最小和最大可能的段落宽度。</summary>
        <returns>一个 <see cref="T:System.Windows.Media.TextFormatting.MinMaxParagraphWidth" /> 值，表示可完全包含指定文本内容的最小和最大可能的段落宽度。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
