<Namespace Name="System.Runtime.Remoting">
  <Metadata><Meta Name="ms.openlocfilehash" Value="4288a71c4e80a404b4638344a78801ac408b5913" /><Meta Name="ms.sourcegitcommit" Value="98adf68e9ecf7a9832b6f036ddac3996ac8836a1" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="10/26/2020" /><Meta Name="ms.locfileid" Value="92549498" /></Metadata><Docs>
    <summary><span data-ttu-id="b22de-101">提供允许开发人员创建和配置分布式应用程序的类和接口。</span><span class="sxs-lookup"><span data-stu-id="b22de-101">Provides classes and interfaces that allow developers to create and configure distributed applications.</span></span> <span data-ttu-id="b22de-102"><see cref="N:System.Runtime.Remoting" /> 命名空间更重要的一些类为 <see cref="T:System.Runtime.Remoting.RemotingConfiguration" /> 类、<see cref="T:System.Runtime.Remoting.RemotingServices" /> 类和 <see cref="T:System.Runtime.Remoting.ObjRef" /> 类。</span><span class="sxs-lookup"><span data-stu-id="b22de-102">Some of the more important classes of the <see cref="N:System.Runtime.Remoting" /> namespace are the <see cref="T:System.Runtime.Remoting.RemotingConfiguration" /> class, the <see cref="T:System.Runtime.Remoting.RemotingServices" /> class, and the <see cref="T:System.Runtime.Remoting.ObjRef" /> class.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="b22de-103"><xref:System.Runtime.Remoting.RemotingConfiguration>类包含用于与配置设置进行交互的静态方法。</span><span class="sxs-lookup"><span data-stu-id="b22de-103">The <xref:System.Runtime.Remoting.RemotingConfiguration> class contains static methods for interfacing with configuration settings.</span></span> <span data-ttu-id="b22de-104"><xref:System.Runtime.Remoting.RemotingConfiguration.Configure%2A?displayProperty=nameWithType>使用方法，开发人员可以通过使用 XML 格式的配置文件来配置远程处理基础结构。</span><span class="sxs-lookup"><span data-stu-id="b22de-104">The <xref:System.Runtime.Remoting.RemotingConfiguration.Configure%2A?displayProperty=nameWithType> method allows developers to configure the remoting infrastructure through the use of XML formatted configuration files.</span></span> <span data-ttu-id="b22de-105"><xref:System.Runtime.Remoting.RemotingConfiguration>类还包含若干方法，用于客户端和服务器端注册的服务器上的客户端和服务器端已激活对象。</span><span class="sxs-lookup"><span data-stu-id="b22de-105">The <xref:System.Runtime.Remoting.RemotingConfiguration> class also contains several methods for client-end and server-end registration of client and server activated objects that reside on the server.</span></span>

 <span data-ttu-id="b22de-106"><xref:System.Runtime.Remoting.RemotingServices>类提供了许多方法来帮助你使用和发布远程对象。</span><span class="sxs-lookup"><span data-stu-id="b22de-106">The <xref:System.Runtime.Remoting.RemotingServices> class provides a number of methods to help in using and publishing remoted objects.</span></span> <span data-ttu-id="b22de-107"><xref:System.Runtime.Remoting.RemotingServices.Marshal%2A?displayProperty=nameWithType>方法提供了一项功能，用于存储在类的实例中激活和与远程对象进行通信所需的所有相关信息， <xref:System.Runtime.Remoting.ObjRef> 以便以后序列化和传输到远程位置。</span><span class="sxs-lookup"><span data-stu-id="b22de-107">The <xref:System.Runtime.Remoting.RemotingServices.Marshal%2A?displayProperty=nameWithType> method provides the functionality for storing all the relevant information required to activate and communicate with a remote object in an instance of the <xref:System.Runtime.Remoting.ObjRef> class for later serialization and transmission to a remote location.</span></span> <span data-ttu-id="b22de-108"><xref:System.Runtime.Remoting.RemotingServices.Unmarshal%2A?displayProperty=nameWithType>方法会反转此过程，从而为应用程序可以使用的远程对象创建一个代理，而不考虑任何远程处理细分。</span><span class="sxs-lookup"><span data-stu-id="b22de-108">The <xref:System.Runtime.Remoting.RemotingServices.Unmarshal%2A?displayProperty=nameWithType> method reverses this process, creating a proxy for a remote object that can be used by an application without regard for any remoting subdivisions.</span></span>

 <span data-ttu-id="b22de-109"><xref:System.Runtime.Remoting.ObjRef>类包含激活远程对象并与之进行通信所需的所有相关信息。</span><span class="sxs-lookup"><span data-stu-id="b22de-109">The <xref:System.Runtime.Remoting.ObjRef> class holds all the relevant information required to activate and communicate with a remote object.</span></span> <span data-ttu-id="b22de-110">此类是对象的可序列化表示形式，它使用通道传输到远程位置，在该位置取消封送 (参阅 <xref:System.Runtime.Remoting.RemotingServices.Unmarshal%2A>) 并可用于创建远程对象的本地代理。</span><span class="sxs-lookup"><span data-stu-id="b22de-110">This class is a serializable representation of an object that is transmitted to a remote location using a channel, where it is unmarshaled (see <xref:System.Runtime.Remoting.RemotingServices.Unmarshal%2A>) and can be used to create a local proxy of the remoted object.</span></span>

> [!NOTE]
>  <span data-ttu-id="b22de-111"> (Mbr 的封送处理对象) 不会永久驻留在内存中。</span><span class="sxs-lookup"><span data-stu-id="b22de-111">Marshal-by-reference objects (MBRs) do not reside in memory forever.</span></span> <span data-ttu-id="b22de-112">相反，除非类型重写 <xref:System.MarshalByRefObject.InitializeLifetimeService%2A?displayProperty=nameWithType> 来控制其自身的生存期策略，否则，每个 MBR 在 .NET Framework 远程处理系统开始删除它并回收内存之前，将具有有限的生存期。</span><span class="sxs-lookup"><span data-stu-id="b22de-112">Instead, unless the type overrides <xref:System.MarshalByRefObject.InitializeLifetimeService%2A?displayProperty=nameWithType> to control its own lifetime policies, each MBR has a finite lifetime before the .NET Framework remoting system begins the process of deleting it and reclaiming the memory.</span></span> <span data-ttu-id="b22de-113">有关详细信息，请参阅 [生存期租约](/previous-versions/dotnet/netframework-4.0/23bk23zc(v=vs.100))。</span><span class="sxs-lookup"><span data-stu-id="b22de-113">For more information, see [Lifetime Leases](/previous-versions/dotnet/netframework-4.0/23bk23zc(v=vs.100)).</span></span>

 ]]></format>
    </remarks>
  </Docs>
</Namespace>
