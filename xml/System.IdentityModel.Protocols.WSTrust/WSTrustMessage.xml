<Type Name="WSTrustMessage" FullName="System.IdentityModel.Protocols.WSTrust.WSTrustMessage">
  <Metadata><Meta Name="ms.openlocfilehash" Value="f79fc485b4afb8689d01e479200ad9306afd8223" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89894997" /></Metadata><TypeSignature Language="C#" Value="public abstract class WSTrustMessage : System.IdentityModel.OpenObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit WSTrustMessage extends System.IdentityModel.OpenObject" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.Protocols.WSTrust.WSTrustMessage" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class WSTrustMessage&#xA;Inherits OpenObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class WSTrustMessage abstract : System::IdentityModel::OpenObject" />
  <TypeSignature Language="F#" Value="type WSTrustMessage = class&#xA;    inherit OpenObject" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.IdentityModel.OpenObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>RST 和 RSTR 的基类。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 有关此类表示的消息和元素的详细信息，请参阅适用于你的方案的 WS 信任规范的版本。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected WSTrustMessage ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; WSTrustMessage();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.IdentityModel.Protocols.WSTrust.WSTrustMessage" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 可扩展性的无参数构造函数。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowPostdating">
      <MemberSignature Language="C#" Value="public bool AllowPostdating { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowPostdating" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.AllowPostdating" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowPostdating As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowPostdating { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowPostdating : bool with get, set" Usage="System.IdentityModel.Protocols.WSTrust.WSTrustMessage.AllowPostdating" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置 wst:AllowPostdating 元素的内容。</summary>
        <value>如果返回的标记应允许填迟标记的请求，则为 <see langword="true" />；否则为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此可选元素指示返回的令牌应允许对远期令牌的请求。  
  
 此属性通常与令牌续订绑定一起使用。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AppliesTo">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Protocols.WSTrust.EndpointReference AppliesTo { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IdentityModel.Protocols.WSTrust.EndpointReference AppliesTo" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.AppliesTo" />
      <MemberSignature Language="VB.NET" Value="Public Property AppliesTo As EndpointReference" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IdentityModel::Protocols::WSTrust::EndpointReference ^ AppliesTo { System::IdentityModel::Protocols::WSTrust::EndpointReference ^ get(); void set(System::IdentityModel::Protocols::WSTrust::EndpointReference ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AppliesTo : System.IdentityModel.Protocols.WSTrust.EndpointReference with get, set" Usage="System.IdentityModel.Protocols.WSTrust.WSTrustMessage.AppliesTo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Protocols.WSTrust.EndpointReference</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置 wsp:AppliesTo 元素的内容。</summary>
        <value>表示所需的安全标志的终结点地址的 <see cref="T:System.ServiceModel.EndpointAddress" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此可选元素指定需要此安全令牌的终结点地址;例如，令牌应用到的服务。  
  
 Wst： TokenType 或 wst：必须在令牌请求消息中定义 AppliesTo。 如果同时指定两者，则优先使用 wst： AppliesTo 字段。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AuthenticationType">
      <MemberSignature Language="C#" Value="public string AuthenticationType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AuthenticationType" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.AuthenticationType" />
      <MemberSignature Language="VB.NET" Value="Public Property AuthenticationType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ AuthenticationType { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AuthenticationType : string with get, set" Usage="System.IdentityModel.Protocols.WSTrust.WSTrustMessage.AuthenticationType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置 wst:AuthenticationType 元素的内容。</summary>
        <value>一个字符串，它所包含的 URI 显示所希望的认证类型。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此可选元素指示所需的身份验证类型，指定为 URI。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BinaryExchange">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Protocols.WSTrust.BinaryExchange BinaryExchange { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IdentityModel.Protocols.WSTrust.BinaryExchange BinaryExchange" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.BinaryExchange" />
      <MemberSignature Language="VB.NET" Value="Public Property BinaryExchange As BinaryExchange" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IdentityModel::Protocols::WSTrust::BinaryExchange ^ BinaryExchange { System::IdentityModel::Protocols::WSTrust::BinaryExchange ^ get(); void set(System::IdentityModel::Protocols::WSTrust::BinaryExchange ^ value); };" />
      <MemberSignature Language="F#" Value="member this.BinaryExchange : System.IdentityModel.Protocols.WSTrust.BinaryExchange with get, set" Usage="System.IdentityModel.Protocols.WSTrust.WSTrustMessage.BinaryExchange" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Protocols.WSTrust.BinaryExchange</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置 wst:BinaryExchange 元素的内容。</summary>
        <value>包含进行交换的二进制数据的 <see cref="T:System.IdentityModel.Protocols.WSTrust.BinaryExchange" />。 这包括 ValueType 的内容和 EncodingType 属性和实际数据。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanonicalizationAlgorithm">
      <MemberSignature Language="C#" Value="public string CanonicalizationAlgorithm { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CanonicalizationAlgorithm" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.CanonicalizationAlgorithm" />
      <MemberSignature Language="VB.NET" Value="Public Property CanonicalizationAlgorithm As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CanonicalizationAlgorithm { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CanonicalizationAlgorithm : string with get, set" Usage="System.IdentityModel.Protocols.WSTrust.WSTrustMessage.CanonicalizationAlgorithm" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置 wst:CanonicalizationAlgorithm 元素的内容。</summary>
        <value>包含指示规范化算法的 URI 字符串。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Context">
      <MemberSignature Language="C#" Value="public string Context { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Context" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.Context" />
      <MemberSignature Language="VB.NET" Value="Public Property Context As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Context { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Context : string with get, set" Usage="System.IdentityModel.Protocols.WSTrust.WSTrustMessage.Context" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置 RST 或 RSTR 上 Context 属性的内容。</summary>
        <value>包含标识请求的上下文或响应消息的 URI 字符串。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 RST 元素上的可选上下文属性为请求指定标识符 (上下文) 。 与此请求相关的所有后续 RSTR 元素必须具有此属性。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EncryptionAlgorithm">
      <MemberSignature Language="C#" Value="public string EncryptionAlgorithm { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string EncryptionAlgorithm" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.EncryptionAlgorithm" />
      <MemberSignature Language="VB.NET" Value="Public Property EncryptionAlgorithm As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ EncryptionAlgorithm { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.EncryptionAlgorithm : string with get, set" Usage="System.IdentityModel.Protocols.WSTrust.WSTrustMessage.EncryptionAlgorithm" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置 wst:EncryptionAlgorithm 元素的内容。</summary>
        <value>包含指示加密算法的 URI 字符串。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此可选 URI 元素指示在返回的标记中使用的所需加密算法。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EncryptWith">
      <MemberSignature Language="C#" Value="public string EncryptWith { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string EncryptWith" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.EncryptWith" />
      <MemberSignature Language="VB.NET" Value="Public Property EncryptWith As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ EncryptWith { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.EncryptWith : string with get, set" Usage="System.IdentityModel.Protocols.WSTrust.WSTrustMessage.EncryptWith" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置 wst:EncryptWith 元素的内容。</summary>
        <value>一个包含 URI 的字符串，指示要与颁发的安全令牌一起使用的所需加密算法。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此可选 URI 元素指示要用于已颁发的安全令牌的所需加密算法。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">尝试将此属性设置为 <see langword="null" /> 或者空字符串。</exception>
      </Docs>
    </Member>
    <Member MemberName="Entropy">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Protocols.WSTrust.Entropy Entropy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IdentityModel.Protocols.WSTrust.Entropy Entropy" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.Entropy" />
      <MemberSignature Language="VB.NET" Value="Public Property Entropy As Entropy" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IdentityModel::Protocols::WSTrust::Entropy ^ Entropy { System::IdentityModel::Protocols::WSTrust::Entropy ^ get(); void set(System::IdentityModel::Protocols::WSTrust::Entropy ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Entropy : System.IdentityModel.Protocols.WSTrust.Entropy with get, set" Usage="System.IdentityModel.Protocols.WSTrust.WSTrustMessage.Entropy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Protocols.WSTrust.Entropy</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置 wst:Entropy 元素的内容。</summary>
        <value>一个 <see cref="T:System.IdentityModel.Protocols.WSTrust.Entropy" />，表示平均信息量元素的内容。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此可选元素允许请求程序指定要用于创建密钥的熵。 这通常用于令牌颁发请求消息中。 此元素的值应是 EncryptedKey 或 BinarySecret，具体取决于该键是否已加密。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KeySizeInBits">
      <MemberSignature Language="C#" Value="public int? KeySizeInBits { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;int32&gt; KeySizeInBits" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.KeySizeInBits" />
      <MemberSignature Language="VB.NET" Value="Public Property KeySizeInBits As Nullable(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Nullable&lt;int&gt; KeySizeInBits { Nullable&lt;int&gt; get(); void set(Nullable&lt;int&gt; value); };" />
      <MemberSignature Language="F#" Value="member this.KeySizeInBits : Nullable&lt;int&gt; with get, set" Usage="System.IdentityModel.Protocols.WSTrust.WSTrustMessage.KeySizeInBits" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置 RequestSecurityToken (RST) 消息内的 wst:KeySize 元素的内容。</summary>
        <value>密钥的大小（以位为单位）。</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">尝试将设置一个小于或等于零的值。</exception>
      </Docs>
    </Member>
    <Member MemberName="KeyType">
      <MemberSignature Language="C#" Value="public string KeyType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string KeyType" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.KeyType" />
      <MemberSignature Language="VB.NET" Value="Public Property KeyType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ KeyType { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.KeyType : string with get, set" Usage="System.IdentityModel.Protocols.WSTrust.WSTrustMessage.KeyType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置 RequestSecurityToken (RST) 消息内的 wst:KeyType 元素的内容。</summary>
        <value>一个包含 URI 的字符串，该 URI 标识所需的密钥类型。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此可选 URI 元素指示安全令牌中所需的密钥类型。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyWrapAlgorithm">
      <MemberSignature Language="C#" Value="public string KeyWrapAlgorithm { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string KeyWrapAlgorithm" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.KeyWrapAlgorithm" />
      <MemberSignature Language="VB.NET" Value="Public Property KeyWrapAlgorithm As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ KeyWrapAlgorithm { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.KeyWrapAlgorithm : string with get, set" Usage="System.IdentityModel.Protocols.WSTrust.WSTrustMessage.KeyWrapAlgorithm" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置 wst:KeyWrapAlgorithm 元素的内容。</summary>
        <value>字符串包含标识 Key Wrap 算法的 URI。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此可选 URI 指示在 STS 使用非对称密钥对信赖方的已颁发令牌进行加密时使用的所需算法。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Lifetime">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Protocols.WSTrust.Lifetime Lifetime { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IdentityModel.Protocols.WSTrust.Lifetime Lifetime" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.Lifetime" />
      <MemberSignature Language="VB.NET" Value="Public Property Lifetime As Lifetime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IdentityModel::Protocols::WSTrust::Lifetime ^ Lifetime { System::IdentityModel::Protocols::WSTrust::Lifetime ^ get(); void set(System::IdentityModel::Protocols::WSTrust::Lifetime ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Lifetime : System.IdentityModel.Protocols.WSTrust.Lifetime with get, set" Usage="System.IdentityModel.Protocols.WSTrust.WSTrustMessage.Lifetime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Protocols.WSTrust.Lifetime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置 RequestSecurityToken (RST) 消息内的 wst:Lifetime 元素的内容。</summary>
        <value><see cref="T:System.IdentityModel.Protocols.WSTrust.Lifetime" /> 表示返回的标识有效期间所需的时间。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此可选元素指定所需的时间范围，返回的安全令牌在此时间范围内有效。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReplyTo">
      <MemberSignature Language="C#" Value="public string ReplyTo { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ReplyTo" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.ReplyTo" />
      <MemberSignature Language="VB.NET" Value="Public Property ReplyTo As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ReplyTo { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ReplyTo : string with get, set" Usage="System.IdentityModel.Protocols.WSTrust.WSTrustMessage.ReplyTo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置用于依赖依赖方的地址。</summary>
        <value>包含地址的字符串。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 这是一个本地扩展，以独占方式用于使用 WS 联合身份验证协议的被动方案。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequestType">
      <MemberSignature Language="C#" Value="public string RequestType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RequestType" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.RequestType" />
      <MemberSignature Language="VB.NET" Value="Public Property RequestType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ RequestType { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.RequestType : string with get, set" Usage="System.IdentityModel.Protocols.WSTrust.WSTrustMessage.RequestType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置 wst:RequestType 元素。</summary>
        <value>包含指示请求类型的 URI 字符串；例如，在 <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestTypes" /> 类中定义的常数中的一个。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此必需元素指示请求类型。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SignatureAlgorithm">
      <MemberSignature Language="C#" Value="public string SignatureAlgorithm { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SignatureAlgorithm" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.SignatureAlgorithm" />
      <MemberSignature Language="VB.NET" Value="Public Property SignatureAlgorithm As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SignatureAlgorithm { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SignatureAlgorithm : string with get, set" Usage="System.IdentityModel.Protocols.WSTrust.WSTrustMessage.SignatureAlgorithm" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置 wst:SignatureAlgorithm 元素的内容。</summary>
        <value>包含指示签名算法的 URI 字符串。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此可选 URI 元素指示在返回的标记中使用的所需签名算法。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SignWith">
      <MemberSignature Language="C#" Value="public string SignWith { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SignWith" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.SignWith" />
      <MemberSignature Language="VB.NET" Value="Public Property SignWith As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SignWith { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SignWith : string with get, set" Usage="System.IdentityModel.Protocols.WSTrust.WSTrustMessage.SignWith" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置 wst:SignWith 元素的内容。</summary>
        <value>包含标识所需的签名算法的 URI 字符串。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此可选 URI 元素指示要用于已颁发的安全令牌的所需签名算法。 这是对 RequestSecurityToken 元素的扩展。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">尝试将此值设置为 <see langword="null" /> 或者空字符串。</exception>
      </Docs>
    </Member>
    <Member MemberName="TokenType">
      <MemberSignature Language="C#" Value="public string TokenType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TokenType" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.TokenType" />
      <MemberSignature Language="VB.NET" Value="Public Property TokenType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TokenType { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TokenType : string with get, set" Usage="System.IdentityModel.Protocols.WSTrust.WSTrustMessage.TokenType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置 wst:TokenType 元素的内容。</summary>
        <value>包含指示标记类型的 URI 字符串。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此可选元素指示所需的标记类型。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UseKey">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Protocols.WSTrust.UseKey UseKey { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IdentityModel.Protocols.WSTrust.UseKey UseKey" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.UseKey" />
      <MemberSignature Language="VB.NET" Value="Public Property UseKey As UseKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IdentityModel::Protocols::WSTrust::UseKey ^ UseKey { System::IdentityModel::Protocols::WSTrust::UseKey ^ get(); void set(System::IdentityModel::Protocols::WSTrust::UseKey ^ value); };" />
      <MemberSignature Language="F#" Value="member this.UseKey : System.IdentityModel.Protocols.WSTrust.UseKey with get, set" Usage="System.IdentityModel.Protocols.WSTrust.WSTrustMessage.UseKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Protocols.WSTrust.UseKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置wst:UseKey 元素的内容。</summary>
        <value>一个包含键的 <see cref="T:System.IdentityModel.Protocols.WSTrust.UseKey" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果请求者希望使用现有密钥而不是创建新密钥，则可以使用此属性来引用包含所需密钥的安全令牌。 这通常用于非对称密钥颁发案例。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
