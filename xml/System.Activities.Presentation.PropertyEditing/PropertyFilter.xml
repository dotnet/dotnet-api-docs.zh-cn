<Type Name="PropertyFilter" FullName="System.Activities.Presentation.PropertyEditing.PropertyFilter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="84711af8a3ce7bd9c7b6fdff5e956b56f3f11af8" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="70497253" /></Metadata><TypeSignature Language="C#" Value="public class PropertyFilter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit PropertyFilter extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Activities.Presentation.PropertyEditing.PropertyFilter" />
  <TypeSignature Language="VB.NET" Value="Public Class PropertyFilter" />
  <TypeSignature Language="C++ CLI" Value="public ref class PropertyFilter" />
  <TypeSignature Language="F#" Value="type PropertyFilter = class" />
  <AssemblyInfo>
    <AssemblyName>System.Activities.Presentation</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>为属性编辑宿主提供筛选功能。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 包含一个名为 *谓词*的字符串列表，这些字符串与目标属性名进行比较，直到找到匹配项为止。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>创建 <see cref="T:System.Activities.Presentation.PropertyEditing.PropertyFilter" /> 类的新实例。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PropertyFilter (System.Collections.Generic.IEnumerable&lt;System.Activities.Presentation.PropertyEditing.PropertyFilterPredicate&gt; predicates);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;class System.Activities.Presentation.PropertyEditing.PropertyFilterPredicate&gt; predicates) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.PropertyEditing.PropertyFilter.#ctor(System.Collections.Generic.IEnumerable{System.Activities.Presentation.PropertyEditing.PropertyFilterPredicate})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (predicates As IEnumerable(Of PropertyFilterPredicate))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PropertyFilter(System::Collections::Generic::IEnumerable&lt;System::Activities::Presentation::PropertyEditing::PropertyFilterPredicate ^&gt; ^ predicates);" />
      <MemberSignature Language="F#" Value="new System.Activities.Presentation.PropertyEditing.PropertyFilter : seq&lt;System.Activities.Presentation.PropertyEditing.PropertyFilterPredicate&gt; -&gt; System.Activities.Presentation.PropertyEditing.PropertyFilter" Usage="new System.Activities.Presentation.PropertyEditing.PropertyFilter predicates" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="predicates" Type="System.Collections.Generic.IEnumerable&lt;System.Activities.Presentation.PropertyEditing.PropertyFilterPredicate&gt;" />
      </Parameters>
      <Docs>
        <param name="predicates">谓词（即用于匹配的字符串）的 <see cref="T:System.Collections.IEnumerable" /> 列表。</param>
        <summary>创建 <see cref="T:System.Activities.Presentation.PropertyEditing.PropertyFilter" /> 类的新实例，该实例包含筛选字符串的枚举。这些字符串称为“谓词”，可与目标属性名进行比较，直到找到匹配项为止。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PropertyFilter (string filterText);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string filterText) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.PropertyEditing.PropertyFilter.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (filterText As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PropertyFilter(System::String ^ filterText);" />
      <MemberSignature Language="F#" Value="new System.Activities.Presentation.PropertyEditing.PropertyFilter : string -&gt; System.Activities.Presentation.PropertyEditing.PropertyFilter" Usage="new System.Activities.Presentation.PropertyEditing.PropertyFilter filterText" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="filterText" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="filterText">一个 <see cref="T:System.String" />，它包含用于属性筛选的用空格分隔的谓词。</param>
        <summary>创建 <see cref="T:System.Activities.Presentation.PropertyEditing.PropertyFilter" /> 类的新实例，该实例包含 <see cref="T:System.String" />，而后者包含用空格分隔的筛选短语序列。这些短语称为“谓词”，可与目标属性名进行比较，直到找到匹配项为止。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEmpty">
      <MemberSignature Language="C#" Value="public bool IsEmpty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEmpty" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.PropertyEditing.PropertyFilter.IsEmpty" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsEmpty As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsEmpty { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsEmpty : bool" Usage="System.Activities.Presentation.PropertyEditing.PropertyFilter.IsEmpty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>一个只读属性，指示此 <see cref="T:System.Activities.Presentation.PropertyEditing.PropertyFilter" /> 是否不包含任何筛选谓词。</summary>
        <value>如果缺席谓语，则为 <see langword="true" />；否则为 <see langword="false" />。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Match">
      <MemberSignature Language="C#" Value="public bool Match (System.Activities.Presentation.PropertyEditing.IPropertyFilterTarget target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Match(class System.Activities.Presentation.PropertyEditing.IPropertyFilterTarget target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.PropertyEditing.PropertyFilter.Match(System.Activities.Presentation.PropertyEditing.IPropertyFilterTarget)" />
      <MemberSignature Language="VB.NET" Value="Public Function Match (target As IPropertyFilterTarget) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Match(System::Activities::Presentation::PropertyEditing::IPropertyFilterTarget ^ target);" />
      <MemberSignature Language="F#" Value="member this.Match : System.Activities.Presentation.PropertyEditing.IPropertyFilterTarget -&gt; bool" Usage="propertyFilter.Match target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Activities.Presentation.PropertyEditing.IPropertyFilterTarget" />
      </Parameters>
      <Docs>
        <param name="target">当前筛选器在查找匹配项时用来进行比较的属性的名称。</param>
        <summary>将当前筛选对象的谓词字符串与指定的目标属性名相匹配，并返回一个 Boolean 值，指示是否有一个或多个谓词字符串与目标名称相匹配，或此 <see cref="T:System.Activities.Presentation.PropertyEditing.PropertyFilter" /> 不包含任何谓词。</summary>
        <returns>如果存在筛选/目标匹配项，或如果没有可用于比较的谓词，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
