<Type Name="PropertyValueCollection" FullName="System.Activities.Presentation.PropertyEditing.PropertyValueCollection">
  <Metadata><Meta Name="ms.openlocfilehash" Value="b580c2538541f5b370eca0e868a5a4e93551e1cb" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86837515" /></Metadata><TypeSignature Language="C#" Value="public abstract class PropertyValueCollection : System.Collections.Generic.IEnumerable&lt;System.Activities.Presentation.PropertyEditing.PropertyValue&gt;, System.Collections.Specialized.INotifyCollectionChanged" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit PropertyValueCollection extends System.Object implements class System.Collections.Generic.IEnumerable`1&lt;class System.Activities.Presentation.PropertyEditing.PropertyValue&gt;, class System.Collections.IEnumerable, class System.Collections.Specialized.INotifyCollectionChanged" />
  <TypeSignature Language="DocId" Value="T:System.Activities.Presentation.PropertyEditing.PropertyValueCollection" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class PropertyValueCollection&#xA;Implements IEnumerable(Of PropertyValue), INotifyCollectionChanged" />
  <TypeSignature Language="C++ CLI" Value="public ref class PropertyValueCollection abstract : System::Collections::Generic::IEnumerable&lt;System::Activities::Presentation::PropertyEditing::PropertyValue ^&gt;, System::Collections::Specialized::INotifyCollectionChanged" />
  <TypeSignature Language="F#" Value="type PropertyValueCollection = class&#xA;    interface seq&lt;PropertyValue&gt;&#xA;    interface IEnumerable&#xA;    interface INotifyCollectionChanged" />
  <AssemblyInfo>
    <AssemblyName>System.Activities.Presentation</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;System.Activities.Presentation.PropertyEditing.PropertyValue&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Specialized.INotifyCollectionChanged</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>封装 <see cref="T:System.Activities.Presentation.PropertyEditing.PropertyValue" /> 实例的集合，并且用于其 <see cref="T:System.Type" /> 为集合的属性。</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected PropertyValueCollection (System.Activities.Presentation.PropertyEditing.PropertyValue parentValue);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Activities.Presentation.PropertyEditing.PropertyValue parentValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.PropertyEditing.PropertyValueCollection.#ctor(System.Activities.Presentation.PropertyEditing.PropertyValue)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (parentValue As PropertyValue)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; PropertyValueCollection(System::Activities::Presentation::PropertyEditing::PropertyValue ^ parentValue);" />
      <MemberSignature Language="F#" Value="new System.Activities.Presentation.PropertyEditing.PropertyValueCollection : System.Activities.Presentation.PropertyEditing.PropertyValue -&gt; System.Activities.Presentation.PropertyEditing.PropertyValueCollection" Usage="new System.Activities.Presentation.PropertyEditing.PropertyValueCollection parentValue" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="parentValue" Type="System.Activities.Presentation.PropertyEditing.PropertyValue" />
      </Parameters>
      <Docs>
        <param name="parentValue">父 <see cref="T:System.Activities.Presentation.PropertyEditing.PropertyValue" />。</param>
        <summary>初始化 <see cref="T:System.Activities.Presentation.PropertyEditing.PropertyValueCollection" /> 类的新实例，该类用作指定的父对象 <see cref="T:System.Activities.Presentation.PropertyEditing.PropertyValue" /> 的子属性。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public abstract System.Activities.Presentation.PropertyEditing.PropertyValue Add (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Activities.Presentation.PropertyEditing.PropertyValue Add(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.PropertyEditing.PropertyValueCollection.Add(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Add (value As Object) As PropertyValue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Activities::Presentation::PropertyEditing::PropertyValue ^ Add(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member Add : obj -&gt; System.Activities.Presentation.PropertyEditing.PropertyValue" Usage="propertyValueCollection.Add value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Presentation.PropertyEditing.PropertyValue</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">要添加到集合中的对象。</param>
        <summary>向 <see cref="T:System.Activities.Presentation.PropertyEditing.PropertyValue" /> 对象的集合中添加对象。</summary>
        <returns>要添加的对象的 <see cref="T:System.Activities.Presentation.PropertyEditing.PropertyValue" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CollectionChanged">
      <MemberSignature Language="C#" Value="public event System.Collections.Specialized.NotifyCollectionChangedEventHandler CollectionChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Collections.Specialized.NotifyCollectionChangedEventHandler CollectionChanged" />
      <MemberSignature Language="DocId" Value="E:System.Activities.Presentation.PropertyEditing.PropertyValueCollection.CollectionChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CollectionChanged As NotifyCollectionChangedEventHandler " FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Collections::Specialized::NotifyCollectionChangedEventHandler ^ CollectionChanged;" />
      <MemberSignature Language="F#" Value="member this.CollectionChanged : System.Collections.Specialized.NotifyCollectionChangedEventHandler " Usage="member this.CollectionChanged : System.Collections.Specialized.NotifyCollectionChangedEventHandler " />
      <MemberSignature Language="VB.NET" Value="Public Event CollectionChanged As NotifyCollectionChangedEventHandler " FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.NotifyCollectionChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>向侦听器通知集合的动态更改，例如在添加项、移除项或刷新整个列表时。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public abstract int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.PropertyEditing.PropertyValueCollection.Count" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Activities.Presentation.PropertyEditing.PropertyValueCollection.Count" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取 <see cref="T:System.Activities.Presentation.PropertyEditing.PropertyValue" /> 对象集合中的项数。</summary>
        <value>一个 <see cref="T:System.Int32" /> 项数。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public abstract System.Collections.Generic.IEnumerator&lt;System.Activities.Presentation.PropertyEditing.PropertyValue&gt; GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;class System.Activities.Presentation.PropertyEditing.PropertyValue&gt; GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.PropertyEditing.PropertyValueCollection.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetEnumerator () As IEnumerator(Of PropertyValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Collections::Generic::IEnumerator&lt;System::Activities::Presentation::PropertyEditing::PropertyValue ^&gt; ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.Generic.IEnumerator&lt;System.Activities.Presentation.PropertyEditing.PropertyValue&gt;" Usage="propertyValueCollection.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEnumerable`1.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;System.Activities.Presentation.PropertyEditing.PropertyValue&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>返回强类型化的 <see cref="T:System.Collections.IEnumerator" />，它循环访问 <see cref="T:System.Activities.Presentation.PropertyEditing.PropertyValue" /> 对象的集合。</summary>
        <returns>一个可用于循环访问集合的 <see cref="T:System.Collections.Generic.IEnumerator`1" /> 对象。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public abstract System.Activities.Presentation.PropertyEditing.PropertyValue Insert (object value, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Activities.Presentation.PropertyEditing.PropertyValue Insert(object value, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.PropertyEditing.PropertyValueCollection.Insert(System.Object,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Insert (value As Object, index As Integer) As PropertyValue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Activities::Presentation::PropertyEditing::PropertyValue ^ Insert(System::Object ^ value, int index);" />
      <MemberSignature Language="F#" Value="abstract member Insert : obj * int -&gt; System.Activities.Presentation.PropertyEditing.PropertyValue" Usage="propertyValueCollection.Insert (value, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Presentation.PropertyEditing.PropertyValue</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">要添加到集合中的对象。</param>
        <param name="index">指定将对象插入集合到什么位置的索引号。</param>
        <summary>向 <see cref="T:System.Activities.Presentation.PropertyEditing.PropertyValue" /> 对象集合的指定索引处插入指定对象。</summary>
        <returns>要添加的对象的 <see cref="T:System.Activities.Presentation.PropertyEditing.PropertyValue" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public abstract System.Activities.Presentation.PropertyEditing.PropertyValue this[int index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Activities.Presentation.PropertyEditing.PropertyValue Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.PropertyEditing.PropertyValueCollection.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public MustOverride ReadOnly Property Item(index As Integer) As PropertyValue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Activities::Presentation::PropertyEditing::PropertyValue ^ default[int] { System::Activities::Presentation::PropertyEditing::PropertyValue ^ get(int index); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : System.Activities.Presentation.PropertyEditing.PropertyValue" Usage="System.Activities.Presentation.PropertyEditing.PropertyValueCollection.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Presentation.PropertyEditing.PropertyValue</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">要返回的项的索引。</param>
        <summary>返回给定索引处集合中 <see cref="T:System.Activities.Presentation.PropertyEditing.PropertyValue" />。</summary>
        <value>该索引处的 <see cref="T:System.Activities.Presentation.PropertyEditing.PropertyValue" />。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCollectionChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnCollectionChanged (System.Collections.Specialized.NotifyCollectionChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCollectionChanged(class System.Collections.Specialized.NotifyCollectionChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.PropertyEditing.PropertyValueCollection.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCollectionChanged (e As NotifyCollectionChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCollectionChanged(System::Collections::Specialized::NotifyCollectionChangedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnCollectionChanged : System.Collections.Specialized.NotifyCollectionChangedEventArgs -&gt; unit&#xA;override this.OnCollectionChanged : System.Collections.Specialized.NotifyCollectionChangedEventArgs -&gt; unit" Usage="propertyValueCollection.OnCollectionChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Collections.Specialized.NotifyCollectionChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">事件自变量，包含集合中的更改的相关信息。</param>
        <summary>在添加、移除或重新排列集合中的项时引发 <see cref="E:System.Activities.Presentation.PropertyEditing.PropertyValueCollection.CollectionChanged" /> 事件。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParentValue">
      <MemberSignature Language="C#" Value="public System.Activities.Presentation.PropertyEditing.PropertyValue ParentValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Activities.Presentation.PropertyEditing.PropertyValue ParentValue" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.PropertyEditing.PropertyValueCollection.ParentValue" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ParentValue As PropertyValue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Activities::Presentation::PropertyEditing::PropertyValue ^ ParentValue { System::Activities::Presentation::PropertyEditing::PropertyValue ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ParentValue : System.Activities.Presentation.PropertyEditing.PropertyValue" Usage="System.Activities.Presentation.PropertyEditing.PropertyValueCollection.ParentValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Activities.Presentation.PropertyEditing.PropertyValue</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取包含该集合的父 <see cref="T:System.Activities.Presentation.PropertyEditing.PropertyValue" /> 对象。</summary>
        <value>父对象的 <see cref="T:System.Activities.Presentation.PropertyEditing.PropertyValue" />。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public abstract bool Remove (System.Activities.Presentation.PropertyEditing.PropertyValue propertyValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Remove(class System.Activities.Presentation.PropertyEditing.PropertyValue propertyValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.PropertyEditing.PropertyValueCollection.Remove(System.Activities.Presentation.PropertyEditing.PropertyValue)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Remove (propertyValue As PropertyValue) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool Remove(System::Activities::Presentation::PropertyEditing::PropertyValue ^ propertyValue);" />
      <MemberSignature Language="F#" Value="abstract member Remove : System.Activities.Presentation.PropertyEditing.PropertyValue -&gt; bool" Usage="propertyValueCollection.Remove propertyValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyValue" Type="System.Activities.Presentation.PropertyEditing.PropertyValue" />
      </Parameters>
      <Docs>
        <param name="propertyValue">要从集合中移除的项。</param>
        <summary>从 <see cref="T:System.Activities.Presentation.PropertyEditing.PropertyValue" /> 对象的集合中移除对象。</summary>
        <returns>如果移除成功，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 在移除对象后，宿主需要确保 PropertyValue 是有效的。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public abstract void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.PropertyEditing.PropertyValueCollection.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void RemoveAt(int index);" />
      <MemberSignature Language="F#" Value="abstract member RemoveAt : int -&gt; unit" Usage="propertyValueCollection.RemoveAt index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">要移除的项的索引。</param>
        <summary>从 <see cref="T:System.Activities.Presentation.PropertyEditing.PropertyValue" /> 对象集合中的指定索引处移除对象。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetIndex">
      <MemberSignature Language="C#" Value="public abstract void SetIndex (int currentIndex, int newIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetIndex(int32 currentIndex, int32 newIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.PropertyEditing.PropertyValueCollection.SetIndex(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub SetIndex (currentIndex As Integer, newIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void SetIndex(int currentIndex, int newIndex);" />
      <MemberSignature Language="F#" Value="abstract member SetIndex : int * int -&gt; unit" Usage="propertyValueCollection.SetIndex (currentIndex, newIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="currentIndex" Type="System.Int32" />
        <Parameter Name="newIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="currentIndex">集合中对象的当前位置索引。</param>
        <param name="newIndex">要将项移到的索引位置。</param>
        <summary>在将集合中的现有项移到新位置之后，重新计算 <see cref="T:System.Activities.Presentation.PropertyEditing.PropertyValue" /> 对象集合中的索引。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.PropertyEditing.PropertyValueCollection.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.IEnumerable.GetEnumerator : unit -&gt; System.Collections.IEnumerator&#xA;override this.System.Collections.IEnumerable.GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="propertyValueCollection.System.Collections.IEnumerable.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>为 <see cref="T:System.Collections.IEnumerator" /> 对象的集合返回强类型化的 <see cref="T:System.Activities.Presentation.PropertyEditing.PropertyValue" />。</summary>
        <returns>一个可用于循环访问集合的 <see cref="T:System.Collections.IEnumerator" /> 对象。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
