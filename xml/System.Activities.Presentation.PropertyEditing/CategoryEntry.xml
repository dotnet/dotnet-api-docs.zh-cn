<Type Name="CategoryEntry" FullName="System.Activities.Presentation.PropertyEditing.CategoryEntry">
  <Metadata><Meta Name="ms.openlocfilehash" Value="f72d90147c76110f8a1e67897bdcbe1b3699c04b" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86837697" /></Metadata><TypeSignature Language="C#" Value="public abstract class CategoryEntry : System.Activities.Presentation.PropertyEditing.IPropertyFilterTarget, System.ComponentModel.INotifyPropertyChanged" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit CategoryEntry extends System.Object implements class System.Activities.Presentation.PropertyEditing.IPropertyFilterTarget, class System.ComponentModel.INotifyPropertyChanged" />
  <TypeSignature Language="DocId" Value="T:System.Activities.Presentation.PropertyEditing.CategoryEntry" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class CategoryEntry&#xA;Implements INotifyPropertyChanged, IPropertyFilterTarget" />
  <TypeSignature Language="C++ CLI" Value="public ref class CategoryEntry abstract : System::Activities::Presentation::PropertyEditing::IPropertyFilterTarget, System::ComponentModel::INotifyPropertyChanged" />
  <TypeSignature Language="F#" Value="type CategoryEntry = class&#xA;    interface INotifyPropertyChanged&#xA;    interface IPropertyFilterTarget" />
  <AssemblyInfo>
    <AssemblyName>System.Activities.Presentation</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Activities.Presentation.PropertyEditing.IPropertyFilterTarget</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ComponentModel.INotifyPropertyChanged</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="bec50-101">建立一个 Category 模型，该模型由一个本地化的名称和一个属性集合组成。</span><span class="sxs-lookup"><span data-stu-id="bec50-101">Models a Category, which consists of a localized name and a collection of properties.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected CategoryEntry (string name);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.PropertyEditing.CategoryEntry.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (name As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; CategoryEntry(System::String ^ name);" />
      <MemberSignature Language="F#" Value="new System.Activities.Presentation.PropertyEditing.CategoryEntry : string -&gt; System.Activities.Presentation.PropertyEditing.CategoryEntry" Usage="new System.Activities.Presentation.PropertyEditing.CategoryEntry name" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="bec50-102">一组属性的本地化的 Category 名称。</span><span class="sxs-lookup"><span data-stu-id="bec50-102">The localized Category name of a group of properties.</span></span></param>
        <summary><span data-ttu-id="bec50-103">创建 <see cref="T:System.Activities.Presentation.PropertyEditing.CategoryEntry" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="bec50-103">Creates a new instance of the <see cref="T:System.Activities.Presentation.PropertyEditing.CategoryEntry" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="bec50-104"><paramref name="name" /> 是 <see langword="null" /> 或 <see langword="empty" />。</span><span class="sxs-lookup"><span data-stu-id="bec50-104"><paramref name="name" /> is <see langword="null" /> or <see langword="empty" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ApplyFilter">
      <MemberSignature Language="C#" Value="public virtual void ApplyFilter (System.Activities.Presentation.PropertyEditing.PropertyFilter filter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ApplyFilter(class System.Activities.Presentation.PropertyEditing.PropertyFilter filter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.PropertyEditing.CategoryEntry.ApplyFilter(System.Activities.Presentation.PropertyEditing.PropertyFilter)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ApplyFilter (filter As PropertyFilter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ApplyFilter(System::Activities::Presentation::PropertyEditing::PropertyFilter ^ filter);" />
      <MemberSignature Language="F#" Value="abstract member ApplyFilter : System.Activities.Presentation.PropertyEditing.PropertyFilter -&gt; unit&#xA;override this.ApplyFilter : System.Activities.Presentation.PropertyEditing.PropertyFilter -&gt; unit" Usage="categoryEntry.ApplyFilter filter" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Activities.Presentation.PropertyEditing.IPropertyFilterTarget.ApplyFilter(System.Activities.Presentation.PropertyEditing.PropertyFilter)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filter" Type="System.Activities.Presentation.PropertyEditing.PropertyFilter" />
      </Parameters>
      <Docs>
        <param name="filter"><span data-ttu-id="bec50-105">正在应用的 <see cref="T:System.Activities.Presentation.PropertyEditing.PropertyFilter" />。</span><span class="sxs-lookup"><span data-stu-id="bec50-105">The <see cref="T:System.Activities.Presentation.PropertyEditing.PropertyFilter" /> being applied.</span></span></param>
        <summary><span data-ttu-id="bec50-106">设置一个新的属性筛选器。</span><span class="sxs-lookup"><span data-stu-id="bec50-106">Sets a new property filter.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bec50-107">如果 Category 与指定的筛选器相匹配，则引发 <xref:System.Activities.Presentation.PropertyEditing.CategoryEntry.FilterApplied> 事件。</span><span class="sxs-lookup"><span data-stu-id="bec50-107">If the Category matches the specified filter, then the <xref:System.Activities.Presentation.PropertyEditing.CategoryEntry.FilterApplied> event is raised.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CategoryName">
      <MemberSignature Language="C#" Value="public string CategoryName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CategoryName" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.PropertyEditing.CategoryEntry.CategoryName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CategoryName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CategoryName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CategoryName : string" Usage="System.Activities.Presentation.PropertyEditing.CategoryEntry.CategoryName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bec50-108">获取本地化的 Category 名称。</span><span class="sxs-lookup"><span data-stu-id="bec50-108">Gets the name of the localized Category.</span></span></summary>
        <value><span data-ttu-id="bec50-109">本地化的 Category 名称。</span><span class="sxs-lookup"><span data-stu-id="bec50-109">The localized Category name.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FilterApplied">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Activities.Presentation.PropertyEditing.PropertyFilterAppliedEventArgs&gt; FilterApplied;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Activities.Presentation.PropertyEditing.PropertyFilterAppliedEventArgs&gt; FilterApplied" />
      <MemberSignature Language="DocId" Value="E:System.Activities.Presentation.PropertyEditing.CategoryEntry.FilterApplied" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event FilterApplied As EventHandler(Of PropertyFilterAppliedEventArgs) " FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event EventHandler&lt;System::Activities::Presentation::PropertyEditing::PropertyFilterAppliedEventArgs ^&gt; ^ FilterApplied;" />
      <MemberSignature Language="F#" Value="member this.FilterApplied : EventHandler&lt;System.Activities.Presentation.PropertyEditing.PropertyFilterAppliedEventArgs&gt; " Usage="member this.FilterApplied : System.EventHandler&lt;System.Activities.Presentation.PropertyEditing.PropertyFilterAppliedEventArgs&gt; " />
      <MemberSignature Language="VB.NET" Value="Public Event FilterApplied As EventHandler(Of PropertyFilterAppliedEventArgs) " FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Activities.Presentation.PropertyEditing.IPropertyFilterTarget.FilterApplied</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Activities.Presentation.PropertyEditing.PropertyFilterAppliedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bec50-110">声明 <see cref="T:System.Activities.Presentation.PropertyEditing.IPropertyFilterTarget" /> 事件。</span><span class="sxs-lookup"><span data-stu-id="bec50-110">Declares the <see cref="T:System.Activities.Presentation.PropertyEditing.IPropertyFilterTarget" /> event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public abstract System.Activities.Presentation.PropertyEditing.PropertyEntry this[string propertyName] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Activities.Presentation.PropertyEditing.PropertyEntry Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.PropertyEditing.CategoryEntry.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public MustOverride ReadOnly Property Item(propertyName As String) As PropertyEntry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Activities::Presentation::PropertyEditing::PropertyEntry ^ default[System::String ^] { System::Activities::Presentation::PropertyEditing::PropertyEntry ^ get(System::String ^ propertyName); };" />
      <MemberSignature Language="F#" Value="member this.Item(string) : System.Activities.Presentation.PropertyEditing.PropertyEntry" Usage="System.Activities.Presentation.PropertyEditing.CategoryEntry.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Presentation.PropertyEditing.PropertyEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="propertyName"><span data-ttu-id="bec50-111">要为其返回属性实例的字符串属性名。</span><span class="sxs-lookup"><span data-stu-id="bec50-111">The string property name for which to return a property instance.</span></span></param>
        <summary><span data-ttu-id="bec50-112">返回此 <see cref="T:System.Activities.Presentation.PropertyEditing.CategoryEntry" /> 对象的具有给定属性名的属性实例。</span><span class="sxs-lookup"><span data-stu-id="bec50-112">Returns a property instance of this <see cref="T:System.Activities.Presentation.PropertyEditing.CategoryEntry" /> object given the property name.</span></span></summary>
        <value><span data-ttu-id="bec50-113">对应于属性名称参数的属性（如果存在）；否则，<see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="bec50-113">The property corresponding to the property name parameter if one exists; otherwise, <see langword="null" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MatchesFilter">
      <MemberSignature Language="C#" Value="public virtual bool MatchesFilter { get; protected set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool MatchesFilter" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.PropertyEditing.CategoryEntry.MatchesFilter" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property MatchesFilter As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:  virtual property bool MatchesFilter {  public:&#xA;bool get(); protected:&#xA; void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.MatchesFilter : bool with get, set" Usage="System.Activities.Presentation.PropertyEditing.CategoryEntry.MatchesFilter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bec50-114">获取或设置一个值，指示 <see cref="T:System.Activities.Presentation.PropertyEditing.CategoryEntry" /> 是否与某个筛选器相匹配。</span><span class="sxs-lookup"><span data-stu-id="bec50-114">Gets or sets a value that indicates whether the <see cref="T:System.Activities.Presentation.PropertyEditing.CategoryEntry" /> matches a filter.</span></span></summary>
        <value><span data-ttu-id="bec50-115">如果筛选器与指定的筛选器相等，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="bec50-115"><see langword="true" /> if a filter equals the specified filter; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MatchesPredicate">
      <MemberSignature Language="C#" Value="public abstract bool MatchesPredicate (System.Activities.Presentation.PropertyEditing.PropertyFilterPredicate predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MatchesPredicate(class System.Activities.Presentation.PropertyEditing.PropertyFilterPredicate predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.PropertyEditing.CategoryEntry.MatchesPredicate(System.Activities.Presentation.PropertyEditing.PropertyFilterPredicate)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function MatchesPredicate (predicate As PropertyFilterPredicate) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool MatchesPredicate(System::Activities::Presentation::PropertyEditing::PropertyFilterPredicate ^ predicate);" />
      <MemberSignature Language="F#" Value="abstract member MatchesPredicate : System.Activities.Presentation.PropertyEditing.PropertyFilterPredicate -&gt; bool" Usage="categoryEntry.MatchesPredicate predicate" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Activities.Presentation.PropertyEditing.IPropertyFilterTarget.MatchesPredicate(System.Activities.Presentation.PropertyEditing.PropertyFilterPredicate)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="predicate" Type="System.Activities.Presentation.PropertyEditing.PropertyFilterPredicate" />
      </Parameters>
      <Docs>
        <param name="predicate"><span data-ttu-id="bec50-116">要匹配的 <see cref="T:System.Activities.Presentation.PropertyEditing.PropertyFilterPredicate" />，它是一个字符串。</span><span class="sxs-lookup"><span data-stu-id="bec50-116">The <see cref="T:System.Activities.Presentation.PropertyEditing.PropertyFilterPredicate" />, a string, to match against.</span></span></param>
        <summary><span data-ttu-id="bec50-117">指示 <see cref="T:System.Activities.Presentation.PropertyEditing.IPropertyFilterTarget" /> 是否与某个谓词相匹配。</span><span class="sxs-lookup"><span data-stu-id="bec50-117">Indicates whether an <see cref="T:System.Activities.Presentation.PropertyEditing.IPropertyFilterTarget" /> matches a predicate.</span></span></summary>
        <returns><span data-ttu-id="bec50-118">如果存在匹配项，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="bec50-118"><see langword="true" /> if there is a match; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnFilterApplied">
      <MemberSignature Language="C#" Value="protected virtual void OnFilterApplied (System.Activities.Presentation.PropertyEditing.PropertyFilter filter);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnFilterApplied(class System.Activities.Presentation.PropertyEditing.PropertyFilter filter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.PropertyEditing.CategoryEntry.OnFilterApplied(System.Activities.Presentation.PropertyEditing.PropertyFilter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnFilterApplied (filter As PropertyFilter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnFilterApplied(System::Activities::Presentation::PropertyEditing::PropertyFilter ^ filter);" />
      <MemberSignature Language="F#" Value="abstract member OnFilterApplied : System.Activities.Presentation.PropertyEditing.PropertyFilter -&gt; unit&#xA;override this.OnFilterApplied : System.Activities.Presentation.PropertyEditing.PropertyFilter -&gt; unit" Usage="categoryEntry.OnFilterApplied filter" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filter" Type="System.Activities.Presentation.PropertyEditing.PropertyFilter" />
      </Parameters>
      <Docs>
        <param name="filter"><span data-ttu-id="bec50-119">正在应用的 <see cref="T:System.Activities.Presentation.PropertyEditing.PropertyFilter" />。</span><span class="sxs-lookup"><span data-stu-id="bec50-119">The <see cref="T:System.Activities.Presentation.PropertyEditing.PropertyFilter" /> being applied.</span></span></param>
        <summary><span data-ttu-id="bec50-120">当应用属性筛选器时，引发 <see cref="E:System.Activities.Presentation.PropertyEditing.CategoryEntry.FilterApplied" /> 事件。</span><span class="sxs-lookup"><span data-stu-id="bec50-120">Raises the <see cref="E:System.Activities.Presentation.PropertyEditing.CategoryEntry.FilterApplied" /> event when the property filter is applied.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPropertyChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnPropertyChanged (string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPropertyChanged(string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.PropertyEditing.CategoryEntry.OnPropertyChanged(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPropertyChanged (propertyName As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPropertyChanged(System::String ^ propertyName);" />
      <MemberSignature Language="F#" Value="abstract member OnPropertyChanged : string -&gt; unit&#xA;override this.OnPropertyChanged : string -&gt; unit" Usage="categoryEntry.OnPropertyChanged propertyName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="propertyName"><span data-ttu-id="bec50-121">已更改的属性的名称。</span><span class="sxs-lookup"><span data-stu-id="bec50-121">The name of the property that is changed.</span></span></param>
        <summary><span data-ttu-id="bec50-122">引发 <see cref="E:System.Activities.Presentation.PropertyEditing.CategoryEntry.PropertyChanged" /> 事件。</span><span class="sxs-lookup"><span data-stu-id="bec50-122">Raises the <see cref="E:System.Activities.Presentation.PropertyEditing.CategoryEntry.PropertyChanged" /> event.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="bec50-123"><paramref name="propertyName" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="bec50-123"><paramref name="propertyName" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Properties">
      <MemberSignature Language="C#" Value="public abstract System.Collections.Generic.IEnumerable&lt;System.Activities.Presentation.PropertyEditing.PropertyEntry&gt; Properties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class System.Activities.Presentation.PropertyEditing.PropertyEntry&gt; Properties" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.PropertyEditing.CategoryEntry.Properties" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Properties As IEnumerable(Of PropertyEntry)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Collections::Generic::IEnumerable&lt;System::Activities::Presentation::PropertyEditing::PropertyEntry ^&gt; ^ Properties { System::Collections::Generic::IEnumerable&lt;System::Activities::Presentation::PropertyEditing::PropertyEntry ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Properties : seq&lt;System.Activities.Presentation.PropertyEditing.PropertyEntry&gt;" Usage="System.Activities.Presentation.PropertyEditing.CategoryEntry.Properties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Activities.Presentation.PropertyEditing.PropertyEntry&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bec50-124">获取类别中所有属性的 <see cref="T:System.Collections.IEnumerable" /> 集合。</span><span class="sxs-lookup"><span data-stu-id="bec50-124">Gets an <see cref="T:System.Collections.IEnumerable" /> collection of all of the properties in the category.</span></span></summary>
        <value><span data-ttu-id="bec50-125">一个 <see cref="T:System.Collections.Generic.IEnumerable`1" />，它是类别中所有属性的集合。</span><span class="sxs-lookup"><span data-stu-id="bec50-125">An <see cref="T:System.Collections.Generic.IEnumerable`1" />, a collection of all the properties in the category.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PropertyChanged">
      <MemberSignature Language="C#" Value="public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.PropertyChangedEventHandler PropertyChanged" />
      <MemberSignature Language="DocId" Value="E:System.Activities.Presentation.PropertyEditing.CategoryEntry.PropertyChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PropertyChanged As PropertyChangedEventHandler " FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::ComponentModel::PropertyChangedEventHandler ^ PropertyChanged;" />
      <MemberSignature Language="F#" Value="member this.PropertyChanged : System.ComponentModel.PropertyChangedEventHandler " Usage="member this.PropertyChanged : System.ComponentModel.PropertyChangedEventHandler " />
      <MemberSignature Language="VB.NET" Value="Public Event PropertyChanged As PropertyChangedEventHandler " FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bec50-126">声明 <see cref="T:System.ComponentModel.INotifyPropertyChanged" /> 事件。</span><span class="sxs-lookup"><span data-stu-id="bec50-126">Declares the <see cref="T:System.ComponentModel.INotifyPropertyChanged" /> event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
