<Type Name="ProjectRootElement" FullName="Microsoft.Build.Construction.ProjectRootElement">
  <Metadata><Meta Name="ms.openlocfilehash" Value="33594e45992c30adff8f5df278297d37bad1ea6a" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86633228" /></Metadata><TypeSignature Language="C#" Value="public class ProjectRootElement : Microsoft.Build.Construction.ProjectElementContainer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ProjectRootElement extends Microsoft.Build.Construction.ProjectElementContainer" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Build.Construction.ProjectRootElement" />
  <TypeSignature Language="VB.NET" Value="Public Class ProjectRootElement&#xA;Inherits ProjectElementContainer" />
  <TypeSignature Language="C++ CLI" Value="public ref class ProjectRootElement : Microsoft::Build::Construction::ProjectElementContainer" />
  <TypeSignature Language="F#" Value="type ProjectRootElement = class&#xA;    inherit ProjectElementContainer" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Build</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>15.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.Build.Construction.ProjectElementContainer</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="msbuild-15;msbuild-15-netcore;msbuild-16;msbuild-16-netcore;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName Language="C#">[System.Diagnostics.DebuggerDisplay("{FullPath} #Children={Count} DefaultTargets={DefaultTargets} ToolsVersion={ToolsVersion} InitialTargets={InitialTargets} ExplicitlyLoaded={IsExplicitlyLoaded}")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerDisplay("{FullPath} #Children={Count} DefaultTargets={DefaultTargets} ToolsVersion={ToolsVersion} InitialTargets={InitialTargets} ExplicitlyLoaded={IsExplicitlyLoaded}")&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0">
      <AttributeName Language="C#">[System.Diagnostics.DebuggerDisplay("{FullPath} #Children={Count} DefaultTargets={DefaultTargets} ToolsVersion={ToolsVersion} InitialTargets={InitialTargets}")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerDisplay("{FullPath} #Children={Count} DefaultTargets={DefaultTargets} ToolsVersion={ToolsVersion} InitialTargets={InitialTargets}")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="e46d2-101">ProjectRootElement 类表示一个 MSBuild 项目、一个 MSBuild 目标文件或任何其他符合 MSBuild 项目文件架构的文件。</span><span class="sxs-lookup"><span data-stu-id="e46d2-101">ProjectRootElement class represents an MSBuild project, an MSBuild targets file or any other file that conforms to MSBuild project file schema.</span></span>
<span data-ttu-id="e46d2-102">通过此类及其相关类，可以读写完整的 MSBuild 项目或目标文件。</span><span class="sxs-lookup"><span data-stu-id="e46d2-102">This class and its related classes allow a complete MSBuild project or targets file to be read and written.</span></span>
<span data-ttu-id="e46d2-103">目前不能通过此模型编辑注释和空格。</span><span class="sxs-lookup"><span data-stu-id="e46d2-103">Comments and whitespace cannot be edited through this model at present.</span></span>
            
<span data-ttu-id="e46d2-104">每个项目根元素只与一个 ProjectCollection 关联。</span><span class="sxs-lookup"><span data-stu-id="e46d2-104">Each project root element is associated with exactly one ProjectCollection.</span></span> <span data-ttu-id="e46d2-105">这允许该项目集合的所有者控制其生存期，而不会因来自其他项目集合的编辑而惊讶。</span><span class="sxs-lookup"><span data-stu-id="e46d2-105">This allows the owner of that project collection to control its lifetime and not be surprised by edits via another project collection.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e46d2-106">目前不能通过此模型编辑注释和空格。</span><span class="sxs-lookup"><span data-stu-id="e46d2-106">Comments and white space cannot be edited through this model at present.</span></span> <span data-ttu-id="e46d2-107">每个项目根元素只与一个项目集合关联。</span><span class="sxs-lookup"><span data-stu-id="e46d2-107">Each project root element is associated with exactly one project collection.</span></span> <span data-ttu-id="e46d2-108">这允许该项目集合的所有者控制其生存期，而不会因来自其他项目集合的编辑而惊讶。</span><span class="sxs-lookup"><span data-stu-id="e46d2-108">This allows the owner of that project collection to control its lifetime and not be surprised by edits that come from another project collection.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AddImport">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Construction.ProjectImportElement AddImport (string project);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Build.Construction.ProjectImportElement AddImport(string project) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Construction.ProjectRootElement.AddImport(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddImport (project As String) As ProjectImportElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Build::Construction::ProjectImportElement ^ AddImport(System::String ^ project);" />
      <MemberSignature Language="F#" Value="member this.AddImport : string -&gt; Microsoft.Build.Construction.ProjectImportElement" Usage="projectRootElement.AddImport project" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Construction.ProjectImportElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="project"><span data-ttu-id="e46d2-109">要导入的项目。</span><span class="sxs-lookup"><span data-stu-id="e46d2-109">The project to be imported.</span></span></param>
        <summary><span data-ttu-id="e46d2-110">基于启发式方法选取位置的便利方法：如果存在导入组，则插入到不含条件的最后一个导入组。</span><span class="sxs-lookup"><span data-stu-id="e46d2-110">Convenience method that picks a location based on a heuristic: If import groups exist, inserts into the last one without a condition on it.</span></span>
<span data-ttu-id="e46d2-111">否则，在项目的末尾创建一个导入。</span><span class="sxs-lookup"><span data-stu-id="e46d2-111">Otherwise, creates an import at the end of the project.</span></span></summary>
        <returns><span data-ttu-id="e46d2-112">添加的项目导入。</span><span class="sxs-lookup"><span data-stu-id="e46d2-112">The added project import.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e46d2-113">如果导入组存在，则将项目导入插入不包含 Condition 特性的最后一个导入组;否则，在项目的末尾创建一个导入。</span><span class="sxs-lookup"><span data-stu-id="e46d2-113">If import groups exist, inserts the project import into the last import group that has no Condition attribute; otherwise, creates an import at the end of the project.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddImportGroup">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Construction.ProjectImportGroupElement AddImportGroup ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Build.Construction.ProjectImportGroupElement AddImportGroup() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Construction.ProjectRootElement.AddImportGroup" />
      <MemberSignature Language="VB.NET" Value="Public Function AddImportGroup () As ProjectImportGroupElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Build::Construction::ProjectImportGroupElement ^ AddImportGroup();" />
      <MemberSignature Language="F#" Value="member this.AddImportGroup : unit -&gt; Microsoft.Build.Construction.ProjectImportGroupElement" Usage="projectRootElement.AddImportGroup " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Construction.ProjectImportGroupElement</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e46d2-114">基于启发式方法选取位置的便利方法：在项目的末尾创建一个导入组。</span><span class="sxs-lookup"><span data-stu-id="e46d2-114">Convenience method that picks a location based on a heuristic: Creates an import group at the end of the project.</span></span></summary>
        <returns><span data-ttu-id="e46d2-115">在此项目的末尾创建的导入组。</span><span class="sxs-lookup"><span data-stu-id="e46d2-115">The import group created at the end of this project.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e46d2-116">此便利方法基于试探法选取 MSBuild DOM 中的位置。</span><span class="sxs-lookup"><span data-stu-id="e46d2-116">This convenience method picks a location in the MSBuild DOM based on a heuristic.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddItem">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e46d2-117">向此项目中添加项。</span><span class="sxs-lookup"><span data-stu-id="e46d2-117">Adds an item to this project.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddItem">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Construction.ProjectItemElement AddItem (string itemType, string include);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Build.Construction.ProjectItemElement AddItem(string itemType, string include) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Construction.ProjectRootElement.AddItem(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddItem (itemType As String, include As String) As ProjectItemElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Build::Construction::ProjectItemElement ^ AddItem(System::String ^ itemType, System::String ^ include);" />
      <MemberSignature Language="F#" Value="member this.AddItem : string * string -&gt; Microsoft.Build.Construction.ProjectItemElement" Usage="projectRootElement.AddItem (itemType, include)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Construction.ProjectItemElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemType" Type="System.String" />
        <Parameter Name="include" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="itemType"><span data-ttu-id="e46d2-118">要添加的项的项类型。</span><span class="sxs-lookup"><span data-stu-id="e46d2-118">The item type of the item to be added.</span></span></param>
        <param name="include"><span data-ttu-id="e46d2-119">要添加的项的 Include 值。</span><span class="sxs-lookup"><span data-stu-id="e46d2-119">The Include value of the item to be added.</span></span></param>
        <summary><span data-ttu-id="e46d2-120">基于启发式方法选取位置的便利方法：查找不含条件且至少含一个同类型项的项组，否则添加一个新的项组；将项添加到含同类型项的项组中，并按 include 排序。</span><span class="sxs-lookup"><span data-stu-id="e46d2-120">Convenience method that picks a location based on a heuristic: Finds item group with no condition with at least one item of same type, or else adds a new item group; adds the item to that item group with items of the same type, ordered by include.</span></span></summary>
        <returns><span data-ttu-id="e46d2-121">添加的项。</span><span class="sxs-lookup"><span data-stu-id="e46d2-121">The added item.</span></span></returns>
        <remarks><span data-ttu-id="e46d2-122">根据以前的实现，它实际上查找最后一个合适的项组，而不是第一个。</span><span class="sxs-lookup"><span data-stu-id="e46d2-122">Per the previous implementation, it actually finds the last suitable item group, not the first.</span></span></remarks>
      </Docs>
    </Member>
    <Member MemberName="AddItem">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Construction.ProjectItemElement AddItem (string itemType, string include, System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;string,string&gt;&gt; metadata);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Build.Construction.ProjectItemElement AddItem(string itemType, string include, class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;string, string&gt;&gt; metadata) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Construction.ProjectRootElement.AddItem(System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})" />
      <MemberSignature Language="VB.NET" Value="Public Function AddItem (itemType As String, include As String, metadata As IEnumerable(Of KeyValuePair(Of String, String))) As ProjectItemElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Build::Construction::ProjectItemElement ^ AddItem(System::String ^ itemType, System::String ^ include, System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;System::String ^, System::String ^&gt;&gt; ^ metadata);" />
      <MemberSignature Language="F#" Value="member this.AddItem : string * string * seq&lt;System.Collections.Generic.KeyValuePair&lt;string, string&gt;&gt; -&gt; Microsoft.Build.Construction.ProjectItemElement" Usage="projectRootElement.AddItem (itemType, include, metadata)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Construction.ProjectItemElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemType" Type="System.String" />
        <Parameter Name="include" Type="System.String" />
        <Parameter Name="metadata" Type="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.String&gt;&gt;" />
      </Parameters>
      <Docs>
        <param name="itemType"><span data-ttu-id="e46d2-123">要添加的项的项类型。</span><span class="sxs-lookup"><span data-stu-id="e46d2-123">The item type of the item to be added.</span></span></param>
        <param name="include"><span data-ttu-id="e46d2-124">要添加的项的 Include 值。</span><span class="sxs-lookup"><span data-stu-id="e46d2-124">The Include value of the item to be added.</span></span></param>
        <param name="metadata"><span data-ttu-id="e46d2-125">要添加的元数据。</span><span class="sxs-lookup"><span data-stu-id="e46d2-125">The metadata to be added.</span></span></param>
        <summary><span data-ttu-id="e46d2-126">基于启发式方法选取位置的便利方法：查找不含条件且至少含一个同类型项的第一个项组或者一个空项组，否则添加一个新的项组；将项添加到含同类型项的项组中，并按 include 排序。</span><span class="sxs-lookup"><span data-stu-id="e46d2-126">Convenience method that picks a location based on a heuristic: Finds first item group with no condition with at least one item of same type, or else an empty item group; or else adds a new item group; adds the item to that item group with items of the same type, ordered by include.</span></span>
<span data-ttu-id="e46d2-127">请勿尝试检查项是否与现有通配符表达式匹配；该操作在已评估环境中才可行。</span><span class="sxs-lookup"><span data-stu-id="e46d2-127">Does not attempt to check whether the item matches an existing wildcard expression; that is only possible in the evaluated world.</span></span></summary>
        <returns><span data-ttu-id="e46d2-128">添加的项。</span><span class="sxs-lookup"><span data-stu-id="e46d2-128">The added item.</span></span></returns>
        <remarks><span data-ttu-id="e46d2-129">根据以前的实现，它实际上查找最后一个合适的项组，而不是第一个。</span><span class="sxs-lookup"><span data-stu-id="e46d2-129">Per the previous implementation, it actually finds the last suitable item group, not the first.</span></span></remarks>
      </Docs>
    </Member>
    <Member MemberName="AddItemDefinition">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Construction.ProjectItemDefinitionElement AddItemDefinition (string itemType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Build.Construction.ProjectItemDefinitionElement AddItemDefinition(string itemType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Construction.ProjectRootElement.AddItemDefinition(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddItemDefinition (itemType As String) As ProjectItemDefinitionElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Build::Construction::ProjectItemDefinitionElement ^ AddItemDefinition(System::String ^ itemType);" />
      <MemberSignature Language="F#" Value="member this.AddItemDefinition : string -&gt; Microsoft.Build.Construction.ProjectItemDefinitionElement" Usage="projectRootElement.AddItemDefinition itemType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Construction.ProjectItemDefinitionElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="itemType"><span data-ttu-id="e46d2-130">要添加的项定义的项类型。</span><span class="sxs-lookup"><span data-stu-id="e46d2-130">The item type of the item definition to be added.</span></span></param>
        <summary><span data-ttu-id="e46d2-131">基于启发式方法选取位置的便利方法：查找不含条件且至少含一个同项类型的项定义的第一个项定义组，否则添加一个新的项定义组。</span><span class="sxs-lookup"><span data-stu-id="e46d2-131">Convenience method that picks a location based on a heuristic: Finds first item definition group with no condition with at least one item definition of same item type, or else adds a new item definition group.</span></span></summary>
        <returns><span data-ttu-id="e46d2-132">添加的项定义。</span><span class="sxs-lookup"><span data-stu-id="e46d2-132">The added item definition.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e46d2-133">创建一个项，然后将其添加到不含 Condition 特性的项组和至少一个具有相同项类型的项。</span><span class="sxs-lookup"><span data-stu-id="e46d2-133">Creates an item, then adds it to an item group with no Condition attribute and at least one item of same item type.</span></span> <span data-ttu-id="e46d2-134">如果找不到此类项组，则将创建一个新的项组并向其添加项。</span><span class="sxs-lookup"><span data-stu-id="e46d2-134">If no such item group is found, creates a new item group and adds the item to it.</span></span> <span data-ttu-id="e46d2-135">项按包含值排序。</span><span class="sxs-lookup"><span data-stu-id="e46d2-135">Items are ordered by Include values.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddItemDefinitionGroup">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Construction.ProjectItemDefinitionGroupElement AddItemDefinitionGroup ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Build.Construction.ProjectItemDefinitionGroupElement AddItemDefinitionGroup() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Construction.ProjectRootElement.AddItemDefinitionGroup" />
      <MemberSignature Language="VB.NET" Value="Public Function AddItemDefinitionGroup () As ProjectItemDefinitionGroupElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Build::Construction::ProjectItemDefinitionGroupElement ^ AddItemDefinitionGroup();" />
      <MemberSignature Language="F#" Value="member this.AddItemDefinitionGroup : unit -&gt; Microsoft.Build.Construction.ProjectItemDefinitionGroupElement" Usage="projectRootElement.AddItemDefinitionGroup " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Construction.ProjectItemDefinitionGroupElement</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e46d2-136">基于启发式方法选取位置的便利方法：在现有的最后一个项定义组（如果有）后添加一个项定义组；否则，在最后一个现有属性组（如果有）后添加一个项定义组；否则，在项目的末尾添加一个新的项定义组。</span><span class="sxs-lookup"><span data-stu-id="e46d2-136">Convenience method that picks a location based on a heuristic: Adds an item definition group after the last existing item definition group, if any; otherwise adds an item definition group after the last existing property group, if any; otherwise adds a new item definition group at the end of the project.</span></span></summary>
        <returns><span data-ttu-id="e46d2-137">添加的项定义组。</span><span class="sxs-lookup"><span data-stu-id="e46d2-137">The added item definition group.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e46d2-138">创建项定义组并将其添加到最后一个现有项定义组（如果有）之后。</span><span class="sxs-lookup"><span data-stu-id="e46d2-138">Creates and adds an item definition group after the last existing item definition group, if any.</span></span> <span data-ttu-id="e46d2-139">否则，将在最后一个现有属性组之后创建项定义组（如果有）。</span><span class="sxs-lookup"><span data-stu-id="e46d2-139">Otherwise, creates an item definition group after the last existing property group, if any.</span></span> <span data-ttu-id="e46d2-140">如果不存在任何属性组，则在项目的末尾创建一个新的项定义组。</span><span class="sxs-lookup"><span data-stu-id="e46d2-140">If no property group exists, creates a new item definition group at the end of the project.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddItemGroup">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Construction.ProjectItemGroupElement AddItemGroup ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Build.Construction.ProjectItemGroupElement AddItemGroup() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Construction.ProjectRootElement.AddItemGroup" />
      <MemberSignature Language="VB.NET" Value="Public Function AddItemGroup () As ProjectItemGroupElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Build::Construction::ProjectItemGroupElement ^ AddItemGroup();" />
      <MemberSignature Language="F#" Value="member this.AddItemGroup : unit -&gt; Microsoft.Build.Construction.ProjectItemGroupElement" Usage="projectRootElement.AddItemGroup " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Construction.ProjectItemGroupElement</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e46d2-141">基于启发式方法选取位置的便利方法：在现有的最后一个项组（如果有）后添加一个项组；否则，在最后一个现有属性组（如果有）后添加一个项组；否则，在项目的末尾添加一个新的项组。</span><span class="sxs-lookup"><span data-stu-id="e46d2-141">Convenience method that picks a location based on a heuristic: Adds an item group after the last existing item group, if any; otherwise adds an item group after the last existing property group, if any; otherwise adds a new item group at the end of the project.</span></span></summary>
        <returns><span data-ttu-id="e46d2-142">添加的项组。</span><span class="sxs-lookup"><span data-stu-id="e46d2-142">The added item group.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e46d2-143">创建项组，并将其添加到最后一个现有项组（如果有）之后。</span><span class="sxs-lookup"><span data-stu-id="e46d2-143">Creates and adds an item group after the last existing item group, if any.</span></span> <span data-ttu-id="e46d2-144">否则，将在最后一个现有属性组之后创建一个项组（如果有）。</span><span class="sxs-lookup"><span data-stu-id="e46d2-144">Otherwise, creates an item group after the last existing property group, if any.</span></span> <span data-ttu-id="e46d2-145">如果不存在任何属性组，则在项目的末尾创建一个新的项组。</span><span class="sxs-lookup"><span data-stu-id="e46d2-145">If no property group exists, creates a new item group at the end of the project.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddProperty">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Construction.ProjectPropertyElement AddProperty (string name, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Build.Construction.ProjectPropertyElement AddProperty(string name, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Construction.ProjectRootElement.AddProperty(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddProperty (name As String, value As String) As ProjectPropertyElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Build::Construction::ProjectPropertyElement ^ AddProperty(System::String ^ name, System::String ^ value);" />
      <MemberSignature Language="F#" Value="member this.AddProperty : string * string -&gt; Microsoft.Build.Construction.ProjectPropertyElement" Usage="projectRootElement.AddProperty (name, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Construction.ProjectPropertyElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="e46d2-146">要更新或添加的属性的名称。</span><span class="sxs-lookup"><span data-stu-id="e46d2-146">The name of the property to be updated or added.</span></span></param>
        <param name="value"><span data-ttu-id="e46d2-147">要更新或添加的属性的值。</span><span class="sxs-lookup"><span data-stu-id="e46d2-147">The value of the property to be updated or added.</span></span></param>
        <summary><span data-ttu-id="e46d2-148">基于启发式方法选取位置的便利方法。</span><span class="sxs-lookup"><span data-stu-id="e46d2-148">Convenience method that picks a location based on a heuristic.</span></span>
<span data-ttu-id="e46d2-149">使用指定名称更新现有的最后一个本身不含条件或其属性组（如果有）不含条件的属性。</span><span class="sxs-lookup"><span data-stu-id="e46d2-149">Updates the last existing property with the specified name that has no condition on itself or its property group, if any.</span></span>
<span data-ttu-id="e46d2-150">否则，在不含条件的第一个属性组中添加一个新属性，如果需要，在现有的最后一个属性组后或在项目开头创建一个属性组。</span><span class="sxs-lookup"><span data-stu-id="e46d2-150">Otherwise, adds a new property in the first property group without a condition, creating a property group if necessary after the last existing property group, else at the start of the project.</span></span></summary>
        <returns><span data-ttu-id="e46d2-151">更新或添加的属性。</span><span class="sxs-lookup"><span data-stu-id="e46d2-151">The updated or added property.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e46d2-152">更新具有指定的的最后一个现有属性 `name` ，该属性本身或包含它的属性组上没有 Condition 特性。</span><span class="sxs-lookup"><span data-stu-id="e46d2-152">Updates the last existing property with the specified `name` that has no Condition attribute on itself or on the property group that contains it.</span></span> <span data-ttu-id="e46d2-153">否则，将创建一个属性，并将其添加到不具有 Condition 特性的第一个属性组。</span><span class="sxs-lookup"><span data-stu-id="e46d2-153">Otherwise, creates a property and adds it to the first property group that has no Condition attribute.</span></span> <span data-ttu-id="e46d2-154">如果不存在这样的属性组，将在最后一个现有属性组之后创建一个属性组（如果有），并向其添加属性。</span><span class="sxs-lookup"><span data-stu-id="e46d2-154">If no such property group exists, creates a property group after the last existing property group, if any, and adds the property to it .</span></span> <span data-ttu-id="e46d2-155">否则，将创建属性组并将其添加到项目开头，并向其添加属性。</span><span class="sxs-lookup"><span data-stu-id="e46d2-155">Otherwise, creates and adds a property group to the start of the project, and adds the property to it.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPropertyGroup">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Construction.ProjectPropertyGroupElement AddPropertyGroup ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Build.Construction.ProjectPropertyGroupElement AddPropertyGroup() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Construction.ProjectRootElement.AddPropertyGroup" />
      <MemberSignature Language="VB.NET" Value="Public Function AddPropertyGroup () As ProjectPropertyGroupElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Build::Construction::ProjectPropertyGroupElement ^ AddPropertyGroup();" />
      <MemberSignature Language="F#" Value="member this.AddPropertyGroup : unit -&gt; Microsoft.Build.Construction.ProjectPropertyGroupElement" Usage="projectRootElement.AddPropertyGroup " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Construction.ProjectPropertyGroupElement</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e46d2-156">基于启发式方法选取位置的便利方法：在现有的最后一个属性组（如果有）后或者在项目开头添加一个新的属性组。</span><span class="sxs-lookup"><span data-stu-id="e46d2-156">Convenience method that picks a location based on a heuristic: Adds a new property group after the last existing property group, if any; otherwise at the start of the project.</span></span></summary>
        <returns><span data-ttu-id="e46d2-157">添加的属性组。</span><span class="sxs-lookup"><span data-stu-id="e46d2-157">The added property group.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e46d2-158">创建属性组，并将其添加到最后一个现有属性组（如果有）之后。</span><span class="sxs-lookup"><span data-stu-id="e46d2-158">Creates a property group and adds it after the last existing property group, if any.</span></span> <span data-ttu-id="e46d2-159">否则，会将属性组添加到项目的开头。</span><span class="sxs-lookup"><span data-stu-id="e46d2-159">Otherwise, adds the property group to the start of the project.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddTarget">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Construction.ProjectTargetElement AddTarget (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Build.Construction.ProjectTargetElement AddTarget(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Construction.ProjectRootElement.AddTarget(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddTarget (name As String) As ProjectTargetElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Build::Construction::ProjectTargetElement ^ AddTarget(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.AddTarget : string -&gt; Microsoft.Build.Construction.ProjectTargetElement" Usage="projectRootElement.AddTarget name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Construction.ProjectTargetElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="e46d2-160">要添加的目标的名称。</span><span class="sxs-lookup"><span data-stu-id="e46d2-160">The name of the target to be added.</span></span></param>
        <summary><span data-ttu-id="e46d2-161">基于启发式方法选取位置的便利方法：在项目的末尾创建一个目标。</span><span class="sxs-lookup"><span data-stu-id="e46d2-161">Convenience method that picks a location based on a heuristic: Creates a target at the end of the project.</span></span></summary>
        <returns><span data-ttu-id="e46d2-162">添加的目标。</span><span class="sxs-lookup"><span data-stu-id="e46d2-162">The added target.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e46d2-163">基于试探选取位置的便利方法：在项目的末尾创建一个目标。</span><span class="sxs-lookup"><span data-stu-id="e46d2-163">Convenience method that picks a location based on a heuristic: Creates a target at the end of the project.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddUsingTask">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Construction.ProjectUsingTaskElement AddUsingTask (string name, string assemblyFile, string assemblyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Build.Construction.ProjectUsingTaskElement AddUsingTask(string name, string assemblyFile, string assemblyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Construction.ProjectRootElement.AddUsingTask(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddUsingTask (name As String, assemblyFile As String, assemblyName As String) As ProjectUsingTaskElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Build::Construction::ProjectUsingTaskElement ^ AddUsingTask(System::String ^ name, System::String ^ assemblyFile, System::String ^ assemblyName);" />
      <MemberSignature Language="F#" Value="member this.AddUsingTask : string * string * string -&gt; Microsoft.Build.Construction.ProjectUsingTaskElement" Usage="projectRootElement.AddUsingTask (name, assemblyFile, assemblyName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Construction.ProjectUsingTaskElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="assemblyFile" Type="System.String" />
        <Parameter Name="assemblyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="e46d2-164">任务名。</span><span class="sxs-lookup"><span data-stu-id="e46d2-164">The task name.</span></span></param>
        <param name="assemblyFile"><span data-ttu-id="e46d2-165">程序集的文件路径。</span><span class="sxs-lookup"><span data-stu-id="e46d2-165">The file path to the assembly.</span></span></param>
        <param name="assemblyName"><span data-ttu-id="e46d2-166">要加载的程序集的名称。</span><span class="sxs-lookup"><span data-stu-id="e46d2-166">The name of the assembly to load.</span></span></param>
        <summary><span data-ttu-id="e46d2-167">基于启发式方法选取位置的便利方法：在项目的末尾创建一个 usingtask。</span><span class="sxs-lookup"><span data-stu-id="e46d2-167">Convenience method that picks a location based on a heuristic: Creates a usingtask at the end of the project.</span></span>
<span data-ttu-id="e46d2-168">assemblyName 或 assemblyFile 必须为 null。</span><span class="sxs-lookup"><span data-stu-id="e46d2-168">Exactly one of assemblyName or assemblyFile must be null.</span></span></summary>
        <returns><span data-ttu-id="e46d2-169">添加的 UsingTask 元素。</span><span class="sxs-lookup"><span data-stu-id="e46d2-169">The added UsingTask element.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e46d2-170">`assemblyName`或 `assemblyFile` 必须为 null，但不能同时为两者。</span><span class="sxs-lookup"><span data-stu-id="e46d2-170">Either the `assemblyName` or `assemblyFile` must be null, but not both.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ChooseElements">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;Microsoft.Build.Construction.ProjectChooseElement&gt; ChooseElements { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;class Microsoft.Build.Construction.ProjectChooseElement&gt; ChooseElements" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Construction.ProjectRootElement.ChooseElements" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ChooseElements As ICollection(Of ProjectChooseElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::ICollection&lt;Microsoft::Build::Construction::ProjectChooseElement ^&gt; ^ ChooseElements { System::Collections::Generic::ICollection&lt;Microsoft::Build::Construction::ProjectChooseElement ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ChooseElements : System.Collections.Generic.ICollection&lt;Microsoft.Build.Construction.ProjectChooseElement&gt;" Usage="Microsoft.Build.Construction.ProjectRootElement.ChooseElements" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;Microsoft.Build.Construction.ProjectChooseElement&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e46d2-171">获取子选择的只读集合（如果有）</span><span class="sxs-lookup"><span data-stu-id="e46d2-171">Get a read-only collection of the child chooses, if any</span></span></summary>
        <value><span data-ttu-id="e46d2-172">所有子选择元素。</span><span class="sxs-lookup"><span data-stu-id="e46d2-172">All child Choose elements.</span></span></value>
        <remarks><span data-ttu-id="e46d2-173">此名称不一致，因此，每个 API 检查的名称更易于理解。</span><span class="sxs-lookup"><span data-stu-id="e46d2-173">The name is inconsistent to make it more understandable, per API review.</span></span></remarks>
      </Docs>
    </Member>
    <Member MemberName="Condition">
      <MemberSignature Language="C#" Value="public override string Condition { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Condition" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Construction.ProjectRootElement.Condition" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Condition As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Condition { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Condition : string with get, set" Usage="Microsoft.Build.Construction.ProjectRootElement.Condition" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e46d2-174">绝不要设置条件，但 Getter 返回 NULL，而不是引发异常，因为“不存在”条件隐式为 true</span><span class="sxs-lookup"><span data-stu-id="e46d2-174">Condition should never be set, but the getter returns null instead of throwing because a nonexistent condition is implicitly true</span></span></summary>
        <value><span data-ttu-id="e46d2-175">始终返回 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="e46d2-175">Always returns <see langword="null" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConditionLocation">
      <MemberSignature Language="C#" Value="public override Microsoft.Build.Construction.ElementLocation ConditionLocation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Build.Construction.ElementLocation ConditionLocation" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Construction.ProjectRootElement.ConditionLocation" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ConditionLocation As ElementLocation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Microsoft::Build::Construction::ElementLocation ^ ConditionLocation { Microsoft::Build::Construction::ElementLocation ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ConditionLocation : Microsoft.Build.Construction.ElementLocation" Usage="Microsoft.Build.Construction.ProjectRootElement.ConditionLocation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Construction.ElementLocation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e46d2-176">此构造函数不允许这些情况，因此不应调用它。</span><span class="sxs-lookup"><span data-stu-id="e46d2-176">This does not allow conditions, so it should not be called.</span></span></summary>
        <value><span data-ttu-id="e46d2-177">始终返回 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="e46d2-177">Always returns <see langword="null" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Create">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e46d2-178">创建并初始化一个内存中的空 ProjectRootElement 实例，并将其添加到全局项目集合中。</span><span class="sxs-lookup"><span data-stu-id="e46d2-178">Creates and initializes an in-memory, empty ProjectRootElement instance and adds it to the global project collection.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static Microsoft.Build.Construction.ProjectRootElement Create ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Build.Construction.ProjectRootElement Create() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Construction.ProjectRootElement.Create" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create () As ProjectRootElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Microsoft::Build::Construction::ProjectRootElement ^ Create();" />
      <MemberSignature Language="F#" Value="static member Create : unit -&gt; Microsoft.Build.Construction.ProjectRootElement" Usage="Microsoft.Build.Construction.ProjectRootElement.Create " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Construction.ProjectRootElement</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e46d2-179">初始化一个可在以后保存的、内存中的空 ProjectRootElement 实例。</span><span class="sxs-lookup"><span data-stu-id="e46d2-179">Initialize an in-memory, empty ProjectRootElement instance that can be saved later.</span></span>
<span data-ttu-id="e46d2-180">使用全局项目集合。</span><span class="sxs-lookup"><span data-stu-id="e46d2-180">Uses the global project collection.</span></span></summary>
        <returns><span data-ttu-id="e46d2-181">新的项目根。</span><span class="sxs-lookup"><span data-stu-id="e46d2-181">The new project root.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static Microsoft.Build.Construction.ProjectRootElement Create (Microsoft.Build.Evaluation.NewProjectFileOptions projectFileOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Build.Construction.ProjectRootElement Create(valuetype Microsoft.Build.Evaluation.NewProjectFileOptions projectFileOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Construction.ProjectRootElement.Create(Microsoft.Build.Evaluation.NewProjectFileOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (projectFileOptions As NewProjectFileOptions) As ProjectRootElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Microsoft::Build::Construction::ProjectRootElement ^ Create(Microsoft::Build::Evaluation::NewProjectFileOptions projectFileOptions);" />
      <MemberSignature Language="F#" Value="static member Create : Microsoft.Build.Evaluation.NewProjectFileOptions -&gt; Microsoft.Build.Construction.ProjectRootElement" Usage="Microsoft.Build.Construction.ProjectRootElement.Create projectFileOptions" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Construction.ProjectRootElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="projectFileOptions" Type="Microsoft.Build.Evaluation.NewProjectFileOptions" Index="0" FrameworkAlternate="msbuild-15;msbuild-15-netcore;msbuild-16;msbuild-16-netcore" />
      </Parameters>
      <Docs>
        <param name="projectFileOptions">To be added.</param>
        <summary><span data-ttu-id="e46d2-182">初始化一个可在以后使用指定的 <see cref="T:Microsoft.Build.Evaluation.NewProjectFileOptions" /> 保存的、内存中的空 ProjectRootElement 实例。</span><span class="sxs-lookup"><span data-stu-id="e46d2-182">Initialize an in-memory, empty ProjectRootElement instance that can be saved later using the specified <see cref="T:Microsoft.Build.Evaluation.NewProjectFileOptions" />.</span></span>
<span data-ttu-id="e46d2-183">使用全局项目集合。</span><span class="sxs-lookup"><span data-stu-id="e46d2-183">Uses the global project collection.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static Microsoft.Build.Construction.ProjectRootElement Create (Microsoft.Build.Evaluation.ProjectCollection projectCollection);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Build.Construction.ProjectRootElement Create(class Microsoft.Build.Evaluation.ProjectCollection projectCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Construction.ProjectRootElement.Create(Microsoft.Build.Evaluation.ProjectCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (projectCollection As ProjectCollection) As ProjectRootElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Microsoft::Build::Construction::ProjectRootElement ^ Create(Microsoft::Build::Evaluation::ProjectCollection ^ projectCollection);" />
      <MemberSignature Language="F#" Value="static member Create : Microsoft.Build.Evaluation.ProjectCollection -&gt; Microsoft.Build.Construction.ProjectRootElement" Usage="Microsoft.Build.Construction.ProjectRootElement.Create projectCollection" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Construction.ProjectRootElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="projectCollection" Type="Microsoft.Build.Evaluation.ProjectCollection" />
      </Parameters>
      <Docs>
        <param name="projectCollection"><span data-ttu-id="e46d2-184">要添加到的项目集合。</span><span class="sxs-lookup"><span data-stu-id="e46d2-184">The project collection to be added to.</span></span></param>
        <summary><span data-ttu-id="e46d2-185">初始化一个可在以后保存的、内存中的空 ProjectRootElement 实例。</span><span class="sxs-lookup"><span data-stu-id="e46d2-185">Initialize an in-memory, empty ProjectRootElement instance that can be saved later.</span></span>
<span data-ttu-id="e46d2-186">使用指定的项目集合。</span><span class="sxs-lookup"><span data-stu-id="e46d2-186">Uses the specified project collection.</span></span></summary>
        <returns><span data-ttu-id="e46d2-187">新的项目根。</span><span class="sxs-lookup"><span data-stu-id="e46d2-187">The new project root.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static Microsoft.Build.Construction.ProjectRootElement Create (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Build.Construction.ProjectRootElement Create(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Construction.ProjectRootElement.Create(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (path As String) As ProjectRootElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Microsoft::Build::Construction::ProjectRootElement ^ Create(System::String ^ path);" />
      <MemberSignature Language="F#" Value="static member Create : string -&gt; Microsoft.Build.Construction.ProjectRootElement" Usage="Microsoft.Build.Construction.ProjectRootElement.Create path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Construction.ProjectRootElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="e46d2-188">指向用于初始化的数据的文件路径。</span><span class="sxs-lookup"><span data-stu-id="e46d2-188">The file path to the data used for initialization.</span></span></param>
        <summary><span data-ttu-id="e46d2-189">初始化一个可在以后保存的、内存中的空 ProjectRootElement 实例。</span><span class="sxs-lookup"><span data-stu-id="e46d2-189">Initialize an in-memory, empty ProjectRootElement instance that can be saved later.</span></span>
<span data-ttu-id="e46d2-190">使用全局项目集合。</span><span class="sxs-lookup"><span data-stu-id="e46d2-190">Uses the global project collection.</span></span></summary>
        <returns><span data-ttu-id="e46d2-191">新的项目根。</span><span class="sxs-lookup"><span data-stu-id="e46d2-191">The new project root.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static Microsoft.Build.Construction.ProjectRootElement Create (System.Xml.XmlReader xmlReader);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Build.Construction.ProjectRootElement Create(class System.Xml.XmlReader xmlReader) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Construction.ProjectRootElement.Create(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (xmlReader As XmlReader) As ProjectRootElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Microsoft::Build::Construction::ProjectRootElement ^ Create(System::Xml::XmlReader ^ xmlReader);" />
      <MemberSignature Language="F#" Value="static member Create : System.Xml.XmlReader -&gt; Microsoft.Build.Construction.ProjectRootElement" Usage="Microsoft.Build.Construction.ProjectRootElement.Create xmlReader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Construction.ProjectRootElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xmlReader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="xmlReader"><span data-ttu-id="e46d2-192">用于初始化的 XML 读取器。</span><span class="sxs-lookup"><span data-stu-id="e46d2-192">The XML reader used for initialization.</span></span></param>
        <summary><span data-ttu-id="e46d2-193">从 XmlReader 初始化一个 ProjectRootElement 实例。</span><span class="sxs-lookup"><span data-stu-id="e46d2-193">Initialize a ProjectRootElement instance from an XmlReader.</span></span>
<span data-ttu-id="e46d2-194">使用全局项目集合。</span><span class="sxs-lookup"><span data-stu-id="e46d2-194">Uses the global project collection.</span></span>
<span data-ttu-id="e46d2-195">可能会引发 InvalidProjectFileException。</span><span class="sxs-lookup"><span data-stu-id="e46d2-195">May throw InvalidProjectFileException.</span></span></summary>
        <returns><span data-ttu-id="e46d2-196">新的项目根。</span><span class="sxs-lookup"><span data-stu-id="e46d2-196">The new project root.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e46d2-197">可能会引发 Microsoft.build.buildengine.invalidprojectfileexception。</span><span class="sxs-lookup"><span data-stu-id="e46d2-197">May throw InvalidProjectFileException.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static Microsoft.Build.Construction.ProjectRootElement Create (Microsoft.Build.Evaluation.ProjectCollection projectCollection, Microsoft.Build.Evaluation.NewProjectFileOptions projectFileOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Build.Construction.ProjectRootElement Create(class Microsoft.Build.Evaluation.ProjectCollection projectCollection, valuetype Microsoft.Build.Evaluation.NewProjectFileOptions projectFileOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Construction.ProjectRootElement.Create(Microsoft.Build.Evaluation.ProjectCollection,Microsoft.Build.Evaluation.NewProjectFileOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (projectCollection As ProjectCollection, projectFileOptions As NewProjectFileOptions) As ProjectRootElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Microsoft::Build::Construction::ProjectRootElement ^ Create(Microsoft::Build::Evaluation::ProjectCollection ^ projectCollection, Microsoft::Build::Evaluation::NewProjectFileOptions projectFileOptions);" />
      <MemberSignature Language="F#" Value="static member Create : Microsoft.Build.Evaluation.ProjectCollection * Microsoft.Build.Evaluation.NewProjectFileOptions -&gt; Microsoft.Build.Construction.ProjectRootElement" Usage="Microsoft.Build.Construction.ProjectRootElement.Create (projectCollection, projectFileOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Construction.ProjectRootElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="projectCollection" Type="Microsoft.Build.Evaluation.ProjectCollection" Index="0" FrameworkAlternate="msbuild-15;msbuild-15-netcore;msbuild-16;msbuild-16-netcore" />
        <Parameter Name="projectFileOptions" Type="Microsoft.Build.Evaluation.NewProjectFileOptions" Index="1" FrameworkAlternate="msbuild-15;msbuild-15-netcore;msbuild-16;msbuild-16-netcore" />
      </Parameters>
      <Docs>
        <param name="projectCollection">To be added.</param>
        <param name="projectFileOptions">To be added.</param>
        <summary><span data-ttu-id="e46d2-198">初始化一个可在以后使用指定的 <see cref="T:Microsoft.Build.Evaluation.ProjectCollection" /> 和 <see cref="T:Microsoft.Build.Evaluation.NewProjectFileOptions" /> 保存的、内存中的空 ProjectRootElement 实例。</span><span class="sxs-lookup"><span data-stu-id="e46d2-198">Initialize an in-memory, empty ProjectRootElement instance that can be saved later using the specified <see cref="T:Microsoft.Build.Evaluation.ProjectCollection" /> and <see cref="T:Microsoft.Build.Evaluation.NewProjectFileOptions" />.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static Microsoft.Build.Construction.ProjectRootElement Create (string path, Microsoft.Build.Evaluation.NewProjectFileOptions newProjectFileOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Build.Construction.ProjectRootElement Create(string path, valuetype Microsoft.Build.Evaluation.NewProjectFileOptions newProjectFileOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Construction.ProjectRootElement.Create(System.String,Microsoft.Build.Evaluation.NewProjectFileOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (path As String, newProjectFileOptions As NewProjectFileOptions) As ProjectRootElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Microsoft::Build::Construction::ProjectRootElement ^ Create(System::String ^ path, Microsoft::Build::Evaluation::NewProjectFileOptions newProjectFileOptions);" />
      <MemberSignature Language="F#" Value="static member Create : string * Microsoft.Build.Evaluation.NewProjectFileOptions -&gt; Microsoft.Build.Construction.ProjectRootElement" Usage="Microsoft.Build.Construction.ProjectRootElement.Create (path, newProjectFileOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Construction.ProjectRootElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" Index="0" FrameworkAlternate="msbuild-15;msbuild-15-netcore;msbuild-16;msbuild-16-netcore" />
        <Parameter Name="newProjectFileOptions" Type="Microsoft.Build.Evaluation.NewProjectFileOptions" Index="1" FrameworkAlternate="msbuild-15;msbuild-15-netcore;msbuild-16;msbuild-16-netcore" />
      </Parameters>
      <Docs>
        <param name="path">To be added.</param>
        <param name="newProjectFileOptions">To be added.</param>
        <summary><span data-ttu-id="e46d2-199">初始化一个可在以后使用指定的路径和 <see cref="T:Microsoft.Build.Evaluation.NewProjectFileOptions" /> 保存的、内存中的空 ProjectRootElement 实例。</span><span class="sxs-lookup"><span data-stu-id="e46d2-199">Initialize an in-memory, empty ProjectRootElement instance that can be saved later using the specified path and <see cref="T:Microsoft.Build.Evaluation.NewProjectFileOptions" />.</span></span>
<span data-ttu-id="e46d2-200">使用全局项目集合。</span><span class="sxs-lookup"><span data-stu-id="e46d2-200">Uses the global project collection.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static Microsoft.Build.Construction.ProjectRootElement Create (string path, Microsoft.Build.Evaluation.ProjectCollection projectCollection);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Build.Construction.ProjectRootElement Create(string path, class Microsoft.Build.Evaluation.ProjectCollection projectCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Construction.ProjectRootElement.Create(System.String,Microsoft.Build.Evaluation.ProjectCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (path As String, projectCollection As ProjectCollection) As ProjectRootElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Microsoft::Build::Construction::ProjectRootElement ^ Create(System::String ^ path, Microsoft::Build::Evaluation::ProjectCollection ^ projectCollection);" />
      <MemberSignature Language="F#" Value="static member Create : string * Microsoft.Build.Evaluation.ProjectCollection -&gt; Microsoft.Build.Construction.ProjectRootElement" Usage="Microsoft.Build.Construction.ProjectRootElement.Create (path, projectCollection)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Construction.ProjectRootElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="projectCollection" Type="Microsoft.Build.Evaluation.ProjectCollection" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="e46d2-201">指向用于初始化的数据的文件路径。</span><span class="sxs-lookup"><span data-stu-id="e46d2-201">The file path to the data used for initialization.</span></span></param>
        <param name="projectCollection"><span data-ttu-id="e46d2-202">要添加到的项目集合。</span><span class="sxs-lookup"><span data-stu-id="e46d2-202">The project collection to be added to.</span></span></param>
        <summary><span data-ttu-id="e46d2-203">初始化一个可在以后保存的、内存中的空 ProjectRootElement 实例。</span><span class="sxs-lookup"><span data-stu-id="e46d2-203">Initialize an in-memory, empty ProjectRootElement instance that can be saved later.</span></span>
<span data-ttu-id="e46d2-204">使用指定的项目集合。</span><span class="sxs-lookup"><span data-stu-id="e46d2-204">Uses the specified project collection.</span></span></summary>
        <returns><span data-ttu-id="e46d2-205">新的项目根。</span><span class="sxs-lookup"><span data-stu-id="e46d2-205">The new project root.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static Microsoft.Build.Construction.ProjectRootElement Create (System.Xml.XmlReader xmlReader, Microsoft.Build.Evaluation.ProjectCollection projectCollection);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Build.Construction.ProjectRootElement Create(class System.Xml.XmlReader xmlReader, class Microsoft.Build.Evaluation.ProjectCollection projectCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Construction.ProjectRootElement.Create(System.Xml.XmlReader,Microsoft.Build.Evaluation.ProjectCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (xmlReader As XmlReader, projectCollection As ProjectCollection) As ProjectRootElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Microsoft::Build::Construction::ProjectRootElement ^ Create(System::Xml::XmlReader ^ xmlReader, Microsoft::Build::Evaluation::ProjectCollection ^ projectCollection);" />
      <MemberSignature Language="F#" Value="static member Create : System.Xml.XmlReader * Microsoft.Build.Evaluation.ProjectCollection -&gt; Microsoft.Build.Construction.ProjectRootElement" Usage="Microsoft.Build.Construction.ProjectRootElement.Create (xmlReader, projectCollection)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Construction.ProjectRootElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xmlReader" Type="System.Xml.XmlReader" />
        <Parameter Name="projectCollection" Type="Microsoft.Build.Evaluation.ProjectCollection" />
      </Parameters>
      <Docs>
        <param name="xmlReader"><span data-ttu-id="e46d2-206">用于初始化的 XML 读取器。</span><span class="sxs-lookup"><span data-stu-id="e46d2-206">The XML reader used for initialization.</span></span></param>
        <param name="projectCollection"><span data-ttu-id="e46d2-207">要添加到的项目集合。</span><span class="sxs-lookup"><span data-stu-id="e46d2-207">The project collection to be added to.</span></span></param>
        <summary><span data-ttu-id="e46d2-208">从 XmlReader 初始化一个 ProjectRootElement 实例。</span><span class="sxs-lookup"><span data-stu-id="e46d2-208">Initialize a ProjectRootElement instance from an XmlReader.</span></span>
<span data-ttu-id="e46d2-209">使用指定的项目集合。</span><span class="sxs-lookup"><span data-stu-id="e46d2-209">Uses the specified project collection.</span></span>
<span data-ttu-id="e46d2-210">可能会引发 InvalidProjectFileException。</span><span class="sxs-lookup"><span data-stu-id="e46d2-210">May throw InvalidProjectFileException.</span></span></summary>
        <returns><span data-ttu-id="e46d2-211">新的项目根。</span><span class="sxs-lookup"><span data-stu-id="e46d2-211">The new project root.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e46d2-212">可能会引发 Microsoft.build.buildengine.invalidprojectfileexception。</span><span class="sxs-lookup"><span data-stu-id="e46d2-212">May throw InvalidProjectFileException.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static Microsoft.Build.Construction.ProjectRootElement Create (string path, Microsoft.Build.Evaluation.ProjectCollection projectCollection, Microsoft.Build.Evaluation.NewProjectFileOptions newProjectFileOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Build.Construction.ProjectRootElement Create(string path, class Microsoft.Build.Evaluation.ProjectCollection projectCollection, valuetype Microsoft.Build.Evaluation.NewProjectFileOptions newProjectFileOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Construction.ProjectRootElement.Create(System.String,Microsoft.Build.Evaluation.ProjectCollection,Microsoft.Build.Evaluation.NewProjectFileOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (path As String, projectCollection As ProjectCollection, newProjectFileOptions As NewProjectFileOptions) As ProjectRootElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Microsoft::Build::Construction::ProjectRootElement ^ Create(System::String ^ path, Microsoft::Build::Evaluation::ProjectCollection ^ projectCollection, Microsoft::Build::Evaluation::NewProjectFileOptions newProjectFileOptions);" />
      <MemberSignature Language="F#" Value="static member Create : string * Microsoft.Build.Evaluation.ProjectCollection * Microsoft.Build.Evaluation.NewProjectFileOptions -&gt; Microsoft.Build.Construction.ProjectRootElement" Usage="Microsoft.Build.Construction.ProjectRootElement.Create (path, projectCollection, newProjectFileOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Construction.ProjectRootElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" Index="0" FrameworkAlternate="msbuild-15;msbuild-15-netcore;msbuild-16;msbuild-16-netcore" />
        <Parameter Name="projectCollection" Type="Microsoft.Build.Evaluation.ProjectCollection" Index="1" FrameworkAlternate="msbuild-15;msbuild-15-netcore;msbuild-16;msbuild-16-netcore" />
        <Parameter Name="newProjectFileOptions" Type="Microsoft.Build.Evaluation.NewProjectFileOptions" Index="2" FrameworkAlternate="msbuild-15;msbuild-15-netcore;msbuild-16;msbuild-16-netcore" />
      </Parameters>
      <Docs>
        <param name="path">To be added.</param>
        <param name="projectCollection">To be added.</param>
        <param name="newProjectFileOptions">To be added.</param>
        <summary><span data-ttu-id="e46d2-213">初始化一个可在以后保存的、内存中的空 ProjectRootElement 实例。</span><span class="sxs-lookup"><span data-stu-id="e46d2-213">Initialize an in-memory, empty ProjectRootElement instance that can be saved later.</span></span>
<span data-ttu-id="e46d2-214">使用指定的项目集合。</span><span class="sxs-lookup"><span data-stu-id="e46d2-214">Uses the specified project collection.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static Microsoft.Build.Construction.ProjectRootElement Create (System.Xml.XmlReader xmlReader, Microsoft.Build.Evaluation.ProjectCollection projectCollection, bool preserveFormatting);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Build.Construction.ProjectRootElement Create(class System.Xml.XmlReader xmlReader, class Microsoft.Build.Evaluation.ProjectCollection projectCollection, bool preserveFormatting) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Construction.ProjectRootElement.Create(System.Xml.XmlReader,Microsoft.Build.Evaluation.ProjectCollection,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (xmlReader As XmlReader, projectCollection As ProjectCollection, preserveFormatting As Boolean) As ProjectRootElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Microsoft::Build::Construction::ProjectRootElement ^ Create(System::Xml::XmlReader ^ xmlReader, Microsoft::Build::Evaluation::ProjectCollection ^ projectCollection, bool preserveFormatting);" />
      <MemberSignature Language="F#" Value="static member Create : System.Xml.XmlReader * Microsoft.Build.Evaluation.ProjectCollection * bool -&gt; Microsoft.Build.Construction.ProjectRootElement" Usage="Microsoft.Build.Construction.ProjectRootElement.Create (xmlReader, projectCollection, preserveFormatting)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Construction.ProjectRootElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xmlReader" Type="System.Xml.XmlReader" Index="0" FrameworkAlternate="msbuild-15;msbuild-15-netcore;msbuild-16;msbuild-16-netcore" />
        <Parameter Name="projectCollection" Type="Microsoft.Build.Evaluation.ProjectCollection" Index="1" FrameworkAlternate="msbuild-15;msbuild-15-netcore;msbuild-16;msbuild-16-netcore" />
        <Parameter Name="preserveFormatting" Type="System.Boolean" Index="2" FrameworkAlternate="msbuild-15;msbuild-15-netcore;msbuild-16;msbuild-16-netcore" />
      </Parameters>
      <Docs>
        <param name="xmlReader">To be added.</param>
        <param name="projectCollection">To be added.</param>
        <param name="preserveFormatting">To be added.</param>
        <summary><span data-ttu-id="e46d2-215">从 XmlReader 初始化一个 ProjectRootElement 实例。</span><span class="sxs-lookup"><span data-stu-id="e46d2-215">Initialize a ProjectRootElement instance from an XmlReader.</span></span>
<span data-ttu-id="e46d2-216">使用指定的项目集合。</span><span class="sxs-lookup"><span data-stu-id="e46d2-216">Uses the specified project collection.</span></span>
<span data-ttu-id="e46d2-217">可能会引发 InvalidProjectFileException。</span><span class="sxs-lookup"><span data-stu-id="e46d2-217">May throw InvalidProjectFileException.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateChooseElement">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Construction.ProjectChooseElement CreateChooseElement ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Build.Construction.ProjectChooseElement CreateChooseElement() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Construction.ProjectRootElement.CreateChooseElement" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateChooseElement () As ProjectChooseElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Build::Construction::ProjectChooseElement ^ CreateChooseElement();" />
      <MemberSignature Language="F#" Value="member this.CreateChooseElement : unit -&gt; Microsoft.Build.Construction.ProjectChooseElement" Usage="projectRootElement.CreateChooseElement " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Construction.ProjectChooseElement</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e46d2-218">创建一个选择。</span><span class="sxs-lookup"><span data-stu-id="e46d2-218">Creates a choose.</span></span>
<span data-ttu-id="e46d2-219">调用方必须将其添加到项目中的选项位置。</span><span class="sxs-lookup"><span data-stu-id="e46d2-219">Caller must add it to the location of choice in the project.</span></span></summary>
        <returns><span data-ttu-id="e46d2-220"><see cref="T:Microsoft.Build.Construction.ProjectChooseElement" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="e46d2-220">A <see cref="T:Microsoft.Build.Construction.ProjectChooseElement" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e46d2-221">调用方必须将 Choose 元素添加到项目中的选择位置。</span><span class="sxs-lookup"><span data-stu-id="e46d2-221">Caller must add the Choose element to the location of choice in the project.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateImportElement">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Construction.ProjectImportElement CreateImportElement (string project);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Build.Construction.ProjectImportElement CreateImportElement(string project) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Construction.ProjectRootElement.CreateImportElement(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateImportElement (project As String) As ProjectImportElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Build::Construction::ProjectImportElement ^ CreateImportElement(System::String ^ project);" />
      <MemberSignature Language="F#" Value="member this.CreateImportElement : string -&gt; Microsoft.Build.Construction.ProjectImportElement" Usage="projectRootElement.CreateImportElement project" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Construction.ProjectImportElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="project"><span data-ttu-id="e46d2-222">要导入的项目。</span><span class="sxs-lookup"><span data-stu-id="e46d2-222">The project to be imported.</span></span></param>
        <summary><span data-ttu-id="e46d2-223">创建一个导入。</span><span class="sxs-lookup"><span data-stu-id="e46d2-223">Creates an import.</span></span>
<span data-ttu-id="e46d2-224">调用方必须将其添加到项目中的选项位置。</span><span class="sxs-lookup"><span data-stu-id="e46d2-224">Caller must add it to the location of choice in the project.</span></span></summary>
        <returns><span data-ttu-id="e46d2-225">创建的 Import 元素。</span><span class="sxs-lookup"><span data-stu-id="e46d2-225">The created Import element.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e46d2-226">调用方必须将 Import 元素添加到项目中的选择位置。</span><span class="sxs-lookup"><span data-stu-id="e46d2-226">Caller must add the Import element to the location of choice in the project.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateImportGroupElement">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Construction.ProjectImportGroupElement CreateImportGroupElement ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Build.Construction.ProjectImportGroupElement CreateImportGroupElement() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Construction.ProjectRootElement.CreateImportGroupElement" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateImportGroupElement () As ProjectImportGroupElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Build::Construction::ProjectImportGroupElement ^ CreateImportGroupElement();" />
      <MemberSignature Language="F#" Value="member this.CreateImportGroupElement : unit -&gt; Microsoft.Build.Construction.ProjectImportGroupElement" Usage="projectRootElement.CreateImportGroupElement " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Construction.ProjectImportGroupElement</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e46d2-227">创建一个导入组。</span><span class="sxs-lookup"><span data-stu-id="e46d2-227">Creates an import group.</span></span> <span data-ttu-id="e46d2-228">调用方必须将其添加到项目中的选项位置。</span><span class="sxs-lookup"><span data-stu-id="e46d2-228">Caller must add it to the location of choice in the project.</span></span></summary>
        <returns><span data-ttu-id="e46d2-229">导入组。</span><span class="sxs-lookup"><span data-stu-id="e46d2-229">The import group.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e46d2-230">调用方必须将导入组添加到项目中的选择位置。</span><span class="sxs-lookup"><span data-stu-id="e46d2-230">Caller must add the import group to the location of choice in the project.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateItemDefinitionElement">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Construction.ProjectItemDefinitionElement CreateItemDefinitionElement (string itemType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Build.Construction.ProjectItemDefinitionElement CreateItemDefinitionElement(string itemType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Construction.ProjectRootElement.CreateItemDefinitionElement(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateItemDefinitionElement (itemType As String) As ProjectItemDefinitionElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Build::Construction::ProjectItemDefinitionElement ^ CreateItemDefinitionElement(System::String ^ itemType);" />
      <MemberSignature Language="F#" Value="member this.CreateItemDefinitionElement : string -&gt; Microsoft.Build.Construction.ProjectItemDefinitionElement" Usage="projectRootElement.CreateItemDefinitionElement itemType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Construction.ProjectItemDefinitionElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="itemType"><span data-ttu-id="e46d2-231">该项定义的项类型。</span><span class="sxs-lookup"><span data-stu-id="e46d2-231">The item type of the item definition.</span></span></param>
        <summary><span data-ttu-id="e46d2-232">创建一个项定义。</span><span class="sxs-lookup"><span data-stu-id="e46d2-232">Creates an item definition.</span></span>
<span data-ttu-id="e46d2-233">调用方必须将其添加到项目中的选项位置。</span><span class="sxs-lookup"><span data-stu-id="e46d2-233">Caller must add it to the location of choice in the project.</span></span></summary>
        <returns><span data-ttu-id="e46d2-234">项定义。</span><span class="sxs-lookup"><span data-stu-id="e46d2-234">The item definition.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e46d2-235">调用方必须将项定义添加到项目中的选择位置。</span><span class="sxs-lookup"><span data-stu-id="e46d2-235">Caller must add the item definition to the location of choice in the project.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateItemDefinitionGroupElement">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Construction.ProjectItemDefinitionGroupElement CreateItemDefinitionGroupElement ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Build.Construction.ProjectItemDefinitionGroupElement CreateItemDefinitionGroupElement() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Construction.ProjectRootElement.CreateItemDefinitionGroupElement" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateItemDefinitionGroupElement () As ProjectItemDefinitionGroupElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Build::Construction::ProjectItemDefinitionGroupElement ^ CreateItemDefinitionGroupElement();" />
      <MemberSignature Language="F#" Value="member this.CreateItemDefinitionGroupElement : unit -&gt; Microsoft.Build.Construction.ProjectItemDefinitionGroupElement" Usage="projectRootElement.CreateItemDefinitionGroupElement " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Construction.ProjectItemDefinitionGroupElement</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e46d2-236">创建一个项定义组。</span><span class="sxs-lookup"><span data-stu-id="e46d2-236">Creates an item definition group.</span></span>
<span data-ttu-id="e46d2-237">调用方必须将其添加到项目中的选项位置。</span><span class="sxs-lookup"><span data-stu-id="e46d2-237">Caller must add it to the location of choice in the project.</span></span></summary>
        <returns><span data-ttu-id="e46d2-238">项定义组。</span><span class="sxs-lookup"><span data-stu-id="e46d2-238">The item definition group.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e46d2-239">调用方必须将项定义组添加到项目中的选择位置。</span><span class="sxs-lookup"><span data-stu-id="e46d2-239">Caller must add the item definition group to the location of choice in the project.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateItemElement">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e46d2-240">创建一个项。</span><span class="sxs-lookup"><span data-stu-id="e46d2-240">Creates an item.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateItemElement">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Construction.ProjectItemElement CreateItemElement (string itemType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Build.Construction.ProjectItemElement CreateItemElement(string itemType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Construction.ProjectRootElement.CreateItemElement(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateItemElement (itemType As String) As ProjectItemElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Build::Construction::ProjectItemElement ^ CreateItemElement(System::String ^ itemType);" />
      <MemberSignature Language="F#" Value="member this.CreateItemElement : string -&gt; Microsoft.Build.Construction.ProjectItemElement" Usage="projectRootElement.CreateItemElement itemType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Construction.ProjectItemElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="itemType"><span data-ttu-id="e46d2-241">该项的项类型。</span><span class="sxs-lookup"><span data-stu-id="e46d2-241">The item type of the item.</span></span></param>
        <summary><span data-ttu-id="e46d2-242">创建一个项节点。</span><span class="sxs-lookup"><span data-stu-id="e46d2-242">Creates an item node.</span></span>
<span data-ttu-id="e46d2-243">调用方必须将其添加到项目中的选项位置。</span><span class="sxs-lookup"><span data-stu-id="e46d2-243">Caller must add it to the location of choice in the project.</span></span></summary>
        <returns><span data-ttu-id="e46d2-244">项。</span><span class="sxs-lookup"><span data-stu-id="e46d2-244">The item.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e46d2-245">调用方必须将该项添加到项目中的选择位置。</span><span class="sxs-lookup"><span data-stu-id="e46d2-245">Caller must add the item to the location of choice in the project.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateItemElement">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Construction.ProjectItemElement CreateItemElement (string itemType, string include);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Build.Construction.ProjectItemElement CreateItemElement(string itemType, string include) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Construction.ProjectRootElement.CreateItemElement(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateItemElement (itemType As String, include As String) As ProjectItemElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Build::Construction::ProjectItemElement ^ CreateItemElement(System::String ^ itemType, System::String ^ include);" />
      <MemberSignature Language="F#" Value="member this.CreateItemElement : string * string -&gt; Microsoft.Build.Construction.ProjectItemElement" Usage="projectRootElement.CreateItemElement (itemType, include)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Construction.ProjectItemElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemType" Type="System.String" />
        <Parameter Name="include" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="itemType"><span data-ttu-id="e46d2-246">该项的项类型。</span><span class="sxs-lookup"><span data-stu-id="e46d2-246">The item type of the item.</span></span></param>
        <param name="include"><span data-ttu-id="e46d2-247">该项的 Include 值。</span><span class="sxs-lookup"><span data-stu-id="e46d2-247">The Include value of the item.</span></span></param>
        <summary><span data-ttu-id="e46d2-248">创建一个含 include 的项节点。</span><span class="sxs-lookup"><span data-stu-id="e46d2-248">Creates an item node with an include.</span></span>
<span data-ttu-id="e46d2-249">调用方必须将其添加到项目中的选项位置。</span><span class="sxs-lookup"><span data-stu-id="e46d2-249">Caller must add it to the location of choice in the project.</span></span></summary>
        <returns><span data-ttu-id="e46d2-250">项。</span><span class="sxs-lookup"><span data-stu-id="e46d2-250">The item.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e46d2-251">调用方必须将该项添加到项目中的选择位置。</span><span class="sxs-lookup"><span data-stu-id="e46d2-251">Caller must add the item to the location of choice in the project.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateItemGroupElement">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Construction.ProjectItemGroupElement CreateItemGroupElement ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Build.Construction.ProjectItemGroupElement CreateItemGroupElement() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Construction.ProjectRootElement.CreateItemGroupElement" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateItemGroupElement () As ProjectItemGroupElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Build::Construction::ProjectItemGroupElement ^ CreateItemGroupElement();" />
      <MemberSignature Language="F#" Value="member this.CreateItemGroupElement : unit -&gt; Microsoft.Build.Construction.ProjectItemGroupElement" Usage="projectRootElement.CreateItemGroupElement " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Construction.ProjectItemGroupElement</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e46d2-252">创建一个项组。</span><span class="sxs-lookup"><span data-stu-id="e46d2-252">Creates an item group.</span></span>
<span data-ttu-id="e46d2-253">调用方必须将其添加到项目中的选项位置。</span><span class="sxs-lookup"><span data-stu-id="e46d2-253">Caller must add it to the location of choice in the project.</span></span></summary>
        <returns><span data-ttu-id="e46d2-254">项组。</span><span class="sxs-lookup"><span data-stu-id="e46d2-254">The item group.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e46d2-255">调用方必须将项组添加到项目中的选择位置。</span><span class="sxs-lookup"><span data-stu-id="e46d2-255">Caller must add the item group to the location of choice in the project.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateMetadataElement">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e46d2-256">创建一个具有指定名称的元数据节点。</span><span class="sxs-lookup"><span data-stu-id="e46d2-256">Creates a metadata node with the specified name.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateMetadataElement">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Construction.ProjectMetadataElement CreateMetadataElement (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Build.Construction.ProjectMetadataElement CreateMetadataElement(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Construction.ProjectRootElement.CreateMetadataElement(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateMetadataElement (name As String) As ProjectMetadataElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Build::Construction::ProjectMetadataElement ^ CreateMetadataElement(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.CreateMetadataElement : string -&gt; Microsoft.Build.Construction.ProjectMetadataElement" Usage="projectRootElement.CreateMetadataElement name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Construction.ProjectMetadataElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="e46d2-257">元数据的名称。</span><span class="sxs-lookup"><span data-stu-id="e46d2-257">The name of the metadata.</span></span></param>
        <summary><span data-ttu-id="e46d2-258">创建元数据节点。</span><span class="sxs-lookup"><span data-stu-id="e46d2-258">Creates a metadata node.</span></span>
<span data-ttu-id="e46d2-259">调用方必须将其添加到项目中的选项位置。</span><span class="sxs-lookup"><span data-stu-id="e46d2-259">Caller must add it to the location of choice in the project.</span></span></summary>
        <returns><span data-ttu-id="e46d2-260">元数据节点。</span><span class="sxs-lookup"><span data-stu-id="e46d2-260">The metadata node.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e46d2-261">调用方必须将元数据节点添加到项目中的选择位置。</span><span class="sxs-lookup"><span data-stu-id="e46d2-261">Caller must add the metadata node to the location of choice in the project.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateMetadataElement">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Construction.ProjectMetadataElement CreateMetadataElement (string name, string unevaluatedValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Build.Construction.ProjectMetadataElement CreateMetadataElement(string name, string unevaluatedValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Construction.ProjectRootElement.CreateMetadataElement(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateMetadataElement (name As String, unevaluatedValue As String) As ProjectMetadataElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Build::Construction::ProjectMetadataElement ^ CreateMetadataElement(System::String ^ name, System::String ^ unevaluatedValue);" />
      <MemberSignature Language="F#" Value="member this.CreateMetadataElement : string * string -&gt; Microsoft.Build.Construction.ProjectMetadataElement" Usage="projectRootElement.CreateMetadataElement (name, unevaluatedValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Construction.ProjectMetadataElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="unevaluatedValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="e46d2-262">元数据的名称。</span><span class="sxs-lookup"><span data-stu-id="e46d2-262">The name of the metadata.</span></span></param>
        <param name="unevaluatedValue"><span data-ttu-id="e46d2-263">元数据的值。</span><span class="sxs-lookup"><span data-stu-id="e46d2-263">The value of the metadata.</span></span></param>
        <summary><span data-ttu-id="e46d2-264">创建元数据节点。</span><span class="sxs-lookup"><span data-stu-id="e46d2-264">Creates a metadata node.</span></span>
<span data-ttu-id="e46d2-265">调用方必须将其添加到项目中的选项位置。</span><span class="sxs-lookup"><span data-stu-id="e46d2-265">Caller must add it to the location of choice in the project.</span></span></summary>
        <returns><span data-ttu-id="e46d2-266">元数据元素。</span><span class="sxs-lookup"><span data-stu-id="e46d2-266">The metadata element.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e46d2-267">调用方必须将元数据节点添加到项目中的选择位置。</span><span class="sxs-lookup"><span data-stu-id="e46d2-267">Caller must add the metadata node to the location of choice in the project.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateNewInstance">
      <MemberSignature Language="C#" Value="protected override Microsoft.Build.Construction.ProjectElement CreateNewInstance (Microsoft.Build.Construction.ProjectRootElement owner);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class Microsoft.Build.Construction.ProjectElement CreateNewInstance(class Microsoft.Build.Construction.ProjectRootElement owner) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Construction.ProjectRootElement.CreateNewInstance(Microsoft.Build.Construction.ProjectRootElement)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateNewInstance (owner As ProjectRootElement) As ProjectElement" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override Microsoft::Build::Construction::ProjectElement ^ CreateNewInstance(Microsoft::Build::Construction::ProjectRootElement ^ owner);" />
      <MemberSignature Language="F#" Value="override this.CreateNewInstance : Microsoft.Build.Construction.ProjectRootElement -&gt; Microsoft.Build.Construction.ProjectElement" Usage="projectRootElement.CreateNewInstance owner" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Construction.ProjectElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="owner" Type="Microsoft.Build.Construction.ProjectRootElement" Index="0" FrameworkAlternate="msbuild-15;msbuild-15-netcore;msbuild-16;msbuild-16-netcore" />
      </Parameters>
      <Docs>
        <param name="owner"><span data-ttu-id="e46d2-268">用于创建新实例的工厂。</span><span class="sxs-lookup"><span data-stu-id="e46d2-268">The factory to use for creating the new instance.</span></span></param>
        <summary><span data-ttu-id="e46d2-269">返回与上述 ProjectRootElementCache 关联的 ProjectRootElement 的新实例。</span><span class="sxs-lookup"><span data-stu-id="e46d2-269">Returns a new instance of ProjectRootElement that is affiliated with the same ProjectRootElementCache.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateOnErrorElement">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Construction.ProjectOnErrorElement CreateOnErrorElement (string executeTargets);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Build.Construction.ProjectOnErrorElement CreateOnErrorElement(string executeTargets) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Construction.ProjectRootElement.CreateOnErrorElement(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateOnErrorElement (executeTargets As String) As ProjectOnErrorElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Build::Construction::ProjectOnErrorElement ^ CreateOnErrorElement(System::String ^ executeTargets);" />
      <MemberSignature Language="F#" Value="member this.CreateOnErrorElement : string -&gt; Microsoft.Build.Construction.ProjectOnErrorElement" Usage="projectRootElement.CreateOnErrorElement executeTargets" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Construction.ProjectOnErrorElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="executeTargets" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="executeTargets"><span data-ttu-id="e46d2-270">任务失败时要执行的目标。</span><span class="sxs-lookup"><span data-stu-id="e46d2-270">The targets to execute if a task fails.</span></span></param>
        <summary><span data-ttu-id="e46d2-271">创建一个 on error 节点。</span><span class="sxs-lookup"><span data-stu-id="e46d2-271">Creates an on error node.</span></span>
<span data-ttu-id="e46d2-272">调用方必须将其添加到项目中的选项位置。</span><span class="sxs-lookup"><span data-stu-id="e46d2-272">Caller must add it to the location of choice in the project.</span></span></summary>
        <returns><span data-ttu-id="e46d2-273">OnError 元素。</span><span class="sxs-lookup"><span data-stu-id="e46d2-273">The OnError element.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e46d2-274">调用方必须将 OnError 元素添加到项目中的选择位置。</span><span class="sxs-lookup"><span data-stu-id="e46d2-274">Caller must add the OnError element to the location of choice in the project.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateOtherwiseElement">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Construction.ProjectOtherwiseElement CreateOtherwiseElement ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Build.Construction.ProjectOtherwiseElement CreateOtherwiseElement() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Construction.ProjectRootElement.CreateOtherwiseElement" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateOtherwiseElement () As ProjectOtherwiseElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Build::Construction::ProjectOtherwiseElement ^ CreateOtherwiseElement();" />
      <MemberSignature Language="F#" Value="member this.CreateOtherwiseElement : unit -&gt; Microsoft.Build.Construction.ProjectOtherwiseElement" Usage="projectRootElement.CreateOtherwiseElement " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Construction.ProjectOtherwiseElement</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e46d2-275">创建一个 otherwise 节点。</span><span class="sxs-lookup"><span data-stu-id="e46d2-275">Creates an otherwise node.</span></span>
<span data-ttu-id="e46d2-276">调用方必须将其添加到项目中的选项位置。</span><span class="sxs-lookup"><span data-stu-id="e46d2-276">Caller must add it to the location of choice in the project.</span></span></summary>
        <returns><span data-ttu-id="e46d2-277">Otherwise 元素。</span><span class="sxs-lookup"><span data-stu-id="e46d2-277">The Otherwise element.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e46d2-278">调用方必须将其他元素添加到项目中的选择位置。</span><span class="sxs-lookup"><span data-stu-id="e46d2-278">Caller must add the Otherwise element to the location of choice in the project.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateOutputElement">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Construction.ProjectOutputElement CreateOutputElement (string taskParameter, string itemType, string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Build.Construction.ProjectOutputElement CreateOutputElement(string taskParameter, string itemType, string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Construction.ProjectRootElement.CreateOutputElement(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateOutputElement (taskParameter As String, itemType As String, propertyName As String) As ProjectOutputElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Build::Construction::ProjectOutputElement ^ CreateOutputElement(System::String ^ taskParameter, System::String ^ itemType, System::String ^ propertyName);" />
      <MemberSignature Language="F#" Value="member this.CreateOutputElement : string * string * string -&gt; Microsoft.Build.Construction.ProjectOutputElement" Usage="projectRootElement.CreateOutputElement (taskParameter, itemType, propertyName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Construction.ProjectOutputElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="taskParameter" Type="System.String" />
        <Parameter Name="itemType" Type="System.String" />
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="taskParameter"><span data-ttu-id="e46d2-279">任务输出参数的名称。</span><span class="sxs-lookup"><span data-stu-id="e46d2-279">The name of the task's output parameter.</span></span></param>
        <param name="itemType"><span data-ttu-id="e46d2-280">接收任务输出参数值的项。</span><span class="sxs-lookup"><span data-stu-id="e46d2-280">The item that receives the task's output parameter value.</span></span></param>
        <param name="propertyName"><span data-ttu-id="e46d2-281">接收任务输出参数值的属性。</span><span class="sxs-lookup"><span data-stu-id="e46d2-281">The property that receives the task's output parameter value.</span></span></param>
        <summary><span data-ttu-id="e46d2-282">创建一个输出节点。</span><span class="sxs-lookup"><span data-stu-id="e46d2-282">Creates an output node.</span></span>
<span data-ttu-id="e46d2-283">必须指定 itemType 或 propertyName。</span><span class="sxs-lookup"><span data-stu-id="e46d2-283">Exactly one of itemType and propertyName must be specified.</span></span>
<span data-ttu-id="e46d2-284">调用方必须将其添加到项目中的选项位置。</span><span class="sxs-lookup"><span data-stu-id="e46d2-284">Caller must add it to the location of choice in the project.</span></span></summary>
        <returns><span data-ttu-id="e46d2-285">Output 元素。</span><span class="sxs-lookup"><span data-stu-id="e46d2-285">The Output element.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e46d2-286">调用方必须将 Output 元素添加到项目中的选择位置。</span><span class="sxs-lookup"><span data-stu-id="e46d2-286">Caller must add the Output element to the location of choice in the project.</span></span> <span data-ttu-id="e46d2-287">必须指定 itemType 或 propertyName，而不能同时指定两者。</span><span class="sxs-lookup"><span data-stu-id="e46d2-287">Either itemType or propertyName must be specified, but not both.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateProjectExtensionsElement">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Construction.ProjectExtensionsElement CreateProjectExtensionsElement ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Build.Construction.ProjectExtensionsElement CreateProjectExtensionsElement() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Construction.ProjectRootElement.CreateProjectExtensionsElement" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateProjectExtensionsElement () As ProjectExtensionsElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Build::Construction::ProjectExtensionsElement ^ CreateProjectExtensionsElement();" />
      <MemberSignature Language="F#" Value="member this.CreateProjectExtensionsElement : unit -&gt; Microsoft.Build.Construction.ProjectExtensionsElement" Usage="projectRootElement.CreateProjectExtensionsElement " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Construction.ProjectExtensionsElement</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e46d2-288">创建一个项目扩展节点。</span><span class="sxs-lookup"><span data-stu-id="e46d2-288">Creates a project extensions node.</span></span>
<span data-ttu-id="e46d2-289">调用方必须将其添加到项目中的选项位置。</span><span class="sxs-lookup"><span data-stu-id="e46d2-289">Caller must add it to the location of choice in the project.</span></span></summary>
        <returns><span data-ttu-id="e46d2-290">ProjectExtensions 元素。</span><span class="sxs-lookup"><span data-stu-id="e46d2-290">The ProjectExtensions element.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e46d2-291">调用方必须将 ProjectExtensions 元素添加到项目中的选择位置。</span><span class="sxs-lookup"><span data-stu-id="e46d2-291">Caller must add the ProjectExtensions element to the location of choice in the project.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateProjectSdkElement">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Construction.ProjectSdkElement CreateProjectSdkElement (string sdkName, string sdkVersion);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Build.Construction.ProjectSdkElement CreateProjectSdkElement(string sdkName, string sdkVersion) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Construction.ProjectRootElement.CreateProjectSdkElement(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateProjectSdkElement (sdkName As String, sdkVersion As String) As ProjectSdkElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Build::Construction::ProjectSdkElement ^ CreateProjectSdkElement(System::String ^ sdkName, System::String ^ sdkVersion);" />
      <MemberSignature Language="F#" Value="member this.CreateProjectSdkElement : string * string -&gt; Microsoft.Build.Construction.ProjectSdkElement" Usage="projectRootElement.CreateProjectSdkElement (sdkName, sdkVersion)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Construction.ProjectSdkElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sdkName" Type="System.String" Index="0" FrameworkAlternate="msbuild-15;msbuild-15-netcore;msbuild-16;msbuild-16-netcore" />
        <Parameter Name="sdkVersion" Type="System.String" Index="1" FrameworkAlternate="msbuild-15;msbuild-15-netcore;msbuild-16;msbuild-16-netcore" />
      </Parameters>
      <Docs>
        <param name="sdkName">To be added.</param>
        <param name="sdkVersion">To be added.</param>
        <summary><span data-ttu-id="e46d2-292">创建一个附加到此项目的项目 SDK 元素。</span><span class="sxs-lookup"><span data-stu-id="e46d2-292">Creates a project SDK element attached to this project.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreatePropertyElement">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Construction.ProjectPropertyElement CreatePropertyElement (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Build.Construction.ProjectPropertyElement CreatePropertyElement(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Construction.ProjectRootElement.CreatePropertyElement(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreatePropertyElement (name As String) As ProjectPropertyElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Build::Construction::ProjectPropertyElement ^ CreatePropertyElement(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.CreatePropertyElement : string -&gt; Microsoft.Build.Construction.ProjectPropertyElement" Usage="projectRootElement.CreatePropertyElement name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Construction.ProjectPropertyElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="e46d2-293">属性的名称。</span><span class="sxs-lookup"><span data-stu-id="e46d2-293">The name of the property.</span></span></param>
        <summary><span data-ttu-id="e46d2-294">创建一个属性。</span><span class="sxs-lookup"><span data-stu-id="e46d2-294">Creates a property.</span></span>
<span data-ttu-id="e46d2-295">调用方必须将其添加到项目中的选项位置。</span><span class="sxs-lookup"><span data-stu-id="e46d2-295">Caller must add it to the location of choice in the project.</span></span></summary>
        <returns><span data-ttu-id="e46d2-296">属性。</span><span class="sxs-lookup"><span data-stu-id="e46d2-296">The property.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e46d2-297">调用方必须将属性添加到项目中的选择位置。</span><span class="sxs-lookup"><span data-stu-id="e46d2-297">Caller must add the property to the location of choice in the project.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreatePropertyGroupElement">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Construction.ProjectPropertyGroupElement CreatePropertyGroupElement ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Build.Construction.ProjectPropertyGroupElement CreatePropertyGroupElement() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Construction.ProjectRootElement.CreatePropertyGroupElement" />
      <MemberSignature Language="VB.NET" Value="Public Function CreatePropertyGroupElement () As ProjectPropertyGroupElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Build::Construction::ProjectPropertyGroupElement ^ CreatePropertyGroupElement();" />
      <MemberSignature Language="F#" Value="member this.CreatePropertyGroupElement : unit -&gt; Microsoft.Build.Construction.ProjectPropertyGroupElement" Usage="projectRootElement.CreatePropertyGroupElement " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Construction.ProjectPropertyGroupElement</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e46d2-298">创建一个属性组。</span><span class="sxs-lookup"><span data-stu-id="e46d2-298">Creates a property group.</span></span>
<span data-ttu-id="e46d2-299">调用方必须将其添加到项目中的选项位置。</span><span class="sxs-lookup"><span data-stu-id="e46d2-299">Caller must add it to the location of choice in the project.</span></span></summary>
        <returns><span data-ttu-id="e46d2-300">属性组。</span><span class="sxs-lookup"><span data-stu-id="e46d2-300">The property group.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e46d2-301">调用方必须将属性组添加到项目中的选择位置。</span><span class="sxs-lookup"><span data-stu-id="e46d2-301">Caller must add the property group to the location of choice in the project.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateTargetElement">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Construction.ProjectTargetElement CreateTargetElement (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Build.Construction.ProjectTargetElement CreateTargetElement(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Construction.ProjectRootElement.CreateTargetElement(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateTargetElement (name As String) As ProjectTargetElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Build::Construction::ProjectTargetElement ^ CreateTargetElement(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.CreateTargetElement : string -&gt; Microsoft.Build.Construction.ProjectTargetElement" Usage="projectRootElement.CreateTargetElement name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Construction.ProjectTargetElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="e46d2-302">目标的名称。</span><span class="sxs-lookup"><span data-stu-id="e46d2-302">The name of the target.</span></span></param>
        <summary><span data-ttu-id="e46d2-303">创建一个目标。</span><span class="sxs-lookup"><span data-stu-id="e46d2-303">Creates a target.</span></span>
<span data-ttu-id="e46d2-304">调用方必须将其添加到此项目中的选择位置。</span><span class="sxs-lookup"><span data-stu-id="e46d2-304">Caller must add it to the location of choice in this project.</span></span></summary>
        <returns><span data-ttu-id="e46d2-305">目标。</span><span class="sxs-lookup"><span data-stu-id="e46d2-305">The target.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e46d2-306">调用方必须将目标添加到此项目中的选择位置。</span><span class="sxs-lookup"><span data-stu-id="e46d2-306">Caller must add the target to the location of choice in this project.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateTaskElement">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Construction.ProjectTaskElement CreateTaskElement (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Build.Construction.ProjectTaskElement CreateTaskElement(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Construction.ProjectRootElement.CreateTaskElement(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateTaskElement (name As String) As ProjectTaskElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Build::Construction::ProjectTaskElement ^ CreateTaskElement(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.CreateTaskElement : string -&gt; Microsoft.Build.Construction.ProjectTaskElement" Usage="projectRootElement.CreateTaskElement name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Construction.ProjectTaskElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="e46d2-307">任务的名称。</span><span class="sxs-lookup"><span data-stu-id="e46d2-307">The name of the task.</span></span></param>
        <summary><span data-ttu-id="e46d2-308">创建一个任务。</span><span class="sxs-lookup"><span data-stu-id="e46d2-308">Creates a task.</span></span>
<span data-ttu-id="e46d2-309">调用方必须将其添加到此项目中的选择位置。</span><span class="sxs-lookup"><span data-stu-id="e46d2-309">Caller must add it to the location of choice in this project.</span></span></summary>
        <returns><span data-ttu-id="e46d2-310">任务。</span><span class="sxs-lookup"><span data-stu-id="e46d2-310">The task.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e46d2-311">调用方必须将任务添加到此项目中的选择位置。</span><span class="sxs-lookup"><span data-stu-id="e46d2-311">Caller must add the task to the location of choice in this project.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateUsingTaskBodyElement">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Construction.ProjectUsingTaskBodyElement CreateUsingTaskBodyElement (string evaluate, string body);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Build.Construction.ProjectUsingTaskBodyElement CreateUsingTaskBodyElement(string evaluate, string body) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Construction.ProjectRootElement.CreateUsingTaskBodyElement(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateUsingTaskBodyElement (evaluate As String, body As String) As ProjectUsingTaskBodyElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Build::Construction::ProjectUsingTaskBodyElement ^ CreateUsingTaskBodyElement(System::String ^ evaluate, System::String ^ body);" />
      <MemberSignature Language="F#" Value="member this.CreateUsingTaskBodyElement : string * string -&gt; Microsoft.Build.Construction.ProjectUsingTaskBodyElement" Usage="projectRootElement.CreateUsingTaskBodyElement (evaluate, body)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Construction.ProjectUsingTaskBodyElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="evaluate" Type="System.String" />
        <Parameter Name="body" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="evaluate"><span data-ttu-id="e46d2-312">要计算的字符串。</span><span class="sxs-lookup"><span data-stu-id="e46d2-312">The string to evaluate.</span></span></param>
        <param name="body"><span data-ttu-id="e46d2-313">要添加的主体。</span><span class="sxs-lookup"><span data-stu-id="e46d2-313">The body to add.</span></span></param>
        <summary><span data-ttu-id="e46d2-314">创建一个 Task 元素，用于 using task。</span><span class="sxs-lookup"><span data-stu-id="e46d2-314">Creates a Task element for use in a using task.</span></span>
<span data-ttu-id="e46d2-315">调用方必须将其添加到项目中 using task 下的选择位置。</span><span class="sxs-lookup"><span data-stu-id="e46d2-315">Caller must add it to the location of choice in the project under a using task.</span></span></summary>
        <returns><span data-ttu-id="e46d2-316">任务。</span><span class="sxs-lookup"><span data-stu-id="e46d2-316">The task.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e46d2-317">调用方必须将任务添加到项目中选项的 UsingTask 元素。</span><span class="sxs-lookup"><span data-stu-id="e46d2-317">Caller must add the task to the UsingTask element of choice in the project.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateUsingTaskElement">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e46d2-318">将 <see href="/visualstudio/msbuild/usingtask-element-msbuild">UsingTask 元素 (MSBuild)</see> 添加到项目。</span><span class="sxs-lookup"><span data-stu-id="e46d2-318">Adds a <see href="/visualstudio/msbuild/usingtask-element-msbuild">UsingTask Element (MSBuild)</see> to the project.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateUsingTaskElement">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Construction.ProjectUsingTaskElement CreateUsingTaskElement (string taskName, string assemblyFile, string assemblyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Build.Construction.ProjectUsingTaskElement CreateUsingTaskElement(string taskName, string assemblyFile, string assemblyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Construction.ProjectRootElement.CreateUsingTaskElement(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateUsingTaskElement (taskName As String, assemblyFile As String, assemblyName As String) As ProjectUsingTaskElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Build::Construction::ProjectUsingTaskElement ^ CreateUsingTaskElement(System::String ^ taskName, System::String ^ assemblyFile, System::String ^ assemblyName);" />
      <MemberSignature Language="F#" Value="member this.CreateUsingTaskElement : string * string * string -&gt; Microsoft.Build.Construction.ProjectUsingTaskElement" Usage="projectRootElement.CreateUsingTaskElement (taskName, assemblyFile, assemblyName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Construction.ProjectUsingTaskElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="taskName" Type="System.String" />
        <Parameter Name="assemblyFile" Type="System.String" />
        <Parameter Name="assemblyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="taskName"><span data-ttu-id="e46d2-319">任务名。</span><span class="sxs-lookup"><span data-stu-id="e46d2-319">The task name.</span></span></param>
        <param name="assemblyFile"><span data-ttu-id="e46d2-320">程序集的文件路径。</span><span class="sxs-lookup"><span data-stu-id="e46d2-320">The file path to the assembly.</span></span></param>
        <param name="assemblyName"><span data-ttu-id="e46d2-321">要加载的程序集的名称。</span><span class="sxs-lookup"><span data-stu-id="e46d2-321">The name of the assembly to load.</span></span></param>
        <summary><span data-ttu-id="e46d2-322">创建一个 using task。</span><span class="sxs-lookup"><span data-stu-id="e46d2-322">Creates a using task.</span></span>
<span data-ttu-id="e46d2-323">调用方必须将其添加到项目中的选项位置。</span><span class="sxs-lookup"><span data-stu-id="e46d2-323">Caller must add it to the location of choice in the project.</span></span>
<span data-ttu-id="e46d2-324">必须提供程序集文件或程序集名称。</span><span class="sxs-lookup"><span data-stu-id="e46d2-324">Exactly one of assembly file and assembly name must be provided.</span></span></summary>
        <returns><span data-ttu-id="e46d2-325">UsingTask 元素。</span><span class="sxs-lookup"><span data-stu-id="e46d2-325">The UsingTask element.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
<span data-ttu-id="e46d2-326">调用方必须将 UsingTask 元素添加到项目中的选择位置。</span><span class="sxs-lookup"><span data-stu-id="e46d2-326">The caller must add the UsingTask element to the location of choice in the project.</span></span> <span data-ttu-id="e46d2-327">`assemblyName`或 `assemblyFile` 必须为 `null` ，但不能同时为两者。</span><span class="sxs-lookup"><span data-stu-id="e46d2-327">Either the `assemblyName` or `assemblyFile` must be `null`, but not both.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateUsingTaskElement">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Construction.ProjectUsingTaskElement CreateUsingTaskElement (string taskName, string assemblyFile, string assemblyName, string runtime, string architecture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Build.Construction.ProjectUsingTaskElement CreateUsingTaskElement(string taskName, string assemblyFile, string assemblyName, string runtime, string architecture) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Construction.ProjectRootElement.CreateUsingTaskElement(System.String,System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateUsingTaskElement (taskName As String, assemblyFile As String, assemblyName As String, runtime As String, architecture As String) As ProjectUsingTaskElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Build::Construction::ProjectUsingTaskElement ^ CreateUsingTaskElement(System::String ^ taskName, System::String ^ assemblyFile, System::String ^ assemblyName, System::String ^ runtime, System::String ^ architecture);" />
      <MemberSignature Language="F#" Value="member this.CreateUsingTaskElement : string * string * string * string * string -&gt; Microsoft.Build.Construction.ProjectUsingTaskElement" Usage="projectRootElement.CreateUsingTaskElement (taskName, assemblyFile, assemblyName, runtime, architecture)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Construction.ProjectUsingTaskElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="taskName" Type="System.String" Index="0" FrameworkAlternate="msbuild-15;msbuild-15-netcore;msbuild-16;msbuild-16-netcore;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="assemblyFile" Type="System.String" Index="1" FrameworkAlternate="msbuild-15;msbuild-15-netcore;msbuild-16;msbuild-16-netcore;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="assemblyName" Type="System.String" Index="2" FrameworkAlternate="msbuild-15;msbuild-15-netcore;msbuild-16;msbuild-16-netcore;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="runtime" Type="System.String" Index="3" FrameworkAlternate="msbuild-15;msbuild-15-netcore;msbuild-16;msbuild-16-netcore;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="architecture" Type="System.String" Index="4" FrameworkAlternate="msbuild-15;msbuild-15-netcore;msbuild-16;msbuild-16-netcore;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="taskName"><span data-ttu-id="e46d2-328">任务名。</span><span class="sxs-lookup"><span data-stu-id="e46d2-328">The task name.</span></span></param>
        <param name="assemblyFile"><span data-ttu-id="e46d2-329">程序集的文件路径。</span><span class="sxs-lookup"><span data-stu-id="e46d2-329">The file path to the assembly.</span></span></param>
        <param name="assemblyName"><span data-ttu-id="e46d2-330">要加载的程序集的名称。</span><span class="sxs-lookup"><span data-stu-id="e46d2-330">The name of the assembly to load.</span></span></param>
        <param name="runtime"><span data-ttu-id="e46d2-331">可选运行时说明符。</span><span class="sxs-lookup"><span data-stu-id="e46d2-331">Optional runtime specifier.</span></span></param>
        <param name="architecture"><span data-ttu-id="e46d2-332">可选结构说明符。</span><span class="sxs-lookup"><span data-stu-id="e46d2-332">Optional architecture specifier.</span></span></param>
        <summary><span data-ttu-id="e46d2-333">创建一个 using task。</span><span class="sxs-lookup"><span data-stu-id="e46d2-333">Creates a using task.</span></span>
<span data-ttu-id="e46d2-334">调用方必须将其添加到项目中的选项位置。</span><span class="sxs-lookup"><span data-stu-id="e46d2-334">Caller must add it to the location of choice in the project.</span></span>
<span data-ttu-id="e46d2-335">必须提供程序集文件或程序集名称。</span><span class="sxs-lookup"><span data-stu-id="e46d2-335">Exactly one of assembly file and assembly name must be provided.</span></span>
<span data-ttu-id="e46d2-336">还允许提供可选的运行时和体系结构说明符。</span><span class="sxs-lookup"><span data-stu-id="e46d2-336">Also allows providing optional runtime and architecture specifiers.</span></span>  <span data-ttu-id="e46d2-337">Null 表示“正常”。</span><span class="sxs-lookup"><span data-stu-id="e46d2-337">Null is OK.</span></span></summary>
        <returns><span data-ttu-id="e46d2-338">UsingTask 元素。</span><span class="sxs-lookup"><span data-stu-id="e46d2-338">The UsingTask element.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e46d2-339">调用方必须将 UsingTask 元素添加到项目中的选择位置。</span><span class="sxs-lookup"><span data-stu-id="e46d2-339">Caller must add the UsingTask element to the location of choice in the project.</span></span> <span data-ttu-id="e46d2-340">`assemblyName`或 `assemblyFile` 必须为 null，但不能同时为两者。</span><span class="sxs-lookup"><span data-stu-id="e46d2-340">Either the `assemblyName` or `assemblyFile` must be null, but not both.</span></span> <span data-ttu-id="e46d2-341">和均 `runtime` `architecture` 可为 null。</span><span class="sxs-lookup"><span data-stu-id="e46d2-341">Both the `runtime` and `architecture` can be null.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateUsingTaskParameterElement">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Construction.ProjectUsingTaskParameterElement CreateUsingTaskParameterElement (string name, string output, string required, string parameterType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Build.Construction.ProjectUsingTaskParameterElement CreateUsingTaskParameterElement(string name, string output, string required, string parameterType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Construction.ProjectRootElement.CreateUsingTaskParameterElement(System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateUsingTaskParameterElement (name As String, output As String, required As String, parameterType As String) As ProjectUsingTaskParameterElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Build::Construction::ProjectUsingTaskParameterElement ^ CreateUsingTaskParameterElement(System::String ^ name, System::String ^ output, System::String ^ required, System::String ^ parameterType);" />
      <MemberSignature Language="F#" Value="member this.CreateUsingTaskParameterElement : string * string * string * string -&gt; Microsoft.Build.Construction.ProjectUsingTaskParameterElement" Usage="projectRootElement.CreateUsingTaskParameterElement (name, output, required, parameterType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Construction.ProjectUsingTaskParameterElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="output" Type="System.String" />
        <Parameter Name="required" Type="System.String" />
        <Parameter Name="parameterType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="e46d2-342"><c>UsingTask</c> 元素的名称。</span><span class="sxs-lookup"><span data-stu-id="e46d2-342">The name of the <c>UsingTask</c> element.</span></span></param>
        <param name="output"><span data-ttu-id="e46d2-343">将任务的输出存储于项目文件中。</span><span class="sxs-lookup"><span data-stu-id="e46d2-343">Stores outputs from the task in the project file.</span></span></param>
        <param name="required"><span data-ttu-id="e46d2-344">用户定义的任务参数，其中包含作为其值的参数值。</span><span class="sxs-lookup"><span data-stu-id="e46d2-344">A user-defined task parameter that contains the parameter value as its value.</span></span></param>
        <param name="parameterType"><span data-ttu-id="e46d2-345">参数的类型。</span><span class="sxs-lookup"><span data-stu-id="e46d2-345">The type of the parameter.</span></span></param>
        <summary><span data-ttu-id="e46d2-346">创建一个 Parameter，用于 using ParameterGroup。</span><span class="sxs-lookup"><span data-stu-id="e46d2-346">Creates a Parameter for use in a using ParameterGroup.</span></span>
<span data-ttu-id="e46d2-347">调用方必须将其添加到项目中 using task 下的选择位置。</span><span class="sxs-lookup"><span data-stu-id="e46d2-347">Caller must add it to the location of choice in the project under a using task.</span></span></summary>
        <returns><span data-ttu-id="e46d2-348">参数。</span><span class="sxs-lookup"><span data-stu-id="e46d2-348">The parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e46d2-349">调用方必须将参数添加到项目中选项的 UsingTask 参数组。</span><span class="sxs-lookup"><span data-stu-id="e46d2-349">Caller must add the parameter to the UsingTask parameter group of choice in the project.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateUsingTaskParameterGroupElement">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Construction.UsingTaskParameterGroupElement CreateUsingTaskParameterGroupElement ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Build.Construction.UsingTaskParameterGroupElement CreateUsingTaskParameterGroupElement() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Construction.ProjectRootElement.CreateUsingTaskParameterGroupElement" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateUsingTaskParameterGroupElement () As UsingTaskParameterGroupElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Build::Construction::UsingTaskParameterGroupElement ^ CreateUsingTaskParameterGroupElement();" />
      <MemberSignature Language="F#" Value="member this.CreateUsingTaskParameterGroupElement : unit -&gt; Microsoft.Build.Construction.UsingTaskParameterGroupElement" Usage="projectRootElement.CreateUsingTaskParameterGroupElement " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Construction.UsingTaskParameterGroupElement</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e46d2-350">创建一个 ParameterGroup，用于 using task。</span><span class="sxs-lookup"><span data-stu-id="e46d2-350">Creates a ParameterGroup for use in a using task.</span></span>
<span data-ttu-id="e46d2-351">调用方必须将其添加到项目中 using task 下的选择位置。</span><span class="sxs-lookup"><span data-stu-id="e46d2-351">Caller must add it to the location of choice in the project under a using task.</span></span></summary>
        <returns><span data-ttu-id="e46d2-352">参数组。</span><span class="sxs-lookup"><span data-stu-id="e46d2-352">The parameter group.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e46d2-353">调用方必须将参数组添加到项目中所选的 UsingTask 元素。</span><span class="sxs-lookup"><span data-stu-id="e46d2-353">Caller must add the parameter group to the UsingTask element of choice in the project.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateWhenElement">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Construction.ProjectWhenElement CreateWhenElement (string condition);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Build.Construction.ProjectWhenElement CreateWhenElement(string condition) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Construction.ProjectRootElement.CreateWhenElement(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateWhenElement (condition As String) As ProjectWhenElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Build::Construction::ProjectWhenElement ^ CreateWhenElement(System::String ^ condition);" />
      <MemberSignature Language="F#" Value="member this.CreateWhenElement : string -&gt; Microsoft.Build.Construction.ProjectWhenElement" Usage="projectRootElement.CreateWhenElement condition" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Construction.ProjectWhenElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="condition" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="condition"><span data-ttu-id="e46d2-354">Condition 特性的值。</span><span class="sxs-lookup"><span data-stu-id="e46d2-354">The value of the Condition attribute.</span></span></param>
        <summary><span data-ttu-id="e46d2-355">创建一个 when。</span><span class="sxs-lookup"><span data-stu-id="e46d2-355">Creates a when.</span></span>
<span data-ttu-id="e46d2-356">调用方必须将其添加到此项目中的选择位置。</span><span class="sxs-lookup"><span data-stu-id="e46d2-356">Caller must add it to the location of choice in this project.</span></span></summary>
        <returns><span data-ttu-id="e46d2-357">When 元素。</span><span class="sxs-lookup"><span data-stu-id="e46d2-357">The When element.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e46d2-358">调用方必须将 When 元素添加到此项目中的选择位置。</span><span class="sxs-lookup"><span data-stu-id="e46d2-358">Caller must add the When element to the location of choice in this project.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeepClone">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Construction.ProjectRootElement DeepClone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Build.Construction.ProjectRootElement DeepClone() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Construction.ProjectRootElement.DeepClone" />
      <MemberSignature Language="VB.NET" Value="Public Function DeepClone () As ProjectRootElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Build::Construction::ProjectRootElement ^ DeepClone();" />
      <MemberSignature Language="F#" Value="override this.DeepClone : unit -&gt; Microsoft.Build.Construction.ProjectRootElement" Usage="projectRootElement.DeepClone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Construction.ProjectRootElement</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e46d2-359">返回此项目的克隆。</span><span class="sxs-lookup"><span data-stu-id="e46d2-359">Returns a clone of this project.</span></span></summary>
        <returns><span data-ttu-id="e46d2-360">克隆的元素。</span><span class="sxs-lookup"><span data-stu-id="e46d2-360">The cloned element.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultTargets">
      <MemberSignature Language="C#" Value="public string DefaultTargets { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DefaultTargets" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Construction.ProjectRootElement.DefaultTargets" />
      <MemberSignature Language="VB.NET" Value="Public Property DefaultTargets As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DefaultTargets { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DefaultTargets : string with get, set" Usage="Microsoft.Build.Construction.ProjectRootElement.DefaultTargets" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e46d2-361">获取或设置 DefaultTargets 的值。</span><span class="sxs-lookup"><span data-stu-id="e46d2-361">Gets or sets the value of DefaultTargets.</span></span> <span data-ttu-id="e46d2-362">如果不存在 DefaultTargets，则返回空字符串。</span><span class="sxs-lookup"><span data-stu-id="e46d2-362">If there is no DefaultTargets, returns empty string.</span></span>
<span data-ttu-id="e46d2-363">如果该值为 null（即为空），则删除该特性。</span><span class="sxs-lookup"><span data-stu-id="e46d2-363">If the value is null or empty, removes the attribute.</span></span></summary>
        <value><span data-ttu-id="e46d2-364">DefaultTargets 属性的值; 如果未提供 DefaultTargets 属性，则为空字符串。</span><span class="sxs-lookup"><span data-stu-id="e46d2-364">The value of the DefaultTargets attribute, or an empty string if the DefaultTargets attribute is not present.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e46d2-365">如果要设置的值为空字符串或 null，则删除 DefaultTargets 属性。</span><span class="sxs-lookup"><span data-stu-id="e46d2-365">Removes the DefaultTargets attribute if the value to set is an empty string or null.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultTargetsLocation">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Construction.ElementLocation DefaultTargetsLocation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Build.Construction.ElementLocation DefaultTargetsLocation" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Construction.ProjectRootElement.DefaultTargetsLocation" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DefaultTargetsLocation As ElementLocation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Build::Construction::ElementLocation ^ DefaultTargetsLocation { Microsoft::Build::Construction::ElementLocation ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultTargetsLocation : Microsoft.Build.Construction.ElementLocation" Usage="Microsoft.Build.Construction.ProjectRootElement.DefaultTargetsLocation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Construction.ElementLocation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e46d2-366">defaulttargets 特性的位置（如果有）</span><span class="sxs-lookup"><span data-stu-id="e46d2-366">Location of the defaulttargets attribute, if any</span></span></summary>
        <value><span data-ttu-id="e46d2-367">DefaultTargets 特性位置，或者， <see langword="null" /> 如果没有 DefaultTargets 属性，则为。</span><span class="sxs-lookup"><span data-stu-id="e46d2-367">The DefaultTargets attribute location, or <see langword="null" /> if there is no DefaultTargets attribute.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e46d2-368">自最后保存后，如果文件没有保存或文件已被编辑，则可能不正确。</span><span class="sxs-lookup"><span data-stu-id="e46d2-368">May not be correct if file is not saved, or file has been edited since it was last saved.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DirectoryPath">
      <MemberSignature Language="C#" Value="public string DirectoryPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DirectoryPath" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Construction.ProjectRootElement.DirectoryPath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DirectoryPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DirectoryPath { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DirectoryPath : string" Usage="Microsoft.Build.Construction.ProjectRootElement.DirectoryPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[get: System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e46d2-369">项目所在的目录。</span><span class="sxs-lookup"><span data-stu-id="e46d2-369">The directory that the project is in.</span></span> <span data-ttu-id="e46d2-370">用于计算相对路径的 Essential。</span><span class="sxs-lookup"><span data-stu-id="e46d2-370">Essential for evaluating relative paths.</span></span>
<span data-ttu-id="e46d2-371">从不为 null，即使 FullPath 不包含目录信息。</span><span class="sxs-lookup"><span data-stu-id="e46d2-371">Is never null, even if the FullPath does not contain directory information.</span></span>
<span data-ttu-id="e46d2-372">如果未从磁盘加载项目且未向该项目提供路径，则返回加载项目时的当前目录 - 该行为与 Whidbey/Orcas 相同。</span><span class="sxs-lookup"><span data-stu-id="e46d2-372">If the project has not been loaded from disk and has not been given a path, returns the current-directory from the time the project was loaded - this is the same behavior as Whidbey/Orcas.</span></span>
<span data-ttu-id="e46d2-373">如果未从磁盘加载项目但已向该项目提供路径，则此路径可能不存在。</span><span class="sxs-lookup"><span data-stu-id="e46d2-373">If the project has not been loaded from disk but has been given a path, this path may not exist.</span></span></summary>
        <value><span data-ttu-id="e46d2-374">目录路径，即从不 <see langword="null" /> 。</span><span class="sxs-lookup"><span data-stu-id="e46d2-374">The directory path, which is never <see langword="null" />.</span></span> <span data-ttu-id="e46d2-375">如果未从磁盘加载项目，则将返回加载项目时的当前目录。</span><span class="sxs-lookup"><span data-stu-id="e46d2-375">If the project is not loaded from disk, returns the current directory at the time the project was loaded.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e46d2-376">此方法对于计算相对路径是必需的。</span><span class="sxs-lookup"><span data-stu-id="e46d2-376">This method is required for evaluating relative paths.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Encoding">
      <MemberSignature Language="C#" Value="public System.Text.Encoding Encoding { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.Encoding Encoding" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Construction.ProjectRootElement.Encoding" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Encoding As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Text::Encoding ^ Encoding { System::Text::Encoding ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Encoding : System.Text.Encoding" Usage="Microsoft.Build.Construction.ProjectRootElement.Encoding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e46d2-377">其中保存或将要保存项目文件的编码（除非另行说明）。</span><span class="sxs-lookup"><span data-stu-id="e46d2-377">Encoding that the project file is saved in, or will be saved in, unless otherwise specified.</span></span></summary>
        <value><span data-ttu-id="e46d2-378">要在其中保存项目文件的字符编码。</span><span class="sxs-lookup"><span data-stu-id="e46d2-378">The character encoding that the project file is to be saved in.</span></span></value>
        <remarks><span data-ttu-id="e46d2-379">返回 Xml 声明中的编码（如果有），否则为 UTF8。</span><span class="sxs-lookup"><span data-stu-id="e46d2-379">Returns the encoding from the Xml declaration if any, otherwise UTF8.</span></span></remarks>
      </Docs>
    </Member>
    <Member MemberName="EscapedFullPath">
      <MemberSignature Language="C#" Value="public string EscapedFullPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string EscapedFullPath" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Construction.ProjectRootElement.EscapedFullPath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EscapedFullPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ EscapedFullPath { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EscapedFullPath : string" Usage="Microsoft.Build.Construction.ProjectRootElement.EscapedFullPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FullPath">
      <MemberSignature Language="C#" Value="public string FullPath { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FullPath" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Construction.ProjectRootElement.FullPath" />
      <MemberSignature Language="VB.NET" Value="Public Property FullPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FullPath { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.FullPath : string with get, set" Usage="Microsoft.Build.Construction.ProjectRootElement.FullPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e46d2-380">项目文件的完整路径。</span><span class="sxs-lookup"><span data-stu-id="e46d2-380">Full path to the project file.</span></span>
<span data-ttu-id="e46d2-381">如果未从磁盘加载项目且未向该项目提供路径，则返回 null。</span><span class="sxs-lookup"><span data-stu-id="e46d2-381">If the project has not been loaded from disk and has not been given a path, returns null.</span></span>
<span data-ttu-id="e46d2-382">如果未从磁盘加载项目但已向该项目提供路径，则此路径可能不存在。</span><span class="sxs-lookup"><span data-stu-id="e46d2-382">If the project has not been loaded from disk but has been given a path, this path may not exist.</span></span>
<span data-ttu-id="e46d2-383">如果项目已命名，Setter 会重命名该项目。</span><span class="sxs-lookup"><span data-stu-id="e46d2-383">Setter renames the project, if it already had a name.</span></span></summary>
        <value><span data-ttu-id="e46d2-384">项目文件的完整路径， <see langword="null" /> 如果未从磁盘加载该项目，则为。</span><span class="sxs-lookup"><span data-stu-id="e46d2-384">The full path to the project file, or <see langword="null" /> if the project is not loaded from disk.</span></span></value>
        <remarks><span data-ttu-id="e46d2-385">更新 ProjectRootElement 缓存。</span><span class="sxs-lookup"><span data-stu-id="e46d2-385">Updates the ProjectRootElement cache.</span></span></remarks>
      </Docs>
    </Member>
    <Member MemberName="HasUnsavedChanges">
      <MemberSignature Language="C#" Value="public bool HasUnsavedChanges { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasUnsavedChanges" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Construction.ProjectRootElement.HasUnsavedChanges" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasUnsavedChanges As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasUnsavedChanges { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasUnsavedChanges : bool" Usage="Microsoft.Build.Construction.ProjectRootElement.HasUnsavedChanges" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e46d2-386">XML 自上一次加载或保存后是否已进行过修改。</span><span class="sxs-lookup"><span data-stu-id="e46d2-386">Whether the XML has been modified since it was last loaded or saved.</span></span></summary>
        <value><span data-ttu-id="e46d2-387"><see langword="true" /> 如果项目已修改，则为;否则为 <see langword="false" /> 。</span><span class="sxs-lookup"><span data-stu-id="e46d2-387"><see langword="true" /> if the project has been modified; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ImportGroups">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;Microsoft.Build.Construction.ProjectImportGroupElement&gt; ImportGroups { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;class Microsoft.Build.Construction.ProjectImportGroupElement&gt; ImportGroups" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Construction.ProjectRootElement.ImportGroups" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ImportGroups As ICollection(Of ProjectImportGroupElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::ICollection&lt;Microsoft::Build::Construction::ProjectImportGroupElement ^&gt; ^ ImportGroups { System::Collections::Generic::ICollection&lt;Microsoft::Build::Construction::ProjectImportGroupElement ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ImportGroups : System.Collections.Generic.ICollection&lt;Microsoft.Build.Construction.ProjectImportGroupElement&gt;" Usage="Microsoft.Build.Construction.ProjectRootElement.ImportGroups" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;Microsoft.Build.Construction.ProjectImportGroupElement&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e46d2-388">获取子导入组的只读集合（如果有）。</span><span class="sxs-lookup"><span data-stu-id="e46d2-388">Get a read-only collection of the child import groups, if any.</span></span></summary>
        <value><span data-ttu-id="e46d2-389">此项目中的所有子导入组。</span><span class="sxs-lookup"><span data-stu-id="e46d2-389">All the child import groups in this project.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ImportGroupsReversed">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;Microsoft.Build.Construction.ProjectImportGroupElement&gt; ImportGroupsReversed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;class Microsoft.Build.Construction.ProjectImportGroupElement&gt; ImportGroupsReversed" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Construction.ProjectRootElement.ImportGroupsReversed" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ImportGroupsReversed As ICollection(Of ProjectImportGroupElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::ICollection&lt;Microsoft::Build::Construction::ProjectImportGroupElement ^&gt; ^ ImportGroupsReversed { System::Collections::Generic::ICollection&lt;Microsoft::Build::Construction::ProjectImportGroupElement ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ImportGroupsReversed : System.Collections.Generic.ICollection&lt;Microsoft.Build.Construction.ProjectImportGroupElement&gt;" Usage="Microsoft.Build.Construction.ProjectRootElement.ImportGroupsReversed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;Microsoft.Build.Construction.ProjectImportGroupElement&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e46d2-390">以相反顺序获取子导入组的只读集合（如果有）</span><span class="sxs-lookup"><span data-stu-id="e46d2-390">Get a read-only collection of the child import groups, if any, in reverse order</span></span></summary>
        <value><span data-ttu-id="e46d2-391">此项目中的所有子导入组（从最后一个组开始）。</span><span class="sxs-lookup"><span data-stu-id="e46d2-391">All the child import groups in this project, starting with the last group.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Imports">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;Microsoft.Build.Construction.ProjectImportElement&gt; Imports { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;class Microsoft.Build.Construction.ProjectImportElement&gt; Imports" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Construction.ProjectRootElement.Imports" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Imports As ICollection(Of ProjectImportElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::ICollection&lt;Microsoft::Build::Construction::ProjectImportElement ^&gt; ^ Imports { System::Collections::Generic::ICollection&lt;Microsoft::Build::Construction::ProjectImportElement ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Imports : System.Collections.Generic.ICollection&lt;Microsoft.Build.Construction.ProjectImportElement&gt;" Usage="Microsoft.Build.Construction.ProjectRootElement.Imports" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;Microsoft.Build.Construction.ProjectImportElement&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e46d2-392">获取子导入的只读集合</span><span class="sxs-lookup"><span data-stu-id="e46d2-392">Get a read-only collection of the child imports</span></span></summary>
        <value><span data-ttu-id="e46d2-393">此项目中的所有子导入元素。</span><span class="sxs-lookup"><span data-stu-id="e46d2-393">All the child import elements in this project.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InitialTargets">
      <MemberSignature Language="C#" Value="public string InitialTargets { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string InitialTargets" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Construction.ProjectRootElement.InitialTargets" />
      <MemberSignature Language="VB.NET" Value="Public Property InitialTargets As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ InitialTargets { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.InitialTargets : string with get, set" Usage="Microsoft.Build.Construction.ProjectRootElement.InitialTargets" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e46d2-394">获取或设置 InitialTargets 的值。</span><span class="sxs-lookup"><span data-stu-id="e46d2-394">Gets or sets the value of InitialTargets.</span></span> <span data-ttu-id="e46d2-395">如果不存在 InitialTargets，则返回空字符串。</span><span class="sxs-lookup"><span data-stu-id="e46d2-395">If there is no InitialTargets, returns empty string.</span></span>
<span data-ttu-id="e46d2-396">如果该值为 null（即为空），则删除该特性。</span><span class="sxs-lookup"><span data-stu-id="e46d2-396">If the value is null or empty, removes the attribute.</span></span></summary>
        <value><span data-ttu-id="e46d2-397">InitialTargets 特性值; 如果未提供 InitialTargets 属性，则为空字符串。</span><span class="sxs-lookup"><span data-stu-id="e46d2-397">The InitialTargets attribute value, or an empty string if the InitialTargets attribute is not present.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e46d2-398">如果要设置的值为空字符串或 null，则删除 InitialTargets 属性。</span><span class="sxs-lookup"><span data-stu-id="e46d2-398">Removes the InitialTargets attribute if the value to set is an empty string or null.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InitialTargetsLocation">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Construction.ElementLocation InitialTargetsLocation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Build.Construction.ElementLocation InitialTargetsLocation" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Construction.ProjectRootElement.InitialTargetsLocation" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InitialTargetsLocation As ElementLocation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Build::Construction::ElementLocation ^ InitialTargetsLocation { Microsoft::Build::Construction::ElementLocation ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InitialTargetsLocation : Microsoft.Build.Construction.ElementLocation" Usage="Microsoft.Build.Construction.ProjectRootElement.InitialTargetsLocation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Construction.ElementLocation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e46d2-399">initialtargets 特性的位置（如果有）</span><span class="sxs-lookup"><span data-stu-id="e46d2-399">Location of the initialtargets attribute, if any</span></span></summary>
        <value><span data-ttu-id="e46d2-400">InitialTargets 特性的位置; 如果没有 InitialTargets 属性，则为 <see langword="null" /> 。</span><span class="sxs-lookup"><span data-stu-id="e46d2-400">The location of the InitialTargets attribute, or <see langword="null" /> if there is no InitialTargets attribute.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemDefinitionGroups">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;Microsoft.Build.Construction.ProjectItemDefinitionGroupElement&gt; ItemDefinitionGroups { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;class Microsoft.Build.Construction.ProjectItemDefinitionGroupElement&gt; ItemDefinitionGroups" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Construction.ProjectRootElement.ItemDefinitionGroups" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ItemDefinitionGroups As ICollection(Of ProjectItemDefinitionGroupElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::ICollection&lt;Microsoft::Build::Construction::ProjectItemDefinitionGroupElement ^&gt; ^ ItemDefinitionGroups { System::Collections::Generic::ICollection&lt;Microsoft::Build::Construction::ProjectItemDefinitionGroupElement ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ItemDefinitionGroups : System.Collections.Generic.ICollection&lt;Microsoft.Build.Construction.ProjectItemDefinitionGroupElement&gt;" Usage="Microsoft.Build.Construction.ProjectRootElement.ItemDefinitionGroups" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;Microsoft.Build.Construction.ProjectItemDefinitionGroupElement&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e46d2-401">获取子项定义组的只读集合（如果有）</span><span class="sxs-lookup"><span data-stu-id="e46d2-401">Get a read-only collection of the child item definition groups, if any</span></span></summary>
        <value><span data-ttu-id="e46d2-402">此项目中的所有子项定义组。</span><span class="sxs-lookup"><span data-stu-id="e46d2-402">All the child item definition groups in this project.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemDefinitionGroupsReversed">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;Microsoft.Build.Construction.ProjectItemDefinitionGroupElement&gt; ItemDefinitionGroupsReversed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;class Microsoft.Build.Construction.ProjectItemDefinitionGroupElement&gt; ItemDefinitionGroupsReversed" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Construction.ProjectRootElement.ItemDefinitionGroupsReversed" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ItemDefinitionGroupsReversed As ICollection(Of ProjectItemDefinitionGroupElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::ICollection&lt;Microsoft::Build::Construction::ProjectItemDefinitionGroupElement ^&gt; ^ ItemDefinitionGroupsReversed { System::Collections::Generic::ICollection&lt;Microsoft::Build::Construction::ProjectItemDefinitionGroupElement ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ItemDefinitionGroupsReversed : System.Collections.Generic.ICollection&lt;Microsoft.Build.Construction.ProjectItemDefinitionGroupElement&gt;" Usage="Microsoft.Build.Construction.ProjectRootElement.ItemDefinitionGroupsReversed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;Microsoft.Build.Construction.ProjectItemDefinitionGroupElement&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e46d2-403">以相反顺序获取子项定义组的只读集合（如果有）</span><span class="sxs-lookup"><span data-stu-id="e46d2-403">Get a read-only collection of the child item definition groups, if any, in reverse order</span></span></summary>
        <value><span data-ttu-id="e46d2-404">此项目中的所有子项定义组（从最后一个组开始）。</span><span class="sxs-lookup"><span data-stu-id="e46d2-404">All the child item definition groups in this project, starting with the last group.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemDefinitions">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;Microsoft.Build.Construction.ProjectItemDefinitionElement&gt; ItemDefinitions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;class Microsoft.Build.Construction.ProjectItemDefinitionElement&gt; ItemDefinitions" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Construction.ProjectRootElement.ItemDefinitions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ItemDefinitions As ICollection(Of ProjectItemDefinitionElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::ICollection&lt;Microsoft::Build::Construction::ProjectItemDefinitionElement ^&gt; ^ ItemDefinitions { System::Collections::Generic::ICollection&lt;Microsoft::Build::Construction::ProjectItemDefinitionElement ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ItemDefinitions : System.Collections.Generic.ICollection&lt;Microsoft.Build.Construction.ProjectItemDefinitionElement&gt;" Usage="Microsoft.Build.Construction.ProjectRootElement.ItemDefinitions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;Microsoft.Build.Construction.ProjectItemDefinitionElement&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e46d2-405">获取项目文件的所有项定义组中的子项定义的只读集合（如果有）。</span><span class="sxs-lookup"><span data-stu-id="e46d2-405">Get a read-only collection of the child item definitions, if any, in all item definition groups anywhere in the project file.</span></span></summary>
        <value><span data-ttu-id="e46d2-406">获取此项目中所有项定义组中的所有子项定义。</span><span class="sxs-lookup"><span data-stu-id="e46d2-406">Gets all child item definitions in all item definition groups anywhere in this project.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemGroups">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;Microsoft.Build.Construction.ProjectItemGroupElement&gt; ItemGroups { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;class Microsoft.Build.Construction.ProjectItemGroupElement&gt; ItemGroups" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Construction.ProjectRootElement.ItemGroups" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ItemGroups As ICollection(Of ProjectItemGroupElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::ICollection&lt;Microsoft::Build::Construction::ProjectItemGroupElement ^&gt; ^ ItemGroups { System::Collections::Generic::ICollection&lt;Microsoft::Build::Construction::ProjectItemGroupElement ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ItemGroups : System.Collections.Generic.ICollection&lt;Microsoft.Build.Construction.ProjectItemGroupElement&gt;" Usage="Microsoft.Build.Construction.ProjectRootElement.ItemGroups" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;Microsoft.Build.Construction.ProjectItemGroupElement&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e46d2-407">获取子项组的只读集合（如果有）。</span><span class="sxs-lookup"><span data-stu-id="e46d2-407">Get a read-only collection over the child item groups, if any.</span></span>
<span data-ttu-id="e46d2-408">不包含任何可能不在根目录下（即“选择”元素内）的内容。</span><span class="sxs-lookup"><span data-stu-id="e46d2-408">Does not include any that may not be at the root, i.e. inside Choose elements.</span></span></summary>
        <value><span data-ttu-id="e46d2-409">此项目中的所有子项组。</span><span class="sxs-lookup"><span data-stu-id="e46d2-409">All the child item groups in this project.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e46d2-410">不包括选择元素包含的任何项组。</span><span class="sxs-lookup"><span data-stu-id="e46d2-410">Does not include any item groups contained by Choose elements.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemGroupsReversed">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;Microsoft.Build.Construction.ProjectItemGroupElement&gt; ItemGroupsReversed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;class Microsoft.Build.Construction.ProjectItemGroupElement&gt; ItemGroupsReversed" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Construction.ProjectRootElement.ItemGroupsReversed" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ItemGroupsReversed As ICollection(Of ProjectItemGroupElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::ICollection&lt;Microsoft::Build::Construction::ProjectItemGroupElement ^&gt; ^ ItemGroupsReversed { System::Collections::Generic::ICollection&lt;Microsoft::Build::Construction::ProjectItemGroupElement ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ItemGroupsReversed : System.Collections.Generic.ICollection&lt;Microsoft.Build.Construction.ProjectItemGroupElement&gt;" Usage="Microsoft.Build.Construction.ProjectRootElement.ItemGroupsReversed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;Microsoft.Build.Construction.ProjectItemGroupElement&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e46d2-411">以相反顺序获取子项组的只读集合（如果有）</span><span class="sxs-lookup"><span data-stu-id="e46d2-411">Get a read-only collection of the child item groups, if any, in reverse order</span></span></summary>
        <value><span data-ttu-id="e46d2-412">此项目中存在的所有子项组（从最后一个组开始）。</span><span class="sxs-lookup"><span data-stu-id="e46d2-412">All the child item groups present in this project, starting with the last group.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e46d2-413">不包括选择元素包含的任何项组。</span><span class="sxs-lookup"><span data-stu-id="e46d2-413">Does not include any item groups contained by Choose elements.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Items">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;Microsoft.Build.Construction.ProjectItemElement&gt; Items { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;class Microsoft.Build.Construction.ProjectItemElement&gt; Items" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Construction.ProjectRootElement.Items" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Items As ICollection(Of ProjectItemElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::ICollection&lt;Microsoft::Build::Construction::ProjectItemElement ^&gt; ^ Items { System::Collections::Generic::ICollection&lt;Microsoft::Build::Construction::ProjectItemElement ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Items : System.Collections.Generic.ICollection&lt;Microsoft.Build.Construction.ProjectItemElement&gt;" Usage="Microsoft.Build.Construction.ProjectRootElement.Items" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;Microsoft.Build.Construction.ProjectItemElement&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e46d2-414">获取项目文件的所有项组中的子项的只读集合（如果有）。</span><span class="sxs-lookup"><span data-stu-id="e46d2-414">Get a read-only collection of the child items, if any, in all item groups anywhere in the project file.</span></span>
<span data-ttu-id="e46d2-415">不限于根项组：遍历“选择”元素。</span><span class="sxs-lookup"><span data-stu-id="e46d2-415">Not restricted to root item groups: traverses through Choose elements.</span></span></summary>
        <value><span data-ttu-id="e46d2-416">此项目中的所有子项（即使它们包含在选择元素中）。</span><span class="sxs-lookup"><span data-stu-id="e46d2-416">All child items in this project, even if they are contained by Choose elements.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LastWriteTimeWhenRead">
      <MemberSignature Language="C#" Value="public DateTime LastWriteTimeWhenRead { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime LastWriteTimeWhenRead" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Construction.ProjectRootElement.LastWriteTimeWhenRead" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LastWriteTimeWhenRead As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime LastWriteTimeWhenRead { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.LastWriteTimeWhenRead : DateTime" Usage="Microsoft.Build.Construction.ProjectRootElement.LastWriteTimeWhenRead" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[get: System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e46d2-417">读取的文件的上次写入时间（读取时）。</span><span class="sxs-lookup"><span data-stu-id="e46d2-417">The last-write-time of the file that was read, when it was read.</span></span>
<span data-ttu-id="e46d2-418">这可用于查看文件是否已被外部方法在磁盘上更改。</span><span class="sxs-lookup"><span data-stu-id="e46d2-418">This can be used to see whether the file has been changed on disk by an external means.</span></span></summary>
        <value><span data-ttu-id="e46d2-419">项目文件的上次写入时间。</span><span class="sxs-lookup"><span data-stu-id="e46d2-419">The last-write-time of the project file.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e46d2-420">此属性可用于确定文件是否已被 MSBuild 进程之外的进程在磁盘上更改。</span><span class="sxs-lookup"><span data-stu-id="e46d2-420">This property can be used to determine whether a file has been changed on disk by a process other than the MSBuild process.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Open">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e46d2-421">通过从指定文件路径加载数据，初始化全局项目集合中的项目根。</span><span class="sxs-lookup"><span data-stu-id="e46d2-421">Initializes a project root in the global project collection by loading data from the specified file path.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Open">
      <MemberSignature Language="C#" Value="public static Microsoft.Build.Construction.ProjectRootElement Open (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Build.Construction.ProjectRootElement Open(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Construction.ProjectRootElement.Open(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Open (path As String) As ProjectRootElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Microsoft::Build::Construction::ProjectRootElement ^ Open(System::String ^ path);" />
      <MemberSignature Language="F#" Value="static member Open : string -&gt; Microsoft.Build.Construction.ProjectRootElement" Usage="Microsoft.Build.Construction.ProjectRootElement.Open path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Construction.ProjectRootElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="e46d2-422">指向数据的文件路径。</span><span class="sxs-lookup"><span data-stu-id="e46d2-422">The file path to the data.</span></span></param>
        <summary><span data-ttu-id="e46d2-423">通过从指定文件路径加载，初始化 ProjectRootElement 实例。</span><span class="sxs-lookup"><span data-stu-id="e46d2-423">Initialize a ProjectRootElement instance by loading from the specified file path.</span></span>
<span data-ttu-id="e46d2-424">使用全局项目集合。</span><span class="sxs-lookup"><span data-stu-id="e46d2-424">Uses the global project collection.</span></span>
<span data-ttu-id="e46d2-425">可能会引发 InvalidProjectFileException。</span><span class="sxs-lookup"><span data-stu-id="e46d2-425">May throw InvalidProjectFileException.</span></span></summary>
        <returns><span data-ttu-id="e46d2-426">初始化的项目根。</span><span class="sxs-lookup"><span data-stu-id="e46d2-426">The initialized project root.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e46d2-427">可能会引发 Microsoft.build.buildengine.invalidprojectfileexception。</span><span class="sxs-lookup"><span data-stu-id="e46d2-427">May throw InvalidProjectFileException.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Open">
      <MemberSignature Language="C#" Value="public static Microsoft.Build.Construction.ProjectRootElement Open (string path, Microsoft.Build.Evaluation.ProjectCollection projectCollection);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Build.Construction.ProjectRootElement Open(string path, class Microsoft.Build.Evaluation.ProjectCollection projectCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Construction.ProjectRootElement.Open(System.String,Microsoft.Build.Evaluation.ProjectCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Open (path As String, projectCollection As ProjectCollection) As ProjectRootElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Microsoft::Build::Construction::ProjectRootElement ^ Open(System::String ^ path, Microsoft::Build::Evaluation::ProjectCollection ^ projectCollection);" />
      <MemberSignature Language="F#" Value="static member Open : string * Microsoft.Build.Evaluation.ProjectCollection -&gt; Microsoft.Build.Construction.ProjectRootElement" Usage="Microsoft.Build.Construction.ProjectRootElement.Open (path, projectCollection)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Construction.ProjectRootElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="projectCollection" Type="Microsoft.Build.Evaluation.ProjectCollection" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="e46d2-428">指向数据的文件路径。</span><span class="sxs-lookup"><span data-stu-id="e46d2-428">The file path to the data.</span></span></param>
        <param name="projectCollection"><span data-ttu-id="e46d2-429">包含要初始化的项目的项目集合。</span><span class="sxs-lookup"><span data-stu-id="e46d2-429">The project collection containing the project to be initialized.</span></span></param>
        <summary><span data-ttu-id="e46d2-430">通过从指定文件路径加载，初始化 ProjectRootElement 实例。</span><span class="sxs-lookup"><span data-stu-id="e46d2-430">Initialize a ProjectRootElement instance by loading from the specified file path.</span></span>
<span data-ttu-id="e46d2-431">使用指定的项目集合。</span><span class="sxs-lookup"><span data-stu-id="e46d2-431">Uses the specified project collection.</span></span>
<span data-ttu-id="e46d2-432">可能会引发 InvalidProjectFileException。</span><span class="sxs-lookup"><span data-stu-id="e46d2-432">May throw InvalidProjectFileException.</span></span></summary>
        <returns><span data-ttu-id="e46d2-433">初始化的项目根。</span><span class="sxs-lookup"><span data-stu-id="e46d2-433">The initialized project root.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e46d2-434">可能会引发 Microsoft.build.buildengine.invalidprojectfileexception。</span><span class="sxs-lookup"><span data-stu-id="e46d2-434">May throw InvalidProjectFileException.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Open">
      <MemberSignature Language="C#" Value="public static Microsoft.Build.Construction.ProjectRootElement Open (string path, Microsoft.Build.Evaluation.ProjectCollection projectCollection, bool? preserveFormatting);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Build.Construction.ProjectRootElement Open(string path, class Microsoft.Build.Evaluation.ProjectCollection projectCollection, valuetype System.Nullable`1&lt;bool&gt; preserveFormatting) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Construction.ProjectRootElement.Open(System.String,Microsoft.Build.Evaluation.ProjectCollection,System.Nullable{System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Open (path As String, projectCollection As ProjectCollection, preserveFormatting As Nullable(Of Boolean)) As ProjectRootElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Microsoft::Build::Construction::ProjectRootElement ^ Open(System::String ^ path, Microsoft::Build::Evaluation::ProjectCollection ^ projectCollection, Nullable&lt;bool&gt; preserveFormatting);" />
      <MemberSignature Language="F#" Value="static member Open : string * Microsoft.Build.Evaluation.ProjectCollection * Nullable&lt;bool&gt; -&gt; Microsoft.Build.Construction.ProjectRootElement" Usage="Microsoft.Build.Construction.ProjectRootElement.Open (path, projectCollection, preserveFormatting)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Construction.ProjectRootElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" Index="0" FrameworkAlternate="msbuild-15;msbuild-15-netcore;msbuild-16;msbuild-16-netcore" />
        <Parameter Name="projectCollection" Type="Microsoft.Build.Evaluation.ProjectCollection" Index="1" FrameworkAlternate="msbuild-15;msbuild-15-netcore;msbuild-16;msbuild-16-netcore" />
        <Parameter Name="preserveFormatting" Type="System.Nullable&lt;System.Boolean&gt;" Index="2" FrameworkAlternate="msbuild-15;msbuild-15-netcore;msbuild-16;msbuild-16-netcore" />
      </Parameters>
      <Docs>
        <param name="path">To be added.</param>
        <param name="projectCollection">To be added.</param>
        <param name="preserveFormatting">To be added.</param>
        <summary><span data-ttu-id="e46d2-435">通过从指定文件路径加载，初始化 ProjectRootElement 实例。</span><span class="sxs-lookup"><span data-stu-id="e46d2-435">Initialize a ProjectRootElement instance by loading from the specified file path.</span></span>
<span data-ttu-id="e46d2-436">使用指定的项目集合，并保留文档的格式设置（如果已指定）。</span><span class="sxs-lookup"><span data-stu-id="e46d2-436">Uses the specified project collection and preserves the formatting of the document if specified.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreserveFormatting">
      <MemberSignature Language="C#" Value="public bool PreserveFormatting { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PreserveFormatting" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Construction.ProjectRootElement.PreserveFormatting" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PreserveFormatting As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool PreserveFormatting { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.PreserveFormatting : bool" Usage="Microsoft.Build.Construction.ProjectRootElement.PreserveFormatting" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e46d2-437">XML 是否保留格式设置。</span><span class="sxs-lookup"><span data-stu-id="e46d2-437">Whether the XML is preserving formatting or not.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProjectFileLocation">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Construction.ElementLocation ProjectFileLocation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Build.Construction.ElementLocation ProjectFileLocation" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Construction.ProjectRootElement.ProjectFileLocation" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProjectFileLocation As ElementLocation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Build::Construction::ElementLocation ^ ProjectFileLocation { Microsoft::Build::Construction::ElementLocation ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ProjectFileLocation : Microsoft.Build.Construction.ElementLocation" Usage="Microsoft.Build.Construction.ProjectRootElement.ProjectFileLocation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Construction.ElementLocation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e46d2-438">原始文件本身的位置，其中没有任何特定内容。</span><span class="sxs-lookup"><span data-stu-id="e46d2-438">Location of the originating file itself, not any specific content within it.</span></span>
<span data-ttu-id="e46d2-439">如果未对文件命名一个名称，则返回空位置。</span><span class="sxs-lookup"><span data-stu-id="e46d2-439">If the file has not been given a name, returns an empty location.</span></span>
<span data-ttu-id="e46d2-440">在这种情况下，“没有位置”是合乎标准的。</span><span class="sxs-lookup"><span data-stu-id="e46d2-440">This is a case where it is legitimate to "not have a location".</span></span></summary>
        <value><span data-ttu-id="e46d2-441">原始文件的位置，或者，如果没有为文件提供名称，则为空位置。</span><span class="sxs-lookup"><span data-stu-id="e46d2-441">The location of the originating file, or an empty location if the file has not been given a name.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Properties">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;Microsoft.Build.Construction.ProjectPropertyElement&gt; Properties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;class Microsoft.Build.Construction.ProjectPropertyElement&gt; Properties" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Construction.ProjectRootElement.Properties" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Properties As ICollection(Of ProjectPropertyElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::ICollection&lt;Microsoft::Build::Construction::ProjectPropertyElement ^&gt; ^ Properties { System::Collections::Generic::ICollection&lt;Microsoft::Build::Construction::ProjectPropertyElement ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Properties : System.Collections.Generic.ICollection&lt;Microsoft.Build.Construction.ProjectPropertyElement&gt;" Usage="Microsoft.Build.Construction.ProjectRootElement.Properties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;Microsoft.Build.Construction.ProjectPropertyElement&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e46d2-442">获取项目文件的所有属性组中的子属性的只读集合（如果有）。</span><span class="sxs-lookup"><span data-stu-id="e46d2-442">Geta read-only collection of the child properties, if any, in all property groups anywhere in the project file.</span></span>
<span data-ttu-id="e46d2-443">不限于根属性组：遍历“选择”元素。</span><span class="sxs-lookup"><span data-stu-id="e46d2-443">Not restricted to root property groups: traverses through Choose elements.</span></span></summary>
        <value><span data-ttu-id="e46d2-444">此项目中的所有子属性（即使它们包含在选择元素中）。</span><span class="sxs-lookup"><span data-stu-id="e46d2-444">All child properties in this project, even if they are contained by Choose elements.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PropertyGroups">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;Microsoft.Build.Construction.ProjectPropertyGroupElement&gt; PropertyGroups { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;class Microsoft.Build.Construction.ProjectPropertyGroupElement&gt; PropertyGroups" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Construction.ProjectRootElement.PropertyGroups" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PropertyGroups As ICollection(Of ProjectPropertyGroupElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::ICollection&lt;Microsoft::Build::Construction::ProjectPropertyGroupElement ^&gt; ^ PropertyGroups { System::Collections::Generic::ICollection&lt;Microsoft::Build::Construction::ProjectPropertyGroupElement ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PropertyGroups : System.Collections.Generic.ICollection&lt;Microsoft.Build.Construction.ProjectPropertyGroupElement&gt;" Usage="Microsoft.Build.Construction.ProjectRootElement.PropertyGroups" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;Microsoft.Build.Construction.ProjectPropertyGroupElement&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e46d2-445">获取子属性组的只读集合（如果有）。</span><span class="sxs-lookup"><span data-stu-id="e46d2-445">Get a read-only collection of the child property groups, if any.</span></span>
<span data-ttu-id="e46d2-446">不包含任何可能不在根目录下（即“选择”元素内）的内容。</span><span class="sxs-lookup"><span data-stu-id="e46d2-446">Does not include any that may not be at the root, i.e. inside Choose elements.</span></span></summary>
        <value><span data-ttu-id="e46d2-447">此项目中的所有子属性组。</span><span class="sxs-lookup"><span data-stu-id="e46d2-447">All the child property groups in this project.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e46d2-448">不包括选择元素包含的任何项组。</span><span class="sxs-lookup"><span data-stu-id="e46d2-448">Does not include any item groups contained by Choose elements.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PropertyGroupsReversed">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;Microsoft.Build.Construction.ProjectPropertyGroupElement&gt; PropertyGroupsReversed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;class Microsoft.Build.Construction.ProjectPropertyGroupElement&gt; PropertyGroupsReversed" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Construction.ProjectRootElement.PropertyGroupsReversed" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PropertyGroupsReversed As ICollection(Of ProjectPropertyGroupElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::ICollection&lt;Microsoft::Build::Construction::ProjectPropertyGroupElement ^&gt; ^ PropertyGroupsReversed { System::Collections::Generic::ICollection&lt;Microsoft::Build::Construction::ProjectPropertyGroupElement ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PropertyGroupsReversed : System.Collections.Generic.ICollection&lt;Microsoft.Build.Construction.ProjectPropertyGroupElement&gt;" Usage="Microsoft.Build.Construction.ProjectRootElement.PropertyGroupsReversed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;Microsoft.Build.Construction.ProjectPropertyGroupElement&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e46d2-449">以相反顺序获取子属性组的只读集合（如果有）</span><span class="sxs-lookup"><span data-stu-id="e46d2-449">Get a read-only collection of the child property groups, if any, in reverse order</span></span></summary>
        <value><span data-ttu-id="e46d2-450">此项目中存在的所有子属性组（从最后一个组开始）。</span><span class="sxs-lookup"><span data-stu-id="e46d2-450">All the child property groups present in this project, starting with the last group.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e46d2-451">不包括选择元素包含的任何项组。</span><span class="sxs-lookup"><span data-stu-id="e46d2-451">Does not include any item groups contained by Choose elements.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RawXml">
      <MemberSignature Language="C#" Value="public string RawXml { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RawXml" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Construction.ProjectRootElement.RawXml" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RawXml As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ RawXml { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RawXml : string" Usage="Microsoft.Build.Construction.ProjectRootElement.RawXml" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e46d2-452">获取将此项目表示为字符串的 XML。</span><span class="sxs-lookup"><span data-stu-id="e46d2-452">Gets the XML representing this project as a string.</span></span>
<span data-ttu-id="e46d2-453">不删除任何脏标志。</span><span class="sxs-lookup"><span data-stu-id="e46d2-453">Does not remove any dirty flag.</span></span></summary>
        <value><span data-ttu-id="e46d2-454">以字符串形式表示此项目的 XML 内容。</span><span class="sxs-lookup"><span data-stu-id="e46d2-454">The XML content that represents this project as a string.</span></span></value>
        <remarks><span data-ttu-id="e46d2-455">对于调试很有用。</span><span class="sxs-lookup"><span data-stu-id="e46d2-455">Useful for debugging.</span></span>
<span data-ttu-id="e46d2-456">请注意，我们不公开 XML 或任何其他特定的 XML API。</span><span class="sxs-lookup"><span data-stu-id="e46d2-456">Note that we do not expose an XmlDocument or any other specific XML API.</span></span></remarks>
      </Docs>
    </Member>
    <Member MemberName="Reload">
      <MemberSignature Language="C#" Value="public void Reload (bool throwIfUnsavedChanges = true, bool? preserveFormatting = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Reload(bool throwIfUnsavedChanges, valuetype System.Nullable`1&lt;bool&gt; preserveFormatting) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Construction.ProjectRootElement.Reload(System.Boolean,System.Nullable{System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reload (Optional throwIfUnsavedChanges As Boolean = true, Optional preserveFormatting As Nullable(Of Boolean) = Nothing)" />
      <MemberSignature Language="F#" Value="member this.Reload : bool * Nullable&lt;bool&gt; -&gt; unit" Usage="projectRootElement.Reload (throwIfUnsavedChanges, preserveFormatting)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="throwIfUnsavedChanges" Type="System.Boolean" Index="0" FrameworkAlternate="msbuild-15;msbuild-15-netcore;msbuild-16;msbuild-16-netcore" />
        <Parameter Name="preserveFormatting" Type="System.Nullable&lt;System.Boolean&gt;" Index="1" FrameworkAlternate="msbuild-15;msbuild-15-netcore;msbuild-16;msbuild-16-netcore" />
      </Parameters>
      <Docs>
        <param name="throwIfUnsavedChanges">To be added.</param>
        <param name="preserveFormatting">To be added.</param>
        <summary><span data-ttu-id="e46d2-457">从其文件中重载现有项目根元素。</span><span class="sxs-lookup"><span data-stu-id="e46d2-457">Reload the existing project root element from its file.</span></span>
<span data-ttu-id="e46d2-458">如果项目根元素不与磁盘上的任何文件关联，则会引发 <see cref="T:System.InvalidOperationException" />。</span><span class="sxs-lookup"><span data-stu-id="e46d2-458">An <see cref="T:System.InvalidOperationException" /> is thrown if the project root element is not associated with any file on disk.</span></span>
            
<span data-ttu-id="e46d2-459">请参见<see cref="M:Microsoft.Build.Construction.ProjectRootElement.ReloadFrom(System.Xml.XmlReader,System.Boolean,System.Nullable{System.Boolean})" /></span><span class="sxs-lookup"><span data-stu-id="e46d2-459">See <see cref="M:Microsoft.Build.Construction.ProjectRootElement.ReloadFrom(System.Xml.XmlReader,System.Boolean,System.Nullable{System.Boolean})" /></span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReloadFrom">
      <MemberSignature Language="C#" Value="public void ReloadFrom (string path, bool throwIfUnsavedChanges = true, bool? preserveFormatting = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ReloadFrom(string path, bool throwIfUnsavedChanges, valuetype System.Nullable`1&lt;bool&gt; preserveFormatting) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Construction.ProjectRootElement.ReloadFrom(System.String,System.Boolean,System.Nullable{System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReloadFrom (path As String, Optional throwIfUnsavedChanges As Boolean = true, Optional preserveFormatting As Nullable(Of Boolean) = Nothing)" />
      <MemberSignature Language="F#" Value="member this.ReloadFrom : string * bool * Nullable&lt;bool&gt; -&gt; unit" Usage="projectRootElement.ReloadFrom (path, throwIfUnsavedChanges, preserveFormatting)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" Index="0" FrameworkAlternate="msbuild-15;msbuild-15-netcore;msbuild-16;msbuild-16-netcore" />
        <Parameter Name="throwIfUnsavedChanges" Type="System.Boolean" Index="1" FrameworkAlternate="msbuild-15;msbuild-15-netcore;msbuild-16;msbuild-16-netcore" />
        <Parameter Name="preserveFormatting" Type="System.Nullable&lt;System.Boolean&gt;" Index="2" FrameworkAlternate="msbuild-15;msbuild-15-netcore;msbuild-16;msbuild-16-netcore" />
      </Parameters>
      <Docs>
        <param name="path">To be added.</param>
        <param name="throwIfUnsavedChanges">To be added.</param>
        <param name="preserveFormatting">To be added.</param>
        <summary><span data-ttu-id="e46d2-460">从指定的路径重载现有的项目根元素。如果不存在该路径，则会引发 <see cref="T:System.InvalidOperationException" />。</span><span class="sxs-lookup"><span data-stu-id="e46d2-460">Reload the existing project root element from the given path An <see cref="T:System.InvalidOperationException" /> is thrown if the path does not exist.</span></span>
            
<span data-ttu-id="e46d2-461">请参见<see cref="M:Microsoft.Build.Construction.ProjectRootElement.ReloadFrom(System.Xml.XmlReader,System.Boolean,System.Nullable{System.Boolean})" /></span><span class="sxs-lookup"><span data-stu-id="e46d2-461">See <see cref="M:Microsoft.Build.Construction.ProjectRootElement.ReloadFrom(System.Xml.XmlReader,System.Boolean,System.Nullable{System.Boolean})" /></span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReloadFrom">
      <MemberSignature Language="C#" Value="public void ReloadFrom (System.Xml.XmlReader reader, bool throwIfUnsavedChanges = true, bool? preserveFormatting = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ReloadFrom(class System.Xml.XmlReader reader, bool throwIfUnsavedChanges, valuetype System.Nullable`1&lt;bool&gt; preserveFormatting) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Construction.ProjectRootElement.ReloadFrom(System.Xml.XmlReader,System.Boolean,System.Nullable{System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReloadFrom (reader As XmlReader, Optional throwIfUnsavedChanges As Boolean = true, Optional preserveFormatting As Nullable(Of Boolean) = Nothing)" />
      <MemberSignature Language="F#" Value="member this.ReloadFrom : System.Xml.XmlReader * bool * Nullable&lt;bool&gt; -&gt; unit" Usage="projectRootElement.ReloadFrom (reader, throwIfUnsavedChanges, preserveFormatting)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" Index="0" FrameworkAlternate="msbuild-15;msbuild-15-netcore;msbuild-16;msbuild-16-netcore" />
        <Parameter Name="throwIfUnsavedChanges" Type="System.Boolean" Index="1" FrameworkAlternate="msbuild-15;msbuild-15-netcore;msbuild-16;msbuild-16-netcore" />
        <Parameter Name="preserveFormatting" Type="System.Nullable&lt;System.Boolean&gt;" Index="2" FrameworkAlternate="msbuild-15;msbuild-15-netcore;msbuild-16;msbuild-16-netcore" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="e46d2-462">要从中读取的读取器</span><span class="sxs-lookup"><span data-stu-id="e46d2-462">Reader to read from</span></span></param>
        <param name="throwIfUnsavedChanges"><span data-ttu-id="e46d2-463">如果设置为 false，则重载操作将丢弃所有未保存的更改。</span><span class="sxs-lookup"><span data-stu-id="e46d2-463">If set to false, the reload operation will discard any unsaved changes.</span></span>
<span data-ttu-id="e46d2-464">否则，存在未保存的更改将引发 <see cref="T:System.InvalidOperationException" />。</span><span class="sxs-lookup"><span data-stu-id="e46d2-464">Otherwise, an <see cref="T:System.InvalidOperationException" /> is thrown when unsaved changes are present.</span></span></param>
        <param name="preserveFormatting"><span data-ttu-id="e46d2-465">重载是否应保留格式设置。</span><span class="sxs-lookup"><span data-stu-id="e46d2-465">Whether the reload should preserve formatting or not.</span></span> <span data-ttu-id="e46d2-466">null 值会导致重载重新使用现有的 <see cref="P:Microsoft.Build.Construction.ProjectRootElement.PreserveFormatting" /> 值。</span><span class="sxs-lookup"><span data-stu-id="e46d2-466">A null value causes the reload to reuse the existing <see cref="P:Microsoft.Build.Construction.ProjectRootElement.PreserveFormatting" /> value.</span></span></param>
        <summary><span data-ttu-id="e46d2-467">从指定的 <paramref name="reader" /> 重载现有的项目根元素。重载操作完全替换该 <see cref="T:Microsoft.Build.Construction.ProjectRootElement" /> 对象的状态。</span><span class="sxs-lookup"><span data-stu-id="e46d2-467">Reload the existing project root element from the given <paramref name="reader" /> A reload operation completely replaces the state of this <see cref="T:Microsoft.Build.Construction.ProjectRootElement" /> object.</span></span> <span data-ttu-id="e46d2-468">此操作将对象标记为脏（请参阅 <see cref="M:Microsoft.Build.Construction.ProjectRootElement.MarkDirty(System.String,System.String)" />，详细了解副作用）。</span><span class="sxs-lookup"><span data-stu-id="e46d2-468">This operation marks the object as dirty (see <see cref="M:Microsoft.Build.Construction.ProjectRootElement.MarkDirty(System.String,System.String)" /> for side effects).</span></span> 
            
<span data-ttu-id="e46d2-469">如果新状态使用无效的 XML 或 MSBuild 语法，则此方法会引发 <see cref="T:Microsoft.Build.Exceptions.InvalidProjectFileException" />。</span><span class="sxs-lookup"><span data-stu-id="e46d2-469">If the new state has invalid XML or MSBuild syntax, then this method throws an <see cref="T:Microsoft.Build.Exceptions.InvalidProjectFileException" />.</span></span>
<span data-ttu-id="e46d2-470">发生这种情况时，此对象的状态不会发生变化。</span><span class="sxs-lookup"><span data-stu-id="e46d2-470">When this happens, the state of this object does not change.</span></span>
            
<span data-ttu-id="e46d2-471">从 XMLReader 重载将保留先前的根元素位置（<see cref="P:Microsoft.Build.Construction.ProjectRootElement.FullPath" />、<see cref="P:Microsoft.Build.Construction.ProjectRootElement.DirectoryPath" />、<see cref="P:Microsoft.Build.Construction.ProjectRootElement.ProjectFileLocation" />）。</span><span class="sxs-lookup"><span data-stu-id="e46d2-471">Reloading from an XMLReader will retain the previous root element location (<see cref="P:Microsoft.Build.Construction.ProjectRootElement.FullPath" />, <see cref="P:Microsoft.Build.Construction.ProjectRootElement.DirectoryPath" />, <see cref="P:Microsoft.Build.Construction.ProjectRootElement.ProjectFileLocation" />).</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Save">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e46d2-472">将项目保存到文件系统（如果项目已修改）。</span><span class="sxs-lookup"><span data-stu-id="e46d2-472">Saves the project, if modified, to the file system.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public void Save ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Save() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Construction.ProjectRootElement.Save" />
      <MemberSignature Language="VB.NET" Value="Public Sub Save ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Save();" />
      <MemberSignature Language="F#" Value="member this.Save : unit -&gt; unit" Usage="projectRootElement.Save " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e46d2-473">将项目保存到文件系统（如果项目被标记为脏）。</span><span class="sxs-lookup"><span data-stu-id="e46d2-473">Save the project to the file system, if dirty.</span></span>
<span data-ttu-id="e46d2-474">使用编码属性返回的编码。</span><span class="sxs-lookup"><span data-stu-id="e46d2-474">Uses the Encoding returned by the Encoding property.</span></span>
<span data-ttu-id="e46d2-475">创建任何所需的目录。</span><span class="sxs-lookup"><span data-stu-id="e46d2-475">Creates any necessary directories.</span></span>
<span data-ttu-id="e46d2-476">可能引发与 IO 相关的异常。</span><span class="sxs-lookup"><span data-stu-id="e46d2-476">May throw IO-related exceptions.</span></span>
<span data-ttu-id="e46d2-477">清除脏标志。</span><span class="sxs-lookup"><span data-stu-id="e46d2-477">Clears the dirty flag.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e46d2-478">使用由编码属性返回的字符编码。</span><span class="sxs-lookup"><span data-stu-id="e46d2-478">Uses the character Encoding returned by the Encoding property.</span></span> <span data-ttu-id="e46d2-479">将项目标记为未修改。</span><span class="sxs-lookup"><span data-stu-id="e46d2-479">Marks the project as unmodified.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public void Save (System.IO.TextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Save(class System.IO.TextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Construction.ProjectRootElement.Save(System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Save (writer As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Save(System::IO::TextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="member this.Save : System.IO.TextWriter -&gt; unit" Usage="projectRootElement.Save writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="e46d2-480">要将项目写入到的文本编写器。</span><span class="sxs-lookup"><span data-stu-id="e46d2-480">The text writer to write the project to.</span></span></param>
        <summary><span data-ttu-id="e46d2-481">将项目保存到提供的 TextWriter 中（无论项目是否被标记为脏）。</span><span class="sxs-lookup"><span data-stu-id="e46d2-481">Save the project to the provided TextWriter, whether or not it is dirty.</span></span>
<span data-ttu-id="e46d2-482">使用 TextWriter 的编码。</span><span class="sxs-lookup"><span data-stu-id="e46d2-482">Uses the encoding of the TextWriter.</span></span>
<span data-ttu-id="e46d2-483">清除脏标志。</span><span class="sxs-lookup"><span data-stu-id="e46d2-483">Clears the Dirty flag.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e46d2-484">使用该的字符编码。</span><span class="sxs-lookup"><span data-stu-id="e46d2-484">Uses the character encoding of the TextWriter.</span></span> <span data-ttu-id="e46d2-485">将项目标记为未修改。</span><span class="sxs-lookup"><span data-stu-id="e46d2-485">Marks the project as unmodified.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public void Save (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Save(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Construction.ProjectRootElement.Save(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Save (path As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Save(System::String ^ path);" />
      <MemberSignature Language="F#" Value="member this.Save : string -&gt; unit" Usage="projectRootElement.Save path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="e46d2-486">存储项目的文件路径。</span><span class="sxs-lookup"><span data-stu-id="e46d2-486">The file path to the project in storage.</span></span></param>
        <summary><span data-ttu-id="e46d2-487">将项目保存到文件系统（如果项目被标记为脏，或者路径异常）。</span><span class="sxs-lookup"><span data-stu-id="e46d2-487">Save the project to the file system, if dirty or the path is different.</span></span>
<span data-ttu-id="e46d2-488">创建任何所需的目录。</span><span class="sxs-lookup"><span data-stu-id="e46d2-488">Creates any necessary directories.</span></span>
<span data-ttu-id="e46d2-489">可能引发 IO 相关的异常。</span><span class="sxs-lookup"><span data-stu-id="e46d2-489">May throw IO related exceptions.</span></span>
<span data-ttu-id="e46d2-490">清除脏标志。</span><span class="sxs-lookup"><span data-stu-id="e46d2-490">Clears the Dirty flag.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e46d2-491">将项目标记为未修改。</span><span class="sxs-lookup"><span data-stu-id="e46d2-491">Marks the project as unmodified.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public void Save (System.Text.Encoding saveEncoding);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Save(class System.Text.Encoding saveEncoding) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Construction.ProjectRootElement.Save(System.Text.Encoding)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Save (saveEncoding As Encoding)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Save(System::Text::Encoding ^ saveEncoding);" />
      <MemberSignature Language="F#" Value="member this.Save : System.Text.Encoding -&gt; unit" Usage="projectRootElement.Save saveEncoding" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="saveEncoding" Type="System.Text.Encoding" />
      </Parameters>
      <Docs>
        <param name="saveEncoding"><span data-ttu-id="e46d2-492">用于保存项目的字符编码。</span><span class="sxs-lookup"><span data-stu-id="e46d2-492">The character encoding used to save the project.</span></span></param>
        <summary><span data-ttu-id="e46d2-493">将项目保存到文件系统（如果项目被标记为脏）。</span><span class="sxs-lookup"><span data-stu-id="e46d2-493">Save the project to the file system, if dirty.</span></span>
<span data-ttu-id="e46d2-494">创建任何所需的目录。</span><span class="sxs-lookup"><span data-stu-id="e46d2-494">Creates any necessary directories.</span></span>
<span data-ttu-id="e46d2-495">可能引发与 IO 相关的异常。</span><span class="sxs-lookup"><span data-stu-id="e46d2-495">May throw IO-related exceptions.</span></span>
<span data-ttu-id="e46d2-496">清除脏标志。</span><span class="sxs-lookup"><span data-stu-id="e46d2-496">Clears the dirty flag.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e46d2-497">将项目标记为未修改。</span><span class="sxs-lookup"><span data-stu-id="e46d2-497">Marks the project as unmodified.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public void Save (string path, System.Text.Encoding encoding);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Save(string path, class System.Text.Encoding encoding) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Construction.ProjectRootElement.Save(System.String,System.Text.Encoding)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Save (path As String, encoding As Encoding)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Save(System::String ^ path, System::Text::Encoding ^ encoding);" />
      <MemberSignature Language="F#" Value="member this.Save : string * System.Text.Encoding -&gt; unit" Usage="projectRootElement.Save (path, encoding)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="encoding" Type="System.Text.Encoding" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="e46d2-498">存储项目的文件路径。</span><span class="sxs-lookup"><span data-stu-id="e46d2-498">The file path to the project in storage.</span></span></param>
        <param name="encoding"><span data-ttu-id="e46d2-499">用于保存项目的字符编码。</span><span class="sxs-lookup"><span data-stu-id="e46d2-499">The character encoding used to save the project.</span></span></param>
        <summary><span data-ttu-id="e46d2-500">将项目保存到文件系统（如果项目被标记为脏，或者路径异常）。</span><span class="sxs-lookup"><span data-stu-id="e46d2-500">Save the project to the file system, if dirty or the path is different.</span></span>
<span data-ttu-id="e46d2-501">创建任何所需的目录。</span><span class="sxs-lookup"><span data-stu-id="e46d2-501">Creates any necessary directories.</span></span>
<span data-ttu-id="e46d2-502">可能引发 IO 相关的异常。</span><span class="sxs-lookup"><span data-stu-id="e46d2-502">May throw IO related exceptions.</span></span>
<span data-ttu-id="e46d2-503">清除脏标志。</span><span class="sxs-lookup"><span data-stu-id="e46d2-503">Clears the Dirty flag.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e46d2-504">将项目标记为未修改。</span><span class="sxs-lookup"><span data-stu-id="e46d2-504">Marks the project as unmodified.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Sdk">
      <MemberSignature Language="C#" Value="public string Sdk { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Sdk" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Construction.ProjectRootElement.Sdk" />
      <MemberSignature Language="VB.NET" Value="Public Property Sdk As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Sdk { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Sdk : string with get, set" Usage="Microsoft.Build.Construction.ProjectRootElement.Sdk" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="msbuild-15;msbuild-15-netcore;msbuild-16;msbuild-16-netcore">
          <AttributeName Language="C#">[get: System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="msbuild-15;msbuild-15-netcore;msbuild-16;msbuild-16-netcore">
          <AttributeName Language="C#">[set: System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e46d2-505">获取或设置项目所用的软件开发工具包 (SDK) 的列表（以分号分隔）。</span><span class="sxs-lookup"><span data-stu-id="e46d2-505">Gets or sets a semicolon delimited list of software development kits (SDK) that the project uses.</span></span>
<span data-ttu-id="e46d2-506">如果已指定值，则直接在项目的顶部导入 Sdk.props，并直接在指定 SDK 的底部导入 Sdk.targets。</span><span class="sxs-lookup"><span data-stu-id="e46d2-506">If  a value is specified, an Sdk.props is simplicity imported at the top of the project and an Sdk.targets is simplicity imported at the bottom from the specified SDK.</span></span>
<span data-ttu-id="e46d2-507">如果该值为 null（即为空），则删除该特性。</span><span class="sxs-lookup"><span data-stu-id="e46d2-507">If the value is null or empty, removes the attribute.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SdkLocation">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Construction.ElementLocation SdkLocation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Build.Construction.ElementLocation SdkLocation" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Construction.ProjectRootElement.SdkLocation" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SdkLocation As ElementLocation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Build::Construction::ElementLocation ^ SdkLocation { Microsoft::Build::Construction::ElementLocation ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SdkLocation : Microsoft.Build.Construction.ElementLocation" Usage="Microsoft.Build.Construction.ProjectRootElement.SdkLocation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Construction.ElementLocation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e46d2-508">SDK 特性的位置（如果有）</span><span class="sxs-lookup"><span data-stu-id="e46d2-508">Location of the Sdk attribute, if any</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Targets">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;Microsoft.Build.Construction.ProjectTargetElement&gt; Targets { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;class Microsoft.Build.Construction.ProjectTargetElement&gt; Targets" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Construction.ProjectRootElement.Targets" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Targets As ICollection(Of ProjectTargetElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::ICollection&lt;Microsoft::Build::Construction::ProjectTargetElement ^&gt; ^ Targets { System::Collections::Generic::ICollection&lt;Microsoft::Build::Construction::ProjectTargetElement ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Targets : System.Collections.Generic.ICollection&lt;Microsoft.Build.Construction.ProjectTargetElement&gt;" Usage="Microsoft.Build.Construction.ProjectRootElement.Targets" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;Microsoft.Build.Construction.ProjectTargetElement&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e46d2-509">获取子目标的只读集合</span><span class="sxs-lookup"><span data-stu-id="e46d2-509">Get a read-only collection of the child targets</span></span></summary>
        <value><span data-ttu-id="e46d2-510">此项目中的所有子目标。</span><span class="sxs-lookup"><span data-stu-id="e46d2-510">All the child targets in this project.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TimeLastChanged">
      <MemberSignature Language="C#" Value="public DateTime TimeLastChanged { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime TimeLastChanged" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Construction.ProjectRootElement.TimeLastChanged" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TimeLastChanged As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime TimeLastChanged { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.TimeLastChanged : DateTime" Usage="Microsoft.Build.Construction.ProjectRootElement.TimeLastChanged" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[get: System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e46d2-511">上次修改此对象的时间。</span><span class="sxs-lookup"><span data-stu-id="e46d2-511">The time that this object was last changed.</span></span> <span data-ttu-id="e46d2-512">如果加载或创建后未对其进行更改，则其值为 <see cref="F:System.DateTime.MinValue" />。</span><span class="sxs-lookup"><span data-stu-id="e46d2-512">If it hasn't been changed since being loaded or created, its value is <see cref="F:System.DateTime.MinValue" />.</span></span></summary>
        <value><span data-ttu-id="e46d2-513">上次修改此项目的时间。</span><span class="sxs-lookup"><span data-stu-id="e46d2-513">The time that this project was last modified.</span></span></value>
        <remarks><span data-ttu-id="e46d2-514">这由 VB/c # 项目系统使用。</span><span class="sxs-lookup"><span data-stu-id="e46d2-514">This is used by the VB/C# project system.</span></span></remarks>
      </Docs>
    </Member>
    <Member MemberName="ToolsVersion">
      <MemberSignature Language="C#" Value="public string ToolsVersion { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ToolsVersion" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Construction.ProjectRootElement.ToolsVersion" />
      <MemberSignature Language="VB.NET" Value="Public Property ToolsVersion As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ToolsVersion { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ToolsVersion : string with get, set" Usage="Microsoft.Build.Construction.ProjectRootElement.ToolsVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e46d2-515">获取或设置 ToolsVersion 的值。</span><span class="sxs-lookup"><span data-stu-id="e46d2-515">Gets or sets the value of ToolsVersion.</span></span> <span data-ttu-id="e46d2-516">如果不存在 ToolsVersion，则返回空字符串。</span><span class="sxs-lookup"><span data-stu-id="e46d2-516">If there is no ToolsVersion, returns empty string.</span></span>
<span data-ttu-id="e46d2-517">如果该值为 null（即为空），则删除该特性。</span><span class="sxs-lookup"><span data-stu-id="e46d2-517">If the value is null or empty, removes the attribute.</span></span></summary>
        <value><span data-ttu-id="e46d2-518">ToolsVersion 特性值; 如果未提供 ToolsVersion 属性，则为空字符串。</span><span class="sxs-lookup"><span data-stu-id="e46d2-518">The ToolsVersion attribute value, or an empty string if the ToolsVersion attribute is not present.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e46d2-519">如果要设置的值为空字符串或 null，则删除 ToolsVersion 属性。</span><span class="sxs-lookup"><span data-stu-id="e46d2-519">Removes the ToolsVersion attribute if the value to set is an empty string or null.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToolsVersionLocation">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Construction.ElementLocation ToolsVersionLocation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Build.Construction.ElementLocation ToolsVersionLocation" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Construction.ProjectRootElement.ToolsVersionLocation" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ToolsVersionLocation As ElementLocation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Build::Construction::ElementLocation ^ ToolsVersionLocation { Microsoft::Build::Construction::ElementLocation ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ToolsVersionLocation : Microsoft.Build.Construction.ElementLocation" Usage="Microsoft.Build.Construction.ProjectRootElement.ToolsVersionLocation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Construction.ElementLocation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e46d2-520">toolsversion 特性的位置（如果有）</span><span class="sxs-lookup"><span data-stu-id="e46d2-520">Location of the toolsversion attribute, if any</span></span></summary>
        <value><span data-ttu-id="e46d2-521">ToolsVersion 特性的位置; 如果没有 ToolsVersion 属性，则为 <see langword="null" /> 。</span><span class="sxs-lookup"><span data-stu-id="e46d2-521">The location of the ToolsVersion attribute, or <see langword="null" /> if there is no ToolsVersion attribute.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TreatAsLocalProperty">
      <MemberSignature Language="C#" Value="public string TreatAsLocalProperty { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TreatAsLocalProperty" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Construction.ProjectRootElement.TreatAsLocalProperty" />
      <MemberSignature Language="VB.NET" Value="Public Property TreatAsLocalProperty As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TreatAsLocalProperty { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TreatAsLocalProperty : string with get, set" Usage="Microsoft.Build.Construction.ProjectRootElement.TreatAsLocalProperty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="msbuild-15;msbuild-15-netcore;msbuild-16;msbuild-16-netcore;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[get: System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="msbuild-15;msbuild-15-netcore;msbuild-16;msbuild-16-netcore;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[set: System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e46d2-522">获取或设置 TreatAsLocalProperty 的值。</span><span class="sxs-lookup"><span data-stu-id="e46d2-522">Gets or sets the value of TreatAsLocalProperty.</span></span> <span data-ttu-id="e46d2-523">如果不存在标志，则返回空字符串。</span><span class="sxs-lookup"><span data-stu-id="e46d2-523">If there is no tag, returns empty string.</span></span>
<span data-ttu-id="e46d2-524">如果该值设为 null（即为空），则删除该特性。</span><span class="sxs-lookup"><span data-stu-id="e46d2-524">If the value being set is null or empty, removes the attribute.</span></span></summary>
        <value><span data-ttu-id="e46d2-525">TreatAsLocalProperty 特性值; 如果未提供 TreatAsLocalProperty 属性，则为空字符串。</span><span class="sxs-lookup"><span data-stu-id="e46d2-525">The TreatAsLocalProperty attribute value, or an empty string if the TreatAsLocalProperty attribute is not present.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e46d2-526">如果要设置的值为空字符串或 null，则删除 TreatAsLocalProperty 属性。</span><span class="sxs-lookup"><span data-stu-id="e46d2-526">Removes the TreatAsLocalProperty attribute if the value to set is an empty string or null.</span></span>  
  
 <span data-ttu-id="e46d2-527">有关特性的详细信息 `TreatAsLocalProperty` ，请参阅 [项目元素 (MSBuild) ](/visualstudio/msbuild/project-element-msbuild) 和 [如何：用不同选项生成相同的源文件](/visualstudio/msbuild/how-to-build-the-same-source-files-with-different-options)。</span><span class="sxs-lookup"><span data-stu-id="e46d2-527">For more information about the `TreatAsLocalProperty` attribute, see [Project Element (MSBuild)](/visualstudio/msbuild/project-element-msbuild) and [How to: Build the Same Source Files with Different Options](/visualstudio/msbuild/how-to-build-the-same-source-files-with-different-options).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TreatAsLocalPropertyLocation">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Construction.ElementLocation TreatAsLocalPropertyLocation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Build.Construction.ElementLocation TreatAsLocalPropertyLocation" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Construction.ProjectRootElement.TreatAsLocalPropertyLocation" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TreatAsLocalPropertyLocation As ElementLocation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Build::Construction::ElementLocation ^ TreatAsLocalPropertyLocation { Microsoft::Build::Construction::ElementLocation ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TreatAsLocalPropertyLocation : Microsoft.Build.Construction.ElementLocation" Usage="Microsoft.Build.Construction.ProjectRootElement.TreatAsLocalPropertyLocation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Construction.ElementLocation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e46d2-528">TreatAsLocalProperty 特性的位置（如果有）</span><span class="sxs-lookup"><span data-stu-id="e46d2-528">Location of the TreatAsLocalProperty attribute, if any</span></span></summary>
        <value><span data-ttu-id="e46d2-529">TreatAsLocalProperty 特性位置，或者， <see langword="null" /> 如果没有 TreatAsLocalProperty 属性，则为。</span><span class="sxs-lookup"><span data-stu-id="e46d2-529">The TreatAsLocalProperty attribute location, or <see langword="null" /> if there is no TreatAsLocalProperty attribute.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="TryOpen">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e46d2-530">获取从指定文件路径加载到内存中的全局项目集合中的项目根。</span><span class="sxs-lookup"><span data-stu-id="e46d2-530">Gets the project root in the global project collection that was loaded into memory from the specified file path.</span></span> <span data-ttu-id="e46d2-531">如果它当前不在内存中，则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="e46d2-531">or <see langword="null" /> if it is not currently in memory.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TryOpen">
      <MemberSignature Language="C#" Value="public static Microsoft.Build.Construction.ProjectRootElement TryOpen (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Build.Construction.ProjectRootElement TryOpen(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Construction.ProjectRootElement.TryOpen(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryOpen (path As String) As ProjectRootElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Microsoft::Build::Construction::ProjectRootElement ^ TryOpen(System::String ^ path);" />
      <MemberSignature Language="F#" Value="static member TryOpen : string -&gt; Microsoft.Build.Construction.ProjectRootElement" Usage="Microsoft.Build.Construction.ProjectRootElement.TryOpen path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Construction.ProjectRootElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="e46d2-532">ProjectRootElement 的路径，不能为 null。</span><span class="sxs-lookup"><span data-stu-id="e46d2-532">The path of the ProjectRootElement, cannot be null.</span></span></param>
        <summary><span data-ttu-id="e46d2-533">如果已加载，则返回指定路径的 ProjectRootElement；如果它当前不在内存中，则返回 null。</span><span class="sxs-lookup"><span data-stu-id="e46d2-533">Returns the ProjectRootElement for the given path if it has been loaded, or null if it is not currently in memory.</span></span>
<span data-ttu-id="e46d2-534">使用全局项目集合。</span><span class="sxs-lookup"><span data-stu-id="e46d2-534">Uses the global project collection.</span></span></summary>
        <returns><span data-ttu-id="e46d2-535">加载的 ProjectRootElement，如果它当前不在内存中，则为 null。</span><span class="sxs-lookup"><span data-stu-id="e46d2-535">The loaded ProjectRootElement, or null if it is not currently in memory.</span></span></returns>
        <remarks><span data-ttu-id="e46d2-536">ProjectRootElements 可能会因为内存不足而被丢弃。</span><span class="sxs-lookup"><span data-stu-id="e46d2-536">It is possible for ProjectRootElements to be brought into memory and discarded due to memory pressure.</span></span> <span data-ttu-id="e46d2-537">因此，此方法返回 false 并不表示它从未加载过，只是它当前不在内存中。</span><span class="sxs-lookup"><span data-stu-id="e46d2-537">Therefore this method returning false does not indicate that it has never been loaded, only that it is not currently in memory.</span></span></remarks>
      </Docs>
    </Member>
    <Member MemberName="TryOpen">
      <MemberSignature Language="C#" Value="public static Microsoft.Build.Construction.ProjectRootElement TryOpen (string path, Microsoft.Build.Evaluation.ProjectCollection projectCollection);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Build.Construction.ProjectRootElement TryOpen(string path, class Microsoft.Build.Evaluation.ProjectCollection projectCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Construction.ProjectRootElement.TryOpen(System.String,Microsoft.Build.Evaluation.ProjectCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryOpen (path As String, projectCollection As ProjectCollection) As ProjectRootElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Microsoft::Build::Construction::ProjectRootElement ^ TryOpen(System::String ^ path, Microsoft::Build::Evaluation::ProjectCollection ^ projectCollection);" />
      <MemberSignature Language="F#" Value="static member TryOpen : string * Microsoft.Build.Evaluation.ProjectCollection -&gt; Microsoft.Build.Construction.ProjectRootElement" Usage="Microsoft.Build.Construction.ProjectRootElement.TryOpen (path, projectCollection)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Construction.ProjectRootElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="projectCollection" Type="Microsoft.Build.Evaluation.ProjectCollection" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="e46d2-538">ProjectRootElement 的路径，不能为 null。</span><span class="sxs-lookup"><span data-stu-id="e46d2-538">The path of the ProjectRootElement, cannot be null.</span></span></param>
        <param name="projectCollection"><span data-ttu-id="e46d2-539">项目将要加载到的 <see cref="T:Microsoft.Build.Evaluation.ProjectCollection" />。</span><span class="sxs-lookup"><span data-stu-id="e46d2-539">The <see cref="T:Microsoft.Build.Evaluation.ProjectCollection" /> to load the project into.</span></span></param>
        <summary><span data-ttu-id="e46d2-540">如果已加载，则返回指定路径的 ProjectRootElement；如果它当前不在内存中，则返回 null。</span><span class="sxs-lookup"><span data-stu-id="e46d2-540">Returns the ProjectRootElement for the given path if it has been loaded, or null if it is not currently in memory.</span></span>
<span data-ttu-id="e46d2-541">使用指定的项目集合。</span><span class="sxs-lookup"><span data-stu-id="e46d2-541">Uses the specified project collection.</span></span></summary>
        <returns><span data-ttu-id="e46d2-542">加载的 ProjectRootElement，如果它当前不在内存中，则为 null。</span><span class="sxs-lookup"><span data-stu-id="e46d2-542">The loaded ProjectRootElement, or null if it is not currently in memory.</span></span></returns>
        <remarks><span data-ttu-id="e46d2-543">ProjectRootElements 可能会因为内存不足而被丢弃。</span><span class="sxs-lookup"><span data-stu-id="e46d2-543">It is possible for ProjectRootElements to be brought into memory and discarded due to memory pressure.</span></span> <span data-ttu-id="e46d2-544">因此，此方法返回 false 并不表示它从未加载过，只是它当前不在内存中。</span><span class="sxs-lookup"><span data-stu-id="e46d2-544">Therefore this method returning false does not indicate that it has never been loaded, only that it is not currently in memory.</span></span></remarks>
      </Docs>
    </Member>
    <Member MemberName="TryOpen">
      <MemberSignature Language="C#" Value="public static Microsoft.Build.Construction.ProjectRootElement TryOpen (string path, Microsoft.Build.Evaluation.ProjectCollection projectCollection, bool? preserveFormatting);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Build.Construction.ProjectRootElement TryOpen(string path, class Microsoft.Build.Evaluation.ProjectCollection projectCollection, valuetype System.Nullable`1&lt;bool&gt; preserveFormatting) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Construction.ProjectRootElement.TryOpen(System.String,Microsoft.Build.Evaluation.ProjectCollection,System.Nullable{System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryOpen (path As String, projectCollection As ProjectCollection, preserveFormatting As Nullable(Of Boolean)) As ProjectRootElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Microsoft::Build::Construction::ProjectRootElement ^ TryOpen(System::String ^ path, Microsoft::Build::Evaluation::ProjectCollection ^ projectCollection, Nullable&lt;bool&gt; preserveFormatting);" />
      <MemberSignature Language="F#" Value="static member TryOpen : string * Microsoft.Build.Evaluation.ProjectCollection * Nullable&lt;bool&gt; -&gt; Microsoft.Build.Construction.ProjectRootElement" Usage="Microsoft.Build.Construction.ProjectRootElement.TryOpen (path, projectCollection, preserveFormatting)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Construction.ProjectRootElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" Index="0" FrameworkAlternate="msbuild-15;msbuild-15-netcore;msbuild-16;msbuild-16-netcore" />
        <Parameter Name="projectCollection" Type="Microsoft.Build.Evaluation.ProjectCollection" Index="1" FrameworkAlternate="msbuild-15;msbuild-15-netcore;msbuild-16;msbuild-16-netcore" />
        <Parameter Name="preserveFormatting" Type="System.Nullable&lt;System.Boolean&gt;" Index="2" FrameworkAlternate="msbuild-15;msbuild-15-netcore;msbuild-16;msbuild-16-netcore" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="e46d2-545">ProjectRootElement 的路径，不能为 null。</span><span class="sxs-lookup"><span data-stu-id="e46d2-545">The path of the ProjectRootElement, cannot be null.</span></span></param>
        <param name="projectCollection"><span data-ttu-id="e46d2-546">项目要加载到的 <see cref="T:Microsoft.Build.Evaluation.ProjectCollection" />。</span><span class="sxs-lookup"><span data-stu-id="e46d2-546">The <see cref="T:Microsoft.Build.Evaluation.ProjectCollection" /> to load the project into.</span></span></param>
        <param name="preserveFormatting"><span data-ttu-id="e46d2-547">打开时的格式设置。</span><span class="sxs-lookup"><span data-stu-id="e46d2-547">The formatting to open with.</span></span> <span data-ttu-id="e46d2-548">必须匹配集合中的格式才能成功。</span><span class="sxs-lookup"><span data-stu-id="e46d2-548">Must match the formatting in the collection to succeed.</span></span></param>
        <summary><span data-ttu-id="e46d2-549">如果已加载，则返回指定路径的 ProjectRootElement；如果它当前不在内存中，则返回 null。</span><span class="sxs-lookup"><span data-stu-id="e46d2-549">Returns the ProjectRootElement for the given path if it has been loaded, or null if it is not currently in memory.</span></span>
<span data-ttu-id="e46d2-550">使用指定的项目集合。</span><span class="sxs-lookup"><span data-stu-id="e46d2-550">Uses the specified project collection.</span></span></summary>
        <returns><span data-ttu-id="e46d2-551">加载的 ProjectRootElement，如果它当前不在内存中，则为 null。</span><span class="sxs-lookup"><span data-stu-id="e46d2-551">The loaded ProjectRootElement, or null if it is not currently in memory.</span></span></returns>
        <remarks><span data-ttu-id="e46d2-552">ProjectRootElements 可能会因为内存不足而被丢弃。</span><span class="sxs-lookup"><span data-stu-id="e46d2-552">It is possible for ProjectRootElements to be brought into memory and discarded due to memory pressure.</span></span> <span data-ttu-id="e46d2-553">因此，此方法返回 false 并不表示它从未加载过，只是它当前不在内存中。</span><span class="sxs-lookup"><span data-stu-id="e46d2-553">Therefore this method returning false does not indicate that it has never been loaded, only that it is not currently in memory.</span></span></remarks>
      </Docs>
    </Member>
    <Member MemberName="UsingTasks">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;Microsoft.Build.Construction.ProjectUsingTaskElement&gt; UsingTasks { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;class Microsoft.Build.Construction.ProjectUsingTaskElement&gt; UsingTasks" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Construction.ProjectRootElement.UsingTasks" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UsingTasks As ICollection(Of ProjectUsingTaskElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::ICollection&lt;Microsoft::Build::Construction::ProjectUsingTaskElement ^&gt; ^ UsingTasks { System::Collections::Generic::ICollection&lt;Microsoft::Build::Construction::ProjectUsingTaskElement ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UsingTasks : System.Collections.Generic.ICollection&lt;Microsoft.Build.Construction.ProjectUsingTaskElement&gt;" Usage="Microsoft.Build.Construction.ProjectRootElement.UsingTasks" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;Microsoft.Build.Construction.ProjectUsingTaskElement&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e46d2-554">获取子 usingtask 的只读集合（如果有）</span><span class="sxs-lookup"><span data-stu-id="e46d2-554">Get a read-only collection of the child usingtasks, if any</span></span></summary>
        <value><span data-ttu-id="e46d2-555">此项目中的所有子 UsingTask 元素。</span><span class="sxs-lookup"><span data-stu-id="e46d2-555">All child UsingTask elements in this project.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Version">
      <MemberSignature Language="C#" Value="public int Version { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Version" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Construction.ProjectRootElement.Version" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Version As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Version { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Version : int" Usage="Microsoft.Build.Construction.ProjectRootElement.Version" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e46d2-556">此对象的版本号。</span><span class="sxs-lookup"><span data-stu-id="e46d2-556">Version number of this object.</span></span>
<span data-ttu-id="e46d2-557">主机可以将其与存储的版本号进行比较，以确定项目的 XML 是否已更改，即使在更改后已保存。</span><span class="sxs-lookup"><span data-stu-id="e46d2-557">A host can compare this to a stored version number to determine whether a project's XML has changed, even if it has also been saved since.</span></span>
            
<span data-ttu-id="e46d2-558">实际值没有意义：一个编辑行为可能导致该值多次递增，因此只应将其与存储的值进行比较。</span><span class="sxs-lookup"><span data-stu-id="e46d2-558">The actual value is meaningless: an edit may increment it more than once, so it should only be compared to a stored value.</span></span></summary>
        <value><span data-ttu-id="e46d2-559">此对象的版本号。</span><span class="sxs-lookup"><span data-stu-id="e46d2-559">The version number of this object.</span></span></value>
        <remarks><span data-ttu-id="e46d2-560">由项目类用来确定是否发生了更改，以确定是否发生了更改。</span><span class="sxs-lookup"><span data-stu-id="e46d2-560">Used by the Project class to figure whether changes have occurred that it might want to pick up by reevaluation.</span></span>
            
<span data-ttu-id="e46d2-561">由 ProjectRootElement 类用来确定是否需要保存。</span><span class="sxs-lookup"><span data-stu-id="e46d2-561">Used by the ProjectRootElement class to determine whether it needs to save.</span></span>
            
<span data-ttu-id="e46d2-562">此数字对于 appdomain 是唯一的。</span><span class="sxs-lookup"><span data-stu-id="e46d2-562">This number is unique to the appdomain.</span></span> <span data-ttu-id="e46d2-563">这意味着，如果 ProjectRootElement 已卸载 (可能在修改) 并重新加载后，可能会知道版本不会重置为 "0"。</span><span class="sxs-lookup"><span data-stu-id="e46d2-563">That means that it is possible to know when a ProjectRootElement has been unloaded (perhaps after modification) and reloaded -- the version won't reset to '0'.</span></span>
            
<span data-ttu-id="e46d2-564">假设我们没有超过2000000000的编辑内容。</span><span class="sxs-lookup"><span data-stu-id="e46d2-564">We're assuming we don't have over 2 billion edits.</span></span></remarks>
      </Docs>
    </Member>
  </Members>
</Type>
