<Type Name="ProjectElementContainer" FullName="Microsoft.Build.Construction.ProjectElementContainer">
  <Metadata><Meta Name="ms.openlocfilehash" Value="6a0435a1810ff7cd09152d9a1427a42fc7acb3c9" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89847997" /></Metadata><TypeSignature Language="C#" Value="public abstract class ProjectElementContainer : Microsoft.Build.Construction.ProjectElement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ProjectElementContainer extends Microsoft.Build.Construction.ProjectElement" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Build.Construction.ProjectElementContainer" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ProjectElementContainer&#xA;Inherits ProjectElement" />
  <TypeSignature Language="C++ CLI" Value="public ref class ProjectElementContainer abstract : Microsoft::Build::Construction::ProjectElement" />
  <TypeSignature Language="F#" Value="type ProjectElementContainer = class&#xA;    inherit ProjectElement" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Build</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>15.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.Build.Construction.ProjectElement</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="83e46-101">项目元素的容器</span><span class="sxs-lookup"><span data-stu-id="83e46-101">A container for project elements</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="AllChildren">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Construction.ProjectElement&gt; AllChildren { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Construction.ProjectElement&gt; AllChildren" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Construction.ProjectElementContainer.AllChildren" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AllChildren As IEnumerable(Of ProjectElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Construction::ProjectElement ^&gt; ^ AllChildren { System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Construction::ProjectElement ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AllChildren : seq&lt;Microsoft.Build.Construction.ProjectElement&gt;" Usage="Microsoft.Build.Construction.ProjectElementContainer.AllChildren" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Construction.ProjectElement&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="83e46-102">获取所有子元素的枚举器（以递归方式获取）。</span><span class="sxs-lookup"><span data-stu-id="83e46-102">Get an enumerator over all children, gotten recursively.</span></span>
<span data-ttu-id="83e46-103">以深度优先的方式遍历子元素。</span><span class="sxs-lookup"><span data-stu-id="83e46-103">Walks the children in a depth-first manner.</span></span></summary>
        <value><span data-ttu-id="83e46-104">对所有子元素的递归深度优先的枚举器。</span><span class="sxs-lookup"><span data-stu-id="83e46-104">A recursive depth-first enumerator over all child elements.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83e46-105">递归是可能的，因为项目元素容器可以包含自身为项目元素容器的子级。</span><span class="sxs-lookup"><span data-stu-id="83e46-105">Recursion is possible because project element containers may contain children that are themselves project element containers.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendChild">
      <MemberSignature Language="C#" Value="public void AppendChild (Microsoft.Build.Construction.ProjectElement child);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendChild(class Microsoft.Build.Construction.ProjectElement child) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Construction.ProjectElementContainer.AppendChild(Microsoft.Build.Construction.ProjectElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendChild (child As ProjectElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendChild(Microsoft::Build::Construction::ProjectElement ^ child);" />
      <MemberSignature Language="F#" Value="member this.AppendChild : Microsoft.Build.Construction.ProjectElement -&gt; unit" Usage="projectElementContainer.AppendChild child" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="child" Type="Microsoft.Build.Construction.ProjectElement" />
      </Parameters>
      <Docs>
        <param name="child"><span data-ttu-id="83e46-106">要追加的项目元素。</span><span class="sxs-lookup"><span data-stu-id="83e46-106">The project element to be appended.</span></span></param>
        <summary><span data-ttu-id="83e46-107">插入提供的元素作为最后一个子元素。</span><span class="sxs-lookup"><span data-stu-id="83e46-107">Inserts the provided element as the last child.</span></span>
<span data-ttu-id="83e46-108">如果父级不是其自身的父级，则引发。</span><span class="sxs-lookup"><span data-stu-id="83e46-108">Throws if the parent is not itself parented.</span></span>
<span data-ttu-id="83e46-109">如果要添加的节点已是父级，则引发。</span><span class="sxs-lookup"><span data-stu-id="83e46-109">Throws if the node to add is already parented.</span></span>
<span data-ttu-id="83e46-110">如果要添加的节点是从与此节点不同的项目创建的，则引发。</span><span class="sxs-lookup"><span data-stu-id="83e46-110">Throws if the node to add was created from a different project than this node.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83e46-111">如果此项目容器不是父级的，或者如果该 `child` 元素已是父级的，或者如果该 `child` 元素是通过其他方式创建的，则会引发异常 <xref:Microsoft.Build.Construction.ProjectRootElement> 。</span><span class="sxs-lookup"><span data-stu-id="83e46-111">Throws an exception if this project container is not parented, or if the `child` element is already parented, or if the `child` element was created by a different <xref:Microsoft.Build.Construction.ProjectRootElement>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Children">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;Microsoft.Build.Construction.ProjectElement&gt; Children { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;class Microsoft.Build.Construction.ProjectElement&gt; Children" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Construction.ProjectElementContainer.Children" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Children As ICollection(Of ProjectElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::ICollection&lt;Microsoft::Build::Construction::ProjectElement ^&gt; ^ Children { System::Collections::Generic::ICollection&lt;Microsoft::Build::Construction::ProjectElement ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Children : System.Collections.Generic.ICollection&lt;Microsoft.Build.Construction.ProjectElement&gt;" Usage="Microsoft.Build.Construction.ProjectElementContainer.Children" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;Microsoft.Build.Construction.ProjectElement&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="83e46-112">可枚举所有子元素</span><span class="sxs-lookup"><span data-stu-id="83e46-112">Get enumerable over all the children</span></span></summary>
        <value><span data-ttu-id="83e46-113">所有子元素。</span><span class="sxs-lookup"><span data-stu-id="83e46-113">All child elements.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ChildrenReversed">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;Microsoft.Build.Construction.ProjectElement&gt; ChildrenReversed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;class Microsoft.Build.Construction.ProjectElement&gt; ChildrenReversed" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Construction.ProjectElementContainer.ChildrenReversed" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ChildrenReversed As ICollection(Of ProjectElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::ICollection&lt;Microsoft::Build::Construction::ProjectElement ^&gt; ^ ChildrenReversed { System::Collections::Generic::ICollection&lt;Microsoft::Build::Construction::ProjectElement ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ChildrenReversed : System.Collections.Generic.ICollection&lt;Microsoft.Build.Construction.ProjectElement&gt;" Usage="Microsoft.Build.Construction.ProjectElementContainer.ChildrenReversed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;Microsoft.Build.Construction.ProjectElement&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="83e46-114">可枚举所有子元素（从最后一个子元素开始）</span><span class="sxs-lookup"><span data-stu-id="83e46-114">Get enumerable over all the children, starting from the last</span></span></summary>
        <value><span data-ttu-id="83e46-115">所有子元素（从最后一个子级开始）。</span><span class="sxs-lookup"><span data-stu-id="83e46-115">All child elements, starting from the last child.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Construction.ProjectElementContainer.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="Microsoft.Build.Construction.ProjectElementContainer.Count" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[get: System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="83e46-116">任意类型的子元素的数目</span><span class="sxs-lookup"><span data-stu-id="83e46-116">Number of children of any kind</span></span></summary>
        <value><span data-ttu-id="83e46-117">子元素的数量。</span><span class="sxs-lookup"><span data-stu-id="83e46-117">The number of child elements.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeepClone">
      <MemberSignature Language="C#" Value="protected internal virtual Microsoft.Build.Construction.ProjectElementContainer DeepClone (Microsoft.Build.Construction.ProjectRootElement factory, Microsoft.Build.Construction.ProjectElementContainer parent);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class Microsoft.Build.Construction.ProjectElementContainer DeepClone(class Microsoft.Build.Construction.ProjectRootElement factory, class Microsoft.Build.Construction.ProjectElementContainer parent) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Construction.ProjectElementContainer.DeepClone(Microsoft.Build.Construction.ProjectRootElement,Microsoft.Build.Construction.ProjectElementContainer)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function DeepClone (factory As ProjectRootElement, parent As ProjectElementContainer) As ProjectElementContainer" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual Microsoft::Build::Construction::ProjectElementContainer ^ DeepClone(Microsoft::Build::Construction::ProjectRootElement ^ factory, Microsoft::Build::Construction::ProjectElementContainer ^ parent);" />
      <MemberSignature Language="F#" Value="abstract member DeepClone : Microsoft.Build.Construction.ProjectRootElement * Microsoft.Build.Construction.ProjectElementContainer -&gt; Microsoft.Build.Construction.ProjectElementContainer&#xA;override this.DeepClone : Microsoft.Build.Construction.ProjectRootElement * Microsoft.Build.Construction.ProjectElementContainer -&gt; Microsoft.Build.Construction.ProjectElementContainer" Usage="projectElementContainer.DeepClone (factory, parent)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Construction.ProjectElementContainer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="factory" Type="Microsoft.Build.Construction.ProjectRootElement" Index="0" FrameworkAlternate="msbuild-15;msbuild-15-netcore;msbuild-16;msbuild-16-netcore" />
        <Parameter Name="parent" Type="Microsoft.Build.Construction.ProjectElementContainer" Index="1" FrameworkAlternate="msbuild-15;msbuild-15-netcore;msbuild-16;msbuild-16-netcore" />
      </Parameters>
      <Docs>
        <param name="factory"><span data-ttu-id="83e46-118">用于创建新实例的工厂。</span><span class="sxs-lookup"><span data-stu-id="83e46-118">The factory to use for creating the new instance.</span></span></param>
        <param name="parent"><span data-ttu-id="83e46-119">将克隆元素作为子元素追加到其中的父级。</span><span class="sxs-lookup"><span data-stu-id="83e46-119">The parent to append the cloned element to as a child.</span></span></param>
        <summary><span data-ttu-id="83e46-120">返回此项目元素及其所有子元素的克隆。</span><span class="sxs-lookup"><span data-stu-id="83e46-120">Returns a clone of this project element and all its children.</span></span></summary>
        <returns><span data-ttu-id="83e46-121">克隆的元素。</span><span class="sxs-lookup"><span data-stu-id="83e46-121">The cloned element.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeepCopyFrom">
      <MemberSignature Language="C#" Value="public virtual void DeepCopyFrom (Microsoft.Build.Construction.ProjectElementContainer element);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DeepCopyFrom(class Microsoft.Build.Construction.ProjectElementContainer element) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Construction.ProjectElementContainer.DeepCopyFrom(Microsoft.Build.Construction.ProjectElementContainer)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub DeepCopyFrom (element As ProjectElementContainer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void DeepCopyFrom(Microsoft::Build::Construction::ProjectElementContainer ^ element);" />
      <MemberSignature Language="F#" Value="abstract member DeepCopyFrom : Microsoft.Build.Construction.ProjectElementContainer -&gt; unit&#xA;override this.DeepCopyFrom : Microsoft.Build.Construction.ProjectElementContainer -&gt; unit" Usage="projectElementContainer.DeepCopyFrom element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="Microsoft.Build.Construction.ProjectElementContainer" Index="0" FrameworkAlternate="msbuild-15;msbuild-15-netcore;msbuild-16;msbuild-16-netcore" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="83e46-122">作为要从中复制的模板的元素。</span><span class="sxs-lookup"><span data-stu-id="83e46-122">The element to act as a template to copy from.</span></span></param>
        <summary><span data-ttu-id="83e46-123">将指定类型的属性应用于此实例。</span><span class="sxs-lookup"><span data-stu-id="83e46-123">Applies properties from the specified type to this instance.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FirstChild">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Construction.ProjectElement FirstChild { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Build.Construction.ProjectElement FirstChild" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Construction.ProjectElementContainer.FirstChild" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FirstChild As ProjectElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Build::Construction::ProjectElement ^ FirstChild { Microsoft::Build::Construction::ProjectElement ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FirstChild : Microsoft.Build.Construction.ProjectElement" Usage="Microsoft.Build.Construction.ProjectElementContainer.FirstChild" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[get: System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[set: System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Construction.ProjectElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="83e46-124">第一个子元素（如果有）；否则为 null。</span><span class="sxs-lookup"><span data-stu-id="83e46-124">First child, if any, otherwise null.</span></span>
<span data-ttu-id="83e46-125">不能直接设置；请使用 <see cref="M:Microsoft.Build.Construction.ProjectElementContainer.PrependChild(Microsoft.Build.Construction.ProjectElement)">PrependChild()</see>。</span><span class="sxs-lookup"><span data-stu-id="83e46-125">Cannot be set directly; use <see cref="M:Microsoft.Build.Construction.ProjectElementContainer.PrependChild(Microsoft.Build.Construction.ProjectElement)">PrependChild()</see>.</span></span></summary>
        <value><span data-ttu-id="83e46-126">第一个子元素; <see langword="null" /> 如果不存在子元素，则为。</span><span class="sxs-lookup"><span data-stu-id="83e46-126">The first child element, or <see langword="null" /> if no child element exists.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83e46-127">使用 <xref:Microsoft.Build.Construction.ProjectElementContainer.PrependChild%2A> 初始化此属性。</span><span class="sxs-lookup"><span data-stu-id="83e46-127">Use <xref:Microsoft.Build.Construction.ProjectElementContainer.PrependChild%2A> to initialize this property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertAfterChild">
      <MemberSignature Language="C#" Value="public void InsertAfterChild (Microsoft.Build.Construction.ProjectElement child, Microsoft.Build.Construction.ProjectElement reference);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void InsertAfterChild(class Microsoft.Build.Construction.ProjectElement child, class Microsoft.Build.Construction.ProjectElement reference) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Construction.ProjectElementContainer.InsertAfterChild(Microsoft.Build.Construction.ProjectElement,Microsoft.Build.Construction.ProjectElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub InsertAfterChild (child As ProjectElement, reference As ProjectElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InsertAfterChild(Microsoft::Build::Construction::ProjectElement ^ child, Microsoft::Build::Construction::ProjectElement ^ reference);" />
      <MemberSignature Language="F#" Value="member this.InsertAfterChild : Microsoft.Build.Construction.ProjectElement * Microsoft.Build.Construction.ProjectElement -&gt; unit" Usage="projectElementContainer.InsertAfterChild (child, reference)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="child" Type="Microsoft.Build.Construction.ProjectElement" />
        <Parameter Name="reference" Type="Microsoft.Build.Construction.ProjectElement" />
      </Parameters>
      <Docs>
        <param name="child"><span data-ttu-id="83e46-128">要插入的项目元素。</span><span class="sxs-lookup"><span data-stu-id="83e46-128">The project element to be inserted.</span></span></param>
        <param name="reference"><span data-ttu-id="83e46-129">要在其后面插入元素的项目元素。</span><span class="sxs-lookup"><span data-stu-id="83e46-129">The project element to be inserted after.</span></span></param>
        <summary><span data-ttu-id="83e46-130">在引用子元素后插入子元素。</span><span class="sxs-lookup"><span data-stu-id="83e46-130">Insert the child after the reference child.</span></span>
<span data-ttu-id="83e46-131">此元素必须是引用子元素（如提供）的父级。</span><span class="sxs-lookup"><span data-stu-id="83e46-131">Reference child if provided must be parented by this element.</span></span>
<span data-ttu-id="83e46-132">引用子元素可能为 null，在这种情况下，这等效于 <see cref="M:Microsoft.Build.Construction.ProjectElementContainer.PrependChild(Microsoft.Build.Construction.ProjectElement)">PrependChild(child)</see>。</span><span class="sxs-lookup"><span data-stu-id="83e46-132">Reference child may be null, in which case this is equivalent to <see cref="M:Microsoft.Build.Construction.ProjectElementContainer.PrependChild(Microsoft.Build.Construction.ProjectElement)">PrependChild(child)</see>.</span></span>
<span data-ttu-id="83e46-133">如果父级不是其自身的父级，则引发。</span><span class="sxs-lookup"><span data-stu-id="83e46-133">Throws if the parent is not itself parented.</span></span>
<span data-ttu-id="83e46-134">如果引用节点没有此节点作为其父节点，则引发。</span><span class="sxs-lookup"><span data-stu-id="83e46-134">Throws if the reference node does not have this node as its parent.</span></span>
<span data-ttu-id="83e46-135">如果要添加的节点已是父级，则引发。</span><span class="sxs-lookup"><span data-stu-id="83e46-135">Throws if the node to add is already parented.</span></span>
<span data-ttu-id="83e46-136">如果要添加的节点是从与此节点不同的项目创建的，则引发。</span><span class="sxs-lookup"><span data-stu-id="83e46-136">Throws if the node to add was created from a different project than this node.</span></span></summary>
        <remarks><span data-ttu-id="83e46-137">语义是 InsertAfterChild 的语义。</span><span class="sxs-lookup"><span data-stu-id="83e46-137">Semantics are those of XmlNode.InsertAfterChild.</span></span></remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertBeforeChild">
      <MemberSignature Language="C#" Value="public void InsertBeforeChild (Microsoft.Build.Construction.ProjectElement child, Microsoft.Build.Construction.ProjectElement reference);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void InsertBeforeChild(class Microsoft.Build.Construction.ProjectElement child, class Microsoft.Build.Construction.ProjectElement reference) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Construction.ProjectElementContainer.InsertBeforeChild(Microsoft.Build.Construction.ProjectElement,Microsoft.Build.Construction.ProjectElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub InsertBeforeChild (child As ProjectElement, reference As ProjectElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InsertBeforeChild(Microsoft::Build::Construction::ProjectElement ^ child, Microsoft::Build::Construction::ProjectElement ^ reference);" />
      <MemberSignature Language="F#" Value="member this.InsertBeforeChild : Microsoft.Build.Construction.ProjectElement * Microsoft.Build.Construction.ProjectElement -&gt; unit" Usage="projectElementContainer.InsertBeforeChild (child, reference)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="child" Type="Microsoft.Build.Construction.ProjectElement" />
        <Parameter Name="reference" Type="Microsoft.Build.Construction.ProjectElement" />
      </Parameters>
      <Docs>
        <param name="child"><span data-ttu-id="83e46-138">要插入的项目元素。</span><span class="sxs-lookup"><span data-stu-id="83e46-138">The project element to be inserted.</span></span></param>
        <param name="reference"><span data-ttu-id="83e46-139">要在其前面插入元素的项目元素。</span><span class="sxs-lookup"><span data-stu-id="83e46-139">The project element to be inserted before.</span></span></param>
        <summary><span data-ttu-id="83e46-140">在引用子元素前插入子元素。</span><span class="sxs-lookup"><span data-stu-id="83e46-140">Insert the child before the reference child.</span></span>
<span data-ttu-id="83e46-141">此元素必须是引用子元素（如提供）的父级。</span><span class="sxs-lookup"><span data-stu-id="83e46-141">Reference child if provided must be parented by this element.</span></span>
<span data-ttu-id="83e46-142">引用子元素可能为 null，在这种情况下，这等效于 <see cref="M:Microsoft.Build.Construction.ProjectElementContainer.AppendChild(Microsoft.Build.Construction.ProjectElement)">AppendChild(child)</see>。</span><span class="sxs-lookup"><span data-stu-id="83e46-142">Reference child may be null, in which case this is equivalent to <see cref="M:Microsoft.Build.Construction.ProjectElementContainer.AppendChild(Microsoft.Build.Construction.ProjectElement)">AppendChild(child)</see>.</span></span>
<span data-ttu-id="83e46-143">如果父级不是其自身的父级，则引发。</span><span class="sxs-lookup"><span data-stu-id="83e46-143">Throws if the parent is not itself parented.</span></span>
<span data-ttu-id="83e46-144">如果引用节点没有此节点作为其父节点，则引发。</span><span class="sxs-lookup"><span data-stu-id="83e46-144">Throws if the reference node does not have this node as its parent.</span></span>
<span data-ttu-id="83e46-145">如果要添加的节点已是父级，则引发。</span><span class="sxs-lookup"><span data-stu-id="83e46-145">Throws if the node to add is already parented.</span></span>
<span data-ttu-id="83e46-146">如果要添加的节点是从与此节点不同的项目创建的，则引发。</span><span class="sxs-lookup"><span data-stu-id="83e46-146">Throws if the node to add was created from a different project than this node.</span></span></summary>
        <remarks><span data-ttu-id="83e46-147">语义是 InsertBeforeChild 的语义。</span><span class="sxs-lookup"><span data-stu-id="83e46-147">Semantics are those of XmlNode.InsertBeforeChild.</span></span></remarks>
      </Docs>
    </Member>
    <Member MemberName="LastChild">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Construction.ProjectElement LastChild { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Build.Construction.ProjectElement LastChild" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Construction.ProjectElementContainer.LastChild" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LastChild As ProjectElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Build::Construction::ProjectElement ^ LastChild { Microsoft::Build::Construction::ProjectElement ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LastChild : Microsoft.Build.Construction.ProjectElement" Usage="Microsoft.Build.Construction.ProjectElementContainer.LastChild" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[get: System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[set: System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Construction.ProjectElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="83e46-148">最后一个子元素（如果有）；否则为 null。</span><span class="sxs-lookup"><span data-stu-id="83e46-148">Last child, if any, otherwise null.</span></span>
<span data-ttu-id="83e46-149">不能直接设置；请使用 <see cref="M:Microsoft.Build.Construction.ProjectElementContainer.AppendChild(Microsoft.Build.Construction.ProjectElement)">AppendChild()</see>。</span><span class="sxs-lookup"><span data-stu-id="83e46-149">Cannot be set directly; use <see cref="M:Microsoft.Build.Construction.ProjectElementContainer.AppendChild(Microsoft.Build.Construction.ProjectElement)">AppendChild()</see>.</span></span></summary>
        <value><span data-ttu-id="83e46-150">最后一个子元素; <see langword="null" /> 如果不存在子元素，则为。</span><span class="sxs-lookup"><span data-stu-id="83e46-150">The last child element, or <see langword="null" /> if no child element exists.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83e46-151">使用 <xref:Microsoft.Build.Construction.ProjectElementContainer.AppendChild%2A> 初始化此属性。</span><span class="sxs-lookup"><span data-stu-id="83e46-151">Use <xref:Microsoft.Build.Construction.ProjectElementContainer.AppendChild%2A> to initialize this property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PrependChild">
      <MemberSignature Language="C#" Value="public void PrependChild (Microsoft.Build.Construction.ProjectElement child);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void PrependChild(class Microsoft.Build.Construction.ProjectElement child) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Construction.ProjectElementContainer.PrependChild(Microsoft.Build.Construction.ProjectElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PrependChild (child As ProjectElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PrependChild(Microsoft::Build::Construction::ProjectElement ^ child);" />
      <MemberSignature Language="F#" Value="member this.PrependChild : Microsoft.Build.Construction.ProjectElement -&gt; unit" Usage="projectElementContainer.PrependChild child" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="child" Type="Microsoft.Build.Construction.ProjectElement" />
      </Parameters>
      <Docs>
        <param name="child"><span data-ttu-id="83e46-152">要预置的项目元素。</span><span class="sxs-lookup"><span data-stu-id="83e46-152">The project element to be prepended.</span></span></param>
        <summary><span data-ttu-id="83e46-153">插入提供的元素作为第一个子元素。</span><span class="sxs-lookup"><span data-stu-id="83e46-153">Inserts the provided element as the first child.</span></span>
<span data-ttu-id="83e46-154">如果父级不是其自身的父级，则引发。</span><span class="sxs-lookup"><span data-stu-id="83e46-154">Throws if the parent is not itself parented.</span></span>
<span data-ttu-id="83e46-155">如果要添加的节点已是父级，则引发。</span><span class="sxs-lookup"><span data-stu-id="83e46-155">Throws if the node to add is already parented.</span></span>
<span data-ttu-id="83e46-156">如果要添加的节点是从与此节点不同的项目创建的，则引发。</span><span class="sxs-lookup"><span data-stu-id="83e46-156">Throws if the node to add was created from a different project than this node.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83e46-157">如果此项目容器不是父级的，或者如果该 `child` 元素已是父级的，或者如果该 `child` 元素是通过其他方式创建的，则会引发异常 <xref:Microsoft.Build.Construction.ProjectRootElement> 。</span><span class="sxs-lookup"><span data-stu-id="83e46-157">Throws an exception if this project container is not parented, or if the `child` element is already parented, or if the `child` element was created by a different <xref:Microsoft.Build.Construction.ProjectRootElement>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAllChildren">
      <MemberSignature Language="C#" Value="public void RemoveAllChildren ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAllChildren() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Construction.ProjectElementContainer.RemoveAllChildren" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAllChildren ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAllChildren();" />
      <MemberSignature Language="F#" Value="member this.RemoveAllChildren : unit -&gt; unit" Usage="projectElementContainer.RemoveAllChildren " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="83e46-158">删除所有子元素（如果有）。</span><span class="sxs-lookup"><span data-stu-id="83e46-158">Remove all the children, if any.</span></span></summary>
        <remarks><span data-ttu-id="83e46-159">在枚举过程中以这种方式修改子级是安全的。</span><span class="sxs-lookup"><span data-stu-id="83e46-159">It is safe to modify the children in this way during enumeration.</span></span> <span data-ttu-id="83e46-160">请参阅 <cref see="RemoveChild">RemoveChild</cref>。</span><span class="sxs-lookup"><span data-stu-id="83e46-160">See <cref see="RemoveChild">RemoveChild</cref>.</span></span></remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveChild">
      <MemberSignature Language="C#" Value="public void RemoveChild (Microsoft.Build.Construction.ProjectElement child);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveChild(class Microsoft.Build.Construction.ProjectElement child) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Construction.ProjectElementContainer.RemoveChild(Microsoft.Build.Construction.ProjectElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveChild (child As ProjectElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveChild(Microsoft::Build::Construction::ProjectElement ^ child);" />
      <MemberSignature Language="F#" Value="member this.RemoveChild : Microsoft.Build.Construction.ProjectElement -&gt; unit" Usage="projectElementContainer.RemoveChild child" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="child" Type="Microsoft.Build.Construction.ProjectElement" />
      </Parameters>
      <Docs>
        <param name="child"><span data-ttu-id="83e46-161">要移除的项目元素。</span><span class="sxs-lookup"><span data-stu-id="83e46-161">The project element to be removed.</span></span></param>
        <summary><span data-ttu-id="83e46-162">删除指定的子元素。</span><span class="sxs-lookup"><span data-stu-id="83e46-162">Removes the specified child.</span></span>
<span data-ttu-id="83e46-163">如果此项目不是子元素的父级，则引发。</span><span class="sxs-lookup"><span data-stu-id="83e46-163">Throws if the child is not currently parented by this object.</span></span>
<span data-ttu-id="83e46-164">这是 O(1)。</span><span class="sxs-lookup"><span data-stu-id="83e46-164">This is O(1).</span></span>
<span data-ttu-id="83e46-165">可以在子元素的枚举期间安全调用。</span><span class="sxs-lookup"><span data-stu-id="83e46-165">May be safely called during enumeration of the children.</span></span></summary>
        <remarks><span data-ttu-id="83e46-166">在对子级进行枚举时，这种调用是安全的，因为它不会将子级的 NextSibling (或 PreviousSibling) 指针。</span><span class="sxs-lookup"><span data-stu-id="83e46-166">This is actually safe to call during enumeration of children, because it doesn't bother to clear the child's NextSibling (or PreviousSibling) pointers.</span></span>
<span data-ttu-id="83e46-167">若要确定子对象是否未附加，请检查其父项是否为 null，或者其 NextSibling 和 PreviousSibling 是否返回。</span><span class="sxs-lookup"><span data-stu-id="83e46-167">To determine whether a child is unattached, check whether its parent is null, or whether its NextSibling and PreviousSibling point back at it.</span></span>
<span data-ttu-id="83e46-168">不要中断此非常有用的安全合同。</span><span class="sxs-lookup"><span data-stu-id="83e46-168">DO NOT BREAK THIS VERY USEFUL SAFETY CONTRACT.</span></span></remarks>
      </Docs>
    </Member>
  </Members>
</Type>
