<Type Name="XamlXmlWriter" FullName="System.Xaml.XamlXmlWriter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="bfaa14408121ff48d5d5ab1a61cd5c99e9231982" /><Meta Name="ms.sourcegitcommit" Value="53b005dec6dcff97c7bac97cf446d9ae6bda93f0" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/24/2020" /><Meta Name="ms.locfileid" Value="91206664" /></Metadata><TypeSignature Language="C#" Value="public class XamlXmlWriter : System.Xaml.XamlWriter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XamlXmlWriter extends System.Xaml.XamlWriter" />
  <TypeSignature Language="DocId" Value="T:System.Xaml.XamlXmlWriter" />
  <TypeSignature Language="VB.NET" Value="Public Class XamlXmlWriter&#xA;Inherits XamlWriter" />
  <TypeSignature Language="C++ CLI" Value="public ref class XamlXmlWriter : System::Xaml::XamlWriter" />
  <TypeSignature Language="F#" Value="type XamlXmlWriter = class&#xA;    inherit XamlWriter" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Xaml.XamlWriter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="7a167-101">使用 <see cref="T:System.IO.TextWriter" /> 或 <see cref="T:System.Xml.XmlWriter" /> 支持类将 XAML 节点流写入文本或标记序列化形式。</span><span class="sxs-lookup"><span data-stu-id="7a167-101">Uses a <see cref="T:System.IO.TextWriter" /> or <see cref="T:System.Xml.XmlWriter" /> support class to write a XAML node stream to a text or markup serialized form.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7a167-102">此类通常用于序列化方案。</span><span class="sxs-lookup"><span data-stu-id="7a167-102">This class is typically used in serialization scenarios.</span></span>  
  
## <a name="how-to-use-xamlxmlwriter"></a><span data-ttu-id="7a167-103">如何使用 XamlXmlWriter</span><span class="sxs-lookup"><span data-stu-id="7a167-103">How to Use XamlXmlWriter</span></span>  
 <span data-ttu-id="7a167-104"><xref:System.Xaml.XamlWriter>API 具有几个写入不同类型的 XAML 节点的方法。</span><span class="sxs-lookup"><span data-stu-id="7a167-104">The <xref:System.Xaml.XamlWriter> API has several methods that write different types of XAML nodes.</span></span> <span data-ttu-id="7a167-105">它们统称为，在文档中称为的 `Write` 方法 <xref:System.Xaml.XamlWriter> 。</span><span class="sxs-lookup"><span data-stu-id="7a167-105">Collectively, these are referred to in documentation as the `Write` methods of a <xref:System.Xaml.XamlWriter>.</span></span> <span data-ttu-id="7a167-106"><xref:System.Xaml.XamlXmlWriter> 使用几个内部状态类来确定在它的某个实现调用时要执行的操作 `Write` 。</span><span class="sxs-lookup"><span data-stu-id="7a167-106"><xref:System.Xaml.XamlXmlWriter> uses several internal state classes to determine what to do when one of its `Write` implementations is called.</span></span> <span data-ttu-id="7a167-107">`Write`调用使用状态来确定是否可以写入请求的元素、属性或值，或者是否引发异常。</span><span class="sxs-lookup"><span data-stu-id="7a167-107">A `Write` call uses the states to determine whether the requested element, attribute, or value can be written, or whether an exception is thrown.</span></span> <span data-ttu-id="7a167-108">例如，如果调用 <xref:System.Xaml.XamlXmlWriter.WriteEndObject%2A> 且当前节点位置的状态位于 <xref:System.Xaml.XamlXmlWriter> 某个值或成员内，则会引发异常。</span><span class="sxs-lookup"><span data-stu-id="7a167-108">For example, if you call <xref:System.Xaml.XamlXmlWriter.WriteEndObject%2A> and the state of the <xref:System.Xaml.XamlXmlWriter> current node position is on a value or within a member, an exception is thrown.</span></span> <span data-ttu-id="7a167-109">通常，API 的调用方 <xref:System.Xaml.XamlXmlWriter> 应知道来自 xaml 读取器和 xaml 节点流的当前 xaml 节点的类型。</span><span class="sxs-lookup"><span data-stu-id="7a167-109">Typically, callers of the <xref:System.Xaml.XamlXmlWriter> API should be aware of the type of the current XAML node that is coming from the XAML reader and the XAML node stream.</span></span> <span data-ttu-id="7a167-110">根据此知识，调用方应避免调用与 `Write` 当前节点类型不相关的 api。</span><span class="sxs-lookup"><span data-stu-id="7a167-110">Based on this knowledge, callers should avoid calling `Write` APIs that are not relevant to the current node type.</span></span>  
  
## <a name="xaml-namespaces-and-xamlxmlwriter"></a><span data-ttu-id="7a167-111">XAML 命名空间和 XamlXmlWriter</span><span class="sxs-lookup"><span data-stu-id="7a167-111">XAML Namespaces and XamlXmlWriter</span></span>  
 <span data-ttu-id="7a167-112">的 XAML 命名空间写入行为 <xref:System.Xaml.XamlXmlWriter> 是复杂的，并不限于对的显式调用 <xref:System.Xaml.XamlXmlWriter.WriteNamespace%2A> 。</span><span class="sxs-lookup"><span data-stu-id="7a167-112">The XAML namespace writing behavior of <xref:System.Xaml.XamlXmlWriter> is complex and is not limited to explicit calls to <xref:System.Xaml.XamlXmlWriter.WriteNamespace%2A>.</span></span> <span data-ttu-id="7a167-113">相反，其他 `Write` 调用（如 <xref:System.Xaml.XamlXmlWriter.WriteStartObject%2A> ）可能要求将命名空间声明写入节点结构中的特定点。</span><span class="sxs-lookup"><span data-stu-id="7a167-113">Instead, other `Write` calls, such as <xref:System.Xaml.XamlXmlWriter.WriteStartObject%2A>, might require that the namespace declaration be written at particular points in the node structure.</span></span> <span data-ttu-id="7a167-114">XAML 编写器要么通过其自身的逻辑生成前缀，要么使用服务中的信息 <xref:System.Xaml.INamespacePrefixLookup> 来确定首选前缀。</span><span class="sxs-lookup"><span data-stu-id="7a167-114">The XAML writer either generates a prefix by its own logic, or uses information from the <xref:System.Xaml.INamespacePrefixLookup> service to determine a preferred prefix.</span></span> <span data-ttu-id="7a167-115">此外， <xref:System.Xaml.XamlXmlWriter.WriteNamespace%2A> 如果 XAML 命名空间声明已适用并在其他位置声明，则显式调用可能会延迟或返回 nothing。</span><span class="sxs-lookup"><span data-stu-id="7a167-115">Also, explicit <xref:System.Xaml.XamlXmlWriter.WriteNamespace%2A> calls might defer or might return nothing if the XAML namespace declaration is already applicable and declared elsewhere.</span></span>  
  
## <a name="write-method-exceptions"></a><span data-ttu-id="7a167-116">写入方法异常</span><span class="sxs-lookup"><span data-stu-id="7a167-116">Write Method Exceptions</span></span>  
 <span data-ttu-id="7a167-117">方法引发的异常 <xref:System.Xaml.XamlXmlWriter> `Write` 通常为 <xref:System.InvalidOperationException> 或 <xref:System.Xaml.XamlXmlWriterException> 。</span><span class="sxs-lookup"><span data-stu-id="7a167-117">Exceptions thrown by the <xref:System.Xaml.XamlXmlWriter>`Write` methods are typically either <xref:System.InvalidOperationException> or <xref:System.Xaml.XamlXmlWriterException>.</span></span>  
  
 <span data-ttu-id="7a167-118"><xref:System.InvalidOperationException>通常指示 xaml 读取器将无效的节点结构传递到 xaml 节点流中。</span><span class="sxs-lookup"><span data-stu-id="7a167-118">An <xref:System.InvalidOperationException> often indicates that a XAML reader passed an invalid node structure into the XAML node stream.</span></span> <span data-ttu-id="7a167-119">在这种情况下，由于与 XAML 架构或 XAML 架构上下文验证无关的原因，节点结构无效。</span><span class="sxs-lookup"><span data-stu-id="7a167-119">In this case the node structure is invalid for reasons that are not related to validation of a XAML schema or a XAML schema context.</span></span> <span data-ttu-id="7a167-120">相反，节点流的基本格式无效。</span><span class="sxs-lookup"><span data-stu-id="7a167-120">Rather, the node stream is invalid in its basic form.</span></span> <span data-ttu-id="7a167-121">例如，如果错误的 XAML 读取器实现生成包含两个连续节点的 XAML 节点流 `StartObject` ，则尝试调用第二个节点 <xref:System.Xaml.XamlXmlWriter.WriteStartObject%2A> 将引发 <xref:System.InvalidOperationException> 。</span><span class="sxs-lookup"><span data-stu-id="7a167-121">For example, if a faulty XAML reader implementation generated a XAML node stream that contained two consecutive `StartObject` nodes, the attempt to call the second <xref:System.Xaml.XamlXmlWriter.WriteStartObject%2A> would throw an <xref:System.InvalidOperationException>.</span></span> <span data-ttu-id="7a167-122">所有 XAML 编写器都认为此操作无效。</span><span class="sxs-lookup"><span data-stu-id="7a167-122">All XAML writers would consider such an operation to be invalid.</span></span> <span data-ttu-id="7a167-123">的另一个示例 <xref:System.InvalidOperationException> 是当 xaml 命名空间信息通过应用于当前节点流位置的 xaml 架构上下文不可用时。</span><span class="sxs-lookup"><span data-stu-id="7a167-123">Another example of an <xref:System.InvalidOperationException> is when XAML namespace information is unavailable through the XAML schema context that applies to the current node stream position.</span></span>  
  
 <span data-ttu-id="7a167-124"><xref:System.Xaml.XamlXmlWriterException>指示此特定 XAML 编写器实现根据其预期功能选择引发异常的异常。</span><span class="sxs-lookup"><span data-stu-id="7a167-124">A <xref:System.Xaml.XamlXmlWriterException> indicates an exception where this particular XAML writer implementation chooses to throw an exception based on its intended functionality.</span></span> <span data-ttu-id="7a167-125"><xref:System.Xaml.XamlXmlWriterException>可以指示 <xref:System.Xaml.XamlXmlWriter> 违反其自身状态或设置的特定情况。</span><span class="sxs-lookup"><span data-stu-id="7a167-125">A <xref:System.Xaml.XamlXmlWriterException> can indicate specific cases where a <xref:System.Xaml.XamlXmlWriter> violates its own state or settings.</span></span> <span data-ttu-id="7a167-126">例如，可能是 <xref:System.Xaml.XamlXmlWriterException> 因为尝试将 XAML 命名空间信息写入到 <xref:System.Xaml.XamlXmlWriter> 其序列化格式不支持的位置，或在实例的禁止时写入重复成员 <xref:System.Xaml.XamlXmlWriterSettings> 。</span><span class="sxs-lookup"><span data-stu-id="7a167-126">For example, a <xref:System.Xaml.XamlXmlWriterException> might result from attempts to write XAML namespace information into a position that the <xref:System.Xaml.XamlXmlWriter> and its serialization format do not support, or writing duplicate members when the instance's <xref:System.Xaml.XamlXmlWriterSettings> forbid it.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Xaml.XamlServices.Save(System.IO.Stream,System.Object)" />
    <related type="Article" href="/dotnet/desktop-wpf/xaml-services/understanding-xaml-node-stream-structures-and-concepts"><span data-ttu-id="7a167-127">了解 XAML 节点流结构和概念</span><span class="sxs-lookup"><span data-stu-id="7a167-127">Understanding XAML Node Stream Structures and Concepts</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="7a167-128">初始化 <see cref="T:System.Xaml.XamlXmlWriter" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="7a167-128">Initializes a new instance of the <see cref="T:System.Xaml.XamlXmlWriter" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlXmlWriter (System.IO.Stream stream, System.Xaml.XamlSchemaContext schemaContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream stream, class System.Xaml.XamlSchemaContext schemaContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlXmlWriter.#ctor(System.IO.Stream,System.Xaml.XamlSchemaContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (stream As Stream, schemaContext As XamlSchemaContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlXmlWriter(System::IO::Stream ^ stream, System::Xaml::XamlSchemaContext ^ schemaContext);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlXmlWriter : System.IO.Stream * System.Xaml.XamlSchemaContext -&gt; System.Xaml.XamlXmlWriter" Usage="new System.Xaml.XamlXmlWriter (stream, schemaContext)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="schemaContext" Type="System.Xaml.XamlSchemaContext" />
      </Parameters>
      <Docs>
        <param name="stream"><span data-ttu-id="7a167-129">要写入的流。</span><span class="sxs-lookup"><span data-stu-id="7a167-129">The stream to write.</span></span></param>
        <param name="schemaContext"><span data-ttu-id="7a167-130">XAML 编写器的 XAML 架构上下文。</span><span class="sxs-lookup"><span data-stu-id="7a167-130">The XAML schema context for the XAML writer.</span></span></param>
        <summary><span data-ttu-id="7a167-131">从流中初始化 <see cref="T:System.Xaml.XamlXmlWriter" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="7a167-131">Initializes a new instance of the <see cref="T:System.Xaml.XamlXmlWriter" /> class from a stream.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="7a167-132"><paramref name="stream" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="7a167-132"><paramref name="stream" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="7a167-133">- 或 -</span><span class="sxs-lookup"><span data-stu-id="7a167-133">-or-</span></span> 
 <span data-ttu-id="7a167-134"><paramref name="schemaContext" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="7a167-134"><paramref name="schemaContext" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlXmlWriter (System.IO.TextWriter textWriter, System.Xaml.XamlSchemaContext schemaContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.TextWriter textWriter, class System.Xaml.XamlSchemaContext schemaContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlXmlWriter.#ctor(System.IO.TextWriter,System.Xaml.XamlSchemaContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (textWriter As TextWriter, schemaContext As XamlSchemaContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlXmlWriter(System::IO::TextWriter ^ textWriter, System::Xaml::XamlSchemaContext ^ schemaContext);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlXmlWriter : System.IO.TextWriter * System.Xaml.XamlSchemaContext -&gt; System.Xaml.XamlXmlWriter" Usage="new System.Xaml.XamlXmlWriter (textWriter, schemaContext)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="textWriter" Type="System.IO.TextWriter" />
        <Parameter Name="schemaContext" Type="System.Xaml.XamlSchemaContext" />
      </Parameters>
      <Docs>
        <param name="textWriter"><span data-ttu-id="7a167-135">写入输出的 <see cref="T:System.IO.TextWriter" />。</span><span class="sxs-lookup"><span data-stu-id="7a167-135">The <see cref="T:System.IO.TextWriter" /> that writes the output.</span></span></param>
        <param name="schemaContext"><span data-ttu-id="7a167-136">XAML 编写器的 XAML 架构上下文。</span><span class="sxs-lookup"><span data-stu-id="7a167-136">The XAML schema context for the XAML writer.</span></span></param>
        <summary><span data-ttu-id="7a167-137">从 <see cref="T:System.Xaml.XamlXmlWriter" /> 基础初始化 <see cref="T:System.IO.TextWriter" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="7a167-137">Initializes a new instance of the <see cref="T:System.Xaml.XamlXmlWriter" /> class from a <see cref="T:System.IO.TextWriter" /> basis.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="7a167-138"><paramref name="textWriter" /> 或 <paramref name="schemaContext" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="7a167-138"><paramref name="textWriter" /> or <paramref name="schemaContext" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlXmlWriter (System.Xml.XmlWriter xmlWriter, System.Xaml.XamlSchemaContext schemaContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.XmlWriter xmlWriter, class System.Xaml.XamlSchemaContext schemaContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlXmlWriter.#ctor(System.Xml.XmlWriter,System.Xaml.XamlSchemaContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (xmlWriter As XmlWriter, schemaContext As XamlSchemaContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlXmlWriter(System::Xml::XmlWriter ^ xmlWriter, System::Xaml::XamlSchemaContext ^ schemaContext);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlXmlWriter : System.Xml.XmlWriter * System.Xaml.XamlSchemaContext -&gt; System.Xaml.XamlXmlWriter" Usage="new System.Xaml.XamlXmlWriter (xmlWriter, schemaContext)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="xmlWriter" Type="System.Xml.XmlWriter" />
        <Parameter Name="schemaContext" Type="System.Xaml.XamlSchemaContext" />
      </Parameters>
      <Docs>
        <param name="xmlWriter"><span data-ttu-id="7a167-139">写入输出的 <see cref="T:System.Xml.XmlWriter" />。</span><span class="sxs-lookup"><span data-stu-id="7a167-139">The <see cref="T:System.Xml.XmlWriter" /> that writes the output.</span></span></param>
        <param name="schemaContext"><span data-ttu-id="7a167-140">XAML 编写器的 XAML 架构上下文。</span><span class="sxs-lookup"><span data-stu-id="7a167-140">The XAML schema context for the XAML writer.</span></span></param>
        <summary><span data-ttu-id="7a167-141">从 <see cref="T:System.Xaml.XamlXmlWriter" /> 基础初始化 <see cref="T:System.Xml.XmlWriter" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="7a167-141">Initializes a new instance of the <see cref="T:System.Xaml.XamlXmlWriter" /> class from a <see cref="T:System.Xml.XmlWriter" /> basis.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="7a167-142"><paramref name="xmlWriter" /> 或 <paramref name="schemaContext" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="7a167-142"><paramref name="xmlWriter" /> or <paramref name="schemaContext" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlXmlWriter (System.IO.Stream stream, System.Xaml.XamlSchemaContext schemaContext, System.Xaml.XamlXmlWriterSettings settings);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream stream, class System.Xaml.XamlSchemaContext schemaContext, class System.Xaml.XamlXmlWriterSettings settings) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlXmlWriter.#ctor(System.IO.Stream,System.Xaml.XamlSchemaContext,System.Xaml.XamlXmlWriterSettings)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (stream As Stream, schemaContext As XamlSchemaContext, settings As XamlXmlWriterSettings)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlXmlWriter(System::IO::Stream ^ stream, System::Xaml::XamlSchemaContext ^ schemaContext, System::Xaml::XamlXmlWriterSettings ^ settings);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlXmlWriter : System.IO.Stream * System.Xaml.XamlSchemaContext * System.Xaml.XamlXmlWriterSettings -&gt; System.Xaml.XamlXmlWriter" Usage="new System.Xaml.XamlXmlWriter (stream, schemaContext, settings)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="schemaContext" Type="System.Xaml.XamlSchemaContext" />
        <Parameter Name="settings" Type="System.Xaml.XamlXmlWriterSettings" />
      </Parameters>
      <Docs>
        <param name="stream"><span data-ttu-id="7a167-143">要写入的流。</span><span class="sxs-lookup"><span data-stu-id="7a167-143">The stream to write.</span></span></param>
        <param name="schemaContext"><span data-ttu-id="7a167-144">XAML 编写器的 XAML 架构上下文。</span><span class="sxs-lookup"><span data-stu-id="7a167-144">The XAML schema context for the XAML writer.</span></span></param>
        <param name="settings"><span data-ttu-id="7a167-145"><see cref="T:System.Xaml.XamlXmlWriterSettings" /> 的实例，此实例通常具有特定的非默认设置。</span><span class="sxs-lookup"><span data-stu-id="7a167-145">An instance of <see cref="T:System.Xaml.XamlXmlWriterSettings" />, which typically has specific non-default settings.</span></span></param>
        <summary><span data-ttu-id="7a167-146">使用编写器设置对象从流中初始化 <see cref="T:System.Xaml.XamlXmlWriter" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="7a167-146">Initializes a new instance of the <see cref="T:System.Xaml.XamlXmlWriter" /> class from a stream using a writer settings object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7a167-147">构造实例后，请不要更改对象的任何值 `settings` <xref:System.Xaml.XamlXmlWriter> 。</span><span class="sxs-lookup"><span data-stu-id="7a167-147">Do not change any values of the `settings` object after the <xref:System.Xaml.XamlXmlWriter> instance is constructed.</span></span> <span data-ttu-id="7a167-148"><xref:System.Xaml.XamlXmlWriter> 无法根据运行时可变的设置值更新其内部设置。</span><span class="sxs-lookup"><span data-stu-id="7a167-148"><xref:System.Xaml.XamlXmlWriter> cannot update its internal settings based on settings values that are mutable at run time.</span></span> <span data-ttu-id="7a167-149">应该提供仅用于初始化的设置。</span><span class="sxs-lookup"><span data-stu-id="7a167-149">Settings should be provided for initialization only.</span></span> <span data-ttu-id="7a167-150">您可以通过使用其中一个构造函数签名来合并活动 XAML 编写器中的设置 <xref:System.Xaml.XamlXmlWriterSettings> ; 但是，您必须将这些设置应用于新的 xaml 编写器实例，而不是尝试调整现有的 xaml 编写器实例。</span><span class="sxs-lookup"><span data-stu-id="7a167-150">You can merge settings from an active XAML writer by using one of the <xref:System.Xaml.XamlXmlWriterSettings> constructor signatures; however, you must then apply these settings to a new XAML writer instance instead of attempting to adjust the existing one.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="7a167-151"><paramref name="stream" /> 或 <paramref name="schemaContext" /> 为 <see langword="null" /></span><span class="sxs-lookup"><span data-stu-id="7a167-151"><paramref name="stream" /> or <paramref name="schemaContext" /> is <see langword="null" /></span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlXmlWriter (System.IO.TextWriter textWriter, System.Xaml.XamlSchemaContext schemaContext, System.Xaml.XamlXmlWriterSettings settings);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.TextWriter textWriter, class System.Xaml.XamlSchemaContext schemaContext, class System.Xaml.XamlXmlWriterSettings settings) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlXmlWriter.#ctor(System.IO.TextWriter,System.Xaml.XamlSchemaContext,System.Xaml.XamlXmlWriterSettings)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (textWriter As TextWriter, schemaContext As XamlSchemaContext, settings As XamlXmlWriterSettings)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlXmlWriter(System::IO::TextWriter ^ textWriter, System::Xaml::XamlSchemaContext ^ schemaContext, System::Xaml::XamlXmlWriterSettings ^ settings);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlXmlWriter : System.IO.TextWriter * System.Xaml.XamlSchemaContext * System.Xaml.XamlXmlWriterSettings -&gt; System.Xaml.XamlXmlWriter" Usage="new System.Xaml.XamlXmlWriter (textWriter, schemaContext, settings)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="textWriter" Type="System.IO.TextWriter" />
        <Parameter Name="schemaContext" Type="System.Xaml.XamlSchemaContext" />
        <Parameter Name="settings" Type="System.Xaml.XamlXmlWriterSettings" />
      </Parameters>
      <Docs>
        <param name="textWriter"><span data-ttu-id="7a167-152">写入输出的 <see cref="T:System.IO.TextWriter" />。</span><span class="sxs-lookup"><span data-stu-id="7a167-152">The <see cref="T:System.IO.TextWriter" /> that writes the output.</span></span></param>
        <param name="schemaContext"><span data-ttu-id="7a167-153">XAML 编写器的 XAML 架构上下文。</span><span class="sxs-lookup"><span data-stu-id="7a167-153">The XAML schema context for the XAML writer.</span></span></param>
        <param name="settings"><span data-ttu-id="7a167-154"><see cref="T:System.Xaml.XamlXmlWriterSettings" /> 的实例，此实例通常具有特定的非默认设置。</span><span class="sxs-lookup"><span data-stu-id="7a167-154">An instance of <see cref="T:System.Xaml.XamlXmlWriterSettings" />, which typically has specific non-default settings.</span></span></param>
        <summary><span data-ttu-id="7a167-155">使用设置对象从 <see cref="T:System.Xaml.XamlXmlWriter" /> 基础初始化 <see cref="T:System.IO.TextWriter" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="7a167-155">Initializes a new instance of the <see cref="T:System.Xaml.XamlXmlWriter" /> class from a <see cref="T:System.IO.TextWriter" /> basis using a settings object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7a167-156">构造实例后，请不要更改对象的任何值 `settings` <xref:System.Xaml.XamlXmlWriter> 。</span><span class="sxs-lookup"><span data-stu-id="7a167-156">Do not change any values of the `settings` object after the <xref:System.Xaml.XamlXmlWriter> instance is constructed.</span></span> <span data-ttu-id="7a167-157"><xref:System.Xaml.XamlXmlWriter> 无法根据运行时可变的设置值更新其内部设置。</span><span class="sxs-lookup"><span data-stu-id="7a167-157"><xref:System.Xaml.XamlXmlWriter> cannot update its internal settings based on settings values that are mutable at run time.</span></span> <span data-ttu-id="7a167-158">应该提供仅用于初始化的设置。</span><span class="sxs-lookup"><span data-stu-id="7a167-158">Settings should be provided for initialization only.</span></span> <span data-ttu-id="7a167-159">您可以通过使用其中一个构造函数签名来合并活动 XAML 编写器中的设置 <xref:System.Xaml.XamlXmlWriterSettings> ; 但是，您必须将这些设置应用于新的 xaml 编写器实例，而不是尝试调整现有的 xaml 编写器实例。</span><span class="sxs-lookup"><span data-stu-id="7a167-159">You can merge settings from an active XAML writer by using one of the <xref:System.Xaml.XamlXmlWriterSettings> constructor signatures; however, you must then apply these settings to a new XAML writer instance instead of attempting to adjust the existing one.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="7a167-160"><paramref name="textWriter" /> 或 <paramref name="schemaContext" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="7a167-160"><paramref name="textWriter" /> or <paramref name="schemaContext" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlXmlWriter (System.Xml.XmlWriter xmlWriter, System.Xaml.XamlSchemaContext schemaContext, System.Xaml.XamlXmlWriterSettings settings);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.XmlWriter xmlWriter, class System.Xaml.XamlSchemaContext schemaContext, class System.Xaml.XamlXmlWriterSettings settings) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlXmlWriter.#ctor(System.Xml.XmlWriter,System.Xaml.XamlSchemaContext,System.Xaml.XamlXmlWriterSettings)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (xmlWriter As XmlWriter, schemaContext As XamlSchemaContext, settings As XamlXmlWriterSettings)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlXmlWriter(System::Xml::XmlWriter ^ xmlWriter, System::Xaml::XamlSchemaContext ^ schemaContext, System::Xaml::XamlXmlWriterSettings ^ settings);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlXmlWriter : System.Xml.XmlWriter * System.Xaml.XamlSchemaContext * System.Xaml.XamlXmlWriterSettings -&gt; System.Xaml.XamlXmlWriter" Usage="new System.Xaml.XamlXmlWriter (xmlWriter, schemaContext, settings)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="xmlWriter" Type="System.Xml.XmlWriter" />
        <Parameter Name="schemaContext" Type="System.Xaml.XamlSchemaContext" />
        <Parameter Name="settings" Type="System.Xaml.XamlXmlWriterSettings" />
      </Parameters>
      <Docs>
        <param name="xmlWriter"><span data-ttu-id="7a167-161">写入输出的 <see cref="T:System.Xml.XmlWriter" />。</span><span class="sxs-lookup"><span data-stu-id="7a167-161">The <see cref="T:System.Xml.XmlWriter" /> that writes the output.</span></span></param>
        <param name="schemaContext"><span data-ttu-id="7a167-162">XAML 编写器的 XAML 架构上下文。</span><span class="sxs-lookup"><span data-stu-id="7a167-162">The XAML schema context for the XAML writer.</span></span></param>
        <param name="settings"><span data-ttu-id="7a167-163"><see cref="T:System.Xaml.XamlXmlWriterSettings" /> 的实例，此实例通常具有特定的非默认设置。</span><span class="sxs-lookup"><span data-stu-id="7a167-163">An instance of <see cref="T:System.Xaml.XamlXmlWriterSettings" />, which typically has specific non-default settings.</span></span></param>
        <summary><span data-ttu-id="7a167-164">使用设置对象从 <see cref="T:System.Xaml.XamlXmlWriter" /> 基础初始化 <see cref="T:System.Xml.XmlWriter" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="7a167-164">Initializes a new instance of the <see cref="T:System.Xaml.XamlXmlWriter" /> class from a <see cref="T:System.Xml.XmlWriter" /> basis using a settings object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7a167-165">构造实例后，请不要更改对象的任何值 `settings` <xref:System.Xaml.XamlXmlWriter> 。</span><span class="sxs-lookup"><span data-stu-id="7a167-165">Do not change any values of the `settings` object after the <xref:System.Xaml.XamlXmlWriter> instance is constructed.</span></span> <span data-ttu-id="7a167-166"><xref:System.Xaml.XamlXmlWriter> 无法根据运行时可变的设置值更新其内部设置。</span><span class="sxs-lookup"><span data-stu-id="7a167-166"><xref:System.Xaml.XamlXmlWriter> cannot update its internal settings based on settings values that are mutable at run time.</span></span> <span data-ttu-id="7a167-167">应该提供仅用于初始化的设置。</span><span class="sxs-lookup"><span data-stu-id="7a167-167">Settings should be provided for initialization only.</span></span> <span data-ttu-id="7a167-168">您可以通过使用其中一个构造函数签名来合并活动 XAML 编写器中的设置 <xref:System.Xaml.XamlXmlWriterSettings> ; 但是，您必须将这些设置应用于新的 xaml 编写器实例，而不是尝试调整现有的 xaml 编写器实例。</span><span class="sxs-lookup"><span data-stu-id="7a167-168">You can merge settings from an active XAML writer by using one of the <xref:System.Xaml.XamlXmlWriterSettings> constructor signatures; however, you must then apply these settings to a new XAML writer instance instead of attempting to adjust the existing one.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="7a167-169"><paramref name="xmlWriter" /> 或 <paramref name="schemaContext" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="7a167-169"><paramref name="xmlWriter" /> or <paramref name="schemaContext" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlXmlWriter.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="xamlXmlWriter.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="7a167-170">设置为 <see langword="true" /> 以释放非托管资源；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="7a167-170"><see langword="true" /> to release the unmanaged resources; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="7a167-171">释放 <see cref="T:System.Xaml.XamlXmlWriter" /> 占用的非托管资源，也可以选择释放托管资源。</span><span class="sxs-lookup"><span data-stu-id="7a167-171">Releases the unmanaged resources used by <see cref="T:System.Xaml.XamlXmlWriter" /> and optionally releases the managed resources.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7a167-172">此实现对 `Close` 基础 <xref:System.Xml.XmlWriter> 或 <xref:System.IO.TextWriter> <xref:System.Xaml.XamlXmlWriterSettings.CloseOutput%2A> `true` 在中提供的情况调用 <xref:System.Xaml.XamlXmlWriterSettings> 。</span><span class="sxs-lookup"><span data-stu-id="7a167-172">This implementation calls `Close` on the underlying <xref:System.Xml.XmlWriter> or <xref:System.IO.TextWriter> for cases where <xref:System.Xaml.XamlXmlWriterSettings.CloseOutput%2A> is `true` in any supplied <xref:System.Xaml.XamlXmlWriterSettings>.</span></span> <span data-ttu-id="7a167-173">否则，它会调用 <xref:System.Xaml.XamlXmlWriter.Flush%2A> 。</span><span class="sxs-lookup"><span data-stu-id="7a167-173">Otherwise, it calls <xref:System.Xaml.XamlXmlWriter.Flush%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlXmlWriter.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Flush();" />
      <MemberSignature Language="F#" Value="member this.Flush : unit -&gt; unit" Usage="xamlXmlWriter.Flush " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7a167-174">调用基础 <see cref="T:System.Xml.XmlWriter" /> 或 <see cref="T:System.IO.TextWriter" /> 的 <see langword="Flush" /> 方法，该方法将写出当前位于缓冲区中的任何内容，然后关闭编写器。</span><span class="sxs-lookup"><span data-stu-id="7a167-174">Calls the <see langword="Flush" /> method of the underlying <see cref="T:System.Xml.XmlWriter" /> or <see cref="T:System.IO.TextWriter" />, which writes anything that is currently in the buffer, and then closes the writer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7a167-175">的 `Dispose` 行为 <xref:System.Xaml.XamlXmlWriter> 可能会受到其编写器设置的影响，尤其是 <xref:System.Xaml.XamlXmlWriterSettings.CloseOutput%2A?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="7a167-175">The `Dispose` behavior for a <xref:System.Xaml.XamlXmlWriter> can be influenced by its writer settings, especially by <xref:System.Xaml.XamlXmlWriterSettings.CloseOutput%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SchemaContext">
      <MemberSignature Language="C#" Value="public override System.Xaml.XamlSchemaContext SchemaContext { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.XamlSchemaContext SchemaContext" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlXmlWriter.SchemaContext" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property SchemaContext As XamlSchemaContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xaml::XamlSchemaContext ^ SchemaContext { System::Xaml::XamlSchemaContext ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SchemaContext : System.Xaml.XamlSchemaContext" Usage="System.Xaml.XamlXmlWriter.SchemaContext" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlSchemaContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7a167-176">获取此 <see cref="T:System.Xaml.XamlXmlWriter" /> 用于处理的 XAML 架构上下文。</span><span class="sxs-lookup"><span data-stu-id="7a167-176">Gets the XAML schema context that this <see cref="T:System.Xaml.XamlXmlWriter" /> uses for processing.</span></span></summary>
        <value><span data-ttu-id="7a167-177">此 <see cref="T:System.Xaml.XamlXmlWriter" /> 用于 XAML 处理的 XAML 架构上下文。</span><span class="sxs-lookup"><span data-stu-id="7a167-177">The XAML schema context that this <see cref="T:System.Xaml.XamlXmlWriter" /> uses for XAML processing.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7a167-178">XAML 编写器通常从提供 XAML 节点流的关联 XAML 读取器获取其 XAML 架构上下文。</span><span class="sxs-lookup"><span data-stu-id="7a167-178">A XAML writer typically gets its XAML schema context from the associated XAML reader that is supplying the XAML node stream.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Settings">
      <MemberSignature Language="C#" Value="public System.Xaml.XamlXmlWriterSettings Settings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.XamlXmlWriterSettings Settings" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlXmlWriter.Settings" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Settings As XamlXmlWriterSettings" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::XamlXmlWriterSettings ^ Settings { System::Xaml::XamlXmlWriterSettings ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Settings : System.Xaml.XamlXmlWriterSettings" Usage="System.Xaml.XamlXmlWriter.Settings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlXmlWriterSettings</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7a167-179">获取此 <see cref="T:System.Xaml.XamlXmlWriter" /> 用于 XAML 处理的编写器设置。</span><span class="sxs-lookup"><span data-stu-id="7a167-179">Gets the writer settings that this <see cref="T:System.Xaml.XamlXmlWriter" /> uses for XAML processing.</span></span></summary>
        <value><span data-ttu-id="7a167-180">此 <see cref="T:System.Xaml.XamlXmlWriter" /> 用于 XAML 处理的编写器设置。</span><span class="sxs-lookup"><span data-stu-id="7a167-180">The writer settings that this <see cref="T:System.Xaml.XamlXmlWriter" /> uses for XAML processing.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7a167-181">从此属性获取的值是副本，而不是引用。</span><span class="sxs-lookup"><span data-stu-id="7a167-181">The value that you get from this property is a copy and not a reference.</span></span> <span data-ttu-id="7a167-182">更改设置上的属性值不影响活动 <xref:System.Xaml.XamlXmlWriter> 。</span><span class="sxs-lookup"><span data-stu-id="7a167-182">Changing property values on the settings does not affect the active <xref:System.Xaml.XamlXmlWriter>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteEndMember">
      <MemberSignature Language="C#" Value="public override void WriteEndMember ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteEndMember() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlXmlWriter.WriteEndMember" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteEndMember ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteEndMember();" />
      <MemberSignature Language="F#" Value="override this.WriteEndMember : unit -&gt; unit" Usage="xamlXmlWriter.WriteEndMember " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7a167-183">将 XAML 结束成员节点写入到基础 <see cref="T:System.Xml.XmlWriter" /> 或 <see cref="T:System.IO.TextWriter" />。</span><span class="sxs-lookup"><span data-stu-id="7a167-183">Writes a XAML end member node to the underlying <see cref="T:System.Xml.XmlWriter" /> or <see cref="T:System.IO.TextWriter" />.</span></span> <span data-ttu-id="7a167-184">如果 XAML 节点流的当前位置不在成员内，或者如果内部编写器状态不支持写入结束成员，则引发异常。</span><span class="sxs-lookup"><span data-stu-id="7a167-184">Throws an exception if the current position of the XAML node stream is not within a member, or if the internal writer state does not support writing to an end member.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="7a167-185">XAML 节点流的当前位置不在成员内。</span><span class="sxs-lookup"><span data-stu-id="7a167-185">The current position of the XAML node stream is not within a member.</span></span></exception>
        <exception cref="T:System.Xaml.XamlXmlWriterException"><span data-ttu-id="7a167-186">当前编写器状态不支持写入结束成员。</span><span class="sxs-lookup"><span data-stu-id="7a167-186">The current writer state does not support writing an end member.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteEndObject">
      <MemberSignature Language="C#" Value="public override void WriteEndObject ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteEndObject() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlXmlWriter.WriteEndObject" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteEndObject ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteEndObject();" />
      <MemberSignature Language="F#" Value="override this.WriteEndObject : unit -&gt; unit" Usage="xamlXmlWriter.WriteEndObject " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7a167-187">将 XAML 结束对象节点写入到基础 <see cref="T:System.Xml.XmlWriter" /> 或 <see cref="T:System.IO.TextWriter" />。</span><span class="sxs-lookup"><span data-stu-id="7a167-187">Writes a XAML end object node to the underlying <see cref="T:System.Xml.XmlWriter" /> or <see cref="T:System.IO.TextWriter" />.</span></span> <span data-ttu-id="7a167-188">如果所处理的 XAML 节点流的当前位置与写入结束对象不兼容，则引发异常。</span><span class="sxs-lookup"><span data-stu-id="7a167-188">Throws an exception if the current position of the XAML node stream that is being processed is incompatible with writing an end object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7a167-189">在 XAML 的标记和文本表示形式中，结束对象是结束标记。</span><span class="sxs-lookup"><span data-stu-id="7a167-189">In markup and text representations of XAML, an end object is a closing tag.</span></span>  
  
 <span data-ttu-id="7a167-190">由引发的最常见的情况 <xref:System.InvalidOperationException> <xref:System.Xaml.XamlXmlWriter.WriteEndObject%2A> 是当前 XAML 节点流位置仍在成员内并且 <xref:System.Xaml.XamlXmlWriter.WriteEndObject%2A> 被调用。</span><span class="sxs-lookup"><span data-stu-id="7a167-190">The most common case where <xref:System.InvalidOperationException> is thrown by <xref:System.Xaml.XamlXmlWriter.WriteEndObject%2A> is when the current XAML node stream position is still within a member, and <xref:System.Xaml.XamlXmlWriter.WriteEndObject%2A> is called.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="7a167-191">XAML 节点流的当前位置不在可以写入结束成员的范围内。</span><span class="sxs-lookup"><span data-stu-id="7a167-191">The current position of the XAML node stream is not in a scope where an end member can be written.</span></span></exception>
        <exception cref="T:System.Xaml.XamlXmlWriterException"><span data-ttu-id="7a167-192">当前编写器状态不支持写入结束对象。</span><span class="sxs-lookup"><span data-stu-id="7a167-192">The current writer state does not support writing an end object.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteGetObject">
      <MemberSignature Language="C#" Value="public override void WriteGetObject ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteGetObject() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlXmlWriter.WriteGetObject" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteGetObject ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteGetObject();" />
      <MemberSignature Language="F#" Value="override this.WriteGetObject : unit -&gt; unit" Usage="xamlXmlWriter.WriteGetObject " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7a167-193">针对指定对象是所编写属性的默认值或隐式值的情况写出对象，而不是指定为输入 XAML 节点集中的对象值。</span><span class="sxs-lookup"><span data-stu-id="7a167-193">Writes an object for cases where the specified object is a default or implicit value of the property that is being written, instead of being specified as an object value in the input XAML node set.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteNamespace">
      <MemberSignature Language="C#" Value="public override void WriteNamespace (System.Xaml.NamespaceDeclaration namespaceDeclaration);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteNamespace(class System.Xaml.NamespaceDeclaration namespaceDeclaration) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlXmlWriter.WriteNamespace(System.Xaml.NamespaceDeclaration)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteNamespace (namespaceDeclaration As NamespaceDeclaration)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteNamespace(System::Xaml::NamespaceDeclaration ^ namespaceDeclaration);" />
      <MemberSignature Language="F#" Value="override this.WriteNamespace : System.Xaml.NamespaceDeclaration -&gt; unit" Usage="xamlXmlWriter.WriteNamespace namespaceDeclaration" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="namespaceDeclaration" Type="System.Xaml.NamespaceDeclaration" />
      </Parameters>
      <Docs>
        <param name="namespaceDeclaration"><span data-ttu-id="7a167-194">要写入的 XAML 命名空间声明。</span><span class="sxs-lookup"><span data-stu-id="7a167-194">The XAML namespace declaration to write.</span></span></param>
        <summary><span data-ttu-id="7a167-195">将命名空间信息写入到基础 <see cref="T:System.Xml.XmlWriter" /> 或 <see cref="T:System.IO.TextWriter" />。</span><span class="sxs-lookup"><span data-stu-id="7a167-195">Writes namespace information to the underlying <see cref="T:System.Xml.XmlWriter" /> or <see cref="T:System.IO.TextWriter" />.</span></span> <span data-ttu-id="7a167-196">对于某些状态可能会引发异常；但在编写器和所处理的 XAML 节点流到达可放置 XAML 命名空间声明的位置之前，可能会改为延迟写入命名空间信息。</span><span class="sxs-lookup"><span data-stu-id="7a167-196">May throw an exception for certain states; however, may instead defer writing the namespace information until the writer and the XAML node stream that is being processed reaches a position where a XAML namespace declaration can be inserted.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="7a167-197"><paramref name="namespaceDeclaration" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="7a167-197"><paramref name="namespaceDeclaration" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="7a167-198"><paramref name="namespaceDeclaration" /> 不是有效的 XAML 命名空间声明（具有 null 前缀或 null 标识符组件）。</span><span class="sxs-lookup"><span data-stu-id="7a167-198"><paramref name="namespaceDeclaration" /> is not a valid XAML namespace declaration (has a null prefix or null identifier component).</span></span></exception>
        <exception cref="T:System.Xaml.XamlXmlWriterException"><span data-ttu-id="7a167-199">当前编写器状态不支持编写 XAML 命名空间声明。</span><span class="sxs-lookup"><span data-stu-id="7a167-199">The current writer state does not support writing a XAML namespace declaration.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteStartMember">
      <MemberSignature Language="C#" Value="public override void WriteStartMember (System.Xaml.XamlMember property);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteStartMember(class System.Xaml.XamlMember property) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlXmlWriter.WriteStartMember(System.Xaml.XamlMember)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteStartMember (property As XamlMember)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteStartMember(System::Xaml::XamlMember ^ property);" />
      <MemberSignature Language="F#" Value="override this.WriteStartMember : System.Xaml.XamlMember -&gt; unit" Usage="xamlXmlWriter.WriteStartMember property" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="System.Xaml.XamlMember" />
      </Parameters>
      <Docs>
        <param name="property"><span data-ttu-id="7a167-200">要写入的成员的 XAML 成员标识符。</span><span class="sxs-lookup"><span data-stu-id="7a167-200">The XAML member identifier for the member to write.</span></span></param>
        <summary><span data-ttu-id="7a167-201">将 XAML 起始成员节点写入到基础 <see cref="T:System.Xml.XmlWriter" /> 或 <see cref="T:System.IO.TextWriter" />。</span><span class="sxs-lookup"><span data-stu-id="7a167-201">Writes a XAML start member node to the underlying <see cref="T:System.Xml.XmlWriter" /> or <see cref="T:System.IO.TextWriter" />.</span></span> <span data-ttu-id="7a167-202">如果 XAML 节点流的当前位置在另一个成员内，或者未处于可写入起始成员的范围或编写器状态中，则引发异常。</span><span class="sxs-lookup"><span data-stu-id="7a167-202">Throws an exception if the current position of the XAML node stream is within another member, or if it is not in a scope or writer state where a start member can be written.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7a167-203"><xref:System.Xaml.XamlXmlWriter>第一次尝试以属性形式写入成员时的内部默认逻辑。</span><span class="sxs-lookup"><span data-stu-id="7a167-203">Internal default logic in the <xref:System.Xaml.XamlXmlWriter> first attempts to write the member in attribute form.</span></span> <span data-ttu-id="7a167-204">如果不支持特性窗体，因为属性或其值不支持文本语法，则改为写入属性元素。</span><span class="sxs-lookup"><span data-stu-id="7a167-204">If no attribute form is supported because the property or its value does not support text syntax, a property element is written instead.</span></span> <span data-ttu-id="7a167-205">如果属性为 XAML 内容属性、 `GetObject` case 或隐式属性，则可能会写入其他 XAML 格式，如内部文本或没有干预成员的对象子级。</span><span class="sxs-lookup"><span data-stu-id="7a167-205">If the property is a XAML content property, a `GetObject` case, or an implicit property, other XAML forms might be written, such as inner text or an object child that has no intervening member.</span></span>  
  
 <span data-ttu-id="7a167-206">如果 <xref:System.Xaml.XamlXmlWriterSettings.AssumeValidInput%2A> `true` 在 <xref:System.Xaml.XamlXmlWriterSettings> 用于此的设置的对象中，则永远不会引发重复成员异常 <xref:System.Xaml.XamlXmlWriter> 。</span><span class="sxs-lookup"><span data-stu-id="7a167-206">The duplicate member exception is never thrown if <xref:System.Xaml.XamlXmlWriterSettings.AssumeValidInput%2A> is `true` in the <xref:System.Xaml.XamlXmlWriterSettings> object that was used for settings for this <xref:System.Xaml.XamlXmlWriter>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="7a167-207"><paramref name="property" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="7a167-207"><paramref name="property" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="7a167-208"><paramref name="property" /> 不是有效的 <see cref="T:System.Xaml.XamlMember" />。</span><span class="sxs-lookup"><span data-stu-id="7a167-208"><paramref name="property" /> is not a valid <see cref="T:System.Xaml.XamlMember" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="7a167-209">XAML 节点流的当前位置无效，无法写入起始成员。</span><span class="sxs-lookup"><span data-stu-id="7a167-209">The current position of the XAML node stream is invalid for writing a start member.</span></span></exception>
        <exception cref="T:System.Xaml.XamlXmlWriterException"><span data-ttu-id="7a167-210">编写器状态对于编写开始成员是无效的。</span><span class="sxs-lookup"><span data-stu-id="7a167-210">The writer state is not valid for writing a start member.</span></span>  
  
 <span data-ttu-id="7a167-211">- 或 -</span><span class="sxs-lookup"><span data-stu-id="7a167-211">-or-</span></span>  
  
 <span data-ttu-id="7a167-212">XAML 编写器尝试编写重复的成员。</span><span class="sxs-lookup"><span data-stu-id="7a167-212">The XAML writer attempted to write a duplicate member.</span></span> <span data-ttu-id="7a167-213">此异常可能具有更精确的内部异常。</span><span class="sxs-lookup"><span data-stu-id="7a167-213">This exception may have a more precise inner exception.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteStartObject">
      <MemberSignature Language="C#" Value="public override void WriteStartObject (System.Xaml.XamlType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteStartObject(class System.Xaml.XamlType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlXmlWriter.WriteStartObject(System.Xaml.XamlType)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteStartObject (type As XamlType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteStartObject(System::Xaml::XamlType ^ type);" />
      <MemberSignature Language="F#" Value="override this.WriteStartObject : System.Xaml.XamlType -&gt; unit" Usage="xamlXmlWriter.WriteStartObject type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Xaml.XamlType" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="7a167-214">要写入的对象的 <see cref="T:System.Xaml.XamlType" />（XAML 类型标识符）。</span><span class="sxs-lookup"><span data-stu-id="7a167-214">The <see cref="T:System.Xaml.XamlType" /> (XAML type identifier) for the object to write.</span></span></param>
        <summary><span data-ttu-id="7a167-215">将 XAML 起始对象节点写入到基础 <see cref="T:System.Xml.XmlWriter" /> 或 <see cref="T:System.IO.TextWriter" />。</span><span class="sxs-lookup"><span data-stu-id="7a167-215">Writes a XAML start object node to the underlying <see cref="T:System.Xml.XmlWriter" /> or <see cref="T:System.IO.TextWriter" />.</span></span> <span data-ttu-id="7a167-216">如果 XAML 节点流的当前位置不在可写入起始对象的范围内，或者编写器未处于可写入起始对象的状态，则引发异常。</span><span class="sxs-lookup"><span data-stu-id="7a167-216">Throws an exception if the current position of the XAML node stream is not in a scope where a start object can be written, or if the writer is not in a state that can write a start object.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="7a167-217"><paramref name="type" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="7a167-217"><paramref name="type" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="7a167-218"><paramref name="type" /> 不是有效的 <see cref="T:System.Xaml.XamlType" />。</span><span class="sxs-lookup"><span data-stu-id="7a167-218"><paramref name="type" /> is not a valid <see cref="T:System.Xaml.XamlType" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="7a167-219">XAML 节点流的当前位置无效，无法写入新的开始对象。</span><span class="sxs-lookup"><span data-stu-id="7a167-219">The current position of the XAML node stream is not valid for writing a new start object.</span></span></exception>
        <exception cref="T:System.Xaml.XamlXmlWriterException"><span data-ttu-id="7a167-220">XAML 编写器的状态无效，无法写入新的开始对象。</span><span class="sxs-lookup"><span data-stu-id="7a167-220">The state of the XAML writer is not valid for writing a new start object.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteValue">
      <MemberSignature Language="C#" Value="public override void WriteValue (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteValue(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlXmlWriter.WriteValue(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteValue (value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteValue(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="override this.WriteValue : obj -&gt; unit" Usage="xamlXmlWriter.WriteValue value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="7a167-221">要写入的值信息。</span><span class="sxs-lookup"><span data-stu-id="7a167-221">The value information to write.</span></span></param>
        <summary><span data-ttu-id="7a167-222">将 XAML 值节点写入到基础 <see cref="T:System.Xml.XmlWriter" /> 或 <see cref="T:System.IO.TextWriter" />。</span><span class="sxs-lookup"><span data-stu-id="7a167-222">Writes a XAML value node to the underlying <see cref="T:System.Xml.XmlWriter" /> or <see cref="T:System.IO.TextWriter" />.</span></span> <span data-ttu-id="7a167-223">如果 XAML 节点流的当前位置对于写入值操作无效，或者编写器处于无法写入值的状态，则引发异常。</span><span class="sxs-lookup"><span data-stu-id="7a167-223">Throws an exception if the current position of the XAML node stream is invalid for writing a value, or the writer is in a state where a value cannot be written.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7a167-224">输入 `value` 可能为 `null` ，它支持以序列化值的形式显式写出 null。</span><span class="sxs-lookup"><span data-stu-id="7a167-224">The input `value` may be `null`, which supports explicitly writing out null as a serialized value.</span></span> <span data-ttu-id="7a167-225">此行为使用 <xref:System.Xaml.XamlLanguage.Null%2A?displayProperty=nameWithType> 定义作为 <xref:System.Xaml.XamlXmlWriter.WriteStartObject%2A> 输入，然后立即调用 <xref:System.Xaml.XamlXmlWriter.WriteEndObject%2A> 。</span><span class="sxs-lookup"><span data-stu-id="7a167-225">This behavior uses the <xref:System.Xaml.XamlLanguage.Null%2A?displayProperty=nameWithType> definition as <xref:System.Xaml.XamlXmlWriter.WriteStartObject%2A> input and then immediately calls <xref:System.Xaml.XamlXmlWriter.WriteEndObject%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="7a167-226">XAML 节点流的当前位置无效，无法写入值。</span><span class="sxs-lookup"><span data-stu-id="7a167-226">The current position of the XAML node stream is not valid for writing a value.</span></span></exception>
        <exception cref="T:System.Xaml.XamlXmlWriterException"><span data-ttu-id="7a167-227">XAML 编写器状态不支持对值节点的写入。</span><span class="sxs-lookup"><span data-stu-id="7a167-227">The XAML writer state does not support the writing of a value node.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="7a167-228"><paramref name="value" /> 指定的值不为 null，也不为字符串。</span><span class="sxs-lookup"><span data-stu-id="7a167-228"><paramref name="value" /> specifies a value that is not null or a string.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
