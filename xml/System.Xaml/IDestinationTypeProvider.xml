<Type Name="IDestinationTypeProvider" FullName="System.Xaml.IDestinationTypeProvider">
  <Metadata><Meta Name="ms.openlocfilehash" Value="98d80918ff357e1271cfebe09e94b292a65912e4" /><Meta Name="ms.sourcegitcommit" Value="11d168140aa8fade0768c2a9dde3e3bcacfdfb7d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="05/27/2020" /><Meta Name="ms.locfileid" Value="83952494" /></Metadata><TypeSignature Language="C#" Value="public interface IDestinationTypeProvider" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDestinationTypeProvider" />
  <TypeSignature Language="DocId" Value="T:System.Xaml.IDestinationTypeProvider" />
  <TypeSignature Language="VB.NET" Value="Public Interface IDestinationTypeProvider" />
  <TypeSignature Language="C++ CLI" Value="public interface class IDestinationTypeProvider" />
  <TypeSignature Language="F#" Value="type IDestinationTypeProvider = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="a5b38-101">表示一个服务，该服务可返回目标类型的 CLR 类型系统标识符。</span><span class="sxs-lookup"><span data-stu-id="a5b38-101">Represents a service that can return a CLR type system identifier for the destination type.</span></span> <span data-ttu-id="a5b38-102">与目标类型相关的情况是属性设置操作的目标类型由反射或其他机制间接报告。</span><span class="sxs-lookup"><span data-stu-id="a5b38-102">The destination type is relevant when the destination type for a property-setting operation is indirectly reported by reflection or other mechanisms.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a5b38-103">通过使用当前 XAML 架构上下文，使用当前 xaml 节点流的当前位置解析 <xref:System.Xaml.IDestinationTypeProvider.GetDestinationType%2A> 返回的类型。</span><span class="sxs-lookup"><span data-stu-id="a5b38-103">The type that is returned by <xref:System.Xaml.IDestinationTypeProvider.GetDestinationType%2A> is resolved from the current position of the XAML node stream by using current XAML schema context.</span></span>  
  
 <span data-ttu-id="a5b38-104">如果使用 XAML 类型系统作为 .NET Framework XAML 服务实现，并在这些条件下访问服务上下文，<xref:System.Xaml.IDestinationTypeProvider.GetDestinationType%2A> 将基于可用的 XAML 类型系统信息和基于 CLR 的 XAML 架构上下文返回 <xref:System.Xaml.XamlType.UnderlyingType%2A>。</span><span class="sxs-lookup"><span data-stu-id="a5b38-104">If you use the XAML type system as implemented by .NET Framework XAML Services and access the service context under these conditions, <xref:System.Xaml.IDestinationTypeProvider.GetDestinationType%2A> returns the <xref:System.Xaml.XamlType.UnderlyingType%2A> based on available XAML type system information and CLR-based XAML schema context.</span></span>  
  
 <span data-ttu-id="a5b38-105">此服务适用于纯 CLR 反射或其他机制可能无法提供与目标类型有关的信息的情况。</span><span class="sxs-lookup"><span data-stu-id="a5b38-105">This service is relevant for situations where pure CLR reflection or other mechanisms might not provide enough information about a destination type.</span></span> <span data-ttu-id="a5b38-106">下面列出了一些 <xref:System.Xaml.IDestinationTypeProvider>的相关方案：</span><span class="sxs-lookup"><span data-stu-id="a5b38-106">The following is a list of some relevant scenarios for <xref:System.Xaml.IDestinationTypeProvider>:</span></span>  
  
-   <span data-ttu-id="a5b38-107">CLR 类型系统报告间接类型，这是因为 CLR 如何定义和使用类型，以及你需要真正的目标类型。</span><span class="sxs-lookup"><span data-stu-id="a5b38-107">The CLR type system reports an indirect type because of how the CLR defines and uses types, and you want a true destination type.</span></span> <span data-ttu-id="a5b38-108">例如，.NET Framework XAML 服务中的 Api 在处理事件成员时在内部使用此服务。</span><span class="sxs-lookup"><span data-stu-id="a5b38-108">For example, the APIs in .NET Framework XAML Services use this service internally when they process event members.</span></span> <span data-ttu-id="a5b38-109">事件由纯 CLR 反射作为 <xref:System.Delegate>报告。</span><span class="sxs-lookup"><span data-stu-id="a5b38-109">Events are reported by pure CLR reflection as a <xref:System.Delegate>.</span></span>  
  
-   <span data-ttu-id="a5b38-110">你需要确保类型转换器用法的目标类型与类型转换器可以生成的预期类型匹配。</span><span class="sxs-lookup"><span data-stu-id="a5b38-110">You want to ensure that the destination type of a type converter usage matches the expected type that the type converter can produce.</span></span> <span data-ttu-id="a5b38-111">当目标类型为参数化或泛型时，此方案很有用。</span><span class="sxs-lookup"><span data-stu-id="a5b38-111">This scenario is useful when the destination type is parameterized or generic.</span></span>  
  
-   <span data-ttu-id="a5b38-112">正在从嵌套在另一个值转换器中的用法调用值转换器。</span><span class="sxs-lookup"><span data-stu-id="a5b38-112">Your value converter is being called from a usage that nested in another value converter.</span></span> <span data-ttu-id="a5b38-113">在这种情况下，<xref:System.Xaml.IDestinationTypeProvider.GetDestinationType%2A> 展开嵌套并返回所设置的实际属性的目标类型，而不是返回任何干预值转换器的输出类型。</span><span class="sxs-lookup"><span data-stu-id="a5b38-113">In this case, <xref:System.Xaml.IDestinationTypeProvider.GetDestinationType%2A> unwinds the nesting and returns the destination type of the actual property being set, instead of returning the output type of any intervening value converter.</span></span>  
  
 <span data-ttu-id="a5b38-114">当 XAML 对象编写器调用值转换行为时，类型转换器和标记扩展可以在 XAML 对象编写器提供的服务上下文上查询 <xref:System.Xaml.IDestinationTypeProvider> 作为服务。</span><span class="sxs-lookup"><span data-stu-id="a5b38-114">Type converters and markup extensions can query for <xref:System.Xaml.IDestinationTypeProvider> as a service on the service context that is provided by a XAML object writer, when the XAML object writer invokes value conversion behavior.</span></span> <span data-ttu-id="a5b38-115">有关详细信息，请参阅[可用于类型转换器和标记扩展](/dotnet/framework/xaml-services/service-contexts-available-to-type-converters-and-markup-extensions)[的 XAML 的类型转换器和标记扩展](/dotnet/framework/xaml-services/type-converters-and-markup-extensions-for-xaml)。</span><span class="sxs-lookup"><span data-stu-id="a5b38-115">For more information, see [Type Converters and Markup Extensions for XAML](/dotnet/framework/xaml-services/type-converters-and-markup-extensions-for-xaml) and [Service Contexts Available to Type Converters and Markup Extensions](/dotnet/framework/xaml-services/service-contexts-available-to-type-converters-and-markup-extensions).</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Xaml.XamlObjectWriter" />
    <related type="Article" href="https://msdn.microsoft.com/library/db07a952-05ce-4aa4-b6f9-aac7397d0326"><span data-ttu-id="a5b38-116">XAML 的类型转换器或标记扩展</span><span class="sxs-lookup"><span data-stu-id="a5b38-116">Type Converters or Markup Extensions for XAML</span></span></related>
  </Docs>
  <Members>
    <Member MemberName="GetDestinationType">
      <MemberSignature Language="C#" Value="public Type GetDestinationType ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type GetDestinationType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.IDestinationTypeProvider.GetDestinationType" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDestinationType () As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Type ^ GetDestinationType();" />
      <MemberSignature Language="F#" Value="abstract member GetDestinationType : unit -&gt; Type" Usage="iDestinationTypeProvider.GetDestinationType " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a5b38-117">返回 CLR <see cref="T:System.Type" />，用于标识相关类型转换器或标记扩展的目标类型。</span><span class="sxs-lookup"><span data-stu-id="a5b38-117">Returns the CLR <see cref="T:System.Type" /> that identifies the destination type for the relevant type converter or markup extension.</span></span></summary>
        <returns><span data-ttu-id="a5b38-118">目标类型的 CLR <see cref="T:System.Type" /> 值。</span><span class="sxs-lookup"><span data-stu-id="a5b38-118">A CLR <see cref="T:System.Type" /> value for the destination type.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a5b38-119">此方法没有输入参数。</span><span class="sxs-lookup"><span data-stu-id="a5b38-119">This method has no input parameter.</span></span> <span data-ttu-id="a5b38-120">要返回的内容（以及是否返回除 `null`以外的任何内容）是否由 XAML 节点流中的当前节点位置确定。</span><span class="sxs-lookup"><span data-stu-id="a5b38-120">What to return (and whether to return anything other than `null`) is determined by the current node position in the XAML node stream.</span></span>  
  
## <a name="service-implementers"></a><span data-ttu-id="a5b38-121">服务实施者</span><span class="sxs-lookup"><span data-stu-id="a5b38-121">Service Implementers</span></span>  
 <span data-ttu-id="a5b38-122">如果重新实现此服务，则 <xref:System.Xaml.IDestinationTypeProvider.GetDestinationType%2A> 方法应返回标记扩展或类型转换器期望对其最具体的转换或输出类型进行检查的类型。</span><span class="sxs-lookup"><span data-stu-id="a5b38-122">If you reimplement this service, the <xref:System.Xaml.IDestinationTypeProvider.GetDestinationType%2A> method should return the type that a markup extension or type converter expects to check against its most specific conversion or output type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
