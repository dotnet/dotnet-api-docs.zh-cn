<Type Name="NamespaceDeclaration" FullName="System.Xaml.NamespaceDeclaration">
  <Metadata><Meta Name="ms.openlocfilehash" Value="4b2887ca35efb5065e4923eb26e78f75c7b4c8cb" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86692274" /></Metadata><TypeSignature Language="C#" Value="public class NamespaceDeclaration" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit NamespaceDeclaration extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Xaml.NamespaceDeclaration" />
  <TypeSignature Language="VB.NET" Value="Public Class NamespaceDeclaration" />
  <TypeSignature Language="C++ CLI" Value="public ref class NamespaceDeclaration" />
  <TypeSignature Language="F#" Value="type NamespaceDeclaration = class" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName Language="C#">[System.Diagnostics.DebuggerDisplay("Prefix={Prefix} Namespace={Namespace}")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerDisplay("Prefix={Prefix} Namespace={Namespace}")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>为 XAML 命名空间声明标识符和前缀，方法是将这些字符串值存储为单独的属性。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xaml.NamespaceDeclaration> 将 XAML 命名空间信息表示为 XAML 节点流的一部分。 <xref:System.Xaml.NamespaceDeclaration>类是一个节点类型，它不是真正的对象或成员; 而是离散节点类型。  
  
 在 XAML 节点流中， <xref:System.Xaml.NamespaceDeclaration> 仅在应用了 xaml 命名空间的对象或成员之前遇到。  
  
 按照约定，XAML 命名空间的标识符类似于 (URI) 的统一资源标识符。 但是，的 <xref:System.Xaml.NamespaceDeclaration.Namespace%2A> 属性 <xref:System.Xaml.NamespaceDeclaration> 的类型为 <xref:System.String> 。 .NET Framework XAML 服务的 Api 通常将 XAML 命名空间标识符作为字符串处理。 True 类型中的相对和绝对差异与 <xref:System.Uri> 标识 XAML (或 XML) 命名空间无关。 在 XML 中，"URI 即命名空间" 约定也是典型约定。  
  
 将 <xref:System.Xaml.XamlObjectWriter.WriteNamespace%2A?displayProperty=nameWithType> XAML 节点流信息写入对象图时，此类型的对象将用作方法的输入。 将 <xref:System.Xaml.XamlXmlWriter.WriteNamespace%2A?displayProperty=nameWithType> XAML 节点流信息作为 XML 进行序列化编写时，此类型的对象用作方法的输入。  
  
 命名空间声明可以具有 <xref:System.String.Empty?displayProperty=nameWithType> 前缀的值。 <xref:System.String.Empty?displayProperty=nameWithType>前缀表示默认 XAML 命名空间的声明。  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Xaml.XamlObjectWriter.WriteNamespace(System.Xaml.NamespaceDeclaration)" />
    <altmember cref="M:System.Xaml.XamlXmlWriter.WriteNamespace(System.Xaml.NamespaceDeclaration)" />
    <altmember cref="P:System.Xaml.XamlXmlReader.Namespace" />
    <related type="Article" href="https://msdn.microsoft.com/library/7c11abec-1075-474c-9d9b-778e5dab21c3">了解 XAML 节点流结构和概念</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NamespaceDeclaration (string ns, string prefix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string ns, string prefix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.NamespaceDeclaration.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (ns As String, prefix As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NamespaceDeclaration(System::String ^ ns, System::String ^ prefix);" />
      <MemberSignature Language="F#" Value="new System.Xaml.NamespaceDeclaration : string * string -&gt; System.Xaml.NamespaceDeclaration" Usage="new System.Xaml.NamespaceDeclaration (ns, prefix)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="ns" Type="System.String" />
        <Parameter Name="prefix" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="ns">以字符串形式指定的 XAML 命名空间标识符。</param>
        <param name="prefix">在前缀映射中用于命名空间的字符串前缀。</param>
        <summary>使用初始属性值初始化 <see cref="T:System.Xaml.NamespaceDeclaration" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 的初始化 <xref:System.Xaml.NamespaceDeclaration> 不会尝试验证值。 若要正确使用 XAML 编写器，请不要使用 null 值。 命名空间声明可以具有 <xref:System.String.Empty?displayProperty=nameWithType> 前缀的值。 <xref:System.String.Empty?displayProperty=nameWithType>前缀表示默认 XAML 命名空间的声明。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Namespace">
      <MemberSignature Language="C#" Value="public string Namespace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Namespace" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.NamespaceDeclaration.Namespace" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Namespace As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Namespace { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Namespace : string" Usage="System.Xaml.NamespaceDeclaration.Namespace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取 <see cref="T:System.Xaml.NamespaceDeclaration" /> 的标识符组成部分。</summary>
        <value>XAML 命名空间声明的标识符。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 按照约定，XAML 命名空间的标识符类似于 (URI) 的统一资源标识符。 .NET Framework XAML 服务的 Api 通常将 XAML 命名空间标识符作为字符串处理。 True 类型中的相对和绝对差异与 <xref:System.Uri> 标识 XAML (或 XML) 命名空间无关。 在 XML 中，"URI 即命名空间" 约定也是典型约定。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Prefix">
      <MemberSignature Language="C#" Value="public string Prefix { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Prefix" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.NamespaceDeclaration.Prefix" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Prefix As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Prefix { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Prefix : string" Usage="System.Xaml.NamespaceDeclaration.Prefix" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取用作 <see cref="T:System.Xaml.NamespaceDeclaration" /> 的 XAML 命名空间映射前缀的前缀。</summary>
        <value>此 <see cref="T:System.Xaml.NamespaceDeclaration" /> 的前缀字符串。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 命名空间声明可以具有 <xref:System.String.Empty?displayProperty=nameWithType> 前缀的值。 <xref:System.String.Empty?displayProperty=nameWithType>前缀表示默认 XAML 命名空间的声明。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
