<Type Name="XamlXmlReader" FullName="System.Xaml.XamlXmlReader">
  <Metadata><Meta Name="ms.openlocfilehash" Value="c2bf2f4dcfe17bec8b4e9cb0798ba90f4edf1ac5" /><Meta Name="ms.sourcegitcommit" Value="0bd9d099f2522ef14c6f48a8ea5f2c0650df0f6f" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="10/15/2020" /><Meta Name="ms.locfileid" Value="92084931" /></Metadata><TypeSignature Language="C#" Value="public class XamlXmlReader : System.Xaml.XamlReader, System.Xaml.IXamlLineInfo" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XamlXmlReader extends System.Xaml.XamlReader implements class System.Xaml.IXamlLineInfo" />
  <TypeSignature Language="DocId" Value="T:System.Xaml.XamlXmlReader" />
  <TypeSignature Language="VB.NET" Value="Public Class XamlXmlReader&#xA;Inherits XamlReader&#xA;Implements IXamlLineInfo" />
  <TypeSignature Language="C++ CLI" Value="public ref class XamlXmlReader : System::Xaml::XamlReader, System::Xaml::IXamlLineInfo" />
  <TypeSignature Language="F#" Value="type XamlXmlReader = class&#xA;    inherit XamlReader&#xA;    interface IXamlLineInfo" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Xaml.XamlReader</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Xaml.IXamlLineInfo</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>使用 <see cref="T:System.Xml.XmlReader" /> 中介处理 XML 文件中的 XAML 标记，并生成 XAML 节点流。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 构造时 <xref:System.Xaml.XamlXmlReader> ， <xref:System.Xml.XmlReader> 需要。 此设计的目的是使用已建立的 XML 处理 .NET Framework Api 来处理流输入、从文件获取流等。  
  
 <xref:System.Xml.XmlReader> 是 XAML 操作的标准加载路径的第一个组件，并包含在中，并包含在 <xref:System.Xaml.XamlServices.Load%2A?displayProperty=nameWithType> 加载 xaml 的多个现有框架 XAML 实现中。  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Xaml.XamlXmlReaderSettings" />
    <altmember cref="T:System.Xaml.XamlObjectWriter" />
    <related type="Article" href="/dotnet/desktop-wpf/xaml-services/understanding-xaml-node-stream-structures-and-concepts">了解 XAML 节点流</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>初始化 <see cref="T:System.Xaml.XamlXmlReader" /> 类的新实例。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlXmlReader (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlXmlReader.#ctor(System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (stream As Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlXmlReader(System::IO::Stream ^ stream);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlXmlReader : System.IO.Stream -&gt; System.Xaml.XamlXmlReader" Usage="new System.Xaml.XamlXmlReader stream" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream">要加载到读取器中的初始流。</param>
        <summary>基于流初始化 <see cref="T:System.Xaml.XamlXmlReader" /> 类的新实例。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="stream" /> 为 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlXmlReader (System.IO.TextReader textReader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.TextReader textReader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlXmlReader.#ctor(System.IO.TextReader)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (textReader As TextReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlXmlReader(System::IO::TextReader ^ textReader);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlXmlReader : System.IO.TextReader -&gt; System.Xaml.XamlXmlReader" Usage="new System.Xaml.XamlXmlReader textReader" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="textReader" Type="System.IO.TextReader" />
      </Parameters>
      <Docs>
        <param name="textReader">要用于初始化的 <see cref="T:System.IO.TextReader" />。</param>
        <summary>基于 <see cref="T:System.Xaml.XamlXmlReader" /> 初始化 <see cref="T:System.IO.TextReader" /> 类的新实例。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="textReader" /> 为 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlXmlReader (string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlXmlReader.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (fileName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlXmlReader(System::String ^ fileName);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlXmlReader : string -&gt; System.Xaml.XamlXmlReader" Usage="new System.Xaml.XamlXmlReader fileName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileName">要加载的 XML 文件的名称。</param>
        <summary>基于要加载到默认读取器中的文件的文件名初始化 <see cref="T:System.Xaml.XamlXmlReader" /> 类的新实例。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="fileName" /> 为 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlXmlReader (System.Xml.XmlReader xmlReader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.XmlReader xmlReader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlXmlReader.#ctor(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (xmlReader As XmlReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlXmlReader(System::Xml::XmlReader ^ xmlReader);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlXmlReader : System.Xml.XmlReader -&gt; System.Xaml.XamlXmlReader" Usage="new System.Xaml.XamlXmlReader xmlReader" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="xmlReader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="xmlReader">要用作中间 XML 处理器的 <see cref="T:System.Xml.XmlReader" />。</param>
        <summary>使用提供的 <see cref="T:System.Xml.XmlReader" /> 初始化 <see cref="T:System.Xaml.XamlXmlReader" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用此构造函数初始化还会设置默认的 XAML 架构上下文和默认读取器设置。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="xmlReader" /> 为 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlXmlReader (System.IO.Stream stream, System.Xaml.XamlSchemaContext schemaContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream stream, class System.Xaml.XamlSchemaContext schemaContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlXmlReader.#ctor(System.IO.Stream,System.Xaml.XamlSchemaContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (stream As Stream, schemaContext As XamlSchemaContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlXmlReader(System::IO::Stream ^ stream, System::Xaml::XamlSchemaContext ^ schemaContext);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlXmlReader : System.IO.Stream * System.Xaml.XamlSchemaContext -&gt; System.Xaml.XamlXmlReader" Usage="new System.Xaml.XamlXmlReader (stream, schemaContext)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="schemaContext" Type="System.Xaml.XamlSchemaContext" />
      </Parameters>
      <Docs>
        <param name="stream">要加载到读取器中的初始流。</param>
        <param name="schemaContext">XAML 处理的 XAML 架构上下文。</param>
        <summary>使用提供的 XAML 架构上下文基于流初始化 <see cref="T:System.Xaml.XamlXmlReader" /> 类的新实例。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="stream" /> 或 <paramref name="schemaContext" /> 为 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlXmlReader (System.IO.Stream stream, System.Xaml.XamlXmlReaderSettings settings);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream stream, class System.Xaml.XamlXmlReaderSettings settings) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlXmlReader.#ctor(System.IO.Stream,System.Xaml.XamlXmlReaderSettings)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (stream As Stream, settings As XamlXmlReaderSettings)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlXmlReader(System::IO::Stream ^ stream, System::Xaml::XamlXmlReaderSettings ^ settings);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlXmlReader : System.IO.Stream * System.Xaml.XamlXmlReaderSettings -&gt; System.Xaml.XamlXmlReader" Usage="new System.Xaml.XamlXmlReader (stream, settings)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="settings" Type="System.Xaml.XamlXmlReaderSettings" />
      </Parameters>
      <Docs>
        <param name="stream">要加载到读取器中的初始流。</param>
        <param name="settings">特定读取器设置。</param>
        <summary>使用特定于 XAML 的设置基于流初始化 <see cref="T:System.Xaml.XamlXmlReader" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 用此构造函数初始化会尝试将默认读取器中的某些设置与中特定于 XAML 的设置合并在一起 `settings` 。 有关详细信息，请参阅 <xref:System.Xaml.XamlXmlReaderSettings>。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="stream" /> 为 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlXmlReader (System.IO.TextReader textReader, System.Xaml.XamlSchemaContext schemaContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.TextReader textReader, class System.Xaml.XamlSchemaContext schemaContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlXmlReader.#ctor(System.IO.TextReader,System.Xaml.XamlSchemaContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (textReader As TextReader, schemaContext As XamlSchemaContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlXmlReader(System::IO::TextReader ^ textReader, System::Xaml::XamlSchemaContext ^ schemaContext);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlXmlReader : System.IO.TextReader * System.Xaml.XamlSchemaContext -&gt; System.Xaml.XamlXmlReader" Usage="new System.Xaml.XamlXmlReader (textReader, schemaContext)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="textReader" Type="System.IO.TextReader" />
        <Parameter Name="schemaContext" Type="System.Xaml.XamlSchemaContext" />
      </Parameters>
      <Docs>
        <param name="textReader">要用于初始化的 <see cref="T:System.IO.TextReader" />。</param>
        <param name="schemaContext">XAML 处理的 XAML 架构上下文。</param>
        <summary>使用提供的架构上下文和特定于 XAML 的设置，基于 <see cref="T:System.Xaml.XamlXmlReader" /> 初始化 <see cref="T:System.IO.TextReader" /> 类的新实例。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="textReader" /> 为 <see langword="null" />。  
  
- 或 - 
 <paramref name="schemaContext" /> 为 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlXmlReader (System.IO.TextReader textReader, System.Xaml.XamlXmlReaderSettings settings);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.TextReader textReader, class System.Xaml.XamlXmlReaderSettings settings) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlXmlReader.#ctor(System.IO.TextReader,System.Xaml.XamlXmlReaderSettings)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (textReader As TextReader, settings As XamlXmlReaderSettings)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlXmlReader(System::IO::TextReader ^ textReader, System::Xaml::XamlXmlReaderSettings ^ settings);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlXmlReader : System.IO.TextReader * System.Xaml.XamlXmlReaderSettings -&gt; System.Xaml.XamlXmlReader" Usage="new System.Xaml.XamlXmlReader (textReader, settings)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="textReader" Type="System.IO.TextReader" />
        <Parameter Name="settings" Type="System.Xaml.XamlXmlReaderSettings" />
      </Parameters>
      <Docs>
        <param name="textReader">要用于初始化的 <see cref="T:System.IO.TextReader" />。</param>
        <param name="settings">特定读取器设置。</param>
        <summary>使用特定于 XAML 的设置，基于 <see cref="T:System.Xaml.XamlXmlReader" /> 初始化 <see cref="T:System.IO.TextReader" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 用此构造函数初始化会尝试将默认读取器中的某些设置与中特定于 XAML 的设置合并在一起 `settings` 。 有关详细信息，请参阅 <xref:System.Xaml.XamlXmlReaderSettings>。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="textReader" /> 为 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlXmlReader (string fileName, System.Xaml.XamlSchemaContext schemaContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string fileName, class System.Xaml.XamlSchemaContext schemaContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlXmlReader.#ctor(System.String,System.Xaml.XamlSchemaContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (fileName As String, schemaContext As XamlSchemaContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlXmlReader(System::String ^ fileName, System::Xaml::XamlSchemaContext ^ schemaContext);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlXmlReader : string * System.Xaml.XamlSchemaContext -&gt; System.Xaml.XamlXmlReader" Usage="new System.Xaml.XamlXmlReader (fileName, schemaContext)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
        <Parameter Name="schemaContext" Type="System.Xaml.XamlSchemaContext" />
      </Parameters>
      <Docs>
        <param name="fileName">要加载的文件的名称。</param>
        <param name="schemaContext">XAML 处理的 XAML 架构上下文。</param>
        <summary>使用提供的 XAML 架构上下文，基于要加载到默认 XML 读取器中的文件的文件名初始化 <see cref="T:System.Xaml.XamlXmlReader" /> 类的新实例。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="fileName" /> 或 <paramref name="schemaContext" /> 为 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlXmlReader (string fileName, System.Xaml.XamlXmlReaderSettings settings);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string fileName, class System.Xaml.XamlXmlReaderSettings settings) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlXmlReader.#ctor(System.String,System.Xaml.XamlXmlReaderSettings)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (fileName As String, settings As XamlXmlReaderSettings)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlXmlReader(System::String ^ fileName, System::Xaml::XamlXmlReaderSettings ^ settings);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlXmlReader : string * System.Xaml.XamlXmlReaderSettings -&gt; System.Xaml.XamlXmlReader" Usage="new System.Xaml.XamlXmlReader (fileName, settings)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
        <Parameter Name="settings" Type="System.Xaml.XamlXmlReaderSettings" />
      </Parameters>
      <Docs>
        <param name="fileName">要加载的 XML 文件的名称。</param>
        <param name="settings">特定读取器设置。</param>
        <summary>使用特定于 XAML 的读取器设置，基于要加载到默认 XML 读取器中的文件的文件名初始化 <see cref="T:System.Xaml.XamlXmlReader" /> 类的新实例。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="fileName" /> 为 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlXmlReader (System.Xml.XmlReader xmlReader, System.Xaml.XamlSchemaContext schemaContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.XmlReader xmlReader, class System.Xaml.XamlSchemaContext schemaContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlXmlReader.#ctor(System.Xml.XmlReader,System.Xaml.XamlSchemaContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (xmlReader As XmlReader, schemaContext As XamlSchemaContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlXmlReader(System::Xml::XmlReader ^ xmlReader, System::Xaml::XamlSchemaContext ^ schemaContext);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlXmlReader : System.Xml.XmlReader * System.Xaml.XamlSchemaContext -&gt; System.Xaml.XamlXmlReader" Usage="new System.Xaml.XamlXmlReader (xmlReader, schemaContext)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="xmlReader" Type="System.Xml.XmlReader" />
        <Parameter Name="schemaContext" Type="System.Xaml.XamlSchemaContext" />
      </Parameters>
      <Docs>
        <param name="xmlReader">要用作中间 XML 处理器的 <see cref="T:System.Xml.XmlReader" />。</param>
        <param name="schemaContext">XAML 处理的 XAML 架构上下文。</param>
        <summary>使用提供的 <see cref="T:System.Xaml.XamlXmlReader" /> 和架构上下文初始化 <see cref="T:System.Xml.XmlReader" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 用此构造函数初始化还会设置默认读取器设置。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="xmlReader" /> 或 <paramref name="schemaContext" /> 为 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlXmlReader (System.Xml.XmlReader xmlReader, System.Xaml.XamlXmlReaderSettings settings);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.XmlReader xmlReader, class System.Xaml.XamlXmlReaderSettings settings) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlXmlReader.#ctor(System.Xml.XmlReader,System.Xaml.XamlXmlReaderSettings)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (xmlReader As XmlReader, settings As XamlXmlReaderSettings)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlXmlReader(System::Xml::XmlReader ^ xmlReader, System::Xaml::XamlXmlReaderSettings ^ settings);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlXmlReader : System.Xml.XmlReader * System.Xaml.XamlXmlReaderSettings -&gt; System.Xaml.XamlXmlReader" Usage="new System.Xaml.XamlXmlReader (xmlReader, settings)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="xmlReader" Type="System.Xml.XmlReader" />
        <Parameter Name="settings" Type="System.Xaml.XamlXmlReaderSettings" />
      </Parameters>
      <Docs>
        <param name="xmlReader">要用作中间 XML 处理器的 <see cref="T:System.Xml.XmlReader" />。</param>
        <param name="settings">特定 XAML 读取器设置。</param>
        <summary>使用提供的 <see cref="T:System.Xaml.XamlXmlReader" /> 和读取器设置初始化 <see cref="T:System.Xml.XmlReader" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 用此构造函数初始化会尝试将提供的部分设置 `xmlReader` 与中的特定于 XAML 的设置合并在 `settings` 一起。 用此构造函数初始化还会设置默认读取器设置。 有关详细信息，请参阅 <xref:System.Xaml.XamlXmlReaderSettings>。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="xmlReader" /> 或 <paramref name="schemaContext" /> 为 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlXmlReader (System.IO.Stream stream, System.Xaml.XamlSchemaContext schemaContext, System.Xaml.XamlXmlReaderSettings settings);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream stream, class System.Xaml.XamlSchemaContext schemaContext, class System.Xaml.XamlXmlReaderSettings settings) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlXmlReader.#ctor(System.IO.Stream,System.Xaml.XamlSchemaContext,System.Xaml.XamlXmlReaderSettings)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (stream As Stream, schemaContext As XamlSchemaContext, settings As XamlXmlReaderSettings)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlXmlReader(System::IO::Stream ^ stream, System::Xaml::XamlSchemaContext ^ schemaContext, System::Xaml::XamlXmlReaderSettings ^ settings);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlXmlReader : System.IO.Stream * System.Xaml.XamlSchemaContext * System.Xaml.XamlXmlReaderSettings -&gt; System.Xaml.XamlXmlReader" Usage="new System.Xaml.XamlXmlReader (stream, schemaContext, settings)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="schemaContext" Type="System.Xaml.XamlSchemaContext" />
        <Parameter Name="settings" Type="System.Xaml.XamlXmlReaderSettings" />
      </Parameters>
      <Docs>
        <param name="stream">要加载到读取器中的初始流。</param>
        <param name="schemaContext">XAML 处理的 XAML 架构上下文。</param>
        <param name="settings">特定读取器设置。</param>
        <summary>使用提供的 XAML 架构上下文和特定于 XAML 的设置基于流初始化 <see cref="T:System.Xaml.XamlXmlReader" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 用此构造函数初始化会尝试将默认读取器中的某些设置与中特定于 XAML 的设置合并在一起 `settings` 。 有关详细信息，请参阅 <xref:System.Xaml.XamlXmlReaderSettings>。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="stream" /> 或 <paramref name="schemaContext" /> 为 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlXmlReader (System.IO.TextReader textReader, System.Xaml.XamlSchemaContext schemaContext, System.Xaml.XamlXmlReaderSettings settings);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.TextReader textReader, class System.Xaml.XamlSchemaContext schemaContext, class System.Xaml.XamlXmlReaderSettings settings) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlXmlReader.#ctor(System.IO.TextReader,System.Xaml.XamlSchemaContext,System.Xaml.XamlXmlReaderSettings)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (textReader As TextReader, schemaContext As XamlSchemaContext, settings As XamlXmlReaderSettings)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlXmlReader(System::IO::TextReader ^ textReader, System::Xaml::XamlSchemaContext ^ schemaContext, System::Xaml::XamlXmlReaderSettings ^ settings);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlXmlReader : System.IO.TextReader * System.Xaml.XamlSchemaContext * System.Xaml.XamlXmlReaderSettings -&gt; System.Xaml.XamlXmlReader" Usage="new System.Xaml.XamlXmlReader (textReader, schemaContext, settings)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="textReader" Type="System.IO.TextReader" />
        <Parameter Name="schemaContext" Type="System.Xaml.XamlSchemaContext" />
        <Parameter Name="settings" Type="System.Xaml.XamlXmlReaderSettings" />
      </Parameters>
      <Docs>
        <param name="textReader">要用于初始化的 <see cref="T:System.IO.TextReader" />。</param>
        <param name="schemaContext">XAML 处理的 XAML 架构上下文。</param>
        <param name="settings">特定读取器设置。</param>
        <summary>使用提供的架构上下文和特定于 XAML 的设置，基于 <see cref="T:System.Xaml.XamlXmlReader" /> 初始化 <see cref="T:System.IO.TextReader" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 用此构造函数初始化会尝试将默认读取器中的某些设置与中特定于 XAML 的设置合并在一起 `settings` 。 有关详细信息，请参阅 <xref:System.Xaml.XamlXmlReaderSettings>。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="textReader" /> 为 <see langword="null" />。  
  
- 或 - 
 <paramref name="schemaContext" /> 为 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlXmlReader (string fileName, System.Xaml.XamlSchemaContext schemaContext, System.Xaml.XamlXmlReaderSettings settings);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string fileName, class System.Xaml.XamlSchemaContext schemaContext, class System.Xaml.XamlXmlReaderSettings settings) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlXmlReader.#ctor(System.String,System.Xaml.XamlSchemaContext,System.Xaml.XamlXmlReaderSettings)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (fileName As String, schemaContext As XamlSchemaContext, settings As XamlXmlReaderSettings)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlXmlReader(System::String ^ fileName, System::Xaml::XamlSchemaContext ^ schemaContext, System::Xaml::XamlXmlReaderSettings ^ settings);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlXmlReader : string * System.Xaml.XamlSchemaContext * System.Xaml.XamlXmlReaderSettings -&gt; System.Xaml.XamlXmlReader" Usage="new System.Xaml.XamlXmlReader (fileName, schemaContext, settings)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
        <Parameter Name="schemaContext" Type="System.Xaml.XamlSchemaContext" />
        <Parameter Name="settings" Type="System.Xaml.XamlXmlReaderSettings" />
      </Parameters>
      <Docs>
        <param name="fileName">要加载的 XML 文件的名称。</param>
        <param name="schemaContext">XAML 处理的 XAML 架构上下文。</param>
        <param name="settings">特定读取器设置。</param>
        <summary>使用提供的 XAML 架构上下文和特定于 XAML 的读取器设置，基于要加载到默认 XML 读取器中的文件的文件名初始化 <see cref="T:System.Xaml.XamlXmlReader" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 用此构造函数初始化会尝试将默认读取器中的某些设置与中特定于 XAML 的设置合并在一起 `settings` 。 有关详细信息，请参阅 <xref:System.Xaml.XamlXmlReaderSettings>。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="fileName" /> 为 <see langword="null" />。  
  
- 或 - 
 <paramref name="schemaContext" /> 为 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlXmlReader (System.Xml.XmlReader xmlReader, System.Xaml.XamlSchemaContext schemaContext, System.Xaml.XamlXmlReaderSettings settings);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.XmlReader xmlReader, class System.Xaml.XamlSchemaContext schemaContext, class System.Xaml.XamlXmlReaderSettings settings) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlXmlReader.#ctor(System.Xml.XmlReader,System.Xaml.XamlSchemaContext,System.Xaml.XamlXmlReaderSettings)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (xmlReader As XmlReader, schemaContext As XamlSchemaContext, settings As XamlXmlReaderSettings)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlXmlReader(System::Xml::XmlReader ^ xmlReader, System::Xaml::XamlSchemaContext ^ schemaContext, System::Xaml::XamlXmlReaderSettings ^ settings);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlXmlReader : System.Xml.XmlReader * System.Xaml.XamlSchemaContext * System.Xaml.XamlXmlReaderSettings -&gt; System.Xaml.XamlXmlReader" Usage="new System.Xaml.XamlXmlReader (xmlReader, schemaContext, settings)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="xmlReader" Type="System.Xml.XmlReader" />
        <Parameter Name="schemaContext" Type="System.Xaml.XamlSchemaContext" />
        <Parameter Name="settings" Type="System.Xaml.XamlXmlReaderSettings" />
      </Parameters>
      <Docs>
        <param name="xmlReader">要用作中间 XML 处理器的 <see cref="T:System.Xml.XmlReader" />。</param>
        <param name="schemaContext">XAML 处理的 XAML 架构上下文。</param>
        <param name="settings">特定 XAML 读取器设置。</param>
        <summary>使用提供的 <see cref="T:System.Xaml.XamlXmlReader" />、架构上下文和读取器设置初始化 <see cref="T:System.Xml.XmlReader" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 用此构造函数初始化会尝试将提供的部分设置 `xmlReader` 与中的特定于 XAML 的设置合并在 `settings` 一起。 有关详细信息，请参阅 <xref:System.Xaml.XamlXmlReaderSettings>。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="xmlReader" /> 或 <paramref name="schemaContext" /> 为 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="HasLineInfo">
      <MemberSignature Language="C#" Value="public bool HasLineInfo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasLineInfo" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlXmlReader.HasLineInfo" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasLineInfo As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasLineInfo { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasLineInfo : bool" Usage="System.Xaml.XamlXmlReader.HasLineInfo" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Xaml.IXamlLineInfo.HasLineInfo</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个值，该值指定行信息是否可用。</summary>
        <value>如果行信息可用，则为 <see langword="true" />；否则为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此属性是实现的一部分 <xref:System.Xaml.IXamlLineInfo> 。 结果部分基于用于初始化此的读取器设置 <xref:System.Xaml.XamlXmlReader> 。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEof">
      <MemberSignature Language="C#" Value="public override bool IsEof { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEof" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlXmlReader.IsEof" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsEof As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsEof { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsEof : bool" Usage="System.Xaml.XamlXmlReader.IsEof" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个值，该值报告 XAML 节点流中的读取器位置是否位于文件结尾。</summary>
        <value>如果位置在节点流的概念上的文件末尾，则为 <see langword="true" />；否则为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果当前正在使用子树读取器，则在 <xref:System.Xaml.XamlXmlReader.IsEof%2A> 退出子树的边界之后，子树读取器会报告。 有关详细信息，请参阅 <xref:System.Xaml.XamlReader.ReadSubtree%2A>。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LineNumber">
      <MemberSignature Language="C#" Value="public int LineNumber { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LineNumber" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlXmlReader.LineNumber" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LineNumber As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int LineNumber { int get(); };" />
      <MemberSignature Language="F#" Value="member this.LineNumber : int" Usage="System.Xaml.XamlXmlReader.LineNumber" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Xaml.IXamlLineInfo.LineNumber</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取要报告的行号。</summary>
        <value>要报告的行号。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此属性是实现的一部分 <xref:System.Xaml.IXamlLineInfo> 。 、、或的节点类型 <xref:System.Xaml.XamlNodeType.StartObject> <xref:System.Xaml.XamlNodeType.StartMember> <xref:System.Xaml.XamlNodeType.NamespaceDeclaration> <xref:System.Xaml.XamlNodeType.Value> 可以返回行号。 其他节点类型返回值0。 如果为，则所有节点类型都将返回 0 <xref:System.Xaml.XamlXmlReader.HasLineInfo%2A> `false` 。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LinePosition">
      <MemberSignature Language="C#" Value="public int LinePosition { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LinePosition" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlXmlReader.LinePosition" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LinePosition As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int LinePosition { int get(); };" />
      <MemberSignature Language="F#" Value="member this.LinePosition : int" Usage="System.Xaml.XamlXmlReader.LinePosition" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Xaml.IXamlLineInfo.LinePosition</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取要报告的行位置。</summary>
        <value>要报告的行位置。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此属性是实现的一部分 <xref:System.Xaml.IXamlLineInfo> 。 、、或的节点类型 <xref:System.Xaml.XamlNodeType.StartObject> <xref:System.Xaml.XamlNodeType.StartMember> <xref:System.Xaml.XamlNodeType.NamespaceDeclaration> <xref:System.Xaml.XamlNodeType.Value> 可以返回行位置。 其他节点类型返回值0。 如果为，则所有节点类型都将返回 0 <xref:System.Xaml.XamlXmlReader.HasLineInfo%2A> `false` 。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Member">
      <MemberSignature Language="C#" Value="public override System.Xaml.XamlMember Member { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.XamlMember Member" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlXmlReader.Member" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Member As XamlMember" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xaml::XamlMember ^ Member { System::Xaml::XamlMember ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Member : System.Xaml.XamlMember" Usage="System.Xaml.XamlXmlReader.Member" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlMember</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>如果当前读取器位置在 <see cref="F:System.Xaml.XamlNodeType.StartMember" /> 上，则获取位于读取器位置处的当前成员。</summary>
        <value>当前成员；如果当前读取器位置不在成员上，则为 <see langword="null" />。</value>
        <remarks>To be added.</remarks>
        <related type="Article" href="/dotnet/desktop-wpf/xaml-services/understanding-xaml-node-stream-structures-and-concepts">了解 XAML 节点流</related>
      </Docs>
    </Member>
    <Member MemberName="Namespace">
      <MemberSignature Language="C#" Value="public override System.Xaml.NamespaceDeclaration Namespace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.NamespaceDeclaration Namespace" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlXmlReader.Namespace" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Namespace As NamespaceDeclaration" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xaml::NamespaceDeclaration ^ Namespace { System::Xaml::NamespaceDeclaration ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Namespace : System.Xaml.NamespaceDeclaration" Usage="System.Xaml.XamlXmlReader.Namespace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.NamespaceDeclaration</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>从当前节点中获取 XAML 命名空间。</summary>
        <value>如果可用，则为当前节点中的 XAML 命名空间；否则为 <see langword="null" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果当前位置的为，则此属性仅具有非 null 结果 <xref:System.Xaml.XamlXmlReader.NodeType%2A> <xref:System.Xaml.XamlNodeType.NamespaceDeclaration> 。 此属性不会报告应用于一般范围意义的对象或成员的 XAML 命名空间。 如果需要执行特定操作，则实现应缓存 XAML 命名空间信息。 对于涉及加载的 XAML 架构上下文的默认操作，操作 XAML 命名空间由 XAML 编写器实现在内部缓存。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NodeType">
      <MemberSignature Language="C#" Value="public override System.Xaml.XamlNodeType NodeType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xaml.XamlNodeType NodeType" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlXmlReader.NodeType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property NodeType As XamlNodeType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xaml::XamlNodeType NodeType { System::Xaml::XamlNodeType get(); };" />
      <MemberSignature Language="F#" Value="member this.NodeType : System.Xaml.XamlNodeType" Usage="System.Xaml.XamlXmlReader.NodeType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlNodeType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取当前节点的类型。</summary>
        <value><see cref="T:System.Xaml.XamlNodeType" /> 枚举的一个值。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public override bool Read ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Read() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlXmlReader.Read" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Read () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Read();" />
      <MemberSignature Language="F#" Value="override this.Read : unit -&gt; bool" Usage="xamlXmlReader.Read " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>提供所加载的源中的下一个 XAML 节点（如果 XAML 节点可用）。</summary>
        <returns>如果某节点可用，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 返回的节点 <xref:System.Xaml.XamlXmlReader.Read%2A> `false` 也返回 `true` <xref:System.Xaml.XamlXmlReader.IsEof%2A> 。  
  
 调用 <xref:System.Xaml.XamlXmlReader.Read%2A> 通常具有前进或的副作用 <xref:System.Xaml.XamlXmlReader.LineNumber%2A> <xref:System.Xaml.XamlXmlReader.LinePosition%2A> 。  
  
 调用并获得结果后的下一个操作 <xref:System.Xaml.XamlXmlReader.Read%2A> `true` 通常是检查 <xref:System.Xaml.XamlXmlReader.NodeType%2A> 。 若要详细了解 XAML 节点流概念，请参阅[了解 XAML 节点流结构和概念](/dotnet/framework/xaml-services/understanding-xaml-node-stream-structures-and-concepts)。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlXmlReader.NodeType" />
        <related type="Article" href="/dotnet/desktop-wpf/xaml-services/understanding-xaml-node-stream-structures-and-concepts">了解 XAML 节点流结构和概念</related>
      </Docs>
    </Member>
    <Member MemberName="SchemaContext">
      <MemberSignature Language="C#" Value="public override System.Xaml.XamlSchemaContext SchemaContext { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.XamlSchemaContext SchemaContext" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlXmlReader.SchemaContext" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property SchemaContext As XamlSchemaContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xaml::XamlSchemaContext ^ SchemaContext { System::Xaml::XamlSchemaContext ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SchemaContext : System.Xaml.XamlSchemaContext" Usage="System.Xaml.XamlXmlReader.SchemaContext" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlSchemaContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个对象，该对象提供信息集的架构信息。</summary>
        <value>一个对象，该对象提供信息集的架构信息。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此值为默认 XAML 架构上下文或作为构造函数信息提供的专门派生的 XAML 架构上下文。 架构上下文会影响 XAML 处理行为的许多方面。 特别 <xref:System.Xaml.XamlXmlReader.SchemaContext%2A> 是，读取器通常由任何关联的编写器使用。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public override System.Xaml.XamlType Type { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.XamlType Type" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlXmlReader.Type" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Type As XamlType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xaml::XamlType ^ Type { System::Xaml::XamlType ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Type : System.Xaml.XamlType" Usage="System.Xaml.XamlXmlReader.Type" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取当前节点的 <see cref="T:System.Xaml.XamlType" />。</summary>
        <value>当前节点的 <see cref="T:System.Xaml.XamlType" />；如果位置不在对象上，则为 <see langword="null" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果当前位置的为，则此属性仅具有非 null 结果 <xref:System.Xaml.XamlXmlReader.NodeType%2A> <xref:System.Xaml.XamlNodeType.StartObject> 。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/desktop-wpf/xaml-services/understanding-xaml-node-stream-structures-and-concepts">了解 XAML 节点流</related>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public override object Value { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Value" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlXmlReader.Value" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Value As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ Value { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Value : obj" Usage="System.Xaml.XamlXmlReader.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取当前节点的值。</summary>
        <value>当前节点的值；如果位置不在 <see cref="F:System.Xaml.XamlNodeType.Value" /> 节点类型上，则为 <see langword="null" />。</value>
        <remarks>To be added.</remarks>
        <related type="Article" href="/dotnet/desktop-wpf/xaml-services/understanding-xaml-node-stream-structures-and-concepts">了解 XAML 节点流</related>
      </Docs>
    </Member>
  </Members>
</Type>
