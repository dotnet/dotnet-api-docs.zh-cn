<Type Name="IAttachedPropertyStore" FullName="System.Xaml.IAttachedPropertyStore">
  <Metadata><Meta Name="ms.openlocfilehash" Value="4f0d287e143d58c61c0915bdded4c6e71d2c6a9b" /><Meta Name="ms.sourcegitcommit" Value="f828282420515ef705e09bbdb6c22116df98b5e3" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="82496171" /></Metadata><TypeSignature Language="C#" Value="public interface IAttachedPropertyStore" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IAttachedPropertyStore" />
  <TypeSignature Language="DocId" Value="T:System.Xaml.IAttachedPropertyStore" />
  <TypeSignature Language="VB.NET" Value="Public Interface IAttachedPropertyStore" />
  <TypeSignature Language="C++ CLI" Value="public interface class IAttachedPropertyStore" />
  <TypeSignature Language="F#" Value="type IAttachedPropertyStore = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>表示设置了可附加成员的对象的可附加成员存储。 随后可使用 <see cref="T:System.Xaml.AttachablePropertyServices" /> 引用此可附加成员存储。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 可附加成员通常作为可附加的属性实现和使用。 术语 "可附加成员" 为技术还定义了可附加事件的系统提供了一种可能性。 作为属性存储区中的项，可附加事件存储对通过可附加成员使用情况分配的处理程序的引用。 XAML 中可附加的事件可以使用与可附加属性相同的存储，即使可附加事件不是真正成为基础类型系统的属性或在实际使用时也是如此。  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Xaml.AttachableMemberIdentifier" />
    <altmember cref="T:System.Xaml.AttachablePropertyServices" />
  </Docs>
  <Members>
    <Member MemberName="CopyPropertiesTo">
      <MemberSignature Language="C#" Value="public void CopyPropertiesTo (System.Collections.Generic.KeyValuePair&lt;System.Xaml.AttachableMemberIdentifier,object&gt;[] array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyPropertiesTo(valuetype System.Collections.Generic.KeyValuePair`2&lt;class System.Xaml.AttachableMemberIdentifier, object&gt;[] array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.IAttachedPropertyStore.CopyPropertiesTo(System.Collections.Generic.KeyValuePair{System.Xaml.AttachableMemberIdentifier,System.Object}[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyPropertiesTo (array As KeyValuePair(Of AttachableMemberIdentifier, Object)(), index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyPropertiesTo(cli::array &lt;System::Collections::Generic::KeyValuePair&lt;System::Xaml::AttachableMemberIdentifier ^, System::Object ^&gt;&gt; ^ array, int index);" />
      <MemberSignature Language="F#" Value="abstract member CopyPropertiesTo : System.Collections.Generic.KeyValuePair&lt;System.Xaml.AttachableMemberIdentifier, obj&gt;[] * int -&gt; unit" Usage="iAttachedPropertyStore.CopyPropertiesTo (array, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Collections.Generic.KeyValuePair&lt;System.Xaml.AttachableMemberIdentifier,System.Object&gt;[]" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">目标数组。 该数组为泛型数组，应以无维度方式传递，并且应具有 <see cref="T:System.Xaml.AttachableMemberIdentifier" /> 和 <see langword="object" /> 的组件。</param>
        <param name="index">开始复制处的源索引。</param>
        <summary>从此可附加成员存储区中复制所有可附加成员/值对，并将它们复制到目标数组中。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PropertyCount">
      <MemberSignature Language="C#" Value="public int PropertyCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PropertyCount" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.IAttachedPropertyStore.PropertyCount" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PropertyCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int PropertyCount { int get(); };" />
      <MemberSignature Language="F#" Value="member this.PropertyCount : int" Usage="System.Xaml.IAttachedPropertyStore.PropertyCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取此可附加成员存储中的可附加成员条目的计数。</summary>
        <value>存储中条目的整数计数。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveProperty">
      <MemberSignature Language="C#" Value="public bool RemoveProperty (System.Xaml.AttachableMemberIdentifier attachableMemberIdentifier);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool RemoveProperty(class System.Xaml.AttachableMemberIdentifier attachableMemberIdentifier) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.IAttachedPropertyStore.RemoveProperty(System.Xaml.AttachableMemberIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoveProperty (attachableMemberIdentifier As AttachableMemberIdentifier) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool RemoveProperty(System::Xaml::AttachableMemberIdentifier ^ attachableMemberIdentifier);" />
      <MemberSignature Language="F#" Value="abstract member RemoveProperty : System.Xaml.AttachableMemberIdentifier -&gt; bool" Usage="iAttachedPropertyStore.RemoveProperty attachableMemberIdentifier" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attachableMemberIdentifier" Type="System.Xaml.AttachableMemberIdentifier" />
      </Parameters>
      <Docs>
        <param name="attachableMemberIdentifier">要移除的可附加成员条目的 XAML 类型系统标识符。</param>
        <summary>从此可附加成员存储中移除指定可附加成员的条目。</summary>
        <returns>如果在存储中找到了 <paramref name="attachableMemberIdentifier" /> 的可附加成员条目并已将其移除，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetProperty">
      <MemberSignature Language="C#" Value="public void SetProperty (System.Xaml.AttachableMemberIdentifier attachableMemberIdentifier, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetProperty(class System.Xaml.AttachableMemberIdentifier attachableMemberIdentifier, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.IAttachedPropertyStore.SetProperty(System.Xaml.AttachableMemberIdentifier,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetProperty (attachableMemberIdentifier As AttachableMemberIdentifier, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetProperty(System::Xaml::AttachableMemberIdentifier ^ attachableMemberIdentifier, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member SetProperty : System.Xaml.AttachableMemberIdentifier * obj -&gt; unit" Usage="iAttachedPropertyStore.SetProperty (attachableMemberIdentifier, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attachableMemberIdentifier" Type="System.Xaml.AttachableMemberIdentifier" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="attachableMemberIdentifier">要设置的可附加成员条目的 XAML 类型系统标识符。</param>
        <param name="value">要设置的值。</param>
        <summary>设置指定存储中的指定可附加成员的值。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果特定的可附加成员已存在，则实现不应引发异常。 如果成员已存在，则实现应使用覆盖任何现有值 `value` 。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xaml.AttachableMemberIdentifier" />
      </Docs>
    </Member>
    <Member MemberName="TryGetProperty">
      <MemberSignature Language="C#" Value="public bool TryGetProperty (System.Xaml.AttachableMemberIdentifier attachableMemberIdentifier, out object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TryGetProperty(class System.Xaml.AttachableMemberIdentifier attachableMemberIdentifier, [out] object&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.IAttachedPropertyStore.TryGetProperty(System.Xaml.AttachableMemberIdentifier,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetProperty (attachableMemberIdentifier As AttachableMemberIdentifier, ByRef value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetProperty(System::Xaml::AttachableMemberIdentifier ^ attachableMemberIdentifier, [Runtime::InteropServices::Out] System::Object ^ % value);" />
      <MemberSignature Language="F#" Value="abstract member TryGetProperty : System.Xaml.AttachableMemberIdentifier * obj -&gt; bool" Usage="iAttachedPropertyStore.TryGetProperty (attachableMemberIdentifier, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attachableMemberIdentifier" Type="System.Xaml.AttachableMemberIdentifier" />
        <Parameter Name="value" Type="System.Object" RefType="out" />
      </Parameters>
      <Docs>
        <param name="attachableMemberIdentifier">要获取的可附加成员条目的 XAML 类型系统标识符。</param>
        <param name="value">输出参数。 当此方法返回时，如果 <paramref name="attachableMemberIdentifier" /> 存在于存储中并且具有值，则会包含值的目标对象。</param>
        <summary>尝试获取指定存储中的指定可附加成员的值。</summary>
        <returns>如果在存储中找到了 <paramref name="attachableMemberIdentifier" /> 的可附加成员条目，并且值已传递到 <paramref name="value" />，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果特定的可附加成员不在存储区中，则实现不应引发异常。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
