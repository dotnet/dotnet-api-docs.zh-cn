<Type Name="XamlObjectReader" FullName="System.Xaml.XamlObjectReader">
  <Metadata><Meta Name="ms.openlocfilehash" Value="8bc7f8d7343711e3b1a4f818c88174069bdf2337" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86606513" /></Metadata><TypeSignature Language="C#" Value="public class XamlObjectReader : System.Xaml.XamlReader" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XamlObjectReader extends System.Xaml.XamlReader" />
  <TypeSignature Language="DocId" Value="T:System.Xaml.XamlObjectReader" />
  <TypeSignature Language="VB.NET" Value="Public Class XamlObjectReader&#xA;Inherits XamlReader" />
  <TypeSignature Language="C++ CLI" Value="public ref class XamlObjectReader : System::Xaml::XamlReader" />
  <TypeSignature Language="F#" Value="type XamlObjectReader = class&#xA;    inherit XamlReader" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Xaml.XamlReader</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>提供一个 <see cref="T:System.Xaml.XamlReader" /> 实现，该实现读取对象图并生成 XAML 节点流。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xaml.XamlObjectReader>如果要处理对象图（通常是最初从 XAML 源生成的应用程序的对象图），请在中使用。 您可以使用 <xref:System.Xaml.XamlObjectReader> 从 xaml 开始点到 xaml 终结点进行往返的位置。 或者，你可以通过 <xref:System.Xaml.XamlObjectReader> 对象图运行; 如果需要，可使用和上的 api 来处理中间 XAML 节点流; 然后 <xref:System.Xaml.XamlType> <xref:System.Xaml.XamlMember> 使用 <xref:System.Xaml.XamlXmlWriter> 将 XAML 节点序列化为 XML。  
  
 更高级的方案可能会提供 <xref:System.Xaml.XamlXmlWriter> 重写和特定 XAML 架构上下文，该上下文是 <xref:System.Xaml.XamlObjectReader> 使用的，然后传递到编写器替代。  
  
 使用 <xref:System.Xaml.XamlObjectReader> 调用实现的成员的典型方案 <xref:System.Xaml.XamlObjectReader> ; 它们还 <xref:System.Xaml.XamlReader.Close%2A> <xref:System.Xaml.XamlReader.ReadSubtree%2A> 从基类调用、和 <xref:System.Xaml.XamlReader.Skip%2A> <xref:System.Xaml.XamlReader> 。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>初始化 <see cref="T:System.Xaml.XamlObjectReader" /> 类的新实例。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlObjectReader (object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlObjectReader.#ctor(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (instance As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlObjectReader(System::Object ^ instance);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlObjectReader : obj -&gt; System.Xaml.XamlObjectReader" Usage="new System.Xaml.XamlObjectReader instance" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instance">要读取的对象树/对象图的根。</param>
        <summary>初始化 <see cref="T:System.Xaml.XamlObjectReader" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果使用此构造函数进行初始化，则 <xref:System.Xaml.XamlObjectReader> 对象具有默认 <xref:System.Xaml.XamlObjectReaderSettings> 对象和默认的初始上下文的初始设置 <xref:System.Xaml.XamlSchemaContext> 。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlObjectReader (object instance, System.Xaml.XamlObjectReaderSettings settings);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object instance, class System.Xaml.XamlObjectReaderSettings settings) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlObjectReader.#ctor(System.Object,System.Xaml.XamlObjectReaderSettings)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (instance As Object, settings As XamlObjectReaderSettings)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlObjectReader(System::Object ^ instance, System::Xaml::XamlObjectReaderSettings ^ settings);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlObjectReader : obj * System.Xaml.XamlObjectReaderSettings -&gt; System.Xaml.XamlObjectReader" Usage="new System.Xaml.XamlObjectReader (instance, settings)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="settings" Type="System.Xaml.XamlObjectReaderSettings" />
      </Parameters>
      <Docs>
        <param name="instance">要读取的对象树的根。</param>
        <param name="settings">一个设置对象。</param>
        <summary>使用指定的读取器设置初始化 <see cref="T:System.Xaml.XamlObjectReader" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Settings 对象指定读取器操作的规则，例如行号处理、错误处理行为，等等。 有关详细信息，请参阅 <xref:System.Xaml.XamlObjectReaderSettings>。  
  
 如果使用此构造函数进行初始化，则 <xref:System.Xaml.XamlObjectReader> 对象的初始上下文为默认 <xref:System.Xaml.XamlSchemaContext> 值。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlObjectReader (object instance, System.Xaml.XamlSchemaContext schemaContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object instance, class System.Xaml.XamlSchemaContext schemaContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlObjectReader.#ctor(System.Object,System.Xaml.XamlSchemaContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (instance As Object, schemaContext As XamlSchemaContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlObjectReader(System::Object ^ instance, System::Xaml::XamlSchemaContext ^ schemaContext);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlObjectReader : obj * System.Xaml.XamlSchemaContext -&gt; System.Xaml.XamlObjectReader" Usage="new System.Xaml.XamlObjectReader (instance, schemaContext)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="schemaContext" Type="System.Xaml.XamlSchemaContext" />
      </Parameters>
      <Docs>
        <param name="instance">要读取的对象树的根。</param>
        <param name="schemaContext">要使用的读取器的架构上下文。</param>
        <summary>使用指定的架构上下文初始化 <see cref="T:System.Xaml.XamlObjectReader" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果使用此构造函数进行初始化，则 <xref:System.Xaml.XamlObjectReader> 对象具有默认对象的初始设置 <xref:System.Xaml.XamlObjectReaderSettings> 。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="schemaContext" /> 为 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlObjectReader (object instance, System.Xaml.XamlSchemaContext schemaContext, System.Xaml.XamlObjectReaderSettings settings);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object instance, class System.Xaml.XamlSchemaContext schemaContext, class System.Xaml.XamlObjectReaderSettings settings) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlObjectReader.#ctor(System.Object,System.Xaml.XamlSchemaContext,System.Xaml.XamlObjectReaderSettings)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (instance As Object, schemaContext As XamlSchemaContext, settings As XamlObjectReaderSettings)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlObjectReader(System::Object ^ instance, System::Xaml::XamlSchemaContext ^ schemaContext, System::Xaml::XamlObjectReaderSettings ^ settings);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlObjectReader : obj * System.Xaml.XamlSchemaContext * System.Xaml.XamlObjectReaderSettings -&gt; System.Xaml.XamlObjectReader" Usage="new System.Xaml.XamlObjectReader (instance, schemaContext, settings)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="schemaContext" Type="System.Xaml.XamlSchemaContext" />
        <Parameter Name="settings" Type="System.Xaml.XamlObjectReaderSettings" />
      </Parameters>
      <Docs>
        <param name="instance">要读取的对象树的根。</param>
        <param name="schemaContext">要使用的读取器的架构上下文。</param>
        <param name="settings">一个设置对象。</param>
        <summary>使用指定的架构上下文和读取器设置初始化 <see cref="T:System.Xaml.XamlObjectReader" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Settings 对象指定读取器操作的规则，例如行号处理和错误处理行为。 有关详细信息，请参阅 <xref:System.Xaml.XamlObjectReaderSettings>。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="schemaContext" /> 为 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="Instance">
      <MemberSignature Language="C#" Value="public virtual object Instance { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Instance" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlObjectReader.Instance" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Instance As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ Instance { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Instance : obj" Usage="System.Xaml.XamlObjectReader.Instance" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取在当前读取器位置可用的对象实例。</summary>
        <value>位于当前读取器位置的对象实例；如果读取器位置不在对象上，则为 <see langword="null" />。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEof">
      <MemberSignature Language="C#" Value="public override bool IsEof { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEof" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlObjectReader.IsEof" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsEof As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsEof { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsEof : bool" Usage="System.Xaml.XamlObjectReader.IsEof" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个值，该值报告读取器位置是否位于文件结尾。</summary>
        <value>如果读取器位置位于文件结尾，则为 <see langword="true" />；否则为 <see langword="false" />。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Member">
      <MemberSignature Language="C#" Value="public override System.Xaml.XamlMember Member { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.XamlMember Member" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlObjectReader.Member" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Member As XamlMember" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xaml::XamlMember ^ Member { System::Xaml::XamlMember ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Member : System.Xaml.XamlMember" Usage="System.Xaml.XamlObjectReader.Member" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlMember</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>如果读取器位置在 <see cref="T:System.Xaml.XamlMember" /> 上，则获取位于读取器位置的当前 <see cref="F:System.Xaml.XamlNodeType.StartMember" />。</summary>
        <value>当前成员；如果读取器位置不在成员上，则为 <see langword="null" />。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Namespace">
      <MemberSignature Language="C#" Value="public override System.Xaml.NamespaceDeclaration Namespace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.NamespaceDeclaration Namespace" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlObjectReader.Namespace" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Namespace As NamespaceDeclaration" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xaml::NamespaceDeclaration ^ Namespace { System::Xaml::NamespaceDeclaration ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Namespace : System.Xaml.NamespaceDeclaration" Usage="System.Xaml.XamlObjectReader.Namespace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.NamespaceDeclaration</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>从当前读取器位置中获取 XAML 命名空间声明。</summary>
        <value>如果读取器位于 <see cref="F:System.Xaml.XamlNodeType.NamespaceDeclaration" /> 上，则为 XAML 命名空间声明；否则为 <see langword="null" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 仅当 <xref:System.Xaml.XamlObjectReader.NodeType%2A> 当前读取器位置的属性为时，此属性才返回非 null 结果 <xref:System.Xaml.XamlNodeType.NamespaceDeclaration> 。 它不会根据其他节点类型的上下文（如该命名空间中的对象）推断命名空间。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NodeType">
      <MemberSignature Language="C#" Value="public override System.Xaml.XamlNodeType NodeType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xaml.XamlNodeType NodeType" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlObjectReader.NodeType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property NodeType As XamlNodeType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xaml::XamlNodeType NodeType { System::Xaml::XamlNodeType get(); };" />
      <MemberSignature Language="F#" Value="member this.NodeType : System.Xaml.XamlNodeType" Usage="System.Xaml.XamlObjectReader.NodeType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlNodeType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取当前节点的类型。</summary>
        <value>当前节点的类型。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用 api 时 <xref:System.Xaml.XamlObjectReader> ，通常在 <xref:System.Xaml.XamlObjectReader.NodeType%2A> 每个可能提升读取器位置的操作之后（如 <xref:System.Xaml.XamlObjectReader.Read%2A> 、或方法）检查属性 <xref:System.Xaml.XamlReader.ReadSubtree%2A> <xref:System.Xaml.XamlReader.Skip%2A> 。 <xref:System.Xaml.XamlObjectReader.NodeType%2A> 指示你可以从当前读取器位置获取的信息，以及你接下来调用的方法。 例如，你可能会访问 <xref:System.Xaml.XamlObjectReader.Member%2A> 、 <xref:System.Xaml.XamlObjectReader.Type%2A> 、 <xref:System.Xaml.XamlObjectReader.Value%2A> 或 <xref:System.Xaml.XamlObjectReader.Instance%2A> 属性; 或者， <xref:System.Xaml.XamlReader.Skip%2A> 如果你对当前节点类型的内容不感兴趣，则可以调用方法。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public override bool Read ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Read() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlObjectReader.Read" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Read () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Read();" />
      <MemberSignature Language="F#" Value="override this.Read : unit -&gt; bool" Usage="xamlObjectReader.Read " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>提供源对象图中的下一个 XAML 节点（如果节点可用）。</summary>
        <returns>如果某节点可用，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 调用 <xref:System.Xaml.XamlObjectReader.Read%2A> 方法并获取 `true` 结果后，通常会访问节点属性。 根据 <xref:System.Xaml.XamlObjectReader.NodeType%2A> 属性，可以访问 <xref:System.Xaml.XamlObjectReader.Member%2A> 、 <xref:System.Xaml.XamlObjectReader.Type%2A> 、 <xref:System.Xaml.XamlObjectReader.Value%2A> 或 <xref:System.Xaml.XamlObjectReader.Instance%2A> 属性。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SchemaContext">
      <MemberSignature Language="C#" Value="public override System.Xaml.XamlSchemaContext SchemaContext { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.XamlSchemaContext SchemaContext" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlObjectReader.SchemaContext" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property SchemaContext As XamlSchemaContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xaml::XamlSchemaContext ^ SchemaContext { System::Xaml::XamlSchemaContext ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SchemaContext : System.Xaml.XamlSchemaContext" Usage="System.Xaml.XamlObjectReader.SchemaContext" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlSchemaContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个对象，该对象提供信息集的架构信息。</summary>
        <value>一个对象，该对象提供信息集的架构信息。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 架构上下文是一般意义上的架构之间的概念中介，并通过特定 XAML 处理器处理 XAML 架构概念， (分析、读取和写入) 的操作。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public override System.Xaml.XamlType Type { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.XamlType Type" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlObjectReader.Type" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Type As XamlType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xaml::XamlType ^ Type { System::Xaml::XamlType ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Type : System.Xaml.XamlType" Usage="System.Xaml.XamlObjectReader.Type" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取位于当前读取器位置的对象的 <see cref="T:System.Xaml.XamlType" />。</summary>
        <value>位于当前读取器位置的对象的 <see cref="T:System.Xaml.XamlType" />；如果位置不在对象上，则为 <see langword="null" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 仅当 <xref:System.Xaml.XamlObjectReader.NodeType%2A> 当前读取器位置的属性为时，此属性才返回非 null 结果 <xref:System.Xaml.XamlNodeType.StartObject> 。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public override object Value { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Value" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlObjectReader.Value" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Value As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ Value { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Value : obj" Usage="System.Xaml.XamlObjectReader.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取位于当前读取器位置的节点的值。</summary>
        <value>当前节点的值；如果读取器位置不在 <see cref="F:System.Xaml.XamlNodeType.Value" /> 节点类型上，则为 <see langword="null" />。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
