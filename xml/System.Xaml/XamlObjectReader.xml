<Type Name="XamlObjectReader" FullName="System.Xaml.XamlObjectReader">
  <Metadata><Meta Name="ms.openlocfilehash" Value="8bc7f8d7343711e3b1a4f818c88174069bdf2337" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89987428" /></Metadata><TypeSignature Language="C#" Value="public class XamlObjectReader : System.Xaml.XamlReader" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XamlObjectReader extends System.Xaml.XamlReader" />
  <TypeSignature Language="DocId" Value="T:System.Xaml.XamlObjectReader" />
  <TypeSignature Language="VB.NET" Value="Public Class XamlObjectReader&#xA;Inherits XamlReader" />
  <TypeSignature Language="C++ CLI" Value="public ref class XamlObjectReader : System::Xaml::XamlReader" />
  <TypeSignature Language="F#" Value="type XamlObjectReader = class&#xA;    inherit XamlReader" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Xaml.XamlReader</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="6c9ff-101">提供一个 <see cref="T:System.Xaml.XamlReader" /> 实现，该实现读取对象图并生成 XAML 节点流。</span><span class="sxs-lookup"><span data-stu-id="6c9ff-101">Provides a <see cref="T:System.Xaml.XamlReader" /> implementation that reads object graphs and generates a XAML node stream.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6c9ff-102"><xref:System.Xaml.XamlObjectReader>如果要处理对象图（通常是最初从 XAML 源生成的应用程序的对象图），请在中使用。</span><span class="sxs-lookup"><span data-stu-id="6c9ff-102">Use the <xref:System.Xaml.XamlObjectReader> in scenarios where you want to process an object graph, which is typically the object graph of an application that is originally generated from a XAML source.</span></span> <span data-ttu-id="6c9ff-103">您可以使用 <xref:System.Xaml.XamlObjectReader> 从 xaml 开始点到 xaml 终结点进行往返的位置。</span><span class="sxs-lookup"><span data-stu-id="6c9ff-103">You might use the <xref:System.Xaml.XamlObjectReader> where a round trip is made from a XAML start point to a XAML end point.</span></span> <span data-ttu-id="6c9ff-104">或者，你可以通过 <xref:System.Xaml.XamlObjectReader> 对象图运行; 如果需要，可使用和上的 api 来处理中间 XAML 节点流; 然后 <xref:System.Xaml.XamlType> <xref:System.Xaml.XamlMember> 使用 <xref:System.Xaml.XamlXmlWriter> 将 XAML 节点序列化为 XML。</span><span class="sxs-lookup"><span data-stu-id="6c9ff-104">Or you might run a <xref:System.Xaml.XamlObjectReader> over the object graph; process the intermediate XAML node stream, if it is required, by using APIs on <xref:System.Xaml.XamlType> and <xref:System.Xaml.XamlMember>; and then use <xref:System.Xaml.XamlXmlWriter> to serialize XAML nodes to XML.</span></span>  
  
 <span data-ttu-id="6c9ff-105">更高级的方案可能会提供 <xref:System.Xaml.XamlXmlWriter> 重写和特定 XAML 架构上下文，该上下文是 <xref:System.Xaml.XamlObjectReader> 使用的，然后传递到编写器替代。</span><span class="sxs-lookup"><span data-stu-id="6c9ff-105">More advanced scenarios might supply a <xref:System.Xaml.XamlXmlWriter> override and a specific XAML schema context that the <xref:System.Xaml.XamlObjectReader> uses and then passes to the writer override.</span></span>  
  
 <span data-ttu-id="6c9ff-106">使用 <xref:System.Xaml.XamlObjectReader> 调用实现的成员的典型方案 <xref:System.Xaml.XamlObjectReader> ; 它们还 <xref:System.Xaml.XamlReader.Close%2A> <xref:System.Xaml.XamlReader.ReadSubtree%2A> 从基类调用、和 <xref:System.Xaml.XamlReader.Skip%2A> <xref:System.Xaml.XamlReader> 。</span><span class="sxs-lookup"><span data-stu-id="6c9ff-106">Typical scenarios for using <xref:System.Xaml.XamlObjectReader> call the members that <xref:System.Xaml.XamlObjectReader> implements; they also call <xref:System.Xaml.XamlReader.Close%2A>, <xref:System.Xaml.XamlReader.ReadSubtree%2A>, and <xref:System.Xaml.XamlReader.Skip%2A> from the <xref:System.Xaml.XamlReader> base class.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="6c9ff-107">初始化 <see cref="T:System.Xaml.XamlObjectReader" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="6c9ff-107">Initializes a new instance of the <see cref="T:System.Xaml.XamlObjectReader" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlObjectReader (object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlObjectReader.#ctor(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (instance As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlObjectReader(System::Object ^ instance);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlObjectReader : obj -&gt; System.Xaml.XamlObjectReader" Usage="new System.Xaml.XamlObjectReader instance" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instance"><span data-ttu-id="6c9ff-108">要读取的对象树/对象图的根。</span><span class="sxs-lookup"><span data-stu-id="6c9ff-108">The root of the object tree / object graph to read.</span></span></param>
        <summary><span data-ttu-id="6c9ff-109">初始化 <see cref="T:System.Xaml.XamlObjectReader" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="6c9ff-109">Initializes a new instance of the <see cref="T:System.Xaml.XamlObjectReader" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6c9ff-110">如果使用此构造函数进行初始化，则 <xref:System.Xaml.XamlObjectReader> 对象具有默认 <xref:System.Xaml.XamlObjectReaderSettings> 对象和默认的初始上下文的初始设置 <xref:System.Xaml.XamlSchemaContext> 。</span><span class="sxs-lookup"><span data-stu-id="6c9ff-110">If initialized with this constructor, the <xref:System.Xaml.XamlObjectReader> object has the initial settings of a default <xref:System.Xaml.XamlObjectReaderSettings> object and the initial context of a default <xref:System.Xaml.XamlSchemaContext>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlObjectReader (object instance, System.Xaml.XamlObjectReaderSettings settings);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object instance, class System.Xaml.XamlObjectReaderSettings settings) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlObjectReader.#ctor(System.Object,System.Xaml.XamlObjectReaderSettings)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (instance As Object, settings As XamlObjectReaderSettings)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlObjectReader(System::Object ^ instance, System::Xaml::XamlObjectReaderSettings ^ settings);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlObjectReader : obj * System.Xaml.XamlObjectReaderSettings -&gt; System.Xaml.XamlObjectReader" Usage="new System.Xaml.XamlObjectReader (instance, settings)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="settings" Type="System.Xaml.XamlObjectReaderSettings" />
      </Parameters>
      <Docs>
        <param name="instance"><span data-ttu-id="6c9ff-111">要读取的对象树的根。</span><span class="sxs-lookup"><span data-stu-id="6c9ff-111">The root of the object tree to read.</span></span></param>
        <param name="settings"><span data-ttu-id="6c9ff-112">一个设置对象。</span><span class="sxs-lookup"><span data-stu-id="6c9ff-112">A settings object.</span></span></param>
        <summary><span data-ttu-id="6c9ff-113">使用指定的读取器设置初始化 <see cref="T:System.Xaml.XamlObjectReader" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="6c9ff-113">Initializes a new instance of the <see cref="T:System.Xaml.XamlObjectReader" /> class with the specified reader settings.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6c9ff-114">Settings 对象指定读取器操作的规则，例如行号处理、错误处理行为，等等。</span><span class="sxs-lookup"><span data-stu-id="6c9ff-114">The settings object specifies rules for reader operations, such as line number processing, error handling behavior, and so on.</span></span> <span data-ttu-id="6c9ff-115">有关详细信息，请参阅 <xref:System.Xaml.XamlObjectReaderSettings>。</span><span class="sxs-lookup"><span data-stu-id="6c9ff-115">For more information, see <xref:System.Xaml.XamlObjectReaderSettings>.</span></span>  
  
 <span data-ttu-id="6c9ff-116">如果使用此构造函数进行初始化，则 <xref:System.Xaml.XamlObjectReader> 对象的初始上下文为默认 <xref:System.Xaml.XamlSchemaContext> 值。</span><span class="sxs-lookup"><span data-stu-id="6c9ff-116">If initialized with this constructor, the <xref:System.Xaml.XamlObjectReader> object has the initial context of a default <xref:System.Xaml.XamlSchemaContext>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlObjectReader (object instance, System.Xaml.XamlSchemaContext schemaContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object instance, class System.Xaml.XamlSchemaContext schemaContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlObjectReader.#ctor(System.Object,System.Xaml.XamlSchemaContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (instance As Object, schemaContext As XamlSchemaContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlObjectReader(System::Object ^ instance, System::Xaml::XamlSchemaContext ^ schemaContext);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlObjectReader : obj * System.Xaml.XamlSchemaContext -&gt; System.Xaml.XamlObjectReader" Usage="new System.Xaml.XamlObjectReader (instance, schemaContext)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="schemaContext" Type="System.Xaml.XamlSchemaContext" />
      </Parameters>
      <Docs>
        <param name="instance"><span data-ttu-id="6c9ff-117">要读取的对象树的根。</span><span class="sxs-lookup"><span data-stu-id="6c9ff-117">The root of the object tree to read.</span></span></param>
        <param name="schemaContext"><span data-ttu-id="6c9ff-118">要使用的读取器的架构上下文。</span><span class="sxs-lookup"><span data-stu-id="6c9ff-118">The schema context for the reader to use.</span></span></param>
        <summary><span data-ttu-id="6c9ff-119">使用指定的架构上下文初始化 <see cref="T:System.Xaml.XamlObjectReader" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="6c9ff-119">Initializes a new instance of the <see cref="T:System.Xaml.XamlObjectReader" /> class with the specified schema context.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6c9ff-120">如果使用此构造函数进行初始化，则 <xref:System.Xaml.XamlObjectReader> 对象具有默认对象的初始设置 <xref:System.Xaml.XamlObjectReaderSettings> 。</span><span class="sxs-lookup"><span data-stu-id="6c9ff-120">If initialized with this constructor, the <xref:System.Xaml.XamlObjectReader> object has the initial settings of a default <xref:System.Xaml.XamlObjectReaderSettings> object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="6c9ff-121"><paramref name="schemaContext" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="6c9ff-121"><paramref name="schemaContext" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlObjectReader (object instance, System.Xaml.XamlSchemaContext schemaContext, System.Xaml.XamlObjectReaderSettings settings);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object instance, class System.Xaml.XamlSchemaContext schemaContext, class System.Xaml.XamlObjectReaderSettings settings) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlObjectReader.#ctor(System.Object,System.Xaml.XamlSchemaContext,System.Xaml.XamlObjectReaderSettings)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (instance As Object, schemaContext As XamlSchemaContext, settings As XamlObjectReaderSettings)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlObjectReader(System::Object ^ instance, System::Xaml::XamlSchemaContext ^ schemaContext, System::Xaml::XamlObjectReaderSettings ^ settings);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlObjectReader : obj * System.Xaml.XamlSchemaContext * System.Xaml.XamlObjectReaderSettings -&gt; System.Xaml.XamlObjectReader" Usage="new System.Xaml.XamlObjectReader (instance, schemaContext, settings)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="schemaContext" Type="System.Xaml.XamlSchemaContext" />
        <Parameter Name="settings" Type="System.Xaml.XamlObjectReaderSettings" />
      </Parameters>
      <Docs>
        <param name="instance"><span data-ttu-id="6c9ff-122">要读取的对象树的根。</span><span class="sxs-lookup"><span data-stu-id="6c9ff-122">The root of the object tree to read.</span></span></param>
        <param name="schemaContext"><span data-ttu-id="6c9ff-123">要使用的读取器的架构上下文。</span><span class="sxs-lookup"><span data-stu-id="6c9ff-123">The schema context for the reader to use.</span></span></param>
        <param name="settings"><span data-ttu-id="6c9ff-124">一个设置对象。</span><span class="sxs-lookup"><span data-stu-id="6c9ff-124">A settings object.</span></span></param>
        <summary><span data-ttu-id="6c9ff-125">使用指定的架构上下文和读取器设置初始化 <see cref="T:System.Xaml.XamlObjectReader" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="6c9ff-125">Initializes a new instance of the <see cref="T:System.Xaml.XamlObjectReader" /> class with the specified schema context and reader settings.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6c9ff-126">Settings 对象指定读取器操作的规则，例如行号处理和错误处理行为。</span><span class="sxs-lookup"><span data-stu-id="6c9ff-126">The settings object specifies rules for reader operations, such as line number processing and error handling behavior.</span></span> <span data-ttu-id="6c9ff-127">有关详细信息，请参阅 <xref:System.Xaml.XamlObjectReaderSettings>。</span><span class="sxs-lookup"><span data-stu-id="6c9ff-127">For more information, see <xref:System.Xaml.XamlObjectReaderSettings>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="6c9ff-128"><paramref name="schemaContext" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="6c9ff-128"><paramref name="schemaContext" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Instance">
      <MemberSignature Language="C#" Value="public virtual object Instance { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Instance" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlObjectReader.Instance" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Instance As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ Instance { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Instance : obj" Usage="System.Xaml.XamlObjectReader.Instance" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6c9ff-129">获取在当前读取器位置可用的对象实例。</span><span class="sxs-lookup"><span data-stu-id="6c9ff-129">Gets the object instance that is available at the current reader position.</span></span></summary>
        <value><span data-ttu-id="6c9ff-130">位于当前读取器位置的对象实例；如果读取器位置不在对象上，则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="6c9ff-130">The object instance at the current reader position; or <see langword="null" /> if the reader position is not on an object.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEof">
      <MemberSignature Language="C#" Value="public override bool IsEof { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEof" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlObjectReader.IsEof" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsEof As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsEof { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsEof : bool" Usage="System.Xaml.XamlObjectReader.IsEof" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6c9ff-131">获取一个值，该值报告读取器位置是否位于文件结尾。</span><span class="sxs-lookup"><span data-stu-id="6c9ff-131">Gets a value that reports whether the reader position is at the end of the file.</span></span></summary>
        <value><span data-ttu-id="6c9ff-132">如果读取器位置位于文件结尾，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="6c9ff-132"><see langword="true" /> if the reader position is at the end of the file; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Member">
      <MemberSignature Language="C#" Value="public override System.Xaml.XamlMember Member { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.XamlMember Member" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlObjectReader.Member" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Member As XamlMember" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xaml::XamlMember ^ Member { System::Xaml::XamlMember ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Member : System.Xaml.XamlMember" Usage="System.Xaml.XamlObjectReader.Member" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlMember</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6c9ff-133">如果读取器位置在 <see cref="T:System.Xaml.XamlMember" /> 上，则获取位于读取器位置的当前 <see cref="F:System.Xaml.XamlNodeType.StartMember" />。</span><span class="sxs-lookup"><span data-stu-id="6c9ff-133">Gets the current <see cref="T:System.Xaml.XamlMember" /> at the reader position, if the reader position is on a <see cref="F:System.Xaml.XamlNodeType.StartMember" />.</span></span></summary>
        <value><span data-ttu-id="6c9ff-134">当前成员；如果读取器位置不在成员上，则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="6c9ff-134">The current member; or <see langword="null" /> if the reader position is not on a member.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Namespace">
      <MemberSignature Language="C#" Value="public override System.Xaml.NamespaceDeclaration Namespace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.NamespaceDeclaration Namespace" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlObjectReader.Namespace" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Namespace As NamespaceDeclaration" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xaml::NamespaceDeclaration ^ Namespace { System::Xaml::NamespaceDeclaration ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Namespace : System.Xaml.NamespaceDeclaration" Usage="System.Xaml.XamlObjectReader.Namespace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.NamespaceDeclaration</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6c9ff-135">从当前读取器位置中获取 XAML 命名空间声明。</span><span class="sxs-lookup"><span data-stu-id="6c9ff-135">Gets the XAML namespace declaration from the current reader position.</span></span></summary>
        <value><span data-ttu-id="6c9ff-136">如果读取器位于 <see cref="F:System.Xaml.XamlNodeType.NamespaceDeclaration" /> 上，则为 XAML 命名空间声明；否则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="6c9ff-136">The XAML namespace declaration if the reader is positioned on a <see cref="F:System.Xaml.XamlNodeType.NamespaceDeclaration" />; otherwise, <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6c9ff-137">仅当 <xref:System.Xaml.XamlObjectReader.NodeType%2A> 当前读取器位置的属性为时，此属性才返回非 null 结果 <xref:System.Xaml.XamlNodeType.NamespaceDeclaration> 。</span><span class="sxs-lookup"><span data-stu-id="6c9ff-137">This property returns a non-null result only if the <xref:System.Xaml.XamlObjectReader.NodeType%2A> property of the current reader position is <xref:System.Xaml.XamlNodeType.NamespaceDeclaration>.</span></span> <span data-ttu-id="6c9ff-138">它不会根据其他节点类型的上下文（如该命名空间中的对象）推断命名空间。</span><span class="sxs-lookup"><span data-stu-id="6c9ff-138">It does not infer a namespace that is based on the context of other node types, such as an object in that namespace.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NodeType">
      <MemberSignature Language="C#" Value="public override System.Xaml.XamlNodeType NodeType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xaml.XamlNodeType NodeType" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlObjectReader.NodeType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property NodeType As XamlNodeType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xaml::XamlNodeType NodeType { System::Xaml::XamlNodeType get(); };" />
      <MemberSignature Language="F#" Value="member this.NodeType : System.Xaml.XamlNodeType" Usage="System.Xaml.XamlObjectReader.NodeType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlNodeType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6c9ff-139">获取当前节点的类型。</span><span class="sxs-lookup"><span data-stu-id="6c9ff-139">Gets the type of the current node.</span></span></summary>
        <value><span data-ttu-id="6c9ff-140">当前节点的类型。</span><span class="sxs-lookup"><span data-stu-id="6c9ff-140">The type of the current node.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6c9ff-141">使用 api 时 <xref:System.Xaml.XamlObjectReader> ，通常在 <xref:System.Xaml.XamlObjectReader.NodeType%2A> 每个可能提升读取器位置的操作之后（如 <xref:System.Xaml.XamlObjectReader.Read%2A> 、或方法）检查属性 <xref:System.Xaml.XamlReader.ReadSubtree%2A> <xref:System.Xaml.XamlReader.Skip%2A> 。</span><span class="sxs-lookup"><span data-stu-id="6c9ff-141">When using the <xref:System.Xaml.XamlObjectReader> APIs, you typically check the <xref:System.Xaml.XamlObjectReader.NodeType%2A> property after every operation that potentially advances the reader position, such as the <xref:System.Xaml.XamlObjectReader.Read%2A>, <xref:System.Xaml.XamlReader.ReadSubtree%2A>, or <xref:System.Xaml.XamlReader.Skip%2A> methods.</span></span> <span data-ttu-id="6c9ff-142"><xref:System.Xaml.XamlObjectReader.NodeType%2A> 指示你可以从当前读取器位置获取的信息，以及你接下来调用的方法。</span><span class="sxs-lookup"><span data-stu-id="6c9ff-142"><xref:System.Xaml.XamlObjectReader.NodeType%2A> indicates the information that you can obtain from the current reader position and the methods that you call next.</span></span> <span data-ttu-id="6c9ff-143">例如，你可能会访问 <xref:System.Xaml.XamlObjectReader.Member%2A> 、 <xref:System.Xaml.XamlObjectReader.Type%2A> 、 <xref:System.Xaml.XamlObjectReader.Value%2A> 或 <xref:System.Xaml.XamlObjectReader.Instance%2A> 属性; 或者， <xref:System.Xaml.XamlReader.Skip%2A> 如果你对当前节点类型的内容不感兴趣，则可以调用方法。</span><span class="sxs-lookup"><span data-stu-id="6c9ff-143">For example, you might access the <xref:System.Xaml.XamlObjectReader.Member%2A>, <xref:System.Xaml.XamlObjectReader.Type%2A>, <xref:System.Xaml.XamlObjectReader.Value%2A>, or <xref:System.Xaml.XamlObjectReader.Instance%2A> properties; or you might call the <xref:System.Xaml.XamlReader.Skip%2A> method if you are not interested in the contents of the current node type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public override bool Read ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Read() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlObjectReader.Read" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Read () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Read();" />
      <MemberSignature Language="F#" Value="override this.Read : unit -&gt; bool" Usage="xamlObjectReader.Read " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6c9ff-144">提供源对象图中的下一个 XAML 节点（如果节点可用）。</span><span class="sxs-lookup"><span data-stu-id="6c9ff-144">Provides the next XAML node from the source object graph, if a node is available.</span></span></summary>
        <returns><span data-ttu-id="6c9ff-145">如果某节点可用，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="6c9ff-145"><see langword="true" /> if a node is available; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6c9ff-146">调用 <xref:System.Xaml.XamlObjectReader.Read%2A> 方法并获取 `true` 结果后，通常会访问节点属性。</span><span class="sxs-lookup"><span data-stu-id="6c9ff-146">After you call the <xref:System.Xaml.XamlObjectReader.Read%2A> method and obtain a `true` result, you typically access the node properties.</span></span> <span data-ttu-id="6c9ff-147">根据 <xref:System.Xaml.XamlObjectReader.NodeType%2A> 属性，可以访问 <xref:System.Xaml.XamlObjectReader.Member%2A> 、 <xref:System.Xaml.XamlObjectReader.Type%2A> 、 <xref:System.Xaml.XamlObjectReader.Value%2A> 或 <xref:System.Xaml.XamlObjectReader.Instance%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="6c9ff-147">Depending on the <xref:System.Xaml.XamlObjectReader.NodeType%2A> property, you can access the <xref:System.Xaml.XamlObjectReader.Member%2A>, <xref:System.Xaml.XamlObjectReader.Type%2A>, <xref:System.Xaml.XamlObjectReader.Value%2A>, or <xref:System.Xaml.XamlObjectReader.Instance%2A> properties.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SchemaContext">
      <MemberSignature Language="C#" Value="public override System.Xaml.XamlSchemaContext SchemaContext { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.XamlSchemaContext SchemaContext" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlObjectReader.SchemaContext" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property SchemaContext As XamlSchemaContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xaml::XamlSchemaContext ^ SchemaContext { System::Xaml::XamlSchemaContext ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SchemaContext : System.Xaml.XamlSchemaContext" Usage="System.Xaml.XamlObjectReader.SchemaContext" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlSchemaContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6c9ff-148">获取一个对象，该对象提供信息集的架构信息。</span><span class="sxs-lookup"><span data-stu-id="6c9ff-148">Gets an object that provides schema information for the information set.</span></span></summary>
        <value><span data-ttu-id="6c9ff-149">一个对象，该对象提供信息集的架构信息。</span><span class="sxs-lookup"><span data-stu-id="6c9ff-149">An object that provides schema information for the information set.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6c9ff-150">架构上下文是一般意义上的架构之间的概念中介，并通过特定 XAML 处理器处理 XAML 架构概念， (分析、读取和写入) 的操作。</span><span class="sxs-lookup"><span data-stu-id="6c9ff-150">The schema context is a conceptual intermediary between a schema in the conventional sense, and the handling of XAML schema concepts by particular XAML processors (parsing, reading, and writing operations).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public override System.Xaml.XamlType Type { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.XamlType Type" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlObjectReader.Type" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Type As XamlType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xaml::XamlType ^ Type { System::Xaml::XamlType ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Type : System.Xaml.XamlType" Usage="System.Xaml.XamlObjectReader.Type" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6c9ff-151">获取位于当前读取器位置的对象的 <see cref="T:System.Xaml.XamlType" />。</span><span class="sxs-lookup"><span data-stu-id="6c9ff-151">Gets the <see cref="T:System.Xaml.XamlType" /> of the object at the current reader position.</span></span></summary>
        <value><span data-ttu-id="6c9ff-152">位于当前读取器位置的对象的 <see cref="T:System.Xaml.XamlType" />；如果位置不在对象上，则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="6c9ff-152">The <see cref="T:System.Xaml.XamlType" /> of the object at the current reader position; or <see langword="null" /> if the position is not on an object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6c9ff-153">仅当 <xref:System.Xaml.XamlObjectReader.NodeType%2A> 当前读取器位置的属性为时，此属性才返回非 null 结果 <xref:System.Xaml.XamlNodeType.StartObject> 。</span><span class="sxs-lookup"><span data-stu-id="6c9ff-153">This property returns a non-null result only if the <xref:System.Xaml.XamlObjectReader.NodeType%2A> property of the current reader position is <xref:System.Xaml.XamlNodeType.StartObject>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public override object Value { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Value" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlObjectReader.Value" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Value As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ Value { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Value : obj" Usage="System.Xaml.XamlObjectReader.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6c9ff-154">获取位于当前读取器位置的节点的值。</span><span class="sxs-lookup"><span data-stu-id="6c9ff-154">Gets the value of the node at the current reader position.</span></span></summary>
        <value><span data-ttu-id="6c9ff-155">当前节点的值；如果读取器位置不在 <see cref="F:System.Xaml.XamlNodeType.Value" /> 节点类型上，则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="6c9ff-155">The value of the current node; or <see langword="null" />, if the reader position is not on a <see cref="F:System.Xaml.XamlNodeType.Value" /> node type.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
