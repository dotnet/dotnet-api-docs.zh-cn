<Type Name="XamlDirective" FullName="System.Xaml.XamlDirective">
  <Metadata><Meta Name="ms.openlocfilehash" Value="39ceed92ff517ac9ff4dbcd201588d055d34a687" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89686204" /></Metadata><TypeSignature Language="C#" Value="public class XamlDirective : System.Xaml.XamlMember" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XamlDirective extends System.Xaml.XamlMember" />
  <TypeSignature Language="DocId" Value="T:System.Xaml.XamlDirective" />
  <TypeSignature Language="VB.NET" Value="Public Class XamlDirective&#xA;Inherits XamlMember" />
  <TypeSignature Language="C++ CLI" Value="public ref class XamlDirective : System::Xaml::XamlMember" />
  <TypeSignature Language="F#" Value="type XamlDirective = class&#xA;    inherit XamlMember" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Xaml.XamlMember</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="0f490-101">在成员兼作 XAML 指令时为成员提供 XAML 类型系统标识符。</span><span class="sxs-lookup"><span data-stu-id="0f490-101">Provides the XAML type system identifier for a member if the member is also a XAML directive.</span></span> <span data-ttu-id="0f490-102">在处理成员节点的过程中，XAML 读取器和 XAML 编写器使用 <see cref="T:System.Xaml.XamlDirective" /> 标识符。</span><span class="sxs-lookup"><span data-stu-id="0f490-102">XAML readers and XAML writers use the <see cref="T:System.Xaml.XamlDirective" /> identifier during processing of member nodes.</span></span> <span data-ttu-id="0f490-103">如果读取器位于 <see cref="F:System.Xaml.XamlNodeType.StartMember" /> 上，而且 <see cref="P:System.Xaml.XamlMember.IsDirective" /> 为 <see langword="true" />，则使用此标识符。</span><span class="sxs-lookup"><span data-stu-id="0f490-103">The identifier is used when the XAML reader is positioned on a <see cref="F:System.Xaml.XamlNodeType.StartMember" /> and <see cref="P:System.Xaml.XamlMember.IsDirective" /> is <see langword="true" />.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f490-104"><xref:System.Xaml.XamlDirective> 当成员为 XAML 指令时，为 XAML 类型系统提供所需的值。</span><span class="sxs-lookup"><span data-stu-id="0f490-104"><xref:System.Xaml.XamlDirective> provides expected values for the XAML type system when the member is a XAML directive.</span></span> <span data-ttu-id="0f490-105">按照定义，XAML 指令具有的特性始终为属性的子集返回相同的结果 <xref:System.Xaml.XamlMember> ，并且为所有可能的 xaml 指令报告相同的 xaml 类型系统信息。</span><span class="sxs-lookup"><span data-stu-id="0f490-105">By definition, a XAML directive has characteristics that always return the same results for a subset of the <xref:System.Xaml.XamlMember> properties, and the same XAML type system information is reported for all possible XAML directives.</span></span> <span data-ttu-id="0f490-106">特定于指令的 XAML 类型系统特征的报告是通过内部行为或通过 <xref:System.Xaml.XamlMember> `Lookup*` 类中虚拟成员的重写来实现的 <xref:System.Xaml.XamlDirective> 。</span><span class="sxs-lookup"><span data-stu-id="0f490-106">The reporting of XAML type system characteristics that are specific to directives is accomplished by internal behavior or through overrides of <xref:System.Xaml.XamlMember> `Lookup*` virtual members in the <xref:System.Xaml.XamlDirective> class.</span></span>  
  
 <span data-ttu-id="0f490-107">下面的列表显示了当成员实际上为时的 XAML 指令返回的结果 <xref:System.Xaml.XamlMember> <xref:System.Xaml.XamlDirective> ：</span><span class="sxs-lookup"><span data-stu-id="0f490-107">The following list shows the returned results of a XAML directive for <xref:System.Xaml.XamlMember> when the member is actually a <xref:System.Xaml.XamlDirective>:</span></span>  
  
-   <span data-ttu-id="0f490-108"><xref:System.Xaml.XamlMember.LookupCustomAttributeProvider%2A> 始终为 `null` 。</span><span class="sxs-lookup"><span data-stu-id="0f490-108"><xref:System.Xaml.XamlMember.LookupCustomAttributeProvider%2A> is always `null`.</span></span>  
  
-   <span data-ttu-id="0f490-109"><xref:System.Xaml.XamlMember.DeferringLoader%2A> 始终为 `null` 。</span><span class="sxs-lookup"><span data-stu-id="0f490-109"><xref:System.Xaml.XamlMember.DeferringLoader%2A> is always `null`.</span></span>  
  
-   <span data-ttu-id="0f490-110"><xref:System.Xaml.XamlMember.DependsOn%2A> 始终为 `null` 。</span><span class="sxs-lookup"><span data-stu-id="0f490-110"><xref:System.Xaml.XamlMember.DependsOn%2A> is always `null`.</span></span>  
  
-   <span data-ttu-id="0f490-111"><xref:System.Xaml.XamlMember.IsAmbient%2A> 始终为 `false` 。</span><span class="sxs-lookup"><span data-stu-id="0f490-111"><xref:System.Xaml.XamlMember.IsAmbient%2A> is always `false`.</span></span>  
  
-   <span data-ttu-id="0f490-112"><xref:System.Xaml.XamlMember.IsAttachable%2A> 始终为 `false` 。</span><span class="sxs-lookup"><span data-stu-id="0f490-112"><xref:System.Xaml.XamlMember.IsAttachable%2A> is always `false`.</span></span>  
  
-   <span data-ttu-id="0f490-113"><xref:System.Xaml.XamlMember.IsDirective%2A> 始终为 `true` 。</span><span class="sxs-lookup"><span data-stu-id="0f490-113"><xref:System.Xaml.XamlMember.IsDirective%2A> is always `true`.</span></span>  
  
-   <span data-ttu-id="0f490-114"><xref:System.Xaml.XamlMember.IsEvent%2A> 始终为 `false` 。</span><span class="sxs-lookup"><span data-stu-id="0f490-114"><xref:System.Xaml.XamlMember.IsEvent%2A> is always `false`.</span></span>  
  
-   <span data-ttu-id="0f490-115"><xref:System.Xaml.XamlMember.IsReadOnly%2A> 始终为 `false` 。</span><span class="sxs-lookup"><span data-stu-id="0f490-115"><xref:System.Xaml.XamlMember.IsReadOnly%2A> is always `false`.</span></span>  
  
-   <span data-ttu-id="0f490-116"><xref:System.Xaml.XamlMember.IsReadPublic%2A> 始终为 `true` 。</span><span class="sxs-lookup"><span data-stu-id="0f490-116"><xref:System.Xaml.XamlMember.IsReadPublic%2A> is always `true`.</span></span>  
  
-   <span data-ttu-id="0f490-117"><xref:System.Xaml.XamlMember.IsWritePublic%2A> 始终为 `true` 。</span><span class="sxs-lookup"><span data-stu-id="0f490-117"><xref:System.Xaml.XamlMember.IsWritePublic%2A> is always `true`.</span></span>  
  
 <span data-ttu-id="0f490-118">此外，的内部后备 <xref:System.Xaml.XamlMember.DeclaringType%2A> 仍保持不变，并返回 `null` 。</span><span class="sxs-lookup"><span data-stu-id="0f490-118">Also, the internal backing for <xref:System.Xaml.XamlMember.DeclaringType%2A> remains unset and returns `null`.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="0f490-119"><xref:System.Xaml.XamlDirective> 是一个 <xref:System.Xaml.XamlMember> 子类。</span><span class="sxs-lookup"><span data-stu-id="0f490-119"><xref:System.Xaml.XamlDirective> is a <xref:System.Xaml.XamlMember> subclass.</span></span> <span data-ttu-id="0f490-120">与一样 <xref:System.Xaml.XamlMember> ， <xref:System.Xaml.XamlDirective> 具有有关 XAML 类型系统如何报告访问的安全注意事项。</span><span class="sxs-lookup"><span data-stu-id="0f490-120">As with <xref:System.Xaml.XamlMember>, <xref:System.Xaml.XamlDirective> has security considerations regarding how the XAML type system reports access.</span></span> <span data-ttu-id="0f490-121">请参阅 <xref:System.Xaml.XamlMember>。</span><span class="sxs-lookup"><span data-stu-id="0f490-121">See <xref:System.Xaml.XamlMember>.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Xaml.XamlMember" />
    <related type="Article" href="https://msdn.microsoft.com/library/7c11abec-1075-474c-9d9b-778e5dab21c3"><span data-ttu-id="0f490-122">了解 XAML 节点流结构和概念</span><span class="sxs-lookup"><span data-stu-id="0f490-122">Understanding XAML Node Stream Structures and Concepts</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="0f490-123">初始化 <see cref="T:System.Xaml.XamlDirective" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="0f490-123">Initializes a new instance of the <see cref="T:System.Xaml.XamlDirective" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlDirective (string xamlNamespace, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string xamlNamespace, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlDirective.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (xamlNamespace As String, name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlDirective(System::String ^ xamlNamespace, System::String ^ name);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlDirective : string * string -&gt; System.Xaml.XamlDirective" Usage="new System.Xaml.XamlDirective (xamlNamespace, name)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="xamlNamespace" Type="System.String" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="xamlNamespace"><span data-ttu-id="0f490-124">主 XAML 命名空间，此 <see cref="T:System.Xaml.XamlDirective" /> 可能存在于其中。</span><span class="sxs-lookup"><span data-stu-id="0f490-124">The primary XAML namespace where this <see cref="T:System.Xaml.XamlDirective" /> can exist.</span></span></param>
        <param name="name"><span data-ttu-id="0f490-125"><see cref="T:System.Xaml.XamlDirective" /> 的标识名称。</span><span class="sxs-lookup"><span data-stu-id="0f490-125">The identifying name of the <see cref="T:System.Xaml.XamlDirective" />.</span></span></param>
        <summary><span data-ttu-id="0f490-126">初始化 <see cref="T:System.Xaml.XamlDirective" /> 类的新实例，同时为名称和单个 XAML 命名空间指定值。</span><span class="sxs-lookup"><span data-stu-id="0f490-126">Initializes a new instance of the <see cref="T:System.Xaml.XamlDirective" /> class, specifying values for a name and a single XAML namespace.</span></span> <span data-ttu-id="0f490-127">只有在您希望或预计 <see cref="P:System.Xaml.XamlMember.IsUnknown" /> 对于指令报告 <see langword="true" /> 时，才使用此签名。</span><span class="sxs-lookup"><span data-stu-id="0f490-127">Use this signature only when you want or expect <see cref="P:System.Xaml.XamlMember.IsUnknown" /> to report <see langword="true" /> for the directive.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="0f490-128">此构造函数的签名始终为 <xref:System.Xaml.XamlMember.IsUnknown%2A> XAML 类型系统的报表生成指令的标识符 `true` 。</span><span class="sxs-lookup"><span data-stu-id="0f490-128">This signature of the constructor always generates an identifier for the directive where <xref:System.Xaml.XamlMember.IsUnknown%2A> reports `true` for the XAML type system.</span></span> <span data-ttu-id="0f490-129">如果必需的信息 (支持类型和文本语法信息项进行转换) 并且需要可应用指令的标识符，则 <xref:System.Xaml.XamlDirective.%23ctor%2A?displayProperty=nameWithType> 改用构造函数签名。</span><span class="sxs-lookup"><span data-stu-id="0f490-129">If the necessary information is available (the backing type and a text syntax information item for conversion) and you want an identifier that can apply the directive, use the <xref:System.Xaml.XamlDirective.%23ctor%2A?displayProperty=nameWithType> constructor signature instead.</span></span>  
  
 <span data-ttu-id="0f490-130">如果使用此签名，则 <xref:System.Xaml.XamlDirective.AllowedLocation%2A> 实例的值为 <xref:System.Xaml.Schema.AllowedMemberLocations.Any> ; 并且 <xref:System.Xaml.XamlMember.Type%2A> 值和 <xref:System.Xaml.XamlMember.TypeConverter%2A> 值均为 `null` 。</span><span class="sxs-lookup"><span data-stu-id="0f490-130">If you use this signature, the <xref:System.Xaml.XamlDirective.AllowedLocation%2A> value for the instance is <xref:System.Xaml.Schema.AllowedMemberLocations.Any>; and the <xref:System.Xaml.XamlMember.Type%2A> value and <xref:System.Xaml.XamlMember.TypeConverter%2A> value are both `null`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlDirective (System.Collections.Generic.IEnumerable&lt;string&gt; xamlNamespaces, string name, System.Xaml.XamlType xamlType, System.Xaml.Schema.XamlValueConverter&lt;System.ComponentModel.TypeConverter&gt; typeConverter, System.Xaml.Schema.AllowedMemberLocations allowedLocation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;string&gt; xamlNamespaces, string name, class System.Xaml.XamlType xamlType, class System.Xaml.Schema.XamlValueConverter`1&lt;class System.ComponentModel.TypeConverter&gt; typeConverter, valuetype System.Xaml.Schema.AllowedMemberLocations allowedLocation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlDirective.#ctor(System.Collections.Generic.IEnumerable{System.String},System.String,System.Xaml.XamlType,System.Xaml.Schema.XamlValueConverter{System.ComponentModel.TypeConverter},System.Xaml.Schema.AllowedMemberLocations)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (xamlNamespaces As IEnumerable(Of String), name As String, xamlType As XamlType, typeConverter As XamlValueConverter(Of TypeConverter), allowedLocation As AllowedMemberLocations)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlDirective(System::Collections::Generic::IEnumerable&lt;System::String ^&gt; ^ xamlNamespaces, System::String ^ name, System::Xaml::XamlType ^ xamlType, System::Xaml::Schema::XamlValueConverter&lt;System::ComponentModel::TypeConverter ^&gt; ^ typeConverter, System::Xaml::Schema::AllowedMemberLocations allowedLocation);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlDirective : seq&lt;string&gt; * string * System.Xaml.XamlType * System.Xaml.Schema.XamlValueConverter&lt;System.ComponentModel.TypeConverter&gt; * System.Xaml.Schema.AllowedMemberLocations -&gt; System.Xaml.XamlDirective" Usage="new System.Xaml.XamlDirective (xamlNamespaces, name, xamlType, typeConverter, allowedLocation)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="xamlNamespaces" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="xamlType" Type="System.Xaml.XamlType" />
        <Parameter Name="typeConverter" Type="System.Xaml.Schema.XamlValueConverter&lt;System.ComponentModel.TypeConverter&gt;" />
        <Parameter Name="allowedLocation" Type="System.Xaml.Schema.AllowedMemberLocations" />
      </Parameters>
      <Docs>
        <param name="xamlNamespaces"><span data-ttu-id="0f490-131">此 <see cref="T:System.Xaml.XamlDirective" /> 可存在于其中的 XAML 命名空间的集合，以标识符字符串的可枚举集合的形式传递。</span><span class="sxs-lookup"><span data-stu-id="0f490-131">A set of XAML namespaces where this <see cref="T:System.Xaml.XamlDirective" /> can exist, passed as an enumerable set of the identifier strings.</span></span></param>
        <param name="name"><span data-ttu-id="0f490-132"><see cref="T:System.Xaml.XamlDirective" /> 的标识名称。</span><span class="sxs-lookup"><span data-stu-id="0f490-132">The identifying name of the <see cref="T:System.Xaml.XamlDirective" />.</span></span></param>
        <param name="xamlType"><span data-ttu-id="0f490-133">为 <see cref="T:System.Xaml.XamlDirective" /> 提供支持的 XAML 类型。</span><span class="sxs-lookup"><span data-stu-id="0f490-133">The XAML type that backs the <see cref="T:System.Xaml.XamlDirective" />.</span></span></param>
        <param name="typeConverter"><span data-ttu-id="0f490-134">此 <see cref="T:System.Xaml.XamlDirective" /> 用于文本语法转换的类型转换器。</span><span class="sxs-lookup"><span data-stu-id="0f490-134">The type converter that this <see cref="T:System.Xaml.XamlDirective" /> uses for text syntax conversion.</span></span></param>
        <param name="allowedLocation"><span data-ttu-id="0f490-135"><see cref="T:System.Xaml.Schema.AllowedMemberLocations" /> 枚举的一个值。</span><span class="sxs-lookup"><span data-stu-id="0f490-135">A value of the <see cref="T:System.Xaml.Schema.AllowedMemberLocations" /> enumeration.</span></span></param>
        <summary><span data-ttu-id="0f490-136">初始化 <see cref="T:System.Xaml.XamlDirective" /> 类的新实例，同时为 <see cref="T:System.Xaml.XamlDirective" /> 各个情况下的每个可能值指定值。</span><span class="sxs-lookup"><span data-stu-id="0f490-136">Initializes a new instance of the <see cref="T:System.Xaml.XamlDirective" /> class, specifying values for each per-case value of a <see cref="T:System.Xaml.XamlDirective" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f490-137">必须使用此构造函数生成一个 <xref:System.Xaml.XamlDirective> 不报告 <xref:System.Xaml.XamlMember.IsUnknown%2A> 为的 `true` 。</span><span class="sxs-lookup"><span data-stu-id="0f490-137">You must use this constructor to generate a <xref:System.Xaml.XamlDirective> that does not report <xref:System.Xaml.XamlMember.IsUnknown%2A> as `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="0f490-138"><paramref name="xamlType" /> 参数为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="0f490-138">The <paramref name="xamlType" /> parameter is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AllowedLocation">
      <MemberSignature Language="C#" Value="public System.Xaml.Schema.AllowedMemberLocations AllowedLocation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xaml.Schema.AllowedMemberLocations AllowedLocation" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlDirective.AllowedLocation" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AllowedLocation As AllowedMemberLocations" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::Schema::AllowedMemberLocations AllowedLocation { System::Xaml::Schema::AllowedMemberLocations get(); };" />
      <MemberSignature Language="F#" Value="member this.AllowedLocation : System.Xaml.Schema.AllowedMemberLocations" Usage="System.Xaml.XamlDirective.AllowedLocation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.AllowedMemberLocations</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0f490-139">获取一个值，该值指定可在其中指定指令的 XAML 节点类型。</span><span class="sxs-lookup"><span data-stu-id="0f490-139">Gets a value that specifies the XAML node types where the directive can be specified.</span></span></summary>
        <value><span data-ttu-id="0f490-140">枚举的一个值。</span><span class="sxs-lookup"><span data-stu-id="0f490-140">A value of the enumeration.</span></span> <span data-ttu-id="0f490-141">默认值为枚举默认值，即 <see cref="F:System.Xaml.Schema.AllowedMemberLocations.None" />。</span><span class="sxs-lookup"><span data-stu-id="0f490-141">The default is the enumeration default, which is <see cref="F:System.Xaml.Schema.AllowedMemberLocations.None" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f490-142">您可以在构造函数签名中设置此值 <xref:System.Xaml.XamlDirective.%23ctor%28System.Collections.Generic.IEnumerable%7BSystem.String%7D%2CSystem.String%2CSystem.Xaml.XamlType%2CSystem.Xaml.Schema.XamlValueConverter%7BSystem.ComponentModel.TypeConverter%7D%2CSystem.Xaml.Schema.AllowedMemberLocations%29> 。</span><span class="sxs-lookup"><span data-stu-id="0f490-142">You can set this value in the <xref:System.Xaml.XamlDirective.%23ctor%28System.Collections.Generic.IEnumerable%7BSystem.String%7D%2CSystem.String%2CSystem.Xaml.XamlType%2CSystem.Xaml.Schema.XamlValueConverter%7BSystem.ComponentModel.TypeConverter%7D%2CSystem.Xaml.Schema.AllowedMemberLocations%29> constructor signature.</span></span> <span data-ttu-id="0f490-143">如果使用 <xref:System.Xaml.XamlDirective.%23ctor%28System.String%2CSystem.String%29> 构造函数签名进行构造，则 <xref:System.Xaml.XamlDirective.AllowedLocation%2A> 实例的值为 <xref:System.Xaml.Schema.AllowedMemberLocations.Any> 。</span><span class="sxs-lookup"><span data-stu-id="0f490-143">If you construct by using the <xref:System.Xaml.XamlDirective.%23ctor%28System.String%2CSystem.String%29> constructor signature, the <xref:System.Xaml.XamlDirective.AllowedLocation%2A> value for the instance is <xref:System.Xaml.Schema.AllowedMemberLocations.Any>.</span></span> <span data-ttu-id="0f490-144">但是，实例始终将报告 <xref:System.Xaml.XamlMember.IsUnknown%2A> 为 `true` 。</span><span class="sxs-lookup"><span data-stu-id="0f490-144">However, the instance always reports <xref:System.Xaml.XamlMember.IsUnknown%2A> as `true`.</span></span> <span data-ttu-id="0f490-145">此行为通常会影响写入对象图的尝试，还会影响值的其他实际用法 <xref:System.Xaml.XamlMember> 。</span><span class="sxs-lookup"><span data-stu-id="0f490-145">This behavior typically affects attempts to write object graphs and also affects other practical uses of a <xref:System.Xaml.XamlMember> value.</span></span>  
  
 <span data-ttu-id="0f490-146">通常不会构造 XAML 指令事例，其中 <xref:System.Xaml.XamlDirective.AllowedLocation%2A> 是 <xref:System.Xaml.Schema.AllowedMemberLocations.None?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="0f490-146">You typically would not construct a XAML directive case where <xref:System.Xaml.XamlDirective.AllowedLocation%2A> is <xref:System.Xaml.Schema.AllowedMemberLocations.None?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlDirective.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="xamlDirective.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0f490-147">返回此对象的哈希代码。</span><span class="sxs-lookup"><span data-stu-id="0f490-147">Returns the hash code for this object.</span></span></summary>
        <returns><span data-ttu-id="0f490-148">整数哈希代码。</span><span class="sxs-lookup"><span data-stu-id="0f490-148">An integer hash code.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetXamlNamespaces">
      <MemberSignature Language="C#" Value="public override System.Collections.Generic.IList&lt;string&gt; GetXamlNamespaces ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Collections.Generic.IList`1&lt;string&gt; GetXamlNamespaces() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlDirective.GetXamlNamespaces" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetXamlNamespaces () As IList(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Collections::Generic::IList&lt;System::String ^&gt; ^ GetXamlNamespaces();" />
      <MemberSignature Language="F#" Value="override this.GetXamlNamespaces : unit -&gt; System.Collections.Generic.IList&lt;string&gt;" Usage="xamlDirective.GetXamlNamespaces " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0f490-149">返回 XAML 命名空间的列表，此 XAML 成员可能存在于这些命名空间中。</span><span class="sxs-lookup"><span data-stu-id="0f490-149">Returns a list of XAML namespaces where this XAML member can exist.</span></span></summary>
        <returns><span data-ttu-id="0f490-150">字符串形式的 XAML 命名空间标识符的列表。</span><span class="sxs-lookup"><span data-stu-id="0f490-150">A list of XAML namespace identifiers, as strings.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f490-151">XAML 命名空间标识符是通常根据 XAML 和 XML 命名空间的常用约定 (URI) 字符串形式出现在统一资源标识符中的字符串。</span><span class="sxs-lookup"><span data-stu-id="0f490-151">The XAML namespace identifiers are strings that typically appear in the Uniform Resource Identifier (URI) string form according to the usual conventions for XAML and XML namespaces.</span></span> <span data-ttu-id="0f490-152">如果列表包含多个项，则集合中的第一项通常是相关的主 XAML 命名空间，以便进行处理，而其他项则是备用项。</span><span class="sxs-lookup"><span data-stu-id="0f490-152">If the list contains more than one item, the first item in the set is usually the relevant primary XAML namespace for processing purposes, and the other items are alternates.</span></span> <span data-ttu-id="0f490-153"><xref:System.Xaml.XamlMember.PreferredXamlNamespace%2A?displayProperty=nameWithType> 依赖于此顺序。</span><span class="sxs-lookup"><span data-stu-id="0f490-153"><xref:System.Xaml.XamlMember.PreferredXamlNamespace%2A?displayProperty=nameWithType> relies on this ordering.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupCustomAttributeProvider">
      <MemberSignature Language="C#" Value="protected override sealed System.Reflection.ICustomAttributeProvider LookupCustomAttributeProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Reflection.ICustomAttributeProvider LookupCustomAttributeProvider() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlDirective.LookupCustomAttributeProvider" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Function LookupCustomAttributeProvider () As ICustomAttributeProvider" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Reflection::ICustomAttributeProvider ^ LookupCustomAttributeProvider();" />
      <MemberSignature Language="F#" Value="override this.LookupCustomAttributeProvider : unit -&gt; System.Reflection.ICustomAttributeProvider" Usage="xamlDirective.LookupCustomAttributeProvider " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.ICustomAttributeProvider</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0f490-154">返回 <see cref="T:System.Reflection.ICustomAttributeProvider" /> 实现。</span><span class="sxs-lookup"><span data-stu-id="0f490-154">Returns an <see cref="T:System.Reflection.ICustomAttributeProvider" /> implementation.</span></span> <span data-ttu-id="0f490-155">此实现始终返回 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="0f490-155">This implementation always returns <see langword="null" />.</span></span></summary>
        <returns><span data-ttu-id="0f490-156">始终返回 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="0f490-156">Always returns <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f490-157">由于 XAML 指令不能有自定义属性，因此此实现始终返回 `null` 。</span><span class="sxs-lookup"><span data-stu-id="0f490-157">Because a XAML directive cannot have custom attributes, this implementation always returns `null`.</span></span> <span data-ttu-id="0f490-158"><xref:System.Xaml.XamlDirective> 密封此虚拟成员;因此，所有 <xref:System.Xaml.XamlDirective> 类型和所有预定义的 XAML 指令都必须使用此行为。</span><span class="sxs-lookup"><span data-stu-id="0f490-158"><xref:System.Xaml.XamlDirective> seals this virtual member; therefore, all <xref:System.Xaml.XamlDirective> types and all predefined XAML directives must use this behavior.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupDeferringLoader">
      <MemberSignature Language="C#" Value="protected override sealed System.Xaml.Schema.XamlValueConverter&lt;System.Xaml.XamlDeferringLoader&gt; LookupDeferringLoader ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Xaml.Schema.XamlValueConverter`1&lt;class System.Xaml.XamlDeferringLoader&gt; LookupDeferringLoader() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlDirective.LookupDeferringLoader" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Function LookupDeferringLoader () As XamlValueConverter(Of XamlDeferringLoader)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Xaml::Schema::XamlValueConverter&lt;System::Xaml::XamlDeferringLoader ^&gt; ^ LookupDeferringLoader();" />
      <MemberSignature Language="F#" Value="override this.LookupDeferringLoader : unit -&gt; System.Xaml.Schema.XamlValueConverter&lt;System.Xaml.XamlDeferringLoader&gt;" Usage="xamlDirective.LookupDeferringLoader " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlValueConverter&lt;System.Xaml.XamlDeferringLoader&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0f490-159">返回一个 <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> 对象，该对象用于 XAML 声明的对象的延迟加载期间。</span><span class="sxs-lookup"><span data-stu-id="0f490-159">Returns a <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> object, which is used during deferred loading of XAML-declared objects.</span></span> <span data-ttu-id="0f490-160">此实现始终返回 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="0f490-160">This implementation always returns <see langword="null" />.</span></span></summary>
        <returns><span data-ttu-id="0f490-161">始终返回 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="0f490-161">Always returns <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f490-162">由于指令不能有延迟加载，此实现始终返回 `null` 。</span><span class="sxs-lookup"><span data-stu-id="0f490-162">Because a directive cannot have deferred loading, this implementation always returns `null`.</span></span> <span data-ttu-id="0f490-163"><xref:System.Xaml.XamlDirective> 密封此虚拟成员;因此，所有 <xref:System.Xaml.XamlDirective> 类型和所有预定义的 XAML 指令都必须使用此行为。</span><span class="sxs-lookup"><span data-stu-id="0f490-163"><xref:System.Xaml.XamlDirective> seals this virtual member; therefore, all <xref:System.Xaml.XamlDirective> types and all predefined XAML directives must use this behavior.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.DeferringLoader" />
      </Docs>
    </Member>
    <Member MemberName="LookupDependsOn">
      <MemberSignature Language="C#" Value="protected override sealed System.Collections.Generic.IList&lt;System.Xaml.XamlMember&gt; LookupDependsOn ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Collections.Generic.IList`1&lt;class System.Xaml.XamlMember&gt; LookupDependsOn() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlDirective.LookupDependsOn" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Function LookupDependsOn () As IList(Of XamlMember)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Collections::Generic::IList&lt;System::Xaml::XamlMember ^&gt; ^ LookupDependsOn();" />
      <MemberSignature Language="F#" Value="override this.LookupDependsOn : unit -&gt; System.Collections.Generic.IList&lt;System.Xaml.XamlMember&gt;" Usage="xamlDirective.LookupDependsOn " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Xaml.XamlMember&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0f490-164">返回 <see cref="T:System.Xaml.XamlMember" /> 对象的列表。</span><span class="sxs-lookup"><span data-stu-id="0f490-164">Returns a list of <see cref="T:System.Xaml.XamlMember" /> objects.</span></span> <span data-ttu-id="0f490-165">此列表报告一些成员，其中的初始化顺序依赖关系相对于此 <see cref="T:System.Xaml.XamlMember" /> 存在。</span><span class="sxs-lookup"><span data-stu-id="0f490-165">The list reports the members where dependency relationships for initialization order exist relative to this <see cref="T:System.Xaml.XamlMember" />.</span></span> <span data-ttu-id="0f490-166">此实现始终返回 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="0f490-166">This implementation always returns <see langword="null" />.</span></span></summary>
        <returns><span data-ttu-id="0f490-167">始终返回 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="0f490-167">Always returns <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f490-168">由于 XAML 指令不能有初始化顺序，此实现始终返回 `null` 。</span><span class="sxs-lookup"><span data-stu-id="0f490-168">Because a XAML directive cannot have initialization order, this implementation always returns `null`.</span></span> <span data-ttu-id="0f490-169"><xref:System.Xaml.XamlDirective> 密封此虚拟成员;因此，所有 <xref:System.Xaml.XamlDirective> 类型和所有预定义的 XAML 指令都必须使用此行为。</span><span class="sxs-lookup"><span data-stu-id="0f490-169"><xref:System.Xaml.XamlDirective> seals this virtual member; therefore, all <xref:System.Xaml.XamlDirective> types and all predefined XAML directives must use this behavior.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.DependsOn" />
      </Docs>
    </Member>
    <Member MemberName="LookupInvoker">
      <MemberSignature Language="C#" Value="protected override sealed System.Xaml.Schema.XamlMemberInvoker LookupInvoker ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Xaml.Schema.XamlMemberInvoker LookupInvoker() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlDirective.LookupInvoker" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Function LookupInvoker () As XamlMemberInvoker" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Xaml::Schema::XamlMemberInvoker ^ LookupInvoker();" />
      <MemberSignature Language="F#" Value="override this.LookupInvoker : unit -&gt; System.Xaml.Schema.XamlMemberInvoker" Usage="xamlDirective.LookupInvoker " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlMemberInvoker</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0f490-170">返回与 <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> 关联的 <see cref="T:System.Xaml.XamlDirective" />。</span><span class="sxs-lookup"><span data-stu-id="0f490-170">Returns the <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> that is associated with a <see cref="T:System.Xaml.XamlDirective" />.</span></span></summary>
        <returns><span data-ttu-id="0f490-171">此 <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> 的 <see cref="T:System.Xaml.XamlMember" /> 信息。</span><span class="sxs-lookup"><span data-stu-id="0f490-171">The <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> information for this <see cref="T:System.Xaml.XamlMember" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f490-172">可以通过调用来调用此方法 <xref:System.Xaml.XamlMember.Invoker%2A> 。</span><span class="sxs-lookup"><span data-stu-id="0f490-172">This method may be invoked by calls to <xref:System.Xaml.XamlMember.Invoker%2A>.</span></span>  
  
 <span data-ttu-id="0f490-173">此实现返回 <xref:System.Xaml.Schema.XamlMemberInvoker> 特定于 XAML 类型系统中的指令的内部静态值。</span><span class="sxs-lookup"><span data-stu-id="0f490-173">This implementation returns an internal static <xref:System.Xaml.Schema.XamlMemberInvoker> value that is specific to directives in the XAML type system.</span></span> <span data-ttu-id="0f490-174"><xref:System.Xaml.XamlDirective> 密封此虚拟成员;因此，所有 <xref:System.Xaml.XamlDirective> 类型和所有预定义的 XAML 指令都必须使用此行为。</span><span class="sxs-lookup"><span data-stu-id="0f490-174"><xref:System.Xaml.XamlDirective> seals this virtual member; therefore, all <xref:System.Xaml.XamlDirective> types and all predefined XAML directives must use this behavior.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.Invoker" />
      </Docs>
    </Member>
    <Member MemberName="LookupIsAmbient">
      <MemberSignature Language="C#" Value="protected override sealed bool LookupIsAmbient ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool LookupIsAmbient() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlDirective.LookupIsAmbient" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Function LookupIsAmbient () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool LookupIsAmbient();" />
      <MemberSignature Language="F#" Value="override this.LookupIsAmbient : unit -&gt; bool" Usage="xamlDirective.LookupIsAmbient " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0f490-175">返回的值指示是否将此 <see cref="T:System.Xaml.XamlMember" /> 作为环境属性报告。</span><span class="sxs-lookup"><span data-stu-id="0f490-175">Returns whether this <see cref="T:System.Xaml.XamlMember" /> is reported as an ambient property.</span></span></summary>
        <returns><span data-ttu-id="0f490-176">始终返回 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="0f490-176">Always returns <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f490-177">由于 XAML 指令不能是环境类型，因此此实现始终返回 `false` 。</span><span class="sxs-lookup"><span data-stu-id="0f490-177">Because a XAML directive cannot be an ambient type, this implementation always returns `false`.</span></span> <span data-ttu-id="0f490-178"><xref:System.Xaml.XamlDirective> 密封此虚拟成员;因此，所有 <xref:System.Xaml.XamlDirective> 类型和所有预定义的 XAML 指令都必须使用此行为。</span><span class="sxs-lookup"><span data-stu-id="0f490-178"><xref:System.Xaml.XamlDirective> seals this virtual member; therefore, all <xref:System.Xaml.XamlDirective> types and all predefined XAML directives must use this behavior.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Xaml.XamlMember.LookupIsAmbient" />
      </Docs>
    </Member>
    <Member MemberName="LookupIsEvent">
      <MemberSignature Language="C#" Value="protected override sealed bool LookupIsEvent ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool LookupIsEvent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlDirective.LookupIsEvent" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Function LookupIsEvent () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool LookupIsEvent();" />
      <MemberSignature Language="F#" Value="override this.LookupIsEvent : unit -&gt; bool" Usage="xamlDirective.LookupIsEvent " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0f490-179">返回的值指示此 <see cref="T:System.Xaml.XamlDirective" /> 是否表示一个事件。</span><span class="sxs-lookup"><span data-stu-id="0f490-179">Returns whether this <see cref="T:System.Xaml.XamlDirective" /> represents an event.</span></span></summary>
        <returns><span data-ttu-id="0f490-180">始终返回 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="0f490-180">Always returns <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f490-181"><xref:System.Xaml.XamlDirective> 密封此虚拟成员;因此，所有 <xref:System.Xaml.XamlDirective> 类型和所有预定义的 XAML 指令都必须使用此行为。</span><span class="sxs-lookup"><span data-stu-id="0f490-181"><xref:System.Xaml.XamlDirective> seals this virtual member; therefore, all <xref:System.Xaml.XamlDirective> types and all predefined XAML directives must use this behavior.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.IsEvent" />
      </Docs>
    </Member>
    <Member MemberName="LookupIsReadOnly">
      <MemberSignature Language="C#" Value="protected override sealed bool LookupIsReadOnly ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool LookupIsReadOnly() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlDirective.LookupIsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Function LookupIsReadOnly () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool LookupIsReadOnly();" />
      <MemberSignature Language="F#" Value="override this.LookupIsReadOnly : unit -&gt; bool" Usage="xamlDirective.LookupIsReadOnly " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0f490-182">返回的值指示此 <see cref="T:System.Xaml.XamlDirective" /> 是否表示预期的只读属性。</span><span class="sxs-lookup"><span data-stu-id="0f490-182">Returns whether this <see cref="T:System.Xaml.XamlDirective" /> represents an intended read-only property.</span></span></summary>
        <returns><span data-ttu-id="0f490-183">始终返回 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="0f490-183">Always returns <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f490-184">按照定义，指令是可设置的。</span><span class="sxs-lookup"><span data-stu-id="0f490-184">By definition, directives are settable.</span></span> <span data-ttu-id="0f490-185"><xref:System.Xaml.XamlDirective> 密封此虚拟成员;因此，所有 <xref:System.Xaml.XamlDirective> 类型和所有预定义的 XAML 指令都必须使用此行为。</span><span class="sxs-lookup"><span data-stu-id="0f490-185"><xref:System.Xaml.XamlDirective> seals this virtual member; therefore, all <xref:System.Xaml.XamlDirective> types and all predefined XAML directives must use this behavior.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.IsReadOnly" />
      </Docs>
    </Member>
    <Member MemberName="LookupIsReadPublic">
      <MemberSignature Language="C#" Value="protected override sealed bool LookupIsReadPublic ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool LookupIsReadPublic() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlDirective.LookupIsReadPublic" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Function LookupIsReadPublic () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool LookupIsReadPublic();" />
      <MemberSignature Language="F#" Value="override this.LookupIsReadPublic : unit -&gt; bool" Usage="xamlDirective.LookupIsReadPublic " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0f490-186">返回的值指示此 <see cref="T:System.Xaml.XamlDirective" /> 是否表示一个具有公共 <see langword="get" /> 访问器的属性。</span><span class="sxs-lookup"><span data-stu-id="0f490-186">Returns whether this <see cref="T:System.Xaml.XamlDirective" /> represents a property that has a public <see langword="get" /> accessor.</span></span></summary>
        <returns><span data-ttu-id="0f490-187">始终返回 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="0f490-187">Always returns <see langword="true" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f490-188"><xref:System.Xaml.XamlDirective> 密封此虚拟成员;因此，所有 <xref:System.Xaml.XamlDirective> 类型和所有预定义的 XAML 指令都必须使用此行为。</span><span class="sxs-lookup"><span data-stu-id="0f490-188"><xref:System.Xaml.XamlDirective> seals this virtual member; therefore, all <xref:System.Xaml.XamlDirective> types and all predefined XAML directives must use this behavior.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.IsReadPublic" />
      </Docs>
    </Member>
    <Member MemberName="LookupIsUnknown">
      <MemberSignature Language="C#" Value="protected override sealed bool LookupIsUnknown ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool LookupIsUnknown() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlDirective.LookupIsUnknown" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Function LookupIsUnknown () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool LookupIsUnknown();" />
      <MemberSignature Language="F#" Value="override this.LookupIsUnknown : unit -&gt; bool" Usage="xamlDirective.LookupIsUnknown " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0f490-189">返回的值指示此 <see cref="T:System.Xaml.XamlDirective" /> 是否表示一个用于类型和成员解析的支持系统无法解析的成员。</span><span class="sxs-lookup"><span data-stu-id="0f490-189">Returns whether this <see cref="T:System.Xaml.XamlDirective" /> represents a member that is not resolvable by the backing system that is used for type and member resolution.</span></span></summary>
        <returns><span data-ttu-id="0f490-190">如果此 <see cref="T:System.Xaml.XamlDirective" /> 表示不可解析的成员，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="0f490-190"><see langword="true" /> if this <see cref="T:System.Xaml.XamlDirective" /> represents a non-resolvable member; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f490-191"><xref:System.Xaml.XamlDirective>实现仅调用 base 并且不执行任何其他操作。</span><span class="sxs-lookup"><span data-stu-id="0f490-191">The <xref:System.Xaml.XamlDirective> implementation only calls base and does nothing more.</span></span> <span data-ttu-id="0f490-192">基实现按以下顺序返回结果：结果基于内部反射;或结果基于检查的 null 值 <xref:System.Xaml.XamlMember.UnderlyingMember%2A> 。</span><span class="sxs-lookup"><span data-stu-id="0f490-192">The base implementation returns the results in this order: the results are based on internal reflection; or the results are based on checking for a null value of the <xref:System.Xaml.XamlMember.UnderlyingMember%2A>.</span></span> <span data-ttu-id="0f490-193"><xref:System.Xaml.XamlDirective>实现会密封此虚拟成员; 因此，所有 <xref:System.Xaml.XamlDirective> 类型和所有预定义的 XAML 指令都必须使用此行为。</span><span class="sxs-lookup"><span data-stu-id="0f490-193">The <xref:System.Xaml.XamlDirective> implementation seals this virtual member; therefore, all <xref:System.Xaml.XamlDirective> types and all predefined XAML directives must use this behavior.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupIsWriteOnly">
      <MemberSignature Language="C#" Value="protected override sealed bool LookupIsWriteOnly ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool LookupIsWriteOnly() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlDirective.LookupIsWriteOnly" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Function LookupIsWriteOnly () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool LookupIsWriteOnly();" />
      <MemberSignature Language="F#" Value="override this.LookupIsWriteOnly : unit -&gt; bool" Usage="xamlDirective.LookupIsWriteOnly " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0f490-194">返回的值指示此 <see cref="T:System.Xaml.XamlDirective" /> 是否表示预期的只写属性。</span><span class="sxs-lookup"><span data-stu-id="0f490-194">Returns whether this <see cref="T:System.Xaml.XamlDirective" /> represents an intended write-only property.</span></span></summary>
        <returns><span data-ttu-id="0f490-195">始终返回 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="0f490-195">Always returns <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f490-196"><xref:System.Xaml.XamlDirective> 密封此虚拟成员;因此，所有 <xref:System.Xaml.XamlDirective> 类型和所有预定义的 XAML 指令都必须使用此行为。</span><span class="sxs-lookup"><span data-stu-id="0f490-196"><xref:System.Xaml.XamlDirective> seals this virtual member; therefore, all <xref:System.Xaml.XamlDirective> types and all predefined XAML directives must use this behavior.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.IsWriteOnly" />
      </Docs>
    </Member>
    <Member MemberName="LookupIsWritePublic">
      <MemberSignature Language="C#" Value="protected override sealed bool LookupIsWritePublic ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool LookupIsWritePublic() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlDirective.LookupIsWritePublic" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Function LookupIsWritePublic () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool LookupIsWritePublic();" />
      <MemberSignature Language="F#" Value="override this.LookupIsWritePublic : unit -&gt; bool" Usage="xamlDirective.LookupIsWritePublic " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0f490-197">返回的值指示此 <see cref="T:System.Xaml.XamlDirective" /> 是否表示一个具有公共 <see langword="set" /> 访问器的属性。</span><span class="sxs-lookup"><span data-stu-id="0f490-197">Returns whether this <see cref="T:System.Xaml.XamlDirective" /> represents a property that has a public <see langword="set" /> accessor.</span></span></summary>
        <returns><span data-ttu-id="0f490-198">始终返回 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="0f490-198">Always returns <see langword="true" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f490-199"><xref:System.Xaml.XamlDirective> 密封此虚拟成员;因此，所有 <xref:System.Xaml.XamlDirective> 类型和所有预定义的 XAML 指令都必须使用此行为。</span><span class="sxs-lookup"><span data-stu-id="0f490-199"><xref:System.Xaml.XamlDirective> seals this virtual member; therefore, all <xref:System.Xaml.XamlDirective> types and all predefined XAML directives must use this behavior.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.IsWritePublic" />
      </Docs>
    </Member>
    <Member MemberName="LookupTargetType">
      <MemberSignature Language="C#" Value="protected override sealed System.Xaml.XamlType LookupTargetType ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Xaml.XamlType LookupTargetType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlDirective.LookupTargetType" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Function LookupTargetType () As XamlType" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Xaml::XamlType ^ LookupTargetType();" />
      <MemberSignature Language="F#" Value="override this.LookupTargetType : unit -&gt; System.Xaml.XamlType" Usage="xamlDirective.LookupTargetType " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlType</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0f490-200">返回其中可能存在 <see cref="T:System.Xaml.XamlType" /> 的类型的 <see cref="T:System.Xaml.XamlMember" />。</span><span class="sxs-lookup"><span data-stu-id="0f490-200">Returns the <see cref="T:System.Xaml.XamlType" /> of the type where the <see cref="T:System.Xaml.XamlMember" /> can exist.</span></span> <span data-ttu-id="0f490-201">此实现始终返回 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="0f490-201">This implementation always returns <see langword="null" />.</span></span></summary>
        <returns><span data-ttu-id="0f490-202">始终返回 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="0f490-202">Always returns <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f490-203">目标类型与指令无关;因此，此实现始终返回 `null` 。</span><span class="sxs-lookup"><span data-stu-id="0f490-203">Target types are not relevant for directives; therefore, this implementation always returns `null`.</span></span> <span data-ttu-id="0f490-204"><xref:System.Xaml.XamlDirective> 密封此虚拟成员;因此，所有 <xref:System.Xaml.XamlDirective> 类型和所有预定义的 XAML 指令都必须使用此行为。</span><span class="sxs-lookup"><span data-stu-id="0f490-204"><xref:System.Xaml.XamlDirective> seals this virtual member; therefore, all <xref:System.Xaml.XamlDirective> types and all predefined XAML directives must use this behavior.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.TargetType" />
      </Docs>
    </Member>
    <Member MemberName="LookupType">
      <MemberSignature Language="C#" Value="protected override sealed System.Xaml.XamlType LookupType ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Xaml.XamlType LookupType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlDirective.LookupType" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Function LookupType () As XamlType" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Xaml::XamlType ^ LookupType();" />
      <MemberSignature Language="F#" Value="override this.LookupType : unit -&gt; System.Xaml.XamlType" Usage="xamlDirective.LookupType " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlType</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0f490-205">返回成员所使用的类型的 <see cref="T:System.Xaml.XamlType" />。</span><span class="sxs-lookup"><span data-stu-id="0f490-205">Returns the <see cref="T:System.Xaml.XamlType" /> of the type that is used by the member.</span></span></summary>
        <returns><span data-ttu-id="0f490-206">成员所使用的类型的 <see cref="T:System.Xaml.XamlType" />。</span><span class="sxs-lookup"><span data-stu-id="0f490-206">The <see cref="T:System.Xaml.XamlType" /> of the type that is used by the member.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f490-207"><xref:System.Xaml.XamlDirective>实现仅调用 base 并且不执行任何其他操作。</span><span class="sxs-lookup"><span data-stu-id="0f490-207">The <xref:System.Xaml.XamlDirective> implementation only calls base and does nothing more.</span></span> <span data-ttu-id="0f490-208">基实现基于内部反射返回结果，或按顺序检查的 null 值 <xref:System.Xaml.XamlMember.UnderlyingMember%2A> 。</span><span class="sxs-lookup"><span data-stu-id="0f490-208">The base implementation returns results based either on internal reflection, or checking for a null value of <xref:System.Xaml.XamlMember.UnderlyingMember%2A>, processing in that order.</span></span> <span data-ttu-id="0f490-209"><xref:System.Xaml.XamlDirective> 密封此虚拟成员;因此，所有 <xref:System.Xaml.XamlDirective> 类型和所有预定义的 XAML 指令都必须使用此行为。</span><span class="sxs-lookup"><span data-stu-id="0f490-209"><xref:System.Xaml.XamlDirective> seals this virtual member; therefore, all <xref:System.Xaml.XamlDirective> types and all predefined XAML directives must use this behavior.</span></span>  
  
 <span data-ttu-id="0f490-210">有关 <xref:System.Xaml.XamlMember.LookupType%2A?displayProperty=nameWithType> 信息的详细信息，请参阅中的备注 <xref:System.Xaml.XamlMember.Type%2A> 。</span><span class="sxs-lookup"><span data-stu-id="0f490-210">See Remarks in <xref:System.Xaml.XamlMember.LookupType%2A?displayProperty=nameWithType> for more information about what information <xref:System.Xaml.XamlMember.Type%2A> carries.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.Type" />
      </Docs>
    </Member>
    <Member MemberName="LookupTypeConverter">
      <MemberSignature Language="C#" Value="protected override sealed System.Xaml.Schema.XamlValueConverter&lt;System.ComponentModel.TypeConverter&gt; LookupTypeConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Xaml.Schema.XamlValueConverter`1&lt;class System.ComponentModel.TypeConverter&gt; LookupTypeConverter() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlDirective.LookupTypeConverter" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Function LookupTypeConverter () As XamlValueConverter(Of TypeConverter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Xaml::Schema::XamlValueConverter&lt;System::ComponentModel::TypeConverter ^&gt; ^ LookupTypeConverter();" />
      <MemberSignature Language="F#" Value="override this.LookupTypeConverter : unit -&gt; System.Xaml.Schema.XamlValueConverter&lt;System.ComponentModel.TypeConverter&gt;" Usage="xamlDirective.LookupTypeConverter " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlValueConverter&lt;System.ComponentModel.TypeConverter&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0f490-211">返回与此 <see cref="T:System.Xaml.XamlDirective" /> 关联的类型转换器实现。</span><span class="sxs-lookup"><span data-stu-id="0f490-211">Returns a type converter implementation that is associated with this <see cref="T:System.Xaml.XamlDirective" />.</span></span></summary>
        <returns><span data-ttu-id="0f490-212">一个具有 <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> 约束的 <see cref="T:System.ComponentModel.TypeConverter" /> 实例，或者为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="0f490-212">A <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> instance that has <see cref="T:System.ComponentModel.TypeConverter" /> constraint; or <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f490-213"><xref:System.Xaml.XamlDirective>实现仅调用 base 并且不执行任何其他操作。</span><span class="sxs-lookup"><span data-stu-id="0f490-213">The <xref:System.Xaml.XamlDirective> implementation only calls base and does nothing more.</span></span> <span data-ttu-id="0f490-214">请参阅 <xref:System.Xaml.XamlMember.LookupTypeConverter%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="0f490-214">See <xref:System.Xaml.XamlMember.LookupTypeConverter%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="0f490-215"><xref:System.Xaml.XamlDirective> 密封此虚拟成员;因此，所有 <xref:System.Xaml.XamlDirective> 类型和所有预定义的 XAML 指令都必须使用此行为。</span><span class="sxs-lookup"><span data-stu-id="0f490-215"><xref:System.Xaml.XamlDirective> seals this virtual member; therefore, all <xref:System.Xaml.XamlDirective> types and all predefined XAML directives must use this behavior.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.Type" />
      </Docs>
    </Member>
    <Member MemberName="LookupUnderlyingGetter">
      <MemberSignature Language="C#" Value="protected override sealed System.Reflection.MethodInfo LookupUnderlyingGetter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Reflection.MethodInfo LookupUnderlyingGetter() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlDirective.LookupUnderlyingGetter" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Function LookupUnderlyingGetter () As MethodInfo" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Reflection::MethodInfo ^ LookupUnderlyingGetter();" />
      <MemberSignature Language="F#" Value="override this.LookupUnderlyingGetter : unit -&gt; System.Reflection.MethodInfo" Usage="xamlDirective.LookupUnderlyingGetter " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0f490-216">返回与此 <see cref="T:System.Xaml.XamlDirective" /> 关联的 <see langword="get" /> 访问器。</span><span class="sxs-lookup"><span data-stu-id="0f490-216">Returns a <see langword="get" /> accessor that is associated with this <see cref="T:System.Xaml.XamlDirective" />.</span></span> <span data-ttu-id="0f490-217">此实现始终返回 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="0f490-217">This implementation always returns <see langword="null" />.</span></span></summary>
        <returns><span data-ttu-id="0f490-218">始终返回 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="0f490-218">Always returns <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f490-219"><xref:System.Xaml.XamlDirective> 密封此虚拟成员;因此，所有 <xref:System.Xaml.XamlDirective> 类型和所有预定义的 XAML 指令都必须使用此行为。</span><span class="sxs-lookup"><span data-stu-id="0f490-219"><xref:System.Xaml.XamlDirective> seals this virtual member; therefore, all <xref:System.Xaml.XamlDirective> types and all predefined XAML directives must use this behavior.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupUnderlyingMember">
      <MemberSignature Language="C#" Value="protected override sealed System.Reflection.MemberInfo LookupUnderlyingMember ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Reflection.MemberInfo LookupUnderlyingMember() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlDirective.LookupUnderlyingMember" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Function LookupUnderlyingMember () As MemberInfo" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Reflection::MemberInfo ^ LookupUnderlyingMember();" />
      <MemberSignature Language="F#" Value="override this.LookupUnderlyingMember : unit -&gt; System.Reflection.MemberInfo" Usage="xamlDirective.LookupUnderlyingMember " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MemberInfo</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0f490-220">返回与此 <see cref="T:System.Reflection.MemberInfo" /> 关联的 CLR 反射 <see cref="T:System.Xaml.XamlDirective" />。</span><span class="sxs-lookup"><span data-stu-id="0f490-220">Returns a CLR reflection <see cref="T:System.Reflection.MemberInfo" /> that is associated with this <see cref="T:System.Xaml.XamlDirective" />.</span></span> <span data-ttu-id="0f490-221">此实现始终返回 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="0f490-221">This implementation always returns <see langword="null" />.</span></span></summary>
        <returns><span data-ttu-id="0f490-222">始终返回 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="0f490-222">Always returns <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f490-223"><xref:System.Xaml.XamlDirective> 密封此虚拟成员;因此，所有 <xref:System.Xaml.XamlDirective> 类型和所有预定义的 XAML 指令都必须使用此行为。</span><span class="sxs-lookup"><span data-stu-id="0f490-223"><xref:System.Xaml.XamlDirective> seals this virtual member; therefore, all <xref:System.Xaml.XamlDirective> types and all predefined XAML directives must use this behavior.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.UnderlyingMember" />
      </Docs>
    </Member>
    <Member MemberName="LookupUnderlyingSetter">
      <MemberSignature Language="C#" Value="protected override sealed System.Reflection.MethodInfo LookupUnderlyingSetter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Reflection.MethodInfo LookupUnderlyingSetter() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlDirective.LookupUnderlyingSetter" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Function LookupUnderlyingSetter () As MethodInfo" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Reflection::MethodInfo ^ LookupUnderlyingSetter();" />
      <MemberSignature Language="F#" Value="override this.LookupUnderlyingSetter : unit -&gt; System.Reflection.MethodInfo" Usage="xamlDirective.LookupUnderlyingSetter " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0f490-224">返回与此 <see cref="T:System.Xaml.XamlDirective" /> 关联的 <see langword="set" /> 访问器。</span><span class="sxs-lookup"><span data-stu-id="0f490-224">Returns a <see langword="set" /> accessor that is associated with this <see cref="T:System.Xaml.XamlDirective" />.</span></span> <span data-ttu-id="0f490-225">此实现始终返回 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="0f490-225">This implementation always returns <see langword="null" />.</span></span></summary>
        <returns><span data-ttu-id="0f490-226">始终返回 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="0f490-226">Always returns <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f490-227"><xref:System.Xaml.XamlDirective> 密封此虚拟成员;因此，所有 <xref:System.Xaml.XamlDirective> 类型和所有预定义的 XAML 指令都必须使用此行为。</span><span class="sxs-lookup"><span data-stu-id="0f490-227"><xref:System.Xaml.XamlDirective> seals this virtual member; therefore, all <xref:System.Xaml.XamlDirective> types and all predefined XAML directives must use this behavior.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlDirective.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="xamlDirective.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0f490-228">返回此 <see cref="T:System.Xaml.XamlDirective" /> 的字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="0f490-228">Returns a string representation of this <see cref="T:System.Xaml.XamlDirective" />.</span></span></summary>
        <returns><span data-ttu-id="0f490-229">此 <see cref="T:System.Xaml.XamlDirective" /> 的字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="0f490-229">A string representation of this <see cref="T:System.Xaml.XamlDirective" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f490-230">如果 XAML 命名空间信息可用，此实现将返回和的字符串 <xref:System.Xaml.XamlMember.PreferredXamlNamespace%2A> 组合 <xref:System.Xaml.XamlMember.Name%2A> 。</span><span class="sxs-lookup"><span data-stu-id="0f490-230">If XAML namespace information is available, this implementation returns a string combination of <xref:System.Xaml.XamlMember.PreferredXamlNamespace%2A> and <xref:System.Xaml.XamlMember.Name%2A>.</span></span> <span data-ttu-id="0f490-231">如果 XAML 命名空间信息不可用，则此实现返回 <xref:System.Xaml.XamlMember.Name%2A> 。</span><span class="sxs-lookup"><span data-stu-id="0f490-231">If XAML namespace information is unavailable, this implementation returns <xref:System.Xaml.XamlMember.Name%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
