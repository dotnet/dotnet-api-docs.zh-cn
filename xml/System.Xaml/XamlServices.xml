<Type Name="XamlServices" FullName="System.Xaml.XamlServices">
  <Metadata><Meta Name="ms.openlocfilehash" Value="64a5740569d3938e55bf90d278d8eec394c67501" /><Meta Name="ms.sourcegitcommit" Value="9f423345753728e8cad38d4a22663a109e69ea91" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="03/04/2021" /><Meta Name="ms.locfileid" Value="102084411" /></Metadata><TypeSignature Language="C#" Value="public static class XamlServices" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit XamlServices extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Xaml.XamlServices" />
  <TypeSignature Language="VB.NET" Value="Public Class XamlServices" />
  <TypeSignature Language="C++ CLI" Value="public ref class XamlServices abstract sealed" />
  <TypeSignature Language="F#" Value="type XamlServices = class" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="699a7-101">提供适用于常见 XAML 任务（读取 XAML 和写入对象图，或者读取对象图并为序列化目的而写入 XAML 文件输出）的更高级别服务（静态方法）。</span><span class="sxs-lookup"><span data-stu-id="699a7-101">Provides higher-level services (static methods) for the common XAML tasks of reading XAML and writing an object graph; or reading an object graph and writing XAML file output for serialization purposes.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="699a7-102"><xref:System.Xaml.XamlServices>在最常见的 xaml 读取和写入方案中使用的类的模式依赖于创建 xaml 读取器和 xaml 编写器的实例。</span><span class="sxs-lookup"><span data-stu-id="699a7-102">The modes of the <xref:System.Xaml.XamlServices> class that are used in the most common XAML reading and writing scenarios rely on creating instances of XAML readers and XAML writers.</span></span> <span data-ttu-id="699a7-103">这些读取器和编写器是专用的，但公共类的内部实现（如 <xref:System.Xml.XmlReader> 、 <xref:System.Xaml.XamlXmlReader> 和） <xref:System.Xaml.XamlObjectWriter> 。</span><span class="sxs-lookup"><span data-stu-id="699a7-103">These readers and writers are specialized but internal implementations of public classes, such as <xref:System.Xml.XmlReader>, <xref:System.Xaml.XamlXmlReader>, and <xref:System.Xaml.XamlObjectWriter>.</span></span> <span data-ttu-id="699a7-104">若要 <xref:System.Xaml.XamlServices> 在大多数情况下使用，可以依赖于默认的内部实现获取所需的结果。</span><span class="sxs-lookup"><span data-stu-id="699a7-104">To use <xref:System.Xaml.XamlServices> for most scenarios, you can rely on the default internal implementations to obtain the results that you want.</span></span> <span data-ttu-id="699a7-105">对于更多的专用方案，你可能会自行定义读取器和编写器，然后将它们作为方法重载的参数进行传递 <xref:System.Xaml.XamlServices> 。</span><span class="sxs-lookup"><span data-stu-id="699a7-105">For more specialized scenarios, you might define readers and writers yourself, and then pass them as arguments for overloads of the <xref:System.Xaml.XamlServices> methods.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="699a7-106"><xref:System.Xaml.XamlServices> 如果你正在处理 WPF 定义的类型或基于 WPF 的类型，则不推荐使用 XAML 读取或 XAML 编写 API 集。</span><span class="sxs-lookup"><span data-stu-id="699a7-106"><xref:System.Xaml.XamlServices> is not the recommended XAML reading or XAML writing API set if you are processing WPF-defined types, or types based on WPF.</span></span> <span data-ttu-id="699a7-107">对于 WPF 用法，请使用 <xref:System.Windows.Markup.XamlReader?displayProperty=nameWithType> 读取或加载 xaml (或 BAML) ; 并使用 <xref:System.Windows.Markup.XamlWriter?displayProperty=nameWithType> 来写回 xaml。</span><span class="sxs-lookup"><span data-stu-id="699a7-107">For WPF usage, use <xref:System.Windows.Markup.XamlReader?displayProperty=nameWithType> for reading or loading XAML (or BAML); and <xref:System.Windows.Markup.XamlWriter?displayProperty=nameWithType> for writing back XAML.</span></span> <span data-ttu-id="699a7-108">这些类在其实现内部使用 XAML 服务 Api 和 XAML 读取器和 XAML 编写器 .NET Framework;但是，它们还为特定于 WPF 的概念提供支持和专用的 XAML 架构上下文，例如依赖属性和 WPF 已知类型的优化。</span><span class="sxs-lookup"><span data-stu-id="699a7-108">These classes use .NET Framework XAML Services APIs and the XAML readers and XAML writers internally in their implementation; however, they also provide support and specialized XAML schema context for WPF-specific concepts, such as optimizations for dependency properties and WPF known types.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName="Load">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="699a7-109">加载 XAML 读取器的源，并将其输出写为对象关系图。</span><span class="sxs-lookup"><span data-stu-id="699a7-109">Loads source for a XAML reader and writes its output as an object graph.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public static object Load (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object Load(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlServices.Load(System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Load (stream As Stream) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ Load(System::IO::Stream ^ stream);" />
      <MemberSignature Language="F#" Value="static member Load : System.IO.Stream -&gt; obj" Usage="System.Xaml.XamlServices.Load stream" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream"><span data-ttu-id="699a7-110">要作为输入加载的流。</span><span class="sxs-lookup"><span data-stu-id="699a7-110">The stream to load as input.</span></span></param>
        <summary><span data-ttu-id="699a7-111">加载 XAML 读取器的 <see cref="T:System.IO.Stream" /> 源，并将其输出写为对象关系图。</span><span class="sxs-lookup"><span data-stu-id="699a7-111">Loads a <see cref="T:System.IO.Stream" /> source for a XAML reader and writes its output as an object graph.</span></span></summary>
        <returns><span data-ttu-id="699a7-112">写为输出的对象关系图。</span><span class="sxs-lookup"><span data-stu-id="699a7-112">The object graph that is written as output.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="699a7-113">方法的不同签名为 <xref:System.Xaml.XamlServices.Load%28System.IO.Stream%29> 源 XAML 指定不同类型的输入。</span><span class="sxs-lookup"><span data-stu-id="699a7-113">Different signatures for the <xref:System.Xaml.XamlServices.Load%28System.IO.Stream%29> method specify different types of input for the source XAML.</span></span> <span data-ttu-id="699a7-114"><xref:System.Xaml.XamlServices.Load%28System.IO.Stream%29>内部实现首先 <xref:System.Xml.XmlReader> 通过调用创建一个 <xref:System.Xml.XmlReader.Create%28System.IO.Stream%29> ，然后创建用于处理输入的专用化的新实例 <xref:System.Xaml.XamlReader> 。</span><span class="sxs-lookup"><span data-stu-id="699a7-114">The <xref:System.Xaml.XamlServices.Load%28System.IO.Stream%29> internal implementation first creates an <xref:System.Xml.XmlReader> by calling <xref:System.Xml.XmlReader.Create%28System.IO.Stream%29> and then creates a new instance of a specialized <xref:System.Xaml.XamlReader> that processes the input.</span></span>  
  
 <span data-ttu-id="699a7-115">为了使 <xref:System.Xaml.XamlServices.Load%28System.IO.Stream%29> 调用成功创建对象图，必须满足以下条件：</span><span class="sxs-lookup"><span data-stu-id="699a7-115">In order for the <xref:System.Xaml.XamlServices.Load%28System.IO.Stream%29> call to successfully create an object graph, the following must be true:</span></span>  
  
-   <span data-ttu-id="699a7-116">源是格式正确且有效的 XML。</span><span class="sxs-lookup"><span data-stu-id="699a7-116">The source is well-formed and valid XML.</span></span>  
  
-   <span data-ttu-id="699a7-117">源是语言级别的有效 XAML。</span><span class="sxs-lookup"><span data-stu-id="699a7-117">The source is valid XAML at the language level.</span></span>  
  
-   <span data-ttu-id="699a7-118">源 XAML 中指定的 XAML 类型必须解析为相关 XAML 命名空间中的支持类型。</span><span class="sxs-lookup"><span data-stu-id="699a7-118">The XAML types that are specified in the source XAML must resolve to backing types in the relevant XAML namespaces.</span></span> <span data-ttu-id="699a7-119">例如，WPF 命名空间的 XAML 类型可解析为 XAML 中指定的 WPF XAML 命名空间;WPF 的程序集必须包含在项目中，或在运行时可用;依此类推。</span><span class="sxs-lookup"><span data-stu-id="699a7-119">For example, XAML types for WPF namespaces can resolve to a WPF XAML namespace as specified in the XAML; the assemblies for WPF must be included in the project or available in the run time; and so on.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="699a7-120"><xref:System.Xaml.XamlServices> 如果要处理 Windows Presentation Foundation (WPF) 类型或基于 WPF 的类型，则不推荐使用 XAML 读取或 XAML 编写 API 集。</span><span class="sxs-lookup"><span data-stu-id="699a7-120"><xref:System.Xaml.XamlServices> is not the recommended XAML reading or XAML writing API set if you are processing Windows Presentation Foundation (WPF) types, or types based on WPF.</span></span> <span data-ttu-id="699a7-121">对于 WPF 用法，请使用 <xref:System.Windows.Markup.XamlReader?displayProperty=nameWithType> 读取或加载 xaml，并使用 <xref:System.Windows.Markup.XamlWriter?displayProperty=nameWithType> 来编写回调 xaml。</span><span class="sxs-lookup"><span data-stu-id="699a7-121">For WPF usage, use <xref:System.Windows.Markup.XamlReader?displayProperty=nameWithType> for reading or loading XAML; and <xref:System.Windows.Markup.XamlWriter?displayProperty=nameWithType> for writing back XAML.</span></span> <span data-ttu-id="699a7-122">这些类 <xref:System.Xaml> 在其实现中内部使用 api; 但是，它们还提供对影响 XAML 读和写性质的 WPF 特定概念的支持，如依赖属性的优化。</span><span class="sxs-lookup"><span data-stu-id="699a7-122">These classes use <xref:System.Xaml> APIs internally in their implementation; however, they also provide support for WPF-specific concepts that influence the nature of XAML reading and writing, such as optimizations for dependency properties.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="699a7-123"><paramref name="stream" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="699a7-123"><paramref name="stream" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public static object Load (System.IO.TextReader textReader);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object Load(class System.IO.TextReader textReader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlServices.Load(System.IO.TextReader)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Load (textReader As TextReader) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ Load(System::IO::TextReader ^ textReader);" />
      <MemberSignature Language="F#" Value="static member Load : System.IO.TextReader -&gt; obj" Usage="System.Xaml.XamlServices.Load textReader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textReader" Type="System.IO.TextReader" />
      </Parameters>
      <Docs>
        <param name="textReader"><span data-ttu-id="699a7-124">要用作所创建 <see cref="T:System.IO.TextReader" /> 的基础的 <see cref="T:System.Xml.XmlReader" />。</span><span class="sxs-lookup"><span data-stu-id="699a7-124">The <see cref="T:System.IO.TextReader" /> to use as the basis for the created <see cref="T:System.Xml.XmlReader" />.</span></span></param>
        <summary><span data-ttu-id="699a7-125">从 <see cref="T:System.IO.TextReader" /> 创建 XAML 读取器，并返回对象关系图。</span><span class="sxs-lookup"><span data-stu-id="699a7-125">Creates a XAML reader from a <see cref="T:System.IO.TextReader" />, and returns an object graph.</span></span></summary>
        <returns><span data-ttu-id="699a7-126">返回的对象图。</span><span class="sxs-lookup"><span data-stu-id="699a7-126">The object graph that is returned.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="699a7-127">为了返回对象图， `textReader` 应使用其相关输入构造输入。</span><span class="sxs-lookup"><span data-stu-id="699a7-127">In order to return the object graph, the `textReader` input should be constructed by using its relevant input.</span></span> <span data-ttu-id="699a7-128">例如，它应传递 <xref:System.IO.StringReader> 使用构造函数的有效 XAML 字符串输入构造的 <xref:System.IO.StringReader.%23ctor%28System.String%29> 。</span><span class="sxs-lookup"><span data-stu-id="699a7-128">For example, it should pass a <xref:System.IO.StringReader> that is constructed by using a valid XAML-as-string input for the <xref:System.IO.StringReader.%23ctor%28System.String%29> constructor.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="699a7-129"><paramref name="textReader" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="699a7-129"><paramref name="textReader" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public static object Load (string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object Load(string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlServices.Load(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Load (fileName As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ Load(System::String ^ fileName);" />
      <MemberSignature Language="F#" Value="static member Load : string -&gt; obj" Usage="System.Xaml.XamlServices.Load fileName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileName"><span data-ttu-id="699a7-130">要加载并用作源的文件名。</span><span class="sxs-lookup"><span data-stu-id="699a7-130">The file name to load and use as source.</span></span></param>
        <summary><span data-ttu-id="699a7-131">加载 XAML 读取器的 <see cref="T:System.IO.Stream" /> 源，并返回对象关系图。</span><span class="sxs-lookup"><span data-stu-id="699a7-131">Loads a <see cref="T:System.IO.Stream" /> source for a XAML reader and returns an object graph.</span></span></summary>
        <returns><span data-ttu-id="699a7-132">返回的对象图。</span><span class="sxs-lookup"><span data-stu-id="699a7-132">The object graph that is returned.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="699a7-133">方法的不同签名为 <xref:System.Xaml.XamlServices.Load%2A> 源 XAML 指定不同类型的输入。</span><span class="sxs-lookup"><span data-stu-id="699a7-133">Different signatures for the <xref:System.Xaml.XamlServices.Load%2A> method specify different types of input for the source XAML.</span></span> <span data-ttu-id="699a7-134"><xref:System.Xaml.XamlServices.Load%2A>内部实现首先 <xref:System.Xml.XmlReader> 通过调用创建一个 <xref:System.Xml.XmlReader.Create%28System.String%29> ，然后创建用于处理输入的专用化的新实例 <xref:System.Xaml.XamlReader> 。</span><span class="sxs-lookup"><span data-stu-id="699a7-134">The <xref:System.Xaml.XamlServices.Load%2A> internal implementation first creates an <xref:System.Xml.XmlReader> by calling <xref:System.Xml.XmlReader.Create%28System.String%29> and then creates a new instance of a specialized <xref:System.Xaml.XamlReader> that processes the input.</span></span>  
  
 <span data-ttu-id="699a7-135">为了使 <xref:System.Xaml.XamlServices.Load%28System.String%29> 调用成功创建对象图，必须满足以下条件：</span><span class="sxs-lookup"><span data-stu-id="699a7-135">In order for the <xref:System.Xaml.XamlServices.Load%28System.String%29> call to successfully create an object graph, the following must be true:</span></span>  
  
-   <span data-ttu-id="699a7-136">源是格式正确且有效的 XML。</span><span class="sxs-lookup"><span data-stu-id="699a7-136">The source is well-formed and valid XML.</span></span>  
  
-   <span data-ttu-id="699a7-137">源是语言级别的有效 XAML。</span><span class="sxs-lookup"><span data-stu-id="699a7-137">The source is valid XAML at the language level.</span></span>  
  
-   <span data-ttu-id="699a7-138">源 XAML 中指定的 XAML 类型必须解析为相关 XAML 命名空间中的支持类型。</span><span class="sxs-lookup"><span data-stu-id="699a7-138">The XAML types that are specified in the source XAML must resolve to backing types in the relevant XAML namespaces.</span></span> <span data-ttu-id="699a7-139">例如，WPF 命名空间的 XAML 类型可解析为 XAML 中指定的 WPF XAML 命名空间;WPF 的程序集必须包含在项目中，或在运行时可用;依此类推。</span><span class="sxs-lookup"><span data-stu-id="699a7-139">For example, XAML types for WPF namespaces can resolve to a WPF XAML namespace as specified in the XAML; the assemblies for WPF must be included in the project or be available in the run time; and so on.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="699a7-140"><paramref name="fileName" /> 输入为 <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="699a7-140"><paramref name="fileName" /> input is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public static object Load (System.Xaml.XamlReader xamlReader);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object Load(class System.Xaml.XamlReader xamlReader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlServices.Load(System.Xaml.XamlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Load (xamlReader As XamlReader) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ Load(System::Xaml::XamlReader ^ xamlReader);" />
      <MemberSignature Language="F#" Value="static member Load : System.Xaml.XamlReader -&gt; obj" Usage="System.Xaml.XamlServices.Load xamlReader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xamlReader" Type="System.Xaml.XamlReader" />
      </Parameters>
      <Docs>
        <param name="xamlReader"><span data-ttu-id="699a7-141">要用作此 <see langword="Load" /> 操作的读取器的 XAML 读取器实现。</span><span class="sxs-lookup"><span data-stu-id="699a7-141">The XAML reader implementation to use as the reader for this <see langword="Load" /> operation.</span></span></param>
        <summary><span data-ttu-id="699a7-142">加载特定 XAML 读取器实现，并返回对象图。</span><span class="sxs-lookup"><span data-stu-id="699a7-142">Loads a specific XAML reader implementation and returns an object graph.</span></span></summary>
        <returns><span data-ttu-id="699a7-143">返回的对象图。</span><span class="sxs-lookup"><span data-stu-id="699a7-143">The object graph that is returned.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="699a7-144">通常，只能在以下情况下使用此签名：</span><span class="sxs-lookup"><span data-stu-id="699a7-144">You should typically use this signature only in the following cases:</span></span>  
  
-   <span data-ttu-id="699a7-145">你已定义自己的实现 <xref:System.Xaml.XamlReader> 。</span><span class="sxs-lookup"><span data-stu-id="699a7-145">You defined your own implementation of a <xref:System.Xaml.XamlReader>.</span></span>  
  
-   <span data-ttu-id="699a7-146">你为指定的设置 <xref:System.Xaml.XamlReader> 与默认设置不同。</span><span class="sxs-lookup"><span data-stu-id="699a7-146">You specified settings for a <xref:System.Xaml.XamlReader> that differ from the default settings.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="699a7-147"><paramref name="xamlReader" /> 输入为 <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="699a7-147"><paramref name="xamlReader" /> input is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public static object Load (System.Xml.XmlReader xmlReader);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object Load(class System.Xml.XmlReader xmlReader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlServices.Load(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Load (xmlReader As XmlReader) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ Load(System::Xml::XmlReader ^ xmlReader);" />
      <MemberSignature Language="F#" Value="static member Load : System.Xml.XmlReader -&gt; obj" Usage="System.Xaml.XamlServices.Load xmlReader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xmlReader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="xmlReader"><span data-ttu-id="699a7-148">要用作此 <see langword="Load" /> 操作的读取器的 <see cref="T:System.Xml.XmlReader" /> 实现。</span><span class="sxs-lookup"><span data-stu-id="699a7-148">The <see cref="T:System.Xml.XmlReader" /> implementation to use as the reader for this <see langword="Load" /> operation.</span></span></param>
        <summary><span data-ttu-id="699a7-149">加载特定 XML 读取器实现，并返回对象图。</span><span class="sxs-lookup"><span data-stu-id="699a7-149">Loads a specific XML reader implementation and returns an object graph.</span></span></summary>
        <returns><span data-ttu-id="699a7-150">输出对象关系图。</span><span class="sxs-lookup"><span data-stu-id="699a7-150">The output object graph.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="699a7-151">通常，仅当定义自己的的实现时，才应使用此签名 <xref:System.Xml.XmlReader> 。</span><span class="sxs-lookup"><span data-stu-id="699a7-151">You should typically use this signature only if you defined your own implementation of a <xref:System.Xml.XmlReader>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="699a7-152"><paramref name="xamlReader" /> 输入为 <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="699a7-152"><paramref name="xamlReader" /> input is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static object Parse (string xaml);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object Parse(string xaml) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlServices.Parse(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (xaml As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ Parse(System::String ^ xaml);" />
      <MemberSignature Language="F#" Value="static member Parse : string -&gt; obj" Usage="System.Xaml.XamlServices.Parse xaml" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xaml" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="xaml"><span data-ttu-id="699a7-153">要分析的 XAML 字符串输入。</span><span class="sxs-lookup"><span data-stu-id="699a7-153">The XAML string input to parse.</span></span></param>
        <summary><span data-ttu-id="699a7-154">以字符串输出形式读取 XAML，并返回对象图。</span><span class="sxs-lookup"><span data-stu-id="699a7-154">Reads XAML as string output and returns an object graph.</span></span></summary>
        <returns><span data-ttu-id="699a7-155">返回的对象图。</span><span class="sxs-lookup"><span data-stu-id="699a7-155">The object graph that is returned.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="699a7-156">为了使 <xref:System.Xaml.XamlServices.Parse%2A> 调用成功创建对象树，必须满足以下条件：</span><span class="sxs-lookup"><span data-stu-id="699a7-156">In order for the <xref:System.Xaml.XamlServices.Parse%2A> call to successfully create an object tree, the following must be true:</span></span>  
  
-   <span data-ttu-id="699a7-157">`xaml`输入是格式正确且有效的 XML。</span><span class="sxs-lookup"><span data-stu-id="699a7-157">The `xaml` input is well-formed and valid XML.</span></span>  
  
-   <span data-ttu-id="699a7-158">`xaml`输入是语言级别的有效 XAML。</span><span class="sxs-lookup"><span data-stu-id="699a7-158">The `xaml` input is valid XAML at the language level.</span></span>  
  
-   <span data-ttu-id="699a7-159">在输入中指定的 XAML 类型 `xaml` 必须解析为相关 xaml 命名空间中的后备类型。</span><span class="sxs-lookup"><span data-stu-id="699a7-159">The XAML types that are specified in the `xaml` input must resolve to backing types in the relevant XAML namespaces.</span></span> <span data-ttu-id="699a7-160">例如，WPF 命名空间的 XAML 类型可解析为 XAML 中指定的 WPF XAML 命名空间;WPF 的程序集必须包含在项目中，或在运行时可用;依此类推。</span><span class="sxs-lookup"><span data-stu-id="699a7-160">For example, XAML types for a WPF namespace can resolve to a WPF XAML namespace as specified in the XAML; the assemblies for WPF must be included in the project or be available in the run time; and so on.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="699a7-161"><xref:System.Xaml.XamlServices> 如果要处理 Windows Presentation Foundation (WPF) 类型或基于 WPF 的类型，则不推荐使用 XAML 读取或 XAML 编写 API 集。</span><span class="sxs-lookup"><span data-stu-id="699a7-161"><xref:System.Xaml.XamlServices> is not the recommended XAML reading or XAML writing API set if you are processing Windows Presentation Foundation (WPF) types, or types based on WPF.</span></span> <span data-ttu-id="699a7-162">对于 WPF 用法，请使用 <xref:System.Windows.Markup.XamlReader?displayProperty=nameWithType> 读取或加载 xaml，并使用 <xref:System.Windows.Markup.XamlWriter?displayProperty=nameWithType> 来编写回调 xaml。</span><span class="sxs-lookup"><span data-stu-id="699a7-162">For WPF usage, use <xref:System.Windows.Markup.XamlReader?displayProperty=nameWithType> for reading or loading XAML, and <xref:System.Windows.Markup.XamlWriter?displayProperty=nameWithType> for writing back XAML.</span></span> <span data-ttu-id="699a7-163">这些类 <xref:System.Xaml> 在其实现中内部使用 api; 但是，它们还提供对影响 XAML 读和写性质的 WPF 特定概念的支持，如依赖属性的优化。</span><span class="sxs-lookup"><span data-stu-id="699a7-163">These classes use <xref:System.Xaml> APIs internally in their implementation; however, they also provide support for WPF-specific concepts that influence the nature of XAML reading and writing, such as optimizations for dependency properties.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="699a7-164"><paramref name="xaml" /> 输入为 <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="699a7-164"><paramref name="xaml" /> input is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Save">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="699a7-165">将提供的对象图处理为 XAML 节点表示形式，然后再处理为输出格式以便进行序列化。</span><span class="sxs-lookup"><span data-stu-id="699a7-165">Processes a provided object graph into a XAML node representation and then into an output format for serialization.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public static string Save (object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Save(object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlServices.Save(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Save (instance As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Save(System::Object ^ instance);" />
      <MemberSignature Language="F#" Value="static member Save : obj -&gt; string" Usage="System.Xaml.XamlServices.Save instance" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instance"><span data-ttu-id="699a7-166">要处理的对象关系图的根。</span><span class="sxs-lookup"><span data-stu-id="699a7-166">The root of the object graph to process.</span></span></param>
        <summary><span data-ttu-id="699a7-167">将提供的对象树处理为 XAML 节点表示形式，并返回输出 XAML 的字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="699a7-167">Processes a provided object tree into a XAML node representation, and returns a string representation of the output XAML.</span></span></summary>
        <returns><span data-ttu-id="699a7-168">字符串形式的 XAML 标记输出。</span><span class="sxs-lookup"><span data-stu-id="699a7-168">The XAML markup output as a string.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="699a7-169">此方法的输出是 `ToString` <xref:System.Xml.XmlWriter> 由方法调用创建的的结果。</span><span class="sxs-lookup"><span data-stu-id="699a7-169">The output from this method is the `ToString` result of an <xref:System.Xml.XmlWriter> that is created by the method call.</span></span> <span data-ttu-id="699a7-170"><xref:System.Xml.XmlWriter>使用以下设置创建的： <xref:System.Xml.XmlWriterSettings.Indent%2A?displayProperty=nameWithType> 为 `true` ; 且 <xref:System.Xml.XmlWriterSettings.OmitXmlDeclaration%2A?displayProperty=nameWithType> 为 `true` 。</span><span class="sxs-lookup"><span data-stu-id="699a7-170">That <xref:System.Xml.XmlWriter> is created by using the following settings: <xref:System.Xml.XmlWriterSettings.Indent%2A?displayProperty=nameWithType> is `true`; and <xref:System.Xml.XmlWriterSettings.OmitXmlDeclaration%2A?displayProperty=nameWithType> is `true`.</span></span>  
  
 <span data-ttu-id="699a7-171"><xref:System.Xml.XmlReader.Create%2A>如果您将字符串处理到流中或更专门专用于 XAML 的读取器，则返回的字符串可通过方法加载为有效的 XML。</span><span class="sxs-lookup"><span data-stu-id="699a7-171">The returned string can be loaded as valid XML through the <xref:System.Xml.XmlReader.Create%2A> method if you processed the string into a stream, or into a reader more specifically dedicated for XAML.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public static void Save (System.IO.Stream stream, object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Save(class System.IO.Stream stream, object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlServices.Save(System.IO.Stream,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Save (stream As Stream, instance As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Save(System::IO::Stream ^ stream, System::Object ^ instance);" />
      <MemberSignature Language="F#" Value="static member Save : System.IO.Stream * obj -&gt; unit" Usage="System.Xaml.XamlServices.Save (stream, instance)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="instance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="stream"><span data-ttu-id="699a7-172">目标流。</span><span class="sxs-lookup"><span data-stu-id="699a7-172">The destination stream.</span></span></param>
        <param name="instance"><span data-ttu-id="699a7-173">要处理的对象关系图的根。</span><span class="sxs-lookup"><span data-stu-id="699a7-173">The root of the object graph to process.</span></span></param>
        <summary><span data-ttu-id="699a7-174">将提供的对象图处理为 XAML 节点表示形式，然后再处理为输出流以便进行序列化。</span><span class="sxs-lookup"><span data-stu-id="699a7-174">Processes a provided object graph into a XAML node representation and then into an output stream for serialization.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="699a7-175"><xref:System.Xaml.XamlServices> 如果要处理 Windows Presentation Foundation (WPF) 类型或基于 WPF 的类型，则不推荐使用 XAML 读取或 XAML 编写 API 集。</span><span class="sxs-lookup"><span data-stu-id="699a7-175"><xref:System.Xaml.XamlServices> is not the recommended XAML reading or XAML writing API set if you are processing Windows Presentation Foundation (WPF) types, or types based on WPF.</span></span> <span data-ttu-id="699a7-176">对于 WPF 用法，请使用 <xref:System.Windows.Markup.XamlReader?displayProperty=nameWithType> 读取或加载 xaml，并使用 <xref:System.Windows.Markup.XamlWriter?displayProperty=nameWithType> 来编写回调 xaml。</span><span class="sxs-lookup"><span data-stu-id="699a7-176">For WPF usage, use <xref:System.Windows.Markup.XamlReader?displayProperty=nameWithType> for reading or loading XAML; and <xref:System.Windows.Markup.XamlWriter?displayProperty=nameWithType> for writing back XAML.</span></span> <span data-ttu-id="699a7-177">这些类 <xref:System.Xaml> 在其实现中内部使用 api; 但是，它们还提供对影响 XAML 读和写性质的 WPF 特定概念的支持，如依赖属性的优化。</span><span class="sxs-lookup"><span data-stu-id="699a7-177">These classes use <xref:System.Xaml> APIs internally in their implementation; however, they also provide support for WPF-specific concepts that influence the nature of XAML reading and writing, such as optimizations for dependency properties.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="699a7-178"><paramref name="stream" /> 输入为 <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="699a7-178"><paramref name="stream" /> input is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public static void Save (System.IO.TextWriter writer, object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Save(class System.IO.TextWriter writer, object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlServices.Save(System.IO.TextWriter,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Save (writer As TextWriter, instance As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Save(System::IO::TextWriter ^ writer, System::Object ^ instance);" />
      <MemberSignature Language="F#" Value="static member Save : System.IO.TextWriter * obj -&gt; unit" Usage="System.Xaml.XamlServices.Save (writer, instance)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.IO.TextWriter" />
        <Parameter Name="instance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="699a7-179">写入输出的 <see cref="T:System.IO.TextWriter" />。</span><span class="sxs-lookup"><span data-stu-id="699a7-179">The <see cref="T:System.IO.TextWriter" /> that writes the output.</span></span></param>
        <param name="instance"><span data-ttu-id="699a7-180">要处理的对象关系图的根。</span><span class="sxs-lookup"><span data-stu-id="699a7-180">The root of the object graph to process.</span></span></param>
        <summary><span data-ttu-id="699a7-181">将提供的对象图处理为 XAML 节点表示形式，然后处理为将进入所提供 <see cref="T:System.IO.TextWriter" /> 的输出。</span><span class="sxs-lookup"><span data-stu-id="699a7-181">Processes a provided object graph into a XAML node representation and then into an output that goes to the provided <see cref="T:System.IO.TextWriter" />.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="699a7-182"><paramref name="writer" /> 输入为 <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="699a7-182"><paramref name="writer" /> input is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public static void Save (string fileName, object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Save(string fileName, object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlServices.Save(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Save (fileName As String, instance As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Save(System::String ^ fileName, System::Object ^ instance);" />
      <MemberSignature Language="F#" Value="static member Save : string * obj -&gt; unit" Usage="System.Xaml.XamlServices.Save (fileName, instance)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
        <Parameter Name="instance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="fileName"><span data-ttu-id="699a7-183">要将输出写入其中的文件的名称和位置。</span><span class="sxs-lookup"><span data-stu-id="699a7-183">The name and location of the file to write the output to.</span></span></param>
        <param name="instance"><span data-ttu-id="699a7-184">要处理的对象关系图的根。</span><span class="sxs-lookup"><span data-stu-id="699a7-184">The root of the object graph to process.</span></span></param>
        <summary><span data-ttu-id="699a7-185">将提供的对象图处理为 XAML 节点表示形式，然后将其写入所提供位置的输出文件。</span><span class="sxs-lookup"><span data-stu-id="699a7-185">Processes a provided object graph into a XAML node representation and then writes it to an output file at a provided location.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="699a7-186">参数值用作对的 `fileName` 调用的 `outputFileName` 输入 <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> ，后者将创建 <xref:System.Xml.XmlWriter> 作为方法调用的一部分。</span><span class="sxs-lookup"><span data-stu-id="699a7-186">The `fileName` parameter value is used as the `outputFileName` input for a call to <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType>, which creates a <xref:System.Xml.XmlWriter> as part of the method call.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="699a7-187"><paramref name="fileName" /> 是一个空字符串。</span><span class="sxs-lookup"><span data-stu-id="699a7-187"><paramref name="fileName" /> is an empty string.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="699a7-188"><paramref name="fileName" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="699a7-188"><paramref name="fileName" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public static void Save (System.Xaml.XamlWriter writer, object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Save(class System.Xaml.XamlWriter writer, object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlServices.Save(System.Xaml.XamlWriter,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Save (writer As XamlWriter, instance As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Save(System::Xaml::XamlWriter ^ writer, System::Object ^ instance);" />
      <MemberSignature Language="F#" Value="static member Save : System.Xaml.XamlWriter * obj -&gt; unit" Usage="System.Xaml.XamlServices.Save (writer, instance)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xaml.XamlWriter" />
        <Parameter Name="instance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="699a7-189">要使用的 <see cref="T:System.Xaml.XamlWriter" /> 实现。</span><span class="sxs-lookup"><span data-stu-id="699a7-189">The <see cref="T:System.Xaml.XamlWriter" /> implementation to use.</span></span></param>
        <param name="instance"><span data-ttu-id="699a7-190">要处理的对象关系图的根。</span><span class="sxs-lookup"><span data-stu-id="699a7-190">The root of the object graph to process.</span></span></param>
        <summary><span data-ttu-id="699a7-191">将提供的对象图处理为 XAML 节点表示形式，然后将其写入提供的 XAML 编写器。</span><span class="sxs-lookup"><span data-stu-id="699a7-191">Processes a provided object graph into a XAML node representation and then writes it to the provided XAML writer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="699a7-192">通常，只能在以下情况下使用此签名：</span><span class="sxs-lookup"><span data-stu-id="699a7-192">You should typically use this signature only in the following cases:</span></span>  
  
-   <span data-ttu-id="699a7-193">你已定义自己的实现 <xref:System.Xaml.XamlWriter> 。</span><span class="sxs-lookup"><span data-stu-id="699a7-193">You defined your own implementation of a <xref:System.Xaml.XamlWriter>.</span></span>  
  
-   <span data-ttu-id="699a7-194">你为指定的设置 <xref:System.Xaml.XamlWriter> 与默认设置不同。</span><span class="sxs-lookup"><span data-stu-id="699a7-194">You specified settings for the <xref:System.Xaml.XamlWriter> that differ from the default settings.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="699a7-195"><paramref name="writer" /> 输入为 <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="699a7-195"><paramref name="writer" /> input is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public static void Save (System.Xml.XmlWriter writer, object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Save(class System.Xml.XmlWriter writer, object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlServices.Save(System.Xml.XmlWriter,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Save (writer As XmlWriter, instance As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Save(System::Xml::XmlWriter ^ writer, System::Object ^ instance);" />
      <MemberSignature Language="F#" Value="static member Save : System.Xml.XmlWriter * obj -&gt; unit" Usage="System.Xaml.XamlServices.Save (writer, instance)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
        <Parameter Name="instance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="699a7-196">要使用的 <see cref="T:System.Xml.XmlWriter" /> 实现。</span><span class="sxs-lookup"><span data-stu-id="699a7-196">The <see cref="T:System.Xml.XmlWriter" /> implementation to use.</span></span></param>
        <param name="instance"><span data-ttu-id="699a7-197">要处理的对象关系图的根。</span><span class="sxs-lookup"><span data-stu-id="699a7-197">The root of the object graph to process.</span></span></param>
        <summary><span data-ttu-id="699a7-198">将提供的对象图处理为 XAML 节点表示形式，然后将其写入提供的 <see cref="T:System.Xml.XmlWriter" />。</span><span class="sxs-lookup"><span data-stu-id="699a7-198">Processes a provided object graph into a XAML node representation and then writes it to the provided <see cref="T:System.Xml.XmlWriter" />.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="699a7-199"><paramref name="writer" /> 输入为 <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="699a7-199"><paramref name="writer" /> input is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Transform">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="699a7-200">连接 <see cref="T:System.Xaml.XamlReader" /> 和 <see cref="T:System.Xaml.XamlWriter" /> 以便立即使用公共 XAML 节点集。</span><span class="sxs-lookup"><span data-stu-id="699a7-200">Connects a <see cref="T:System.Xaml.XamlReader" /> and a <see cref="T:System.Xaml.XamlWriter" /> in order to use a common XAML node set intermediary.</span></span> <span data-ttu-id="699a7-201">可能会转换内容，具体情况视所提供的读取器和编写器的类型而定。</span><span class="sxs-lookup"><span data-stu-id="699a7-201">Potentially transforms the content, depending on the types of readers and writers that are provided.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public static void Transform (System.Xaml.XamlReader xamlReader, System.Xaml.XamlWriter xamlWriter);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Transform(class System.Xaml.XamlReader xamlReader, class System.Xaml.XamlWriter xamlWriter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlServices.Transform(System.Xaml.XamlReader,System.Xaml.XamlWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Transform (xamlReader As XamlReader, xamlWriter As XamlWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Transform(System::Xaml::XamlReader ^ xamlReader, System::Xaml::XamlWriter ^ xamlWriter);" />
      <MemberSignature Language="F#" Value="static member Transform : System.Xaml.XamlReader * System.Xaml.XamlWriter -&gt; unit" Usage="System.Xaml.XamlServices.Transform (xamlReader, xamlWriter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xamlReader" Type="System.Xaml.XamlReader" />
        <Parameter Name="xamlWriter" Type="System.Xaml.XamlWriter" />
      </Parameters>
      <Docs>
        <param name="xamlReader"><span data-ttu-id="699a7-202">要使用的 <see cref="T:System.Xaml.XamlReader" /> 实现。</span><span class="sxs-lookup"><span data-stu-id="699a7-202">The <see cref="T:System.Xaml.XamlReader" /> implementation to use.</span></span></param>
        <param name="xamlWriter"><span data-ttu-id="699a7-203">要使用的 <see cref="T:System.Xaml.XamlWriter" />。</span><span class="sxs-lookup"><span data-stu-id="699a7-203">The <see cref="T:System.Xaml.XamlWriter" /> to use.</span></span></param>
        <summary><span data-ttu-id="699a7-204">连接 <see cref="T:System.Xaml.XamlReader" /> 和 <see cref="T:System.Xaml.XamlWriter" /> 以立即使用公共 XAML 节点集。</span><span class="sxs-lookup"><span data-stu-id="699a7-204">Connects a <see cref="T:System.Xaml.XamlReader" /> and a <see cref="T:System.Xaml.XamlWriter" /> to use a common XAML node set intermediary.</span></span> <span data-ttu-id="699a7-205">可能会转换内容，具体情况视所提供的读取器和编写器的类型而定。</span><span class="sxs-lookup"><span data-stu-id="699a7-205">Potentially transforms the content, depending on the types of readers and writers that are provided.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="699a7-206">此方法是围绕的包装 <xref:System.Xaml.XamlServices.Transform%28System.Xaml.XamlReader%2CSystem.Xaml.XamlWriter%2CSystem.Boolean%29> ，其中 `closeWriter` 指定为 `true` 。</span><span class="sxs-lookup"><span data-stu-id="699a7-206">This method is a wrapper around <xref:System.Xaml.XamlServices.Transform%28System.Xaml.XamlReader%2CSystem.Xaml.XamlWriter%2CSystem.Boolean%29>, where `closeWriter` is specified as `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="699a7-207"><paramref name="xamlReader" /> 或 <paramref name="xamlWriter" /> 输入为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="699a7-207"><paramref name="xamlReader" /> or <paramref name="xamlWriter" /> input is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Xaml.XamlException"><span data-ttu-id="699a7-208">XAML 架构上下文在提供的 <paramref name="xamlReader" /> 和 <paramref name="xamlWriter" /> 之间不匹配。</span><span class="sxs-lookup"><span data-stu-id="699a7-208">The XAML schema context does not match between the provided <paramref name="xamlReader" /> and <paramref name="xamlWriter" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public static void Transform (System.Xaml.XamlReader xamlReader, System.Xaml.XamlWriter xamlWriter, bool closeWriter);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Transform(class System.Xaml.XamlReader xamlReader, class System.Xaml.XamlWriter xamlWriter, bool closeWriter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlServices.Transform(System.Xaml.XamlReader,System.Xaml.XamlWriter,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Transform (xamlReader As XamlReader, xamlWriter As XamlWriter, closeWriter As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Transform(System::Xaml::XamlReader ^ xamlReader, System::Xaml::XamlWriter ^ xamlWriter, bool closeWriter);" />
      <MemberSignature Language="F#" Value="static member Transform : System.Xaml.XamlReader * System.Xaml.XamlWriter * bool -&gt; unit" Usage="System.Xaml.XamlServices.Transform (xamlReader, xamlWriter, closeWriter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xamlReader" Type="System.Xaml.XamlReader" />
        <Parameter Name="xamlWriter" Type="System.Xaml.XamlWriter" />
        <Parameter Name="closeWriter" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="xamlReader"><span data-ttu-id="699a7-209">要使用的 <see cref="T:System.Xaml.XamlReader" /> 实现。</span><span class="sxs-lookup"><span data-stu-id="699a7-209">The <see cref="T:System.Xaml.XamlReader" /> implementation to use.</span></span></param>
        <param name="xamlWriter"><span data-ttu-id="699a7-210">要使用的 <see cref="T:System.Xaml.XamlWriter" />。</span><span class="sxs-lookup"><span data-stu-id="699a7-210">The <see cref="T:System.Xaml.XamlWriter" /> to use.</span></span></param>
        <param name="closeWriter"><span data-ttu-id="699a7-211">设置为 <see langword="true" /> 以在调用完成之后关闭编写器；设置为 <see langword="false" /> 以使编写器在最后一个写入的位置保持活动状态。</span><span class="sxs-lookup"><span data-stu-id="699a7-211"><see langword="true" /> to close the writer after the call is complete; <see langword="false" /> to leave the writer active at the last written position.</span></span></param>
        <summary><span data-ttu-id="699a7-212">连接 <see cref="T:System.Xaml.XamlReader" /> 和 <see cref="T:System.Xaml.XamlWriter" /> 以立即使用公共 XAML 节点集。</span><span class="sxs-lookup"><span data-stu-id="699a7-212">Connects a <see cref="T:System.Xaml.XamlReader" /> and a <see cref="T:System.Xaml.XamlWriter" /> to use a common XAML node set intermediary.</span></span> <span data-ttu-id="699a7-213">可能会转换内容，具体情况视所提供的读取器和编写器的类型而定。</span><span class="sxs-lookup"><span data-stu-id="699a7-213">Potentially transforms the content, depending on the types of readers and writers that are provided.</span></span> <span data-ttu-id="699a7-214">提供一个参数，指定是否在调用完成之后关闭编写器。</span><span class="sxs-lookup"><span data-stu-id="699a7-214">Provides a parameter for specifying whether to close the writer after the call is completed.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="699a7-215"><paramref name="xamlReader" /> 或 <paramref name="xamlWriter" /> 输入为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="699a7-215"><paramref name="xamlReader" /> or <paramref name="xamlWriter" /> input is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Xaml.XamlException"><span data-ttu-id="699a7-216">XAML 架构上下文在提供的 <paramref name="xamlReader" /> 和 <paramref name="xamlWriter" /> 之间不匹配。</span><span class="sxs-lookup"><span data-stu-id="699a7-216">The XAML schema context does not match between the provided <paramref name="xamlReader" /> and <paramref name="xamlWriter" />.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
