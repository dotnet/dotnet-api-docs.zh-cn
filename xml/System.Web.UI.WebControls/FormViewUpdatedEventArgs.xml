<Type Name="FormViewUpdatedEventArgs" FullName="System.Web.UI.WebControls.FormViewUpdatedEventArgs">
  <Metadata><Meta Name="ms.openlocfilehash" Value="f9ccf3e15c16341531659ffe79c632f418cbe7fd" /><Meta Name="ms.sourcegitcommit" Value="11d168140aa8fade0768c2a9dde3e3bcacfdfb7d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="05/27/2020" /><Meta Name="ms.locfileid" Value="83978633" /></Metadata><TypeSignature Language="C#" Value="public class FormViewUpdatedEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit FormViewUpdatedEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.FormViewUpdatedEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class FormViewUpdatedEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class FormViewUpdatedEventArgs : EventArgs" />
  <TypeSignature Language="F#" Value="type FormViewUpdatedEventArgs = class&#xA;    inherit EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>为 <see cref="E:System.Web.UI.WebControls.FormView.ItemUpdated" /> 事件提供数据。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 当单击控件中的 "更新" 按钮（其 `CommandName` 属性设置为 "Update"）时，<xref:System.Web.UI.WebControls.FormView> 控件将引发 <xref:System.Web.UI.WebControls.FormView.ItemUpdated> 事件，但在 <xref:System.Web.UI.WebControls.FormView> 控件更新记录后。 这使你可以提供一种事件处理方法，该方法执行自定义例程，如在此事件发生时检查更新操作的结果。  
  
 将 <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs> 对象传递到事件处理方法，该方法允许你确定受影响的记录数以及可能已发生的任何异常。 若要确定受更新操作影响的记录数，请使用 <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.AffectedRows%2A> 属性。 使用 <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.Exception%2A> 属性来确定是否发生了异常。 还可以通过设置 <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.ExceptionHandled%2A> 属性，指示是否已在事件处理方法中处理异常。 如果需要访问已更新记录的原始键字段值，请使用 <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.Keys%2A> 属性。 可以使用 <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.OldValues%2A> 属性访问原始的非键字段值。 已更新的值（如果允许用户编辑关键字字段，则包括更新的密钥字段值）使用 <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.NewValues%2A> 属性访问。  
  
 默认情况下，<xref:System.Web.UI.WebControls.FormView> 控件返回到更新操作后 <xref:System.Web.UI.WebControls.FormView.DefaultMode%2A> 属性指定的模式。 当处理在更新操作过程中发生的异常时，可以通过将 <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.KeepInEditMode%2A> 属性设置为 `true`，使 <xref:System.Web.UI.WebControls.FormView> 控件处于编辑模式。  
  
 有关如何处理事件的详细信息，请参阅[处理和引发事件](/dotnet/standard/events/)。  
  
 有关 <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs> 类的实例的初始属性值列表，请参见 <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.%23ctor%2A> 构造函数。  
  
   
  
## Examples  
 下面的示例演示如何使用传递到 <xref:System.Web.UI.WebControls.FormView.ItemUpdated> 事件的事件处理方法的 <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs> 对象来确定是否在更新操作期间发生了异常。  
  
 [!code-aspx-csharp[FormViewUpdatedEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewUpdatedEventArgs/CS/formviewupdatedeventargscs.aspx#1)]
 [!code-aspx-vb[FormViewUpdatedEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewUpdatedEventArgs/VB/formviewupdatedeventargsvb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.FormView" />
    <altmember cref="T:System.Web.UI.WebControls.FormViewUpdatedEventHandler" />
    <altmember cref="E:System.Web.UI.WebControls.FormView.ItemUpdated" />
    <altmember cref="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.AffectedRows" />
    <altmember cref="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.Exception" />
    <altmember cref="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.ExceptionHandled" />
    <altmember cref="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.KeepInEditMode" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FormViewUpdatedEventArgs (int affectedRows, Exception e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 affectedRows, class System.Exception e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormViewUpdatedEventArgs.#ctor(System.Int32,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (affectedRows As Integer, e As Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FormViewUpdatedEventArgs(int affectedRows, Exception ^ e);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.FormViewUpdatedEventArgs : int * Exception -&gt; System.Web.UI.WebControls.FormViewUpdatedEventArgs" Usage="new System.Web.UI.WebControls.FormViewUpdatedEventArgs (affectedRows, e)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="affectedRows" Type="System.Int32" />
        <Parameter Name="e" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="affectedRows">受更新操作影响的行的数目。</param>
        <param name="e">一个 <see cref="T:System.Exception" />，表示在执行更新操作时引发的异常。 如果未引发异常，则将 <see langword="null" /> 用于此参数。</param>
        <summary>初始化 <see cref="T:System.Web.UI.WebControls.FormViewUpdatedEventArgs" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用此构造函数初始化 <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs> 类的新实例。  
  
 下表显示了 <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs> 类的某个实例的初始属性值。  
  
|属性|初始值|  
|--------------|-------------------|  
|<xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.AffectedRows%2A>|`affectedRows` 参数的值。|  
|<xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.Exception%2A>|`e` 参数中包含的 <xref:System.Exception?displayProperty=nameWithType> 对象。|  
|<xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.ExceptionHandled%2A>|初始化为 `false`。|  
|<xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.KeepInEditMode%2A>|初始化为 `false`。|  
  
> [!NOTE]
>  此构造函数主要由控件开发人员在引发事件时使用。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormView" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewUpdatedEventHandler" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemUpdated" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.AffectedRows" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.Exception" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.ExceptionHandled" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.KeepInEditMode" />
      </Docs>
    </Member>
    <Member MemberName="AffectedRows">
      <MemberSignature Language="C#" Value="public int AffectedRows { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 AffectedRows" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.AffectedRows" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AffectedRows As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int AffectedRows { int get(); };" />
      <MemberSignature Language="F#" Value="member this.AffectedRows : int" Usage="System.Web.UI.WebControls.FormViewUpdatedEventArgs.AffectedRows" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取受更新操作影响的行数。</summary>
        <value>受更新操作影响的行的数目。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用 <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.AffectedRows%2A> 属性来确定受更新操作影响的记录数。 此属性通常用于验证在下列情况下是否更新了正确的记录数：  
  
-   验证是否只更新了单个记录。 有时，编写不当的 update 语句可以更新多个记录。  
  
-   验证在不引发异常的更新操作过程中发生错误时是否已更新记录。  
  
-   验证在支持冲突检测的数据源控件（乐观并发检查）（如 <xref:System.Web.UI.WebControls.SqlDataSource> 和 <xref:System.Web.UI.WebControls.ObjectDataSource> 控件）的情况下是否更新了记录，其 <xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection%2A> 属性设置为 `ConflictOptions.CompareAllValues` 枚举值。 在此设置下，可能无法更新已由其他用户同时修改的记录。  
  
   
  
## Examples  
 下面的示例演示如何使用 <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.AffectedRows%2A> 属性来验证是否已更新记录。  
  
 [!code-aspx-csharp[FormViewUpdatedEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewUpdatedEventArgs/CS/formviewupdatedeventargscs.aspx#1)]
 [!code-aspx-vb[FormViewUpdatedEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewUpdatedEventArgs/VB/formviewupdatedeventargsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormView" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewUpdatedEventHandler" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemUpdated" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.Exception" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.ExceptionHandled" />
      </Docs>
    </Member>
    <Member MemberName="Exception">
      <MemberSignature Language="C#" Value="public Exception Exception { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Exception Exception" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.Exception" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Exception As Exception" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Exception ^ Exception { Exception ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Exception : Exception" Usage="System.Web.UI.WebControls.FormViewUpdatedEventArgs.Exception" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取更新操作过程中引发的异常（如果有）。</summary>
        <value>一个 <see cref="T:System.Exception" /> 对象，表示更新操作过程中引发的异常。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用 <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.Exception%2A> 属性可确定在更新操作过程中引发的异常（如果有）。 如果未引发异常，此属性将返回 `null`。  
  
> [!NOTE]
>  如果引发了异常，并且您决定在事件处理程序中处理异常，请确保将 <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.ExceptionHandled%2A> 属性设置为 `true`;否则，<xref:System.Web.UI.WebControls.FormView> 控件将再次引发异常。  
  
   
  
## Examples  
 下面的示例演示如何使用 <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.Exception%2A> 属性来确定是否在更新操作过程中发生了异常。  
  
 [!code-aspx-csharp[FormViewUpdatedEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewUpdatedEventArgs/CS/formviewupdatedeventargscs.aspx#1)]
 [!code-aspx-vb[FormViewUpdatedEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewUpdatedEventArgs/VB/formviewupdatedeventargsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormView" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewUpdatedEventHandler" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemUpdated" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.AffectedRows" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.ExceptionHandled" />
      </Docs>
    </Member>
    <Member MemberName="ExceptionHandled">
      <MemberSignature Language="C#" Value="public bool ExceptionHandled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ExceptionHandled" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.ExceptionHandled" />
      <MemberSignature Language="VB.NET" Value="Public Property ExceptionHandled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ExceptionHandled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ExceptionHandled : bool with get, set" Usage="System.Web.UI.WebControls.FormViewUpdatedEventArgs.ExceptionHandled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示在更新操作过程中所引发的异常是否已在事件处理程序中得到处理。</summary>
        <value>如果异常已在事件处理程序中得到处理，则为 <see langword="true" />；否则为 <see langword="false" />。 默认为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 在更新操作过程中引发异常时，请使用 <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.ExceptionHandled%2A> 属性指示是否已在事件处理程序中处理异常。 当此属性设置为 `true`时，异常被视为已处理，且不会被 <xref:System.Web.UI.WebControls.FormView> 控件再次引发。 如果将此属性设置为 `false`，将再次引发异常。 若要确定引发的异常，请使用 <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.Exception%2A> 属性。  
  
   
  
## Examples  
 下面的示例演示如何使用 <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.ExceptionHandled%2A> 属性来指示在事件处理程序中已处理异常。  
  
 [!code-aspx-csharp[FormViewUpdatedEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewUpdatedEventArgs/CS/formviewupdatedeventargscs.aspx#1)]
 [!code-aspx-vb[FormViewUpdatedEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewUpdatedEventArgs/VB/formviewupdatedeventargsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormView" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewUpdatedEventHandler" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemUpdated" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.AffectedRows" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.Exception" />
      </Docs>
    </Member>
    <Member MemberName="KeepInEditMode">
      <MemberSignature Language="C#" Value="public bool KeepInEditMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool KeepInEditMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.KeepInEditMode" />
      <MemberSignature Language="VB.NET" Value="Public Property KeepInEditMode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool KeepInEditMode { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.KeepInEditMode : bool with get, set" Usage="System.Web.UI.WebControls.FormViewUpdatedEventArgs.KeepInEditMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示在更新操作完成后 <see cref="T:System.Web.UI.WebControls.FormView" /> 控件是否仍保持在编辑模式下。</summary>
        <value>如果在更新操作之后仍处于编辑模式，则为 <see langword="true" />；否则为 <see langword="false" />。 默认为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 默认情况下，<xref:System.Web.UI.WebControls.FormView> 控件返回到更新操作后 <xref:System.Web.UI.WebControls.FormView.DefaultMode%2A> 属性指定的模式。 使用 <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.KeepInEditMode%2A> 属性指定 <xref:System.Web.UI.WebControls.FormView> 控件是否应保持在编辑模式下。 若要使 <xref:System.Web.UI.WebControls.FormView> 控件处于编辑模式，请将此属性设置为 `true`。  
  
> [!NOTE]
>  此属性仅在发生某种情况（如引发的异常）时才应使用，此类要求控件的行为方式与正常情况不同。 如果 <xref:System.Web.UI.WebControls.FormView> 控件在默认情况下需要保持编辑模式，请改为设置 <xref:System.Web.UI.WebControls.FormView.DefaultMode%2A> 属性。  
  
   
  
## Examples  
 下面的示例演示如何使用 <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.KeepInEditMode%2A> 属性在发生异常时将 <xref:System.Web.UI.WebControls.FormView> 控件保持在编辑模式下。  
  
 [!code-aspx-csharp[FormViewUpdatedEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewUpdatedEventArgs/CS/formviewupdatedeventargscs.aspx#1)]
 [!code-aspx-vb[FormViewUpdatedEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewUpdatedEventArgs/VB/formviewupdatedeventargsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormView" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewUpdatedEventHandler" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemUpdated" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.DefaultMode" />
      </Docs>
    </Member>
    <Member MemberName="Keys">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.IOrderedDictionary Keys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.IOrderedDictionary Keys" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.Keys" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Keys As IOrderedDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Specialized::IOrderedDictionary ^ Keys { System::Collections::Specialized::IOrderedDictionary ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Keys : System.Collections.Specialized.IOrderedDictionary" Usage="System.Web.UI.WebControls.FormViewUpdatedEventArgs.Keys" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.IOrderedDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个字典，该字典包含已更新记录的原始键字段的名称/值对。</summary>
        <value><see cref="T:System.Collections.Specialized.IOrderedDictionary" /> 包含一个字典，该字典由已更新记录的原始键字段的名称/值对组成。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.Keys%2A> 属性包含 <xref:System.Web.UI.WebControls.FormView> 控件的 <xref:System.Web.UI.WebControls.FormView.DataKeyNames%2A> 属性中列出的键字段的原始值。 使用 <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.Keys%2A> 属性访问已更新记录的键字段的值。 例如，你可以使用这些值来记录已更新的记录。  
  
> [!NOTE]
>  如果允许用户更新键字段的值，则 <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.Keys%2A> 属性将包含原始键字段值。 更新的值存储在 <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.NewValues%2A> 属性中。  
  
 <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.Keys%2A> 属性返回实现 <xref:System.Collections.Specialized.IOrderedDictionary?displayProperty=nameWithType> 接口的 <xref:System.Collections.Specialized.OrderedDictionary> 对象。 <xref:System.Collections.Specialized.OrderedDictionary> 对象包含 <xref:System.Collections.DictionaryEntry?displayProperty=nameWithType> 对象，这些对象表示已更新记录的字段。 若要访问字段名称，请使用 <xref:System.Collections.Specialized.OrderedDictionary> 对象的 <xref:System.Collections.Specialized.OrderedDictionary.Keys%2A> 属性。 同样，可以使用 <xref:System.Collections.Specialized.OrderedDictionary.Values%2A> 属性访问字段值。  
  
> [!NOTE]
>  作为快捷方式，还可以使用 <xref:System.Collections.Specialized.OrderedDictionary> 对象的索引器直接访问字段值。 依赖于字段顺序的数据源控件（如 <xref:System.Web.UI.WebControls.AccessDataSource>）只能通过索引访问字段值。  
  
   
  
## Examples  
 下面的示例演示如何使用 <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.Keys%2A> 属性访问已更新记录的键字段的值。  
  
 [!code-aspx-csharp[FormViewUpdatedEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewUpdatedEventArgs/CS/formviewupdatedeventargscs.aspx#1)]
 [!code-aspx-vb[FormViewUpdatedEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewUpdatedEventArgs/VB/formviewupdatedeventargsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormView" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewUpdatedEventHandler" />
        <altmember cref="T:System.Collections.Specialized.IOrderedDictionary" />
        <altmember cref="T:System.Collections.Specialized.OrderedDictionary" />
        <altmember cref="T:System.Collections.DictionaryEntry" />
        <altmember cref="P:System.Collections.Specialized.OrderedDictionary.Keys" />
        <altmember cref="P:System.Collections.Specialized.OrderedDictionary.Values" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemUpdated" />
      </Docs>
    </Member>
    <Member MemberName="NewValues">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.IOrderedDictionary NewValues { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.IOrderedDictionary NewValues" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.NewValues" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NewValues As IOrderedDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Specialized::IOrderedDictionary ^ NewValues { System::Collections::Specialized::IOrderedDictionary ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.NewValues : System.Collections.Specialized.IOrderedDictionary" Usage="System.Web.UI.WebControls.FormViewUpdatedEventArgs.NewValues" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.IOrderedDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个字典，该字典包含已更新记录的新字段的名称/值对。</summary>
        <value>一个 <see cref="T:System.Collections.Specialized.IOrderedDictionary" />，包含被更新记录的新字段名称/值对字典。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用 <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.NewValues%2A> 属性访问已更新记录的新字段值。 例如，你可以使用这些值来记录已更新的记录。  
  
> [!NOTE]
>  如果允许用户更新键字段的值，则 <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.Keys%2A> 属性将包含原始键字段值。 更新的值存储在 <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.NewValues%2A> 属性中。  
  
 <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.NewValues%2A> 属性返回实现 <xref:System.Collections.Specialized.IOrderedDictionary?displayProperty=nameWithType> 接口的 <xref:System.Collections.Specialized.OrderedDictionary> 对象。 <xref:System.Collections.Specialized.OrderedDictionary> 对象包含 <xref:System.Collections.DictionaryEntry?displayProperty=nameWithType> 对象，这些对象表示已更新记录的字段。 若要访问字段名称，请使用 <xref:System.Collections.Specialized.OrderedDictionary> 对象的 <xref:System.Collections.Specialized.OrderedDictionary.Keys%2A> 属性。 同样，可以使用 <xref:System.Collections.Specialized.OrderedDictionary.Values%2A> 属性访问字段值。  
  
> [!NOTE]
>  作为快捷方式，还可以使用 <xref:System.Collections.Specialized.OrderedDictionary> 对象的索引器直接访问字段值。 依赖于字段顺序的数据源控件（如 <xref:System.Web.UI.WebControls.AccessDataSource>）只能通过索引访问字段值。  
  
   
  
## Examples  
 下面的示例演示如何使用 <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.NewValues%2A> 属性访问用户为已更新记录的非键字段输入的新值。  
  
 [!code-aspx-csharp[FormViewUpdatedEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewUpdatedEventArgs/CS/formviewupdatedeventargscs.aspx#1)]
 [!code-aspx-vb[FormViewUpdatedEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewUpdatedEventArgs/VB/formviewupdatedeventargsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormView" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewInsertedEventHandler" />
        <altmember cref="T:System.Collections.Specialized.IOrderedDictionary" />
        <altmember cref="T:System.Collections.Specialized.OrderedDictionary" />
        <altmember cref="T:System.Collections.DictionaryEntry" />
        <altmember cref="P:System.Collections.Specialized.OrderedDictionary.Keys" />
        <altmember cref="P:System.Collections.Specialized.OrderedDictionary.Values" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemUpdated" />
      </Docs>
    </Member>
    <Member MemberName="OldValues">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.IOrderedDictionary OldValues { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.IOrderedDictionary OldValues" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.OldValues" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OldValues As IOrderedDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Specialized::IOrderedDictionary ^ OldValues { System::Collections::Specialized::IOrderedDictionary ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.OldValues : System.Collections.Specialized.IOrderedDictionary" Usage="System.Web.UI.WebControls.FormViewUpdatedEventArgs.OldValues" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.IOrderedDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个字典，该字典包含已更新记录的原始非键字段的名称/值对。</summary>
        <value>一个 <see cref="T:System.Collections.Specialized.IOrderedDictionary" />，包含被更新记录的原始字段名称/值对字典。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用 <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.OldValues%2A> 属性可访问已更新记录的原始非键字段值。 例如，你可以使用这些值来记录已更新的记录。 支持冲突检测（乐观并发检查）的数据源控件（如 <xref:System.Web.UI.WebControls.SqlDataSource> 和 <xref:System.Web.UI.WebControls.ObjectDataSource> 控件）在其 <xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection%2A> 属性设置为 `ConflictOptions.CompareAllValues` 时，还会在执行更新操作之前，将这些原始值与数据库中的记录进行比较。 如果记录已由其他用户同时修改，则不会更新该记录。  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.OldValues%2A> 属性不包含键字段。 如果允许用户更新键字段的值，则原始键字段值将存储在 <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.Keys%2A> 属性中。 更新的值存储在 <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.NewValues%2A> 属性中。  
  
 <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.NewValues%2A> 属性返回实现 <xref:System.Collections.Specialized.IOrderedDictionary?displayProperty=nameWithType> 接口的 <xref:System.Collections.Specialized.OrderedDictionary> 对象。 <xref:System.Collections.Specialized.OrderedDictionary> 对象包含 <xref:System.Collections.DictionaryEntry?displayProperty=nameWithType> 对象，这些对象表示已更新记录的字段。 若要访问字段名称，请使用 <xref:System.Collections.Specialized.OrderedDictionary> 对象的 <xref:System.Collections.Specialized.OrderedDictionary.Keys%2A> 属性。 同样，可以使用 <xref:System.Collections.Specialized.OrderedDictionary.Values%2A> 属性访问字段值。  
  
> [!NOTE]
>  作为快捷方式，还可以使用 <xref:System.Collections.Specialized.OrderedDictionary> 对象的索引器直接访问字段值。 依赖于字段顺序的数据源控件（如 <xref:System.Web.UI.WebControls.AccessDataSource>）只能通过索引访问字段值。  
  
   
  
## Examples  
 下面的示例演示如何使用 <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.OldValues%2A> 属性访问已更新记录的非键字段的原始值。  
  
 [!code-aspx-csharp[FormViewUpdatedEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewUpdatedEventArgs/CS/formviewupdatedeventargscs.aspx#1)]
 [!code-aspx-vb[FormViewUpdatedEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewUpdatedEventArgs/VB/formviewupdatedeventargsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormView" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewUpdatedEventHandler" />
        <altmember cref="T:System.Collections.Specialized.IOrderedDictionary" />
        <altmember cref="T:System.Collections.Specialized.OrderedDictionary" />
        <altmember cref="T:System.Collections.DictionaryEntry" />
        <altmember cref="P:System.Collections.Specialized.OrderedDictionary.Keys" />
        <altmember cref="P:System.Collections.Specialized.OrderedDictionary.Values" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemUpdated" />
      </Docs>
    </Member>
  </Members>
</Type>
