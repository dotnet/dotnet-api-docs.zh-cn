<Type Name="ButtonField" FullName="System.Web.UI.WebControls.ButtonField">
  <Metadata><Meta Name="ms.openlocfilehash" Value="9ab1599c971027ba7ce03b7419519b26ceba289b" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89989708" /></Metadata><TypeSignature Language="C#" Value="public class ButtonField : System.Web.UI.WebControls.ButtonFieldBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ButtonField extends System.Web.UI.WebControls.ButtonFieldBase" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.ButtonField" />
  <TypeSignature Language="VB.NET" Value="Public Class ButtonField&#xA;Inherits ButtonFieldBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class ButtonField : System::Web::UI::WebControls::ButtonFieldBase" />
  <TypeSignature Language="F#" Value="type ButtonField = class&#xA;    inherit ButtonFieldBase" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.ButtonFieldBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>表示数据绑定控件中以按钮形式显示的字段。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ButtonField>数据绑定控件使用类 (例如 <xref:System.Web.UI.WebControls.GridView> 和 <xref:System.Web.UI.WebControls.DetailsView>) 为显示的每个记录显示一个按钮。 <xref:System.Web.UI.WebControls.ButtonField>对象的显示方式取决于使用它的数据绑定控件。 例如， <xref:System.Web.UI.WebControls.GridView> 控件 <xref:System.Web.UI.WebControls.ButtonField> 以列的形式显示对象，而控件则将 <xref:System.Web.UI.WebControls.DetailsView> 其显示为一行。  
  
 单击按钮字段中的按钮将引发父数据绑定控件的命令事件。 通过为命令事件提供事件处理程序，可提供在单击命令按钮时要执行的自定义例程。  
  
> [!NOTE]
>  控件引发 <xref:System.Web.UI.WebControls.GridView> <xref:System.Web.UI.WebControls.GridView.RowCommand> 事件，而 <xref:System.Web.UI.WebControls.DetailsView> 控件引发 <xref:System.Web.UI.WebControls.DetailsView.ItemCommand> 事件。  
  
 若要确定引发命令事件的记录的索引，请使用 <xref:System.Web.UI.WebControls.CommandEventArgs.CommandArgument%2A> 传递到数据绑定控件的命令事件的事件参数的属性。 <xref:System.Web.UI.WebControls.ButtonField>类自动 <xref:System.Web.UI.WebControls.CommandEventArgs.CommandArgument%2A> 用适当的索引值填充属性。  
  
 若要指定要显示的按钮类型，请使用 <xref:System.Web.UI.WebControls.ButtonFieldBase.ButtonType%2A> 属性。 显示链接或命令按钮时，请使用 <xref:System.Web.UI.WebControls.ButtonField.Text%2A> 属性指定要在按钮中显示的标题。  
  
> [!NOTE]
>  如果设置了 <xref:System.Web.UI.WebControls.ButtonField.Text%2A> 属性，则中的所有按钮都将 <xref:System.Web.UI.WebControls.ButtonField> 共享相同的标题。  
  
 或者，您可以将 <xref:System.Web.UI.WebControls.ButtonField> 对象绑定到数据源中的字段。 这允许您为对象中的按钮显示不同的标题 <xref:System.Web.UI.WebControls.ButtonField> 。 指定字段中的值用于按钮的文本标题。 设置 <xref:System.Web.UI.WebControls.ButtonField.DataTextField%2A> 属性将 <xref:System.Web.UI.WebControls.ButtonField> 对象绑定到数据源中的字段。  
  
 显示图像按钮时，使用 <xref:System.Web.UI.WebControls.ButtonField.ImageUrl%2A> 属性指定要为对象中的按钮显示的图像 <xref:System.Web.UI.WebControls.ButtonField> 。  
  
> [!NOTE]
>  对象中的所有按钮 <xref:System.Web.UI.WebControls.ButtonField> 共享同一图像。  
  
 可以 <xref:System.Web.UI.WebControls.ButtonField> 通过将属性设置为来隐藏数据绑定控件中的对象 <xref:System.Web.UI.WebControls.DataControlField.Visible%2A> `false` 。  
  
 <xref:System.Web.UI.WebControls.ButtonField>对象允许您自定义其页眉和页脚部分。 若要在页眉或页脚部分显示标题，请分别设置 <xref:System.Web.UI.WebControls.DataControlField.HeaderText%2A> 或 <xref:System.Web.UI.WebControls.DataControlField.FooterText%2A> 属性。 您可以通过设置属性来显示图像，而不是在页眉节中显示文本 <xref:System.Web.UI.WebControls.DataControlField.HeaderImageUrl%2A> 。 若要隐藏对象中的标头部分 <xref:System.Web.UI.WebControls.ButtonField> ，请将 <xref:System.Web.UI.WebControls.ButtonFieldBase.ShowHeader%2A> 属性设置为 `false` 。  
  
> [!NOTE]
>  某些数据绑定控件 (例如 <xref:System.Web.UI.WebControls.GridView> 控件) 可以仅显示或隐藏控件的整个标题部分。 这些数据绑定控件不支持 <xref:System.Web.UI.WebControls.ButtonFieldBase.ShowHeader%2A> 单个按钮字段的属性。 若要显示或隐藏数据绑定控件的整个标题节 (如有) ，请使用控件的 `ShowHeader` 属性。  
  
 还可以 <xref:System.Web.UI.WebControls.ButtonField> 通过设置字段的不同部分的样式属性，自定义对象的外观 (字体颜色、背景色等) 。 下表列出了不同的样式属性。  
  
|Style 属性|的样式设置|  
|--------------------|----------------------------|  
|<xref:System.Web.UI.WebControls.DataControlField.ControlStyle%2A>|的子 Web 服务器控件 <xref:System.Web.UI.WebControls.ButtonField> 。|  
|<xref:System.Web.UI.WebControls.DataControlField.FooterStyle%2A>|的页脚部分 <xref:System.Web.UI.WebControls.ButtonField> 。|  
|<xref:System.Web.UI.WebControls.DataControlField.HeaderStyle%2A>|的标头部分 <xref:System.Web.UI.WebControls.ButtonField> 。|  
|<xref:System.Web.UI.WebControls.DataControlField.ItemStyle%2A>|中的数据项 <xref:System.Web.UI.WebControls.ButtonField> 。|  
  
   
  
## Examples  
 下面的代码示例演示如何使用 <xref:System.Web.UI.WebControls.ButtonField> 对象在控件中显示命令按钮的列 <xref:System.Web.UI.WebControls.GridView> 。  
  
 [!code-aspx-csharp[ButtonField#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonField/CS/buttonfieldcs.aspx#1)]
 [!code-aspx-vb[ButtonField#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonField/VB/buttonfieldvb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.GridView" />
    <altmember cref="P:System.Web.UI.WebControls.GridView.Columns" />
    <altmember cref="E:System.Web.UI.WebControls.GridView.RowCommand" />
    <altmember cref="P:System.Web.UI.WebControls.GridView.ShowHeader" />
    <altmember cref="T:System.Web.UI.WebControls.DetailsView" />
    <altmember cref="E:System.Web.UI.WebControls.DetailsView.ItemCommand" />
    <altmember cref="P:System.Web.UI.WebControls.DetailsView.Rows" />
    <altmember cref="T:System.Web.UI.WebControls.BoundField" />
    <altmember cref="T:System.Web.UI.WebControls.ButtonFieldBase" />
    <altmember cref="T:System.Web.UI.WebControls.CheckBoxField" />
    <altmember cref="T:System.Web.UI.WebControls.CommandField" />
    <altmember cref="T:System.Web.UI.WebControls.DataControlField" />
    <altmember cref="T:System.Web.UI.WebControls.HyperLinkField" />
    <altmember cref="T:System.Web.UI.WebControls.TemplateField" />
    <altmember cref="P:System.Web.UI.WebControls.ButtonFieldBase.ButtonType" />
    <altmember cref="P:System.Web.UI.WebControls.ButtonField.DataTextField" />
    <altmember cref="P:System.Web.UI.WebControls.ButtonField.ImageUrl" />
    <altmember cref="P:System.Web.UI.WebControls.ButtonField.Text" />
    <altmember cref="P:System.Web.UI.WebControls.DataControlField.Visible" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ButtonField ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ButtonField.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ButtonField();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Web.UI.WebControls.ButtonField" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用 <xref:System.Web.UI.WebControls.ButtonField.%23ctor%2A> 构造函数初始化类的新实例 <xref:System.Web.UI.WebControls.ButtonField> 。 当向动态创建的数据绑定控件添加字段时，通常使用此构造函数。  
  
 若要将 <xref:System.Web.UI.WebControls.ButtonField> 对象动态添加到数据绑定控件，请创建新的 <xref:System.Web.UI.WebControls.ButtonField> 对象，设置其属性，然后将其添加到数据绑定控件的字段集合。 例如，如果使用 <xref:System.Web.UI.WebControls.GridView> 控件，请将 <xref:System.Web.UI.WebControls.ButtonField> 对象添加到 <xref:System.Web.UI.WebControls.GridView.Columns%2A> 集合中。  
  
> [!NOTE]
>  虽然您可以将字段动态添加到数据绑定控件，但应静态声明字段，然后根据需要显示或隐藏字段。 静态声明所有字段可减小父数据绑定控件的视图状态的大小。  
  
   
  
## Examples  
 下面的代码示例演示如何使用 M:System.Web.UI.WebControls.ButtonField. #ctor 构造函数将 <xref:System.Web.UI.WebControls.ButtonField> 对象动态添加到 <xref:System.Web.UI.WebControls.GridView> 控件。  
  
 [!code-aspx-csharp[ButtonFieldCtor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonFieldCtor/CS/buttonfieldctorcs.aspx#1)]
 [!code-aspx-vb[ButtonFieldCtor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonFieldCtor/VB/buttonfieldctorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.GridView" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.Columns" />
        <altmember cref="T:System.Web.UI.WebControls.DetailsView" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.Fields" />
      </Docs>
    </Member>
    <Member MemberName="CommandName">
      <MemberSignature Language="C#" Value="public virtual string CommandName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CommandName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ButtonField.CommandName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CommandName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ CommandName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CommandName : string with get, set" Usage="System.Web.UI.WebControls.ButtonField.CommandName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue("")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue("")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个字符串，该字符串表示当单击 <see cref="T:System.Web.UI.WebControls.ButtonField" /> 对象中的按钮时要执行的操作。</summary>
        <value>当单击 <see cref="T:System.Web.UI.WebControls.ButtonField" /> 中的按钮时要执行的操作的名称。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用 <xref:System.Web.UI.WebControls.ButtonField.CommandName%2A> 属性将命令名称（如 `"Add"` 或 `"Remove"` ）与对象中的按钮相关联 <xref:System.Web.UI.WebControls.ButtonField> 。 可以将属性设置 <xref:System.Web.UI.WebControls.ButtonField.CommandName%2A> 为任何字符串，以标识单击命令按钮时要执行的操作。 然后，你可以在事件处理程序中以编程方式确定命令名称并执行适当的操作。  
  
> [!NOTE]
>  对象中的所有按钮 <xref:System.Web.UI.WebControls.ButtonField> 共享相同的命令名。  
  
 数据绑定控件识别某些命令名称并自动引发和处理控件的相应事件。 识别以下命令名称：  
  
-   `"Cancel"`  
  
-   `"Delete"`  
  
-   `"Edit"`  
  
-   `"Insert"`  
  
-   `"New"`  
  
-   `"Page"`  
  
-   `"Select"`  
  
-   `"Sort"`  
  
-   `"Update"`  
  
 若要调用分页，请将所包含控件的设置为，并将设置为、、、 <xref:System.Web.UI.WebControls.ButtonField.CommandName%2A> `"Page"` <xref:System.Web.UI.WebControls.Button.CommandArgument%2A> <xref:System.Web.UI.WebControls.Button> `"First"` `"Last"` `"Prev"` `"Next"` 或页码。 但是，由于 <xref:System.Web.UI.WebControls.Button.CommandArgument%2A> <xref:System.Web.UI.WebControls.ButtonField> 控件始终是整数行索引，因此 <xref:System.Web.UI.WebControls.ButtonField> 控件不适用于调用分页。 同样，可以通过将设置为来调用排序 <xref:System.Web.UI.WebControls.ButtonField.CommandName%2A> `"Sort"` ，控件的 <xref:System.Web.UI.WebControls.Button.CommandArgument%2A> 属性 <xref:System.Web.UI.WebControls.ButtonField> 始终是整数行索引。 出于此原因， <xref:System.Web.UI.WebControls.ButtonField> 控件不适合用于调用排序。 对于自定义命令名称（如 `"Add"` 和 `"Remove"` ），需要编写事件代码来检查命令名称并执行某些自定义操作。 有关详细信息，请参阅 <xref:System.Web.UI.WebControls.DataControlCommands>。  
  
> [!NOTE]
>  每个数据绑定控件都不能识别所有的命令名称。 例如， `"New"` 控件无法识别， <xref:System.Web.UI.WebControls.GridView> 并且 `"Select"` 控件无法识别 <xref:System.Web.UI.WebControls.DetailsView> 。  
  
 此属性的值存储在视图状态中。  
  
   
  
## Examples  
 下面的代码示例演示如何使用 <xref:System.Web.UI.WebControls.ButtonField.CommandName%2A> 属性为控件的对象中的按钮指定命令名 <xref:System.Web.UI.WebControls.ButtonField> <xref:System.Web.UI.WebControls.GridView> 。  
  
 [!code-aspx-csharp[ButtonField#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonField/CS/buttonfieldcs.aspx#1)]
 [!code-aspx-vb[ButtonField#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonField/VB/buttonfieldvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyProperties">
      <MemberSignature Language="C#" Value="protected override void CopyProperties (System.Web.UI.WebControls.DataControlField newField);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void CopyProperties(class System.Web.UI.WebControls.DataControlField newField) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ButtonField.CopyProperties(System.Web.UI.WebControls.DataControlField)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub CopyProperties (newField As DataControlField)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void CopyProperties(System::Web::UI::WebControls::DataControlField ^ newField);" />
      <MemberSignature Language="F#" Value="override this.CopyProperties : System.Web.UI.WebControls.DataControlField -&gt; unit" Usage="buttonField.CopyProperties newField" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newField" Type="System.Web.UI.WebControls.DataControlField" />
      </Parameters>
      <Docs>
        <param name="newField">要将当前 <see cref="T:System.Web.UI.WebControls.DataControlField" /> 的属性复制到的 <see cref="T:System.Web.UI.WebControls.ButtonField" />。</param>
        <summary>将当前 <see cref="T:System.Web.UI.WebControls.ButtonField" /> 对象的属性复制到指定的 <see cref="T:System.Web.UI.WebControls.DataControlField" /> 对象。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ButtonFieldBase.CopyProperties%2A>方法是一个帮助器方法，该方法由 <xref:System.Web.UI.WebControls.DataControlField.CloneField%2A?displayProperty=nameWithType> 方法用来将当前派生对象的属性复制 <xref:System.Web.UI.WebControls.ButtonFieldBase> 到该 <xref:System.Web.UI.WebControls.DataControlField> 方法创建的对象 <xref:System.Web.UI.WebControls.DataControlField.CloneField%2A?displayProperty=nameWithType> 。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>在 <see cref="M:System.Web.UI.WebControls.ButtonField.CopyProperties(System.Web.UI.WebControls.DataControlField)" /> 派生类中重写方法时，调用 <see cref="M:System.Web.UI.WebControls.ButtonField.CopyProperties(System.Web.UI.WebControls.DataControlField)" /> 基类的方法以确保复制对象的所有属性。</para></block>
        <altmember cref="M:System.Web.UI.WebControls.ButtonFieldBase.CopyProperties(System.Web.UI.WebControls.DataControlField)" />
      </Docs>
    </Member>
    <Member MemberName="CreateField">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.WebControls.DataControlField CreateField ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.WebControls.DataControlField CreateField() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ButtonField.CreateField" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateField () As DataControlField" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Web::UI::WebControls::DataControlField ^ CreateField();" />
      <MemberSignature Language="F#" Value="override this.CreateField : unit -&gt; System.Web.UI.WebControls.DataControlField" Usage="buttonField.CreateField " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataControlField</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>创建并返回 <see cref="T:System.Web.UI.WebControls.ButtonField" /> 类的新实例。</summary>
        <returns><see cref="T:System.Web.UI.WebControls.ButtonField" /> 类的新实例。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ButtonField.CreateField%2A>方法是一个帮助器方法，由 <xref:System.Web.UI.WebControls.DataControlField.CloneField%2A> 基类的方法用来创建一个空对象，以 <xref:System.Web.UI.WebControls.ButtonField> 将当前派生的对象的属性复制到其中 <xref:System.Web.UI.WebControls.ButtonField> 。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>重写 <see cref="M:System.Web.UI.WebControls.ButtonField.CreateField" /> 方法以返回派生类的新实例。 请勿调用基类的 <see cref="M:System.Web.UI.WebControls.ButtonField.CreateField" /> 方法。</para></block>
        <altmember cref="M:System.Web.UI.WebControls.DataControlField.CloneField" />
        <altmember cref="M:System.Web.UI.WebControls.DataControlField.CopyProperties(System.Web.UI.WebControls.DataControlField)" />
      </Docs>
    </Member>
    <Member MemberName="DataTextField">
      <MemberSignature Language="C#" Value="public virtual string DataTextField { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataTextField" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ButtonField.DataTextField" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property DataTextField As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ DataTextField { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataTextField : string with get, set" Usage="System.Web.UI.WebControls.ButtonField.DataTextField" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue("")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue("")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName Language="C#">[System.ComponentModel.TypeConverter("System.Web.UI.Design.DataSourceViewSchemaConverter, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.TypeConverter("System.Web.UI.Design.DataSourceViewSchemaConverter, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.TypeConverter("System.Web.UI.Design.DataSourceViewSchemaConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.TypeConverter("System.Web.UI.Design.DataSourceViewSchemaConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置数据字段的名称，该数据字段的值绑定到 <see cref="P:System.Web.UI.WebControls.Button.Text" /> 控件的 <see cref="T:System.Web.UI.WebControls.Button" /> 属性，此控件由 <see cref="T:System.Web.UI.WebControls.ButtonField" /> 对象呈现。</summary>
        <value>要绑定到 <see cref="T:System.Web.UI.WebControls.ButtonField" /> 的字段名称。 默认值为空字符串 ("")，表示尚未设置 <see cref="P:System.Web.UI.WebControls.ButtonField.DataTextField" /> 属性。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 当 <xref:System.Web.UI.WebControls.ButtonFieldBase.ButtonType%2A> 对象的属性 <xref:System.Web.UI.WebControls.ButtonField> 设置为 <xref:System.Web.UI.WebControls.ButtonType.Button> 或值时 <xref:System.Web.UI.WebControls.ButtonType.Link> ，请使用 <xref:System.Web.UI.WebControls.ButtonField.DataTextField%2A> 属性指定要绑定到对象的字段名称 <xref:System.Web.UI.WebControls.ButtonField> 。 然后，该字段的值将显示为对象中的按钮的文本 <xref:System.Web.UI.WebControls.ButtonField> 。 还可以通过设置属性来设置显示的文本的格式 <xref:System.Web.UI.WebControls.ButtonField.DataTextFormatString%2A> 。  
  
 <xref:System.Web.UI.WebControls.ButtonField.DataTextField%2A> <xref:System.Web.UI.WebControls.ButtonField> 您可以使用 <xref:System.Web.UI.WebControls.ButtonField.Text%2A> 属性为对象中的按钮文本显示静态文本，而不是使用属性将对象绑定到数据源中的字段 <xref:System.Web.UI.WebControls.ButtonField> 。 <xref:System.Web.UI.WebControls.ButtonField.Text%2A>使用属性时，每个按钮共享同一标题。  
  
> [!NOTE]
>  如果 <xref:System.Web.UI.WebControls.ButtonField.DataTextField%2A> <xref:System.Web.UI.WebControls.ButtonField.Text%2A> 同时设置了和属性，则 <xref:System.Web.UI.WebControls.ButtonField.DataTextField%2A> 属性优先。  
  
 此属性的值存储在视图状态中。  
  
   
  
## Examples  
 下面的代码示例演示如何使用 <xref:System.Web.UI.WebControls.ButtonField.DataTextField%2A> 属性指定要在控件的列中显示的字段 <xref:System.Web.UI.WebControls.ButtonField> <xref:System.Web.UI.WebControls.GridView> 。  
  
 [!code-aspx-csharp[ButtonFieldDataTextField#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonFieldDataTextField/CS/buttonfielddatatextfieldcs.aspx#1)]
 [!code-aspx-vb[ButtonFieldDataTextField#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonFieldDataTextField/VB/buttonfielddatatextfieldvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ButtonField.DataTextFormatString" />
        <altmember cref="P:System.Web.UI.WebControls.ButtonField.Text" />
      </Docs>
    </Member>
    <Member MemberName="DataTextFormatString">
      <MemberSignature Language="C#" Value="public virtual string DataTextFormatString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataTextFormatString" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ButtonField.DataTextFormatString" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property DataTextFormatString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ DataTextFormatString { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataTextFormatString : string with get, set" Usage="System.Web.UI.WebControls.ButtonField.DataTextFormatString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue("")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue("")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置字符串，该字符串指定字段值的显示格式。</summary>
        <value>指定字段值显示格式的格式字符串。 默认值为空字符串 ("")，表示尚无特殊格式设置应用于该字段值。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用 <xref:System.Web.UI.WebControls.ButtonField.DataTextFormatString%2A> 属性为对象中显示的值指定自定义的显示格式 <xref:System.Web.UI.WebControls.ButtonField> 。 如果 <xref:System.Web.UI.WebControls.ButtonField.DataTextFormatString%2A> 未设置该属性，则将显示字段的值而不进行任何特殊格式设置。  
  
> [!NOTE]
>  仅当设置了属性时，才应用格式字符串 <xref:System.Web.UI.WebControls.ButtonField.DataTextField%2A> 。  
  
 格式字符串可以是任何文本字符串，并且通常包含字段值的占位符。 例如，在格式字符串中 `"Item Value: {0}"` ， `{0}` 当字段显示在对象中时，占位符将被替换为该字段的值 <xref:System.Web.UI.WebControls.ButtonField> 。 格式字符串的其余部分显示为文本文本。  
  
> [!NOTE]
>  如果格式字符串不包含占位符，则数据源中的字段值不包含在最终的显示文本中。  
  
 占位符由两部分组成，用冒号分隔并括在大括号中，格式为 { `A` ： `Bxx` }。 常规示例中冒号 (前面的值 `A`) 指定从零开始的参数列表中的字段值的索引。  
  
> [!NOTE]
>  此 `A` 参数是格式设置语法的一部分。 由于每个单元格中只有一个字段值，因此此值只能设置为0。  
  
 冒号和冒号后的值是可选的。 常规示例中冒号后面的字符 (`B`) 指定显示值的格式。 下表列出了常见格式。  
  
|格式字符|说明|  
|----------------------|-----------------|  
|`C`|以货币格式显示数值。|  
|`D`|以十进制格式显示数值。|  
|`E`|以科学 (指数) 格式显示数值。|  
|`F`|以固定格式显示数值。|  
|`G`|以常规格式显示数值。|  
|`N`|以数字格式显示数值。|  
|`X`|以十六进制格式显示数值。|  
  
> [!NOTE]
>  除了之外 `X` ，格式字符不区分大小写。 `X`格式字符在指定的情况下显示十六进制字符。  
  
 常规示例中格式字符 (后面的值 `xx`) 指定要显示的有效位数或小数位数。 例如，格式字符串 `"{0:F2}"` 显示具有两个小数位的定点数。  
  
 有关设置字符串格式的详细信息，请参阅[格式设置类型](/dotnet/standard/base-types/formatting-types)。  
  
 此属性的值存储在视图状态中。  
  
   
  
## Examples  
 下面的代码示例演示如何使用 <xref:System.Web.UI.WebControls.ButtonField.DataTextFormatString%2A> 属性为字段值指定自定义的显示格式。  
  
 [!code-aspx-csharp[ButtonFieldDataTextField#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonFieldDataTextField/CS/buttonfielddatatextfieldcs.aspx#1)]
 [!code-aspx-vb[ButtonFieldDataTextField#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonFieldDataTextField/VB/buttonfielddatatextfieldvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/standard/base-types/formatting-types">设置 .NET 中类型的格式</related>
      </Docs>
    </Member>
    <Member MemberName="FormatDataTextValue">
      <MemberSignature Language="C#" Value="protected virtual string FormatDataTextValue (object dataTextValue);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string FormatDataTextValue(object dataTextValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ButtonField.FormatDataTextValue(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function FormatDataTextValue (dataTextValue As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ FormatDataTextValue(System::Object ^ dataTextValue);" />
      <MemberSignature Language="F#" Value="abstract member FormatDataTextValue : obj -&gt; string&#xA;override this.FormatDataTextValue : obj -&gt; string" Usage="buttonField.FormatDataTextValue dataTextValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataTextValue" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="dataTextValue">要格式化的字段值。</param>
        <summary>设定 <see cref="T:System.Web.UI.WebControls.ButtonField" /> 对象内的单元格中的指定字段值。</summary>
        <returns>已转换为由 <see cref="P:System.Web.UI.WebControls.ButtonField.DataTextFormatString" /> 属性指定的格式的字段值。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ButtonField.FormatDataTextValue%2A>方法是一个帮助器方法，用于将字段值转换为属性所指定的格式 <xref:System.Web.UI.WebControls.ButtonField.DataTextFormatString%2A> 。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>扩展类时 <see cref="T:System.Web.UI.WebControls.ButtonField" /> ，可以重写方法， <see cref="M:System.Web.UI.WebControls.ButtonField.FormatDataTextValue(System.Object)" /> 以执行自定义格式设置例程。</para></block>
        <altmember cref="P:System.Web.UI.WebControls.ButtonField.DataTextFormatString" />
      </Docs>
    </Member>
    <Member MemberName="ImageUrl">
      <MemberSignature Language="C#" Value="public virtual string ImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ImageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ButtonField.ImageUrl" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ImageUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ImageUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ImageUrl : string with get, set" Usage="System.Web.UI.WebControls.ButtonField.ImageUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue("")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue("")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName Language="C#">[System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.UrlProperty]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.UrlProperty&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置要为 <see cref="T:System.Web.UI.WebControls.ButtonField" /> 对象中每个按钮显示的图像。</summary>
        <value>要为 <see cref="T:System.Web.UI.WebControls.ButtonField" /> 中每个按钮显示的图像。 默认值为空字符串 ("")，表示尚未设置 <see cref="P:System.Web.UI.WebControls.ButtonField.ImageUrl" /> 属性。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果 <xref:System.Web.UI.WebControls.ButtonFieldBase.ButtonType%2A> 对象的属性 <xref:System.Web.UI.WebControls.ButtonField> 设置为 <xref:System.Web.UI.WebControls.ButtonType.Image> 值，请使用 <xref:System.Web.UI.WebControls.ButtonField.ImageUrl%2A> 属性指定要为每个按钮显示的图像。 只要客户端浏览器支持该格式，此图像可以是任何文件格式 ( .jpg、.gif、.bmp 等) 。  
  
 此属性的值存储在视图状态中。  
  
   
  
## Examples  
 下面的代码示例演示如何使用 <xref:System.Web.UI.WebControls.ButtonField.ImageUrl%2A> 属性为对象中的每个按钮指定要显示的图像 <xref:System.Web.UI.WebControls.ButtonField> 。 若要显示此代码示例，必须提供自己的映像。  
  
 [!code-aspx-csharp[ButtonFieldImageUrl#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonFieldImageUrl/CS/buttonfieldimageurlcs.aspx#1)]
 [!code-aspx-vb[ButtonFieldImageUrl#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonFieldImageUrl/VB/buttonfieldimageurlvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public override bool Initialize (bool sortingEnabled, System.Web.UI.Control control);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Initialize(bool sortingEnabled, class System.Web.UI.Control control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ButtonField.Initialize(System.Boolean,System.Web.UI.Control)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Initialize (sortingEnabled As Boolean, control As Control) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Initialize(bool sortingEnabled, System::Web::UI::Control ^ control);" />
      <MemberSignature Language="F#" Value="override this.Initialize : bool * System.Web.UI.Control -&gt; bool" Usage="buttonField.Initialize (sortingEnabled, control)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sortingEnabled" Type="System.Boolean" />
        <Parameter Name="control" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="sortingEnabled">如果启用排序，则为 <see langword="true" />；否则为 <see langword="false" />。</param>
        <param name="control">拥有 <see cref="T:System.Web.UI.WebControls.ButtonField" /> 的数据控件。</param>
        <summary>初始化当前的 <see cref="T:System.Web.UI.WebControls.ButtonField" /> 对象。</summary>
        <returns><see langword="false" />，指示控件无需重新绑定到数据。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此 <xref:System.Web.UI.WebControls.ButtonField.Initialize%2A> 方法由与对象关联的数据控件调用 <xref:System.Web.UI.WebControls.ButtonField> ，以便为该字段的实例执行基本对象初始化，然后将该字段添加到行集合中。 数据控件（如 <xref:System.Web.UI.WebControls.DetailsView> 和 <xref:System.Web.UI.WebControls.GridView> ） <xref:System.Web.UI.WebControls.DataControlField.Initialize%2A> 在 `CreateChildControls` 调用其他方法（例如）之前调用方法中的方法， `CreateRow` 以创建包含数据的特定行。  
  
 <xref:System.Web.UI.WebControls.ButtonField.Initialize%2A>编写使用 <xref:System.Web.UI.WebControls.TableCell> 对象来执行对象的基本初始化的自定义数据绑定控件时，请调用方法 <xref:System.Web.UI.WebControls.ButtonField> 。 如果 <xref:System.Web.UI.WebControls.ButtonField> 派生的类型在 <xref:System.Web.UI.WebControls.TableCell> 用方法中的数据或控件填充对象之前需要初始化对象，则实现此方法 <xref:System.Web.UI.WebControls.ButtonField.InitializeCell%2A> 。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><see cref="M:System.Web.UI.WebControls.ButtonField.Initialize(System.Boolean,System.Web.UI.Control)" /> <see langword="true" /> 如果字段要求在回发时执行数据绑定，则应重写方法并返回，以便字段可以正常工作。</para></block>
        <altmember cref="M:System.Web.UI.WebControls.ButtonField.InitializeCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlCellType,System.Web.UI.WebControls.DataControlRowState,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="InitializeCell">
      <MemberSignature Language="C#" Value="public override void InitializeCell (System.Web.UI.WebControls.DataControlFieldCell cell, System.Web.UI.WebControls.DataControlCellType cellType, System.Web.UI.WebControls.DataControlRowState rowState, int rowIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void InitializeCell(class System.Web.UI.WebControls.DataControlFieldCell cell, valuetype System.Web.UI.WebControls.DataControlCellType cellType, valuetype System.Web.UI.WebControls.DataControlRowState rowState, int32 rowIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ButtonField.InitializeCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlCellType,System.Web.UI.WebControls.DataControlRowState,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub InitializeCell (cell As DataControlFieldCell, cellType As DataControlCellType, rowState As DataControlRowState, rowIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void InitializeCell(System::Web::UI::WebControls::DataControlFieldCell ^ cell, System::Web::UI::WebControls::DataControlCellType cellType, System::Web::UI::WebControls::DataControlRowState rowState, int rowIndex);" />
      <MemberSignature Language="F#" Value="override this.InitializeCell : System.Web.UI.WebControls.DataControlFieldCell * System.Web.UI.WebControls.DataControlCellType * System.Web.UI.WebControls.DataControlRowState * int -&gt; unit" Usage="buttonField.InitializeCell (cell, cellType, rowState, rowIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cell" Type="System.Web.UI.WebControls.DataControlFieldCell" />
        <Parameter Name="cellType" Type="System.Web.UI.WebControls.DataControlCellType" />
        <Parameter Name="rowState" Type="System.Web.UI.WebControls.DataControlRowState" />
        <Parameter Name="rowIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="cell">要初始化的 <see cref="T:System.Web.UI.WebControls.DataControlFieldCell" />。</param>
        <param name="cellType"><see cref="T:System.Web.UI.WebControls.DataControlCellType" /> 值，指示行的类型（标头、脚注或数据）。</param>
        <param name="rowState"><see cref="T:System.Web.UI.WebControls.DataControlRowState" /> 值之一。</param>
        <param name="rowIndex">行的索引（索引从零开始）。</param>
        <summary>将指定的 <see cref="T:System.Web.UI.WebControls.DataControlFieldCell" /> 对象初始化为指定的行状态。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ButtonField.InitializeCell%2A>方法创建由属性指定的按钮类型 <xref:System.Web.UI.WebControls.ButtonFieldBase.ButtonType%2A> ，并将其添加到 <xref:System.Web.UI.Control.Controls%2A> 对象的集合中 <xref:System.Web.UI.WebControls.DataControlFieldCell> 。 <xref:System.Web.UI.WebControls.Button.CommandArgument%2A>控件的属性 <xref:System.Web.UI.WebControls.Button> 设置为 `rowIndex` 。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.DataControlField.InitializeCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlCellType,System.Web.UI.WebControls.DataControlRowState,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public virtual string Text { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ButtonField.Text" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Text As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Text { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Text : string with get, set" Usage="System.Web.UI.WebControls.ButtonField.Text" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue("")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue("")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Localizable(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Localizable(true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置为 <see cref="T:System.Web.UI.WebControls.ButtonField" /> 对象中每个按钮显示的静态标题。</summary>
        <value>为 <see cref="T:System.Web.UI.WebControls.ButtonField" /> 中每个按钮显示的标题。 默认值为空字符串("")。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 当 <xref:System.Web.UI.WebControls.ButtonFieldBase.ButtonType%2A> 对象的属性 <xref:System.Web.UI.WebControls.ButtonField> 设置为 <xref:System.Web.UI.WebControls.ButtonType.Button> 或值时 <xref:System.Web.UI.WebControls.ButtonType.Link> ，请使用 <xref:System.Web.UI.WebControls.ButtonField.Text%2A> 属性显示中按钮标题的静态文本 <xref:System.Web.UI.WebControls.ButtonField> 。 每个按钮共用相同的标题。  
  
 <xref:System.Web.UI.WebControls.ButtonField.Text%2A> <xref:System.Web.UI.WebControls.ButtonField> 您可以使用 <xref:System.Web.UI.WebControls.ButtonField.DataTextField%2A> 属性将绑定 <xref:System.Web.UI.WebControls.ButtonField> 到数据源中的字段，而不是使用属性在对象中显示静态文本。 然后，该字段的值将显示为按钮的标题。  
  
> [!NOTE]
>  如果 <xref:System.Web.UI.WebControls.ButtonField.DataTextField%2A> <xref:System.Web.UI.WebControls.ButtonField.Text%2A> 同时设置了和属性，则 <xref:System.Web.UI.WebControls.ButtonField.DataTextField%2A> 属性优先。  
  
 此属性的值存储在视图状态中。  
  
 设置此属性后，可以使用设计器工具自动将此属性的值保存到资源文件中。 有关详细信息，请参阅 <xref:System.ComponentModel.LocalizableAttribute> 和 [全球化和本地化](https://docs.microsoft.com/previous-versions/aspnet/c6zyy3s9(v=vs.100))。  
  
   
  
## Examples  
 下面的代码示例演示如何使用 <xref:System.Web.UI.WebControls.ButtonField.Text%2A> 属性为对象中的每个按钮指定要显示的标题 <xref:System.Web.UI.WebControls.ButtonField> 。  
  
 [!code-aspx-csharp[ButtonField#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonField/CS/buttonfieldcs.aspx#1)]
 [!code-aspx-vb[ButtonField#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonField/VB/buttonfieldvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ButtonField.DataTextField" />
      </Docs>
    </Member>
    <Member MemberName="ValidateSupportsCallback">
      <MemberSignature Language="C#" Value="public override void ValidateSupportsCallback ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ValidateSupportsCallback() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ButtonField.ValidateSupportsCallback" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub ValidateSupportsCallback ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void ValidateSupportsCallback();" />
      <MemberSignature Language="F#" Value="override this.ValidateSupportsCallback : unit -&gt; unit" Usage="buttonField.ValidateSupportsCallback " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>确定包含在 <see cref="T:System.Web.UI.WebControls.ButtonField" /> 对象中的控件是否支持回调。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ButtonField.ValidateSupportsCallback%2A>方法是一个帮助器方法，用于确定包含在对象中的控件是否 <xref:System.Web.UI.WebControls.ButtonField> 支持回调。 此方法实现为空方法 (方法，该方法不包含任何代码) 以指示支持回调。  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.ButtonField.ValidateSupportsCallback%2A>方法主要由控件开发人员使用。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>从类派生的类 <see cref="T:System.Web.UI.WebControls.BoundField" /> 可以重写 <see cref="M:System.Web.UI.WebControls.ButtonField.ValidateSupportsCallback" /> 方法，以指示字段包含的控件是否支持回调。 若要指示支持回调，请将 <see cref="M:System.Web.UI.WebControls.ButtonField.ValidateSupportsCallback" /> 方法实现为空方法，该方法不会引发异常; 否则，将引发异常，并显示一条有用的消息，说明不支持回调的原因。</para></block>
      </Docs>
    </Member>
  </Members>
</Type>
