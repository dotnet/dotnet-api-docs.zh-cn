<Type Name="DataBoundControl" FullName="System.Web.UI.WebControls.DataBoundControl">
  <Metadata><Meta Name="ms.openlocfilehash" Value="1df54d24a19c600a8867005c39fbd331e8c10db3" /><Meta Name="ms.sourcegitcommit" Value="11d168140aa8fade0768c2a9dde3e3bcacfdfb7d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="05/27/2020" /><Meta Name="ms.locfileid" Value="83967177" /></Metadata><TypeSignature Language="C#" Value="public abstract class DataBoundControl : System.Web.UI.WebControls.BaseDataBoundControl" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit DataBoundControl extends System.Web.UI.WebControls.BaseDataBoundControl" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.DataBoundControl" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class DataBoundControl&#xA;Inherits BaseDataBoundControl" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataBoundControl abstract : System::Web::UI::WebControls::BaseDataBoundControl" />
  <TypeSignature Language="F#" Value="type DataBoundControl = class&#xA;    inherit BaseDataBoundControl" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.BaseDataBoundControl</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.DataBoundControlDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.DataBoundControlDesigner, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>用作所有以列表或表格形式显示数据的 ASP.NET 2.0 版数据绑定控件的基类。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.DataBoundControl> 类是用于从 ASP.NET 数据源控件检索表格格式或列表样式数据并将控件的用户界面（UI）元素绑定到要显示的数据的 ASP.NET 控件。 复合数据绑定控件，如 <xref:System.Web.UI.WebControls.GridView>、<xref:System.Web.UI.WebControls.DetailsView>和 <xref:System.Web.UI.WebControls.FormView>;列表样式的数据绑定控件（如 <xref:System.Web.UI.WebControls.BulletedList> 和 <xref:System.Web.UI.WebControls.CheckBoxList>）;和其他控件（如 <xref:System.Web.UI.WebControls.AdRotator> 派生自 <xref:System.Web.UI.WebControls.DataBoundControl>。  
  
 页面开发人员不会直接使用 <xref:System.Web.UI.WebControls.DataBoundControl> 类;相反，它们使用从此类派生的控件。  
  
 控件开发人员扩展此类以创建数据绑定控件，这些控件可用于实现 <xref:System.Web.UI.IDataSource> 接口的类和派生自 <xref:System.Web.UI.DataSourceControl> 和 <xref:System.Web.UI.DataSourceView> 类的类。 从 <xref:System.Web.UI.WebControls.DataBoundControl> 类派生类时，重写 <xref:System.Web.UI.WebControls.DataBoundControl.PerformDataBinding%2A> 方法，以便将控件的 UI 元素绑定到 <xref:System.Web.UI.WebControls.DataBoundControl.GetData%2A> 方法检索的数据。 在大多数情况下，<xref:System.Web.UI.WebControls.DataBoundControl.PerformDataBinding%2A> 方法是您将在派生类中重写的唯一方法。  
  
 对于 ASP.NET 2.0 数据绑定控件，<xref:System.Web.UI.WebControls.DataBoundControl.PerformSelect%2A> 方法等效于 `DataBind` 方法，并调用来在运行时绑定数据。 <xref:System.Web.UI.WebControls.DataBoundControl.PerformSelect%2A> 方法调用 <xref:System.Web.UI.WebControls.DataBoundControl.GetData%2A> 和 <xref:System.Web.UI.WebControls.DataBoundControl.PerformDataBinding%2A> 方法。  
  
   
  
## Examples  
 下面的代码示例演示如何从 <xref:System.Web.UI.WebControls.DataBoundControl> 类派生类，以创建自定义数据绑定控件。 `TextBoxSet` 控件将为从其关联的数据源控件检索到的每个数据项创建一个 <xref:System.Web.UI.WebControls.TextBox> 控件，并在运行时绑定到数据项的值。 `Render` 方法的当前实现将 <xref:System.Web.UI.WebControls.TextBox> 控件呈现为无序列表。  
  
 [!code-csharp[Samples.AspNet.TextBoxSet#2](~/samples/snippets/csharp/VS_Snippets_WebNet/Samples.AspNet.TextBoxSet/CS/textboxset.cs#2)]
 [!code-vb[Samples.AspNet.TextBoxSet#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Samples.AspNet.TextBoxSet/VB/textboxset.vb#2)]  
  
 下面的代码示例演示如何使用在前面的示例中定义的 `TextBoxSet` 控件，并将其绑定到 <xref:System.Web.UI.WebControls.AccessDataSource> 控件。  
  
 [!code-aspx-csharp[Samples.AspNet.TextBoxSet#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Samples.AspNet.TextBoxSet/CS/textboxsetcs.aspx#1)]
 [!code-aspx-vb[Samples.AspNet.TextBoxSet#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Samples.AspNet.TextBoxSet/VB/textboxsetvb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.HierarchicalDataBoundControl" />
    <altmember cref="T:System.Web.UI.WebControls.CompositeDataBoundControl" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected DataBoundControl ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataBoundControl.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; DataBoundControl();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Web.UI.WebControls.DataBoundControl" /> 类以供继承的类实例使用。 此构造函数只能由继承的类调用。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CallingDataMethods">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.CallingDataMethodsEventHandler CallingDataMethods;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.CallingDataMethodsEventHandler CallingDataMethods" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.DataBoundControl.CallingDataMethods" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CallingDataMethods As CallingDataMethodsEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::CallingDataMethodsEventHandler ^ CallingDataMethods;" />
      <MemberSignature Language="F#" Value="member this.CallingDataMethods : System.Web.UI.WebControls.CallingDataMethodsEventHandler " Usage="member this.CallingDataMethods : System.Web.UI.WebControls.CallingDataMethodsEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.CallingDataMethodsEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>在数据方法正被调用时发生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此事件的目的是让你有机会指定要调用的数据方法在与 <xref:System.Web.UI.Page> 对象不同的对象上。  
  
 有关如何在 Web 窗体中使用模型绑定的教程系列，请参阅[模型绑定和 Web 窗体](/aspnet/web-forms/overview/presenting-and-managing-data/model-binding/retrieving-data)。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateDataSourceSelectArguments">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.DataSourceSelectArguments CreateDataSourceSelectArguments ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.UI.DataSourceSelectArguments CreateDataSourceSelectArguments() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataBoundControl.CreateDataSourceSelectArguments" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateDataSourceSelectArguments () As DataSourceSelectArguments" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Web::UI::DataSourceSelectArguments ^ CreateDataSourceSelectArguments();" />
      <MemberSignature Language="F#" Value="abstract member CreateDataSourceSelectArguments : unit -&gt; System.Web.UI.DataSourceSelectArguments&#xA;override this.CreateDataSourceSelectArguments : unit -&gt; System.Web.UI.DataSourceSelectArguments" Usage="dataBoundControl.CreateDataSourceSelectArguments " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataSourceSelectArguments</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>如果未指定参数，则创建由数据绑定控件使用的默认 <see cref="T:System.Web.UI.DataSourceSelectArguments" /> 对象。</summary>
        <returns>初始化为 <see cref="T:System.Web.UI.DataSourceSelectArguments" /> 的 <see cref="P:System.Web.UI.DataSourceSelectArguments.Empty" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.DataBoundControl.CreateDataSourceSelectArguments%2A> 方法由 <xref:System.Web.UI.WebControls.DataBoundControl.SelectArguments%2A> 属性用于初始化默认参数对象，并由 <xref:System.Web.UI.WebControls.DataBoundControl> 类实现的 <xref:System.Web.UI.WebControls.DataBoundControl.PerformSelect%2A> 方法。  
  
   
  
## Examples  
 下面的代码示例演示如何在派生类中使用 <xref:System.Web.UI.WebControls.DataBoundControl.CreateDataSourceSelectArguments%2A> 方法来检索默认的 <xref:System.Web.UI.DataSourceSelectArguments> 对象。  
  
 [!code-csharp[Samples.AspNet.TextBoxSet#3](~/samples/snippets/csharp/VS_Snippets_WebNet/Samples.AspNet.TextBoxSet/CS/textboxset.cs#3)]
 [!code-vb[Samples.AspNet.TextBoxSet#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Samples.AspNet.TextBoxSet/VB/textboxset.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.DataBoundControl.SelectArguments" />
        <altmember cref="M:System.Web.UI.WebControls.DataBoundControl.PerformSelect" />
      </Docs>
    </Member>
    <Member MemberName="CreatingModelDataSource">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.CreatingModelDataSourceEventHandler CreatingModelDataSource;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.CreatingModelDataSourceEventHandler CreatingModelDataSource" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.DataBoundControl.CreatingModelDataSource" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CreatingModelDataSource As CreatingModelDataSourceEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::CreatingModelDataSourceEventHandler ^ CreatingModelDataSource;" />
      <MemberSignature Language="F#" Value="member this.CreatingModelDataSource : System.Web.UI.WebControls.CreatingModelDataSourceEventHandler " Usage="member this.CreatingModelDataSource : System.Web.UI.WebControls.CreatingModelDataSourceEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.CreatingModelDataSourceEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>当 <see cref="T:System.Web.UI.WebControls.ModelDataSource" /> 对象正被创建时发生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此事件的目的是让你在想要使用从 <xref:System.Web.UI.WebControls.ModelDataSourceView> 类派生的自定义类的情况下，更改 <xref:System.Web.UI.WebControls.ModelDataSourceView> 实例的机会。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataMember">
      <MemberSignature Language="C#" Value="public virtual string DataMember { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataMember" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataBoundControl.DataMember" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property DataMember As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ DataMember { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataMember : string with get, set" Usage="System.Web.UI.WebControls.DataBoundControl.DataMember" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>当数据源包含多个不同的数据项列表时，获取或设置数据绑定控件绑定到的数据列表的名称。</summary>
        <value>数据绑定控件绑定到的特定数据列表的名称（如果数据源控件提供了多个列表）。 默认值是 <see cref="F:System.String.Empty" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.DataBoundControl.DataMember%2A> 属性的值存储在视图状态中。  
  
 无法通过主题或样式表主题设置此属性。 有关详细信息，请参阅 <xref:System.Web.UI.ThemeableAttribute> 和[ASP.NET 主题和外观](https://docs.microsoft.com/previous-versions/aspnet/ykzx33wh(v=vs.100))。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataSourceID">
      <MemberSignature Language="C#" Value="public override string DataSourceID { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataSourceID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataBoundControl.DataSourceID" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property DataSourceID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ DataSourceID { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataSourceID : string with get, set" Usage="System.Web.UI.WebControls.DataBoundControl.DataSourceID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Web.UI.IDReferenceProperty(typeof(System.Web.UI.DataSourceControl))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置控件的 ID，数据绑定控件从该控件中检索其数据项列表。</summary>
        <value>表示数据源的控件的 ID，数据绑定控件从该控件中检索其数据。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DataSourceObject">
      <MemberSignature Language="C#" Value="public System.Web.UI.IDataSource DataSourceObject { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.IDataSource DataSourceObject" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataBoundControl.DataSourceObject" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DataSourceObject As IDataSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::IDataSource ^ DataSourceObject { System::Web::UI::IDataSource ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DataSourceObject : System.Web.UI.IDataSource" Usage="System.Web.UI.WebControls.DataBoundControl.DataSourceObject" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.IDataSource</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个对象，该对象实现 <see cref="T:System.Web.UI.IDataSource" /> 接口，以便提供对该对象的数据内容的访问。</summary>
        <value>具有对其数据内容的访问权限的对象。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetData">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.DataSourceView GetData ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.UI.DataSourceView GetData() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataBoundControl.GetData" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetData () As DataSourceView" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Web::UI::DataSourceView ^ GetData();" />
      <MemberSignature Language="F#" Value="abstract member GetData : unit -&gt; System.Web.UI.DataSourceView&#xA;override this.GetData : unit -&gt; System.Web.UI.DataSourceView" Usage="dataBoundControl.GetData " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataSourceView</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>检索数据绑定控件用于执行数据操作的 <see cref="T:System.Web.UI.DataSourceView" /> 对象。</summary>
        <returns>数据绑定控件用于执行数据操作的 <see cref="T:System.Web.UI.DataSourceView" />。 如果设置了 <see cref="P:System.Web.UI.WebControls.DataBoundControl.DataMember" /> 属性，则返回特定的已命名的 <see cref="T:System.Web.UI.DataSourceView" />；否则，返回默认的 <see cref="T:System.Web.UI.DataSourceView" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.DataBoundControl.GetData%2A> 方法通过调用 <xref:System.Web.UI.WebControls.DataBoundControl.GetDataSource%2A> 方法从关联的数据源控件中检索 <xref:System.Web.UI.DataSourceView> 的对象。 如果 <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataSource%2A> 属性用于标识数据源，则会创建一个默认的 <xref:System.Web.UI.DataSourceView> 对象。  
  
   
  
## Examples  
 下面的代码示例演示如何调用 <xref:System.Web.UI.WebControls.DataBoundControl.GetData%2A> 方法，以便从关联的数据源控件中检索 <xref:System.Web.UI.DataSourceView> 对象，并调用 <xref:System.Web.UI.DataSourceView.Select%2A> 方法来检索数据。 此代码示例是为 <xref:System.Web.UI.WebControls.DataBoundControl> 类提供的更大示例的一部分。  
  
 [!code-csharp[Samples.AspNet.TextBoxSet#3](~/samples/snippets/csharp/VS_Snippets_WebNet/Samples.AspNet.TextBoxSet/CS/textboxset.cs#3)]
 [!code-vb[Samples.AspNet.TextBoxSet#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Samples.AspNet.TextBoxSet/VB/textboxset.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">同时设置了 <see cref="P:System.Web.UI.WebControls.BaseDataBoundControl.DataSource" /> 和 <see cref="P:System.Web.UI.WebControls.BaseDataBoundControl.DataSourceID" /> 属性。  
  
- 或 - 
设置了 <see cref="P:System.Web.UI.WebControls.DataBoundControl.DataMember" /> 属性，但不存在具有该名称的 <see cref="T:System.Web.UI.DataSourceView" /> 对象。</exception>
        <altmember cref="M:System.Web.UI.WebControls.DataBoundControl.GetDataSource" />
        <altmember cref="P:System.Web.UI.WebControls.DataBoundControl.DataMember" />
      </Docs>
    </Member>
    <Member MemberName="GetDataSource">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.IDataSource GetDataSource ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.UI.IDataSource GetDataSource() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataBoundControl.GetDataSource" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetDataSource () As IDataSource" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Web::UI::IDataSource ^ GetDataSource();" />
      <MemberSignature Language="F#" Value="abstract member GetDataSource : unit -&gt; System.Web.UI.IDataSource&#xA;override this.GetDataSource : unit -&gt; System.Web.UI.IDataSource" Usage="dataBoundControl.GetDataSource " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.IDataSource</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>检索与数据绑定控件关联的 <see cref="T:System.Web.UI.IDataSource" /> 接口（如果有）。</summary>
        <returns>一个 <see cref="T:System.Web.UI.IDataSource" />，表示由 <see cref="P:System.Web.UI.WebControls.DataBoundControl.DataSourceID" /> 标识的数据源。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.DataBoundControl.GetData%2A> 方法在内部调用 <xref:System.Web.UI.WebControls.DataBoundControl.GetDataSource%2A> 方法。 通过这两种方法检索有效的 <xref:System.Web.UI.IDataSource> 实例，并由 <xref:System.Web.UI.WebControls.DataBoundControl> 对象缓存，直到 <xref:System.Web.UI.WebControls.DataBoundControl.OnDataPropertyChanged%2A> 方法发出数据源已更改的信号为止。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">当前容器中不存在由 <see cref="P:System.Web.UI.WebControls.DataBoundControl.DataSourceID" /> 属性标识的控件。  
  
- 或 - 
由 <see cref="P:System.Web.UI.WebControls.DataBoundControl.DataSourceID" /> 属性标识的控件不实现 <see cref="T:System.Web.UI.IDataSource" /> 接口。</exception>
        <altmember cref="M:System.Web.UI.WebControls.DataBoundControl.GetData" />
      </Docs>
    </Member>
    <Member MemberName="IsUsingModelBinders">
      <MemberSignature Language="C#" Value="protected override bool IsUsingModelBinders { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsUsingModelBinders" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataBoundControl.IsUsingModelBinders" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property IsUsingModelBinders As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property bool IsUsingModelBinders { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsUsingModelBinders : bool" Usage="System.Web.UI.WebControls.DataBoundControl.IsUsingModelBinders" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个值，该值指示是否使用模型绑定。</summary>
        <value>如果正在使用模型绑定，则为 <see langword="true" />；否则为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 有关如何在 Web 窗体中使用模型绑定的教程系列，请参阅[模型绑定和 Web 窗体](/aspnet/web-forms/overview/presenting-and-managing-data/model-binding/retrieving-data)。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemType">
      <MemberSignature Language="C#" Value="public virtual string ItemType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ItemType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataBoundControl.ItemType" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ItemType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ItemType { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ItemType : string with get, set" Usage="System.Web.UI.WebControls.DataBoundControl.ItemType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置强类型化数据绑定的数据项目类型的名称。</summary>
        <value>模型类型的名称。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 设置此属性将启用 `Item` 和 `BindItem` 的数据绑定表达式。  
  
 设置此方法会自动启用动态数据功能。  
  
 有关如何在 Web 窗体中使用模型绑定的教程系列，请参阅[模型绑定和 Web 窗体](/aspnet/web-forms/overview/presenting-and-managing-data/model-binding/retrieving-data)。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadViewState">
      <MemberSignature Language="C#" Value="protected override void LoadViewState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void LoadViewState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataBoundControl.LoadViewState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub LoadViewState (savedState As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void LoadViewState(System::Object ^ savedState);" />
      <MemberSignature Language="F#" Value="override this.LoadViewState : obj -&gt; unit" Usage="dataBoundControl.LoadViewState savedState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="savedState">一个对象，表示要还原的视图状态。</param>
        <summary>从用 <see cref="M:System.Web.UI.WebControls.DataBoundControl.SaveViewState" /> 方法保存的上一个页面请求还原视图状态信息。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MarkAsDataBound">
      <MemberSignature Language="C#" Value="protected void MarkAsDataBound ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void MarkAsDataBound() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataBoundControl.MarkAsDataBound" />
      <MemberSignature Language="VB.NET" Value="Protected Sub MarkAsDataBound ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void MarkAsDataBound();" />
      <MemberSignature Language="F#" Value="member this.MarkAsDataBound : unit -&gt; unit" Usage="dataBoundControl.MarkAsDataBound " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>将视图状态中的控件状态设置为成功绑定到数据。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 数据绑定控件在视图状态中维护一个值，该值指示当前是否已绑定到数据。 <xref:System.Web.UI.WebControls.DataBoundControl.MarkAsDataBound%2A> 方法将值设置为 `true`。  
  
   
  
## Examples  
 下面的代码示例演示派生的数据绑定控件类如何使用 <xref:System.Web.UI.WebControls.DataBoundControl.MarkAsDataBound%2A> 方法。 在 <xref:System.Web.UI.WebControls.DataBoundControl.GetData%2A> 方法检索数据并将其绑定到具有 <xref:System.Web.UI.WebControls.DataBoundControl.PerformDataBinding%2A> 方法的控件之后，<xref:System.Web.UI.WebControls.BaseDataBoundControl.RequiresDataBinding%2A> 属性设置为 `false`，并调用 <xref:System.Web.UI.WebControls.DataBoundControl.MarkAsDataBound%2A> 方法以指示控件已完成绑定，而不再在当前页的生命周期内要求它。 此代码示例是为 <xref:System.Web.UI.WebControls.DataBoundControl> 类提供的更大示例的一部分。  
  
 [!code-csharp[Samples.AspNet.TextBoxSet#3](~/samples/snippets/csharp/VS_Snippets_WebNet/Samples.AspNet.TextBoxSet/CS/textboxset.cs#3)]
 [!code-vb[Samples.AspNet.TextBoxSet#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Samples.AspNet.TextBoxSet/VB/textboxset.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.BaseDataBoundControl.RequiresDataBinding" />
      </Docs>
    </Member>
    <Member MemberName="OnCreatingModelDataSource">
      <MemberSignature Language="C#" Value="protected virtual void OnCreatingModelDataSource (System.Web.UI.WebControls.CreatingModelDataSourceEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCreatingModelDataSource(class System.Web.UI.WebControls.CreatingModelDataSourceEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataBoundControl.OnCreatingModelDataSource(System.Web.UI.WebControls.CreatingModelDataSourceEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCreatingModelDataSource (e As CreatingModelDataSourceEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCreatingModelDataSource(System::Web::UI::WebControls::CreatingModelDataSourceEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnCreatingModelDataSource : System.Web.UI.WebControls.CreatingModelDataSourceEventArgs -&gt; unit&#xA;override this.OnCreatingModelDataSource : System.Web.UI.WebControls.CreatingModelDataSourceEventArgs -&gt; unit" Usage="dataBoundControl.OnCreatingModelDataSource e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.CreatingModelDataSourceEventArgs" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e">提供访问要创建的 <see cref="T:System.Web.UI.WebControls.ModelDataSource" /> 对象的对象。</param>
        <summary>引发 <see cref="E:System.Web.UI.WebControls.DataBoundControl.CreatingModelDataSource" /> 事件。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDataPropertyChanged">
      <MemberSignature Language="C#" Value="protected override void OnDataPropertyChanged ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnDataPropertyChanged() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataBoundControl.OnDataPropertyChanged" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnDataPropertyChanged ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnDataPropertyChanged();" />
      <MemberSignature Language="F#" Value="override this.OnDataPropertyChanged : unit -&gt; unit" Usage="dataBoundControl.OnDataPropertyChanged " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>在某一基数据源标识属性更改后，将数据绑定控件重新绑定到其数据。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDataSourceViewChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnDataSourceViewChanged (object sender, EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDataSourceViewChanged(object sender, class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataBoundControl.OnDataSourceViewChanged(System.Object,System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDataSourceViewChanged (sender As Object, e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDataSourceViewChanged(System::Object ^ sender, EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDataSourceViewChanged : obj * EventArgs -&gt; unit&#xA;override this.OnDataSourceViewChanged : obj * EventArgs -&gt; unit" Usage="dataBoundControl.OnDataSourceViewChanged (sender, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="sender">事件的源，即 <see cref="T:System.Web.UI.DataSourceView" />。</param>
        <param name="e">包含事件数据的 <see cref="T:System.EventArgs" />。</param>
        <summary>引发 <see cref="E:System.Web.UI.DataSourceView.DataSourceViewChanged" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.DataBoundControl.OnDataSourceViewChanged%2A> 方法通知数据绑定控件，基础数据源已更改，控件应重新绑定并且应执行任何必要的工作。 通常，当数据源视图的属性发生更改时，将调用 <xref:System.Web.UI.WebControls.DataBoundControl.OnDataSourceViewChanged%2A> 方法。  
  
 <xref:System.Web.UI.WebControls.DataBoundControl> 类将 <xref:System.Web.UI.WebControls.BaseDataBoundControl.RequiresDataBinding%2A> 属性设置为引发 <xref:System.Web.UI.DataSourceView.DataSourceViewChanged> 事件时 `true`。  
  
 引发事件时，将通过委托调用事件处理程序。 有关详细信息，请参阅[处理和引发事件](/dotnet/standard/events/)。  
  
 <xref:System.Web.UI.WebControls.DataBoundControl.OnDataSourceViewChanged%2A> 方法还允许派生类对事件进行处理而不必附加委托。 这是在派生类中处理事件的首选技术。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>在派生类中重写 <see cref="M:System.Web.UI.WebControls.DataBoundControl.OnDataSourceViewChanged(System.Object,System.EventArgs)" /> 时，一定要调用基类的 <see cref="M:System.Web.UI.WebControls.DataBoundControl.OnDataSourceViewChanged(System.Object,System.EventArgs)" /> 方法，以便已注册的委托对事件进行接收。</para></block>
      </Docs>
    </Member>
    <Member MemberName="OnLoad">
      <MemberSignature Language="C#" Value="protected internal override void OnLoad (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnLoad(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataBoundControl.OnLoad(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnLoad (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnLoad(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnLoad : EventArgs -&gt; unit" Usage="dataBoundControl.OnLoad e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件数据的 <see cref="T:System.EventArgs" /> 对象。</param>
        <summary>处理 <see cref="E:System.Web.UI.Control.Load" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.DataBoundControl> 类调用 <xref:System.Web.UI.WebControls.BaseDataBoundControl.ConfirmInitState%2A?displayProperty=nameWithType> 方法来设置数据绑定控件的初始化状态，并将 <xref:System.Web.UI.WebControls.BaseDataBoundControl.RequiresDataBinding%2A> 属性设置为 `true` （如果 HTTP 请求不是回发）。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPagePreLoad">
      <MemberSignature Language="C#" Value="protected override void OnPagePreLoad (object sender, EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnPagePreLoad(object sender, class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataBoundControl.OnPagePreLoad(System.Object,System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnPagePreLoad (sender As Object, e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnPagePreLoad(System::Object ^ sender, EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnPagePreLoad : obj * EventArgs -&gt; unit" Usage="dataBoundControl.OnPagePreLoad (sender, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="sender">引发事件的 <see cref="T:System.Web.UI.Page" />。</param>
        <param name="e">包含事件数据的 <see cref="T:System.EventArgs" />。</param>
        <summary>在加载数据绑定控件之前设置该控件的初始化状态。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果 HTTP 请求为回发但启用了视图状态，但数据绑定控件尚未绑定，则 <xref:System.Web.UI.WebControls.DataBoundControl> 类将重写 <xref:System.Web.UI.WebControls.DataBoundControl.OnPagePreLoad%2A> 方法，以将 <xref:System.Web.UI.WebControls.BaseDataBoundControl.RequiresDataBinding%2A?displayProperty=nameWithType> 属性设置为 `true`。 这种情况很常见，例如 <xref:System.Web.UI.WebControls.Wizard> 和 <xref:System.Web.UI.WebControls.MultiView>，控件在运行时更改了控件的可见性。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.BaseDataBoundControl.RequiresDataBinding" />
      </Docs>
    </Member>
    <Member MemberName="PerformDataBinding">
      <MemberSignature Language="C#" Value="protected internal virtual void PerformDataBinding (System.Collections.IEnumerable data);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void PerformDataBinding(class System.Collections.IEnumerable data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataBoundControl.PerformDataBinding(System.Collections.IEnumerable)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub PerformDataBinding (data As IEnumerable)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void PerformDataBinding(System::Collections::IEnumerable ^ data);" />
      <MemberSignature Language="F#" Value="abstract member PerformDataBinding : System.Collections.IEnumerable -&gt; unit&#xA;override this.PerformDataBinding : System.Collections.IEnumerable -&gt; unit" Usage="dataBoundControl.PerformDataBinding data" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Collections.IEnumerable" />
      </Parameters>
      <Docs>
        <param name="data">从 <see cref="T:System.Collections.IEnumerable" /> 方法调用返回的数据的 <see cref="M:System.Web.UI.WebControls.DataBoundControl.PerformSelect" /> 列表。</param>
        <summary>在派生类中重写时，将数据源中的数据绑定到控件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 从 <xref:System.Web.UI.WebControls.DataBoundControl> 类派生数据绑定控件时，实现此方法而不是 <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> 方法。 通过在 <xref:System.Web.UI.WebControls.DataBoundControl.PerformDataBinding%2A> 中放置控件的数据绑定逻辑，您可以避免按错误的顺序引发 <xref:System.Web.UI.Control.DataBinding> 和 <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBound> 事件。  
  
 虽然 base <xref:System.Web.UI.WebControls.DataBoundControl> 类不提供此方法的特定实现，但 <xref:System.Web.UI.WebControls.DataBoundControl.PerformSelect%2A> 方法会调用 <xref:System.Web.UI.WebControls.DataBoundControl.PerformDataBinding%2A> 方法将任何用户界面（UI）控件的值绑定到 <xref:System.Web.UI.WebControls.DataBoundControl.PerformSelect%2A> 方法检索的数据。  
  
   
  
## Examples  
 下面的代码示例演示如何在从 <xref:System.Web.UI.WebControls.DataBoundControl>派生的类中实现 <xref:System.Web.UI.WebControls.DataBoundControl.PerformDataBinding%2A> 方法。 `TextBoxSet` 控件将为它所绑定到的每个数据项创建 <xref:System.Web.UI.WebControls.TextBox> 控件。 此代码示例是为 <xref:System.Web.UI.WebControls.DataBoundControl> 类提供的更大示例的一部分。  
  
 [!code-csharp[Samples.AspNet.TextBoxSet#5](~/samples/snippets/csharp/VS_Snippets_WebNet/Samples.AspNet.TextBoxSet/CS/textboxset.cs#5)]
 [!code-vb[Samples.AspNet.TextBoxSet#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Samples.AspNet.TextBoxSet/VB/textboxset.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PerformSelect">
      <MemberSignature Language="C#" Value="protected override void PerformSelect ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void PerformSelect() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataBoundControl.PerformSelect" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub PerformSelect ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void PerformSelect();" />
      <MemberSignature Language="F#" Value="override this.PerformSelect : unit -&gt; unit" Usage="dataBoundControl.PerformSelect " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>从关联的数据源中检索数据。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 检索数据以将数据绑定到数据绑定控件的元素后，将调用 <xref:System.Web.UI.WebControls.DataBoundControl.PerformDataBinding%2A> 方法。 派生类型重写此方法，以便仅在默认实现不足的情况下检索数据。 通常，提供 <xref:System.Web.UI.DataSourceViewSelectCallback> 委托来执行任何自定义数据工作，而不是实现 <xref:System.Web.UI.WebControls.DataBoundControl.PerformDataBinding%2A> 方法。  
  
   
  
## Examples  
 下面的代码示例演示如何重写 <xref:System.Web.UI.WebControls.DataBoundControl.PerformSelect%2A> 方法，以便使用 <xref:System.Web.UI.WebControls.DataBoundControl.GetData%2A> 方法从关联的数据源中检索数据，并将其绑定到控件的元素。 此代码示例是为 <xref:System.Web.UI.WebControls.DataBoundControl> 类提供的更大示例的一部分。  
  
 [!code-csharp[Samples.AspNet.TextBoxSet#3](~/samples/snippets/csharp/VS_Snippets_WebNet/Samples.AspNet.TextBoxSet/CS/textboxset.cs#3)]
 [!code-vb[Samples.AspNet.TextBoxSet#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Samples.AspNet.TextBoxSet/VB/textboxset.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Control.DataBind" />
        <altmember cref="M:System.Web.UI.Control.OnDataBinding(System.EventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.BaseDataBoundControl.OnDataBound(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="SaveViewState">
      <MemberSignature Language="C#" Value="protected override object SaveViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance object SaveViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataBoundControl.SaveViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function SaveViewState () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Object ^ SaveViewState();" />
      <MemberSignature Language="F#" Value="override this.SaveViewState : unit -&gt; obj" Usage="dataBoundControl.SaveViewState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>保存自页回发到服务器后发生的所有视图状态更改。</summary>
        <returns>控件当前的视图状态。 如果没有与该控件关联的视图状态，则此方法返回 <see langword="null" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectArguments">
      <MemberSignature Language="C#" Value="protected System.Web.UI.DataSourceSelectArguments SelectArguments { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.DataSourceSelectArguments SelectArguments" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataBoundControl.SelectArguments" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property SelectArguments As DataSourceSelectArguments" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Web::UI::DataSourceSelectArguments ^ SelectArguments { System::Web::UI::DataSourceSelectArguments ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectArguments : System.Web.UI.DataSourceSelectArguments" Usage="System.Web.UI.WebControls.DataBoundControl.SelectArguments" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataSourceSelectArguments</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取数据绑定控件从数据源控件检索数据时使用的 <see cref="T:System.Web.UI.DataSourceSelectArguments" /> 对象。</summary>
        <value>数据绑定控件用于检索数据的 <see cref="T:System.Web.UI.DataSourceSelectArguments" /> 值。 默认为 <see cref="P:System.Web.UI.DataSourceSelectArguments.Empty" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.DataBoundControl.SelectArguments%2A> 属性调用 <xref:System.Web.UI.WebControls.DataBoundControl.CreateDataSourceSelectArguments%2A> 方法来创建默认的 <xref:System.Web.UI.DataSourceSelectArguments> 对象。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.DataBoundControl.CreateDataSourceSelectArguments" />
      </Docs>
    </Member>
    <Member MemberName="SelectMethod">
      <MemberSignature Language="C#" Value="public virtual string SelectMethod { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SelectMethod" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataBoundControl.SelectMethod" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property SelectMethod As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ SelectMethod { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SelectMethod : string with get, set" Usage="System.Web.UI.WebControls.DataBoundControl.SelectMethod" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>为了读取数据要调用的方法的名称。</summary>
        <value>方法的名称。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 设置此属性将导致模型绑定用作数据绑定方法。  
  
 有关如何在 Web 窗体中使用模型绑定的教程系列，请参阅[模型绑定和 Web 窗体](/aspnet/web-forms/overview/presenting-and-managing-data/model-binding/retrieving-data)。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TrackViewState">
      <MemberSignature Language="C#" Value="protected override void TrackViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void TrackViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataBoundControl.TrackViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub TrackViewState ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void TrackViewState();" />
      <MemberSignature Language="F#" Value="override this.TrackViewState : unit -&gt; unit" Usage="dataBoundControl.TrackViewState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>导致要跟踪的控件的视图状态的更改，以便这些更改可以存储到控件的 <see cref="T:System.Web.UI.StateBag" /> 对象中。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidateDataSource">
      <MemberSignature Language="C#" Value="protected override void ValidateDataSource (object dataSource);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void ValidateDataSource(object dataSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataBoundControl.ValidateDataSource(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub ValidateDataSource (dataSource As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void ValidateDataSource(System::Object ^ dataSource);" />
      <MemberSignature Language="F#" Value="override this.ValidateDataSource : obj -&gt; unit" Usage="dataBoundControl.ValidateDataSource dataSource" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSource" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="dataSource">设置为 <see cref="P:System.Web.UI.WebControls.BaseDataBoundControl.DataSource" /> 属性的对象。</param>
        <summary>验证数据绑定控件绑定到的对象是否可以和该控件一同使用。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 仅在 <xref:System.Web.UI.WebControls.BaseDataBoundControl> 类的赋值函数（`set` 访问器）中为 <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataSource%2A> 属性调用 <xref:System.Web.UI.WebControls.DataBoundControl.ValidateDataSource%2A> 方法。 <xref:System.Web.UI.WebControls.DataBoundControl> 类检查为 <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataSource%2A> 属性设置的对象的类型，以确保它是 <xref:System.Web.UI.IDataSource>、<xref:System.ComponentModel.IListSource>或 <xref:System.Collections.IEnumerable> 接口的实例。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><paramref name="dataSource" /> 参数传递的对象不为 <see langword="null" />，也不是可以识别的类型。</exception>
        <altmember cref="P:System.Web.UI.WebControls.BaseDataBoundControl.DataSource" />
        <altmember cref="M:System.Web.UI.WebControls.BaseDataBoundControl.ValidateDataSource(System.Object)" />
      </Docs>
    </Member>
  </Members>
</Type>
