<Type Name="FormViewModeEventArgs" FullName="System.Web.UI.WebControls.FormViewModeEventArgs">
  <Metadata><Meta Name="ms.openlocfilehash" Value="671e47a7b12aaa6c753222de66c9fde06ce2a160" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89679759" /></Metadata><TypeSignature Language="C#" Value="public class FormViewModeEventArgs : System.ComponentModel.CancelEventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit FormViewModeEventArgs extends System.ComponentModel.CancelEventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.FormViewModeEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class FormViewModeEventArgs&#xA;Inherits CancelEventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class FormViewModeEventArgs : System::ComponentModel::CancelEventArgs" />
  <TypeSignature Language="F#" Value="type FormViewModeEventArgs = class&#xA;    inherit CancelEventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.CancelEventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>为 <see cref="E:System.Web.UI.WebControls.FormView.ModeChanging" /> 事件提供数据。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.FormView.ModeChanging>当 <xref:System.Web.UI.WebControls.FormView> 控件尝试在编辑、插入和只读模式之间切换时，但在模式实际更改之前，会引发事件。 这使你可以提供一种事件处理方法，该方法执行自定义例程，如在 <xref:System.Web.UI.WebControls.FormView> 此事件发生时配置特定模式的控件或取消模式更改。

 <xref:System.Web.UI.WebControls.FormViewInsertEventArgs>对象被传递到事件处理方法，该方法允许您确定控件要更改到的模式 <xref:System.Web.UI.WebControls.FormView> ，确定是 <xref:System.Web.UI.WebControls.FormView.ModeChanging> 由于用户取消编辑操作还是插入操作而引发了事件，还是指示应取消模式更改。 若要确定新模式，请使用 <xref:System.Web.UI.WebControls.FormViewModeEventArgs.NewMode%2A> 属性。 还可以 <xref:System.Web.UI.WebControls.FormViewModeEventArgs.NewMode%2A> 通过将属性设置为枚举值之一，使用属性以编程方式指定要更改的备用模式 <xref:System.Web.UI.WebControls.FormViewMode> 。 使用 <xref:System.Web.UI.WebControls.FormViewModeEventArgs.CancelingEdit%2A> 属性来确定此事件是否是在用户取消编辑或插入操作后引发的。 若要取消模式更改，请将 <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> 属性设置为 `true` 。

 有关如何处理事件的详细信息，请参阅 [处理和引发事件](/dotnet/standard/events/)。

 有关 <xref:System.Web.UI.WebControls.FormViewModeEventArgs> 类的实例的初始属性值列表，请参见 <xref:System.Web.UI.WebControls.FormViewModeEventArgs.%23ctor%2A> 构造函数。



## Examples
 下面的示例演示如何使用 <xref:System.Web.UI.WebControls.FormViewModeEventArgs> 传递到事件处理方法的对象在 <xref:System.Web.UI.WebControls.FormView.ModeChanging> <xref:System.Web.UI.WebControls.FormView> 控件转换为编辑模式时隐藏页导航行。

> [!IMPORTANT]
>  此示例具有一个接受用户输入的文本框，这是一个潜在的安全威胁。 默认情况下，ASP.NET 网页验证用户输入是否不包含脚本或 HTML 元素。 有关详细信息，请参阅[脚本侵入概述](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100))。

 [!code-aspx-csharp[FormViewModeEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewModeEventArgs/CS/formviewmodeeventargscs.aspx#1)]
 [!code-aspx-vb[FormViewModeEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewModeEventArgs/VB/formviewmodeeventargsvb.aspx#1)]

 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.FormView" />
    <altmember cref="T:System.Web.UI.WebControls.FormViewModeEventHandler" />
    <altmember cref="T:System.ComponentModel.CancelEventArgs" />
    <altmember cref="E:System.Web.UI.WebControls.FormView.ModeChanging" />
    <altmember cref="P:System.ComponentModel.CancelEventArgs.Cancel" />
    <altmember cref="P:System.Web.UI.WebControls.FormViewModeEventArgs.CancelingEdit" />
    <altmember cref="P:System.Web.UI.WebControls.FormViewModeEventArgs.NewMode" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FormViewModeEventArgs (System.Web.UI.WebControls.FormViewMode mode, bool cancelingEdit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Web.UI.WebControls.FormViewMode mode, bool cancelingEdit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormViewModeEventArgs.#ctor(System.Web.UI.WebControls.FormViewMode,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (mode As FormViewMode, cancelingEdit As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FormViewModeEventArgs(System::Web::UI::WebControls::FormViewMode mode, bool cancelingEdit);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.FormViewModeEventArgs : System.Web.UI.WebControls.FormViewMode * bool -&gt; System.Web.UI.WebControls.FormViewModeEventArgs" Usage="new System.Web.UI.WebControls.FormViewModeEventArgs (mode, cancelingEdit)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="mode" Type="System.Web.UI.WebControls.FormViewMode" />
        <Parameter Name="cancelingEdit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="mode"><see cref="T:System.Web.UI.WebControls.FormViewMode" /> 枚举值之一。</param>
        <param name="cancelingEdit">设置为 <see langword="true" /> 表明由于用户取消编辑操作而引发了 <see cref="E:System.Web.UI.WebControls.FormView.ModeChanging" /> 事件；否则为 <see langword="false" />。</param>
        <summary>初始化 <see cref="T:System.Web.UI.WebControls.FormViewModeEventArgs" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 使用此构造函数初始化类的新实例 <xref:System.Web.UI.WebControls.FormViewModeEventArgs> 。

 下表显示了 <xref:System.Web.UI.WebControls.FormViewModeEventArgs> 类的某个实例的初始属性值。

|properties|初始值|
|--------------|-------------------|
|<xref:System.Web.UI.WebControls.FormViewModeEventArgs.CancelingEdit%2A>|`cancelingEdit` 参数的值。|
|<xref:System.Web.UI.WebControls.FormViewModeEventArgs.NewMode%2A>|`mode` 参数的值。|

> [!NOTE]
>  此构造函数主要由控件开发人员在引发事件时使用。

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormView" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewModeEventHandler" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ModeChanging" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewModeEventArgs.CancelingEdit" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewModeEventArgs.NewMode" />
      </Docs>
    </Member>
    <Member MemberName="CancelingEdit">
      <MemberSignature Language="C#" Value="public bool CancelingEdit { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CancelingEdit" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormViewModeEventArgs.CancelingEdit" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CancelingEdit As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CancelingEdit { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CancelingEdit : bool" Usage="System.Web.UI.WebControls.FormViewModeEventArgs.CancelingEdit" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个布尔值，指示是否由于用户取消编辑操作而引发了 <see cref="E:System.Web.UI.WebControls.FormView.ModeChanging" /> 事件。</summary>
        <value>设置为 <see langword="true" /> 表明由于用户取消编辑操作而引发了 <see cref="E:System.Web.UI.WebControls.FormView.ModeChanging" /> 事件；否则为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.FormView.ModeChanging>当 <xref:System.Web.UI.WebControls.FormView> 控件尝试在编辑、插入和只读模式之间切换时，但在模式实际更改之前，会引发事件。 使用 <xref:System.Web.UI.WebControls.FormViewModeEventArgs.CancelingEdit%2A> 属性可确定是否 <xref:System.Web.UI.WebControls.FormView.ModeChanging> 由于用户取消编辑或插入操作而引发了事件。 例如，你可能想要 <xref:System.Web.UI.WebControls.FormView> 在用户取消编辑操作时重置控件。



## Examples
 下面的示例演示如何使用 <xref:System.Web.UI.WebControls.FormViewModeEventArgs.CancelingEdit%2A> 属性来确定模式更改是否是用户取消编辑操作的结果。

> [!IMPORTANT]
>  此示例具有一个接受用户输入的文本框，这是一个潜在的安全威胁。 默认情况下，ASP.NET 网页验证用户输入是否不包含脚本或 HTML 元素。 有关详细信息，请参阅[脚本侵入概述](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100))。

 [!code-aspx-csharp[FormViewModeEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewModeEventArgs/CS/formviewmodeeventargscs.aspx#1)]
 [!code-aspx-vb[FormViewModeEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewModeEventArgs/VB/formviewmodeeventargsvb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormView" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewModeEventHandler" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ModeChanging" />
      </Docs>
    </Member>
    <Member MemberName="NewMode">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.FormViewMode NewMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.FormViewMode NewMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormViewModeEventArgs.NewMode" />
      <MemberSignature Language="VB.NET" Value="Public Property NewMode As FormViewMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::FormViewMode NewMode { System::Web::UI::WebControls::FormViewMode get(); void set(System::Web::UI::WebControls::FormViewMode value); };" />
      <MemberSignature Language="F#" Value="member this.NewMode : System.Web.UI.WebControls.FormViewMode with get, set" Usage="System.Web.UI.WebControls.FormViewModeEventArgs.NewMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.FormViewMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置 <see cref="T:System.Web.UI.WebControls.FormView" /> 控件正在转换到的模式。</summary>
        <value><see cref="T:System.Web.UI.WebControls.FormViewMode" /> 枚举值之一。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 使用 <xref:System.Web.UI.WebControls.FormViewModeEventArgs.NewMode%2A> 属性可确定控件要更改到的模式 <xref:System.Web.UI.WebControls.FormView> 。 例如，你可能想要 <xref:System.Web.UI.WebControls.FormView> 基于控件所更改的模式来配置控件。 还可以通过将此属性 <xref:System.Web.UI.WebControls.FormView> 设置为枚举值之一来指定控件更改到的模式 <xref:System.Web.UI.WebControls.FormViewMode> 。



## Examples
 下面的示例演示如何使用 <xref:System.Web.UI.WebControls.FormViewModeEventArgs.NewMode%2A> 属性来确定控件要转换到的模式 <xref:System.Web.UI.WebControls.FormView> 。

> [!IMPORTANT]
>  此示例具有一个接受用户输入的文本框，这是一个潜在的安全威胁。 默认情况下，ASP.NET 网页验证用户输入是否不包含脚本或 HTML 元素。 有关详细信息，请参阅[脚本侵入概述](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100))。

 [!code-aspx-csharp[FormViewModeEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewModeEventArgs/CS/formviewmodeeventargscs.aspx#1)]
 [!code-aspx-vb[FormViewModeEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewModeEventArgs/VB/formviewmodeeventargsvb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormView" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewModeEventHandler" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewMode" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ModeChanging" />
      </Docs>
    </Member>
  </Members>
</Type>
