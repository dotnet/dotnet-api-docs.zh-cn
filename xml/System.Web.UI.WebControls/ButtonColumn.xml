<Type Name="ButtonColumn" FullName="System.Web.UI.WebControls.ButtonColumn">
  <Metadata><Meta Name="ms.openlocfilehash" Value="9ffba21f64d53dc7426139fef4a145372d0785d4" /><Meta Name="ms.sourcegitcommit" Value="11d168140aa8fade0768c2a9dde3e3bcacfdfb7d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="05/27/2020" /><Meta Name="ms.locfileid" Value="83963021" /></Metadata><TypeSignature Language="C#" Value="public class ButtonColumn : System.Web.UI.WebControls.DataGridColumn" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ButtonColumn extends System.Web.UI.WebControls.DataGridColumn" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.ButtonColumn" />
  <TypeSignature Language="VB.NET" Value="Public Class ButtonColumn&#xA;Inherits DataGridColumn" />
  <TypeSignature Language="C++ CLI" Value="public ref class ButtonColumn : System::Web::UI::WebControls::DataGridColumn" />
  <TypeSignature Language="F#" Value="type ButtonColumn = class&#xA;    inherit DataGridColumn" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.DataGridColumn</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>包含用户定义按钮的 <see cref="T:System.Web.UI.WebControls.DataGrid" /> 控件的列类型。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用 <xref:System.Web.UI.WebControls.DataGrid> 控件中的 <xref:System.Web.UI.WebControls.ButtonColumn> 类来创建与 <xref:System.Web.UI.WebControls.DataGrid> 控件中的每一行对应的按钮。 通过设置 "<xref:System.Web.UI.WebControls.ButtonColumn.Text%2A>" 属性来指定在按钮中显示的标题。 如果设置 <xref:System.Web.UI.WebControls.ButtonColumn.Text%2A> 属性，则 <xref:System.Web.UI.WebControls.ButtonColumn> 对象中的所有按钮共享同一标题。 或者，您可以将 <xref:System.Web.UI.WebControls.ButtonColumn> 按钮绑定到数据源中的字段。 这允许您显示每个按钮的不同标题。 指定字段中的值将用于文本标题。 设置 <xref:System.Web.UI.WebControls.ButtonColumn.DataTextField%2A> 属性以将 <xref:System.Web.UI.WebControls.ButtonColumn> 绑定到数据源中的字段。  
  
 您可以通过使用格式字符串设置 <xref:System.Web.UI.WebControls.ButtonColumn.DataTextField%2A> 属性来设置按钮中显示的标题的格式。  
  
 单击 <xref:System.Web.UI.WebControls.ButtonColumn> 中的按钮将引发 <xref:System.Web.UI.WebControls.DataGrid.ItemCommand> 事件。 您可以通过为 <xref:System.Web.UI.WebControls.DataGrid.ItemCommand> 事件提供事件处理程序，以编程方式控制单击按钮时执行的操作。  
  
 默认情况下，单击 <xref:System.Web.UI.WebControls.ButtonColumn> 中的按钮时，不会执行页面验证。 页验证确定与页上的验证控件关联的输入控件是否全部通过验证控件指定的验证规则。 若要在单击按钮时执行页验证，请将 <xref:System.Web.UI.WebControls.ButtonColumn.CausesValidation%2A> 属性设置为 `true`。  
  
   
  
## Examples  
 下面的代码示例演示如何使用 <xref:System.Web.UI.WebControls.DataGrid> 控件中的 <xref:System.Web.UI.WebControls.ButtonColumn> 类创建**添加**按钮。  
  
 [!code-csharp[ButtonColumnButtonType#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonColumnButtonType/CS/source.cs#1)]
 [!code-vb[ButtonColumnButtonType#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonColumnButtonType/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.DataGrid" />
    <altmember cref="T:System.Web.UI.WebControls.DataGridColumn" />
    <altmember cref="T:System.Web.UI.WebControls.BoundColumn" />
    <altmember cref="T:System.Web.UI.WebControls.EditCommandColumn" />
    <altmember cref="T:System.Web.UI.WebControls.HyperLinkColumn" />
    <altmember cref="T:System.Web.UI.WebControls.TemplateColumn" />
    <altmember cref="T:System.Web.UI.WebControls.Button" />
    <altmember cref="T:System.Web.UI.WebControls.LinkButton" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ButtonColumn ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ButtonColumn.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ButtonColumn();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Web.UI.WebControls.ButtonColumn" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用 <xref:System.Web.UI.WebControls.ButtonColumn.%23ctor%2A> 构造函数来创建和初始化 <xref:System.Web.UI.WebControls.ButtonColumn> 类的新实例。  
  
   
  
## Examples  
 下面的代码示例演示如何创建和初始化 <xref:System.Web.UI.WebControls.ButtonColumn> 类的新实例，并将其添加到 <xref:System.Web.UI.WebControls.DataGrid.Columns%2A> 集合。  
  
 [!code-csharp[ButtonColumnButtonType#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonColumnButtonType/CS/source.cs#1)]
 [!code-vb[ButtonColumnButtonType#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonColumnButtonType/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.DataGrid.Columns" />
      </Docs>
    </Member>
    <Member MemberName="ButtonType">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.ButtonColumnType ButtonType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.ButtonColumnType ButtonType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ButtonColumn.ButtonType" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ButtonType As ButtonColumnType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::ButtonColumnType ButtonType { System::Web::UI::WebControls::ButtonColumnType get(); void set(System::Web::UI::WebControls::ButtonColumnType value); };" />
      <MemberSignature Language="F#" Value="member this.ButtonType : System.Web.UI.WebControls.ButtonColumnType with get, set" Usage="System.Web.UI.WebControls.ButtonColumn.ButtonType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Description("The type of button contained within the column.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ButtonColumnType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置要在 <see cref="T:System.Web.UI.WebControls.ButtonColumn" /> 对象中显示的按钮的类型。</summary>
        <value><see cref="T:System.Web.UI.WebControls.ButtonColumnType" /> 值之一。 默认为 <see langword="LinkButton" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用 "<xref:System.Web.UI.WebControls.ButtonColumn.ButtonType%2A>" 属性可指定 <xref:System.Web.UI.WebControls.ButtonColumn> 对象中的按钮是否显示为 "链接" 或 "推送" 按钮。 下表列出了可能的设置。  
  
|按钮类型|显示|  
|-----------------|-------------|  
|<xref:System.Web.UI.WebControls.ButtonColumnType.LinkButton>|链接。|  
|<xref:System.Web.UI.WebControls.ButtonColumnType.PushButton>|按钮控件。|  
  
 单击 <xref:System.Web.UI.WebControls.ButtonColumn> 中的按钮将引发 <xref:System.Web.UI.WebControls.DataGrid.ItemCommand> 事件。 您可以通过为 <xref:System.Web.UI.WebControls.DataGrid.ItemCommand> 事件提供事件处理程序，以编程方式控制单击按钮时执行的操作。  
  
 此属性的值存储在视图状态中。  
  
   
  
## Examples  
 下面的代码示例演示如何使用 <xref:System.Web.UI.WebControls.ButtonColumn.ButtonType%2A> 属性来指定 <xref:System.Web.UI.WebControls.ButtonColumn> 对象中的按钮显示为 "推送" 按钮。  
  
 [!code-csharp[ButtonColumnButtonType#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonColumnButtonType/CS/source.cs#1)]
 [!code-vb[ButtonColumnButtonType#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonColumnButtonType/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">指定的列类型不是 <see cref="T:System.Web.UI.WebControls.ButtonColumnType" /> 值之一。</exception>
        <altmember cref="T:System.Web.UI.WebControls.ButtonColumnType" />
        <altmember cref="E:System.Web.UI.WebControls.DataGrid.ItemCommand" />
      </Docs>
    </Member>
    <Member MemberName="CausesValidation">
      <MemberSignature Language="C#" Value="public virtual bool CausesValidation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CausesValidation" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ButtonColumn.CausesValidation" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CausesValidation As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CausesValidation { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.CausesValidation : bool with get, set" Usage="System.Web.UI.WebControls.ButtonColumn.CausesValidation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示在单击 <see cref="T:System.Web.UI.WebControls.ButtonColumn" /> 对象中的按钮时是否执行验证。</summary>
        <value>如果在单击 <see cref="T:System.Web.UI.WebControls.ButtonColumn" /> 中的按钮时执行验证，则为 <see langword="true" />；否则为 <see langword="false" />。 默认为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 默认情况下，单击 <xref:System.Web.UI.WebControls.ButtonColumn> 对象中的按钮时，不会执行页面验证。 页验证确定与页上的验证控件关联的输入控件是否全部通过验证控件指定的验证规则。 若要在单击 <xref:System.Web.UI.WebControls.ButtonColumn> 中的按钮时执行页验证，请将 <xref:System.Web.UI.WebControls.ButtonColumn.CausesValidation%2A> 属性设置为 "`true`"。  
  
 当 `true`<xref:System.Web.UI.WebControls.ButtonColumn.CausesValidation%2A> 属性的值时，还可以使用 <xref:System.Web.UI.WebControls.ButtonColumn.ValidationGroup%2A> 属性来指定 <xref:System.Web.UI.WebControls.ButtonColumn> 导致验证的验证组的名称。  
  
 此属性的值存储在视图状态中。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Page.Validate" />
        <altmember cref="P:System.Web.UI.WebControls.ButtonColumn.ValidationGroup" />
      </Docs>
    </Member>
    <Member MemberName="CommandName">
      <MemberSignature Language="C#" Value="public virtual string CommandName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CommandName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ButtonColumn.CommandName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CommandName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ CommandName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CommandName : string with get, set" Usage="System.Web.UI.WebControls.ButtonColumn.CommandName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Description("The command associated with the button.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个字符串，该字符串表示当单击 <see cref="T:System.Web.UI.WebControls.ButtonColumn" /> 对象中的按钮时要执行的命令。</summary>
        <value>一个字符串，表示当单击 <see cref="T:System.Web.UI.WebControls.ButtonColumn" /> 中的按钮时要执行的命令。 默认值为空字符串("")。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用 "<xref:System.Web.UI.WebControls.ButtonColumn.CommandName%2A>" 属性将命令名称（如 `Add` 或 `Remove`）与按钮相关联。 在单击 <xref:System.Web.UI.WebControls.ButtonColumn?displayProperty=nameWithType> 对象中的按钮时，可以将 <xref:System.Web.UI.WebControls.ButtonColumn.CommandName%2A> 属性设置为标识要执行的操作的任何字符串。 然后，你可以通过编程方式在 <xref:System.Web.UI.WebControls.DataGrid.ItemCommand> 事件的事件处理程序中确定命令名称并执行适当的操作。  
  
 此属性的值存储在视图状态中。  
  
   
  
## Examples  
 下面的代码示例演示如何使用 <xref:System.Web.UI.WebControls.ButtonColumn.CommandName%2A> 属性将命令名称与按钮相关联。 然后，在 <xref:System.Web.UI.WebControls.DataGrid.ItemCommand> 事件的事件处理程序中以编程方式确定所单击按钮的命令名称并执行适当的操作。  
  
 [!code-aspx-csharp[ButtonColumnCommandName#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonColumnCommandName/CS/ButtonColumnCommandNameCS.aspx#1)]
 [!code-aspx-vb[ButtonColumnCommandName#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonColumnCommandName/VB/ButtonColumnCommandNameVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.DataGrid.ItemCommand" />
        <altmember cref="F:System.String.Empty" />
      </Docs>
    </Member>
    <Member MemberName="DataTextField">
      <MemberSignature Language="C#" Value="public virtual string DataTextField { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataTextField" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ButtonColumn.DataTextField" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property DataTextField As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ DataTextField { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataTextField : string with get, set" Usage="System.Web.UI.WebControls.ButtonColumn.DataTextField" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Description("The field bound to the text property of the button.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置要绑定到 <see cref="T:System.Web.UI.WebControls.ButtonColumn" /> 对象的数据源的字段名。</summary>
        <value>要绑定到 <see cref="T:System.Web.UI.WebControls.ButtonColumn" /> 的字段名。 默认值为空字符串("")。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用 <xref:System.Web.UI.WebControls.ButtonColumn.DataTextField%2A> 属性指定数据源中要绑定到 <xref:System.Web.UI.WebControls.ButtonColumn> 对象中按钮的 <xref:System.Web.UI.WebControls.ButtonColumn.Text%2A> 属性的字段名称。  
  
 将列绑定到字段，而不是直接设置 <xref:System.Web.UI.WebControls.ButtonColumn.Text%2A> 属性允许您使用指定的字段中的值为 <xref:System.Web.UI.WebControls.ButtonColumn> 中的按钮显示不同的标题。  
  
 此属性的值存储在视图状态中。  
  
   
  
## Examples  
 下面的代码示例演示如何使用 <xref:System.Web.UI.WebControls.ButtonColumn.DataTextField%2A> 属性将 <xref:System.Web.UI.WebControls.ButtonColumn> 对象绑定到数据源中的字段。  
  
 [!code-aspx-csharp[ButtonColumnDataTextField#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonColumnDataTextField/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[ButtonColumnDataTextField#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonColumnDataTextField/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ButtonColumn.Text" />
      </Docs>
    </Member>
    <Member MemberName="DataTextFormatString">
      <MemberSignature Language="C#" Value="public virtual string DataTextFormatString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataTextFormatString" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ButtonColumn.DataTextFormatString" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property DataTextFormatString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ DataTextFormatString { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataTextFormatString : string with get, set" Usage="System.Web.UI.WebControls.ButtonColumn.DataTextFormatString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Description("The formatting applied to the value bound to the Text property.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置字符串，该字符串指定各按钮中标题的显示格式。</summary>
        <value>指定各按钮中标题的显示格式的字符串。 默认值为空字符串("")。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用 <xref:System.Web.UI.WebControls.ButtonColumn.DataTextFormatString%2A> 属性为 <xref:System.Web.UI.WebControls.ButtonColumn> 对象中的按钮的标题提供自定义的显示格式。  
  
 数据格式字符串由以冒号分隔的两部分组成，格式为 `{A:Bxx}`。 例如，格式化字符串 `{0:F2}` 设置单元格的格式，以显示具有两个小数位的固定的点号。  
  
> [!NOTE]
>  整个字符串必须括在大括号中，以指示它是格式字符串而不是文本字符串。 大括号外的任何文本都显示为文本。  
  
 冒号前面的值（在常规示例中为`A`）指定从零开始的参数列表中的参数索引。  
  
> [!NOTE]
>  此值只能设置为0，因为每个单元格中只有一个值。  
  
 冒号后面的字符（在常规示例中为`B`）指定要在其中显示值的格式。 下表列出了常见格式。  
  
|格式字符|显示数值|  
|----------------------|--------------------------------|  
|`C`|货币格式。|  
|`D`|小数格式。|  
|`E`|科学型（指数）格式。|  
|`F`|固定格式。|  
|`G`|常规格式。|  
|`N`|数字格式。|  
|`X`|十六进制格式。|  
  
> [!NOTE]
>  格式字符不区分大小写，`X`除外，这种情况下，会在指定的情况下显示十六进制字符。  
  
 格式字符后的值（在常规示例中为`xx`）指定要显示的有效位数或小数位数。  
  
 此属性的值存储在视图状态中。  
  
 有关设置字符串格式的详细信息，请参阅[格式设置类型](/dotnet/standard/base-types/formatting-types)。  
  
   
  
## Examples  
 下面的代码示例演示如何使用 <xref:System.Web.UI.WebControls.ButtonColumn.DataTextFormatString%2A> 属性以货币格式显示 <xref:System.Web.UI.WebControls.ButtonColumn> 对象中每个按钮的标题。  
  
 [!code-aspx-csharp[ButtonColumnDataTextField#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonColumnDataTextField/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[ButtonColumnDataTextField#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonColumnDataTextField/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.String.Empty" />
        <related type="Article" href="/dotnet/standard/base-types/formatting-types">设置 .NET 中类型的格式</related>
      </Docs>
    </Member>
    <Member MemberName="FormatDataTextValue">
      <MemberSignature Language="C#" Value="protected virtual string FormatDataTextValue (object dataTextValue);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string FormatDataTextValue(object dataTextValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ButtonColumn.FormatDataTextValue(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function FormatDataTextValue (dataTextValue As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ FormatDataTextValue(System::Object ^ dataTextValue);" />
      <MemberSignature Language="F#" Value="abstract member FormatDataTextValue : obj -&gt; string&#xA;override this.FormatDataTextValue : obj -&gt; string" Usage="buttonColumn.FormatDataTextValue dataTextValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataTextValue" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="dataTextValue">要格式化的值。</param>
        <summary>将指定的值转换为 <see cref="P:System.Web.UI.WebControls.ButtonColumn.DataTextFormatString" /> 属性指示的格式。</summary>
        <returns>转换为由 <see cref="P:System.Web.UI.WebControls.ButtonColumn.DataTextFormatString" /> 指示的格式的 <paramref name="dataTextValue" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用 <xref:System.Web.UI.WebControls.ButtonColumn.FormatDataTextValue%2A> 方法可将指定的值转换为 <xref:System.Web.UI.WebControls.ButtonColumn.DataTextFormatString%2A> 属性指示的格式。  
  
> [!NOTE]
>  如果未设置 <xref:System.Web.UI.WebControls.ButtonColumn.DataTextFormatString%2A> 属性，则 <xref:System.Web.UI.WebControls.ButtonColumn.FormatDataTextValue%2A> 方法返回值的等效字符串。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ButtonColumn.DataTextFormatString" />
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public override void Initialize ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Initialize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ButtonColumn.Initialize" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Initialize ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Initialize();" />
      <MemberSignature Language="F#" Value="override this.Initialize : unit -&gt; unit" Usage="buttonColumn.Initialize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>将 <see cref="T:System.Web.UI.WebControls.ButtonColumn" /> 对象重置为其初始状态。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用 <xref:System.Web.UI.WebControls.ButtonColumn.Initialize%2A> 方法将 <xref:System.Web.UI.WebControls.ButtonColumn> 对象重置为它的初始状态。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.ButtonColumn.InitializeCell(System.Web.UI.WebControls.TableCell,System.Int32,System.Web.UI.WebControls.ListItemType)" />
      </Docs>
    </Member>
    <Member MemberName="InitializeCell">
      <MemberSignature Language="C#" Value="public override void InitializeCell (System.Web.UI.WebControls.TableCell cell, int columnIndex, System.Web.UI.WebControls.ListItemType itemType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void InitializeCell(class System.Web.UI.WebControls.TableCell cell, int32 columnIndex, valuetype System.Web.UI.WebControls.ListItemType itemType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ButtonColumn.InitializeCell(System.Web.UI.WebControls.TableCell,System.Int32,System.Web.UI.WebControls.ListItemType)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub InitializeCell (cell As TableCell, columnIndex As Integer, itemType As ListItemType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void InitializeCell(System::Web::UI::WebControls::TableCell ^ cell, int columnIndex, System::Web::UI::WebControls::ListItemType itemType);" />
      <MemberSignature Language="F#" Value="override this.InitializeCell : System.Web.UI.WebControls.TableCell * int * System.Web.UI.WebControls.ListItemType -&gt; unit" Usage="buttonColumn.InitializeCell (cell, columnIndex, itemType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cell" Type="System.Web.UI.WebControls.TableCell" />
        <Parameter Name="columnIndex" Type="System.Int32" />
        <Parameter Name="itemType" Type="System.Web.UI.WebControls.ListItemType" />
      </Parameters>
      <Docs>
        <param name="cell">一个 <see cref="T:System.Web.UI.WebControls.TableCell" />，它表示要重置的单元格。</param>
        <param name="columnIndex">单元格所在列的列号。</param>
        <param name="itemType"><see cref="T:System.Web.UI.WebControls.ListItemType" /> 值之一。</param>
        <summary>将 <see cref="T:System.Web.UI.WebControls.ButtonColumn" /> 对象中的单元格重置为其初始状态。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ButtonColumn.InitializeCell%2A> 方法将 <xref:System.Web.UI.WebControls.ButtonColumn> 对象中的指定单元格重置为它的初始状态。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.ButtonColumn.Initialize" />
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public virtual string Text { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ButtonColumn.Text" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Text As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Text { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Text : string with get, set" Usage="System.Web.UI.WebControls.ButtonColumn.Text" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Description("The text used for the button.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置在 <see cref="T:System.Web.UI.WebControls.ButtonColumn" /> 对象的按钮中显示的标题。</summary>
        <value>在 <see cref="T:System.Web.UI.WebControls.ButtonColumn" /> 的按钮中显示的标题。 默认值为空字符串("")。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用 <xref:System.Web.UI.WebControls.ButtonColumn.Text%2A> 属性指定或确定 <xref:System.Web.UI.WebControls.ButtonColumn> 对象的按钮中显示的标题。  
  
> [!NOTE]
>  如果设置了 "<xref:System.Web.UI.WebControls.ButtonColumn.Text%2A>" 属性，则 <xref:System.Web.UI.WebControls.ButtonColumn> 中的所有按钮共享相同的标题。  
  
 或者，您可以将 <xref:System.Web.UI.WebControls.ButtonColumn> 绑定到数据源中的字段。 这允许您使用指定字段中的值为列中的按钮显示不同的标题。 设置 <xref:System.Web.UI.WebControls.ButtonColumn.DataTextField%2A> 属性以将 <xref:System.Web.UI.WebControls.ButtonColumn> 绑定到数据源中的字段。  
  
 此属性的值存储在视图状态中。  
  
 设置此属性后，可以使用设计器工具自动将此属性的值保存到资源文件中。 有关详细信息，请参阅 <xref:System.ComponentModel.LocalizableAttribute> 和[全球化和本地化](https://docs.microsoft.com/previous-versions/aspnet/c6zyy3s9(v=vs.100))。  
  
   
  
## Examples  
 下面的代码示例演示如何使用 <xref:System.Web.UI.WebControls.ButtonColumn.Text%2A> 属性指定 <xref:System.Web.UI.WebControls.ButtonColumn> 对象中的按钮的标题。  
  
 [!code-aspx-csharp[Classic ButtonColumn.ButtonType Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic ButtonColumn.ButtonType Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic ButtonColumn.ButtonType Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic ButtonColumn.ButtonType Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ButtonColumn.DataTextField" />
        <altmember cref="F:System.String.Empty" />
      </Docs>
    </Member>
    <Member MemberName="ValidationGroup">
      <MemberSignature Language="C#" Value="public virtual string ValidationGroup { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ValidationGroup" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ButtonColumn.ValidationGroup" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ValidationGroup As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ValidationGroup { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ValidationGroup : string with get, set" Usage="System.Web.UI.WebControls.ButtonColumn.ValidationGroup" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置 <see cref="T:System.Web.UI.WebControls.ButtonColumn" /> 对象在回发到服务器时导致验证的验证控件组。</summary>
        <value>在 <see cref="T:System.Web.UI.WebControls.ButtonColumn" /> 对象回发到服务器时导致验证的验证控件组。 默认值为空字符串("")。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用验证组可以将页上的验证控件分配给特定类别。 每个验证组都可以独立于页面上的其他验证组进行验证。 使用 <xref:System.Web.UI.WebControls.ButtonColumn.ValidationGroup%2A> 属性指定当 <xref:System.Web.UI.WebControls.ButtonColumn> 对象回发到服务器时所导致验证的验证组的名称。  
  
 仅当 "<xref:System.Web.UI.WebControls.ButtonColumn.CausesValidation%2A>" 属性的值设置为 "`true`时，<xref:System.Web.UI.WebControls.ButtonColumn.ValidationGroup%2A> 属性才有效果。 如果为 <xref:System.Web.UI.WebControls.ButtonColumn.ValidationGroup%2A> 属性指定值，则当 <xref:System.Web.UI.WebControls.ButtonColumn> 回发到服务器时，只会验证属于指定组的验证控件。 如果未指定 <xref:System.Web.UI.WebControls.ButtonColumn.ValidationGroup%2A> 属性的值，并且 <xref:System.Web.UI.WebControls.ButtonColumn.CausesValidation%2A> 属性设置为 `true`，则当 <xref:System.Web.UI.WebControls.ButtonColumn> 回发到服务器时，将验证该页上未分配到验证组的所有验证控件。  
  
 此属性的值存储在视图状态中。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ButtonColumn.CausesValidation" />
        <altmember cref="T:System.Web.UI.WebControls.RequiredFieldValidator" />
      </Docs>
    </Member>
  </Members>
</Type>
