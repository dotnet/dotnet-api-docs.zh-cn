<Type Name="FormViewCommandEventArgs" FullName="System.Web.UI.WebControls.FormViewCommandEventArgs">
  <Metadata><Meta Name="ms.openlocfilehash" Value="269032b32ef5a448998ad5ca63b203b6e4903168" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89680212" /></Metadata><TypeSignature Language="C#" Value="public class FormViewCommandEventArgs : System.Web.UI.WebControls.CommandEventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit FormViewCommandEventArgs extends System.Web.UI.WebControls.CommandEventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.FormViewCommandEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class FormViewCommandEventArgs&#xA;Inherits CommandEventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class FormViewCommandEventArgs : System::Web::UI::WebControls::CommandEventArgs" />
  <TypeSignature Language="F#" Value="type FormViewCommandEventArgs = class&#xA;    inherit CommandEventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.CommandEventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>为 <see cref="E:System.Web.UI.WebControls.FormView.ItemCommand" /> 事件提供数据。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.FormView.ItemCommand>单击控件中的按钮时，将引发事件 <xref:System.Web.UI.WebControls.FormView> 。 这使你可以提供一种事件处理方法，该方法可在每次发生此事件时执行自定义例程。

 控件中的按钮 <xref:System.Web.UI.WebControls.FormView> 还可以调用控件的某些内置功能。 若要执行这些操作之一，请将 `CommandName` 按钮的属性设置为下表中的值之一。

|CommandName 值|说明|
|-----------------------|-----------------|
|退出|取消编辑或插入操作，并将 <xref:System.Web.UI.WebControls.FormView> 控件返回到属性指定的模式 <xref:System.Web.UI.WebControls.FormView.DefaultMode%2A> 。 引发 <xref:System.Web.UI.WebControls.FormView.ModeChanged> 和 <xref:System.Web.UI.WebControls.FormView.ModeChanging> 事件。|
|“Delete”|删除当前记录。 引发 <xref:System.Web.UI.WebControls.FormView.ItemDeleted> 和 <xref:System.Web.UI.WebControls.FormView.ItemDeleting> 事件。|
|编辑|将 <xref:System.Web.UI.WebControls.FormView> 控件置于编辑模式。 引发 <xref:System.Web.UI.WebControls.FormView.ModeChanged> 和 <xref:System.Web.UI.WebControls.FormView.ModeChanging> 事件。|
|&|将当前记录插入到数据源中。 引发 <xref:System.Web.UI.WebControls.FormView.ItemInserted> 和 <xref:System.Web.UI.WebControls.FormView.ItemInserting> 事件。|
|新西兰|将 <xref:System.Web.UI.WebControls.FormView> 控件置于插入模式下。 引发 <xref:System.Web.UI.WebControls.FormView.ModeChanged> 和 <xref:System.Web.UI.WebControls.FormView.ModeChanging> 事件。|
|分页|执行分页操作。 将 `CommandArgument` 该按钮的属性设置为 "第一步"、"上一步"、"下一步"、"上一步" 或页码，以指定要执行的分页操作的类型。 引发 <xref:System.Web.UI.WebControls.FormView.PageIndexChanged> 和 <xref:System.Web.UI.WebControls.FormView.PageIndexChanging> 事件。|
|时更新|更新数据源中的当前记录。 引发 <xref:System.Web.UI.WebControls.FormView.ItemUpdated> 和 <xref:System.Web.UI.WebControls.FormView.ItemUpdating> 事件。|

 尽管 <xref:System.Web.UI.WebControls.FormView.ItemCommand> 单击上表中列出的按钮时引发事件，但建议使用表中列出的事件执行该操作。

 <xref:System.Web.UI.WebControls.FormViewCommandEventArgs>对象传递给事件处理方法，该方法允许您确定所单击按钮的命令名和命令参数。 若要确定命令名称和命令参数，请 <xref:System.Web.UI.WebControls.CommandEventArgs.CommandName%2A> 分别使用和 <xref:System.Web.UI.WebControls.CommandEventArgs.CommandArgument%2A> 属性。 还可以通过使用属性访问引发事件的按钮控件 <xref:System.Web.UI.WebControls.DetailsViewCommandEventArgs.CommandSource%2A> 。

 有关如何处理事件的详细信息，请参阅 [处理和引发事件](/dotnet/standard/events/)。

 有关 <xref:System.Web.UI.WebControls.FormViewCommandEventArgs> 类的实例的初始属性值列表，请参见 <xref:System.Web.UI.WebControls.FormViewCommandEventArgs.%23ctor%2A> 构造函数。



## Examples
 下面的示例演示如何使用 <xref:System.Web.UI.WebControls.FormViewCommandEventArgs> 传递到事件的事件处理方法的对象 <xref:System.Web.UI.WebControls.DetailsView.ItemCommand> 来确定用户在控件中单击了哪个按钮 <xref:System.Web.UI.WebControls.FormView> 。

> [!IMPORTANT]
>  此示例具有一个接受用户输入的文本框，这是一个潜在的安全威胁。 默认情况下，ASP.NET 网页验证用户输入是否不包含脚本或 HTML 元素。 有关详细信息，请参阅[脚本侵入概述](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100))。

 [!code-aspx-csharp[FormViewItemCommandEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewItemCommandEventArgs/CS/formviewcommandeventargscs.aspx#1)]
 [!code-aspx-vb[FormViewItemCommandEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewItemCommandEventArgs/VB/formviewcommandeventargsvb.aspx#1)]

 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.FormView" />
    <altmember cref="T:System.Web.UI.WebControls.FormViewCommandEventHandler" />
    <altmember cref="T:System.Web.UI.WebControls.CommandEventArgs" />
    <altmember cref="E:System.Web.UI.WebControls.FormView.ItemCommand" />
    <altmember cref="M:System.Web.UI.WebControls.FormView.OnItemCommand(System.Web.UI.WebControls.FormViewCommandEventArgs)" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FormViewCommandEventArgs (object commandSource, System.Web.UI.WebControls.CommandEventArgs originalArgs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object commandSource, class System.Web.UI.WebControls.CommandEventArgs originalArgs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormViewCommandEventArgs.#ctor(System.Object,System.Web.UI.WebControls.CommandEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (commandSource As Object, originalArgs As CommandEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FormViewCommandEventArgs(System::Object ^ commandSource, System::Web::UI::WebControls::CommandEventArgs ^ originalArgs);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.FormViewCommandEventArgs : obj * System.Web.UI.WebControls.CommandEventArgs -&gt; System.Web.UI.WebControls.FormViewCommandEventArgs" Usage="new System.Web.UI.WebControls.FormViewCommandEventArgs (commandSource, originalArgs)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="commandSource" Type="System.Object" />
        <Parameter Name="originalArgs" Type="System.Web.UI.WebControls.CommandEventArgs" />
      </Parameters>
      <Docs>
        <param name="commandSource">命令源。</param>
        <param name="originalArgs">包含事件数据的 <see cref="T:System.Web.UI.WebControls.CommandEventArgs" />。</param>
        <summary>初始化 <see cref="T:System.Web.UI.WebControls.FormViewCommandEventArgs" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 使用此构造函数初始化类的新实例 <xref:System.Web.UI.WebControls.FormViewCommandEventArgs> 。

 下表显示了 <xref:System.Web.UI.WebControls.FormViewCommandEventArgs> 实例的初始属性值。

|properties|初始值|
|--------------|-------------------|
|<xref:System.Web.UI.WebControls.CommandEventArgs.CommandArgument%2A>|<xref:System.Web.UI.WebControls.CommandEventArgs.CommandArgument%2A>参数中包含的的属性的值 <xref:System.Web.UI.WebControls.CommandEventArgs> `originalArgs` 。|
|<xref:System.Web.UI.WebControls.CommandEventArgs.CommandName%2A>|<xref:System.Web.UI.WebControls.CommandEventArgs.CommandName%2A>参数中包含的的属性的值 <xref:System.Web.UI.WebControls.CommandEventArgs> `originalArgs` 。|
|<xref:System.Web.UI.WebControls.FormViewCommandEventArgs.CommandSource%2A>|参数中包含的对象 `commandSource` 。|

> [!NOTE]
>  此构造函数主要由控件开发人员在引发事件时使用。

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.CommandEventArgs" />
        <altmember cref="P:System.Web.UI.WebControls.CommandEventArgs.CommandArgument" />
        <altmember cref="P:System.Web.UI.WebControls.CommandEventArgs.CommandName" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewCommandEventArgs.CommandSource" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.OnItemCommand(System.Web.UI.WebControls.FormViewCommandEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="CommandSource">
      <MemberSignature Language="C#" Value="public object CommandSource { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object CommandSource" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormViewCommandEventArgs.CommandSource" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CommandSource As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ CommandSource { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CommandSource : obj" Usage="System.Web.UI.WebControls.FormViewCommandEventArgs.CommandSource" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取引发事件的控件。</summary>
        <value>一个 <see cref="T:System.Object" />，表示引发事件的控件。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 使用 <xref:System.Web.UI.WebControls.FormViewCommandEventArgs.CommandSource%2A> 属性可访问引发事件的控件的属性。 对于 <xref:System.Web.UI.WebControls.FormViewCommandEventArgs> 对象，该控件是用户单击的按钮。



## Examples
 下面的示例演示如何使用 <xref:System.Web.UI.WebControls.FormViewCommandEventArgs.CommandSource%2A> 属性访问引发事件的按钮控件的属性 <xref:System.Web.UI.WebControls.FormView.ItemCommand> 。

> [!IMPORTANT]
>  此示例具有一个接受用户输入的文本框，这是一个潜在的安全威胁。 默认情况下，ASP.NET 网页验证用户输入是否不包含脚本或 HTML 元素。 有关详细信息，请参阅[脚本侵入概述](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100))。

 [!code-aspx-csharp[FormViewItemCommandEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewItemCommandEventArgs/CS/formviewcommandeventargscs.aspx#1)]
 [!code-aspx-vb[FormViewItemCommandEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewItemCommandEventArgs/VB/formviewcommandeventargsvb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormView" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemCommand" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.OnItemCommand(System.Web.UI.WebControls.FormViewCommandEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="Handled">
      <MemberSignature Language="C#" Value="public bool Handled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Handled" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormViewCommandEventArgs.Handled" />
      <MemberSignature Language="VB.NET" Value="Public Property Handled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Handled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Handled : bool with get, set" Usage="System.Web.UI.WebControls.FormViewCommandEventArgs.Handled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置指示控件是否已处理事件的值。</summary>
        <value>如果数据绑定事件代码跳过或已完成，则为 <see langword="true" />；否则为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 在事件处理程序中将此属性设置为， `true` 以指定 <xref:System.Web.UI.WebControls.FormView> 控件不应处理事件，因为您在代码中对其进行处理。

 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
