<Type Name="FormViewCommandEventArgs" FullName="System.Web.UI.WebControls.FormViewCommandEventArgs">
  <Metadata><Meta Name="ms.openlocfilehash" Value="bdb474a94a1821de2211dd7a4661effc7e29521a" /><Meta Name="ms.sourcegitcommit" Value="11d168140aa8fade0768c2a9dde3e3bcacfdfb7d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="05/27/2020" /><Meta Name="ms.locfileid" Value="83962943" /></Metadata><TypeSignature Language="C#" Value="public class FormViewCommandEventArgs : System.Web.UI.WebControls.CommandEventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit FormViewCommandEventArgs extends System.Web.UI.WebControls.CommandEventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.FormViewCommandEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class FormViewCommandEventArgs&#xA;Inherits CommandEventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class FormViewCommandEventArgs : System::Web::UI::WebControls::CommandEventArgs" />
  <TypeSignature Language="F#" Value="type FormViewCommandEventArgs = class&#xA;    inherit CommandEventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.CommandEventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>为 <see cref="E:System.Web.UI.WebControls.FormView.ItemCommand" /> 事件提供数据。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[

## Remarks
 当单击 <xref:System.Web.UI.WebControls.FormView> 控件中的按钮时，将引发 <xref:System.Web.UI.WebControls.FormView.ItemCommand> 事件。 这使你可以提供一种事件处理方法，该方法可在每次发生此事件时执行自定义例程。

 <xref:System.Web.UI.WebControls.FormView> 控件中的按钮还可以调用控件的某些内置功能。 若要执行这些操作之一，请将按钮的 `CommandName` 属性设置为下表中的值之一。

|CommandName 值|说明|
|-----------------------|-----------------|
|退出|取消编辑或插入操作，并将 <xref:System.Web.UI.WebControls.FormView> 控件返回到 <xref:System.Web.UI.WebControls.FormView.DefaultMode%2A> 属性指定的模式。 引发 <xref:System.Web.UI.WebControls.FormView.ModeChanged> 和 <xref:System.Web.UI.WebControls.FormView.ModeChanging> 事件。|
|“Delete”|删除当前记录。 引发 <xref:System.Web.UI.WebControls.FormView.ItemDeleted> 和 <xref:System.Web.UI.WebControls.FormView.ItemDeleting> 事件。|
|编辑|将 <xref:System.Web.UI.WebControls.FormView> 控件置于编辑模式。 引发 <xref:System.Web.UI.WebControls.FormView.ModeChanged> 和 <xref:System.Web.UI.WebControls.FormView.ModeChanging> 事件。|
|&|将当前记录插入到数据源中。 引发 <xref:System.Web.UI.WebControls.FormView.ItemInserted> 和 <xref:System.Web.UI.WebControls.FormView.ItemInserting> 事件。|
|新西兰|将 <xref:System.Web.UI.WebControls.FormView> 控件置于插入模式下。 引发 <xref:System.Web.UI.WebControls.FormView.ModeChanged> 和 <xref:System.Web.UI.WebControls.FormView.ModeChanging> 事件。|
|分页|执行分页操作。 将该按钮的 `CommandArgument` 属性设置为 "First"、"Last"、"Next"、"Last" 或页码，以指定要执行的分页操作的类型。 引发 <xref:System.Web.UI.WebControls.FormView.PageIndexChanged> 和 <xref:System.Web.UI.WebControls.FormView.PageIndexChanging> 事件。|
|时更新|更新数据源中的当前记录。 引发 <xref:System.Web.UI.WebControls.FormView.ItemUpdated> 和 <xref:System.Web.UI.WebControls.FormView.ItemUpdating> 事件。|

 尽管在单击上表中列出的按钮时，将引发 <xref:System.Web.UI.WebControls.FormView.ItemCommand> 事件，但建议使用表中列出的事件执行该操作。

 将 <xref:System.Web.UI.WebControls.FormViewCommandEventArgs> 对象传递到事件处理方法，该方法允许你确定所单击按钮的命令名和命令参数。 若要确定命令名称和命令参数，请分别使用 "<xref:System.Web.UI.WebControls.CommandEventArgs.CommandName%2A>" 和 "<xref:System.Web.UI.WebControls.CommandEventArgs.CommandArgument%2A>" 属性。 还可以通过使用 <xref:System.Web.UI.WebControls.DetailsViewCommandEventArgs.CommandSource%2A> 属性访问引发事件的按钮控件。

 有关如何处理事件的详细信息，请参阅[处理和引发事件](/dotnet/standard/events/)。

 有关 <xref:System.Web.UI.WebControls.FormViewCommandEventArgs> 类的实例的初始属性值列表，请参见 <xref:System.Web.UI.WebControls.FormViewCommandEventArgs.%23ctor%2A> 构造函数。



## Examples
 下面的示例演示如何使用传递到 <xref:System.Web.UI.WebControls.DetailsView.ItemCommand> 事件的事件处理方法的 <xref:System.Web.UI.WebControls.FormViewCommandEventArgs> 对象确定用户单击了 <xref:System.Web.UI.WebControls.FormView> 控件中的哪个按钮。

> [!IMPORTANT]
>  此示例具有一个接受用户输入的文本框，这是一个潜在的安全威胁。 默认情况下，ASP.NET 网页验证用户输入是否不包含脚本或 HTML 元素。 有关详细信息，请参阅[脚本侵入概述](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100))。

 [!code-aspx-csharp[FormViewItemCommandEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewItemCommandEventArgs/CS/formviewcommandeventargscs.aspx#1)]
 [!code-aspx-vb[FormViewItemCommandEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewItemCommandEventArgs/VB/formviewcommandeventargsvb.aspx#1)]

 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.FormView" />
    <altmember cref="T:System.Web.UI.WebControls.FormViewCommandEventHandler" />
    <altmember cref="T:System.Web.UI.WebControls.CommandEventArgs" />
    <altmember cref="E:System.Web.UI.WebControls.FormView.ItemCommand" />
    <altmember cref="M:System.Web.UI.WebControls.FormView.OnItemCommand(System.Web.UI.WebControls.FormViewCommandEventArgs)" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FormViewCommandEventArgs (object commandSource, System.Web.UI.WebControls.CommandEventArgs originalArgs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object commandSource, class System.Web.UI.WebControls.CommandEventArgs originalArgs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormViewCommandEventArgs.#ctor(System.Object,System.Web.UI.WebControls.CommandEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (commandSource As Object, originalArgs As CommandEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FormViewCommandEventArgs(System::Object ^ commandSource, System::Web::UI::WebControls::CommandEventArgs ^ originalArgs);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.FormViewCommandEventArgs : obj * System.Web.UI.WebControls.CommandEventArgs -&gt; System.Web.UI.WebControls.FormViewCommandEventArgs" Usage="new System.Web.UI.WebControls.FormViewCommandEventArgs (commandSource, originalArgs)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="commandSource" Type="System.Object" />
        <Parameter Name="originalArgs" Type="System.Web.UI.WebControls.CommandEventArgs" />
      </Parameters>
      <Docs>
        <param name="commandSource">命令源。</param>
        <param name="originalArgs">包含事件数据的 <see cref="T:System.Web.UI.WebControls.CommandEventArgs" />。</param>
        <summary>初始化 <see cref="T:System.Web.UI.WebControls.FormViewCommandEventArgs" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 使用此构造函数初始化 <xref:System.Web.UI.WebControls.FormViewCommandEventArgs> 类的新实例。

 下表显示了 <xref:System.Web.UI.WebControls.FormViewCommandEventArgs> 实例的初始属性值。

|属性|初始值|
|--------------|-------------------|
|<xref:System.Web.UI.WebControls.CommandEventArgs.CommandArgument%2A>|`originalArgs` 参数中包含的 <xref:System.Web.UI.WebControls.CommandEventArgs> 的 <xref:System.Web.UI.WebControls.CommandEventArgs.CommandArgument%2A> 属性的值。|
|<xref:System.Web.UI.WebControls.CommandEventArgs.CommandName%2A>|`originalArgs` 参数中包含的 <xref:System.Web.UI.WebControls.CommandEventArgs> 的 <xref:System.Web.UI.WebControls.CommandEventArgs.CommandName%2A> 属性的值。|
|<xref:System.Web.UI.WebControls.FormViewCommandEventArgs.CommandSource%2A>|`commandSource` 参数中包含的对象。|

> [!NOTE]
>  此构造函数主要由控件开发人员在引发事件时使用。

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.CommandEventArgs" />
        <altmember cref="P:System.Web.UI.WebControls.CommandEventArgs.CommandArgument" />
        <altmember cref="P:System.Web.UI.WebControls.CommandEventArgs.CommandName" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewCommandEventArgs.CommandSource" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.OnItemCommand(System.Web.UI.WebControls.FormViewCommandEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="CommandSource">
      <MemberSignature Language="C#" Value="public object CommandSource { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object CommandSource" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormViewCommandEventArgs.CommandSource" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CommandSource As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ CommandSource { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CommandSource : obj" Usage="System.Web.UI.WebControls.FormViewCommandEventArgs.CommandSource" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取引发事件的控件。</summary>
        <value>一个 <see cref="T:System.Object" />，表示引发事件的控件。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 使用 <xref:System.Web.UI.WebControls.FormViewCommandEventArgs.CommandSource%2A> 属性访问引发事件的控件的属性。 在 <xref:System.Web.UI.WebControls.FormViewCommandEventArgs> 对象的情况下，该控件是用户单击的按钮。



## Examples
 下面的示例演示如何使用 <xref:System.Web.UI.WebControls.FormViewCommandEventArgs.CommandSource%2A> 属性访问引发 <xref:System.Web.UI.WebControls.FormView.ItemCommand> 事件的按钮控件的属性。

> [!IMPORTANT]
>  此示例具有一个接受用户输入的文本框，这是一个潜在的安全威胁。 默认情况下，ASP.NET 网页验证用户输入是否不包含脚本或 HTML 元素。 有关详细信息，请参阅[脚本侵入概述](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100))。

 [!code-aspx-csharp[FormViewItemCommandEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewItemCommandEventArgs/CS/formviewcommandeventargscs.aspx#1)]
 [!code-aspx-vb[FormViewItemCommandEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewItemCommandEventArgs/VB/formviewcommandeventargsvb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormView" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemCommand" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.OnItemCommand(System.Web.UI.WebControls.FormViewCommandEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="Handled">
      <MemberSignature Language="C#" Value="public bool Handled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Handled" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormViewCommandEventArgs.Handled" />
      <MemberSignature Language="VB.NET" Value="Public Property Handled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Handled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Handled : bool with get, set" Usage="System.Web.UI.WebControls.FormViewCommandEventArgs.Handled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置指示控件是否已处理事件的值。</summary>
        <value>如果数据绑定事件代码跳过或已完成，则为 <see langword="true" />；否则为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 将此属性设置为在事件处理程序中 `true`，以指定 <xref:System.Web.UI.WebControls.FormView> 控件不应对事件进行处理，因为您在代码中对其进行处理。

 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
