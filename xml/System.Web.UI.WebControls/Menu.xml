<Type Name="Menu" FullName="System.Web.UI.WebControls.Menu">
  <Metadata><Meta Name="ms.openlocfilehash" Value="eb0486775d2423d7440ffabc5f021eb475984c49" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89918529" /></Metadata><TypeSignature Language="C#" Value="public class Menu : System.Web.UI.WebControls.HierarchicalDataBoundControl, System.Web.UI.INamingContainer, System.Web.UI.IPostBackEventHandler" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Menu extends System.Web.UI.WebControls.HierarchicalDataBoundControl implements class System.Web.UI.INamingContainer, class System.Web.UI.IPostBackEventHandler" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.Menu" />
  <TypeSignature Language="VB.NET" Value="Public Class Menu&#xA;Inherits HierarchicalDataBoundControl&#xA;Implements INamingContainer, IPostBackEventHandler" />
  <TypeSignature Language="C++ CLI" Value="public ref class Menu : System::Web::UI::WebControls::HierarchicalDataBoundControl, System::Web::UI::INamingContainer, System::Web::UI::IPostBackEventHandler" />
  <TypeSignature Language="F#" Value="type Menu = class&#xA;    inherit HierarchicalDataBoundControl&#xA;    interface IPostBackEventHandler&#xA;    interface INamingContainer" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.HierarchicalDataBoundControl</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.UI.INamingContainer</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.IPostBackEventHandler</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.ComponentModel.DefaultEvent("MenuItemClick")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultEvent("MenuItemClick")&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName Language="C#">[System.ComponentModel.Designer("System.Web.UI.Design.WebControls.MenuDesigner, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.ComponentModel.Designer("System.Web.UI.Design.WebControls.MenuDesigner, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Web.UI.ControlValueProperty("SelectedValue")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Web.UI.ControlValueProperty("SelectedValue")&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Web.UI.SupportsEventValidation]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Web.UI.SupportsEventValidation&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName Language="C#">[System.ComponentModel.Designer("System.Web.UI.Design.WebControls.MenuDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.ComponentModel.Designer("System.Web.UI.Design.WebControls.MenuDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>在 ASP.NET 网页中显示菜单。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 本主题内容：  
  
-   [介绍](#introduction)  
  
-   [菜单项](#menu_items)  
  
-   [静态数据](#static_data)  
  
-   [绑定到数据](#binding_to_data)  
  
-   [自定义用户界面](#customizing_the_user_interface)  
  
-   [事件](#events)  
  
-   [辅助功能](#accessibility)  
  
-   [声明性语法](#declarative_syntax)  
  
<a name="introduction"></a>   
## <a name="introduction"></a>介绍  
 <xref:System.Web.UI.WebControls.Menu>控件用于在 ASP.NET 网页中显示菜单，并且通常与用于导航网站的控件结合使用 <xref:System.Web.UI.WebControls.SiteMapDataSource> 。 <xref:System.Web.UI.WebControls.Menu>控件支持以下功能：  
  
-   允许控件的菜单项绑定到层次的数据源的数据绑定。  
  
-   通过与控件集成的站点导航 <xref:System.Web.UI.WebControls.SiteMapDataSource> 。  
  
-   以编程方式访问 <xref:System.Web.UI.WebControls.Menu> 对象模型以动态创建菜单、填充菜单项、设置属性等。  
  
-   通过主题、用户定义的图像、样式和用户定义的模板自定义外观。  
  
 当用户单击菜单项时， <xref:System.Web.UI.WebControls.Menu> 控件可以导航到链接的网页，或只是回发到服务器。 如果 <xref:System.Web.UI.WebControls.MenuItem.NavigateUrl%2A> 设置了菜单项的属性，则控件将 <xref:System.Web.UI.WebControls.Menu> 导航到链接页; 否则，它会将该页回发到服务器以进行处理。 默认情况下，链接页显示在与控件相同的窗口或框架中 <xref:System.Web.UI.WebControls.Menu> 。 若要在不同的窗口或框架中显示链接的内容，请使用 <xref:System.Web.UI.WebControls.Menu.Target%2A> 控件的属性 <xref:System.Web.UI.WebControls.Menu> 。  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.Menu.Target%2A>属性会影响控件中的每个菜单项。 若要为单个菜单项指定窗口或框架，请直接设置该 <xref:System.Web.UI.WebControls.MenuItem.Target%2A> 对象的属性 <xref:System.Web.UI.WebControls.MenuItem> 。  
  
 <xref:System.Web.UI.WebControls.Menu>控件将显示两种类型的菜单：静态菜单和动态菜单。 静态菜单始终显示在 <xref:System.Web.UI.WebControls.Menu> 控件中。 默认情况下，根级别 (级别 0) 的菜单项显示在静态菜单中。 通过设置属性，可以在静态菜单)  (静态子菜单中显示其他菜单级别 <xref:System.Web.UI.WebControls.Menu.StaticDisplayLevels%2A> 。 菜单项 (如果任何级别高于属性指定的值的) <xref:System.Web.UI.WebControls.Menu.StaticDisplayLevels%2A> 在动态菜单中显示，则为。 仅当用户将鼠标指针置于包含动态子菜单的父菜单项上时，才会显示动态菜单。 动态菜单在一定的持续时间后自动消失。 使用 <xref:System.Web.UI.WebControls.Menu.DisappearAfter%2A> 属性指定持续时间。  
  
> [!NOTE]
>  当用户在菜单外部单击时，动态菜单也会消失。  
  
 还可以通过设置属性来限制动态菜单中显示的级别数 <xref:System.Web.UI.WebControls.Menu.MaximumDynamicDisplayLevels%2A> 。 超过指定值的菜单级别将被丢弃。  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.Menu>控件不设计为在控件内使用 <xref:System.Web.UI.UpdatePanel> 。 只能将控件添加 <xref:System.Web.UI.WebControls.Menu> 到控件之外的页面 <xref:System.Web.UI.UpdatePanel> 。 <xref:System.Web.UI.UpdatePanel> 控件用于更新页面的选定区域，而不是使用回发来更新整个页面。 有关详细信息，请参阅 [UpdatePanel 控件概述](https://docs.microsoft.com/previous-versions/aspnet/bb386454(v=vs.100)) 和 [部分页呈现概述](https://docs.microsoft.com/previous-versions/aspnet/bb386573(v=vs.100))。  
  
<a name="menu_items"></a>   
## <a name="menu-items"></a>菜单项  
 <xref:System.Web.UI.WebControls.Menu>控件由对象表示的菜单项树组成 <xref:System.Web.UI.WebControls.MenuItem> 。 顶层 (级别 0) 的菜单项称为根菜单项。 具有父菜单项的菜单项称为子菜单项。 所有根菜单项都存储在 <xref:System.Web.UI.WebControls.Menu.Items%2A> 集合中。 子菜单项存储在父菜单项的集合中 <xref:System.Web.UI.WebControls.MenuItem.ChildItems%2A> 。  
  
 每个菜单项都具有 <xref:System.Web.UI.WebControls.MenuItem.Text%2A> 和 <xref:System.Web.UI.WebControls.MenuItem.Value%2A> 属性。 属性的值 <xref:System.Web.UI.WebControls.MenuItem.Text%2A> 显示在 <xref:System.Web.UI.WebControls.Menu> 控件中，而 <xref:System.Web.UI.WebControls.MenuItem.Value%2A> 属性用于存储有关菜单项的任何其他数据，如传递到与菜单项关联的回发事件的数据。 单击菜单项时，它可以导航到由属性指示的另一个网页 <xref:System.Web.UI.WebControls.MenuItem.NavigateUrl%2A> 。  
  
> [!NOTE]
>  如果 <xref:System.Web.UI.WebControls.MenuItem.NavigateUrl%2A> 没有为菜单项设置该属性，则在 <xref:System.Web.UI.WebControls.Menu> 单击菜单项时，控件将只向服务器提交该页进行处理。  
  
 还可以通过设置属性，在菜单项中选择性地显示图像 <xref:System.Web.UI.WebControls.MenuItem.ImageUrl%2A> 。  
  
 有关菜单项的详细信息，请参阅 <xref:System.Web.UI.WebControls.MenuItem> 。  
  
<a name="static_data"></a>   
## <a name="static-data"></a>静态数据  
 控件的最简单数据模型 <xref:System.Web.UI.WebControls.Menu> 为静态菜单项。 若要使用声明性语法显示静态菜单项，请首先 `<Items>` 在控件的开始和结束标记之间嵌套开始和结束标记 <xref:System.Web.UI.WebControls.Menu> 。 接下来，通过 `<asp:MenuItem>` 在开始和结束标记之间嵌套元素来创建菜单结构 `<Items>` 。 每个 `<asp:MenuItem>` 元素都表示控件中的一个菜单项，并映射到一个 <xref:System.Web.UI.WebControls.MenuItem> 对象。 您可以通过设置每个菜单项的元素的属性来设置这些属性 `<asp:MenuItem>` 。 若要创建子菜单项，请在 `<asp:MenuItem>` 父菜单项的开始标记和结束标记之间嵌套其他元素 `<asp:MenuItem>` 。  
  
<a name="binding_to_data"></a>   
## <a name="binding-to-data"></a>绑定到数据  
 <xref:System.Web.UI.WebControls.Menu>控件可以使用任何分层数据源控件，如 <xref:System.Web.UI.WebControls.XmlDataSource> 控件或 <xref:System.Web.UI.WebControls.SiteMapDataSource> 控件。 若要绑定到层次的数据源控件，请将 <xref:System.Web.UI.WebControls.DataBoundControl.DataSourceID%2A> 控件的属性设置 <xref:System.Web.UI.WebControls.Menu> 为 <xref:System.Web.UI.Control.ID%2A> 数据源控件的值。 <xref:System.Web.UI.WebControls.Menu>控件将自动绑定到指定的数据源控件。 这是绑定到数据的首选方法。  
  
 绑定到数据源（其中每个数据项都包含多个属性） (如) 具有多个属性的 XML 元素时，菜单项默认显示数据项的方法返回的值 `ToString` 。 对于 XML 元素，菜单项显示元素名称，该名称显示菜单树的基础结构，但在其他情况下并不十分有用。 您可以通过使用 <xref:System.Web.UI.WebControls.Menu.DataBindings%2A> 集合指定菜单项绑定，将菜单项绑定到特定数据项属性。 <xref:System.Web.UI.WebControls.Menu.DataBindings%2A>集合包含 <xref:System.Web.UI.WebControls.MenuItemBinding> 的对象定义数据项和它所绑定到的菜单项之间的关系。 您可以指定要在节点中显示的绑定条件和数据项属性。 有关菜单项绑定的详细信息，请参阅 <xref:System.Web.UI.WebControls.MenuItemBinding> 。  
  
 不能 <xref:System.Web.UI.WebControls.Menu> 通过将 <xref:System.Web.UI.WebControls.MenuItemBinding.Text%2A> 或 <xref:System.Web.UI.WebControls.MenuItemBinding.TextField%2A> 属性设置为空字符串 ( "" ) ，在控件中创建空节点。 将这些属性设置为空字符串与不设置属性的效果相同。 在这种情况下， <xref:System.Web.UI.WebControls.Menu> 控件使用属性创建默认绑定 <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataSource%2A> 。 有关详细信息，请参阅 [绑定到数据库](https://docs.microsoft.com/previous-versions/aspnet/ms178361(v=vs.100))。  
  
<a name="customizing_the_user_interface"></a>   
## <a name="customizing-the-user-interface"></a>自定义用户界面  
 可以通过多种方式自定义控件的外观 <xref:System.Web.UI.WebControls.Menu> 。 首先，可以 <xref:System.Web.UI.WebControls.Menu> 通过设置属性来指定是水平还是垂直呈现控件 <xref:System.Web.UI.WebControls.Menu.Orientation%2A> 。 还可以为每个菜单项类型指定不同的样式 (例如字号和颜色) 。  
  
 如果 (CSS) 使用级联样式表来自定义控件的外观，请使用内联样式或单独的 CSS 文件，但不能同时使用两者。 同时使用内联样式和单独的 CSS 文件可能导致意外的结果。 有关将样式表用于控件的详细信息，请参阅 [Web 服务器控件和 CSS 样式](https://msdn.microsoft.com/library/782c2db6-fc9b-4243-8df9-a8ffe2f4cc42)。  
  
 下表列出了可用的菜单项样式。  
  
|菜单项样式属性|说明|  
|------------------------------|-----------------|  
|<xref:System.Web.UI.WebControls.Menu.DynamicHoverStyle%2A>|当鼠标指针置于动态菜单项上时，动态菜单项的样式设置。|  
|<xref:System.Web.UI.WebControls.Menu.DynamicMenuItemStyle%2A>|单个动态菜单项的样式设置。|  
|<xref:System.Web.UI.WebControls.Menu.DynamicMenuStyle%2A>|动态菜单的样式设置。|  
|<xref:System.Web.UI.WebControls.Menu.DynamicSelectedStyle%2A>|当前选定动态菜单项的样式设置。|  
|<xref:System.Web.UI.WebControls.Menu.StaticHoverStyle%2A>|当鼠标指针置于静态菜单项上时该菜单项的样式设置。|  
|<xref:System.Web.UI.WebControls.Menu.StaticMenuItemStyle%2A>|单个静态菜单项的样式设置。|  
|<xref:System.Web.UI.WebControls.Menu.StaticMenuStyle%2A>|静态菜单的样式设置。|  
|<xref:System.Web.UI.WebControls.Menu.StaticSelectedStyle%2A>|当前选定的静态菜单项的样式设置。|  
  
 您可以使用以下样式集合来指定基于菜单项级别应用于菜单项的样式，而不是设置各个样式属性。  
  
|级别样式集合|说明|  
|-----------------------------|-----------------|  
|<xref:System.Web.UI.WebControls.Menu.LevelMenuItemStyles%2A>|<xref:System.Web.UI.WebControls.MenuItemStyle>对象的集合，这些对象根据级别控制菜单项的样式。|  
|<xref:System.Web.UI.WebControls.Menu.LevelSelectedStyles%2A>|<xref:System.Web.UI.WebControls.MenuItemStyle>对象的集合，这些对象根据级别控制选定菜单项的样式。|  
|<xref:System.Web.UI.WebControls.Menu.LevelSubMenuStyles%2A>|<xref:System.Web.UI.WebControls.MenuItemStyle>对象的集合，这些对象根据级别控制子菜单项的样式。|  
  
 集合中的第一种样式对应于菜单树中第一个深度级别的菜单项样式。 集合中的第二个样式对应于菜单树中第二个深度级别的菜单项的样式，依此类推。 这通常用于生成目录样式的导航菜单，其中特定深度的菜单项应具有相同外观，无论它们是否具有子菜单。  
  
> [!NOTE]
>  如果使用上表中列出的任何级别样式集合来定义控件的样式 <xref:System.Web.UI.WebControls.Menu> ，则这些样式设置将覆盖各个菜单项的样式属性。  
  
 更改控件外观的另一种方法是自定义控件中显示的图像 <xref:System.Web.UI.WebControls.Menu> 。 您可以通过设置下表中显示的属性，为控件的不同部分指定您自己的自定义映像。  
  
|Image 属性|说明|  
|--------------------|-----------------|  
|<xref:System.Web.UI.WebControls.Menu.DynamicBottomSeparatorImageUrl%2A>|显示在动态菜单项底部的可选图像，用于将其与其他菜单项隔开。|  
|<xref:System.Web.UI.WebControls.Menu.DynamicPopOutImageUrl%2A>|显示在动态菜单项中的可选图像，用于指示该图像具有子菜单。|  
|<xref:System.Web.UI.WebControls.Menu.DynamicTopSeparatorImageUrl%2A>|显示在动态菜单项顶部的可选图像，用于将其与其他菜单项隔开。|  
|<xref:System.Web.UI.WebControls.Menu.ScrollDownImageUrl%2A>|显示在菜单项底部的图像，用于指示用户可以向下滚动查看更多菜单项。|  
|<xref:System.Web.UI.WebControls.Menu.ScrollUpImageUrl%2A>|显示在菜单项顶部的图像，用于指示用户可以向上滚动查看更多菜单项。|  
|<xref:System.Web.UI.WebControls.Menu.StaticBottomSeparatorImageUrl%2A>|显示在静态菜单项底部的可选图像，用于将其与其他菜单项隔开。|  
|<xref:System.Web.UI.WebControls.Menu.StaticPopOutImageUrl%2A>|显示在静态菜单项中的可选图像，用于指示该图像具有子菜单。|  
|<xref:System.Web.UI.WebControls.Menu.StaticTopSeparatorImageUrl%2A>|在静态菜单项顶部显示的可选图像，用于将其与其他菜单项隔开。|  
  
 若要完全控制用户界面 (UI) ，你可以 <xref:System.Web.UI.WebControls.Menu> 使用以下模板属性为控件定义你自己的自定义模板。  
  
|模板属性|说明|  
|-----------------------|-----------------|  
|<xref:System.Web.UI.WebControls.Menu.DynamicItemTemplate%2A>|包含动态菜单项的呈现自定义内容的模板。|  
|<xref:System.Web.UI.WebControls.Menu.StaticItemTemplate%2A>|包含要为静态菜单项呈现的自定义内容的模板。|  
  
 您可以分别通过设置和属性来控制动态菜单相对于其父菜单项的垂直和水平 <xref:System.Web.UI.WebControls.Menu.DynamicVerticalOffset%2A> 位置 <xref:System.Web.UI.WebControls.Menu.DynamicHorizontalOffset%2A> 。 若要控制静态菜单中静态子菜单项的缩进，请使用 <xref:System.Web.UI.WebControls.Menu.StaticSubMenuIndent%2A> 属性。  
  
<a name="events"></a>   
## <a name="events"></a>事件  
 <xref:System.Web.UI.WebControls.Menu>控件提供了几个可对其进行编程的事件。 这使您可以在每次发生事件时运行自定义例程。 下表列出了支持的事件。  
  
|事件|描述|  
|-----------|-----------------|  
|<xref:System.Web.UI.WebControls.Menu.MenuItemClick>|在单击菜单项时发生。 此事件通常用于使 <xref:System.Web.UI.WebControls.Menu> 控件与页面上的另一个控件同步。|  
|<xref:System.Web.UI.WebControls.Menu.MenuItemDataBound>|在菜单项绑定到数据时发生。 此事件通常用于在菜单项呈现在控件中之前修改菜单项 <xref:System.Web.UI.WebControls.Menu> 。|  
  
<a name="accessibility"></a>   
## <a name="accessibility"></a>可访问性  
 有关如何配置此控件以生成符合辅助功能标准的标记的信息，请参阅 [Visual Studio 中的辅助功能和 ASP.NET](https://docs.microsoft.com/previous-versions/ms228004(v=vs.140)) 和 [ASP.NET 控件和辅助功能](https://docs.microsoft.com/previous-versions/ms227996(v=vs.140))。  
  
<a name="declarative_syntax"></a>   
## <a name="declarative-syntax"></a>声明性语法  
  
```  
<asp:Menu  
    AccessKey="string"  
    BackColor="color name|#dddddd"  
    BorderColor="color name|#dddddd"  
    BorderStyle="NotSet|None|Dotted|Dashed|Solid|Double|Groove|Ridge|  
        Inset|Outset"  
    BorderWidth="size"  
    CssClass="string"  
    DataSource="string"  
    DataSourceID="string"  
    DisappearAfter="integer"  
    DynamicBottomSeparatorImageUrl="uri"  
    DynamicEnableDefaultPopOutImage="True|False"  
    DynamicHorizontalOffset="integer"  
    DynamicItemFormatString="string"  
    DynamicPopOutImageTextFormatString="string"  
    DynamicPopOutImageUrl="uri"  
    DynamicTopSeparatorImageUrl="uri"  
    DynamicVerticalOffset="integer"  
    Enabled="True|False"  
    EnableTheming="True|False"  
    EnableViewState="True|False"  
    Font-Bold="True|False"  
    Font-Italic="True|False"  
    Font-Names="string"  
    Font-Overline="True|False"  
    Font-Size="string|Smaller|Larger|XX-Small|X-Small|Small|Medium|  
        Large|X-Large|XX-Large"  
    Font-Strikeout="True|False"  
    Font-Underline="True|False"  
    ForeColor="color name|#dddddd"  
    Height="size"  
    ID="string"  
    ItemWrap="True|False"  
    MaximumDynamicDisplayLevels="integer"  
    OnDataBinding="DataBinding event handler"  
    OnDataBound="DataBound event handler"  
    OnDisposed="Disposed event handler"  
    OnInit="Init event handler"  
    OnLoad="Load event handler"  
    OnMenuItemClick="MenuItemClick event handler"  
    OnMenuItemDataBound="MenuItemDataBound event handler"  
    OnPreRender="PreRender event handler"  
    OnUnload="Unload event handler"  
    Orientation="Horizontal|Vertical"  
    PathSeparator="string"  
    runat="server"  
    ScrollDownImageUrl="uri"  
    ScrollDownText="string"  
    ScrollUpImageUrl="uri"  
    ScrollUpText="string"  
    SkinID="string"  
    SkipLinkText="string"  
    StaticBottomSeparatorImageUrl="uri"  
    StaticDisplayLevels="integer"  
    StaticEnableDefaultPopOutImage="True|False"  
    StaticItemFormatString="string"  
    StaticPopOutImageTextFormatString="string"  
    StaticPopOutImageUrl="uri"  
    StaticSubMenuIndent="size"  
    StaticTopSeparatorImageUrl="uri"  
    Style="string"  
    TabIndex="integer"  
    Target="string"  
    ToolTip="string"  
    Visible="True|False"  
    Width="size"  
>  
        <DataBindings>  
                <asp:MenuItemBinding  
                    DataMember="string"  
                    Depth="integer"  
                    Enabled="True|False"  
                    EnabledField="string"  
                    FormatString="string"  
                    ImageUrl="uri"  
                    ImageUrlField="string"  
                    NavigateUrl="uri"  
                    NavigateUrlField="string"  
                    PopOutImageUrl="uri"  
                    PopOutImageUrlField="string"  
                    Selectable="True|False"  
                    SelectableField="string"  
                    SeparatorImageUrl="uri"  
                    SeparatorImageUrlField="string"  
                    Target="string"  
                    TargetField="string"  
                    Text="string"  
                    TextField="string"  
                    ToolTip="string"  
                    ToolTipField="string"  
                    Value="string"  
                    ValueField="string"  
                />  
        </DataBindings>  
        <DynamicHoverStyle />  
        <DynamicItemTemplate>  
            <!-- child controls -->  
        </DynamicItemTemplate>  
        <DynamicMenuItemStyle  
            BackColor="color name|#dddddd"  
            BorderColor="color name|#dddddd"  
            BorderStyle="NotSet|None|Dotted|Dashed|Solid|Double|  
                Groove|Ridge|Inset|Outset"  
            BorderWidth="size"  
            CssClass="string"  
            Font-Bold="True|False"  
            Font-Italic="True|False"  
            Font-Names="string"  
            Font-Overline="True|False"  
            Font-Size="string|Smaller|Larger|XX-Small|X-Small|Small|  
                Medium|Large|X-Large|XX-Large"  
            Font-Strikeout="True|False"  
            Font-Underline="True|False"  
            ForeColor="color name|#dddddd"  
            Height="size"  
            HorizontalPadding="size"  
            ItemSpacing="size"  
            OnDisposed="Disposed event handler"  
            VerticalPadding="size"  
            Width="size"  
        />  
        <DynamicMenuStyle  
            BackColor="color name|#dddddd"  
            BorderColor="color name|#dddddd"  
            BorderStyle="NotSet|None|Dotted|Dashed|Solid|Double|  
                Groove|Ridge|Inset|Outset"  
            BorderWidth="size"  
            CssClass="string"  
            Font-Bold="True|False"  
            Font-Italic="True|False"  
            Font-Names="string"  
            Font-Overline="True|False"  
            Font-Size="string|Smaller|Larger|XX-Small|X-Small|Small|  
                Medium|Large|X-Large|XX-Large"  
            Font-Strikeout="True|False"  
            Font-Underline="True|False"  
            ForeColor="color name|#dddddd"  
            Height="size"  
            HorizontalPadding="size"  
            OnDisposed="Disposed event handler"  
            VerticalPadding="size"  
            Width="size"  
        />  
        <DynamicSelectedStyle  
            BackColor="color name|#dddddd"  
            BorderColor="color name|#dddddd"  
            BorderStyle="NotSet|None|Dotted|Dashed|Solid|Double|  
                Groove|Ridge|Inset|Outset"  
            BorderWidth="size"  
            CssClass="string"  
            Font-Bold="True|False"  
            Font-Italic="True|False"  
            Font-Names="string"  
            Font-Overline="True|False"  
            Font-Size="string|Smaller|Larger|XX-Small|X-Small|Small|  
                Medium|Large|X-Large|XX-Large"  
            Font-Strikeout="True|False"  
            Font-Underline="True|False"  
            ForeColor="color name|#dddddd"  
            Height="size"  
            HorizontalPadding="size"  
            ItemSpacing="size"  
            OnDisposed="Disposed event handler"  
            VerticalPadding="size"  
            Width="size"  
        />  
        <Items />  
        <LevelMenuItemStyles>  
                <asp:MenuItemStyle  
                    BackColor="color name|#dddddd"  
                    BorderColor="color name|#dddddd"  
                    BorderStyle="NotSet|None|Dotted|Dashed|Solid|  
                        Double|Groove|Ridge|Inset|Outset"  
                    BorderWidth="size"  
                    CssClass="string"  
                    Font-Bold="True|False"  
                    Font-Italic="True|False"  
                    Font-Names="string"  
                    Font-Overline="True|False"  
                    Font-Size="string|Smaller|Larger|XX-Small|  
                        X-Small|Small|Medium|Large|X-Large|XX-Large"  
                    Font-Strikeout="True|False"  
                    Font-Underline="True|False"  
                    ForeColor="color name|#dddddd"  
                    Height="size"  
                    HorizontalPadding="size"  
                    ItemSpacing="size"  
                    OnDisposed="Disposed event handler"  
                    VerticalPadding="size"  
                    Width="size"  
                />  
        </LevelMenuItemStyles>  
        <LevelSelectedStyles>  
                <asp:MenuItemStyle  
                    BackColor="color name|#dddddd"  
                    BorderColor="color name|#dddddd"  
                    BorderStyle="NotSet|None|Dotted|Dashed|Solid|  
                        Double|Groove|Ridge|Inset|Outset"  
                    BorderWidth="size"  
                    CssClass="string"  
                    Font-Bold="True|False"  
                    Font-Italic="True|False"  
                    Font-Names="string"  
                    Font-Overline="True|False"  
                    Font-Size="string|Smaller|Larger|XX-Small|  
                        X-Small|Small|Medium|Large|X-Large|XX-Large"  
                    Font-Strikeout="True|False"  
                    Font-Underline="True|False"  
                    ForeColor="color name|#dddddd"  
                    Height="size"  
                    HorizontalPadding="size"  
                    ItemSpacing="size"  
                    OnDisposed="Disposed event handler"  
                    VerticalPadding="size"  
                    Width="size"  
                />  
        </LevelSelectedStyles>  
        <LevelSubMenuStyles>  
                <asp:SubMenuStyle  
                    BackColor="color name|#dddddd"  
                    BorderColor="color name|#dddddd"  
                    BorderStyle="NotSet|None|Dotted|Dashed|Solid|  
                        Double|Groove|Ridge|Inset|Outset"  
                    BorderWidth="size"  
                    CssClass="string"  
                    Font-Bold="True|False"  
                    Font-Italic="True|False"  
                    Font-Names="string"  
                    Font-Overline="True|False"  
                    Font-Size="string|Smaller|Larger|XX-Small|  
                        X-Small|Small|Medium|Large|X-Large|XX-Large"  
                    Font-Strikeout="True|False"  
                    Font-Underline="True|False"  
                    ForeColor="color name|#dddddd"  
                    Height="size"  
                    HorizontalPadding="size"  
                    OnDisposed="Disposed event handler"  
                    VerticalPadding="size"  
                    Width="size"  
                />  
        </LevelSubMenuStyles>  
        <StaticHoverStyle />  
        <StaticItemTemplate>  
            <!-- child controls -->  
        </StaticItemTemplate>  
        <StaticMenuItemStyle  
            BackColor="color name|#dddddd"  
            BorderColor="color name|#dddddd"  
            BorderStyle="NotSet|None|Dotted|Dashed|Solid|Double|  
                Groove|Ridge|Inset|Outset"  
            BorderWidth="size"  
            CssClass="string"  
            Font-Bold="True|False"  
            Font-Italic="True|False"  
            Font-Names="string"  
            Font-Overline="True|False"  
            Font-Size="string|Smaller|Larger|XX-Small|  
                X-Small|Small|Medium|Large|X-Large|XX-Large"  
            Font-Strikeout="True|False"  
            Font-Underline="True|False"  
            ForeColor="color name|#dddddd"  
            Height="size"  
            HorizontalPadding="size"  
            ItemSpacing="size"  
            OnDisposed="Disposed event handler"  
            VerticalPadding="size"  
            Width="size"  
        />  
        <StaticMenuStyle  
            BackColor="color name|#dddddd"  
            BorderColor="color name|#dddddd"  
            BorderStyle="NotSet|None|Dotted|Dashed|Solid|Double|  
                Groove|Ridge|Inset|Outset"  
            BorderWidth="size"  
            CssClass="string"  
            Font-Bold="True|False"  
            Font-Italic="True|False"  
            Font-Names="string"  
            Font-Overline="True|False"  
            Font-Size="string|Smaller|Larger|XX-Small|X-Small|Small|  
                Medium|Large|X-Large|XX-Large"  
            Font-Strikeout="True|False"  
            Font-Underline="True|False"  
            ForeColor="color name|#dddddd"  
            Height="size"  
            HorizontalPadding="size"  
            OnDisposed="Disposed event handler"  
            VerticalPadding="size"  
            Width="size"  
        />  
        <StaticSelectedStyle  
            BackColor="color name|#dddddd"  
            BorderColor="color name|#dddddd"  
            BorderStyle="NotSet|None|Dotted|Dashed|Solid|Double|  
                Groove|Ridge|Inset|Outset"  
            BorderWidth="size"  
            CssClass="string"  
            Font-Bold="True|False"  
            Font-Italic="True|False"  
            Font-Names="string"  
            Font-Overline="True|False"  
            Font-Size="string|Smaller|Larger|XX-Small|X-Small|Small|  
                Medium|Large|X-Large|XX-Large"  
            Font-Strikeout="True|False"  
            Font-Underline="True|False"  
            ForeColor="color name|#dddddd"  
            Height="size"  
            HorizontalPadding="size"  
            ItemSpacing="size"  
            OnDisposed="Disposed event handler"  
            VerticalPadding="size"  
            Width="size"  
        />  
</asp:Menu>  
```  
  
   
  
## Examples  
 本主题提供了包含源代码的 Visual Studio 网站项目： [下载](https://go.microsoft.com/fwlink/?LinkId=192868)。  
  
 下面的代码示例演示如何 <xref:System.Web.UI.WebControls.Menu> 使用声明性语法创建包含静态菜单项的控件。  
  
 [!code-aspx-csharp[MenuDeclarative#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuDeclarative/CS/menudeclarativecs.aspx#1)]
 [!code-aspx-vb[MenuDeclarative#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuDeclarative/VB/menudeclarativevb.aspx#1)]  
  
 下面的代码示例演示如何将控件绑定 <xref:System.Web.UI.WebControls.Menu> 到 <xref:System.Web.UI.WebControls.SiteMapDataSource> 控件。 要使此示例正常工作，您必须将下面的示例站点地图数据复制到名为 web.sitemap 的文件中。  
  
 [!code-aspx-csharp[MenuDataBind#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuDataBind/CS/menudatabindcs.aspx#1)]
 [!code-aspx-vb[MenuDataBind#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuDataBind/VB/menudatabindvb.aspx#1)]  
  
 下面是前面示例的示例站点地图数据。  
  
```  
<siteMap>  
  <siteMapNode url="~\Home.aspx"   
    title="Home"  
    description="Home">  
    <siteMapNode url="~\Music.aspx"  
      title="Music"  
      description="Music">  
      <siteMapNode url="~\Classical.aspx"   
        title="Classical"  
        description="Classical"/>  
      <siteMapNode url="~\Rock.aspx"  
        title="Rock"  
        description="Rock"/>  
      <siteMapNode url="~\Jazz.aspx"  
        title="Jazz"  
        description="Jazz"/>  
    </siteMapNode>  
    <siteMapNode url="~\Movies.aspx"  
      title="Movies"  
      description="Movies">  
      <siteMapNode url="~\Action.aspx"  
        title="Action"  
        description="Action"/>  
      <siteMapNode url="~\Drama.aspx"  
        title="Drama"  
        description="Drama"/>  
      <siteMapNode url="~\Musical.aspx"  
        title="Musical"  
        description="Musical"/>  
    </siteMapNode>  
  </siteMapNode>  
</siteMap>  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.TreeView" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Menu ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Menu();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Web.UI.WebControls.Menu" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用此构造函数创建并初始化类的新实例 <xref:System.Web.UI.WebControls.Menu> 。 若要将控件动态添加 <xref:System.Web.UI.WebControls.Menu> 到页面，请创建新的 <xref:System.Web.UI.WebControls.Menu> 对象，设置其属性，然后将其添加到 <xref:System.Web.UI.Control.Controls%2A> 容器控件的集合，如 <xref:System.Web.UI.WebControls.PlaceHolder> 。  
  
   
  
## Examples  
 下面的代码示例演示如何使用构造函数将控件动态添加 <xref:System.Web.UI.WebControls.Menu> 到页中。  
  
 [!code-aspx-csharp[MenuCtor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuCtor/CS/menuctorcs.aspx#1)]
 [!code-aspx-vb[MenuCtor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuCtor/VB/menuctorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.Controls" />
        <altmember cref="T:System.Web.UI.WebControls.PlaceHolder" />
      </Docs>
    </Member>
    <Member MemberName="AddAttributesToRender">
      <MemberSignature Language="C#" Value="protected override void AddAttributesToRender (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void AddAttributesToRender(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.AddAttributesToRender(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub AddAttributesToRender (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void AddAttributesToRender(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.AddAttributesToRender : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="menu.AddAttributesToRender writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">向客户端呈现 HTML 内容的输出流。</param>
        <summary>将需要呈现的 HTML 特性和样式添加到指定的 <see cref="T:System.Web.UI.HtmlTextWriter" /> 对象。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Menu>控件重写 <xref:System.Web.UI.WebControls.WebControl.AddAttributesToRender%2A> 方法，以将属性重置 <xref:System.Web.UI.WebControls.WebControl.AccessKey%2A> 为 <xref:System.String.Empty> 。 此成员主要由控件开发人员从类派生自定义控件时使用 <xref:System.Web.UI.WebControls.Menu> 。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Controls">
      <MemberSignature Language="C#" Value="public override System.Web.UI.ControlCollection Controls { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ControlCollection Controls" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.Controls" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Controls As ControlCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ControlCollection ^ Controls { System::Web::UI::ControlCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Controls : System.Web.UI.ControlCollection" Usage="System.Web.UI.WebControls.Menu.Controls" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.ControlCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取 <see cref="T:System.Web.UI.ControlCollection" />，其中包含 <see cref="T:System.Web.UI.WebControls.Menu" /> 控件的子控件。</summary>
        <value>包含子控件的 <see cref="T:System.Web.UI.ControlCollection" /></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Menu.Controls%2A>属性允许你以编程方式访问控件的类的实例 <xref:System.Web.UI.ControlCollection> <xref:System.Web.UI.WebControls.Menu> 。 您可以向集合添加控件、从集合中移除控件或循环访问集合中的服务器控件。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateChildControls">
      <MemberSignature Language="C#" Value="protected internal override void CreateChildControls ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void CreateChildControls() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.CreateChildControls" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub CreateChildControls ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void CreateChildControls();" />
      <MemberSignature Language="F#" Value="override this.CreateChildControls : unit -&gt; unit" Usage="menu.CreateChildControls " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>创建 <see cref="T:System.Web.UI.WebControls.Menu" /> 控件的子控件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此成员主要由控件开发人员从类派生自定义控件时使用 <xref:System.Web.UI.WebControls.Menu> 。  
  
 ASP.NET 基础结构调用此方法，通知任何使用基于撰写的实现的控件，其中包括从和派生的控件 <xref:System.Web.UI.WebControls.CompositeDataBoundControl> <xref:System.Web.UI.WebControls.CompositeControl> 。 创建它们所包含的任何子控件，以便为回发或呈现做准备。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataBind">
      <MemberSignature Language="C#" Value="public override sealed void DataBind ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void DataBind() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.DataBind" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable Sub DataBind ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void DataBind();" />
      <MemberSignature Language="F#" Value="override this.DataBind : unit -&gt; unit" Usage="menu.DataBind " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>将数据源绑定到 <see cref="T:System.Web.UI.WebControls.Menu" /> 控件。 无法继承此方法。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 当从类派生自定义控件时，此成员主要由控件开发人员使用 <xref:System.Web.UI.WebControls.Menu> 。  
  
 使用 <xref:System.Web.UI.WebControls.Menu.DataBind%2A> 方法可将数据从数据源绑定到 <xref:System.Web.UI.WebControls.Menu> 控件。 此方法解析控件的活动模板中的所有数据绑定表达式。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>数据绑定控件应重写 <see cref="M:System.Web.UI.WebControls.Menu.PerformDataBinding" /> 而不是 <see cref="M:System.Web.UI.WebControls.Menu.DataBind" /> 。 如果 <see cref="M:System.Web.UI.WebControls.Menu.DataBind" /> 重写，则 <see cref="M:System.Web.UI.WebControls.Menu.OnDataBinding(System.EventArgs)" /> 按 <see cref="M:System.Web.UI.WebControls.BaseDataBoundControl.OnDataBound(System.EventArgs)" /> 错误的顺序引发和事件。</para></block>
      </Docs>
    </Member>
    <Member MemberName="DataBindings">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.MenuItemBindingCollection DataBindings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.MenuItemBindingCollection DataBindings" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.DataBindings" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DataBindings As MenuItemBindingCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::MenuItemBindingCollection ^ DataBindings { System::Web::UI::WebControls::MenuItemBindingCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DataBindings : System.Web.UI.WebControls.MenuItemBindingCollection" Usage="System.Web.UI.WebControls.Menu.DataBindings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(null)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(null)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName Language="C#">[System.ComponentModel.Editor("System.Web.UI.Design.WebControls.MenuBindingsEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Editor("System.Web.UI.Design.WebControls.MenuBindingsEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.MergableProperty(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.MergableProperty(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.Editor("System.Web.UI.Design.WebControls.MenuBindingsEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Editor("System.Web.UI.Design.WebControls.MenuBindingsEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.MenuItemBindingCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取 <see cref="T:System.Web.UI.WebControls.MenuItemBinding" /> 对象的集合，这些对象定义数据项和它所绑定到的菜单项之间的关系。</summary>
        <value><see cref="T:System.Web.UI.WebControls.MenuItemBindingCollection" />，表示数据项和它所绑定到的菜单项之间的关系。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Menu.DataBindings%2A>集合包含 <xref:System.Web.UI.WebControls.MenuItemBinding> 的对象定义数据项和它所绑定到的菜单项之间的关系。 绑定到数据源（其中每个数据项都包含多个属性） (如) 具有多个属性的 XML 元素时，菜单项默认显示数据项的方法返回的值 `ToString()` 。 对于 XML 元素，菜单项显示元素名称，该名称显示树的基础结构，但在其他情况下不起作用。 您可以通过指定菜单项绑定，将菜单项绑定到特定数据项属性。  
  
 定义数据项和菜单项之间的关系时，必须同时指定绑定条件和要绑定到的数据项的属性。 条件指示数据项应绑定到菜单项的时间。 可以使用深度、数据成员或两者来指定条件。 深度指定绑定的菜单级别。 例如，如果将深度指定为0，则将使用菜单项绑定来绑定树结构中处于级别0的所有菜单项。 数据成员指定基础数据源中数据项的类型，但可以根据数据源表示不同的信息。 例如，XML 元素的数据成员指定元素的名称。  
  
 如果定义了多个相互 <xref:System.Web.UI.WebControls.MenuItemBinding> 冲突的对象，则 <xref:System.Web.UI.WebControls.Menu> 控件将按以下优先级顺序应用菜单项绑定：  
  
1.  <xref:System.Web.UI.WebControls.MenuItemBinding>定义深度和数据成员的对象。  
  
2.  <xref:System.Web.UI.WebControls.MenuItemBinding>仅定义深度的对象。  
  
3.  <xref:System.Web.UI.WebControls.MenuItemBinding>仅定义数据成员的对象。  
  
4.  同时 <xref:System.Web.UI.WebControls.MenuItemBinding> 定义深度和数据成员的对象。  
  
 建立绑定条件后，可以绑定对象的属性， <xref:System.Web.UI.WebControls.MenuItem> 该对象可绑定到数据项的属性或字段。 例如，可以 <xref:System.Web.UI.WebControls.MenuItem.Text%2A> 通过设置对象的属性，将菜单项的属性绑定到 XML 元素的文本特性 <xref:System.Web.UI.WebControls.MenuItemBinding.TextField%2A> <xref:System.Web.UI.WebControls.MenuItemBinding> 。 还可以绑定到静态值。 如果设置了 <xref:System.Web.UI.WebControls.MenuItemBinding.Text%2A> 对象的属性 <xref:System.Web.UI.WebControls.MenuItemBinding> ，则该对象应用到的所有菜单项都 <xref:System.Web.UI.WebControls.MenuItemBinding> 将具有相同的静态文本值。 有关将对象属性绑定到值的详细信息 <xref:System.Web.UI.WebControls.MenuItem> ，请参阅 <xref:System.Web.UI.WebControls.MenuItemBinding> 。  
  
 尽管 <xref:System.Web.UI.WebControls.Menu.DataBindings%2A> 可以通过编程方式填充该集合，但通常以声明方式进行设置。 若要指定菜单项绑定，首先在 `<DataBindings>` 控件的开始和结束标记之间嵌套开始和结束标记 <xref:System.Web.UI.WebControls.Menu> 。 接下来，在 `<asp:MenuItemBinding>` `<DataBindings>` 要指定的每个菜单项绑定的开始标记和结束标记之间放置元素。  
  
   
  
## Examples  
 下面的代码示例演示如何使用 <xref:System.Web.UI.WebControls.Menu.DataBindings%2A> 集合定义控件的字段 <xref:System.Web.UI.WebControls.XmlDataSource> 与控件中的菜单项之间的关系 <xref:System.Web.UI.WebControls.Menu> 。 要使此示例正常工作，必须将下面的示例 XML 数据复制到名为 Map.xml 的文件中。  
  
 [!code-aspx-csharp[MenuBindings#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuBindings/CS/menubindingscs.aspx#1)]
 [!code-aspx-vb[MenuBindings#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuBindings/VB/menubindingsvb.aspx#1)]  
  
 下面是前面示例的示例站点地图数据。  
  
```  
<MapHomeNode url="~\Home.aspx"   
  title="Home"  
  description="Home">  
  <MapNode url="~\Music.aspx"  
    title="Music"  
    description="Music">  
    <MapNode url="~\Classical.aspx"   
      title="Classical"  
      description="Classical"/>  
    <MapNode url="~\Rock.aspx"  
      title="Rock"  
      description="Rock"/>  
    <MapNode url="~\Jazz.aspx"  
      title="Jazz"  
      description="Jazz"/>  
  </MapNode>  
  <MapNode url="~\Movies.aspx"  
    title="Movies"  
    description="Movies">  
    <MapNode url="~\Action.aspx"  
      title="Action"  
      description="Action"/>  
    <MapNode url="~\Drama.aspx"  
      title="Drama"  
      description="Drama"/>  
    <MapNode url="~\Musical.aspx"  
      title="Musical"  
      description="Musical"/>  
  </MapNode>  
</MapHomeNode>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.MenuItemBinding" />
        <altmember cref="T:System.Web.UI.WebControls.MenuItemBindingCollection" />
      </Docs>
    </Member>
    <Member MemberName="DisappearAfter">
      <MemberSignature Language="C#" Value="public int DisappearAfter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 DisappearAfter" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.DisappearAfter" />
      <MemberSignature Language="VB.NET" Value="Public Property DisappearAfter As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int DisappearAfter { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.DisappearAfter : int with get, set" Usage="System.Web.UI.WebControls.Menu.DisappearAfter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(500)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(500)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.Themeable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.Themeable(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置鼠标指针不再置于菜单上后显示动态菜单的持续时间。</summary>
        <value>鼠标指针不再置于菜单上后，显示动态菜单的时间量（以毫秒为单位）。 默认值为 500。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 默认情况下，当鼠标指针不再位于菜单上时，动态菜单会在一定的持续时间后自动消失。 使用 <xref:System.Web.UI.WebControls.Menu.DisappearAfter%2A> 属性指定持续时间。  
  
> [!NOTE]
>  如果用户单击菜单外部，动态菜单将立即消失。  
  
 还可以通过将此属性设置为-1，指定动态菜单永远不会自动消失。 在这种情况下，仅当用户在菜单外部单击时，动态菜单项才会消失。  
  
 无法通过主题或样式表主题设置此属性。 有关详细信息，请参阅 <xref:System.Web.UI.ThemeableAttribute> 和 [ASP.NET 主题和外观](https://docs.microsoft.com/previous-versions/aspnet/ykzx33wh(v=vs.100))。  
  
   
  
## Examples  
 下面的代码示例演示如何使用 <xref:System.Web.UI.WebControls.Menu.DisappearAfter%2A> 属性来指定动态菜单在用户将鼠标指针离开菜单超过两秒后消失。  
  
 [!code-aspx-csharp[MenuDisappearAfter#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuDisappearAfter/CS/menudisappearaftercs.aspx#1)]
 [!code-aspx-vb[MenuDisappearAfter#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuDisappearAfter/VB/menudisappearaftervb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">所选值小于 -1。</exception>
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicMenuStyle" />
      </Docs>
    </Member>
    <Member MemberName="DynamicBottomSeparatorImageUrl">
      <MemberSignature Language="C#" Value="public string DynamicBottomSeparatorImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DynamicBottomSeparatorImageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.DynamicBottomSeparatorImageUrl" />
      <MemberSignature Language="VB.NET" Value="Public Property DynamicBottomSeparatorImageUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DynamicBottomSeparatorImageUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DynamicBottomSeparatorImageUrl : string with get, set" Usage="System.Web.UI.WebControls.Menu.DynamicBottomSeparatorImageUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue("")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue("")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName Language="C#">[System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.Themeable(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.Themeable(true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.UrlProperty]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.UrlProperty&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置图像的 URL，该图像显示在各动态菜单项底部，将动态菜单项与其他菜单项隔开。</summary>
        <value>显示在各动态菜单项底部的分隔符图像的 URL。 默认值为空字符串 ("")，指示尚未设置此属性。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用 <xref:System.Web.UI.WebControls.Menu.DynamicBottomSeparatorImageUrl%2A> 属性指定要在每个动态菜单项底部显示的可选自定义图像。 此图像充当菜单项之间的分隔符，通常为行的图像。  
  
> [!NOTE]
>  您还可以通过设置属性来显示每个动态菜单项顶部的分隔符图像 <xref:System.Web.UI.WebControls.Menu.DynamicTopSeparatorImageUrl%2A> 。  
  
   
  
## Examples  
 下面的代码示例演示如何使用 <xref:System.Web.UI.WebControls.Menu.DynamicBottomSeparatorImageUrl%2A> 属性来显示每个动态菜单项底部的分隔符图像。  
  
 [!code-aspx-csharp[MenuDynamicBottomSeparatorImageUrl#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuDynamicBottomSeparatorImageUrl/CS/menudynamicbottomseparatorimageurlcs.aspx#1)]
 [!code-aspx-vb[MenuDynamicBottomSeparatorImageUrl#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuDynamicBottomSeparatorImageUrl/VB/menudynamicbottomseparatorimageurlvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicTopSeparatorImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollDownImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollDownText" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollUpImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollUpText" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticBottomSeparatorImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticTopSeparatorImageUrl" />
      </Docs>
    </Member>
    <Member MemberName="DynamicEnableDefaultPopOutImage">
      <MemberSignature Language="C#" Value="public bool DynamicEnableDefaultPopOutImage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DynamicEnableDefaultPopOutImage" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.DynamicEnableDefaultPopOutImage" />
      <MemberSignature Language="VB.NET" Value="Public Property DynamicEnableDefaultPopOutImage As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DynamicEnableDefaultPopOutImage { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.DynamicEnableDefaultPopOutImage : bool with get, set" Usage="System.Web.UI.WebControls.Menu.DynamicEnableDefaultPopOutImage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示是否显示内置图像，其中内置图像指示动态菜单项具有子菜单。</summary>
        <value>如果具有子菜单的动态菜单项显示内置图像，则为 <see langword="true" />；否则为 <see langword="false" />。 默认值为 <see langword="true" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 动态菜单项包含子菜单时，可以显示图像，以指示用户可以通过将鼠标指针放在菜单项上来展开菜单。 可以通过两种方法来显示此图像：  
  
-   将 <xref:System.Web.UI.WebControls.Menu.DynamicEnableDefaultPopOutImage%2A> 属性设置为 `true` 以使用内置映像 (默认) 。  
  
-   设置 <xref:System.Web.UI.WebControls.Menu.DynamicPopOutImageUrl%2A> 属性以指定自定义映像。  
  
 如果 <xref:System.Web.UI.WebControls.Menu.DynamicPopOutImageUrl%2A> 设置了属性，则该图像将覆盖内置图像。  
  
> [!NOTE]
>  如果 <xref:System.Web.UI.WebControls.Menu.DynamicPopOutImageUrl%2A> 未设置属性，并且 <xref:System.Web.UI.WebControls.Menu.DynamicEnableDefaultPopOutImage%2A> 属性设置为 `false` ，则不会显示图像。  
  
 可以通过设置属性来指定图像的替换文字 <xref:System.Web.UI.WebControls.Menu.DynamicPopOutImageTextFormatString%2A> 。 当用户将鼠标指针置于图像上时，此文本将显示为工具提示。 此文本还为辅助技术设备提供了可用于使控件更易于访问的图像说明。  
  
   
  
## Examples  
 下面的代码示例演示如何使用 <xref:System.Web.UI.WebControls.Menu.DynamicEnableDefaultPopOutImage%2A> 属性隐藏指示动态菜单项包含子菜单的图像。 <xref:System.Web.UI.WebControls.Menu.DynamicPopOutImageUrl%2A>还必须将属性设置为空字符串 ( "" ) ，才能隐藏图像。  
  
 [!code-aspx-csharp[MenuDynamicEnableDefaultPopOutImage#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuDynamicEnableDefaultPopOutImage/CS/menudynamicenabledefaultpopoutimagecs.aspx#1)]
 [!code-aspx-vb[MenuDynamicEnableDefaultPopOutImage#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuDynamicEnableDefaultPopOutImage/VB/menudynamicenabledefaultpopoutimagevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicPopOutImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicPopOutImageTextFormatString" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticEnableDefaultPopOutImage" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticPopOutImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticPopOutImageTextFormatString" />
      </Docs>
    </Member>
    <Member MemberName="DynamicHorizontalOffset">
      <MemberSignature Language="C#" Value="public int DynamicHorizontalOffset { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 DynamicHorizontalOffset" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.DynamicHorizontalOffset" />
      <MemberSignature Language="VB.NET" Value="Public Property DynamicHorizontalOffset As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int DynamicHorizontalOffset { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.DynamicHorizontalOffset : int with get, set" Usage="System.Web.UI.WebControls.Menu.DynamicHorizontalOffset" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(0)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(0)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置动态菜单相对于其父菜单项的水平移动像素数。</summary>
        <value>动态菜单相对于其父菜单项的水平移动像素数。 默认值为 0。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用 <xref:System.Web.UI.WebControls.Menu.DynamicHorizontalOffset%2A> 属性调整动态菜单相对于其父菜单项的水平位置。 此属性会影响动态菜单的位置，具体取决于 <xref:System.Web.UI.WebControls.Menu> 控件是垂直显示还是水平显示 (由 <xref:System.Web.UI.WebControls.Menu.Orientation%2A> 属性) 指定。 下表介绍了这些差异。  
  
|方向|说明|  
|-----------------|-----------------|  
|横向|默认情况下，动态菜单直接显示在其父菜单项的下方。 设置此属性会将动态菜单位置与此基准位置水平移动。|  
|垂直|默认情况下，动态菜单项显示在其父菜单项旁，不含任何间距。 设置此属性将控制动态菜单和其父菜单项之间的水平间距。|  
  
> [!NOTE]
>  您可以将此属性设置为负值，以使动态菜单按负方向移动。 如果显示的是垂直菜单，负值会导致动态菜单及其父菜单项重叠。  
  
   
  
## Examples  
 下面的代码示例演示如何使用 <xref:System.Web.UI.WebControls.Menu.DynamicHorizontalOffset%2A> 属性指定动态菜单和其父菜单项之间的5像素间隙。  
  
 [!code-aspx-csharp[MenuDynamicHorizontalOffset#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuDynamicHorizontalOffset/CS/menudynamichorizontaloffsetcs.aspx#1)]
 [!code-aspx-vb[MenuDynamicHorizontalOffset#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuDynamicHorizontalOffset/VB/menudynamichorizontaloffsetvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicVerticalOffset" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticSubMenuIndent" />
      </Docs>
    </Member>
    <Member MemberName="DynamicHoverStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.Style DynamicHoverStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.Style DynamicHoverStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.DynamicHoverStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DynamicHoverStyle As Style" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::Style ^ DynamicHoverStyle { System::Web::UI::WebControls::Style ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DynamicHoverStyle : System.Web.UI.WebControls.Style" Usage="System.Web.UI.WebControls.Menu.DynamicHoverStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(null)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(null)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.NotifyParentProperty(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.NotifyParentProperty(true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Style</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取对 <see cref="T:System.Web.UI.WebControls.Style" /> 对象的引用，使用该对象可以设置鼠标指针置于动态菜单项上时的菜单项外观。</summary>
        <value>对 <see cref="T:System.Web.UI.WebControls.Style" /> 对象的引用，该对象表示鼠标指针置于动态菜单项上时的菜单项样式。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Menu.DynamicHoverStyle%2A>当鼠标指针置于动态菜单项上时，使用该属性控制动态菜单项的外观。 此属性是只读的;但是，您可以设置 <xref:System.Web.UI.WebControls.Style> 它返回的对象的属性。 可以在窗体中以声明方式设置这些属性 `Property-Subproperty` ，其中 `Subproperty` 是对象的属性 <xref:System.Web.UI.WebControls.Style> (例如 `DynamicHoverStyle-ForeColor`) 。 还可以以编程方式设置属性 `Property.Subproperty` ， (例如 `DynamicHoverStyle.ForeColor`) 。  
  
 动态菜单项的样式属性按以下顺序应用：  
  
1.  <xref:System.Web.UI.WebControls.Menu.DynamicMenuStyle%2A>.  
  
2.  <xref:System.Web.UI.WebControls.Menu.DynamicMenuItemStyle%2A>. 如果 <xref:System.Web.UI.WebControls.Menu.LevelMenuItemStyles%2A> 集合或 <xref:System.Web.UI.WebControls.Menu.LevelSubMenuStyles%2A> 集合已定义，此时将应用该集合或集合，并重写其他菜单项样式属性。  
  
3.  <xref:System.Web.UI.WebControls.Menu.DynamicSelectedStyle%2A>. 如果 <xref:System.Web.UI.WebControls.Menu.LevelSelectedStyles%2A> 定义了集合，则此时将应用该集合，并覆盖其他菜单项样式属性。  
  
4.  <xref:System.Web.UI.WebControls.Menu.DynamicHoverStyle%2A>.  
  
   
  
## Examples  
 下面的代码示例演示如何 <xref:System.Web.UI.WebControls.Menu.DynamicHoverStyle%2A> 在用户将鼠标指针置于动态菜单项上时，使用属性将其背景色更改为浅天蓝色。  
  
 [!code-aspx-csharp[MenuDynamicHoverStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuDynamicHoverStyle/CS/menudynamichoverstylecs.aspx#1)]
 [!code-aspx-vb[MenuDynamicHoverStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuDynamicHoverStyle/VB/menudynamichoverstylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicMenuItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicMenuStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicSelectedStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelMenuItemStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelSelectedStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelSubMenuStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticHoverStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticMenuItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticMenuStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticSelectedStyle" />
      </Docs>
    </Member>
    <Member MemberName="DynamicItemFormatString">
      <MemberSignature Language="C#" Value="public string DynamicItemFormatString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DynamicItemFormatString" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.DynamicItemFormatString" />
      <MemberSignature Language="VB.NET" Value="Public Property DynamicItemFormatString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DynamicItemFormatString { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DynamicItemFormatString : string with get, set" Usage="System.Web.UI.WebControls.Menu.DynamicItemFormatString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue("")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue("")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置与所有动态显示的菜单项一起显示的附加文本。</summary>
        <value>与所有菜单项一起显示的附加文本或字符。 此属性的默认值为 " {0} ."。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此属性可用于插入文本，以在移动设备上显示的菜单中设置动态菜单项的格式。 <xref:System.Web.UI.WebControls.Menu>控件支持用于显示静态和动态菜单项的模板。 对于移动设备，模板会被忽略，因此，此属性允许你添加字符或文本，以便在不使用模板的情况下将格式应用于菜单项。  
  
> [!NOTE]
>  若要在使用此属性时实现一致的格式设置， <xref:System.Web.UI.WebControls.Menu.StaticItemFormatString%2A> 如果要使静态菜单项和动态菜单项之间的格式相同，还应该设置属性。  
  
 如果同时应用了模板格式设置和此属性，则将忽略移动设备的模板格式设置。  
  
   
  
## Examples  
 下面的代码示例演示如何使用 <xref:System.Web.UI.WebControls.Menu.StaticItemFormatString%2A> 和 <xref:System.Web.UI.WebControls.Menu.DynamicItemFormatString%2A> 属性将文本添加到每个菜单项。  
  
 [!code-aspx-csharp[MenuItemFormatString#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuItemFormatString/CS/menuitemformatstringcs.aspx#1)]
 [!code-aspx-vb[MenuItemFormatString#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuItemFormatString/VB/menuitemformatstringvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticItemFormatString" />
      </Docs>
    </Member>
    <Member MemberName="DynamicItemTemplate">
      <MemberSignature Language="C#" Value="public System.Web.UI.ITemplate DynamicItemTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate DynamicItemTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.DynamicItemTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Property DynamicItemTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::ITemplate ^ DynamicItemTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DynamicItemTemplate : System.Web.UI.ITemplate with get, set" Usage="System.Web.UI.WebControls.Menu.DynamicItemTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(null)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(null)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.MenuItemTemplateContainer))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.MenuItemTemplateContainer))&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置包含动态菜单自定义呈现内容的模板。</summary>
        <value><see cref="T:System.Web.UI.ITemplate" />，包含动态菜单的自定义内容。 默认值为 null，表示未设置此属性。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 您可以使用属性来定义动态菜单项的外观，而不是使用动态菜单的内置呈现方式 <xref:System.Web.UI.WebControls.Menu.DynamicItemTemplate%2A> 。 若要为动态菜单项指定自定义模板，请先 `<DynamicItemTemplate>` 在控件的开始和结束标记之间放置标记 <xref:System.Web.UI.WebControls.Menu> 。 然后，你可以在开始标记和结束标记之间列出模板的内容 `<DynamicItemTemplate>` 。 通过使用属性，可以进一步控制动态菜单的样式 <xref:System.Web.UI.WebControls.Menu.DynamicItemFormatString%2A> 。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicItemFormatString" />
      </Docs>
    </Member>
    <Member MemberName="DynamicMenuItemStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.MenuItemStyle DynamicMenuItemStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.MenuItemStyle DynamicMenuItemStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.DynamicMenuItemStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DynamicMenuItemStyle As MenuItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::MenuItemStyle ^ DynamicMenuItemStyle { System::Web::UI::WebControls::MenuItemStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DynamicMenuItemStyle : System.Web.UI.WebControls.MenuItemStyle" Usage="System.Web.UI.WebControls.Menu.DynamicMenuItemStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(null)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(null)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.NotifyParentProperty(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.NotifyParentProperty(true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.MenuItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取对 <see cref="T:System.Web.UI.WebControls.MenuItemStyle" /> 对象的引用，使用该对象可以设置动态菜单中的菜单项的外观。</summary>
        <value>对 <see cref="T:System.Web.UI.WebControls.MenuItemStyle" /> 对象的引用，该对象表示动态菜单中的菜单项的样式。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用 <xref:System.Web.UI.WebControls.Menu.DynamicMenuItemStyle%2A> 属性可控制动态菜单中菜单项的外观。 此属性是只读的;但是，您可以设置 <xref:System.Web.UI.WebControls.MenuItemStyle> 它返回的对象的属性。 可以在窗体中以声明方式设置这些属性 `Property-Subproperty` ，其中 `Subproperty` 是对象的属性 <xref:System.Web.UI.WebControls.MenuItemStyle> (例如 `DynamicMenuItemStyle-ForeColor`) 。 还可以以编程方式设置属性 `Property.Subproperty` ， (例如 `DynamicMenuItemStyle.ForeColor`) 。  
  
 动态菜单项的样式属性按以下顺序应用：  
  
1.  <xref:System.Web.UI.WebControls.Menu.DynamicMenuStyle%2A>.  
  
2.  <xref:System.Web.UI.WebControls.Menu.DynamicMenuItemStyle%2A>. 如果 <xref:System.Web.UI.WebControls.Menu.LevelMenuItemStyles%2A> 集合或 <xref:System.Web.UI.WebControls.Menu.LevelSubMenuStyles%2A> 集合已定义，此时将应用该集合或集合，并重写其他菜单项样式属性。  
  
3.  <xref:System.Web.UI.WebControls.Menu.DynamicSelectedStyle%2A>. 如果 <xref:System.Web.UI.WebControls.Menu.LevelSelectedStyles%2A> 定义了集合，则此时将应用该集合，并覆盖其他菜单项样式属性。  
  
4.  <xref:System.Web.UI.WebControls.Menu.DynamicHoverStyle%2A>.  
  
   
  
## Examples  
 下面的代码示例演示如何使用 <xref:System.Web.UI.WebControls.Menu.DynamicMenuItemStyle%2A> 属性为动态菜单中的菜单项指定浅天蓝色背景色。  
  
 [!code-aspx-csharp[MenuDynamicMenuItemStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/menudynamicmenuitemstyle/CS/MenuDynamicMenuItemStylecs.aspx#1)]
 [!code-aspx-vb[MenuDynamicMenuItemStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/menudynamicmenuitemstyle/VB/MenuDynamicMenuItemStylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicHoverStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicMenuStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicSelectedStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelMenuItemStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelSelectedStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelSubMenuStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticHoverStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticMenuItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticMenuStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticSelectedStyle" />
      </Docs>
    </Member>
    <Member MemberName="DynamicMenuStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.SubMenuStyle DynamicMenuStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.SubMenuStyle DynamicMenuStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.DynamicMenuStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DynamicMenuStyle As SubMenuStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::SubMenuStyle ^ DynamicMenuStyle { System::Web::UI::WebControls::SubMenuStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DynamicMenuStyle : System.Web.UI.WebControls.SubMenuStyle" Usage="System.Web.UI.WebControls.Menu.DynamicMenuStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(null)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(null)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.NotifyParentProperty(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.NotifyParentProperty(true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SubMenuStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取对 <see cref="T:System.Web.UI.WebControls.MenuItemStyle" /> 对象的引用，使用该对象可以设置动态菜单的外观。</summary>
        <value>对 <see cref="T:System.Web.UI.WebControls.MenuItemStyle" /> 对象的引用，该对象表示动态菜单的样式。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用 <xref:System.Web.UI.WebControls.Menu.DynamicMenuStyle%2A> 属性控制动态菜单的外观。 此属性是只读的;但是，您可以设置 <xref:System.Web.UI.WebControls.MenuItemStyle> 它返回的对象的属性。 可以在窗体中以声明方式设置这些属性 `Property-Subproperty` ，其中 `Subproperty` 是对象的属性 <xref:System.Web.UI.WebControls.MenuItemStyle> (例如 `DynamicMenuStyle-ForeColor`) 。 还可以以编程方式设置属性 `Property.Subproperty` ， (例如 `DynamicMenuStyle.ForeColor`) 。  
  
 动态菜单项的样式属性按以下顺序应用：  
  
1.  <xref:System.Web.UI.WebControls.Menu.DynamicMenuStyle%2A>.  
  
2.  <xref:System.Web.UI.WebControls.Menu.DynamicMenuItemStyle%2A>. 如果 <xref:System.Web.UI.WebControls.Menu.LevelMenuItemStyles%2A> 集合或 <xref:System.Web.UI.WebControls.Menu.LevelSubMenuStyles%2A> 集合已定义，此时将应用该集合或集合，并重写其他菜单项样式属性。  
  
3.  <xref:System.Web.UI.WebControls.Menu.DynamicSelectedStyle%2A>. 如果 <xref:System.Web.UI.WebControls.Menu.LevelSelectedStyles%2A> 定义了集合，则此时将应用该集合，并覆盖其他菜单项样式属性。  
  
4.  <xref:System.Web.UI.WebControls.Menu.DynamicHoverStyle%2A>.  
  
   
  
## Examples  
 下面的代码示例演示如何使用 <xref:System.Web.UI.WebControls.Menu.DynamicMenuStyle%2A> 属性为动态菜单指定浅天蓝色背景色。  
  
 [!code-aspx-csharp[MenuDynamicMenuStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuDynamicMenuStyle/CS/menudynamicmenustylecs.aspx#1)]
 [!code-aspx-vb[MenuDynamicMenuStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuDynamicMenuStyle/VB/menudynamicmenustylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicHoverStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicMenuItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicSelectedStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelMenuItemStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelSelectedStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelSubMenuStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticHoverStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticMenuItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticMenuStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticSelectedStyle" />
      </Docs>
    </Member>
    <Member MemberName="DynamicPopOutImageTextFormatString">
      <MemberSignature Language="C#" Value="public string DynamicPopOutImageTextFormatString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DynamicPopOutImageTextFormatString" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.DynamicPopOutImageTextFormatString" />
      <MemberSignature Language="VB.NET" Value="Public Property DynamicPopOutImageTextFormatString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DynamicPopOutImageTextFormatString { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DynamicPopOutImageTextFormatString : string with get, set" Usage="System.Web.UI.WebControls.Menu.DynamicPopOutImageTextFormatString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置用于指示动态菜单项包含子菜单的图像的替换文字。</summary>
        <value>指示动态菜单项包含子菜单的图像的替换文字。 默认值为空字符串 ("")，表示尚未设置此属性。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 动态菜单项包含子菜单时，可能会显示一个图像，指示用户可以展开菜单。 使用 <xref:System.Web.UI.WebControls.Menu.DynamicPopOutImageTextFormatString%2A> 属性指定此图像的替换文字。 指定的文本为辅助技术设备提供了可用于使控件更易于访问的图像说明。  
  
 可以通过两种方法来显示图像：  
  
-   将 <xref:System.Web.UI.WebControls.Menu.DynamicEnableDefaultPopOutImage%2A> 属性设置为 `true` 以使用内置映像 (默认) 。  
  
-   设置 <xref:System.Web.UI.WebControls.Menu.DynamicPopOutImageUrl%2A> 属性以指定自定义映像。  
  
> [!NOTE]
>  此属性适用于内置映像和自定义映像。  
  
   
  
## Examples  
 下面的代码示例演示如何使用 <xref:System.Web.UI.WebControls.Menu.DynamicPopOutImageTextFormatString%2A> 属性来指定用于指示动态菜单项包含子菜单的图像的替换文字。 当用户将鼠标指针置于图像上时，此文本将显示为工具提示。  
  
 [!code-aspx-csharp[MenuDynamicPopoutImageText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuDynamicPopoutImageText/CS/menudynamicpopoutimagetextcs.aspx#1)]
 [!code-aspx-vb[MenuDynamicPopoutImageText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuDynamicPopoutImageText/VB/menudynamicpopoutimagetextvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicEnableDefaultPopOutImage" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicPopOutImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticEnableDefaultPopOutImage" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticPopOutImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticPopOutImageTextFormatString" />
      </Docs>
    </Member>
    <Member MemberName="DynamicPopOutImageUrl">
      <MemberSignature Language="C#" Value="public string DynamicPopOutImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DynamicPopOutImageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.DynamicPopOutImageUrl" />
      <MemberSignature Language="VB.NET" Value="Public Property DynamicPopOutImageUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DynamicPopOutImageUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DynamicPopOutImageUrl : string with get, set" Usage="System.Web.UI.WebControls.Menu.DynamicPopOutImageUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue("")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue("")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName Language="C#">[System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.UrlProperty]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.UrlProperty&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置自定义图像的 URL，如果动态菜单项包含子菜单，该图像则显示在动态菜单项中。</summary>
        <value>指示动态菜单项包含子菜单的图像的 URL。 默认值为空字符串 ("")，指示尚未设置此属性。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 动态菜单项包含子菜单时，可以显示图像，以指示用户可以通过将鼠标指针放在菜单项上来展开菜单。 可以通过两种方法来显示此图像：  
  
-   将 <xref:System.Web.UI.WebControls.Menu.DynamicEnableDefaultPopOutImage%2A> 属性设置为 `true` 以使用内置映像 (默认) 。  
  
-   设置 <xref:System.Web.UI.WebControls.Menu.DynamicPopOutImageUrl%2A> 属性以指定自定义映像。  
  
 如果 <xref:System.Web.UI.WebControls.Menu.DynamicPopOutImageUrl%2A> 设置了属性，则该图像将覆盖内置图像。  
  
 如果 <xref:System.Web.UI.WebControls.Menu.DynamicPopOutImageUrl%2A> 未设置属性，并且 <xref:System.Web.UI.WebControls.Menu.DynamicEnableDefaultPopOutImage%2A> 属性设置为 `false` ，则不会显示图像。  
  
> [!NOTE]
>  设置此属性时，请使用斜杠标记 (/) 而不是反斜杠 (\\) 。 如果在路径中使用反斜杠，则不会显示指定的图像。  
  
 可以通过设置属性来指定图像的替换文字 <xref:System.Web.UI.WebControls.Menu.DynamicPopOutImageTextFormatString%2A> 。  
  
   
  
## Examples  
 下面的代码示例演示如何使用 <xref:System.Web.UI.WebControls.Menu.DynamicPopOutImageUrl%2A> 属性指定要在动态菜单项中显示的自定义图像，以指示菜单项具有子菜单。  
  
 [!code-aspx-csharp[MenuDynamicPopoutImageText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuDynamicPopoutImageText/CS/menudynamicpopoutimagetextcs.aspx#1)]
 [!code-aspx-vb[MenuDynamicPopoutImageText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuDynamicPopoutImageText/VB/menudynamicpopoutimagetextvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicEnableDefaultPopOutImage" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicPopOutImageTextFormatString" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticEnableDefaultPopOutImage" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticPopOutImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticPopOutImageTextFormatString" />
      </Docs>
    </Member>
    <Member MemberName="DynamicSelectedStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.MenuItemStyle DynamicSelectedStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.MenuItemStyle DynamicSelectedStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.DynamicSelectedStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DynamicSelectedStyle As MenuItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::MenuItemStyle ^ DynamicSelectedStyle { System::Web::UI::WebControls::MenuItemStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DynamicSelectedStyle : System.Web.UI.WebControls.MenuItemStyle" Usage="System.Web.UI.WebControls.Menu.DynamicSelectedStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(null)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(null)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.NotifyParentProperty(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.NotifyParentProperty(true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.MenuItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取对 <see cref="T:System.Web.UI.WebControls.MenuItemStyle" /> 对象的引用，使用该对象可以设置用户所选动态菜单项的外观。</summary>
        <value>对 <see cref="T:System.Web.UI.WebControls.MenuItemStyle" /> 对象的引用，该对象表示所选动态菜单项的样式。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Menu.DynamicSelectedStyle%2A>当用户从菜单中选择动态菜单项时，可以使用属性来控制动态菜单项的外观。 此属性是只读的;但是，您可以设置 <xref:System.Web.UI.WebControls.MenuItemStyle> 它返回的对象的属性。 可以在窗体中以声明方式设置这些属性 `Property-Subproperty` ，其中 `Subproperty` 是对象的属性 <xref:System.Web.UI.WebControls.MenuItemStyle> (例如 `DynamicSelectedStyle-ForeColor`) 。 还可以以编程方式设置属性 `Property.Subproperty` ， (例如 `DynamicSelectedStyle.ForeColor`) 。  
  
 动态菜单项的样式属性按以下顺序应用：  
  
1.  <xref:System.Web.UI.WebControls.Menu.DynamicMenuStyle%2A>.  
  
2.  <xref:System.Web.UI.WebControls.Menu.DynamicMenuItemStyle%2A>. 如果 <xref:System.Web.UI.WebControls.Menu.LevelMenuItemStyles%2A> 集合或 <xref:System.Web.UI.WebControls.Menu.LevelSubMenuStyles%2A> 集合已定义，此时将应用该集合或集合，并重写其他菜单项样式属性。  
  
3.  <xref:System.Web.UI.WebControls.Menu.DynamicSelectedStyle%2A>. 如果 <xref:System.Web.UI.WebControls.Menu.LevelSelectedStyles%2A> 定义了集合，则此时将应用该集合，并覆盖其他菜单项样式属性。  
  
4.  <xref:System.Web.UI.WebControls.Menu.DynamicHoverStyle%2A>.  
  
   
  
## Examples  
 下面的代码示例演示如何使用 <xref:System.Web.UI.WebControls.Menu.DynamicSelectedStyle%2A> 属性为所选动态菜单项指定浅蓝色背景色。  
  
 [!code-aspx-csharp[MenuDynamicSelectedStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuDynamicSelectedStyle/CS/menudynamicselectedstylecs.aspx#1)]
 [!code-aspx-vb[MenuDynamicSelectedStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuDynamicSelectedStyle/VB/menudynamicselectedstylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicHoverStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicMenuItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicMenuStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelMenuItemStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelSelectedStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelSubMenuStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticHoverStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticMenuItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticMenuStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticSelectedStyle" />
      </Docs>
    </Member>
    <Member MemberName="DynamicTopSeparatorImageUrl">
      <MemberSignature Language="C#" Value="public string DynamicTopSeparatorImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DynamicTopSeparatorImageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.DynamicTopSeparatorImageUrl" />
      <MemberSignature Language="VB.NET" Value="Public Property DynamicTopSeparatorImageUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DynamicTopSeparatorImageUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DynamicTopSeparatorImageUrl : string with get, set" Usage="System.Web.UI.WebControls.Menu.DynamicTopSeparatorImageUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue("")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue("")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName Language="C#">[System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.UrlProperty]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.UrlProperty&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置图像的 URL，该图像显示在各动态菜单项顶部，将动态菜单项与其他菜单项隔开。</summary>
        <value>显示在各动态菜单项顶部的分隔符图像的 URL。 默认值为空字符串 ("")，指示尚未设置此属性。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用 <xref:System.Web.UI.WebControls.Menu.DynamicTopSeparatorImageUrl%2A> 属性指定要在每个动态菜单项顶部显示的可选自定义图像。 此图像充当菜单项之间的分隔符，通常为行的图像。  
  
> [!NOTE]
>  您还可以通过设置属性来显示每个动态菜单项底部的分隔符图像 <xref:System.Web.UI.WebControls.Menu.DynamicBottomSeparatorImageUrl%2A> 。  
  
   
  
## Examples  
 下面的代码示例演示如何使用 <xref:System.Web.UI.WebControls.Menu.DynamicTopSeparatorImageUrl%2A> 属性来显示每个动态菜单项顶部的分隔符图像。  
  
 [!code-aspx-csharp[MenuDynamicTopSeparatorImageUrl#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuDynamicTopSeparatorImageUrl/CS/menudynamictopseparatorimageurlcs.aspx#1)]
 [!code-aspx-vb[MenuDynamicTopSeparatorImageUrl#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuDynamicTopSeparatorImageUrl/VB/menudynamictopseparatorimageurlvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicBottomSeparatorImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollDownImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollDownText" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollUpImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollUpText" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticBottomSeparatorImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticTopSeparatorImageUrl" />
      </Docs>
    </Member>
    <Member MemberName="DynamicVerticalOffset">
      <MemberSignature Language="C#" Value="public int DynamicVerticalOffset { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 DynamicVerticalOffset" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.DynamicVerticalOffset" />
      <MemberSignature Language="VB.NET" Value="Public Property DynamicVerticalOffset As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int DynamicVerticalOffset { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.DynamicVerticalOffset : int with get, set" Usage="System.Web.UI.WebControls.Menu.DynamicVerticalOffset" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(0)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(0)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置动态菜单相对于其父菜单项的垂直移动像素数。</summary>
        <value>动态菜单相对于其父菜单项的垂直移动像素数。 默认值为 0。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用 <xref:System.Web.UI.WebControls.Menu.DynamicVerticalOffset%2A> 属性可调整动态菜单相对于其父菜单项的垂直位置。 此属性会影响动态菜单的位置，具体取决于 <xref:System.Web.UI.WebControls.Menu> 控件是垂直显示还是水平显示 (由 <xref:System.Web.UI.WebControls.Menu.Orientation%2A> 属性) 指定。 下表介绍了这些差异。  
  
|方向|说明|  
|-----------------|-----------------|  
|横向|默认情况下，动态菜单直接显示在其父菜单项的下方，无间距。 设置此属性将控制动态菜单和其父菜单项之间的垂直间距。|  
|垂直|默认情况下，动态菜单项在其父菜单项旁显示，其上边缘对齐。 设置此属性会将动态菜单位置与此基准位置垂直移动。|  
  
> [!NOTE]
>  您可以将此属性设置为负值，以使动态菜单按负方向移动。 如果显示的是水平菜单，负值会导致动态菜单及其父菜单项重叠。  
  
   
  
## Examples  
 下面的代码示例演示如何使用 <xref:System.Web.UI.WebControls.Menu.DynamicVerticalOffset%2A> 属性将动态菜单从其父菜单项的顶部向下移动10个像素。  
  
 [!code-aspx-csharp[MenuDynamicHorizontalOffset#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuDynamicHorizontalOffset/CS/menudynamichorizontaloffsetcs.aspx#1)]
 [!code-aspx-vb[MenuDynamicHorizontalOffset#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuDynamicHorizontalOffset/VB/menudynamichorizontaloffsetvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicHorizontalOffset" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.Orientation" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticSubMenuIndent" />
      </Docs>
    </Member>
    <Member MemberName="EnsureDataBound">
      <MemberSignature Language="C#" Value="protected override void EnsureDataBound ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void EnsureDataBound() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.EnsureDataBound" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub EnsureDataBound ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void EnsureDataBound();" />
      <MemberSignature Language="F#" Value="override this.EnsureDataBound : unit -&gt; unit" Usage="menu.EnsureDataBound " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>确认菜单控件是否需要数据绑定，以及是否在调用 <see cref="M:System.Web.UI.WebControls.Menu.DataBind" /> 方法前指定了有效的数据源控件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  此方法主要由控件开发人员用来扩展 <xref:System.Web.UI.WebControls.Menu> 控件。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FindItem">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.MenuItem FindItem (string valuePath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.UI.WebControls.MenuItem FindItem(string valuePath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.FindItem(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindItem (valuePath As String) As MenuItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::UI::WebControls::MenuItem ^ FindItem(System::String ^ valuePath);" />
      <MemberSignature Language="F#" Value="member this.FindItem : string -&gt; System.Web.UI.WebControls.MenuItem" Usage="menu.FindItem valuePath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.MenuItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="valuePath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="valuePath">要检索的菜单项的值路径。</param>
        <summary>检索位于指定值路径的菜单项。</summary>
        <returns><see cref="T:System.Web.UI.WebControls.MenuItem" />，表示位于指定值路径的菜单项。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用 <xref:System.Web.UI.WebControls.Menu.FindItem%2A> 方法 <xref:System.Web.UI.WebControls.MenuItem> 从控件中检索对象 <xref:System.Web.UI.WebControls.Menu> 。 若要检索 <xref:System.Web.UI.WebControls.MenuItem> 对象，您必须指定菜单项的菜单路径。 菜单路径是一串分隔值，构成从根菜单项到当前菜单项的路径。 若要确定分隔符字符，请使用 <xref:System.Web.UI.WebControls.Menu.PathSeparator%2A> 属性。  
  
   
  
## Examples  
 下面的代码示例演示如何使用 <xref:System.Web.UI.WebControls.Menu.FindItem%2A> 方法从 <xref:System.Web.UI.WebControls.Menu> 位于指定值路径的控件中检索菜单项。  
  
 [!code-aspx-csharp[MenuPathSeparator#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuPathSeparator/CS/menupathseparatorcs.aspx#1)]
 [!code-aspx-vb[MenuPathSeparator#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuPathSeparator/VB/menupathseparatorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.PathSeparator" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.ValuePath" />
      </Docs>
    </Member>
    <Member MemberName="GetDesignModeState">
      <MemberSignature Language="C#" Value="protected override System.Collections.IDictionary GetDesignModeState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Collections.IDictionary GetDesignModeState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.GetDesignModeState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetDesignModeState () As IDictionary" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Collections::IDictionary ^ GetDesignModeState();" />
      <MemberSignature Language="F#" Value="override this.GetDesignModeState : unit -&gt; System.Collections.IDictionary" Usage="menu.GetDesignModeState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IDictionary</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>检索 <see cref="T:System.Web.UI.WebControls.Menu" /> 控件的设计时状态。</summary>
        <returns><see cref="T:System.Collections.IDictionary" />，包含 <see cref="T:System.Web.UI.WebControls.Menu" /> 控件的设计时状态。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Menu.GetDesignModeState%2A>方法是一个帮助器方法，用于获取控件的当前设计时状态 <xref:System.Web.UI.WebControls.Menu> 。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IDictionary" />
      </Docs>
    </Member>
    <Member MemberName="IncludeStyleBlock">
      <MemberSignature Language="C#" Value="public bool IncludeStyleBlock { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IncludeStyleBlock" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.IncludeStyleBlock" />
      <MemberSignature Language="VB.NET" Value="Public Property IncludeStyleBlock As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IncludeStyleBlock { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IncludeStyleBlock : bool with get, set" Usage="System.Web.UI.WebControls.Menu.IncludeStyleBlock" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(true)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.ComponentModel.Description("Determines whether or not to render the inline style block (only used in standards compliance mode)")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Description("Determines whether or not to render the inline style block (only used in standards compliance mode)")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示 ASP.NET 是否应呈现菜单中所使用样式的级联样式表 (CSS) 定义块。</summary>
        <value>一个值，该值指示 ASP.NET 是否应呈现菜单中所使用样式的 CSS 定义块。 默认值是 <see langword="true" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Menu>控件使用 CSS 样式控制其在浏览器中的外观。 默认情况下，它会呈现一个 `style` 元素，该元素包含它所使用的 css 类的 css 定义。 在以下情况下，你通常会将此属性设置为 `false` ：  
  
-   要提供自己的 CSS 定义，以便自定义菜单的外观。 然后，你必须在页面中提供自己的 CSS 定义块，或包含指向包含定义的外部 CSS 文件的链接。  
  
-   您需要保留默认外观，但更喜欢将生成的 CSS 定义保留在单独的文件中。 然后，必须提供文件并链接到该文件。  
  
 在这两种情况下，您都可以 <xref:System.Web.UI.WebControls.Menu> 通过将属性设置为 `true` ，运行页面，然后在浏览器中查看页面，来获取该控件生成的默认 CSS 块的副本。 然后，可以在浏览器中查看页面源，并将 CSS 块复制并粘贴到页面标记或单独的文件中。  
  
 如果将此属性设置为 `false` ，则无法设置样式属性。 例如，不能 `DynamicHoverStyle-ForeColor` 在标记中添加特性，也不能 `DynamicHoverStyle.ForeColor` 在代码中设置属性。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Items">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.MenuItemCollection Items { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.MenuItemCollection Items" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.Items" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Items As MenuItemCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::MenuItemCollection ^ Items { System::Web::UI::WebControls::MenuItemCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Items : System.Web.UI.WebControls.MenuItemCollection" Usage="System.Web.UI.WebControls.Menu.Items" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(null)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(null)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName Language="C#">[System.ComponentModel.Editor("System.Web.UI.Design.WebControls.MenuItemCollectionEditor,System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Editor("System.Web.UI.Design.WebControls.MenuItemCollectionEditor,System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.MergableProperty(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.MergableProperty(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.Editor("System.Web.UI.Design.WebControls.MenuItemCollectionEditor,System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Editor("System.Web.UI.Design.WebControls.MenuItemCollectionEditor,System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.MenuItemCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取 <see cref="T:System.Web.UI.WebControls.MenuItemCollection" /> 对象，该对象包含 <see cref="T:System.Web.UI.WebControls.Menu" /> 控件中的所有菜单项。</summary>
        <value><see cref="T:System.Web.UI.WebControls.MenuItemCollection" />，包含 <see cref="T:System.Web.UI.WebControls.Menu" /> 控件中的所有菜单项。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用 <xref:System.Web.UI.WebControls.Menu.Items%2A> 属性 (集合) 来获取一个 <xref:System.Web.UI.WebControls.MenuItemCollection> 对象，该对象包含控件中的所有菜单项 <xref:System.Web.UI.WebControls.Menu> 。 此集合通常用于快速循环访问所有菜单项，或访问特定菜单项。  
  
 <xref:System.Web.UI.WebControls.Menu.Items%2A>集合还可以用来以编程方式管理菜单项。 可以添加、插入、删除和检索 <xref:System.Web.UI.WebControls.MenuItem> 集合对象。 在 <xref:System.Web.UI.WebControls.Menu> 下一次往返服务器后，对集合的任何更新都会自动反映在控件中。  
  
   
  
## Examples  
 下面的代码示例演示如何使用 <xref:System.Web.UI.WebControls.Menu.Items%2A> 集合遍历控件中的菜单项 <xref:System.Web.UI.WebControls.Menu> 。  
  
 [!code-aspx-csharp[MenuItems#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuItems/CS/menuitemscs.aspx#1)]
 [!code-aspx-vb[MenuItems#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuItems/VB/menuitemsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.MenuItem" />
        <altmember cref="T:System.Web.UI.WebControls.MenuItemCollection" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.ChildItems" />
      </Docs>
    </Member>
    <Member MemberName="ItemWrap">
      <MemberSignature Language="C#" Value="public bool ItemWrap { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ItemWrap" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.ItemWrap" />
      <MemberSignature Language="VB.NET" Value="Public Property ItemWrap As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ItemWrap { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ItemWrap : bool with get, set" Usage="System.Web.UI.WebControls.Menu.ItemWrap" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示菜单项的文本是否换行。</summary>
        <value>如果菜单项文本换行，则为 <see langword="true" />；否则为 <see langword="false" />。 默认值为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用 <xref:System.Web.UI.WebControls.Menu.ItemWrap%2A> 属性来指定每个菜单项中显示的文本是否换行。 当文本用尽空间时，它会自动拆分并在以下行中继续。  
  
   
  
## Examples  
 下面的代码示例演示如何使用 <xref:System.Web.UI.WebControls.Menu.ItemWrap%2A> 属性在控件中启用文本换行 <xref:System.Web.UI.WebControls.Menu> 。  
  
 [!code-aspx-csharp[MenuItemWrap#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuItemWrap/CS/menuitemwrapcs.aspx#1)]
 [!code-aspx-vb[MenuItemWrap#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuItemWrap/VB/menuitemwrapvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebControl.Font" />
        <altmember cref="P:System.Web.UI.WebControls.WebControl.ForeColor" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicHorizontalOffset" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicVerticalOffset" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticSubMenuIndent" />
      </Docs>
    </Member>
    <Member MemberName="LevelMenuItemStyles">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.MenuItemStyleCollection LevelMenuItemStyles { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.MenuItemStyleCollection LevelMenuItemStyles" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.LevelMenuItemStyles" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LevelMenuItemStyles As MenuItemStyleCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::MenuItemStyleCollection ^ LevelMenuItemStyles { System::Web::UI::WebControls::MenuItemStyleCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LevelMenuItemStyles : System.Web.UI.WebControls.MenuItemStyleCollection" Usage="System.Web.UI.WebControls.Menu.LevelMenuItemStyles" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(null)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(null)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName Language="C#">[System.ComponentModel.Editor("System.Web.UI.Design.WebControls.MenuItemStyleCollectionEditor,System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Editor("System.Web.UI.Design.WebControls.MenuItemStyleCollectionEditor,System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.Editor("System.Web.UI.Design.WebControls.MenuItemStyleCollectionEditor,System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Editor("System.Web.UI.Design.WebControls.MenuItemStyleCollectionEditor,System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.MenuItemStyleCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取 <see cref="T:System.Web.UI.WebControls.MenuItemStyleCollection" /> 对象，该对象包含的样式设置是根据菜单项在 <see cref="T:System.Web.UI.WebControls.Menu" /> 控件中的级别应用于菜单项的。</summary>
        <value><see cref="T:System.Web.UI.WebControls.MenuItemStyleCollection" />，包含的样式设置是根据菜单项在 <see cref="T:System.Web.UI.WebControls.Menu" /> 控件中的级别应用于菜单项的。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用 <xref:System.Web.UI.WebControls.Menu.LevelMenuItemStyles%2A> 集合作为各个样式属性的替代项 (如 <xref:System.Web.UI.WebControls.Menu.DynamicMenuItemStyle%2A>) 控制各个级别菜单上的菜单项样式。 此集合中包含的样式基于菜单项的菜单级别应用于菜单项。 集合中的第一种样式对应于菜单第一级菜单项的样式。 集合中的第二个样式对应于菜单第二级菜单中菜单项的样式，依此类推。 此集合通常用于生成目录样式的导航菜单，其中某个级别的菜单项应具有相同的外观，无论它们是否具有子菜单。  
  
> [!NOTE]
>  如果使用集合为某个级别定义了样式，则会 <xref:System.Web.UI.WebControls.Menu.LevelMenuItemStyles%2A> 覆盖该级别菜单项的任何菜单项样式设置。  
  
   
  
## Examples  
 下面的代码示例演示如何使用 <xref:System.Web.UI.WebControls.Menu.LevelMenuItemStyles%2A> 集合基于控件在控件中的菜单项级别应用样式设置 <xref:System.Web.UI.WebControls.Menu> 。  
  
 [!code-aspx-csharp[MenuLevelMenuItemStyles#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuLevelMenuItemStyles/CS/menulevelmenuitemstylecs.aspx#1)]
 [!code-aspx-vb[MenuLevelMenuItemStyles#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuLevelMenuItemStyles/VB/menulevelmenuitemstylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicHoverStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicMenuItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicMenuStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicSelectedStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelSelectedStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelSubMenuStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticHoverStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticMenuItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticMenuStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticSelectedStyle" />
      </Docs>
    </Member>
    <Member MemberName="LevelSelectedStyles">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.MenuItemStyleCollection LevelSelectedStyles { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.MenuItemStyleCollection LevelSelectedStyles" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.LevelSelectedStyles" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LevelSelectedStyles As MenuItemStyleCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::MenuItemStyleCollection ^ LevelSelectedStyles { System::Web::UI::WebControls::MenuItemStyleCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LevelSelectedStyles : System.Web.UI.WebControls.MenuItemStyleCollection" Usage="System.Web.UI.WebControls.Menu.LevelSelectedStyles" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(null)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(null)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName Language="C#">[System.ComponentModel.Editor("System.Web.UI.Design.WebControls.MenuItemStyleCollectionEditor,System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Editor("System.Web.UI.Design.WebControls.MenuItemStyleCollectionEditor,System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.Editor("System.Web.UI.Design.WebControls.MenuItemStyleCollectionEditor,System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Editor("System.Web.UI.Design.WebControls.MenuItemStyleCollectionEditor,System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.MenuItemStyleCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取 <see cref="T:System.Web.UI.WebControls.MenuItemStyleCollection" /> 对象，该对象包含的样式设置是根据所选菜单项在 <see cref="T:System.Web.UI.WebControls.Menu" /> 控件中的级别应用于该菜单项的。</summary>
        <value><see cref="T:System.Web.UI.WebControls.MenuItemStyleCollection" />，包含的样式设置是根据所选菜单项在 <see cref="T:System.Web.UI.WebControls.Menu" /> 控件中的级别应用于该菜单项的。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用 <xref:System.Web.UI.WebControls.Menu.LevelSelectedStyles%2A> 集合作为 <xref:System.Web.UI.WebControls.Menu.DynamicSelectedStyle%2A> 和属性的替代项， <xref:System.Web.UI.WebControls.Menu.StaticSelectedStyle%2A> 以控制菜单各个级别的选定菜单项的样式。 此集合中包含的样式基于其菜单级别应用于选定的菜单项。 集合中的第一种样式对应于菜单第一级中选定菜单项的样式。 集合中的第二个样式对应于菜单第二级中选定菜单项的样式，依此类推。 此集合通常用于生成目录样式的导航菜单，其中某个级别的菜单项应具有相同的外观，无论它们是否具有子菜单。  
  
> [!NOTE]
>  如果使用集合为某个级别定义了样式，则将 <xref:System.Web.UI.WebControls.Menu.LevelSelectedStyles%2A> 重写该 <xref:System.Web.UI.WebControls.Menu.DynamicSelectedStyle%2A> 级别的和 <xref:System.Web.UI.WebControls.Menu.StaticSelectedStyle%2A> 属性。  
  
   
  
## Examples  
 下面的代码示例演示如何使用 <xref:System.Web.UI.WebControls.Menu.LevelSelectedStyles%2A> 集合基于控件在控件中的级别应用样式设置 <xref:System.Web.UI.WebControls.Menu> 。  
  
 [!code-aspx-csharp[MenuLevelMenuItemStyles#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuLevelMenuItemStyles/CS/menulevelmenuitemstylecs.aspx#1)]
 [!code-aspx-vb[MenuLevelMenuItemStyles#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuLevelMenuItemStyles/VB/menulevelmenuitemstylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicHoverStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicMenuItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicMenuStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicSelectedStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelMenuItemStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelSubMenuStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticHoverStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticMenuItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticMenuStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticSelectedStyle" />
      </Docs>
    </Member>
    <Member MemberName="LevelSubMenuStyles">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.SubMenuStyleCollection LevelSubMenuStyles { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.SubMenuStyleCollection LevelSubMenuStyles" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.LevelSubMenuStyles" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LevelSubMenuStyles As SubMenuStyleCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::SubMenuStyleCollection ^ LevelSubMenuStyles { System::Web::UI::WebControls::SubMenuStyleCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LevelSubMenuStyles : System.Web.UI.WebControls.SubMenuStyleCollection" Usage="System.Web.UI.WebControls.Menu.LevelSubMenuStyles" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(null)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(null)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName Language="C#">[System.ComponentModel.Editor("System.Web.UI.Design.WebControls.SubMenuStyleCollectionEditor,System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Editor("System.Web.UI.Design.WebControls.SubMenuStyleCollectionEditor,System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.Editor("System.Web.UI.Design.WebControls.SubMenuStyleCollectionEditor,System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Editor("System.Web.UI.Design.WebControls.SubMenuStyleCollectionEditor,System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SubMenuStyleCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取 <see cref="T:System.Web.UI.WebControls.MenuItemStyleCollection" /> 对象，该对象包含的样式设置是根据静态菜单的子菜单项在 <see cref="T:System.Web.UI.WebControls.Menu" /> 控件中的级别应用于这些子菜单项的。</summary>
        <value><see cref="T:System.Web.UI.WebControls.MenuItemStyleCollection" />，包含的样式设置是根据静态菜单的子菜单项在 <see cref="T:System.Web.UI.WebControls.Menu" /> 控件中的级别应用于这些子菜单项的。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用 <xref:System.Web.UI.WebControls.Menu.LevelSubMenuStyles%2A> 集合作为各个样式属性的替代项 (如 <xref:System.Web.UI.WebControls.Menu.StaticMenuItemStyle%2A>) 控制各个级别的静态菜单中显示的静态子菜单项的样式。 此集合中包含的样式基于其菜单级别应用于静态子菜单项。 集合中的第一种样式对应于静态菜单中显示的第一个静态子菜单级别的样式。 集合中的第二个样式对应于静态菜单中显示的第二个子菜单级别的样式，依此类推。 此集合通常用于生成目录样式的导航菜单，其中某个级别的菜单项应具有相同的外观，无论它们是否具有子菜单。  
  
> [!NOTE]
>  如果使用集合为某个级别定义了样式，则会 <xref:System.Web.UI.WebControls.Menu.LevelSubMenuStyles%2A> 覆盖该级别的任何静态子菜单项样式设置。  
  
   
  
## Examples  
 下面的代码示例演示如何使用集合将 <xref:System.Web.UI.WebControls.Menu.LevelSubMenuStyles%2A> 样式设置应用于控件的静态菜单中显示的子菜单项 <xref:System.Web.UI.WebControls.Menu> 。  
  
 [!code-aspx-csharp[MenuLevelSubMenuStyles#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuLevelSubMenuStyles/CS/menulevelsubmenustylescs.aspx#1)]
 [!code-aspx-vb[MenuLevelSubMenuStyles#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuLevelSubMenuStyles/VB/menulevelsubmenustylesvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicHoverStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicMenuItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicMenuStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicSelectedStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelMenuItemStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelSelectedStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticHoverStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticMenuItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticMenuStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticSelectedStyle" />
      </Docs>
    </Member>
    <Member MemberName="LoadControlState">
      <MemberSignature Language="C#" Value="protected internal override void LoadControlState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void LoadControlState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.LoadControlState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub LoadControlState (savedState As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void LoadControlState(System::Object ^ savedState);" />
      <MemberSignature Language="F#" Value="override this.LoadControlState : obj -&gt; unit" Usage="menu.LoadControlState savedState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState">表示要还原的控件状态的 <see cref="T:System.Object" />。</param>
        <summary>加载 <see cref="T:System.Web.UI.WebControls.Menu" /> 控件中需要保留的属性的状态。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  此方法主要由控件开发人员用来扩展 <xref:System.Web.UI.WebControls.Menu> 控件。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadViewState">
      <MemberSignature Language="C#" Value="protected override void LoadViewState (object state);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void LoadViewState(object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.LoadViewState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub LoadViewState (state As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void LoadViewState(System::Object ^ state);" />
      <MemberSignature Language="F#" Value="override this.LoadViewState : obj -&gt; unit" Usage="menu.LoadViewState state" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="state">包含控件保存的视图状态值的 <see cref="T:System.Object" />。</param>
        <summary>加载以前保存的 <see cref="T:System.Web.UI.WebControls.Menu" /> 控件的视图状态。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaximumDynamicDisplayLevels">
      <MemberSignature Language="C#" Value="public int MaximumDynamicDisplayLevels { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaximumDynamicDisplayLevels" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.MaximumDynamicDisplayLevels" />
      <MemberSignature Language="VB.NET" Value="Public Property MaximumDynamicDisplayLevels As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaximumDynamicDisplayLevels { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MaximumDynamicDisplayLevels : int with get, set" Usage="System.Web.UI.WebControls.Menu.MaximumDynamicDisplayLevels" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(3)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(3)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.Themeable(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.Themeable(true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置动态菜单的菜单呈现级别数。</summary>
        <value>动态菜单的菜单呈现级别数。 默认值为 3。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 可以通过将 <xref:System.Web.UI.WebControls.Menu.StaticDisplayLevels%2A> 属性设置为大于1的值，在静态菜单中显示多个菜单级别。 还可以通过将此属性设置为大于0的值来显示动态菜单中的其他级别。 例如，如果在静态菜单中显示两个菜单级别 (通过将属性设置 <xref:System.Web.UI.WebControls.Menu.StaticDisplayLevels%2A> 为 2) ，然后将此属性设置为3，则在动态菜单中显示三个额外的菜单级别。 如果放弃任何) ，则所有剩余的菜单级别 (都较高。  
  
> [!NOTE]
>  如果将此属性设置为 0 <xref:System.Web.UI.WebControls.Menu.StaticDisplayLevels%2A> ，则会在不使用任何动态菜单的情况下，在属性指定的级别上显示一个平面菜单。  
  
   
  
## Examples  
 下面的代码示例演示如何使用属性将 <xref:System.Web.UI.WebControls.Menu.MaximumDynamicDisplayLevels%2A> 动态菜单中显示的菜单级别数限制为1。 只显示根菜单级别。  
  
 [!code-aspx-csharp[MenuMaximumDynamicDisplayLevels#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuMaximumDynamicDisplayLevels/CS/menumaximumdynamicdisplaylevelscs.aspx#1)]
 [!code-aspx-vb[MenuMaximumDynamicDisplayLevels#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuMaximumDynamicDisplayLevels/VB/menumaximumdynamicdisplaylevelsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><see cref="P:System.Web.UI.WebControls.Menu.MaximumDynamicDisplayLevels" /> 属性被设置为一个小于 0 的值。</exception>
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticDisplayLevels" />
      </Docs>
    </Member>
    <Member MemberName="MenuItemClick">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.MenuEventHandler MenuItemClick;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.MenuEventHandler MenuItemClick" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.Menu.MenuItemClick" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MenuItemClick As MenuEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::MenuEventHandler ^ MenuItemClick;" />
      <MemberSignature Language="F#" Value="member this.MenuItemClick : System.Web.UI.WebControls.MenuEventHandler " Usage="member this.MenuItemClick : System.Web.UI.WebControls.MenuEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.MenuEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>在单击 <see cref="T:System.Web.UI.WebControls.Menu" /> 控件中的菜单项时发生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 在 <xref:System.Web.UI.WebControls.Menu.MenuItemClick> 控件中单击菜单项时，将引发事件 <xref:System.Web.UI.WebControls.Menu> 。 这使你可以提供一个事件处理程序，该事件处理程序在此事件发生时执行自定义例程（如与页上的另一个控件同步）。  
  
 <xref:System.Web.UI.WebControls.MenuEventArgs>对象传递到事件处理程序，该处理程序允许您访问引发事件的菜单项的属性。  
  
 有关如何处理事件的详细信息，请参阅 [处理和引发事件](/dotnet/standard/events/)。  
  
   
  
## Examples  
 下面的代码示例演示如何为事件创建事件处理程序 <xref:System.Web.UI.WebControls.Menu.MenuItemClick> ，该事件显示用户选定的菜单项的文本。  
  
 [!code-aspx-csharp[MenuMenuItemClick#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuMenuItemClick/CS/menumenuitemclickcs.aspx#1)]
 [!code-aspx-vb[MenuMenuItemClick#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuMenuItemClick/VB/menumenuitemclickvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.MenuEventArgs" />
        <altmember cref="T:System.Web.UI.WebControls.MenuEventHandler" />
        <altmember cref="E:System.Web.UI.WebControls.Menu.MenuItemDataBound" />
        <altmember cref="M:System.Web.UI.WebControls.Menu.OnMenuItemClick(System.Web.UI.WebControls.MenuEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="MenuItemClickCommandName">
      <MemberSignature Language="C#" Value="public static readonly string MenuItemClickCommandName;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string MenuItemClickCommandName" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.Menu.MenuItemClickCommandName" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MenuItemClickCommandName As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ MenuItemClickCommandName;" />
      <MemberSignature Language="F#" Value=" staticval mutable MenuItemClickCommandName : string" Usage="System.Web.UI.WebControls.Menu.MenuItemClickCommandName" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>包含命令名。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此只读字段包含用于访问菜单项的命令的名称。 默认值为 "单击"。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MenuItemDataBound">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.MenuEventHandler MenuItemDataBound;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.MenuEventHandler MenuItemDataBound" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.Menu.MenuItemDataBound" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MenuItemDataBound As MenuEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::MenuEventHandler ^ MenuItemDataBound;" />
      <MemberSignature Language="F#" Value="member this.MenuItemDataBound : System.Web.UI.WebControls.MenuEventHandler " Usage="member this.MenuItemDataBound : System.Web.UI.WebControls.MenuEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.MenuEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>在 <see cref="T:System.Web.UI.WebControls.Menu" /> 控件中的菜单项绑定到数据时发生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Menu.MenuItemDataBound>当菜单项绑定到控件中的数据时，将引发事件 <xref:System.Web.UI.WebControls.Menu> 。 这使你可以提供一个事件处理程序，该事件处理程序在每次发生此事件时执行自定义例程（如添加自定义内容或修改菜单项）。  
  
 <xref:System.Web.UI.WebControls.MenuEventArgs>对象传递到事件处理程序，该处理程序允许您访问引发事件的菜单项的属性。  
  
 有关如何处理事件的详细信息，请参阅 [处理和引发事件](/dotnet/standard/events/)。  
  
   
  
## Examples  
 下面的代码示例演示如何为事件创建事件处理程序 <xref:System.Web.UI.WebControls.Menu.MenuItemDataBound> ，以便在 `Home` 菜单项显示在控件中之前修改该菜单项的文本 <xref:System.Web.UI.WebControls.Menu> 。  
  
 [!code-aspx-csharp[MenuItemDataBound#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuItemDataBound/CS/menumenuitemdataboundcs.aspx#1)]
 [!code-aspx-vb[MenuItemDataBound#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuItemDataBound/VB/menumenuitemdataboundvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.MenuEventArgs" />
        <altmember cref="T:System.Web.UI.WebControls.MenuEventHandler" />
        <altmember cref="E:System.Web.UI.WebControls.Menu.MenuItemClick" />
        <altmember cref="M:System.Web.UI.WebControls.Menu.OnMenuItemDataBound(System.Web.UI.WebControls.MenuEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnBubbleEvent">
      <MemberSignature Language="C#" Value="protected override bool OnBubbleEvent (object source, EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool OnBubbleEvent(object source, class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.OnBubbleEvent(System.Object,System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function OnBubbleEvent (source As Object, e As EventArgs) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool OnBubbleEvent(System::Object ^ source, EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnBubbleEvent : obj * EventArgs -&gt; bool" Usage="menu.OnBubbleEvent (source, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Object" />
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="source">事件源。</param>
        <param name="e">包含事件数据的 <see cref="T:System.EventArgs" />。</param>
        <summary>确定 <see cref="T:System.Web.UI.WebControls.Menu" /> 控件的事件是否沿页的用户界面 (UI) 服务器控件层次结构向上传递。</summary>
        <returns>如果事件已被取消，则为 <see langword="true" />；否则为 <see langword="false" />。 默认值为 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此成员重写 <xref:System.Web.UI.Control.OnBubbleEvent%2A>。  
  
> [!NOTE]
>  此方法主要由控件开发人员用来扩展 <xref:System.Web.UI.WebControls.Menu> 控件。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDataBinding">
      <MemberSignature Language="C#" Value="protected override void OnDataBinding (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnDataBinding(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.OnDataBinding(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnDataBinding (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnDataBinding(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnDataBinding : EventArgs -&gt; unit" Usage="menu.OnDataBinding e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件数据的 <see cref="T:System.Web.UI.WebControls.MenuEventArgs" />。</param>
        <summary>引发 <see cref="E:System.Web.UI.Control.DataBinding" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.Control.DataBinding>当数据绑定到控件时，将引发事件 <xref:System.Web.UI.WebControls.Menu> 。 此方法通知控件执行与其关联的任何数据绑定逻辑。  
  
 <xref:System.Web.UI.WebControls.Menu.OnDataBinding%2A>方法允许派生类在不附加委托的情况下处理事件。 这是在派生类中处理事件的首选技术。  
  
 在扩展类时，控件开发人员通常会使用此方法 <xref:System.Web.UI.WebControls.Menu> 。  
  
 引发事件时，将通过委托调用事件处理程序。 有关详细信息，请参阅 [处理和引发事件](/dotnet/standard/events/)。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>在派生类中重写 <see cref="M:System.Web.UI.WebControls.Menu.OnDataBinding(System.EventArgs)" /> 时，一定要调用基类的 <see cref="M:System.Web.UI.WebControls.Menu.OnDataBinding(System.EventArgs)" /> 方法，以便已注册的委托对事件进行接收。</para></block>
        <altmember cref="T:System.Web.UI.WebControls.MenuEventArgs" />
        <altmember cref="T:System.Web.UI.WebControls.MenuEventHandler" />
        <altmember cref="E:System.Web.UI.WebControls.Menu.MenuItemDataBound" />
      </Docs>
    </Member>
    <Member MemberName="OnInit">
      <MemberSignature Language="C#" Value="protected internal override void OnInit (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnInit(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.OnInit(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnInit (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnInit(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnInit : EventArgs -&gt; unit" Usage="menu.OnInit e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件数据的 <see cref="T:System.Web.UI.WebControls.MenuEventArgs" />。</param>
        <summary>引发 <see cref="E:System.Web.UI.Control.Init" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 当通过此方法通知时，Web 服务器控件必须执行创建和设置实例所需的任何初始化步骤。 在服务器控件生命周期的此阶段中，尚未填充控件的视图状态。 此外，如果调用此方法，则不能访问另一个服务器控件，而不管它是此控件的子控件还是父控件。 不保证其他服务器控件已创建并且可供访问。  
  
 引发事件时，将通过委托调用事件处理程序。 有关详细信息，请参阅 [处理和引发事件](/dotnet/standard/events/)。  
  
 <xref:System.Web.UI.WebControls.Menu.OnInit%2A> 方法还允许派生类对事件进行处理而不必附加委托。 这是在派生类中处理事件的首选技术。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>在派生类中重写 <see cref="M:System.Web.UI.WebControls.Menu.OnInit(System.EventArgs)" /> 时，一定要调用基类的 <see cref="M:System.Web.UI.WebControls.Menu.OnInit(System.EventArgs)" /> 方法，以便已注册的委托对事件进行接收。</para></block>
      </Docs>
    </Member>
    <Member MemberName="OnMenuItemClick">
      <MemberSignature Language="C#" Value="protected virtual void OnMenuItemClick (System.Web.UI.WebControls.MenuEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMenuItemClick(class System.Web.UI.WebControls.MenuEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.OnMenuItemClick(System.Web.UI.WebControls.MenuEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMenuItemClick (e As MenuEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMenuItemClick(System::Web::UI::WebControls::MenuEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMenuItemClick : System.Web.UI.WebControls.MenuEventArgs -&gt; unit&#xA;override this.OnMenuItemClick : System.Web.UI.WebControls.MenuEventArgs -&gt; unit" Usage="menu.OnMenuItemClick e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.MenuEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件数据的 <see cref="T:System.Web.UI.WebControls.MenuEventArgs" />。</param>
        <summary>引发 <see cref="E:System.Web.UI.WebControls.Menu.MenuItemClick" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此 <xref:System.Web.UI.WebControls.Menu.OnMenuItemClick%2A> 方法由 <xref:System.Web.UI.WebControls.Menu> 控件调用以引发 <xref:System.Web.UI.WebControls.Menu.MenuItemClick> 事件。 在扩展类时，控件开发人员通常会使用此方法 <xref:System.Web.UI.WebControls.Menu> 。  
  
 引发事件时，将通过委托调用事件处理程序。 有关详细信息，请参阅 [处理和引发事件](/dotnet/standard/events/)。  
  
 <xref:System.Web.UI.WebControls.Menu.OnMenuItemClick%2A> 方法还允许派生类对事件进行处理而不必附加委托。 这是在派生类中处理事件的首选技术。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>在派生类中重写 <see cref="M:System.Web.UI.WebControls.Menu.OnMenuItemClick(System.Web.UI.WebControls.MenuEventArgs)" /> 时，一定要调用基类的 <see cref="M:System.Web.UI.WebControls.Menu.OnMenuItemClick(System.Web.UI.WebControls.MenuEventArgs)" /> 方法，以便已注册的委托对事件进行接收。</para></block>
        <altmember cref="T:System.Web.UI.WebControls.MenuEventArgs" />
        <altmember cref="T:System.Web.UI.WebControls.MenuEventHandler" />
        <altmember cref="E:System.Web.UI.WebControls.Menu.MenuItemClick" />
        <altmember cref="M:System.Web.UI.WebControls.Menu.OnMenuItemDataBound(System.Web.UI.WebControls.MenuEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnMenuItemDataBound">
      <MemberSignature Language="C#" Value="protected virtual void OnMenuItemDataBound (System.Web.UI.WebControls.MenuEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMenuItemDataBound(class System.Web.UI.WebControls.MenuEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.OnMenuItemDataBound(System.Web.UI.WebControls.MenuEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMenuItemDataBound (e As MenuEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMenuItemDataBound(System::Web::UI::WebControls::MenuEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMenuItemDataBound : System.Web.UI.WebControls.MenuEventArgs -&gt; unit&#xA;override this.OnMenuItemDataBound : System.Web.UI.WebControls.MenuEventArgs -&gt; unit" Usage="menu.OnMenuItemDataBound e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.MenuEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件数据的 <see cref="T:System.Web.UI.WebControls.MenuEventArgs" />。</param>
        <summary>引发 <see cref="E:System.Web.UI.WebControls.Menu.MenuItemDataBound" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此 <xref:System.Web.UI.WebControls.Menu.OnMenuItemDataBound%2A> 方法由 <xref:System.Web.UI.WebControls.Menu> 控件调用以引发 <xref:System.Web.UI.WebControls.Menu.MenuItemDataBound> 事件。 在扩展类时，控件开发人员通常会使用此方法 <xref:System.Web.UI.WebControls.Menu> 。  
  
 引发事件时，将通过委托调用事件处理程序。 有关详细信息，请参阅 [处理和引发事件](/dotnet/standard/events/)。  
  
 <xref:System.Web.UI.WebControls.Menu.OnMenuItemDataBound%2A> 方法还允许派生类对事件进行处理而不必附加委托。 这是在派生类中处理事件的首选技术。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>在派生类中重写 <see cref="M:System.Web.UI.WebControls.Menu.OnMenuItemDataBound(System.Web.UI.WebControls.MenuEventArgs)" /> 时，一定要调用基类的 <see cref="M:System.Web.UI.WebControls.Menu.OnMenuItemDataBound(System.Web.UI.WebControls.MenuEventArgs)" /> 方法，以便已注册的委托对事件进行接收。</para></block>
        <altmember cref="T:System.Web.UI.WebControls.MenuEventArgs" />
        <altmember cref="T:System.Web.UI.WebControls.MenuEventHandler" />
        <altmember cref="E:System.Web.UI.WebControls.Menu.MenuItemDataBound" />
        <altmember cref="M:System.Web.UI.WebControls.Menu.OnMenuItemClick(System.Web.UI.WebControls.MenuEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnPreRender">
      <MemberSignature Language="C#" Value="protected internal override void OnPreRender (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnPreRender(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.OnPreRender(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnPreRender (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnPreRender(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnPreRender : EventArgs -&gt; unit" Usage="menu.OnPreRender e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件数据的 <see cref="T:System.EventArgs" />。</param>
        <summary>引发 <see cref="E:System.Web.UI.Control.PreRender" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此 <xref:System.Web.UI.WebControls.Menu.OnPreRender%2A> 方法由 <xref:System.Web.UI.WebControls.Menu> 控件调用以引发 <xref:System.Web.UI.Control.PreRender> 事件。 在扩展类时，控件开发人员通常会使用此方法 <xref:System.Web.UI.WebControls.Menu> 。  
  
 引发事件时，将通过委托调用事件处理程序。 有关详细信息，请参阅 [处理和引发事件](/dotnet/standard/events/)。  
  
 <xref:System.Web.UI.WebControls.Menu.OnPreRender%2A> 方法还允许派生类对事件进行处理而不必附加委托。 这是在派生类中处理事件的首选技术。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>在派生类中重写 <see cref="M:System.Web.UI.WebControls.Menu.OnPreRender(System.EventArgs)" /> 时，一定要调用基类的 <see cref="M:System.Web.UI.WebControls.Menu.OnPreRender(System.EventArgs)" /> 方法，以便已注册的委托对事件进行接收。</para></block>
      </Docs>
    </Member>
    <Member MemberName="Orientation">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.Orientation Orientation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.Orientation Orientation" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.Orientation" />
      <MemberSignature Language="VB.NET" Value="Public Property Orientation As Orientation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::Orientation Orientation { System::Web::UI::WebControls::Orientation get(); void set(System::Web::UI::WebControls::Orientation value); };" />
      <MemberSignature Language="F#" Value="member this.Orientation : System.Web.UI.WebControls.Orientation with get, set" Usage="System.Web.UI.WebControls.Menu.Orientation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Orientation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置 <see cref="T:System.Web.UI.WebControls.Menu" /> 控件的呈现方向。</summary>
        <value><see cref="T:System.Web.UI.WebControls.Orientation" /> 枚举值之一。 默认值为 <see langword="Orientation.Vertical" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用 <xref:System.Web.UI.WebControls.Menu.Orientation%2A> 属性可指定控件的呈现方向 <xref:System.Web.UI.WebControls.Menu> 。 下表列出了可用的方向。  
  
|方向|说明|  
|-----------------|-----------------|  
|`Orientation.Horizontal`|<xref:System.Web.UI.WebControls.Menu>控件在水平方向上呈现。|  
|`Orientation.Vertical`|<xref:System.Web.UI.WebControls.Menu>控件在垂直方向上呈现。|  
  
   
  
## Examples  
 下面的代码示例演示如何使用 <xref:System.Web.UI.WebControls.Menu.Orientation%2A> 属性来显示水平菜单。  
  
 [!code-aspx-csharp[MenuOrientation#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuOrientation/CS/menuorientationcs.aspx#1)]
 [!code-aspx-vb[MenuOrientation#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuOrientation/VB/menuorientationvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Orientation" />
      </Docs>
    </Member>
    <Member MemberName="PathSeparator">
      <MemberSignature Language="C#" Value="public char PathSeparator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance char PathSeparator" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.PathSeparator" />
      <MemberSignature Language="VB.NET" Value="Public Property PathSeparator As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property char PathSeparator { char get(); void set(char value); };" />
      <MemberSignature Language="F#" Value="member this.PathSeparator : char with get, set" Usage="System.Web.UI.WebControls.Menu.PathSeparator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue('/')]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue('/')&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置用于分隔 <see cref="T:System.Web.UI.WebControls.Menu" /> 控件的菜单项路径的字符。</summary>
        <value>用于分隔菜单项路径的字符。 默认值为斜杠 (/)。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  (控件中的对象) 所表示的每个菜单项 <xref:System.Web.UI.WebControls.MenuItem> <xref:System.Web.UI.WebControls.Menu> 都有一个 <xref:System.Web.UI.WebControls.MenuItem.ValuePath%2A> 属性，该属性指定菜单项的位置。 值路径是一串分隔值，构成从根菜单项到当前菜单项的路径。 使用 <xref:System.Web.UI.WebControls.Menu.PathSeparator%2A> 属性可以指定用于分隔菜单路径中的值的分隔字符。 此值通常在分析各个值的列表时使用。  
  
 根据控件中显示的文本 <xref:System.Web.UI.WebControls.Menu> ，分隔符字符可能需要更改以防止任何冲突。 例如，如果将分隔符字符设置为逗号，则显示的文本不应包含任何逗号;否则， <xref:System.Web.UI.WebControls.MenuItem.ValuePath%2A> 属性无法准确分析。  
  
   
  
## Examples  
 下面的代码示例演示如何使用属性将 <xref:System.Web.UI.WebControls.Menu.PathSeparator%2A> 菜单项的值路径的分隔符字符更改为逗号。  
  
 [!code-aspx-csharp[MenuPathSeparator#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuPathSeparator/CS/menupathseparatorcs.aspx#1)]
 [!code-aspx-vb[MenuPathSeparator#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuPathSeparator/VB/menupathseparatorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.ValuePath" />
        <altmember cref="M:System.Web.UI.WebControls.Menu.FindItem(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="PerformDataBinding">
      <MemberSignature Language="C#" Value="protected internal override void PerformDataBinding ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void PerformDataBinding() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.PerformDataBinding" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub PerformDataBinding ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void PerformDataBinding();" />
      <MemberSignature Language="F#" Value="override this.PerformDataBinding : unit -&gt; unit" Usage="menu.PerformDataBinding " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>将数据源中的项绑定到 <see cref="T:System.Web.UI.WebControls.Menu" /> 控件中的菜单项。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Menu.PerformDataBinding%2A>方法是由控件调用的帮助器方法 <xref:System.Web.UI.WebControls.Menu> ，用于将数据源中的项绑定到 <xref:System.Web.UI.WebControls.Menu> 控件。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.HierarchicalDataBoundControl.PerformDataBinding" />
      </Docs>
    </Member>
    <Member MemberName="RaisePostBackEvent">
      <MemberSignature Language="C#" Value="protected internal virtual void RaisePostBackEvent (string eventArgument);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void RaisePostBackEvent(string eventArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.RaisePostBackEvent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub RaisePostBackEvent (eventArgument As String)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void RaisePostBackEvent(System::String ^ eventArgument);" />
      <MemberSignature Language="F#" Value="abstract member RaisePostBackEvent : string -&gt; unit&#xA;override this.RaisePostBackEvent : string -&gt; unit" Usage="menu.RaisePostBackEvent eventArgument" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventArgument"><see cref="T:System.String" />，表示传递给事件处理程序的事件参数。</param>
        <summary>处理窗体发送到服务器时引发的事件。</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="protected internal override void Render (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Render(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.Render(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub Render (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void Render(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.Render : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="menu.Render writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">表示用于向网页写入内容的输出流的 <see cref="T:System.Web.UI.HtmlTextWriter" />。</param>
        <summary>在客户端浏览器上呈现菜单控件。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RenderBeginTag">
      <MemberSignature Language="C#" Value="public override void RenderBeginTag (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void RenderBeginTag(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.RenderBeginTag(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub RenderBeginTag (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void RenderBeginTag(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.RenderBeginTag : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="menu.RenderBeginTag writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">包含可生成和呈现特定于设备的输出的方法的 <see cref="T:System.Web.UI.HtmlTextWriter" />。</param>
        <summary>添加标记特性，并将表示控件开始标记的标志写入到将被发送至浏览器或设备的输出流中。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Menu.RenderBeginTag%2A>方法添加标记特性，并将控件开始标记的标记写入到发送到客户端浏览器的响应流的输出流中。  
  
 若 <xref:System.Web.UI.WebControls.Menu.RenderBeginTag%2A> 要实现自定义行为，例如，在任何控件内容（例如）之前将多个标记写入响应流，请重写 `<table><tr><td>` 。 此方法将重写 <xref:System.Web.UI.WebControls.Menu.RenderBeginTag%2A> 方法以添加 <xref:System.Web.UI.WebControls.Menu.SkipLinkText%2A> 属性。  
  
> [!NOTE]
>  此方法主要由控件开发人员用来扩展 <xref:System.Web.UI.WebControls.Menu> 控件。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RenderContents">
      <MemberSignature Language="C#" Value="protected internal override void RenderContents (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void RenderContents(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.RenderContents(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub RenderContents (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void RenderContents(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.RenderContents : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="menu.RenderContents writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">包含可生成和呈现特定于设备的输出的方法的 <see cref="T:System.Web.UI.HtmlTextWriter" />。</param>
        <summary>此成员重写 <see cref="M:System.Web.UI.WebControls.WebControl.RenderContents(System.Web.UI.HtmlTextWriter)" />。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 重写 <xref:System.Web.UI.WebControls.WebControl.RenderContents%2A> 方法以呈现开始标记和结束标记之间的控件内容。 此方法的默认实现将呈现任何子控件。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RenderEndTag">
      <MemberSignature Language="C#" Value="public override void RenderEndTag (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void RenderEndTag(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.RenderEndTag(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub RenderEndTag (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void RenderEndTag(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.RenderEndTag : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="menu.RenderEndTag writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">包含可生成和呈现特定于设备的输出的方法的 <see cref="T:System.Web.UI.HtmlTextWriter" />。</param>
        <summary>执行最终的标记，并将控件的 HTML 结束标记写入到将被发送至浏览器或设备的输出流中。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法重写 <xref:System.Web.UI.WebControls.WebControl.RenderEndTag%2A?displayProperty=nameWithType> 以呈现 <xref:System.Web.UI.WebControls.Menu> 子菜单和 <xref:System.Web.UI.WebControls.Menu.SkipLinkText%2A> 属性。  
  
> [!NOTE]
>  此方法主要由控件开发人员用来扩展 <xref:System.Web.UI.WebControls.Menu> 控件。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RenderingMode">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.MenuRenderingMode RenderingMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.MenuRenderingMode RenderingMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.RenderingMode" />
      <MemberSignature Language="VB.NET" Value="Public Property RenderingMode As MenuRenderingMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::MenuRenderingMode RenderingMode { System::Web::UI::WebControls::MenuRenderingMode get(); void set(System::Web::UI::WebControls::MenuRenderingMode value); };" />
      <MemberSignature Language="F#" Value="member this.RenderingMode : System.Web.UI.WebControls.MenuRenderingMode with get, set" Usage="System.Web.UI.WebControls.Menu.RenderingMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.MenuRenderingMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指定 <see cref="T:System.Web.UI.WebControls.Menu" /> 控件是呈现 HTML <see langword="table" /> 元素和内联样式，还是呈现 <see langword="listitem" /> 元素和级联样式表 (CSS) 样式。</summary>
        <value>一个值，该值指定 <see cref="T:System.Web.UI.WebControls.Menu" /> 控件是呈现 HTML <see langword="table" /> 元素和内联样式，还是呈现 <see langword="listitem" /> 元素和级联样式表 (CSS) 样式。 默认值是 <see cref="F:System.Web.UI.WebControls.MenuRenderingMode.Default" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 属性的值 <xref:System.Web.UI.WebControls.Menu.RenderingMode%2A> 决定菜单控件如何呈现控件的标记 <xref:System.Web.UI.WebControls.Menu> 。  
  
 在 ASP.NET 3.5 及更低版本中， <xref:System.Web.UI.WebControls.Menu> 控件使用 HTML `table` 元素和内联样式在浏览器中指定菜单的外观。 在 ASP.NET 4 和更高版本中，默认情况下，该 <xref:System.Web.UI.WebControls.Menu> 控件使用 `listitem` (CSS) 样式的 HTML 元素和级联样式表。  
  
 如果未设置此属性，则控件将 <xref:System.Web.UI.WebControls.Menu> 呈现适合于属性所指示的 ASP.NET 版本的标记 <xref:System.Web.UI.Control.RenderingCompatibility%2A?displayProperty=nameWithType> 。 <xref:System.Web.UI.WebControls.Menu>控件使用以下规则：  
  
-   如果属性的值 <xref:System.Web.UI.Control.RenderingCompatibility%2A> 为 `3.5` ，则 <xref:System.Web.UI.WebControls.Menu> 控件使用 HTML `table` 元素和内联样式。  
  
-   如果属性的值 <xref:System.Web.UI.Control.RenderingCompatibility%2A> 为 `4.0` 或更大，则 <xref:System.Web.UI.WebControls.Menu> 控件使用 HTML `listitem` 元素和 CSS 样式。  
  
 提供此属性是为了向后兼容。 如果 <xref:System.Web.UI.Control.RenderingCompatibility%2A> 属性指示想要控件生成与 ASP.NET 4 或更高版本兼容的 HTML，但要使 <xref:System.Web.UI.WebControls.Menu> 控件成为使用早期行为的异常，则可以将此属性设置为 <xref:System.Web.UI.WebControls.MenuRenderingMode.Table> 。 例如，如果您的网页显示从右到左的文本，您可能希望将此属性设置为， <xref:System.Web.UI.WebControls.MenuRenderingMode.Table> 因为某些浏览器不会 <xref:System.Web.UI.WebControls.MenuRenderingMode.List> 正确地显示从右到左文本的模式标记。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.RenderingCompatibility" />
      </Docs>
    </Member>
    <Member MemberName="SaveControlState">
      <MemberSignature Language="C#" Value="protected internal override object SaveControlState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance object SaveControlState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.SaveControlState" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function SaveControlState () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override System::Object ^ SaveControlState();" />
      <MemberSignature Language="F#" Value="override this.SaveControlState : unit -&gt; obj" Usage="menu.SaveControlState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>保存 <see cref="T:System.Web.UI.WebControls.Menu" /> 控件中需要保留的属性的状态。</summary>
        <returns>包含控件状态数据的对象。 如果状态没有任何更改，则此方法返回 <see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法用于保存控件中需要保留的属性的状态 <xref:System.Web.UI.WebControls.Menu> （即使在 <xref:System.Web.UI.Control.EnableViewState%2A> 属性设置为时） `false` 。 此 <xref:System.Web.UI.WebControls.Menu.SaveControlState%2A> 方法涉及控件操作 (（如索引或关键字) ）所必需的状态数据，与控件的视图状态数据不同。  
  
> [!NOTE]
>  此方法主要由控件开发人员用来扩展 <xref:System.Web.UI.WebControls.Menu> 控件。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveViewState">
      <MemberSignature Language="C#" Value="protected override object SaveViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance object SaveViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.SaveViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function SaveViewState () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Object ^ SaveViewState();" />
      <MemberSignature Language="F#" Value="override this.SaveViewState : unit -&gt; obj" Usage="menu.SaveViewState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>保存 <see cref="T:System.Web.UI.WebControls.Menu" /> 控件的状态。</summary>
        <returns><see cref="T:System.Object" />，包含 <see cref="T:System.Web.UI.WebControls.Menu" /> 控件的状态。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScrollDownImageUrl">
      <MemberSignature Language="C#" Value="public string ScrollDownImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ScrollDownImageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.ScrollDownImageUrl" />
      <MemberSignature Language="VB.NET" Value="Public Property ScrollDownImageUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ScrollDownImageUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ScrollDownImageUrl : string with get, set" Usage="System.Web.UI.WebControls.Menu.ScrollDownImageUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue("")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue("")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName Language="C#">[System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.UrlProperty]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.UrlProperty&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置动态菜单中显示的图像的 URL，以指示用户可以向下滚动查看更多菜单项。</summary>
        <value>动态菜单中显示的图像的 URL，指示用户可以向下滚动查看更多菜单项。 默认值为空字符串 ("")，指示尚未设置此属性。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此属性在 .NET 4.0 呈现模式中不受支持。 如果此属性是必需的，则可以通过在页面的代码中添加以下内容，将菜单设置为 .NET 3.5 呈现模式：  
  
```  
menuInstance.RenderingCompatibility = new Version(3, 5);  
```  
  
 使用 <xref:System.Web.UI.WebControls.Menu.ScrollDownImageUrl%2A> 属性指定要在每个动态菜单底部显示的自定义图像，以指示用户可以向下滚动查看更多菜单项。  
  
> [!NOTE]
>  如果未设置此属性，则使用内部默认图像。  
  
 可以通过设置属性来指定图像的替换文字 <xref:System.Web.UI.WebControls.Menu.ScrollDownText%2A> 。  
  
   
  
## Examples  
 下面的代码示例演示如何使用 <xref:System.Web.UI.WebControls.Menu.ScrollDownImageUrl%2A> 属性来显示自定义图像，该图像指示用户可以在动态菜单中向下滚动查看更多菜单项。  
  
 [!code-aspx-csharp[MenuScrollDownImage#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuScrollDownImage/CS/menuscrolldownimagecs.aspx#1)]
 [!code-aspx-vb[MenuScrollDownImage#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuScrollDownImage/VB/menuscrolldownimagevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollDownText" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollUpImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollUpText" />
      </Docs>
    </Member>
    <Member MemberName="ScrollDownText">
      <MemberSignature Language="C#" Value="public string ScrollDownText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ScrollDownText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.ScrollDownText" />
      <MemberSignature Language="VB.NET" Value="Public Property ScrollDownText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ScrollDownText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ScrollDownText : string with get, set" Usage="System.Web.UI.WebControls.Menu.ScrollDownText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Localizable(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Localizable(true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置 <see cref="P:System.Web.UI.WebControls.Menu.ScrollDownImageUrl" /> 属性中指定的图像的替换文字。</summary>
        <value><see cref="P:System.Web.UI.WebControls.Menu.ScrollDownImageUrl" /> 属性中指定的图像的替换文字。 默认值为空字符串 ("")，表示尚未设置此属性。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此属性在 .NET 4.0 呈现模式中不受支持。 如果此属性是必需的，则可以通过在页面的代码中添加以下内容，将菜单设置为 .NET 3.5 呈现模式：  
  
```  
menuInstance.RenderingCompatibility = new Version(3, 5);  
```  
  
 当动态菜单项在菜单底部包含其他项时，将显示一个图像，指示用户可以向下滚动以查看其他菜单项。 使用 <xref:System.Web.UI.WebControls.Menu.ScrollDownText%2A> 属性指定此图像的替换文字。 指定的文本为辅助技术设备提供了可用于使控件更易于访问的图像说明。  
  
 设置此属性后，可以使用设计器工具自动将此属性的值保存到资源文件中。 有关详细信息，请参阅 <xref:System.ComponentModel.LocalizableAttribute> 和 [全球化和本地化](https://docs.microsoft.com/previous-versions/aspnet/c6zyy3s9(v=vs.100))。  
  
   
  
## Examples  
 下面的代码示例演示如何使用 <xref:System.Web.UI.WebControls.Menu.ScrollDownText%2A> 属性指定图像的替换文字，该图像用于指示用户可以在动态菜单中向下滚动查看更多菜单项。  
  
 [!code-aspx-csharp[MenuScrollDownImage#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuScrollDownImage/CS/menuscrolldownimagecs.aspx#1)]
 [!code-aspx-vb[MenuScrollDownImage#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuScrollDownImage/VB/menuscrolldownimagevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollDownImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollUpImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollUpText" />
      </Docs>
    </Member>
    <Member MemberName="ScrollUpImageUrl">
      <MemberSignature Language="C#" Value="public string ScrollUpImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ScrollUpImageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.ScrollUpImageUrl" />
      <MemberSignature Language="VB.NET" Value="Public Property ScrollUpImageUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ScrollUpImageUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ScrollUpImageUrl : string with get, set" Usage="System.Web.UI.WebControls.Menu.ScrollUpImageUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue("")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue("")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName Language="C#">[System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.UrlProperty]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.UrlProperty&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置动态菜单中显示的图像的 URL，以指示用户可以向上滚动查看更多菜单项。</summary>
        <value>动态菜单中显示的图像的 URL，指示用户可以向上滚动查看更多菜单项。 默认值为空字符串 ("")，指示尚未设置此属性。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此属性在 .NET 4.0 呈现模式中不受支持。 如果此属性是必需的，则可以通过在页面的代码中添加以下内容，将菜单设置为 .NET 3.5 呈现模式：  
  
```  
menuInstance.RenderingCompatibility = new Version(3, 5);  
```  
  
 使用 <xref:System.Web.UI.WebControls.Menu.ScrollUpImageUrl%2A> 属性指定要在每个动态菜单顶部显示的自定义图像，以指示用户可以向上滚动查看更多菜单项。  
  
> [!NOTE]
>  如果未设置此属性，则使用内部默认图像。  
  
 可以通过设置属性来指定图像的替换文字 <xref:System.Web.UI.WebControls.Menu.ScrollUpText%2A> 。  
  
   
  
## Examples  
 下面的代码示例演示如何使用 <xref:System.Web.UI.WebControls.Menu.ScrollUpImageUrl%2A> 属性来显示自定义图像，该图像指示用户可以在动态菜单中向上滚动查看更多菜单项。  
  
 [!code-aspx-csharp[MenuScrollDownImage#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuScrollDownImage/CS/menuscrolldownimagecs.aspx#1)]
 [!code-aspx-vb[MenuScrollDownImage#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuScrollDownImage/VB/menuscrolldownimagevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollDownImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollDownText" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollUpText" />
      </Docs>
    </Member>
    <Member MemberName="ScrollUpText">
      <MemberSignature Language="C#" Value="public string ScrollUpText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ScrollUpText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.ScrollUpText" />
      <MemberSignature Language="VB.NET" Value="Public Property ScrollUpText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ScrollUpText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ScrollUpText : string with get, set" Usage="System.Web.UI.WebControls.Menu.ScrollUpText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Localizable(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Localizable(true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置 <see cref="P:System.Web.UI.WebControls.Menu.ScrollUpImageUrl" /> 属性中指定的图像的替换文字。</summary>
        <value><see cref="P:System.Web.UI.WebControls.Menu.ScrollUpImageUrl" /> 属性中指定的图像的替换文字。 默认值为空字符串 ("")，表示尚未设置此属性。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此属性在 .NET 4.0 呈现模式中不受支持。 如果此属性是必需的，则可以通过在页面的代码中添加以下内容，将菜单设置为 .NET 3.5 呈现模式：  
  
```  
menuInstance.RenderingCompatibility = new Version(3, 5);  
```  
  
 当动态菜单项在菜单顶部包含其他项时，将显示一个图像，指示用户可以向上滚动查看更多菜单项。 使用 <xref:System.Web.UI.WebControls.Menu.ScrollUpText%2A> 属性指定此图像的替换文字。 指定的文本为辅助技术设备提供了可用于使控件更易于访问的图像说明。  
  
 设置此属性后，可以使用设计器工具自动将此属性的值保存到资源文件中。 有关详细信息，请参阅 <xref:System.ComponentModel.LocalizableAttribute> 和 [全球化和本地化](https://docs.microsoft.com/previous-versions/aspnet/c6zyy3s9(v=vs.100))。  
  
   
  
## Examples  
 下面的代码示例演示如何使用 <xref:System.Web.UI.WebControls.Menu.ScrollUpText%2A> 属性指定图像的替换文字，该图像用于指示用户可以在动态菜单中向上滚动查看更多菜单项。  
  
 [!code-aspx-csharp[MenuScrollDownImage#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuScrollDownImage/CS/menuscrolldownimagecs.aspx#1)]
 [!code-aspx-vb[MenuScrollDownImage#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuScrollDownImage/VB/menuscrolldownimagevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollDownImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollDownText" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollUpImageUrl" />
      </Docs>
    </Member>
    <Member MemberName="SelectedItem">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.MenuItem SelectedItem { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.MenuItem SelectedItem" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.SelectedItem" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SelectedItem As MenuItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::MenuItem ^ SelectedItem { System::Web::UI::WebControls::MenuItem ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectedItem : System.Web.UI.WebControls.MenuItem" Usage="System.Web.UI.WebControls.Menu.SelectedItem" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.MenuItem</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取选定的菜单项。</summary>
        <value>表示选定菜单项的 <see cref="T:System.Web.UI.WebControls.MenuItem" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用 <xref:System.Web.UI.WebControls.Menu.SelectedItem%2A> 属性可以确定用户选择的菜单项。  
  
> [!NOTE]
>  作为一种快捷方式，还可以通过使用属性来直接确定选定菜单项的文本 <xref:System.Web.UI.WebControls.Menu.SelectedValue%2A> 。  
  
 当用户从控件中选择菜单项时 <xref:System.Web.UI.WebControls.Menu> ，将 <xref:System.Web.UI.WebControls.Menu.MenuItemClick> 引发事件，这允许您通过提供事件处理程序来执行自定义例程。  
  
   
  
## Examples  
 下面的代码示例演示如何使用 <xref:System.Web.UI.WebControls.Menu.SelectedItem%2A> 属性来确定控件中选定的菜单项 <xref:System.Web.UI.WebControls.Menu> 。  
  
 [!code-aspx-csharp[MenuSelectedItem#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuSelectedItem/CS/menuselecteditemcs.aspx#1)]
 [!code-aspx-vb[MenuSelectedItem#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuSelectedItem/VB/menuselecteditemvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.SelectedValue" />
        <altmember cref="E:System.Web.UI.WebControls.Menu.MenuItemClick" />
      </Docs>
    </Member>
    <Member MemberName="SelectedValue">
      <MemberSignature Language="C#" Value="public string SelectedValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SelectedValue" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.SelectedValue" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SelectedValue As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SelectedValue { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectedValue : string" Usage="System.Web.UI.WebControls.Menu.SelectedValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue("")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue("")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取选定菜单项的值。</summary>
        <value>选定菜单项的值。 默认值为 <see cref="F:System.String.Empty" />，指示当前未选择任何菜单项。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用 <xref:System.Web.UI.WebControls.Menu.SelectedValue%2A> 属性作为快捷键来确定选定菜单项的文本。 若要访问选定菜单项的其他属性，请使用 <xref:System.Web.UI.WebControls.Menu.SelectedItem%2A> 属性。  
  
   
  
## Examples  
 下面的代码示例演示如何使用 <xref:System.Web.UI.WebControls.Menu.SelectedValue%2A> 属性来确定控件中选定菜单项的文本 <xref:System.Web.UI.WebControls.Menu> 。  
  
 [!code-aspx-csharp[MenuSelectedItem#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuSelectedItem/CS/menuselecteditemcs.aspx#1)]
 [!code-aspx-vb[MenuSelectedItem#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuSelectedItem/VB/menuselecteditemvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.SelectedItem" />
        <altmember cref="E:System.Web.UI.WebControls.Menu.MenuItemClick" />
      </Docs>
    </Member>
    <Member MemberName="SetDesignModeState">
      <MemberSignature Language="C#" Value="protected override void SetDesignModeState (System.Collections.IDictionary data);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void SetDesignModeState(class System.Collections.IDictionary data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.SetDesignModeState(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub SetDesignModeState (data As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void SetDesignModeState(System::Collections::IDictionary ^ data);" />
      <MemberSignature Language="F#" Value="override this.SetDesignModeState : System.Collections.IDictionary -&gt; unit" Usage="menu.SetDesignModeState data" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="data"><see cref="T:System.Collections.IDictionary" />，包含用于显示控件的状态数据。</param>
        <summary>为 <see cref="T:System.Web.UI.WebControls.Menu" /> 控件设置设计时数据。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法重写 <xref:System.Web.UI.Control.SetDesignModeState%2A>。  
  
> [!NOTE]
>  此方法主要由控件开发人员用来扩展 <xref:System.Web.UI.WebControls.Menu> 控件。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetItemDataBound">
      <MemberSignature Language="C#" Value="protected void SetItemDataBound (System.Web.UI.WebControls.MenuItem node, bool dataBound);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SetItemDataBound(class System.Web.UI.WebControls.MenuItem node, bool dataBound) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.SetItemDataBound(System.Web.UI.WebControls.MenuItem,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub SetItemDataBound (node As MenuItem, dataBound As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void SetItemDataBound(System::Web::UI::WebControls::MenuItem ^ node, bool dataBound);" />
      <MemberSignature Language="F#" Value="member this.SetItemDataBound : System.Web.UI.WebControls.MenuItem * bool -&gt; unit" Usage="menu.SetItemDataBound (node, dataBound)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="System.Web.UI.WebControls.MenuItem" />
        <Parameter Name="dataBound" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="node">要设置的 <see cref="T:System.Web.UI.WebControls.MenuItem" />。</param>
        <param name="dataBound">若要将节点设置为被数据绑定，则为 <see langword="true" />；否则为 <see langword="false" />。</param>
        <summary>用指定的值设置指定的 <see cref="P:System.Web.UI.WebControls.MenuItem.DataBound" /> 对象的 <see cref="T:System.Web.UI.WebControls.MenuItem" /> 属性。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Menu.SetItemDataBound%2A>方法是派生类用于设置指定对象的属性的帮助器方法 <xref:System.Web.UI.WebControls.MenuItem.DataBound%2A> <xref:System.Web.UI.WebControls.MenuItem> 。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.Menu.SetItemDataItem(System.Web.UI.WebControls.MenuItem,System.Object)" />
        <altmember cref="M:System.Web.UI.WebControls.Menu.SetItemDataPath(System.Web.UI.WebControls.MenuItem,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="SetItemDataItem">
      <MemberSignature Language="C#" Value="protected void SetItemDataItem (System.Web.UI.WebControls.MenuItem node, object dataItem);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SetItemDataItem(class System.Web.UI.WebControls.MenuItem node, object dataItem) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.SetItemDataItem(System.Web.UI.WebControls.MenuItem,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub SetItemDataItem (node As MenuItem, dataItem As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void SetItemDataItem(System::Web::UI::WebControls::MenuItem ^ node, System::Object ^ dataItem);" />
      <MemberSignature Language="F#" Value="member this.SetItemDataItem : System.Web.UI.WebControls.MenuItem * obj -&gt; unit" Usage="menu.SetItemDataItem (node, dataItem)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="System.Web.UI.WebControls.MenuItem" />
        <Parameter Name="dataItem" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="node">要设置的 <see cref="T:System.Web.UI.WebControls.MenuItem" />。</param>
        <param name="dataItem"><see cref="T:System.Web.UI.WebControls.MenuItem" /> 的数据项。</param>
        <summary>用指定的值设置指定的 <see cref="P:System.Web.UI.WebControls.MenuItem.DataItem" /> 对象的 <see cref="T:System.Web.UI.WebControls.MenuItem" /> 属性。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Menu.SetItemDataItem%2A>方法是派生类用于设置指定对象的属性的帮助器方法 <xref:System.Web.UI.WebControls.MenuItem.DataItem%2A> <xref:System.Web.UI.WebControls.MenuItem> 。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.Menu.SetItemDataBound(System.Web.UI.WebControls.MenuItem,System.Boolean)" />
        <altmember cref="M:System.Web.UI.WebControls.Menu.SetItemDataPath(System.Web.UI.WebControls.MenuItem,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="SetItemDataPath">
      <MemberSignature Language="C#" Value="protected void SetItemDataPath (System.Web.UI.WebControls.MenuItem node, string dataPath);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SetItemDataPath(class System.Web.UI.WebControls.MenuItem node, string dataPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.SetItemDataPath(System.Web.UI.WebControls.MenuItem,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub SetItemDataPath (node As MenuItem, dataPath As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void SetItemDataPath(System::Web::UI::WebControls::MenuItem ^ node, System::String ^ dataPath);" />
      <MemberSignature Language="F#" Value="member this.SetItemDataPath : System.Web.UI.WebControls.MenuItem * string -&gt; unit" Usage="menu.SetItemDataPath (node, dataPath)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="System.Web.UI.WebControls.MenuItem" />
        <Parameter Name="dataPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="node">要设置的 <see cref="T:System.Web.UI.WebControls.MenuItem" />。</param>
        <param name="dataPath"><see cref="T:System.Web.UI.WebControls.MenuItem" /> 的数据路径。</param>
        <summary>用指定的值设置指定的 <see cref="P:System.Web.UI.WebControls.MenuItem.DataPath" /> 对象的 <see cref="T:System.Web.UI.WebControls.MenuItem" /> 属性。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Menu.SetItemDataPath%2A>方法是派生类用于设置指定对象的属性的帮助器方法 <xref:System.Web.UI.WebControls.MenuItem.DataPath%2A> <xref:System.Web.UI.WebControls.MenuItem> 。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.Menu.SetItemDataItem(System.Web.UI.WebControls.MenuItem,System.Object)" />
        <altmember cref="M:System.Web.UI.WebControls.Menu.SetItemDataPath(System.Web.UI.WebControls.MenuItem,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="SkipLinkText">
      <MemberSignature Language="C#" Value="public string SkipLinkText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SkipLinkText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.SkipLinkText" />
      <MemberSignature Language="VB.NET" Value="Public Property SkipLinkText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SkipLinkText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SkipLinkText : string with get, set" Usage="System.Web.UI.WebControls.Menu.SkipLinkText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Localizable(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Localizable(true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置屏幕读取器所读取的隐藏图像的替换文字，以提供跳过链接列表的功能。</summary>
        <value>屏幕读取器所读取的隐藏图像的替换文字，可提供跳过链接列表的功能。 默认值为空字符串 ("")，表示尚未设置此属性。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用 <xref:System.Web.UI.WebControls.Menu.SkipLinkText%2A> 属性指定屏幕阅读器读取的隐藏图像的替换文字，以提供跳过链接列表的功能。 指定的文本提供了辅助技术设备，其中包含可用于使控件更易于访问的隐藏跳过链接图像。  
  
 设置此属性后，可以使用设计器工具自动将此属性的值保存到资源文件中。 有关详细信息，请参阅 <xref:System.ComponentModel.LocalizableAttribute> 和 [全球化和本地化](https://docs.microsoft.com/previous-versions/aspnet/c6zyy3s9(v=vs.100))。  
  
 <xref:System.Web.UI.WebControls.Menu>控件提供 <xref:System.Web.UI.WebControls.Menu.SkipLinkText%2A> 属性作为一种方法，让屏幕阅读器跳过整个控件。 如果 <xref:System.Web.UI.WebControls.Menu.SkipLinkText%2A> 设置了属性，则会呈现一个带有替换文本的不可见图像，从而向用户提供跳转到控件末尾的选项。 屏幕阅读器读取备用文本，而图像只占用一个像素空间。 若要对页面的呈现进行像素精确的控制，请将 <xref:System.Web.UI.WebControls.Menu.SkipLinkText%2A> 属性设置为空字符串 ( "" ) ，并提供您自己的用于跳过菜单的机制。 <xref:System.Web.UI.WebControls.Menu.SkipLinkText%2A>默认情况下，属性设置为空字符串。  
  
   
  
## Examples  
 下面的代码示例演示如何使用 <xref:System.Web.UI.WebControls.Menu.SkipLinkText%2A> 属性指定屏幕阅读器读取的隐藏图像的替换文字，以提供跳过链接列表的功能。  
  
 [!code-aspx-csharp[MenuSkipLinkText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuSkipLinkText/CS/menuskiplinktextcs.aspx#1)]
 [!code-aspx-vb[MenuSkipLinkText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuSkipLinkText/VB/menuskiplinktextvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicPopOutImageTextFormatString" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollDownText" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollUpText" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticPopOutImageTextFormatString" />
      </Docs>
    </Member>
    <Member MemberName="StaticBottomSeparatorImageUrl">
      <MemberSignature Language="C#" Value="public string StaticBottomSeparatorImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StaticBottomSeparatorImageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.StaticBottomSeparatorImageUrl" />
      <MemberSignature Language="VB.NET" Value="Public Property StaticBottomSeparatorImageUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ StaticBottomSeparatorImageUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.StaticBottomSeparatorImageUrl : string with get, set" Usage="System.Web.UI.WebControls.Menu.StaticBottomSeparatorImageUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue("")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue("")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName Language="C#">[System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.UrlProperty]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.UrlProperty&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置图像的 URL，该图像在各静态菜单项底部显示为分隔符。</summary>
        <value>图像的 URL，该图像在各静态菜单项底部显示为分隔符。 默认值为空字符串 ("")，指示尚未设置此属性。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用 <xref:System.Web.UI.WebControls.Menu.StaticBottomSeparatorImageUrl%2A> 属性指定要在每个静态菜单项底部显示的自定义图像，该图像作为菜单项之间的分隔符。  
  
> [!NOTE]
>  作为替代方法，还可以通过设置属性来显示每个静态菜单项顶部的分隔符图像 <xref:System.Web.UI.WebControls.Menu.StaticTopSeparatorImageUrl%2A> 。  
  
   
  
## Examples  
 下面的代码示例演示如何使用 <xref:System.Web.UI.WebControls.Menu.StaticBottomSeparatorImageUrl%2A> 属性指定要显示在每个静态菜单项底部的分隔符图像。  
  
 [!code-aspx-csharp[MenuStaticBottomSeparatorImageUrl#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuStaticBottomSeparatorImageUrl/CS/menustaticbottomseparatorimageurlcs.aspx#1)]
 [!code-aspx-vb[MenuStaticBottomSeparatorImageUrl#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuStaticBottomSeparatorImageUrl/VB/menustaticbottomseparatorimageurlvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicBottomSeparatorImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicTopSeparatorImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollDownImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollDownText" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollUpImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollUpText" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticTopSeparatorImageUrl" />
      </Docs>
    </Member>
    <Member MemberName="StaticDisplayLevels">
      <MemberSignature Language="C#" Value="public int StaticDisplayLevels { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 StaticDisplayLevels" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.StaticDisplayLevels" />
      <MemberSignature Language="VB.NET" Value="Public Property StaticDisplayLevels As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int StaticDisplayLevels { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.StaticDisplayLevels : int with get, set" Usage="System.Web.UI.WebControls.Menu.StaticDisplayLevels" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(1)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.Themeable(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.Themeable(true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置静态菜单的菜单显示级别数。</summary>
        <value>静态菜单的菜单显示级别数。 默认值为 1。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用 <xref:System.Web.UI.WebControls.Menu.StaticDisplayLevels%2A> 属性指定要在静态菜单中显示的菜单级别数。 所有低于指定值的菜单级别都显示在动态菜单中。 还可以通过设置属性来限制动态菜单中显示的菜单级别数 <xref:System.Web.UI.WebControls.Menu.MaximumDynamicDisplayLevels%2A> 。  
  
   
  
## Examples  
 下面的代码示例演示如何使用 <xref:System.Web.UI.WebControls.Menu.StaticDisplayLevels%2A> 属性在静态菜单中显示前两个菜单级别。  
  
 [!code-aspx-csharp[MenuStaticDisplayLevels#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuStaticDisplayLevels/CS/menustaticdisplaylevelscs.aspx#1)]
 [!code-aspx-vb[MenuStaticDisplayLevels#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuStaticDisplayLevels/VB/menustaticdisplaylevelsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">指定的值小于 1。</exception>
        <altmember cref="P:System.Web.UI.WebControls.Menu.MaximumDynamicDisplayLevels" />
      </Docs>
    </Member>
    <Member MemberName="StaticEnableDefaultPopOutImage">
      <MemberSignature Language="C#" Value="public bool StaticEnableDefaultPopOutImage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool StaticEnableDefaultPopOutImage" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.StaticEnableDefaultPopOutImage" />
      <MemberSignature Language="VB.NET" Value="Public Property StaticEnableDefaultPopOutImage As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool StaticEnableDefaultPopOutImage { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.StaticEnableDefaultPopOutImage : bool with get, set" Usage="System.Web.UI.WebControls.Menu.StaticEnableDefaultPopOutImage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示是否显示内置图像，其中内置图像指示静态菜单项包含子菜单。</summary>
        <value>如果具有子菜单的静态菜单项显示内置图像，则为 <see langword="true" />；否则为 <see langword="false" />。 默认值为 <see langword="true" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 当静态菜单项包含子菜单时，可能会显示一个图像，指示用户可以展开菜单。 可以通过两种方法来显示此图像：  
  
-   将 <xref:System.Web.UI.WebControls.Menu.StaticEnableDefaultPopOutImage%2A> 属性设置为 `true` 以使用内置映像 (默认) 。  
  
-   设置 <xref:System.Web.UI.WebControls.Menu.StaticPopOutImageUrl%2A> 属性以指定自定义映像。  
  
 如果 <xref:System.Web.UI.WebControls.Menu.StaticPopOutImageUrl%2A> 设置了属性，则无论属性的值如何，该图像都将覆盖内置图像 <xref:System.Web.UI.WebControls.Menu.StaticEnableDefaultPopOutImage%2A> 。  
  
> [!NOTE]
>  如果 <xref:System.Web.UI.WebControls.Menu.StaticPopOutImageUrl%2A> 未设置属性，并且 <xref:System.Web.UI.WebControls.Menu.StaticEnableDefaultPopOutImage%2A> 属性设置为 `false` ，则不会显示图像。  
  
 可以通过设置属性来指定图像的替换文字 <xref:System.Web.UI.WebControls.Menu.StaticPopOutImageTextFormatString%2A> 。  
  
   
  
## Examples  
 下面的代码示例演示如何使用 <xref:System.Web.UI.WebControls.Menu.StaticEnableDefaultPopOutImage%2A> 属性隐藏指示静态菜单项包含子菜单的图像。 <xref:System.Web.UI.WebControls.Menu.StaticPopOutImageUrl%2A>还必须将属性设置为空字符串 ( "" ) ，才能隐藏图像。  
  
 [!code-aspx-csharp[MenuStaticEnableDefaultPopOutImage#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuStaticEnableDefaultPopOutImage/CS/menustaticenabledefaultpopoutimagecs.aspx#1)]
 [!code-aspx-vb[MenuStaticEnableDefaultPopOutImage#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuStaticEnableDefaultPopOutImage/VB/menustaticenabledefaultpopoutimagevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicPopOutImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicPopOutImageTextFormatString" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicEnableDefaultPopOutImage" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticPopOutImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticPopOutImageTextFormatString" />
      </Docs>
    </Member>
    <Member MemberName="StaticHoverStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.Style StaticHoverStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.Style StaticHoverStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.StaticHoverStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property StaticHoverStyle As Style" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::Style ^ StaticHoverStyle { System::Web::UI::WebControls::Style ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.StaticHoverStyle : System.Web.UI.WebControls.Style" Usage="System.Web.UI.WebControls.Menu.StaticHoverStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(null)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(null)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.NotifyParentProperty(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.NotifyParentProperty(true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Style</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取对 <see cref="T:System.Web.UI.WebControls.Style" /> 对象的引用，使用该对象可以设置鼠标指针置于静态菜单项上时的菜单项外观。</summary>
        <value>对 <see cref="T:System.Web.UI.WebControls.Style" /> 对象的引用，该对象表示鼠标指针置于静态菜单项上时的菜单项样式。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Menu.StaticHoverStyle%2A>当鼠标指针置于静态菜单项上时，使用该属性控制静态菜单项的外观。 此属性是只读的;但是，您可以设置 <xref:System.Web.UI.WebControls.Style> 它返回的对象的属性。 可以在窗体中以声明方式设置这些属性 `Property-Subproperty` ，其中 `Subproperty` 是对象的属性 <xref:System.Web.UI.WebControls.Style> (例如 `StaticHoverStyle-ForeColor`) 。 还可以以编程方式设置属性 `Property.Subproperty` ， (例如 `StaticHoverStyle.ForeColor`) 。  
  
 静态菜单项的样式属性按以下顺序应用：  
  
1.  <xref:System.Web.UI.WebControls.Menu.StaticMenuStyle%2A>.  
  
2.  <xref:System.Web.UI.WebControls.Menu.StaticMenuItemStyle%2A>. 如果 <xref:System.Web.UI.WebControls.Menu.LevelMenuItemStyles%2A> 集合或 <xref:System.Web.UI.WebControls.Menu.LevelSubMenuStyles%2A> 集合已定义，此时将应用该集合或集合，并重写其他菜单项样式属性。  
  
3.  <xref:System.Web.UI.WebControls.Menu.StaticSelectedStyle%2A>. 如果 <xref:System.Web.UI.WebControls.Menu.LevelSelectedStyles%2A> 定义了集合，则此时将应用该集合，并覆盖其他菜单项样式属性。  
  
4.  <xref:System.Web.UI.WebControls.Menu.StaticHoverStyle%2A>.  
  
   
  
## Examples  
 下面的代码示例演示了 <xref:System.Web.UI.WebControls.Menu.StaticHoverStyle%2A> 当用户将鼠标指针置于静态菜单项上时，如何使用该属性将其背景色更改为浅天蓝色。  
  
 [!code-aspx-csharp[MenuStaticHoverStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuStaticHoverStyle/CS/menustatichoverstylecs.aspx#1)]
 [!code-aspx-vb[MenuStaticHoverStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuStaticHoverStyle/VB/menustatichoverstylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicHoverStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicMenuItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicMenuStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicSelectedStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelMenuItemStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelSelectedStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelSubMenuStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticMenuItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticMenuStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticSelectedStyle" />
      </Docs>
    </Member>
    <Member MemberName="StaticItemFormatString">
      <MemberSignature Language="C#" Value="public string StaticItemFormatString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StaticItemFormatString" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.StaticItemFormatString" />
      <MemberSignature Language="VB.NET" Value="Public Property StaticItemFormatString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ StaticItemFormatString { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.StaticItemFormatString : string with get, set" Usage="System.Web.UI.WebControls.Menu.StaticItemFormatString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue("")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue("")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置与所有静态显示的菜单项一起显示的附加文本。</summary>
        <value>与所有菜单项一起显示的附加文本或字符。 此属性的默认值为 " {0} ."。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此属性可用于插入文本，以便设置菜单中静态菜单项的格式。 这对于移动设备特别有用。 <xref:System.Web.UI.WebControls.Menu>控件支持用于显示静态和动态菜单项的模板，但在移动设备上忽略模板。 此属性允许你添加字符或文本，并为移动设备和桌面设备的菜单项应用格式设置，而无需使用模板。  
  
> [!NOTE]
>  若要在使用此属性时实现一致的格式设置， <xref:System.Web.UI.WebControls.Menu.DynamicItemFormatString%2A> 如果要使静态菜单项和动态菜单项之间的格式相同，还应该设置属性。  
  
 如果同时应用了模板格式设置和此属性，则将忽略移动设备的模板格式设置。  
  
   
  
## Examples  
 下面的代码示例演示如何使用 <xref:System.Web.UI.WebControls.Menu.StaticItemFormatString%2A> 和 <xref:System.Web.UI.WebControls.Menu.DynamicItemFormatString%2A> 属性将文本添加到每个菜单项。  
  
 [!code-aspx-csharp[MenuItemFormatString#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuItemFormatString/CS/menuitemformatstringcs.aspx#1)]
 [!code-aspx-vb[MenuItemFormatString#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuItemFormatString/VB/menuitemformatstringvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicItemFormatString" />
      </Docs>
    </Member>
    <Member MemberName="StaticItemTemplate">
      <MemberSignature Language="C#" Value="public System.Web.UI.ITemplate StaticItemTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate StaticItemTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.StaticItemTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Property StaticItemTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::ITemplate ^ StaticItemTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberSignature Language="F#" Value="member this.StaticItemTemplate : System.Web.UI.ITemplate with get, set" Usage="System.Web.UI.WebControls.Menu.StaticItemTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(null)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(null)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.MenuItemTemplateContainer))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.MenuItemTemplateContainer))&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置包含静态菜单自定义呈现内容的模板。</summary>
        <value><see cref="T:System.Web.UI.ITemplate" />，包含静态菜单的自定义内容。 默认值为 null，表示未设置此属性。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 您可以使用属性为静态菜单项定义自己的用户界面 (UI) ，而不是使用静态菜单的内置呈现方式 <xref:System.Web.UI.WebControls.Menu.StaticItemTemplate%2A> 。 若要为静态菜单项指定自定义模板，请先 `<StaticTemplate>` 在控件的开始和结束标记之间放置标记 <xref:System.Web.UI.WebControls.Menu> 。 然后，你可以在开始标记和结束标记之间列出模板的内容 `<StaticTemplate>` 。 通过使用属性，可以进一步控制静态菜单的样式 <xref:System.Web.UI.WebControls.Menu.StaticMenuStyle%2A> 。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StaticMenuItemStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.MenuItemStyle StaticMenuItemStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.MenuItemStyle StaticMenuItemStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.StaticMenuItemStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property StaticMenuItemStyle As MenuItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::MenuItemStyle ^ StaticMenuItemStyle { System::Web::UI::WebControls::MenuItemStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.StaticMenuItemStyle : System.Web.UI.WebControls.MenuItemStyle" Usage="System.Web.UI.WebControls.Menu.StaticMenuItemStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(null)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(null)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.NotifyParentProperty(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.NotifyParentProperty(true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.MenuItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取对 <see cref="T:System.Web.UI.WebControls.MenuItemStyle" /> 对象的引用，使用该对象可以设置静态菜单中的菜单项的外观。</summary>
        <value>对 <see cref="T:System.Web.UI.WebControls.MenuItemStyle" /> 的引用，该对象表示静态菜单中的菜单项的样式。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用 <xref:System.Web.UI.WebControls.Menu.StaticMenuItemStyle%2A> 属性可控制静态菜单中菜单项的外观。 此属性是只读的;但是，您可以设置 <xref:System.Web.UI.WebControls.MenuItemStyle> 它返回的对象的属性。 可以在窗体中以声明方式设置这些属性 `Property-Subproperty` ，其中 `Subproperty` 是对象的属性 <xref:System.Web.UI.WebControls.MenuItemStyle> (例如 `StaticMenuItemStyle-ForeColor`) 。 还可以以编程方式设置属性 `Property.Subproperty` ， (例如 `StaticMenuItemStyle.ForeColor`) 。  
  
 静态菜单项的样式属性按以下顺序应用：  
  
1.  <xref:System.Web.UI.WebControls.Menu.StaticMenuStyle%2A>.  
  
2.  <xref:System.Web.UI.WebControls.Menu.StaticMenuItemStyle%2A>. 如果 <xref:System.Web.UI.WebControls.Menu.LevelMenuItemStyles%2A> 集合或 <xref:System.Web.UI.WebControls.Menu.LevelSubMenuStyles%2A> 集合已定义，此时将应用该集合或集合，并重写其他菜单项样式属性。  
  
3.  <xref:System.Web.UI.WebControls.Menu.StaticSelectedStyle%2A>. 如果 <xref:System.Web.UI.WebControls.Menu.LevelSelectedStyles%2A> 定义了集合，则此时将应用该集合，并覆盖其他菜单项样式属性。  
  
4.  <xref:System.Web.UI.WebControls.Menu.StaticHoverStyle%2A>.  
  
   
  
## Examples  
 下面的代码示例演示如何使用 <xref:System.Web.UI.WebControls.Menu.StaticMenuItemStyle%2A> 属性为静态菜单中的菜单项指定浅天蓝色背景色。  
  
 [!code-aspx-csharp[MenuStaticMenuItemStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuStaticMenuItemStyle/CS/menustaticmenuitemstylecs.aspx#1)]
 [!code-aspx-vb[MenuStaticMenuItemStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuStaticMenuItemStyle/VB/menustaticmenuitemstylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicHoverStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicMenuItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicMenuStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicSelectedStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelMenuItemStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelSelectedStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelSubMenuStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticHoverStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticMenuStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticSelectedStyle" />
      </Docs>
    </Member>
    <Member MemberName="StaticMenuStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.SubMenuStyle StaticMenuStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.SubMenuStyle StaticMenuStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.StaticMenuStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property StaticMenuStyle As SubMenuStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::SubMenuStyle ^ StaticMenuStyle { System::Web::UI::WebControls::SubMenuStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.StaticMenuStyle : System.Web.UI.WebControls.SubMenuStyle" Usage="System.Web.UI.WebControls.Menu.StaticMenuStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(null)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(null)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.NotifyParentProperty(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.NotifyParentProperty(true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SubMenuStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取对 <see cref="T:System.Web.UI.WebControls.MenuItemStyle" /> 对象的引用，使用该对象可以设置静态菜单的外观。</summary>
        <value>对 <see cref="T:System.Web.UI.WebControls.MenuItemStyle" /> 对象的引用，该对象表示静态菜单的样式。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用 <xref:System.Web.UI.WebControls.Menu.StaticMenuStyle%2A> 属性可控制静态菜单的外观。 此属性是只读的;但是，您可以设置 <xref:System.Web.UI.WebControls.MenuItemStyle> 它返回的对象的属性。 可以在窗体中以声明方式设置这些属性 `Property-Subproperty` ，其中 `Subproperty` 是对象的属性 <xref:System.Web.UI.WebControls.MenuItemStyle> (例如 `StaticMenuStyle-ForeColor`) 。 还可以以编程方式设置属性 `Property.Subproperty` ， (例如 `StaticMenuStyle.ForeColor`) 。  
  
 静态菜单项的样式属性按以下顺序应用：  
  
1.  <xref:System.Web.UI.WebControls.Menu.StaticMenuStyle%2A>.  
  
2.  <xref:System.Web.UI.WebControls.Menu.StaticMenuItemStyle%2A>. 如果 <xref:System.Web.UI.WebControls.Menu.LevelMenuItemStyles%2A> 集合或 <xref:System.Web.UI.WebControls.Menu.LevelSubMenuStyles%2A> 集合已定义，此时将应用该集合或集合，并重写其他菜单项样式属性。  
  
3.  <xref:System.Web.UI.WebControls.Menu.StaticSelectedStyle%2A>. 如果 <xref:System.Web.UI.WebControls.Menu.LevelSelectedStyles%2A> 定义了集合，则此时将应用该集合，并覆盖其他菜单项样式属性。  
  
4.  <xref:System.Web.UI.WebControls.Menu.StaticHoverStyle%2A>.  
  
   
  
## Examples  
 下面的代码示例演示如何使用 <xref:System.Web.UI.WebControls.Menu.StaticMenuStyle%2A> 属性为整个静态菜单指定浅天蓝色背景色。  
  
 [!code-aspx-csharp[MenuStaticMenuStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuStaticMenuStyle/CS/menustaticmenustylecs.aspx#1)]
 [!code-aspx-vb[MenuStaticMenuStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuStaticMenuStyle/VB/menustaticmenustylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicHoverStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicMenuItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicMenuStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicSelectedStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelMenuItemStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelSelectedStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelSubMenuStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticHoverStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticMenuItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticSelectedStyle" />
      </Docs>
    </Member>
    <Member MemberName="StaticPopOutImageTextFormatString">
      <MemberSignature Language="C#" Value="public string StaticPopOutImageTextFormatString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StaticPopOutImageTextFormatString" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.StaticPopOutImageTextFormatString" />
      <MemberSignature Language="VB.NET" Value="Public Property StaticPopOutImageTextFormatString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ StaticPopOutImageTextFormatString { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.StaticPopOutImageTextFormatString : string with get, set" Usage="System.Web.UI.WebControls.Menu.StaticPopOutImageTextFormatString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置用于指示静态菜单项包含子菜单的弹出图像的替换文字。</summary>
        <value>弹出图像的替换文字。 默认值为空字符串 ("")，表示尚未设置此属性。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 当静态菜单项包含子菜单时，可能会显示一个图像，指示用户可以展开菜单。 使用 <xref:System.Web.UI.WebControls.Menu.StaticPopOutImageTextFormatString%2A> 属性指定此图像的替换文字。  
  
 可以通过两种方法来显示图像：  
  
-   将 <xref:System.Web.UI.WebControls.Menu.StaticEnableDefaultPopOutImage%2A> 属性设置为 `true` 以使用内置映像 (默认) 。  
  
-   设置 <xref:System.Web.UI.WebControls.Menu.StaticPopOutImageUrl%2A> 属性以指定自定义映像。  
  
> [!NOTE]
>  此属性适用于内置映像和自定义映像。  
  
   
  
## Examples  
 下面的代码示例演示如何使用 <xref:System.Web.UI.WebControls.Menu.StaticPopOutImageTextFormatString%2A> 属性为用于指示静态菜单项包含子菜单的图像指定替换文字。 当用户将鼠标指针置于图像上时，此文本将显示为工具提示。  
  
 [!code-aspx-csharp[MenuStaticPopoutImageText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuStaticPopoutImageText/CS/menustaticpopoutimagetextcs.aspx#1)]
 [!code-aspx-vb[MenuStaticPopoutImageText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuStaticPopoutImageText/VB/menustaticpopoutimagetextvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicEnableDefaultPopOutImage" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicPopOutImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicPopOutImageTextFormatString" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticEnableDefaultPopOutImage" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticPopOutImageUrl" />
      </Docs>
    </Member>
    <Member MemberName="StaticPopOutImageUrl">
      <MemberSignature Language="C#" Value="public string StaticPopOutImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StaticPopOutImageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.StaticPopOutImageUrl" />
      <MemberSignature Language="VB.NET" Value="Public Property StaticPopOutImageUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ StaticPopOutImageUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.StaticPopOutImageUrl : string with get, set" Usage="System.Web.UI.WebControls.Menu.StaticPopOutImageUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue("")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue("")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName Language="C#">[System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.UrlProperty]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.UrlProperty&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置显示来指示静态菜单项包含子菜单的图像的 URL。</summary>
        <value>显示来指示静态菜单项包含子菜单的图像的 URL。 默认值为空字符串 ("")，指示尚未设置此属性。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 当静态菜单项包含子菜单时，可能会显示一个图像，指示用户可以展开菜单。 可以通过两种方法来显示此图像：  
  
-   将 <xref:System.Web.UI.WebControls.Menu.StaticEnableDefaultPopOutImage%2A> 属性设置为 `true` 以使用内置映像 (默认) 。  
  
-   设置 <xref:System.Web.UI.WebControls.Menu.StaticPopOutImageUrl%2A> 属性以指定自定义映像。  
  
 如果 <xref:System.Web.UI.WebControls.Menu.StaticPopOutImageUrl%2A> 设置了属性，则无论属性的值如何，该图像都将覆盖内置图像 <xref:System.Web.UI.WebControls.Menu.StaticEnableDefaultPopOutImage%2A> 。  
  
 如果 <xref:System.Web.UI.WebControls.Menu.StaticPopOutImageUrl%2A> 未设置属性，并且 <xref:System.Web.UI.WebControls.Menu.StaticEnableDefaultPopOutImage%2A> 属性设置为 `false` ，则不会显示图像。  
  
> [!NOTE]
>  设置此属性时，请使用斜杠标记 (/) 而不是反斜杠 (\\) 。 如果在路径中使用反斜杠，则不会显示指定的图像。  
  
 可以通过设置属性来指定图像的替换文字 <xref:System.Web.UI.WebControls.Menu.StaticPopOutImageTextFormatString%2A> 。  
  
   
  
## Examples  
 下面的代码示例演示如何使用 <xref:System.Web.UI.WebControls.Menu.StaticPopOutImageUrl%2A> 属性来指定在菜单项包含子菜单时要在静态菜单项中显示的自定义图像。  
  
 [!code-aspx-csharp[MenuStaticPopoutImageText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuStaticPopoutImageText/CS/menustaticpopoutimagetextcs.aspx#1)]
 [!code-aspx-vb[MenuStaticPopoutImageText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuStaticPopoutImageText/VB/menustaticpopoutimagetextvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicEnableDefaultPopOutImage" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicPopOutImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicPopOutImageTextFormatString" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticEnableDefaultPopOutImage" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticPopOutImageTextFormatString" />
      </Docs>
    </Member>
    <Member MemberName="StaticSelectedStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.MenuItemStyle StaticSelectedStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.MenuItemStyle StaticSelectedStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.StaticSelectedStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property StaticSelectedStyle As MenuItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::MenuItemStyle ^ StaticSelectedStyle { System::Web::UI::WebControls::MenuItemStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.StaticSelectedStyle : System.Web.UI.WebControls.MenuItemStyle" Usage="System.Web.UI.WebControls.Menu.StaticSelectedStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(null)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(null)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.NotifyParentProperty(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.NotifyParentProperty(true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.MenuItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取对 <see cref="T:System.Web.UI.WebControls.MenuItemStyle" /> 对象的引用，使用该对象可以设置用户在静态菜单中选择的菜单项的外观。</summary>
        <value>对 <see cref="T:System.Web.UI.WebControls.MenuItemStyle" /> 的引用，该对象表示静态菜单中的选定菜单项的样式。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用 <xref:System.Web.UI.WebControls.Menu.StaticSelectedStyle%2A> 属性可以控制用户在静态菜单中选择的菜单项的外观。 此属性是只读的;但是，您可以设置 <xref:System.Web.UI.WebControls.MenuItemStyle> 它返回的对象的属性。 可以在窗体中以声明方式设置这些属性 `Property-Subproperty` ，其中 `Subproperty` 是对象的属性 <xref:System.Web.UI.WebControls.MenuItemStyle> (例如 `StaticSelectedStyle-ForeColor`) 。 还可以以编程方式设置属性 `Property.Subproperty` ， (例如 `StaticSelectedStyle.ForeColor`) 。  
  
 静态菜单项的样式属性按以下顺序应用：  
  
1.  <xref:System.Web.UI.WebControls.Menu.StaticMenuStyle%2A>.  
  
2.  <xref:System.Web.UI.WebControls.Menu.StaticMenuItemStyle%2A>. 如果 <xref:System.Web.UI.WebControls.Menu.LevelMenuItemStyles%2A> 集合或 <xref:System.Web.UI.WebControls.Menu.LevelSubMenuStyles%2A> 集合已定义，此时将应用该集合或集合，并重写其他菜单项样式属性。  
  
3.  <xref:System.Web.UI.WebControls.Menu.StaticSelectedStyle%2A>. 如果 <xref:System.Web.UI.WebControls.Menu.LevelSelectedStyles%2A> 定义了集合，则此时将应用该集合，并覆盖其他菜单项样式属性。  
  
4.  <xref:System.Web.UI.WebControls.Menu.StaticHoverStyle%2A>.  
  
> [!IMPORTANT]
>  重大更改。  
  
 在 .NET Framework 4.0 之前，在 `<asp:Menu>` .aspx 文件中定义控件时，用户可以设置属性， `StaticSelectedStyle-CssClass` 以设置所选控件项的 CSS 类。 例如，用户可能具有如下所示的菜单控件：  
  
```  
<asp:Menu ID="Menu1" runat="server" Orientation="Horizontal"   
    StaticMenuItemStyle-CssClass="MenuItem"  
    StaticSelectedStyle-CssClass="MenuItem_selected"  
    OnMenuItemClick="Menu1_MenuItemClick" Style="margin-bottom: 0px" EnableTheming="True" ClientIDMode="Static">  
    <Items>  
        <asp:MenuItem Text="item_0" Value="0" Selected="True"></asp:MenuItem>  
        <asp:MenuItem Text="itme_1" Value="1"></asp:MenuItem>  
    </Items>  
</asp:Menu>  
```  
  
 并且菜单控件呈现为：  
  
```  
<div id="Menu1" style="margin-bottom: 0px">  
    <ul class="level1">  
        <li><a class="level1 MenuItem MenuItem_selected " href="#" onclick="__doPostBack(&#39;Menu1&#39;,&#39;0&#39;)">item_0</a></li>  
        <li><a class="level1 MenuItem" href="#" onclick="__doPostBack(&#39;Menu1&#39;,&#39;1&#39;)">itme_1</a></li>  
    </ul>  
</div>  
```  
  
 但是，在 .NET Framework 4.0 及更高版本中，所选菜单项始终设置为 `selected` CSS 类，而不是由指定的类 `StaticSelectedStyle-CssClass` 。 因此，上述 ASP.NET 代码将改为：  
  
```  
<div id="Menu1" style="margin-bottom: 0px">  
    <ul class="level1">  
        <li><a class="level1 MenuItem selected " href="#" onclick="__doPostBack(&#39;Menu1&#39;,&#39;0&#39;)">item_0</a></li>  
        <li><a class="level1 MenuItem" href="#" onclick="__doPostBack(&#39;Menu1&#39;,&#39;1&#39;)">itme_1</a></li>  
    </ul>  
</div>  
  
```  
  
   
  
## Examples  
 下面的代码示例演示如何使用 <xref:System.Web.UI.WebControls.Menu.StaticSelectedStyle%2A> 属性为所选静态菜单项指定浅蓝色背景色。  
  
 [!code-aspx-csharp[MenuStaticSelectedStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuStaticSelectedStyle/CS/menustaticselectedstylecs.aspx#1)]
 [!code-aspx-vb[MenuStaticSelectedStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuStaticSelectedStyle/VB/menustaticselectedstylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicHoverStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicMenuItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicMenuStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicSelectedStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelMenuItemStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelSelectedStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelSubMenuStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticHoverStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticMenuItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticMenuStyle" />
      </Docs>
    </Member>
    <Member MemberName="StaticSubMenuIndent">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.Unit StaticSubMenuIndent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.Unit StaticSubMenuIndent" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.StaticSubMenuIndent" />
      <MemberSignature Language="VB.NET" Value="Public Property StaticSubMenuIndent As Unit" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::Unit StaticSubMenuIndent { System::Web::UI::WebControls::Unit get(); void set(System::Web::UI::WebControls::Unit value); };" />
      <MemberSignature Language="F#" Value="member this.StaticSubMenuIndent : System.Web.UI.WebControls.Unit with get, set" Usage="System.Web.UI.WebControls.Menu.StaticSubMenuIndent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(typeof(System.Web.UI.WebControls.Unit), "16px")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(typeof(System.Web.UI.WebControls.Unit), "16px")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.Themeable(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.Themeable(true)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(typeof(System.Web.UI.WebControls.Unit), "")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(typeof(System.Web.UI.WebControls.Unit), "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Unit</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置静态菜单中子菜单的缩进间距（以像素为单位）。</summary>
        <value><see cref="T:System.Web.UI.WebControls.Unit" />，表示静态菜单中子菜单的缩进间距（以像素为单位）。 默认值为 0。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 当静态菜单显示多个菜单级别时 (如果将 <xref:System.Web.UI.WebControls.Menu.StaticDisplayLevels%2A> 属性设置为大于 1) 的值，请使用 <xref:System.Web.UI.WebControls.Menu.StaticSubMenuIndent%2A> 属性来指定在静态菜单中缩进子菜单项的像素数。  
  
   
  
## Examples  
 下面的代码示例演示如何使用 <xref:System.Web.UI.WebControls.Menu.StaticSubMenuIndent%2A> 属性将静态菜单中的子菜单项按10个像素缩进。  
  
 [!code-aspx-csharp[MenuStaticSubMenuIndent#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuStaticSubMenuIndent/CS/menustaticsubmenuindentcs.aspx#1)]
 [!code-aspx-vb[MenuStaticSubMenuIndent#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuStaticSubMenuIndent/VB/menustaticsubmenuindentvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">所选 <see cref="T:System.Web.UI.WebControls.Unit" /> 的值小于 0。</exception>
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticDisplayLevels" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicHorizontalOffset" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicVerticalOffset" />
      </Docs>
    </Member>
    <Member MemberName="StaticTopSeparatorImageUrl">
      <MemberSignature Language="C#" Value="public string StaticTopSeparatorImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StaticTopSeparatorImageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.StaticTopSeparatorImageUrl" />
      <MemberSignature Language="VB.NET" Value="Public Property StaticTopSeparatorImageUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ StaticTopSeparatorImageUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.StaticTopSeparatorImageUrl : string with get, set" Usage="System.Web.UI.WebControls.Menu.StaticTopSeparatorImageUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue("")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue("")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName Language="C#">[System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.UrlProperty]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.UrlProperty&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置图像的 URL，该图像在各静态菜单项顶部显示为分隔符。</summary>
        <value>图像的 URL，该图像在各静态菜单项顶部显示为分隔符。 默认值为空字符串 ("")，指示尚未设置此属性。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用 <xref:System.Web.UI.WebControls.Menu.StaticTopSeparatorImageUrl%2A> 属性指定要在每个静态菜单项顶部显示的自定义图像，该图像作为菜单项之间的分隔符。  
  
> [!NOTE]
>  作为替代方法，还可以通过设置属性来显示每个静态菜单项底部的分隔符图像 <xref:System.Web.UI.WebControls.Menu.StaticBottomSeparatorImageUrl%2A> 。  
  
   
  
## Examples  
 下面的代码示例演示如何使用 <xref:System.Web.UI.WebControls.Menu.StaticTopSeparatorImageUrl%2A> 属性指定要在每个静态菜单项顶部显示的分隔符图像。  
  
 [!code-aspx-csharp[MenuStaticTopSeparatorImageUrl#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuStaticTopSeparatorImageUrl/CS/menustatictopseparatorimageurlcs.aspx#1)]
 [!code-aspx-vb[MenuStaticTopSeparatorImageUrl#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuStaticTopSeparatorImageUrl/VB/menustatictopseparatorimageurlvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicBottomSeparatorImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicTopSeparatorImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollDownImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollDownText" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollUpImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollUpText" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticBottomSeparatorImageUrl" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IPostBackEventHandler.RaisePostBackEvent">
      <MemberSignature Language="C#" Value="void IPostBackEventHandler.RaisePostBackEvent (string eventArgument);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(string eventArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Sub RaisePostBackEvent (eventArgument As String) Implements IPostBackEventHandler.RaisePostBackEvent" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System::String ^ eventArgument) = System::Web::UI::IPostBackEventHandler::RaisePostBackEvent;" />
      <MemberSignature Language="F#" Value="abstract member System.Web.UI.IPostBackEventHandler.RaisePostBackEvent : string -&gt; unit&#xA;override this.System.Web.UI.IPostBackEventHandler.RaisePostBackEvent : string -&gt; unit" Usage="menu.System.Web.UI.IPostBackEventHandler.RaisePostBackEvent eventArgument" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventArgument"><see cref="T:System.String" />，表示传递给事件处理程序的事件参数。</param>
        <summary>处理窗体发送到服务器时引发的事件。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TagKey">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.HtmlTextWriterTag TagKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.HtmlTextWriterTag TagKey" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.TagKey" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property TagKey As HtmlTextWriterTag" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Web::UI::HtmlTextWriterTag TagKey { System::Web::UI::HtmlTextWriterTag get(); };" />
      <MemberSignature Language="F#" Value="member this.TagKey : System.Web.UI.HtmlTextWriterTag" Usage="System.Web.UI.WebControls.Menu.TagKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.HtmlTextWriterTag</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取对应于 <see cref="T:System.Web.UI.HtmlTextWriterTag" /> 控件的 <see cref="T:System.Web.UI.WebControls.Menu" /> 值。 此属性主要由控件开发人员使用。</summary>
        <value>始终返回 <see langword="HtmlTextWriterTag.Table" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用 <xref:System.Web.UI.WebControls.Menu.TagKey%2A> 属性可确定 <xref:System.Web.UI.HtmlTextWriterTag> 与控件相关联的值 <xref:System.Web.UI.WebControls.Menu> 。 此属性主要由控件开发人员使用。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.HtmlTextWriterTag" />
      </Docs>
    </Member>
    <Member MemberName="Target">
      <MemberSignature Language="C#" Value="public string Target { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Target" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.Target" />
      <MemberSignature Language="VB.NET" Value="Public Property Target As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Target { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Target : string with get, set" Usage="System.Web.UI.WebControls.Menu.Target" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue("")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue("")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置用来显示菜单项的关联网页内容的目标窗口或框架。</summary>
        <value>显示所链接的网页内容的目标窗口或框架。 默认值为空字符串 ("")，该值刷新具有焦点的窗口或框架。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用 " <xref:System.Web.UI.WebControls.Menu.Target%2A> 属性" 指定在单击菜单项时要在其中显示其链接到菜单项的 Web 内容的窗口或框架。 值必须以 A 到 Z 范围内的字母（不区分大小写）打头，但某些以下划线打头的特殊值除外，如下表所示：  
  
|目标值|说明|  
|------------------|-----------------|  
|`_blank`|将内容呈现在一个没有框架的新窗口中。|  
|`_parent`|将内容呈现在上一个框架集父级中。|  
|`_search`|在搜索窗格中呈现内容。|  
|`_self`|将内容呈现在含焦点的框架中。|  
|`_top`|将内容呈现在没有框架的全窗口中。|  
  
> [!NOTE]
>  请查看浏览器文档，确定是否支持 `_search` 值。  例如，Internet Explorer 版本5.0 及更高版本支持 `_search` 目标值  
  
 此属性适用于控件中的所有菜单项 <xref:System.Web.UI.WebControls.Menu> 。 可以通过 <xref:System.Web.UI.WebControls.MenuItem.Target%2A> 直接设置每个对象的属性来有选择地重写此属性 <xref:System.Web.UI.WebControls.MenuItem> 。  
  
> [!NOTE]
> <xref:System.Web.UI.WebControls.MenuItem.Target%2A>属性呈现为目标特性。 不允许在 XHTML 1.1 strict 文档类型定义中使用定位点元素的目标属性。 如果呈现的输出必须符合 XHTML 或可访问性标准，请不要设置 <xref:System.Web.UI.WebControls.MenuItem.Target%2A> 属性。 有关详细信息，请参阅 [Visual studio 中的 XHTML 标准和](https://docs.microsoft.com/previous-versions/aspnet/exc57y7e(v=vs.100)) [visual studio 和 ASP.NET 中的 ASP.NET 和可访问性](https://docs.microsoft.com/previous-versions/ms228004(v=vs.140))。  
  
## Examples  
 下面的代码示例演示如何使用 <xref:System.Web.UI.WebControls.Menu.Target%2A> 属性来指定在用户单击菜单项时，链接到每个菜单项的内容应显示在新窗口中。  
  
 [!code-aspx-csharp[MenuTarget#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuTarget/CS/menutargetcs.aspx#1)]
 [!code-aspx-vb[MenuTarget#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuTarget/VB/menutargetvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.Target" />
      </Docs>
    </Member>
    <Member MemberName="TrackViewState">
      <MemberSignature Language="C#" Value="protected override void TrackViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void TrackViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.TrackViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub TrackViewState ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void TrackViewState();" />
      <MemberSignature Language="F#" Value="override this.TrackViewState : unit -&gt; unit" Usage="menu.TrackViewState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>跟踪 <see cref="T:System.Web.UI.WebControls.Menu" /> 控件的视图状态更改，以便可以将更改存储在该控件的 <see cref="T:System.Web.UI.StateBag" /> 对象中。 通过 <see cref="P:System.Web.UI.Control.ViewState" /> 属性可访问此对象。</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.UI.StateBag" />
        <altmember cref="P:System.Web.UI.Control.ViewState" />
      </Docs>
    </Member>
  </Members>
</Type>
