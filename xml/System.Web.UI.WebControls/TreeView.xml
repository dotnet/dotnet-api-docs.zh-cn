<Type Name="TreeView" FullName="System.Web.UI.WebControls.TreeView">
  <Metadata><Meta Name="ms.openlocfilehash" Value="c060c5eee28c5dce5925c98023bac9b4191da327" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86657330" /></Metadata><TypeSignature Language="C#" Value="public class TreeView : System.Web.UI.WebControls.HierarchicalDataBoundControl, System.Web.UI.ICallbackEventHandler, System.Web.UI.IPostBackDataHandler, System.Web.UI.IPostBackEventHandler" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TreeView extends System.Web.UI.WebControls.HierarchicalDataBoundControl implements class System.Web.UI.ICallbackEventHandler, class System.Web.UI.IPostBackDataHandler, class System.Web.UI.IPostBackEventHandler" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.TreeView" />
  <TypeSignature Language="VB.NET" Value="Public Class TreeView&#xA;Inherits HierarchicalDataBoundControl&#xA;Implements ICallbackEventHandler, IPostBackDataHandler, IPostBackEventHandler" />
  <TypeSignature Language="C++ CLI" Value="public ref class TreeView : System::Web::UI::WebControls::HierarchicalDataBoundControl, System::Web::UI::ICallbackEventHandler, System::Web::UI::IPostBackDataHandler, System::Web::UI::IPostBackEventHandler" />
  <TypeSignature Language="F#" Value="type TreeView = class&#xA;    inherit HierarchicalDataBoundControl&#xA;    interface IPostBackEventHandler&#xA;    interface IPostBackDataHandler&#xA;    interface ICallbackEventHandler" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.HierarchicalDataBoundControl</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.UI.ICallbackEventHandler</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.IPostBackDataHandler</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.IPostBackEventHandler</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.ComponentModel.DefaultEvent("SelectedNodeChanged")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultEvent("SelectedNodeChanged")&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName Language="C#">[System.ComponentModel.Designer("System.Web.UI.Design.WebControls.TreeViewDesigner, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.ComponentModel.Designer("System.Web.UI.Design.WebControls.TreeViewDesigner, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Web.UI.ControlValueProperty("SelectedValue")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Web.UI.ControlValueProperty("SelectedValue")&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Web.UI.SupportsEventValidation]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Web.UI.SupportsEventValidation&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName Language="C#">[System.ComponentModel.Designer("System.Web.UI.Design.WebControls.TreeViewDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.ComponentModel.Designer("System.Web.UI.Design.WebControls.TreeViewDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>在树结构中显示分层数据，例如目录。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[

## Remarks
 本主题内容：

-   [简介](#introduction)

-   [Nodes](#nodes)

-   [静态数据](#static_data)

-   [绑定到数据](#binding_to_data)

-   [动态节点填充](#dynamic_node_population)

-   [自定义用户界面](#customizing_the_user_interface)

-   [事件](#events)

-   [滚动](#scrolling)

-   [辅助功能](#accessibility)

-   [声明性语法](#declarative_syntax)

<a name="introduction"></a>
## <a name="introduction"></a>简介
 <xref:System.Web.UI.WebControls.TreeView>控件用于在树结构中显示分层数据，例如目录或文件目录，并支持以下功能：

-   允许控件的节点绑定到 XML、表格或关系数据的数据绑定。

-   通过与控件集成的站点导航 <xref:System.Web.UI.WebControls.SiteMapDataSource> 。

-   可以显示为纯文本或超链接的节点文本。

-   以编程方式访问 <xref:System.Web.UI.WebControls.TreeView> 对象模型，以动态方式创建树、填充节点、设置属性等。

-    (支持的浏览器上的客户端节点填充) 。

-   能够在每个节点旁边显示复选框。

-   通过主题、用户定义图像和样式自定义外观。

    > [!NOTE]
    >  <xref:System.Web.UI.WebControls.TreeView>控件设计为 <xref:System.Web.UI.UpdatePanel> 仅在设置为时在控件内使用 <xref:System.Web.UI.WebControls.TreeView.EnableClientScript%2A> `true` 。 <xref:System.Web.UI.UpdatePanel> 控件用于更新页面的选定区域，而不是使用回发来更新整个页面。 有关详细信息，请参阅 [UpdatePanel 控件概述](https://docs.microsoft.com/previous-versions/aspnet/bb386454(v=vs.100)) 和 [部分页呈现概述](https://docs.microsoft.com/previous-versions/aspnet/bb386573(v=vs.100))。

<a name="nodes"></a>
## <a name="nodes"></a>Nodes
 <xref:System.Web.UI.WebControls.TreeView>控件由节点组成。 树中的每个条目称为节点，由 <xref:System.Web.UI.WebControls.TreeNode> 对象表示。 节点类型定义如下：

-   包含其他节点的节点称为 *父节点*。

-   其他节点包含的节点称为 *子节点*。

-   没有子项的节点称为 *叶节点*。

-   不是由任何其他节点包含的节点，而是其他所有*节点的上级节点。*

 节点可以是父节点和子节点，但根节点、父节点和叶节点都是互斥的。 节点的多个视觉和行为属性由节点是根节点、子节点还是叶节点确定。

 尽管典型树结构只有一个根节点，但该 <xref:System.Web.UI.WebControls.TreeView> 控件允许您将多个根节点添加到树结构。 如果希望在不显示单个根节点的情况下显示项列表，则这非常有用，如在产品类别列表中。

 每个节点都有一个 <xref:System.Web.UI.WebControls.TreeNode.Text%2A> 属性和一个 <xref:System.Web.UI.WebControls.TreeNode.Value%2A> 属性。 属性的值 <xref:System.Web.UI.WebControls.TreeNode.Text%2A> 在中显示 <xref:System.Web.UI.WebControls.TreeView> ，而 <xref:System.Web.UI.WebControls.TreeNode.Value%2A> 属性用于存储关于节点的任何其他数据，如传递到与节点相关联的回发事件的数据。

 节点可以是以下两种模式之一：选择模式和导航模式。 默认情况下，节点处于选择模式。 若要使节点进入导航模式，请将 <xref:System.Web.UI.WebControls.TreeNode.NavigateUrl%2A> 节点的属性设置为空字符串以外的值 ( "" ) 。 若要将节点置于选择模式下，请将 <xref:System.Web.UI.WebControls.TreeNode.NavigateUrl%2A> 节点的属性设置为空字符串 ( "" ) 。

> [!NOTE]
>  某些 Internet 浏览器有可能会影响控件性能的限制 <xref:System.Web.UI.WebControls.TreeView> 。 例如，Microsoft Internet Explorer 6.0 的 URL 字符限制为2067个字符。 如果节点 URL 中的字符数大于该数量，则展开该节点将失败，并且不会引发异常。

<a name="static_data"></a>
## <a name="static-data"></a>静态数据
 控件的最简单数据模型 <xref:System.Web.UI.WebControls.TreeView> 为静态数据。 若要使用声明性语法显示静态数据，请先 `<Nodes>` 在控件的开始和结束标记之间嵌套开始和结束标记 <xref:System.Web.UI.WebControls.TreeView> 。 接下来，通过 `<asp:TreeNode>` 在开始和结束标记之间嵌套元素来创建树结构 `<Nodes>` 。 每个 `<asp:TreeNode>` 元素都表示树中的一个节点并映射到一个 <xref:System.Web.UI.WebControls.TreeNode> 对象。 可以通过设置每个节点的元素的属性来设置这些属性 `<asp:TreeNode>` 。 若要创建子节点，请在 `<asp:TreeNode>` 父节点的开始标记和结束标记之间嵌套其他元素 `<asp:TreeNode>` 。

<a name="binding_to_data"></a>
## <a name="binding-to-data"></a>绑定到数据
 <xref:System.Web.UI.WebControls.TreeView>还可以将控件绑定到数据。 您可以使用两种方法中的任意一种将 <xref:System.Web.UI.WebControls.TreeView> 控件绑定到相应的数据源类型：

-   <xref:System.Web.UI.WebControls.TreeView>控件可以使用任何实现接口的数据源控件 <xref:System.Web.UI.IHierarchicalDataSource> ，如 <xref:System.Web.UI.WebControls.XmlDataSource> 控件或 <xref:System.Web.UI.WebControls.SiteMapDataSource> 控件。 若要绑定到数据源控件，请将 <xref:System.Web.UI.WebControls.DataBoundControl.DataSourceID%2A> 控件的属性设置 <xref:System.Web.UI.WebControls.TreeView> 为 <xref:System.Web.UI.Control.ID%2A> 数据源控件的值。 <xref:System.Web.UI.WebControls.TreeView>控件将自动绑定到指定的数据源控件。 这是绑定到数据的首选方法。

-   <xref:System.Web.UI.WebControls.TreeView>控件还可以绑定到 <xref:System.Xml.XmlDocument> 对象或 <xref:System.Data.DataSet> 具有关系的对象。 若要绑定到其中一个数据源，请将 <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataSource%2A> 控件的属性设置 <xref:System.Web.UI.WebControls.TreeView> 为数据源，然后调用 <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> 方法。

 绑定到数据源（其中每个数据项都包含多个属性） (如) 具有多个属性的 XML 元素时，节点默认显示数据项的方法返回的值 `ToString` 。 对于 XML 元素，该节点将显示元素名称，该名称显示树的基础结构，但在其他情况下不起作用。 您可以通过使用集合指定树节点绑定，将节点绑定到特定数据项属性 <xref:System.Web.UI.WebControls.TreeView.DataBindings%2A> 。 <xref:System.Web.UI.WebControls.TreeView.DataBindings%2A>集合包含 `TreeNodeBinding` 的对象定义数据项和它所绑定到的节点之间的关系。 您可以指定要在节点中显示的绑定条件和数据项属性。 有关树节点绑定的详细信息，请参阅 <xref:System.Web.UI.WebControls.TreeNodeBinding> 。

> [!IMPORTANT]
>  恶意用户可以创建回调请求并获取 <xref:System.Web.UI.WebControls.TreeView> 页面开发人员未显示的控件节点的数据。 因此，数据的安全必须由数据源实现。 不要使用 <xref:System.Web.UI.WebControls.TreeView.MaxDataBindDepth%2A> 属性来隐藏数据。

<a name="dynamic_node_population"></a>
## <a name="dynamic-node-population"></a>动态节点填充
 有时，静态定义树结构是不切实际的，因为数据源返回太多数据，或是因为要显示的数据取决于您在运行时获取的信息。 因此， <xref:System.Web.UI.WebControls.TreeView> 控件支持动态节点填充。 如果将 <xref:System.Web.UI.WebControls.TreeNode.PopulateOnDemand%2A> 节点的属性设置为，则在 `true` 展开节点时，将在运行时填充该节点。 若要动态填充节点，必须定义一个事件处理方法，其中包含用于填充事件节点的逻辑 <xref:System.Web.UI.WebControls.TreeView.TreeNodePopulate> 。

 支持回调脚本的浏览器还可利用客户端节点填充。  (包括 Internet Explorer 5.5 和更高版本以及其他一些浏览器。 ) 客户端节点填充使 <xref:System.Web.UI.WebControls.TreeView> 控件能够在用户展开节点时使用客户端脚本填充节点，而无需往返服务器。 有关客户端节点填充的详细信息，请参阅 <xref:System.Web.UI.WebControls.TreeView.PopulateNodesFromClient%2A> 。

<a name="customizing_the_user_interface"></a>
## <a name="customizing-the-user-interface"></a>自定义用户界面
 可以通过多种方式自定义控件的外观 <xref:System.Web.UI.WebControls.TreeView> 。 首先，您可以为每个节点类型指定不同的样式 (例如字号和颜色) 。

 如果 (CSS) 使用级联样式表来自定义控件的外观，请使用内联样式或单独的 CSS 文件，但不能同时使用两者。 同时使用内联样式和单独的 CSS 文件可能导致意外的结果。 有关将样式表用于控件的详细信息，请参阅 [Web 服务器控件和 CSS 样式](https://msdn.microsoft.com/library/782c2db6-fc9b-4243-8df9-a8ffe2f4cc42)。

 下表列出了可用的节点样式。

|节点样式属性|说明|
|-------------------------|-----------------|
|<xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A>|当鼠标指针位于节点上时该节点的样式设置。|
|<xref:System.Web.UI.WebControls.TreeView.LeafNodeStyle%2A>|叶节点的样式设置。|
|<xref:System.Web.UI.WebControls.TreeView.NodeStyle%2A>|节点的默认样式设置。|
|<xref:System.Web.UI.WebControls.TreeView.ParentNodeStyle%2A>|父节点的样式设置。|
|<xref:System.Web.UI.WebControls.TreeView.RootNodeStyle%2A>|根节点的样式设置。|
|<xref:System.Web.UI.WebControls.TreeView.SelectedNodeStyle%2A>|所选节点的样式设置。|

 你还可以使用集合来控制树中特定深度的节点的样式 <xref:System.Web.UI.WebControls.TreeView.LevelStyles%2A> 。 集合中的第一种样式对应于树中第一级节点的样式。 集合中的第二个样式与树中第二级节点上的节点样式相对应，依此类推。 这通常用于生成目录样式的导航菜单，其中，特定深度的节点应具有相同的外观，而不考虑它们是否具有子节点。

> [!NOTE]
>  如果使用集合为某个深度级别定义了样式，则 <xref:System.Web.UI.WebControls.TreeView.LevelStyles%2A> 该样式会重写该深度节点的任何根节点、父节点或叶节点样式设置。

 更改控件外观的另一种方法是自定义控件中显示的图像 <xref:System.Web.UI.WebControls.TreeView> 。 您可以通过设置下表中显示的属性，为控件的不同部分指定您自己的自定义图像集。

|Image 属性|说明|
|--------------------|-----------------|
|<xref:System.Web.UI.WebControls.TreeView.CollapseImageUrl%2A>|可折叠节点的指示符所显示图像的 URL。 此图像通常为减号 ( ) 。|
|<xref:System.Web.UI.WebControls.TreeView.ExpandImageUrl%2A>|可展开节点的指示符所显示图像的 URL。 此图像通常为加号 (+) 。|
|<xref:System.Web.UI.WebControls.TreeView.LineImagesFolder%2A>|包含用于将父节点连接到子节点的线条图像的文件夹的 URL。 <xref:System.Web.UI.WebControls.TreeView.ShowLines%2A>还必须将属性设置为， `true` 此属性才会生效。|
|<xref:System.Web.UI.WebControls.TreeView.NoExpandImageUrl%2A>|为不可展开节点指示符显示的图像的 URL。|

> [!NOTE]
>  不需要自定义每个图像属性。 如果未显式设置 image 属性，则使用内置的默认映像。

 <xref:System.Web.UI.WebControls.TreeView>控件还允许您在节点旁边显示复选框。 如果 <xref:System.Web.UI.WebControls.TreeView.ShowCheckBoxes%2A> 将属性设置为以外的值，则 `TreeNodeTypes.None` 复选框将显示在指定节点类型的旁边。

> [!NOTE]
>  <xref:System.Web.UI.WebControls.TreeView.ShowCheckBoxes%2A>属性可以设置为 <xref:System.Web.UI.WebControls.TreeNodeTypes> 枚举成员值的按位组合。

 每次将页面发送到服务器时，将 <xref:System.Web.UI.WebControls.TreeView.CheckedNodes%2A> 自动填充所选节点的集合。 显示复选框时，可以使用 <xref:System.Web.UI.WebControls.TreeView.TreeNodeCheckChanged> 事件来运行自定义例程，只要复选框的状态在向服务器的各次发送之间发生更改。

<a name="events"></a>
## <a name="events"></a>事件
 <xref:System.Web.UI.WebControls.TreeView>控件提供了几个可对其进行编程的事件。 这使您可以在每次发生事件时运行自定义例程。 下表列出了控件支持的事件 <xref:System.Web.UI.WebControls.TreeView> 。

|事件|说明|
|-----------|-----------------|
|<xref:System.Web.UI.WebControls.TreeView.TreeNodeCheckChanged>|当控件的复选框在 <xref:System.Web.UI.WebControls.TreeView> 向服务器的各次发送过程间更改状态时发生。|
|<xref:System.Web.UI.WebControls.TreeView.SelectedNodeChanged>|在 <xref:System.Web.UI.WebControls.TreeView> 控件中选定某个节点时发生。|
|<xref:System.Web.UI.WebControls.TreeView.TreeNodeExpanded>|在 <xref:System.Web.UI.WebControls.TreeView> 控件中展开某个节点时发生。|
|<xref:System.Web.UI.WebControls.TreeView.TreeNodeCollapsed>|在 <xref:System.Web.UI.WebControls.TreeView> 控件中折叠某个节点时发生。|
|<xref:System.Web.UI.WebControls.TreeView.TreeNodePopulate>|当其 <xref:System.Web.UI.WebControls.TreeNode.PopulateOnDemand%2A> 属性设置为 `true` 的节点在 <xref:System.Web.UI.WebControls.TreeView> 控件中展开时发生。|
|<xref:System.Web.UI.WebControls.TreeView.TreeNodeDataBound>|将数据项绑定到 <xref:System.Web.UI.WebControls.TreeView> 控件中的某个节点时发生。|

<a name="scrolling"></a>
## <a name="scrolling"></a>滚动
 <xref:System.Web.UI.WebControls.TreeView>控件没有内置滚动。 若要添加滚动，请将 <xref:System.Web.UI.WebControls.TreeView> 控件放置在 <xref:System.Web.UI.WebControls.Panel> 控件中，并向控件添加滚动条 <xref:System.Web.UI.WebControls.Panel> 。 有关详细信息，请参阅 [面板 Web 服务器控件概述](https://msdn.microsoft.com/library/127b61ed-87f2-46f4-92a3-785166e7245b)。

<a name="accessibility"></a>
## <a name="accessibility"></a>可访问性
 默认情况下，为此控件呈现的标记可能不符合辅助功能标准。 有关此控件的辅助功能支持的详细信息，请参阅 [ASP.NET 控件和辅助功能](https://docs.microsoft.com/previous-versions/ms227996(v=vs.140))。

<a name="declarative_syntax"></a>
## <a name="declarative-syntax"></a>声明性语法

```
<asp:TreeView
    AccessKey="string"
    AutoGenerateDataBindings="True|False"
    BackColor="color name|#dddddd"
    BorderColor="color name|#dddddd"
    BorderStyle="NotSet|None|Dotted|Dashed|Solid|Double|Groove|Ridge|
        Inset|Outset"
    BorderWidth="size"
    CollapseImageToolTip="string"
    CollapseImageUrl="uri"
    CssClass="string"
    DataSource="string"
    DataSourceID="string"
    EnableClientScript="True|False"
    Enabled="True|False"
    EnableTheming="True|False"
    EnableViewState="True|False"
    ExpandDepth="string|FullyExpand|0|1|2|3|4|5|6|7|8|9|10|11|12|13|
        14|15|16|17|18|19|20|21|22|23|24|25|26|27|28|29|30"
    ExpandImageToolTip="string"
    ExpandImageUrl="uri"
    Font-Bold="True|False"
    Font-Italic="True|False"
    Font-Names="string"
    Font-Overline="True|False"
    Font-Size="string|Smaller|Larger|XX-Small|X-Small|Small|Medium|
       Large|X-Large|XX-Large"
    Font-Strikeout="True|False"
    Font-Underline="True|False"
    ForeColor="color name|#dddddd"
    Height="size"
    ID="string"
    ImageSet="Custom|XPFileExplorer|Msdn|WindowsHelp|Simple|Simple2|
        BulletedList|BulletedList2|BulletedList3|BulletedList4|
        Arrows|News|Contacts|Inbox|Events|Faq"
    LineImagesFolder="string"
    MaxDataBindDepth="integer"
    NodeIndent="integer"
    NodeWrap="True|False"
    NoExpandImageUrl="uri"
    OnDataBinding="DataBinding event handler"
    OnDataBound="DataBound event handler"
    OnDisposed="Disposed event handler"
    OnInit="Init event handler"
    OnLoad="Load event handler"
    OnPreRender="PreRender event handler"
    OnSelectedNodeChanged="SelectedNodeChanged event handler"
    OnTreeNodeCheckChanged="TreeNodeCheckChanged event handler"
    OnTreeNodeCollapsed="TreeNodeCollapsed event handler"
    OnTreeNodeDataBound="TreeNodeDataBound event handler"
    OnTreeNodeExpanded="TreeNodeExpanded event handler"
    OnTreeNodePopulate="TreeNodePopulate event handler"
    OnUnload="Unload event handler"
    PathSeparator="string"
    PopulateNodesFromClient="True|False"
    runat="server"
    ShowCheckBoxes="None|Root|Parent|Leaf|All"
    ShowExpandCollapse="True|False"
    ShowLines="True|False"
    SkinID="string"
    SkipLinkText="string"
    Style="string"
    TabIndex="integer"
    Target="string"
    ToolTip="string"
    Visible="True|False"
    Width="size"
>
        <DataBindings>
                <asp:TreeNodeBinding
                    DataMember="string"
                    Depth="integer"
                    FormatString="string"
                    ImageToolTip="string"
                    ImageToolTipField="string"
                    ImageUrl="uri"
                    ImageUrlField="string"
                    NavigateUrl="uri"
                    NavigateUrlField="string"
                    PopulateOnDemand="True|False"
                    SelectAction="Select|Expand|SelectExpand|None"
                    ShowCheckBox="string"
                    Target="string"
                    TargetField="string"
                    Text="string"
                    TextField="string"
                    ToolTip="string"
                    ToolTipField="string"
                    Value="string"
                    ValueField="string"
                />
        </DataBindings>
        <HoverNodeStyle />
        <LeafNodeStyle
            BackColor="color name|#dddddd"
            BorderColor="color name|#dddddd"
            BorderStyle="NotSet|None|Dotted|Dashed|Solid|Double|
                Groove|Ridge|Inset|Outset"
            BorderWidth="size"
            ChildNodesPadding="size"
            CssClass="string"
            Font-Bold="True|False"
            Font-Italic="True|False"
            Font-Names="string"
            Font-Overline="True|False"
            Font-Size="string|Smaller|Larger|XX-Small|X-Small|Small|
                Medium|Large|X-Large|XX-Large"
            Font-Strikeout="True|False"
            Font-Underline="True|False"
            ForeColor="color name|#dddddd"
            Height="size"
            HorizontalPadding="size"
            ImageUrl="uri"
            NodeSpacing="size"
            OnDisposed="Disposed event handler"
            VerticalPadding="size"
            Width="size"
        />
        <LevelStyles>
                <asp:TreeNodeStyle
                    BackColor="color name|#dddddd"
                    BorderColor="color name|#dddddd"
                    BorderStyle="NotSet|None|Dotted|Dashed|Solid|
                        Double|Groove|Ridge|Inset|Outset"
                    BorderWidth="size"
                    ChildNodesPadding="size"
                    CssClass="string"
                    Font-Bold="True|False"
                    Font-Italic="True|False"
                    Font-Names="string"
                    Font-Overline="True|False"
                    Font-Size="string|Smaller|Larger|XX-Small|
                        X-Small|Small|Medium|Large|X-Large|XX-Large"
                    Font-Strikeout="True|False"
                    Font-Underline="True|False"
                    ForeColor="color name|#dddddd"
                    Height="size"
                    HorizontalPadding="size"
                    ImageUrl="uri"
                    NodeSpacing="size"
                    OnDisposed="Disposed event handler"
                    VerticalPadding="size"
                    Width="size"
                />
        </LevelStyles>
        <Nodes>
                <asp:TreeNode
                    Checked="True|False"
                    Expanded="string"
                    ImageToolTip="string"
                    ImageUrl="uri"
                    NavigateUrl="uri"
                    PopulateOnDemand="True|False"
                    SelectAction="Select|Expand|SelectExpand|None"
                    Selected="True|False"
                    ShowCheckBox="string"
                    Target="string"
                    Text="string"
                    ToolTip="string"
                    Value="string"
>
                </asp:TreeNode>
        </Nodes>
        <NodeStyle
            BackColor="color name|#dddddd"
            BorderColor="color name|#dddddd"
            BorderStyle="NotSet|None|Dotted|Dashed|Solid|Double|
                Groove|Ridge|Inset|Outset"
            BorderWidth="size"
            ChildNodesPadding="size"
            CssClass="string"
            Font-Bold="True|False"
            Font-Italic="True|False"
            Font-Names="string"
            Font-Overline="True|False"
            Font-Size="string|Smaller|Larger|XX-Small|X-Small|Small|
                Medium|Large|X-Large|XX-Large"
            Font-Strikeout="True|False"
            Font-Underline="True|False"
            ForeColor="color name|#dddddd"
            Height="size"
            HorizontalPadding="size"
            ImageUrl="uri"
            NodeSpacing="size"
            OnDisposed="Disposed event handler"
            VerticalPadding="size"
            Width="size"
        />
        <ParentNodeStyle
            BackColor="color name|#dddddd"
            BorderColor="color name|#dddddd"
            BorderStyle="NotSet|None|Dotted|Dashed|Solid|Double|
                Groove|Ridge|Inset|Outset"
            BorderWidth="size"
            ChildNodesPadding="size"
            CssClass="string"
            Font-Bold="True|False"
            Font-Italic="True|False"
            Font-Names="string"
            Font-Overline="True|False"
            Font-Size="string|Smaller|Larger|XX-Small|X-Small|Small|
                Medium|Large|X-Large|XX-Large"
            Font-Strikeout="True|False"
            Font-Underline="True|False"
            ForeColor="color name|#dddddd"
            Height="size"
            HorizontalPadding="size"
            ImageUrl="uri"
            NodeSpacing="size"
            OnDisposed="Disposed event handler"
            VerticalPadding="size"
            Width="size"
        />
        <RootNodeStyle
            BackColor="color name|#dddddd"
            BorderColor="color name|#dddddd"
            BorderStyle="NotSet|None|Dotted|Dashed|Solid|Double|
                Groove|Ridge|Inset|Outset"
            BorderWidth="size"
            ChildNodesPadding="size"
            CssClass="string"
            Font-Bold="True|False"
            Font-Italic="True|False"
            Font-Names="string"
            Font-Overline="True|False"
            Font-Size="string|Smaller|Larger|XX-Small|X-Small|Small|
                Medium|Large|X-Large|XX-Large"
            Font-Strikeout="True|False"
            Font-Underline="True|False"
            ForeColor="color name|#dddddd"
            Height="size"
            HorizontalPadding="size"
            ImageUrl="uri"
            NodeSpacing="size"
            OnDisposed="Disposed event handler"
            VerticalPadding="size"
            Width="size"
        />
        <SelectedNodeStyle
            BackColor="color name|#dddddd"
            BorderColor="color name|#dddddd"
            BorderStyle="NotSet|None|Dotted|Dashed|Solid|Double|
                Groove|Ridge|Inset|Outset"
            BorderWidth="size"
            ChildNodesPadding="size"
            CssClass="string"
            Font-Bold="True|False"
            Font-Italic="True|False"
            Font-Names="string"
            Font-Overline="True|False"
            Font-Size="string|Smaller|Larger|XX-Small|X-Small|Small|
                Medium|Large|X-Large|XX-Large"
            Font-Strikeout="True|False"
            Font-Underline="True|False"
            ForeColor="color name|#dddddd"
            Height="size"
            HorizontalPadding="size"
            ImageUrl="uri"
            NodeSpacing="size"
            OnDisposed="Disposed event handler"
            VerticalPadding="size"
            Width="size"
        />
</asp:TreeView>
```



## Examples
 本部分包含七个代码示例：

-   第一个代码示例演示如何为第二个代码示例设置帧。

-   第二个代码示例演示如何使用声明性语法在控件中显示静态数据 <xref:System.Web.UI.WebControls.TreeView> 。

-   第三个代码示例演示如何将 <xref:System.Web.UI.WebControls.TreeView> 控件绑定到 XML 数据源。

-   第四个代码示例提供了第三个代码示例的示例 XML 数据。

-   第五个代码示例演示如何通过将 <xref:System.Web.UI.WebControls.TreeView> 控件绑定到控件来使用控件进行站点导航 <xref:System.Web.UI.WebControls.SiteMapDataSource> 。

-   第六个代码示例提供了第五个代码示例的示例站点地图数据。

-   第七个代码示例演示如何 <xref:System.Web.UI.WebControls.TreeView> 从客户端填充控件中的节点。

 下面的代码示例演示如何为以下代码示例设置帧。

 [!code-aspx-csharp[TreeViewFrameSet#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewFrameSet/CS/framecs.aspx#1)]
 [!code-aspx-vb[TreeViewFrameSet#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewFrameSet/VB/framevb.aspx#1)]

 下面的代码示例演示如何使用声明性语法在控件中显示静态数据 <xref:System.Web.UI.WebControls.TreeView> 。 此示例在前面示例的帧集中用于显示目录。

 [!code-aspx-csharp[TreeViewFrameExample#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewFrameExample/CS/treeviewframecs.aspx#1)]
 [!code-aspx-vb[TreeViewFrameExample#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewFrameExample/VB/treeviewframevb.aspx#1)]

 下面的代码示例演示如何将控件绑定 <xref:System.Web.UI.WebControls.TreeView> 到 XML 数据源。 若要使此示例正常工作，必须将示例 XML 数据（在此代码示例之后提供）复制到名为 Book.xml 的文件中。

 [!code-aspx-csharp[TreeViewXml#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewXml/CS/treeviewxmlcs.aspx#1)]
 [!code-aspx-vb[TreeViewXml#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewXml/VB/treeviewxmlvb.aspx#1)]

 下面的代码示例提供了前面示例的示例 XML 数据。

```
<Book Title="Book Title">
    <Chapter Heading="Chapter 1">
        <Section Heading="Section 1">
        </Section>
        <Section Heading="Section 2">
        </Section>
    </Chapter>
    <Chapter Heading="Chapter 2">
        <Section Heading="Section 1">
        </Section>
    </Chapter>
</Book>
```

 下面的代码示例演示如何 <xref:System.Web.UI.WebControls.TreeView> 通过将控件绑定到控件来使用控件进行站点导航 <xref:System.Web.UI.WebControls.SiteMapDataSource> 。 若要使此示例正常工作，您必须将示例站点地图数据（在此代码示例之后提供）复制到名为 "web.sitemap" 的文件中。

 [!code-aspx-csharp[TreeViewAutoGenerateBindings#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewAutoGenerateBindings/CS/treeviewautogeneratebindingscs.aspx#1)]
 [!code-aspx-vb[TreeViewAutoGenerateBindings#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewAutoGenerateBindings/VB/treeviewautogeneratebindingsvb.aspx#1)]

 下面的代码示例提供了前面的代码示例的示例站点地图数据。

```
<siteMap>
    <siteMapNode title="Home" description="Home" url="default.aspx">
        <siteMapNode title="Products" description="Products" url="Products.aspx">
            <siteMapNode title="Computers" url="Computers.aspx"/>
            <siteMapNode title="Accessories" url="Accessories.aspx"/>
        </siteMapNode>
    </siteMapNode>
</siteMap>
```

 下面的代码示例演示如何 <xref:System.Web.UI.WebControls.TreeView> 从客户端填充控件中的节点。 启用客户端节点填充后，节点会在客户端上动态填充，而无需回发到服务器。

 [!code-aspx-csharp[TreeViewPopulateNodesFromClient#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewPopulateNodesFromClient/CS/treeviewpopulatenodesfromclientcs.aspx#1)]
 [!code-aspx-vb[TreeViewPopulateNodesFromClient#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewPopulateNodesFromClient/VB/treeviewpopulatenodesfromclientvb.aspx#1)]

 ]]></format>
    </remarks>
    <altmember cref="P:System.Web.UI.WebControls.DataBoundControl.DataSourceID" />
    <altmember cref="P:System.Web.UI.WebControls.TreeView.DataBindings" />
    <altmember cref="P:System.Web.UI.WebControls.TreeView.EnableClientScript" />
    <altmember cref="T:System.Web.UI.IHierarchicalDataSource" />
    <altmember cref="P:System.Web.UI.WebControls.TreeView.Nodes" />
    <altmember cref="P:System.Web.UI.WebControls.TreeView.ShowCheckBoxes" />
    <altmember cref="T:System.Web.UI.WebControls.TreeNode" />
    <altmember cref="T:System.Web.UI.WebControls.TreeNodeBinding" />
    <altmember cref="T:System.Web.UI.WebControls.TreeNodeStyle" />
    <altmember cref="T:System.Web.UI.WebControls.TreeNodeCollection" />
    <altmember cref="T:System.Web.UI.WebControls.SiteMapDataSource" />
    <altmember cref="E:System.Web.UI.WebControls.TreeView.TreeNodeCheckChanged" />
    <altmember cref="E:System.Web.UI.WebControls.TreeView.SelectedNodeChanged" />
    <altmember cref="E:System.Web.UI.WebControls.TreeView.TreeNodeExpanded" />
    <altmember cref="E:System.Web.UI.WebControls.TreeView.TreeNodeCollapsed" />
    <altmember cref="E:System.Web.UI.WebControls.TreeView.TreeNodePopulate" />
    <altmember cref="E:System.Web.UI.WebControls.TreeView.TreeNodeDataBound" />
    <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/yy2ykkab(v=vs.100)">ASP.NET 网站地图</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TreeView ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TreeView();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Web.UI.WebControls.TreeView" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 使用 <xref:System.Web.UI.WebControls.TreeView.%23ctor%2A> 构造函数来创建和初始化类的新实例 <xref:System.Web.UI.WebControls.TreeView> 。 若要 <xref:System.Web.UI.WebControls.TreeView> 动态将控件添加到页面，请创建新的 <xref:System.Web.UI.WebControls.TreeView> 对象，设置其属性，然后将其添加到 <xref:System.Web.UI.Control.Controls%2A?displayProperty=nameWithType> 容器控件（如控件）的集合 <xref:System.Web.UI.WebControls.PlaceHolder> 。



## Examples
 本部分包含两个代码示例。 第一个代码示例演示如何使用 <xref:System.Web.UI.WebControls.TreeView.%23ctor%2A> 构造函数动态将控件添加 <xref:System.Web.UI.WebControls.TreeView> 到页面。 第二个代码示例提供了第一个代码示例的示例 XML 数据。

 下面的代码示例演示如何使用 <xref:System.Web.UI.WebControls.TreeView.%23ctor%2A> 构造函数动态将控件添加 <xref:System.Web.UI.WebControls.TreeView> 到页面。 若要使此示例正常工作，必须将提供的示例 XML 数据复制到名为 Book.xml 的文件中。

 [!code-aspx-csharp[TreeViewCtor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewCtor/CS/treeviewctorcs.aspx#1)]
 [!code-aspx-vb[TreeViewCtor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewCtor/VB/treeviewctorvb.aspx#1)]

 下面的代码示例提供了前面示例的示例 XML 数据。

```
<Book Title="Book Title">
  <Chapter Heading="Chapter 1">
    <Section Heading="Section 1">
    </Section>
    <Section Heading="Section 2">
    </Section>
  </Chapter>
  <Chapter Heading="Chapter 2">
    <Section Heading="Section 1">
    </Section>
  </Chapter>
</Book>
```

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.Controls" />
        <altmember cref="T:System.Web.UI.WebControls.PlaceHolder" />
      </Docs>
    </Member>
    <Member MemberName="AddAttributesToRender">
      <MemberSignature Language="C#" Value="protected override void AddAttributesToRender (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void AddAttributesToRender(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.AddAttributesToRender(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub AddAttributesToRender (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void AddAttributesToRender(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.AddAttributesToRender : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="treeView.AddAttributesToRender writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">表示在客户端上呈现 HTML 内容的输出流的 <see cref="T:System.Web.UI.HtmlTextWriter" />。</param>
        <summary>将需要呈现的 HTML 特性和样式添加到指定的 <see cref="T:System.Web.UI.HtmlTextWriter" /> 控件中。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.TreeView.AddAttributesToRender%2A>方法主要由控件开发人员使用。

 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebControl.AddAttributesToRender(System.Web.UI.HtmlTextWriter)" />
      </Docs>
    </Member>
    <Member MemberName="AutoGenerateDataBindings">
      <MemberSignature Language="C#" Value="public bool AutoGenerateDataBindings { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoGenerateDataBindings" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.AutoGenerateDataBindings" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoGenerateDataBindings As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AutoGenerateDataBindings { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AutoGenerateDataBindings : bool with get, set" Usage="System.Web.UI.WebControls.TreeView.AutoGenerateDataBindings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示 <see cref="T:System.Web.UI.WebControls.TreeView" /> 控件是否自动生成树节点绑定。</summary>
        <value>若要让 <see cref="T:System.Web.UI.WebControls.TreeView" /> 控件自动生成树节点绑定，则为 <see langword="true" />；否则为 <see langword="false" />。 默认为 <see langword="true" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 树节点绑定定义数据项和它所绑定到的节点之间的关系。 绑定到数据源（其中每个数据项都包含多个属性） (例如) 具有多个属性的 XML 元素时， <xref:System.Web.UI.WebControls.TreeView> 控件需要知道要绑定到哪个属性的数据项属性 <xref:System.Web.UI.WebControls.TreeNode> 。 如果将 <xref:System.Web.UI.WebControls.TreeView.AutoGenerateDataBindings%2A> 属性设置为 `true` ，则 <xref:System.Web.UI.WebControls.TreeView> 控件将自动生成默认树节点绑定，该绑定将 <xref:System.Web.UI.WebControls.TreeNode.Text%2A> 与绑定关联的对象的属性设置 <xref:System.Web.UI.WebControls.TreeNode> 为数据项的方法返回的值 `ToString` 。

> [!NOTE]
>  自动生成的树节点绑定不会添加到 <xref:System.Web.UI.WebControls.TreeView.DataBindings%2A> 集合中。

 对于 XML 元素，该方法返回的值 `ToString` 是元素名称，该名称显示 XML 文件的基础结构，但在其他情况下并不十分有用。 若要创建更有用的树，必须通过填充集合来定义自己的树节点绑定 <xref:System.Web.UI.WebControls.TreeView.DataBindings%2A> 。

> [!NOTE]
>  如果定义 <xref:System.Web.UI.WebControls.TreeView.DataBindings%2A> 集合，则控件将 <xref:System.Web.UI.WebControls.TreeView> 使用这些值，而不是自动生成的树节点绑定。

 此属性的值存储在视图状态中。



## Examples
 本部分包含两个代码示例。 第一个代码示例演示如何通过将属性设置为来禁用自动树节点绑定生成 <xref:System.Web.UI.WebControls.TreeView.AutoGenerateDataBindings%2A> `false` 。 第二个代码示例提供了第一个代码示例的示例站点地图数据。

 下面的代码示例演示如何通过将属性设置为来禁用自动树节点绑定生成 <xref:System.Web.UI.WebControls.TreeView.AutoGenerateDataBindings%2A> `false` 。 <xref:System.Web.UI.WebControls.TreeView.DataBindings%2A>然后定义一个集合，以在控件中的数据项与控件的节点之间建立关系 <xref:System.Web.UI.WebControls.SiteMapDataSource> <xref:System.Web.UI.WebControls.TreeView> 。 若要使此示例正常工作，您必须将示例站点地图数据（在此代码示例之后提供）复制到名为 "web.sitemap" 的文件中。

 [!code-aspx-csharp[TreeViewAutoGenerateBindings#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewAutoGenerateBindings/CS/treeviewautogeneratebindingscs.aspx#1)]
 [!code-aspx-vb[TreeViewAutoGenerateBindings#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewAutoGenerateBindings/VB/treeviewautogeneratebindingsvb.aspx#1)]

 下面的代码示例提供了前面示例的示例站点地图数据。

```
<siteMap>
    <siteMapNode title="Home" description="Home" url="default.aspx">
        <siteMapNode title="Products" description="Products" url="Products.aspx">
            <siteMapNode title="Computers" url="Computers.aspx"/>
            <siteMapNode title="Accessories" url="Accessories.aspx"/>
        </siteMapNode>
    </siteMapNode>
</siteMap>
```

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.TreeView.DataBindings" />
        <altmember cref="T:System.Web.UI.WebControls.TreeNodeBinding" />
        <altmember cref="T:System.Web.UI.WebControls.TreeNodeBindingCollection" />
      </Docs>
    </Member>
    <Member MemberName="CheckedNodes">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TreeNodeCollection CheckedNodes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TreeNodeCollection CheckedNodes" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.CheckedNodes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CheckedNodes As TreeNodeCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TreeNodeCollection ^ CheckedNodes { System::Web::UI::WebControls::TreeNodeCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CheckedNodes : System.Web.UI.WebControls.TreeNodeCollection" Usage="System.Web.UI.WebControls.TreeView.CheckedNodes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TreeNodeCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取 <see cref="T:System.Web.UI.WebControls.TreeNode" /> 对象的集合，这些对象表示在 <see cref="T:System.Web.UI.WebControls.TreeView" /> 控件中显示的选中了复选框的节点。</summary>
        <value>一个 <see cref="T:System.Web.UI.WebControls.TreeNodeCollection" />，它包含 <see cref="T:System.Web.UI.WebControls.TreeView" /> 中显示的选中了复选框的节点。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 如果在控件 (中显示复选框 <xref:System.Web.UI.WebControls.TreeView> ，则将 <xref:System.Web.UI.WebControls.TreeView.ShowCheckBoxes%2A> 属性设置为除) 以外的值时 `TreeNodeType.None` ，请使用 <xref:System.Web.UI.WebControls.TreeView.CheckedNodes%2A> 属性来确定哪些节点显示选中的复选框。 此集合通常用于循环访问树中选中了复选框的所有节点。

 <xref:System.Web.UI.WebControls.TreeView.TreeNodeCheckChanged>当控件的复选框在 <xref:System.Web.UI.WebControls.TreeView> 向服务器的各次发送过程间更改状态时，将引发事件。 这使你可以提供一种事件处理方法，该方法可在每次发生此事件时执行自定义例程，如更新数据库或显示的内容。

> [!NOTE]
>  <xref:System.Web.UI.WebControls.TreeView.CheckedNodes%2A>使用树结构的深度优先遍历来填充集合：在填充下一个父节点之前，每个父节点都向下处理到其子节点。



## Examples
 下面的代码示例演示如何使用 <xref:System.Web.UI.WebControls.TreeView.CheckedNodes%2A> 属性来确定控件中哪些节点具有选定的复选框 <xref:System.Web.UI.WebControls.TreeView> 。

 [!code-aspx-csharp[TreeViewShowCheckBoxes#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewShowCheckBoxes/CS/treeviewshowcheckboxescs.aspx#1)]
 [!code-aspx-vb[TreeViewShowCheckBoxes#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewShowCheckBoxes/VB/treeviewshowcheckboxesvb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ShowCheckBoxes" />
        <altmember cref="T:System.Web.UI.WebControls.TreeNode" />
        <altmember cref="T:System.Web.UI.WebControls.TreeNodeCollection" />
      </Docs>
    </Member>
    <Member MemberName="CollapseAll">
      <MemberSignature Language="C#" Value="public void CollapseAll ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CollapseAll() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.CollapseAll" />
      <MemberSignature Language="VB.NET" Value="Public Sub CollapseAll ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CollapseAll();" />
      <MemberSignature Language="F#" Value="member this.CollapseAll : unit -&gt; unit" Usage="treeView.CollapseAll " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>关闭树中的每个节点。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.TreeView.CollapseAll%2A>方法提供了一种简便的方法来关闭树中的每个节点。



## Examples
 下面的代码示例演示如何使用 <xref:System.Web.UI.WebControls.TreeView.CollapseAll%2A> 方法同时折叠控件中的所有节点 <xref:System.Web.UI.WebControls.TreeView> 。

 [!code-aspx-csharp[TreeViewExpandAll#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewExpandAll/CS/treeviewexpandallcs.aspx#1)]
 [!code-aspx-vb[TreeViewExpandAll#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewExpandAll/VB/treeviewexpandallvb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.TreeView.ExpandAll" />
      </Docs>
    </Member>
    <Member MemberName="CollapseImageToolTip">
      <MemberSignature Language="C#" Value="public string CollapseImageToolTip { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CollapseImageToolTip" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.CollapseImageToolTip" />
      <MemberSignature Language="VB.NET" Value="Public Property CollapseImageToolTip As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CollapseImageToolTip { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CollapseImageToolTip : string with get, set" Usage="System.Web.UI.WebControls.TreeView.CollapseImageToolTip" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Localizable(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Localizable(true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置可折叠节点的指示符所显示图像的工具提示。</summary>
        <value>可折叠节点的指示符所显示图像的工具提示。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 使用 <xref:System.Web.UI.WebControls.TreeView.CollapseImageToolTip%2A> 属性为可折叠图像指定工具提示。 指定的文本为辅助技术设备提供了可用于使控件更易于访问的图像说明。

 此属性的值存储在视图状态中。

 设置此属性后，可以使用设计器工具自动将此属性的值保存到资源文件中。 有关详细信息，请参阅 <xref:System.ComponentModel.LocalizableAttribute> 和 [全球化和本地化](https://docs.microsoft.com/previous-versions/aspnet/c6zyy3s9(v=vs.100))。



## Examples
 下面的代码示例演示如何使用 <xref:System.Web.UI.WebControls.TreeView.CollapseImageToolTip%2A> 属性为可折叠节点的指示符显示的图像指定工具提示。

 [!code-aspx-csharp[TreeViewCustomImage#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewCustomImage/CS/treeviewcustomimagecs.aspx#1)]
 [!code-aspx-vb[TreeViewCustomImage#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewCustomImage/VB/treeviewcustomimagevb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.TreeView.CollapseImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ExpandImageToolTip" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ExpandImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ImageSet" />
      </Docs>
    </Member>
    <Member MemberName="CollapseImageUrl">
      <MemberSignature Language="C#" Value="public string CollapseImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CollapseImageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.CollapseImageUrl" />
      <MemberSignature Language="VB.NET" Value="Public Property CollapseImageUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CollapseImageUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CollapseImageUrl : string with get, set" Usage="System.Web.UI.WebControls.TreeView.CollapseImageUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue("")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue("")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName Language="C#">[System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.UrlProperty]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.UrlProperty&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置自定义图像的 URL，该图像用作可折叠节点的指示符。</summary>
        <value>为可折叠节点所显示的自定义图像的 URL。 默认值为空字符串 ("")，这将显示默认的减号 (-) 图像。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 使用 <xref:System.Web.UI.WebControls.TreeView.CollapseImageUrl%2A> 属性为可折叠节点的指示符指定自定义图像。 此图像显示在可折叠节点旁边，通常为减号 ( ) 。

 当 <xref:System.Web.UI.WebControls.TreeView.ShowExpandCollapse%2A> 属性设置为时 `true` ，控件将在 <xref:System.Web.UI.WebControls.TreeView> 节点旁显示加号 (+) 或减号 ( ) 或占位符图像，以指示该节点是可展开、可折叠还是不可展开。 通过首先将 <xref:System.Web.UI.WebControls.TreeView.ImageSet%2A> 属性设置为 `TreeViewImageSet.Custom` ，然后将 <xref:System.Web.UI.WebControls.TreeView.NoExpandImageUrl%2A> 、和属性设置为 <xref:System.Web.UI.WebControls.TreeView.ExpandImageUrl%2A> <xref:System.Web.UI.WebControls.TreeView.CollapseImageUrl%2A> 自定义图像的 url，可以指定自定义映像。 如果未指定任何图像，则使用默认图像。 若要隐藏展开节点指示符，请将 <xref:System.Web.UI.WebControls.TreeView.ShowExpandCollapse%2A> 属性设置为 `false` 。

> [!NOTE]
>  若要确保在 <xref:System.Web.UI.WebControls.TreeView> 使用自定义图像时节点正确地在控件中对齐，请确保、和属性指定的所有 <xref:System.Web.UI.WebControls.TreeView.NoExpandImageUrl%2A> 图像 <xref:System.Web.UI.WebControls.TreeView.ExpandImageUrl%2A> <xref:System.Web.UI.WebControls.TreeView.CollapseImageUrl%2A> 具有相同的尺寸。

 使用自定义图像作为可折叠节点的指示符时，还应考虑将 <xref:System.Web.UI.WebControls.TreeView.CollapseImageToolTip%2A> 属性设置为为图像指定工具提示。

 此属性的值存储在视图状态中。



## Examples
 下面的代码示例演示如何使用 <xref:System.Web.UI.WebControls.TreeView.CollapseImageUrl%2A> 属性为可折叠节点的指示符指定自定义图像。 要使代码示例显示和图像显示在控件中，必须提供自己的图像，并且 <xref:System.Web.UI.WebControls.TreeView.ImageSet%2A> 属性必须设置为 `TreeNodeImageSet.Custom` 。

 [!code-aspx-csharp[TreeViewCustomImage#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewCustomImage/CS/treeviewcustomimagecs.aspx#1)]
 [!code-aspx-vb[TreeViewCustomImage#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewCustomImage/VB/treeviewcustomimagevb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ShowExpandCollapse" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ImageSet" />
        <altmember cref="T:System.Web.UI.WebControls.TreeViewImageSet" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ExpandImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.NoExpandImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.CollapseImageToolTip" />
      </Docs>
    </Member>
    <Member MemberName="CreateControlCollection">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.ControlCollection CreateControlCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.ControlCollection CreateControlCollection() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.CreateControlCollection" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateControlCollection () As ControlCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Web::UI::ControlCollection ^ CreateControlCollection();" />
      <MemberSignature Language="F#" Value="override this.CreateControlCollection : unit -&gt; System.Web.UI.ControlCollection" Usage="treeView.CreateControlCollection " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.ControlCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>创建用于存储子控件的集合。</summary>
        <returns>始终返回 <see cref="T:System.Web.UI.EmptyControlCollection" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.TreeView>控件不支持嵌入子控件。 此方法已重写，以防止添加子控件并始终返回 <xref:System.Web.UI.EmptyControlCollection?displayProperty=nameWithType> 对象。

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.EmptyControlCollection" />
      </Docs>
    </Member>
    <Member MemberName="CreateNode">
      <MemberSignature Language="C#" Value="protected internal virtual System.Web.UI.WebControls.TreeNode CreateNode ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.Web.UI.WebControls.TreeNode CreateNode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.CreateNode" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function CreateNode () As TreeNode" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::Web::UI::WebControls::TreeNode ^ CreateNode();" />
      <MemberSignature Language="F#" Value="abstract member CreateNode : unit -&gt; System.Web.UI.WebControls.TreeNode&#xA;override this.CreateNode : unit -&gt; System.Web.UI.WebControls.TreeNode" Usage="treeView.CreateNode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TreeNode</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>返回 <see cref="T:System.Web.UI.WebControls.TreeNode" /> 类的新实例。 <see cref="M:System.Web.UI.WebControls.TreeView.CreateNode" /> 是一个帮助器方法。</summary>
        <returns><see cref="T:System.Web.UI.WebControls.TreeNode" /> 的新实例。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.TreeView.CreateNode%2A>方法是一个帮助器方法，它返回类的新实例 <xref:System.Web.UI.WebControls.TreeNode> 。

 <xref:System.Web.UI.WebControls.TreeView.CreateNode%2A>方法主要由控件开发人员使用。 要通过扩展类扩展类的控件开发人员 <xref:System.Web.UI.WebControls.TreeView> <xref:System.Web.UI.WebControls.TreeNode> 应重写此方法以返回从派生的对象 <xref:System.Web.UI.WebControls.TreeNode> 。 扩展类的一个常见原因 <xref:System.Web.UI.WebControls.TreeNode> 是重写 <xref:System.Web.UI.WebControls.TreeNode.RenderPreText%2A> 和 <xref:System.Web.UI.WebControls.TreeNode.RenderPostText%2A> 方法。

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataBind">
      <MemberSignature Language="C#" Value="public override sealed void DataBind ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void DataBind() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.DataBind" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable Sub DataBind ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void DataBind();" />
      <MemberSignature Language="F#" Value="override this.DataBind : unit -&gt; unit" Usage="treeView.DataBind " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>调用基类的 <see cref="M:System.Web.UI.WebControls.BaseDataBoundControl.DataBind" /> 方法。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 数据绑定控件应重写 <xref:System.Web.UI.WebControls.TreeView.PerformDataBinding%2A> 方法，而不是 <xref:System.Web.UI.WebControls.TreeView.DataBind%2A> 方法。

 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.TreeView.PerformDataBinding" />
      </Docs>
    </Member>
    <Member MemberName="DataBindings">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TreeNodeBindingCollection DataBindings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TreeNodeBindingCollection DataBindings" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.DataBindings" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DataBindings As TreeNodeBindingCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TreeNodeBindingCollection ^ DataBindings { System::Web::UI::WebControls::TreeNodeBindingCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DataBindings : System.Web.UI.WebControls.TreeNodeBindingCollection" Usage="System.Web.UI.WebControls.TreeView.DataBindings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(null)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(null)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName Language="C#">[System.ComponentModel.Editor("System.Web.UI.Design.WebControls.TreeViewBindingsEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Editor("System.Web.UI.Design.WebControls.TreeViewBindingsEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.MergableProperty(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.MergableProperty(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.Editor("System.Web.UI.Design.WebControls.TreeViewBindingsEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Editor("System.Web.UI.Design.WebControls.TreeViewBindingsEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TreeNodeBindingCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取 <see cref="T:System.Web.UI.WebControls.TreeNodeBinding" /> 对象的集合，这些对象定义数据项与其绑定到的节点之间的关系。</summary>
        <value>表示数据项与其绑定到的节点之间关系的一个 <see cref="T:System.Web.UI.WebControls.TreeNodeBindingCollection" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.TreeView.DataBindings%2A>集合包含 <xref:System.Web.UI.WebControls.TreeNodeBinding> 的对象定义数据项和它所绑定到的节点之间的关系。 绑定到数据源（其中每个数据项都包含多个属性） (如) 具有多个属性的 XML 元素时，节点默认显示数据项的方法返回的值 `ToString` 。 对于 XML 元素，该节点将显示元素名称，该名称显示树的基础结构，但在其他情况下不起作用。 可以通过指定树节点绑定将节点绑定到特定数据项属性。

 定义数据项与节点之间的关系时，必须同时指定绑定条件和要绑定到对象属性的值 <xref:System.Web.UI.WebControls.TreeNode> 。 条件指示数据项应绑定到节点的时间。 可以通过节点深度、数据成员或同时指定这两者。 节点深度指定要绑定的节点级别。 例如，如果将节点深度指定为0，则将使用树节点绑定来绑定树结构中处于级别0的所有节点。 数据成员指定基础数据源中数据项的类型，但可以根据数据源表示不同的信息。 例如，XML 元素的数据成员指定元素的名称。

 如果定义了多个相互 <xref:System.Web.UI.WebControls.TreeNodeBinding> 冲突的对象，则该 <xref:System.Web.UI.WebControls.TreeView> 控件将按以下优先级顺序应用树节点绑定：

1.  <xref:System.Web.UI.WebControls.TreeNodeBinding>定义深度和数据成员的对象。

2.  <xref:System.Web.UI.WebControls.TreeNodeBinding>仅定义深度的对象。

3.  <xref:System.Web.UI.WebControls.TreeNodeBinding>仅定义数据成员的对象。

4.  同时 <xref:System.Web.UI.WebControls.TreeNodeBinding> 定义深度和数据成员的对象。

 如果指定了多个符合相同优先级条件的绑定，则会应用集合中的第一个绑定。

 建立绑定条件后，可以绑定 <xref:System.Web.UI.WebControls.TreeNode> 可以绑定到值的对象的属性。 可以绑定到数据项的属性或字段或显示静态值。 有关将对象属性绑定到值的详细信息 <xref:System.Web.UI.WebControls.TreeNode> ，请参阅 <xref:System.Web.UI.WebControls.TreeNodeBinding> 。

 尽管 <xref:System.Web.UI.WebControls.TreeView.DataBindings%2A> 可以通过编程方式填充该集合，但通常以声明方式进行设置。 若要指定树节点绑定，首先 `<DataBindings>` 在控件的开始和结束标记之间嵌套开始和结束标记 <xref:System.Web.UI.WebControls.TreeView> 。 接下来，在 `<asp:TreeNodeBinding>` `<DataBindings>` 要指定的每个树节点绑定的开始标记和结束标记之间放置元素。

 如果通过将控件的属性设置为来创建数据绑定 <xref:System.Web.UI.WebControls.TreeView.AutoGenerateDataBindings%2A> ，则创建的绑定的 <xref:System.Web.UI.WebControls.TreeView> `true` <xref:System.Web.UI.WebControls.TreeNodeBinding.PopulateOnDemand%2A> 属性设置为 `true` 。 以声明方式创建的数据绑定的 <xref:System.Web.UI.WebControls.TreeNodeBinding.PopulateOnDemand%2A> 属性设置为 `false` 。 使用声明性语法允许您控制单个数据绑定的行为。



## Examples
 本部分包含两个代码示例。 第一个代码示例演示如何使用 <xref:System.Web.UI.WebControls.TreeView.DataBindings%2A> 集合来定义数据项和它所绑定到的节点之间的关系。 第二个代码示例提供了第一个代码示例的示例 XML 数据。

 下面的代码示例演示如何使用 <xref:System.Web.UI.WebControls.TreeView.DataBindings%2A> 集合来定义数据项和它所绑定到的节点之间的关系。 若要使此示例正常工作，必须将示例 XML 数据（在此代码示例之后提供）复制到名为 Book.xml 的文件中。 此示例仅指定 <xref:System.Web.UI.WebControls.TreeNodeBinding.DataMember%2A> 绑定的属性。 还可以通过指定属性来添加略微提高性能 <xref:System.Web.UI.WebControls.TreeNodeBinding.Depth%2A> 。

 [!code-aspx-csharp[TreeViewXml#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewXml/CS/treeviewxmlcs.aspx#1)]
 [!code-aspx-vb[TreeViewXml#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewXml/VB/treeviewxmlvb.aspx#1)]

 下面的代码示例提供了前面示例的示例 XML 数据。

```
<Book Title="Book Title">
    <Chapter Heading="Chapter 1">
        <Section Heading="Section 1">
        </Section>
        <Section Heading="Section 2">
        </Section>
    </Chapter>
    <Chapter Heading="Chapter 2">
        <Section Heading="Section 1">
        </Section>
    </Chapter>
</Book>
```

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeNodeBinding" />
        <altmember cref="T:System.Web.UI.WebControls.TreeNodeBindingCollection" />
      </Docs>
    </Member>
    <Member MemberName="EnableClientScript">
      <MemberSignature Language="C#" Value="public bool EnableClientScript { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableClientScript" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.EnableClientScript" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableClientScript As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableClientScript { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableClientScript : bool with get, set" Usage="System.Web.UI.WebControls.TreeView.EnableClientScript" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.Themeable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.Themeable(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，指示 <see cref="T:System.Web.UI.WebControls.TreeView" /> 控件是否呈现客户端脚本以处理展开和折叠事件。</summary>
        <value>若要在兼容的浏览器上呈现客户端脚本，则为 <see langword="true" />；否则为 <see langword="false" />。 默认为 <see langword="true" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 使用 <xref:System.Web.UI.WebControls.TreeView.EnableClientScript%2A> 属性指定 <xref:System.Web.UI.WebControls.TreeView> 控件是否在兼容的浏览器上呈现客户端脚本来处理展开和折叠事件。 如果将此属性设置为 `true` ，则兼容的浏览器将执行代码来展开和折叠客户端上的节点。 若要运行客户端脚本，必须提前知道树节点数据。 使用客户端脚本可防止每次展开或折叠节点时都回发到服务器。

 如果事先不知道树节点数据，则可以从客户端填充节点（如果 `PopulateNodesFromClient` 还将属性设置为） `true` 。 在这种情况下，您还必须为事件提供事件处理方法 <xref:System.Web.UI.WebControls.TreeView.TreeNodePopulate> 来填充节点。 有关客户端节点填充的详细信息，请参阅 <xref:System.Web.UI.WebControls.TreeView.PopulateNodesFromClient%2A> 。

> [!NOTE]
>  如果将 <xref:System.Web.UI.WebControls.TreeView.EnableClientScript%2A> 属性设置为 `false` ，则在 <xref:System.Web.UI.WebControls.TreeView> 每次展开或折叠某个节点时，控件都将回发到服务器。

 此属性的值存储在视图状态中。

 无法通过主题或样式表主题设置此属性。 有关详细信息，请参阅 <xref:System.Web.UI.ThemeableAttribute> 和 [ASP.NET 主题和外观](https://docs.microsoft.com/previous-versions/aspnet/ykzx33wh(v=vs.100))。



## Examples
 本部分包含两个代码示例。 第一个代码示例演示如何使用 <xref:System.Web.UI.WebControls.TreeView.EnableClientScript%2A> 属性来呈现客户端脚本，该脚本用于在兼容的浏览器上展开和折叠节点。 第二个代码示例提供了第一个代码示例的示例 XML 数据。

 下面的代码示例演示如何使用 <xref:System.Web.UI.WebControls.TreeView.EnableClientScript%2A> 属性来呈现客户端脚本，该脚本用于在兼容的浏览器上展开和折叠节点。 请注意，当属性设置为时，需要向服务器发送一条内容来展开和折叠节点 <xref:System.Web.UI.WebControls.TreeView.EnableClientScript%2A> `false` 。 若要使此示例正常工作，必须将示例 XML 数据（在此代码示例之后提供）复制到名为 Book.xml 的文件中。

 [!code-aspx-csharp[TreeViewEnableClientScript#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewEnableClientScript/CS/treeviewenableclientscriptcs.aspx#1)]
 [!code-aspx-vb[TreeViewEnableClientScript#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewEnableClientScript/VB/treeviewenableclientscriptvb.aspx#1)]

 下面的代码示例提供了前面的代码示例的示例 XML 数据。

```
<Book Title="Book Title">
    <Chapter Heading="Chapter 1">
        <Section Heading="Section 1">
        </Section>
        <Section Heading="Section 2">
        </Section>
    </Chapter>
    <Chapter Heading="Chapter 2">
        <Section Heading="Section 1">
        </Section>
    </Chapter>
</Book>
```

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.TreeView.PopulateNodesFromClient" />
        <altmember cref="E:System.Web.UI.WebControls.TreeView.TreeNodePopulate" />
      </Docs>
    </Member>
    <Member MemberName="ExpandAll">
      <MemberSignature Language="C#" Value="public void ExpandAll ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ExpandAll() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.ExpandAll" />
      <MemberSignature Language="VB.NET" Value="Public Sub ExpandAll ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ExpandAll();" />
      <MemberSignature Language="F#" Value="member this.ExpandAll : unit -&gt; unit" Usage="treeView.ExpandAll " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>打开树中的每个节点。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.TreeView.ExpandAll%2A>方法提供了一种简便的方法来打开树中的每个节点。



## Examples
 下面的代码示例演示如何使用 <xref:System.Web.UI.WebControls.TreeView.ExpandAll%2A> 方法同时展开控件中的所有节点 <xref:System.Web.UI.WebControls.TreeView> 。

 [!code-aspx-csharp[TreeViewExpandAll#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewExpandAll/CS/treeviewexpandallcs.aspx#1)]
 [!code-aspx-vb[TreeViewExpandAll#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewExpandAll/VB/treeviewexpandallvb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.TreeView.CollapseAll" />
      </Docs>
    </Member>
    <Member MemberName="ExpandDepth">
      <MemberSignature Language="C#" Value="public int ExpandDepth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ExpandDepth" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.ExpandDepth" />
      <MemberSignature Language="VB.NET" Value="Public Property ExpandDepth As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ExpandDepth { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.ExpandDepth : int with get, set" Usage="System.Web.UI.WebControls.TreeView.ExpandDepth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(-1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(-1)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.TypeConverter(typeof(System.Web.UI.WebControls.TreeView/TreeViewExpandDepthConverter))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.TypeConverter(typeof(System.Web.UI.WebControls.TreeView/TreeViewExpandDepthConverter))&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置第一次显示 <see cref="T:System.Web.UI.WebControls.TreeView" /> 控件时所展开的层次数。</summary>
        <value>最初显示 <see cref="T:System.Web.UI.WebControls.TreeView" /> 时要显示的深度。 默认值为 -1，表示显示所有节点。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 使用 <xref:System.Web.UI.WebControls.TreeView.ExpandDepth%2A> 属性可控制 <xref:System.Web.UI.WebControls.TreeView> 控件第一次显示时的呈现。 在后续回发中，节点将保留其当前的展开状态。

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.TreeView.LevelStyles" />
        <altmember cref="M:System.Web.UI.WebControls.TreeView.ExpandAll" />
        <altmember cref="M:System.Web.UI.WebControls.TreeView.CollapseAll" />
      </Docs>
    </Member>
    <Member MemberName="ExpandImageToolTip">
      <MemberSignature Language="C#" Value="public string ExpandImageToolTip { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ExpandImageToolTip" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.ExpandImageToolTip" />
      <MemberSignature Language="VB.NET" Value="Public Property ExpandImageToolTip As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ExpandImageToolTip { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ExpandImageToolTip : string with get, set" Usage="System.Web.UI.WebControls.TreeView.ExpandImageToolTip" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Localizable(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Localizable(true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置可展开节点的指示符所显示图像的工具提示。</summary>
        <value>可展开节点的指示符所显示图像的工具提示。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 使用 " <xref:System.Web.UI.WebControls.TreeView.ExpandImageToolTip%2A> 属性" 指定图像的工具提示。 指定的文本为辅助技术设备提供了可用于使控件更易于访问的图像说明。

 此属性的值存储在视图状态中。

 设置此属性后，可以使用设计器工具自动将此属性的值保存到资源文件中。 有关详细信息，请参阅 <xref:System.ComponentModel.LocalizableAttribute> 和 [全球化和本地化](https://docs.microsoft.com/previous-versions/aspnet/c6zyy3s9(v=vs.100))。



## Examples
 下面的代码示例演示如何使用 <xref:System.Web.UI.WebControls.TreeView.ExpandImageToolTip%2A> 属性为可展开节点的指示符显示的图像指定工具提示。

 [!code-aspx-csharp[TreeViewCustomImage#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewCustomImage/CS/treeviewcustomimagecs.aspx#1)]
 [!code-aspx-vb[TreeViewCustomImage#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewCustomImage/VB/treeviewcustomimagevb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.TreeView.CollapseImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.CollapseImageToolTip" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ExpandImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ImageSet" />
      </Docs>
    </Member>
    <Member MemberName="ExpandImageUrl">
      <MemberSignature Language="C#" Value="public string ExpandImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ExpandImageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.ExpandImageUrl" />
      <MemberSignature Language="VB.NET" Value="Public Property ExpandImageUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ExpandImageUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ExpandImageUrl : string with get, set" Usage="System.Web.UI.WebControls.TreeView.ExpandImageUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue("")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue("")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName Language="C#">[System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.UrlProperty]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.UrlProperty&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置自定义图像的 URL，该图像用作可展开节点的指示符。</summary>
        <value>为可展开节点所显示的自定义图像的 URL。 默认值为空字符串 ("")，这将显示默认的加号 (+) 图像。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 使用 <xref:System.Web.UI.WebControls.TreeView.ExpandImageUrl%2A> 属性为可展开节点的指示符指定自定义图像。 此图像显示在可扩展节点旁边，通常为加号 (+) 。

 当 <xref:System.Web.UI.WebControls.TreeView.ShowExpandCollapse%2A> 属性设置为时 `true` ，控件将 <xref:System.Web.UI.WebControls.TreeView> 在节点旁显示加号 (+) 或减号 ( ) 或一个占位符图像，以指示节点是可展开、可折叠还是不可展开。 通过首先将 <xref:System.Web.UI.WebControls.TreeView.ImageSet%2A> 属性设置为 `TreeViewImageSet.Custom` ，然后将 <xref:System.Web.UI.WebControls.TreeView.NoExpandImageUrl%2A> 、和属性设置为 <xref:System.Web.UI.WebControls.TreeView.ExpandImageUrl%2A> <xref:System.Web.UI.WebControls.TreeView.CollapseImageUrl%2A> 自定义图像的 url，可以指定自定义映像。 如果未指定任何图像，则使用默认图像。 若要隐藏展开节点指示符，请将 <xref:System.Web.UI.WebControls.TreeView.ShowExpandCollapse%2A> 属性设置为 `false` 。

> [!NOTE]
>  若要确保在 <xref:System.Web.UI.WebControls.TreeView> 使用自定义图像时节点正确地在控件中对齐，请确保、和属性指定的所有 <xref:System.Web.UI.WebControls.TreeView.NoExpandImageUrl%2A> 图像 <xref:System.Web.UI.WebControls.TreeView.ExpandImageUrl%2A> <xref:System.Web.UI.WebControls.TreeView.CollapseImageUrl%2A> 具有相同的尺寸。

 若要正确显示自定义图像，可能需要将设置 <xref:System.Web.UI.WebControls.TreeView.ShowLines%2A> 为 `false` 。

 使用自定义图像作为可展开节点的指示符时，还应考虑将 <xref:System.Web.UI.WebControls.TreeView.ExpandImageToolTip%2A> 属性设置为为图像指定工具提示。

 此属性的值存储在视图状态中。



## Examples
 下面的代码示例演示如何使用 <xref:System.Web.UI.WebControls.TreeView.ExpandImageUrl%2A> 属性为可展开节点的指示符指定自定义图像。 要使代码示例显示和图像显示在控件中，必须提供自己的图像，并且 <xref:System.Web.UI.WebControls.TreeView.ImageSet%2A> 属性必须设置为 `TreeNodeImageSet.Custom` 。

 [!code-aspx-csharp[TreeViewCustomImage#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewCustomImage/CS/treeviewcustomimagecs.aspx#1)]
 [!code-aspx-vb[TreeViewCustomImage#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewCustomImage/VB/treeviewcustomimagevb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ShowExpandCollapse" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ImageSet" />
        <altmember cref="T:System.Web.UI.WebControls.TreeViewImageSet" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.CollapseImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.NoExpandImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ExpandImageToolTip" />
      </Docs>
    </Member>
    <Member MemberName="FindNode">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TreeNode FindNode (string valuePath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.UI.WebControls.TreeNode FindNode(string valuePath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.FindNode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindNode (valuePath As String) As TreeNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::UI::WebControls::TreeNode ^ FindNode(System::String ^ valuePath);" />
      <MemberSignature Language="F#" Value="member this.FindNode : string -&gt; System.Web.UI.WebControls.TreeNode" Usage="treeView.FindNode valuePath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TreeNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="valuePath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="valuePath">节点的值路径。</param>
        <summary>检索 <see cref="T:System.Web.UI.WebControls.TreeNode" /> 控件中指定值路径处的 <see cref="T:System.Web.UI.WebControls.TreeView" /> 对象。</summary>
        <returns>指定值路径处的 <see cref="T:System.Web.UI.WebControls.TreeNode" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 使用 <xref:System.Web.UI.WebControls.TreeView.FindNode%2A> 方法可从 <xref:System.Web.UI.WebControls.TreeView> 控件中的指定值路径获取节点。 值路径包含以分隔符分隔的节点值列表，这些值构成从根节点到当前节点的路径。 每个节点将其值路径存储在 <xref:System.Web.UI.WebControls.TreeNode.ValuePath%2A> 属性中。 <xref:System.Web.UI.WebControls.TreeView.PathSeparator%2A>属性指定用于分隔节点值的分隔符字符。



## Examples
 下面的代码示例演示如何使用 <xref:System.Web.UI.WebControls.TreeView.FindNode%2A> 方法从控件中检索节点 <xref:System.Web.UI.WebControls.TreeView> 。

> [!IMPORTANT]
>  此示例具有一个接受用户输入的文本框，这是一个潜在的安全威胁。 默认情况下，ASP.NET 网页验证用户输入是否不包含脚本或 HTML 元素。 有关详细信息，请参阅[脚本侵入概述](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100))。

 [!code-aspx-csharp[TreeViewFindNode#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewFindNode/CS/treeviewfindnodecs.aspx#1)]
 [!code-aspx-vb[TreeViewFindNode#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewFindNode/VB/treeviewfindnodevb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeNode" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.ValuePath" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.PathSeparator" />
      </Docs>
    </Member>
    <Member MemberName="GetCallbackResult">
      <MemberSignature Language="C#" Value="protected virtual string GetCallbackResult ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string GetCallbackResult() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.GetCallbackResult" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetCallbackResult () As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ GetCallbackResult();" />
      <MemberSignature Language="F#" Value="abstract member GetCallbackResult : unit -&gt; string&#xA;override this.GetCallbackResult : unit -&gt; string" Usage="treeView.GetCallbackResult " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>返回以控件为目标的回调事件的结果。</summary>
        <returns>回调的结果。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.TreeView>控件实现 <xref:System.Web.UI.ICallbackEventHandler> 接口，并使用 <xref:System.Web.UI.WebControls.TreeView.RaisePostBackEvent%2A> 来检索数据，并使用方法将检索到的 <xref:System.Web.UI.WebControls.TreeView.GetCallbackResult%2A> 数据返回到控件。

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HoverNodeStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.Style HoverNodeStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.Style HoverNodeStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.HoverNodeStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HoverNodeStyle As Style" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::Style ^ HoverNodeStyle { System::Web::UI::WebControls::Style ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.HoverNodeStyle : System.Web.UI.WebControls.Style" Usage="System.Web.UI.WebControls.TreeView.HoverNodeStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(null)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(null)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.NotifyParentProperty(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.NotifyParentProperty(true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Style</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取对 <see cref="T:System.Web.UI.WebControls.TreeNodeStyle" /> 对象的引用，该对象可用于设置当鼠标指针停在一个节点上时该节点的外观。</summary>
        <value>对 <see cref="T:System.Web.UI.WebControls.TreeNodeStyle" /> 的一个引用，表示鼠标指针停在一个节点上时该节点的样式。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A>当鼠标指针位于节点上时，使用属性控制该节点的外观。 此属性是只读的;但是，您可以设置 <xref:System.Web.UI.WebControls.TreeNodeStyle> 它返回的对象的属性。 可以在窗体中以声明方式设置这些属性 `Property-Subproperty` ，其中 `Subproperty` 是对象的属性 <xref:System.Web.UI.WebControls.TreeNodeStyle> (例如 `HoverNodeStyle-ForeColor`) 。 还可以以编程方式设置属性 `Property.Subproperty` ， (例如 `HoverNodeStyle.ForeColor`) 。 仅支持脚本的客户端支持此功能。

> [!NOTE]
>  若要使用 <xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A> 属性，必须包含 `<head>` 具有属性的元素 `runat="server"` 。

 常见设置通常包括自定义背景色、前景颜色、字体属性和节点间距。 样式属性的应用顺序如下：

1.  <xref:System.Web.UI.WebControls.TreeView.NodeStyle%2A>.

2.  <xref:System.Web.UI.WebControls.TreeView.RootNodeStyle%2A>、 <xref:System.Web.UI.WebControls.TreeView.ParentNodeStyle%2A> 或 <xref:System.Web.UI.WebControls.TreeView.LeafNodeStyle%2A> ，具体取决于节点类型。 如果 <xref:System.Web.UI.WebControls.TreeView.LevelStyles%2A> 定义了集合，则此时将应用该集合，并重写其他节点样式属性。

3.  <xref:System.Web.UI.WebControls.TreeView.SelectedNodeStyle%2A>.

4.  <xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A>.

> [!NOTE]
>  属性的样式设置 <xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A> 会重写、、、 <xref:System.Web.UI.WebControls.TreeView.NodeStyle%2A> <xref:System.Web.UI.WebControls.TreeView.RootNodeStyle%2A> <xref:System.Web.UI.WebControls.TreeView.ParentNodeStyle%2A> <xref:System.Web.UI.WebControls.TreeView.LeafNodeStyle%2A> 或 <xref:System.Web.UI.WebControls.TreeView.SelectedNodeStyle%2A> 属性中的任何相应的节点样式设置。

 <xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A>对于其属性设置为的节点，不呈现属性 <xref:System.Web.UI.WebControls.TreeNode.SelectAction%2A> `TreeNodeSelectAction.None` 。

 与 <xref:System.Web.UI.WebControls.TreeView.ParentNodeStyle%2A> 和 <xref:System.Web.UI.WebControls.TreeView.LeafNodeStyle%2A> 属性（即 <xref:System.Web.UI.WebControls.TreeNodeStyle> 对象）不同， <xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A> 属性是一个 <xref:System.Web.UI.WebControls.Style> 对象。



## Examples
 下面的代码示例演示如何使用 <xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A> 属性来控制当鼠标指针位于节点上时该节点的外观。 要使此示例正常运行，必须包含一个 `<head>` 具有属性的元素 `runat="server"` 。

 [!code-aspx-csharp[TreeViewHoverNodeStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewHoverNodeStyle/CS/treeviewhovernodestylecs.aspx#1)]
 [!code-aspx-vb[TreeViewHoverNodeStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewHoverNodeStyle/VB/treeviewhovernodestylevb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.LeafNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.NodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ParentNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.RootNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.SelectedNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.LevelStyles" />
      </Docs>
    </Member>
    <Member MemberName="ImageSet">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TreeViewImageSet ImageSet { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.TreeViewImageSet ImageSet" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.ImageSet" />
      <MemberSignature Language="VB.NET" Value="Public Property ImageSet As TreeViewImageSet" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TreeViewImageSet ImageSet { System::Web::UI::WebControls::TreeViewImageSet get(); void set(System::Web::UI::WebControls::TreeViewImageSet value); };" />
      <MemberSignature Language="F#" Value="member this.ImageSet : System.Web.UI.WebControls.TreeViewImageSet with get, set" Usage="System.Web.UI.WebControls.TreeView.ImageSet" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TreeViewImageSet</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置用于 <see cref="T:System.Web.UI.WebControls.TreeView" /> 控件的图像组。</summary>
        <value><see cref="T:System.Web.UI.WebControls.TreeViewImageSet" /> 值之一。 默认为 <see langword="TreeViewImageSet.Custom" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 使用 " <xref:System.Web.UI.WebControls.TreeView.ImageSet%2A> 属性" 指定用于控件的图像组 <xref:System.Web.UI.WebControls.TreeView> 。 你可以选择一组预定义的映像，以使该控件具有标准外观，或定义你自己的自定义集。

> [!NOTE]
>  <xref:System.Web.UI.WebControls.TreeView.ImageSet%2A>属性不影响节点的任何样式设置。 <xref:System.Web.UI.WebControls.TreeView.NodeStyle%2A>如果要添加自定义颜色和间距，请设置相应的样式属性（如属性）。

 下表列出了属性的有效值 <xref:System.Web.UI.WebControls.TreeView.ImageSet%2A> 。

|映像集|说明|
|---------------|-----------------|
|`TreeViewImageSet.Arrows`|使用箭头图像的预定义图像集。|
|`TreeViewImageSet.BulletedList`|使用菱形项目符号图像的预定义图像集。|
|`TreeViewImageSet.BulletedList2`|使用正方形形项目符号图像的预定义图像集。|
|`TreeViewImageSet.BulletedList3`|预定义的、分节的菱形项目符号图像集。|
|`TreeViewImageSet.BulletedList4`|预定义的、大小随级别不同而变化的、分节的备用菱形项目符号图像集。|
|`TreeViewImageSet.Contacts`|使用 MSN Messenger 映像的预定义映像集。|
|`TreeViewImageSet.Custom`|用户定义的图像集。|
|`TreeViewImageSet.Events`|使用事件日志样式的图像的预定义图像集。|
|`TreeViewImageSet.Faq`|使用 FAQ 样式的图像的预定义图像集。|
|`TreeViewImageSet.Inbox`|使用电子邮件样式的图像的预定义图像集。|
|`TreeViewImageSet.News`|使用新闻组样式的图像的预定义图像集。|
|`TreeViewImageSet.Simple`|使用简单形状轮廓的预定义图像集。|
|`TreeViewImageSet.Simple2`|使用简单填充形状的预定义图像集。|
|`TreeViewImageSet.Msdn`|使用 MSDN 映像的预定义映像集。|
|`TreeViewImageSet.WindowsHelp`|使用 Microsoft Windows 帮助图像的预定义映像集。|
|`TreeViewImageSet.XPFileExplorer`|使用在 Microsoft Windows XP 中可用的 Windows 资源管理器映像的预定义映像集。|

 定义一组自定义图像时，应该为下表中的每个属性指定一个映像。 否则，将使用该属性的默认图像。

|Property|说明|
|--------------|-----------------|
|<xref:System.Web.UI.WebControls.TreeView.CollapseImageUrl%2A>|可折叠节点的指示符的自定义图像的 URL。|
|<xref:System.Web.UI.WebControls.TreeView.ExpandImageUrl%2A>|可展开节点的指示符的自定义图像的 URL。|
|<xref:System.Web.UI.WebControls.TreeView.LineImagesFolder%2A>|包含连接节点的线条的自定义图像的文件夹的 URL。|
|<xref:System.Web.UI.WebControls.TreeView.NoExpandImageUrl%2A>|不可展开节点指示符的自定义图像的 URL。|

 此属性的值存储在视图状态中。



## Examples
 下面的代码示例演示如何使用属性在 <xref:System.Web.UI.WebControls.TreeView.ImageSet%2A> 控件中显示 Windows 资源管理器的图像集 <xref:System.Web.UI.WebControls.TreeView> 。

 [!code-aspx-csharp[TreeViewImageSet#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewImageSet/CS/treeviewimagesetcs.aspx#1)]
 [!code-aspx-vb[TreeViewImageSet#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewImageSet/VB/treeviewimagesetvb.aspx#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">指定的图像集不是 <see cref="T:System.Web.UI.WebControls.TreeViewImageSet" /> 值之一。</exception>
        <altmember cref="T:System.Web.UI.WebControls.TreeViewImageSet" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.NoExpandImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.CollapseImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ExpandImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.HoverNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.LineImagesFolder" />
      </Docs>
    </Member>
    <Member MemberName="LeafNodeStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TreeNodeStyle LeafNodeStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TreeNodeStyle LeafNodeStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.LeafNodeStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LeafNodeStyle As TreeNodeStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TreeNodeStyle ^ LeafNodeStyle { System::Web::UI::WebControls::TreeNodeStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LeafNodeStyle : System.Web.UI.WebControls.TreeNodeStyle" Usage="System.Web.UI.WebControls.TreeView.LeafNodeStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(null)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(null)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.NotifyParentProperty(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.NotifyParentProperty(true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TreeNodeStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取对 <see cref="T:System.Web.UI.WebControls.TreeNodeStyle" /> 对象的引用，该对象可用于设置叶节点的外观。</summary>
        <value>对 <see cref="T:System.Web.UI.WebControls.TreeNodeStyle" /> 的一个引用，表示 <see cref="T:System.Web.UI.WebControls.TreeView" /> 中叶节点的样式。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 使用 <xref:System.Web.UI.WebControls.TreeView.LeafNodeStyle%2A> 属性可控制控件中叶节点的外观 <xref:System.Web.UI.WebControls.TreeView> 。 此属性是只读的;但是，您可以设置 <xref:System.Web.UI.WebControls.TreeNodeStyle> 它返回的对象的属性。 可以在窗体中以声明方式设置这些属性 `Property-Subproperty` ，其中 `Subproperty` 是对象的属性 <xref:System.Web.UI.WebControls.TreeNodeStyle> (例如 `LeafNodeStyle-ForeColor`) 。 还可以以编程方式设置属性 `Property.Subproperty` ， (例如 `LeafNodeStyle.ForeColor`) 。 常见设置通常包括自定义背景色、前景颜色、字体属性和节点间距。 样式属性按以下优先级顺序应用：

1.  <xref:System.Web.UI.WebControls.TreeView.NodeStyle%2A>.

2.  <xref:System.Web.UI.WebControls.TreeView.RootNodeStyle%2A>、 <xref:System.Web.UI.WebControls.TreeView.ParentNodeStyle%2A> 或 <xref:System.Web.UI.WebControls.TreeView.LeafNodeStyle%2A> ，具体取决于节点类型。 如果 <xref:System.Web.UI.WebControls.TreeView.LevelStyles%2A> 定义了集合，则此时将应用该集合，并重写其他节点样式属性。

3.  <xref:System.Web.UI.WebControls.TreeView.SelectedNodeStyle%2A>.

4.  <xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A>.

 如果需要生成目录样式的导航菜单，其中某一级别的节点应具有相同的外观，无论它们是否具有子节点，都可以考虑使用 <xref:System.Web.UI.WebControls.TreeView.LevelStyles%2A> 属性，而不是设置各个样式属性。



## Examples
 下面的代码示例演示如何使用 <xref:System.Web.UI.WebControls.TreeView.LeafNodeStyle%2A> 属性来控制控件中叶节点的外观 <xref:System.Web.UI.WebControls.TreeView> 。

 [!code-aspx-csharp[TreeViewLeafNodeStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewLeafNodeStyle/CS/treeviewleafnodestylecs.aspx#1)]
 [!code-aspx-vb[TreeViewLeafNodeStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewLeafNodeStyle/VB/treeviewleafnodestylevb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.HoverNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.NodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ParentNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.RootNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.SelectedNodeStyle" />
      </Docs>
    </Member>
    <Member MemberName="LevelStyles">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TreeNodeStyleCollection LevelStyles { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TreeNodeStyleCollection LevelStyles" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.LevelStyles" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LevelStyles As TreeNodeStyleCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TreeNodeStyleCollection ^ LevelStyles { System::Web::UI::WebControls::TreeNodeStyleCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LevelStyles : System.Web.UI.WebControls.TreeNodeStyleCollection" Usage="System.Web.UI.WebControls.TreeView.LevelStyles" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(null)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(null)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName Language="C#">[System.ComponentModel.Editor("System.Web.UI.Design.WebControls.TreeNodeStyleCollectionEditor,System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Editor("System.Web.UI.Design.WebControls.TreeNodeStyleCollectionEditor,System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.Editor("System.Web.UI.Design.WebControls.TreeNodeStyleCollectionEditor,System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Editor("System.Web.UI.Design.WebControls.TreeNodeStyleCollectionEditor,System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TreeNodeStyleCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取 <see cref="T:System.Web.UI.WebControls.Style" /> 对象的集合，这些对象表示树中各个级别上的节点样式。</summary>
        <value>表示树中各个级别上的节点样式的一个 <see cref="T:System.Web.UI.WebControls.StyleCollection" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 使用 <xref:System.Web.UI.WebControls.TreeView.LevelStyles%2A> 集合作为各个样式属性的替代项 (如 <xref:System.Web.UI.WebControls.TreeView.NodeStyle%2A> 属性) 控制树的各个级别上的节点样式。 集合中的第一种样式对应于树的第一个级别中的节点样式。 集合中的第二个样式对应于树第二级的节点样式，依此类推。 此属性最常用于生成目录样式的导航菜单，其中某个级别的节点应具有相同的外观，而不考虑它们是否具有子节点。

 样式属性的应用顺序如下：

1.  <xref:System.Web.UI.WebControls.TreeView.NodeStyle%2A>.

2.  <xref:System.Web.UI.WebControls.TreeView.RootNodeStyle%2A>、 <xref:System.Web.UI.WebControls.TreeView.ParentNodeStyle%2A> 或 <xref:System.Web.UI.WebControls.TreeView.LeafNodeStyle%2A> ，具体取决于节点类型。 如果 <xref:System.Web.UI.WebControls.TreeView.LevelStyles%2A> 定义了集合，则此时将应用该集合，并重写其他节点样式属性。

3.  <xref:System.Web.UI.WebControls.TreeView.SelectedNodeStyle%2A>.

4.  <xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A>



## Examples
 下面的代码示例演示如何使用 <xref:System.Web.UI.WebControls.TreeView.LevelStyles%2A> 属性创建导航菜单。 控件始终完全展开，并隐藏展开节点指示符和图像。 此外，该 <xref:System.Web.UI.WebControls.TreeNodeStyle.ChildNodesPadding%2A> 属性用于控制节点级别的间距。

 [!code-aspx-csharp[TreeViewLevelStyles#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewLevelStyles/CS/treeviewlevelstylescs.aspx#1)]
 [!code-aspx-vb[TreeViewLevelStyles#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewLevelStyles/VB/treeviewlevelstylesvb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Style" />
        <altmember cref="T:System.Web.UI.WebControls.StyleCollection" />
        <altmember cref="T:System.Web.UI.WebControls.TreeNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.HoverNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.LeafNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.NodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ParentNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.RootNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.SelectedNodeStyle" />
      </Docs>
    </Member>
    <Member MemberName="LineImagesFolder">
      <MemberSignature Language="C#" Value="public string LineImagesFolder { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LineImagesFolder" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.LineImagesFolder" />
      <MemberSignature Language="VB.NET" Value="Public Property LineImagesFolder As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ LineImagesFolder { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.LineImagesFolder : string with get, set" Usage="System.Web.UI.WebControls.TreeView.LineImagesFolder" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue("")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue("")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置文件夹的路径，该文件夹包含用于连接子节点和父节点的线条图像。</summary>
        <value>用于连接各节点的线条图像所属文件夹的路径。 默认值为空字符串 ("")，表示尚未设置 <see cref="P:System.Web.UI.WebControls.TreeView.LineImagesFolder" /> 属性。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.TreeView>当属性设置为时，控件可以显示将子节点连接到父节点的行 <xref:System.Web.UI.WebControls.TreeView.ShowLines%2A> `true` 。 显示行时，使用 <xref:System.Web.UI.WebControls.TreeView.LineImagesFolder%2A> 属性指定一个 Web 可访问的文件夹，其中包含用于线条的一组预呈现图像。 下表描述了控件使用的图像 <xref:System.Web.UI.WebControls.TreeView> 。

|映像|说明|
|-----------|-----------------|
|Dash.gif|当树结构中只有一个根节点并且根节点为叶节点时，将在根节点旁边显示一个线条图像。|
|Dashminus.gif|当树结构中只有一个根节点时，将在根节点旁显示一个减号 ( ) 图像，以指示扩展根节点。|
|Dashplus.gif|当树结构中仅有一个根节点指示根节点处于折叠状态时，将在根节点旁显示一个加号 (+) 图像。|
|I.gif|显示用于连接相邻节点的线条图像。|
|L.gif|当节点为叶节点时，该节点的最后一个节点旁显示的线条图像。|
|Lminus.gif|在分支中的最后一个节点旁显示的线条图像，用于指示该节点已展开。|
|Lplus.gif|在分支中的最后一个节点旁显示的线条图像，用于指示该节点处于折叠状态。|
|Minus.gif|在包含多个根节点的树结构中的第一个根节点旁显示的减号 ( ) 图像，指示该节点已展开。 此图像不包含额外的行，并且仅在根节点折叠一次后显示。 第一次加载页面时，将显示 Rminus.gif 图像。|
|Noexpand.gif|显示在叶节点旁边的空白空白图像。 此图像允许文本垂直对齐。|
|Plus.gif|在包含多个根节点的树结构中的第一个根节点旁显示一个加号 (+) 图像，指示该节点已折叠。 此图像不包含额外的行，并且仅在根节点展开一次后显示。 第一次加载页面时，将显示 Rplus.gif 图像。|
|R.gif|在包含多个根节点的树结构中的第一个根节点旁显示的线条图像，用于指示该节点是一个叶节点。|
|Rminus.gif|在包含多个根节点的树结构中的第一个根节点旁显示的减号 ( ) 图像，指示该节点已展开。 此图像包含额外的行，并且仅在第一次加载页面时才显示。 根节点经过折叠后，将显示 Minus.gif 图像。|
|Rplus.gif|在包含多个根节点的树结构中的第一个根节点旁显示一个加号 (+) 图像，指示该节点已折叠。 此图像包含额外的行，并且仅在第一次加载页面时才显示。 根节点展开一次后，将显示 Plus.gif 图像。|
|T.gif|在树结构中间显示的、在 t 交)  (的线条图像，用于指示该节点为叶节点。|
|Tminus.gif|在树结构中间显示的一个减号 ( ) 图像， (位于 t 交) ，以指示该节点已展开。|
|Tplus.gif|在树结构中间显示的加号 (+) 图像， (t 交集) 上的节点，以指示节点已折叠。|

> [!NOTE]
>  如果 <xref:System.Web.UI.WebControls.TreeView.LineImagesFolder%2A> 未设置该属性，则 <xref:System.Web.UI.WebControls.TreeView> 控件将使用内置的默认图像 (20 x 20 像素) 。

 某些可视化设计器（如 Microsoft Visual Studio）提供了用于生成行图像的工具。

 对于从右到左的显示，运行时间不会反转自定义图像。 若要同时支持从左到右和从右到左的网页，必须为这两个方向创建图像集。

 此属性的值存储在视图状态中。



## Examples
 下面的代码示例演示如何使用 <xref:System.Web.UI.WebControls.TreeView.LineImagesFolder%2A> 属性指定包含要在控件中显示的行图像的文件夹 <xref:System.Web.UI.WebControls.TreeView> 。 若要使用此示例，请事先使用线条设计器工具创建一组线条图像。 将其放在示例应用程序的目录中名为 LineImages 的文件夹中。

 [!code-aspx-csharp[TreeViewLineImagesFolderUrl#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewLineImagesFolderUrl/CS/treeviewlineimagesfolderurlcs.aspx#1)]
 [!code-aspx-vb[TreeViewLineImagesFolderUrl#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewLineImagesFolderUrl/VB/treeviewlineimagesfolderurlvb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ShowLines" />
        <altmember cref="T:System.Web.UI.WebControls.TreeViewImageSet" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.NoExpandImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.CollapseImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ExpandImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.HoverNodeStyle" />
      </Docs>
    </Member>
    <Member MemberName="LoadPostData">
      <MemberSignature Language="C#" Value="protected virtual bool LoadPostData (string postDataKey, System.Collections.Specialized.NameValueCollection postCollection);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LoadPostData(string postDataKey, class System.Collections.Specialized.NameValueCollection postCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LoadPostData (postDataKey As String, postCollection As NameValueCollection) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LoadPostData(System::String ^ postDataKey, System::Collections::Specialized::NameValueCollection ^ postCollection);" />
      <MemberSignature Language="F#" Value="abstract member LoadPostData : string * System.Collections.Specialized.NameValueCollection -&gt; bool&#xA;override this.LoadPostData : string * System.Collections.Specialized.NameValueCollection -&gt; bool" Usage="treeView.LoadPostData (postDataKey, postCollection)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="postDataKey" Type="System.String" />
        <Parameter Name="postCollection" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="postDataKey">控件的主要标识符。</param>
        <param name="postCollection">所有传入名称值的集合。</param>
        <summary>处理 <see cref="T:System.Web.UI.WebControls.TreeView" /> 控件的回发数据。</summary>
        <returns>如果 <see cref="T:System.Web.UI.WebControls.TreeView" /> 控件的状态由于回发事件而发生更改，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 ASP.NET 页框架跟踪从方法调用返回的所有服务器控件 `true` <xref:System.Web.UI.WebControls.TreeView.LoadPostData%2A> ，然后 <xref:System.Web.UI.WebControls.TreeView.RaisePostDataChangedEvent%2A> 在这些控件上调用方法。

 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.TreeView.RaisePostDataChangedEvent" />
      </Docs>
    </Member>
    <Member MemberName="LoadViewState">
      <MemberSignature Language="C#" Value="protected override void LoadViewState (object state);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void LoadViewState(object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.LoadViewState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub LoadViewState (state As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void LoadViewState(System::Object ^ state);" />
      <MemberSignature Language="F#" Value="override this.LoadViewState : obj -&gt; unit" Usage="treeView.LoadViewState state" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="state">包含为该控件保存的视图状态值的对象。</param>
        <summary>加载以前保存的 <see cref="T:System.Web.UI.WebControls.TreeView" /> 控件的视图状态。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxDataBindDepth">
      <MemberSignature Language="C#" Value="public int MaxDataBindDepth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxDataBindDepth" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.MaxDataBindDepth" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxDataBindDepth As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxDataBindDepth { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MaxDataBindDepth : int with get, set" Usage="System.Web.UI.WebControls.TreeView.MaxDataBindDepth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(-1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(-1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置要绑定到 <see cref="T:System.Web.UI.WebControls.TreeView" /> 控件的最大树级别数。</summary>
        <value>绑定到 <see cref="T:System.Web.UI.WebControls.TreeView" /> 控件的最大树级别数。 默认值为 -1，这会将数据源中的所有树级别绑定到该控件。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 将控件绑定 <xref:System.Web.UI.WebControls.TreeView> 到数据源时，请使用 <xref:System.Web.UI.WebControls.TreeView.MaxDataBindDepth%2A> 属性限制要绑定到控件的树级别数。 例如，将此属性设置为 `2` 仅将根节点和根节点下的任何节点绑定到 <xref:System.Web.UI.WebControls.TreeView> 控件。 数据源中的所有剩余节点均被忽略。

> [!IMPORTANT]
>  恶意用户可以创建回调请求并获取 <xref:System.Web.UI.WebControls.TreeView> 页面开发人员未显示的控件节点的数据。 因此，数据的安全必须由数据源实现。 不要使用 <xref:System.Web.UI.WebControls.TreeView.MaxDataBindDepth%2A> 属性来隐藏数据。

 此属性的值存储在视图状态中。



## Examples
 本部分包含两个代码示例。 第一个代码示例演示如何使用 <xref:System.Web.UI.WebControls.TreeView.MaxDataBindDepth%2A> 属性来仅绑定 (深度0和 1) 到控件的前两个节点级别 <xref:System.Web.UI.WebControls.TreeView> 。 第二个代码示例提供了第一个代码示例的示例 XML 数据。

 下面的代码示例演示如何使用 <xref:System.Web.UI.WebControls.TreeView.MaxDataBindDepth%2A> 属性来仅绑定 (深度0和 1) 到控件的前两个节点级别 <xref:System.Web.UI.WebControls.TreeView> 。 数据源中的所有节点级别都将被忽略。 若要使此示例正常工作，必须将示例 XML 数据（在此代码示例之后提供）复制到名为 Book.xml 的文件中。

 [!code-aspx-csharp[TreeViewMaxDataBindDepth#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewMaxDataBindDepth/CS/treeviewmaxdatabinddepthcs.aspx#1)]
 [!code-aspx-vb[TreeViewMaxDataBindDepth#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewMaxDataBindDepth/VB/treeviewmaxdatabinddepthvb.aspx#1)]

 下面的代码示例提供了前面的代码示例的示例 XML 数据。

```
<Book Title="Book Title">
    <Chapter Heading="Chapter 1">
        <Section Heading="Section 1">
        </Section>
        <Section Heading="Section 2">
        </Section>
    </Chapter>
    <Chapter Heading="Chapter 2">
        <Section Heading="Section 1">
        </Section>
    </Chapter>
</Book>
```

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">选定值小于 <see langword="-1" />。</exception>
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ExpandDepth" />
      </Docs>
    </Member>
    <Member MemberName="NodeIndent">
      <MemberSignature Language="C#" Value="public int NodeIndent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 NodeIndent" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.NodeIndent" />
      <MemberSignature Language="VB.NET" Value="Public Property NodeIndent As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int NodeIndent { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.NodeIndent : int with get, set" Usage="System.Web.UI.WebControls.TreeView.NodeIndent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(20)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(20)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置 <see cref="T:System.Web.UI.WebControls.TreeView" /> 控件的子节点的缩进量（以像素为单位）。</summary>
        <value>子节点的左边缘与其父节点的左边缘之间的间距量（以像素为单位）。 默认值为 20。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 使用 <xref:System.Web.UI.WebControls.TreeView.NodeIndent%2A> 属性可控制子节点的左边缘与其父节点的左边缘之间的间距量。

> [!NOTE]
>  <xref:System.Web.UI.WebControls.TreeView.NodeIndent%2A>属性会影响控件中的每个子节点 <xref:System.Web.UI.WebControls.TreeView> 。 不能单独控制每个节点的缩进量。

 此属性的值存储在视图状态中。



## Examples
 下面的代码示例演示如何使用 <xref:System.Web.UI.WebControls.TreeView.NodeIndent%2A> 属性控制子节点的缩进。

 [!code-aspx-csharp[TreeViewNodeIndent#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewNodeIndent/CS/treeviewnodeindentcs.aspx#1)]
 [!code-aspx-vb[TreeViewNodeIndent#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewNodeIndent/VB/treeviewnodeindentvb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.TreeView.LeafNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.NodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ParentNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.RootNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNodeStyle.ChildNodesPadding" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNodeStyle.HorizontalPadding" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNodeStyle.NodeSpacing" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNodeStyle.VerticalPadding" />
      </Docs>
    </Member>
    <Member MemberName="Nodes">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TreeNodeCollection Nodes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TreeNodeCollection Nodes" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.Nodes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Nodes As TreeNodeCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TreeNodeCollection ^ Nodes { System::Web::UI::WebControls::TreeNodeCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Nodes : System.Web.UI.WebControls.TreeNodeCollection" Usage="System.Web.UI.WebControls.TreeView.Nodes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(null)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(null)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName Language="C#">[System.ComponentModel.Editor("System.Web.UI.Design.WebControls.TreeNodeCollectionEditor,System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Editor("System.Web.UI.Design.WebControls.TreeNodeCollectionEditor,System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.MergableProperty(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.MergableProperty(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.Editor("System.Web.UI.Design.WebControls.TreeNodeCollectionEditor,System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Editor("System.Web.UI.Design.WebControls.TreeNodeCollectionEditor,System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TreeNodeCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取 <see cref="T:System.Web.UI.WebControls.TreeNode" /> 对象的集合，它表示 <see cref="T:System.Web.UI.WebControls.TreeView" /> 控件中根节点。</summary>
        <value><see cref="T:System.Web.UI.WebControls.TreeNodeCollection" />，它包含 <see cref="T:System.Web.UI.WebControls.TreeView" /> 中的根节点。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 使用 <xref:System.Web.UI.WebControls.TreeView.Nodes%2A> 属性可获取一个 <xref:System.Web.UI.WebControls.TreeNodeCollection> 对象，该对象包含树中的所有根节点。 此集合通常用于快速循环访问所有根节点，或访问树中的特定根节点。

> [!NOTE]
>  典型树结构只有一个根节点;但是，您可以将多个根节点添加到 <xref:System.Web.UI.WebControls.TreeView> 控件中。

 <xref:System.Web.UI.WebControls.TreeView.Nodes%2A>属性还可用于以编程方式管理树中的根节点。 可以添加、插入、删除和检索 <xref:System.Web.UI.WebControls.TreeNode> 集合中的对象。 在 <xref:System.Web.UI.WebControls.TreeView> 下一次往返服务器后，该集合中的任何更新都会自动反映在控件中。

 若要访问根节点的子节点，请使用 <xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A> 节点的属性。 使用 <xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A> 每个后续父级别节点的属性来向下导航节点级别。



## Examples
 下面的代码示例演示如何使用 <xref:System.Web.UI.WebControls.TreeView.Nodes%2A> 属性遍历树。

 [!code-aspx-csharp[TreeNodeCollectionCount#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeCollectionCount/CS/treenodecollectioncountcs.aspx#1)]
 [!code-aspx-vb[TreeNodeCollectionCount#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeCollectionCount/VB/treenodecollectioncountvb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeNode" />
        <altmember cref="T:System.Web.UI.WebControls.TreeNodeCollection" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.ChildNodes" />
      </Docs>
    </Member>
    <Member MemberName="NodeStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TreeNodeStyle NodeStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TreeNodeStyle NodeStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.NodeStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NodeStyle As TreeNodeStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TreeNodeStyle ^ NodeStyle { System::Web::UI::WebControls::TreeNodeStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.NodeStyle : System.Web.UI.WebControls.TreeNodeStyle" Usage="System.Web.UI.WebControls.TreeView.NodeStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(null)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(null)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.NotifyParentProperty(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.NotifyParentProperty(true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TreeNodeStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取对 <see cref="T:System.Web.UI.WebControls.TreeNodeStyle" /> 对象的引用，该对象用于设置 <see cref="T:System.Web.UI.WebControls.TreeView" /> 控件中节点的默认外观。</summary>
        <value>对 <see cref="T:System.Web.UI.WebControls.TreeNodeStyle" /> 的引用，它表示节点的默认样式。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 使用 <xref:System.Web.UI.WebControls.TreeView.NodeStyle%2A> 属性可控制控件中节点的默认外观 <xref:System.Web.UI.WebControls.TreeView> 。 此属性是只读的;但是，您可以设置 <xref:System.Web.UI.WebControls.TreeNodeStyle> 它返回的对象的属性。 可以在窗体中以声明方式设置这些属性 `Property-Subproperty` ，其中 `Subproperty` 是对象的属性 <xref:System.Web.UI.WebControls.TreeNodeStyle> (例如 `NodeStyle-ForeColor`) 。 还可以以编程方式设置属性 `Property.Subproperty` ， (例如 `NodeStyle.ForeColor`) 。 常见设置通常包括自定义背景色、前景颜色、字体属性和节点间距。 样式属性按以下优先级顺序应用：

1.  <xref:System.Web.UI.WebControls.TreeView.NodeStyle%2A>.

2.  <xref:System.Web.UI.WebControls.TreeView.RootNodeStyle%2A>、 <xref:System.Web.UI.WebControls.TreeView.ParentNodeStyle%2A> 或 <xref:System.Web.UI.WebControls.TreeView.LeafNodeStyle%2A> ，具体取决于节点类型。 如果 <xref:System.Web.UI.WebControls.TreeView.LevelStyles%2A> 定义了集合，则此时将应用该集合，并重写其他节点样式属性。

3.  <xref:System.Web.UI.WebControls.TreeView.SelectedNodeStyle%2A>.

4.  <xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A>.

> [!NOTE]
>  、或属性中的相应节点样式设置会 <xref:System.Web.UI.WebControls.TreeView.RootNodeStyle%2A> <xref:System.Web.UI.WebControls.TreeView.ParentNodeStyle%2A> <xref:System.Web.UI.WebControls.TreeView.LeafNodeStyle%2A> 重写属性的样式设置 <xref:System.Web.UI.WebControls.TreeView.NodeStyle%2A> 。

 如果需要生成目录样式的导航菜单，其中某一级别的节点应具有相同的外观，无论它们是否具有子节点，都可以考虑使用 <xref:System.Web.UI.WebControls.TreeView.LevelStyles%2A> 属性，而不是设置各个样式属性。



## Examples
 下面的代码示例演示如何使用 <xref:System.Web.UI.WebControls.TreeView.NodeStyle%2A> 属性来控制控件中节点的外观 <xref:System.Web.UI.WebControls.TreeView> 。

 [!code-aspx-csharp[TreeViewNodeStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewNodeStyle/CS/treeviewnodestylecs.aspx#1)]
 [!code-aspx-vb[TreeViewNodeStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewNodeStyle/VB/treeviewnodestylevb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.LeafNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.HoverNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ParentNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.RootNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.SelectedNodeStyle" />
      </Docs>
    </Member>
    <Member MemberName="NodeWrap">
      <MemberSignature Language="C#" Value="public bool NodeWrap { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool NodeWrap" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.NodeWrap" />
      <MemberSignature Language="VB.NET" Value="Public Property NodeWrap As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool NodeWrap { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.NodeWrap : bool with get, set" Usage="System.Web.UI.WebControls.TreeView.NodeWrap" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，它指示空间不足时节点中的文本是否换行。</summary>
        <value>若要使文本换行，则为 <see langword="true" />；否则为 <see langword="false" />。 默认为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 使用 <xref:System.Web.UI.WebControls.TreeView.NodeWrap%2A> 属性可指定在每个节点的空间不足时是否换行中显示的文本。

 此属性的值存储在视图状态中。



## Examples
 下面的代码示例演示如何使用 <xref:System.Web.UI.WebControls.TreeView.NodeWrap%2A> 属性来包装控件的文本 <xref:System.Web.UI.WebControls.TreeView> 。

 [!code-aspx-csharp[TreeViewNodeWrap#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewNodeWrap/CS/treeviewnodewrapcs.aspx#1)]
 [!code-aspx-vb[TreeViewNodeWrap#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewNodeWrap/VB/treeviewnodewrapvb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebControl.Font" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.NodeIndent" />
      </Docs>
    </Member>
    <Member MemberName="NoExpandImageUrl">
      <MemberSignature Language="C#" Value="public string NoExpandImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NoExpandImageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.NoExpandImageUrl" />
      <MemberSignature Language="VB.NET" Value="Public Property NoExpandImageUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ NoExpandImageUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.NoExpandImageUrl : string with get, set" Usage="System.Web.UI.WebControls.TreeView.NoExpandImageUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue("")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue("")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName Language="C#">[System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.UrlProperty]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.UrlProperty&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置自定义图像的 URL，该图像用作不可展开节点的指示符。</summary>
        <value>为不可展开节点所显示的自定义图像的 URL。 默认值为空字符串 ("")，这将显示默认的空白图像。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 使用 <xref:System.Web.UI.WebControls.TreeView.NoExpandImageUrl%2A> 属性为不可展开的节点指示符指定自定义图像。 "叶节点" (或 "分隔") 下显示的非可展开节点的指示符图像将显示在 "叶节点" (，以使叶节点与父节点或根节点对齐) 。

 当 <xref:System.Web.UI.WebControls.TreeView.ShowExpandCollapse%2A> 属性设置为时 `true` ，控件将 <xref:System.Web.UI.WebControls.TreeView> 在节点旁显示加号 (+) 或减号 ( ) 或一个占位符图像，以指示节点是可展开、可折叠还是不可展开。 通过首先将 <xref:System.Web.UI.WebControls.TreeView.ImageSet%2A> 属性设置为 `TreeViewImageSet.Custom` ，然后将 <xref:System.Web.UI.WebControls.TreeView.NoExpandImageUrl%2A> 、 <xref:System.Web.UI.WebControls.TreeView.ExpandImageUrl%2A> 和属性设置 <xref:System.Web.UI.WebControls.TreeView.CollapseImageUrl%2A> 为自定义图像的 url，可以指定自定义映像。 如果未指定任何图像，则使用默认图像。 若要隐藏展开节点指示符，请将 <xref:System.Web.UI.WebControls.TreeView.ShowExpandCollapse%2A> 属性设置为 `false` 。

> [!NOTE]
>  若要确保在 <xref:System.Web.UI.WebControls.TreeView> 使用自定义图像时节点正确地在控件中对齐，请确保、和属性指定的所有 <xref:System.Web.UI.WebControls.TreeView.NoExpandImageUrl%2A> 图像 <xref:System.Web.UI.WebControls.TreeView.ExpandImageUrl%2A> <xref:System.Web.UI.WebControls.TreeView.CollapseImageUrl%2A> 具有相同的尺寸。

 此属性的值存储在视图状态中。



## Examples
 下面的代码示例演示如何使用 <xref:System.Web.UI.WebControls.TreeView.NoExpandImageUrl%2A> 属性为不可展开节点的指示符指定自定义图像。 要使代码示例显示和图像显示在控件中，必须提供自己的图像，并且 <xref:System.Web.UI.WebControls.TreeView.ImageSet%2A> 属性必须设置为 `TreeNodeImageSet.Custom` 。

 [!code-aspx-csharp[TreeViewCustomImage#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewCustomImage/CS/treeviewcustomimagecs.aspx#1)]
 [!code-aspx-vb[TreeViewCustomImage#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewCustomImage/VB/treeviewcustomimagevb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ShowExpandCollapse" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ImageSet" />
        <altmember cref="T:System.Web.UI.WebControls.TreeViewImageSet" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.CollapseImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ExpandImageUrl" />
      </Docs>
    </Member>
    <Member MemberName="OnInit">
      <MemberSignature Language="C#" Value="protected internal override void OnInit (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnInit(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.OnInit(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnInit (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnInit(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnInit : EventArgs -&gt; unit" Usage="treeView.OnInit e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件数据的 <see cref="T:System.EventArgs" />。</param>
        <summary>引发 <see cref="E:System.Web.UI.Control.Init" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 此 <xref:System.Web.UI.WebControls.TreeView.OnInit%2A> 方法由 <xref:System.Web.UI.WebControls.TreeView> 控件调用以引发 <xref:System.Web.UI.Control.Init> 事件。 在扩展类时，控件开发人员通常会使用此方法 <xref:System.Web.UI.WebControls.TreeView> 。

 引发事件时，将通过委托调用事件处理程序。 有关详细信息，请参阅 [处理和引发事件](/dotnet/standard/events/)。

 <xref:System.Web.UI.WebControls.TreeView.OnInit%2A> 方法还允许派生类对事件进行处理而不必附加委托。 这是在派生类中处理事件的首选技术。

 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>当在 <see cref="M:System.Web.UI.WebControls.TreeView.OnInit(System.EventArgs)" /> 派生类中重写方法时，请确保调用 <see cref="M:System.Web.UI.WebControls.TreeView.OnInit(System.EventArgs)" /> 基类的方法，以便注册的委托接收事件。</para></block>
        <altmember cref="E:System.Web.UI.Control.Init" />
      </Docs>
    </Member>
    <Member MemberName="OnPreRender">
      <MemberSignature Language="C#" Value="protected internal override void OnPreRender (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnPreRender(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.OnPreRender(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnPreRender (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnPreRender(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnPreRender : EventArgs -&gt; unit" Usage="treeView.OnPreRender e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件数据的 <see cref="T:System.EventArgs" />。</param>
        <summary>引发 <see cref="E:System.Web.UI.Control.PreRender" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.TreeView.OnPreRender%2A>重写方法以注册回发。 如果启用了客户端脚本，它还会呈现必要的脚本和隐藏字段。

 引发事件时，将通过委托调用事件处理程序。 有关如何处理事件的详细信息，请参阅 [处理和引发事件](/dotnet/standard/events/)。

 <xref:System.Web.UI.WebControls.TreeView.OnPreRender%2A> 方法还允许派生类对事件进行处理而不必附加委托。 这是在派生类中处理事件的首选技术。

 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>当在 <see cref="M:System.Web.UI.WebControls.TreeView.OnPreRender(System.EventArgs)" /> 派生类中重写方法时，请确保调用 <see cref="M:System.Web.UI.WebControls.TreeView.OnPreRender(System.EventArgs)" /> 基类的方法，以便注册的委托接收事件。</para></block>
        <altmember cref="E:System.Web.UI.Control.PreRender" />
      </Docs>
    </Member>
    <Member MemberName="OnSelectedNodeChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnSelectedNodeChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSelectedNodeChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.OnSelectedNodeChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSelectedNodeChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSelectedNodeChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnSelectedNodeChanged : EventArgs -&gt; unit&#xA;override this.OnSelectedNodeChanged : EventArgs -&gt; unit" Usage="treeView.OnSelectedNodeChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件数据的 <see cref="T:System.EventArgs" />。</param>
        <summary>引发 <see cref="T:System.Web.UI.WebControls.TreeView" /> 控件的 <see cref="E:System.Web.UI.WebControls.TreeView.SelectedNodeChanged" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.TreeView.SelectedNodeChanged>在控件中选择节点时，将引发事件 <xref:System.Web.UI.WebControls.TreeView> 。 这使你可以提供一种事件处理方法，该方法可在每次发生此事件时执行自定义例程，如更新显示的内容。

 您可以选择设置 <xref:System.Web.UI.WebControls.TreeNode.SelectAction%2A> 节点的属性，以指定在选择节点时引发的事件。

> [!NOTE]
>  如果 <xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A> 节点的属性设置为，则不会呈现 <xref:System.Web.UI.WebControls.TreeNode.SelectAction%2A> `TreeNodeSelectAction.None` 。

 引发事件时，将通过委托调用事件处理程序。 有关如何处理事件的详细信息，请参阅 [处理和引发事件](/dotnet/standard/events/)。

 <xref:System.Web.UI.WebControls.TreeView.OnSelectedNodeChanged%2A> 方法还允许派生类对事件进行处理而不必附加委托。 这是在派生类中处理事件的首选技术。

 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>当在 <see cref="M:System.Web.UI.WebControls.TreeView.OnSelectedNodeChanged(System.EventArgs)" /> 派生类中重写方法时，请确保调用 <see cref="M:System.Web.UI.WebControls.TreeView.OnSelectedNodeChanged(System.EventArgs)" /> 基类的方法，以便注册的委托接收事件。</para></block>
        <altmember cref="E:System.Web.UI.WebControls.TreeView.SelectedNodeChanged" />
      </Docs>
    </Member>
    <Member MemberName="OnTreeNodeCheckChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnTreeNodeCheckChanged (System.Web.UI.WebControls.TreeNodeEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnTreeNodeCheckChanged(class System.Web.UI.WebControls.TreeNodeEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.OnTreeNodeCheckChanged(System.Web.UI.WebControls.TreeNodeEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnTreeNodeCheckChanged (e As TreeNodeEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnTreeNodeCheckChanged(System::Web::UI::WebControls::TreeNodeEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnTreeNodeCheckChanged : System.Web.UI.WebControls.TreeNodeEventArgs -&gt; unit&#xA;override this.OnTreeNodeCheckChanged : System.Web.UI.WebControls.TreeNodeEventArgs -&gt; unit" Usage="treeView.OnTreeNodeCheckChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.TreeNodeEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件数据的 <see cref="T:System.Web.UI.WebControls.TreeNodeEventArgs" />。</param>
        <summary>引发 <see cref="T:System.Web.UI.WebControls.TreeView" /> 控件的 <see cref="E:System.Web.UI.WebControls.TreeView.TreeNodeCheckChanged" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.TreeView.TreeNodeCheckChanged>当控件中的复选框在 <xref:System.Web.UI.WebControls.TreeView> 向服务器的各次发送过程间更改状态时，将引发事件。 这使你可以提供一种事件处理方法，该方法可在每次发生此事件时执行自定义例程，如更新数据库或显示的内容。

 引发事件时，将通过委托调用事件处理程序。 有关如何处理事件的详细信息，请参阅 [处理和引发事件](/dotnet/standard/events/)。

 <xref:System.Web.UI.WebControls.TreeView.OnTreeNodeCheckChanged%2A> 方法还允许派生类对事件进行处理而不必附加委托。 这是在派生类中处理事件的首选技术。

 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>当 <see cref="M:System.Web.UI.WebControls.TreeView.OnTreeNodeCheckChanged(System.Web.UI.WebControls.TreeNodeEventArgs)" /> 在派生类中重写时，请确保为 <see cref="M:System.Web.UI.WebControls.TreeView.OnTreeNodeCheckChanged(System.Web.UI.WebControls.TreeNodeEventArgs)" /> 基类调用方法，以便注册的委托接收事件。</para></block>
        <altmember cref="E:System.Web.UI.WebControls.TreeView.TreeNodeCheckChanged" />
      </Docs>
    </Member>
    <Member MemberName="OnTreeNodeCollapsed">
      <MemberSignature Language="C#" Value="protected virtual void OnTreeNodeCollapsed (System.Web.UI.WebControls.TreeNodeEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnTreeNodeCollapsed(class System.Web.UI.WebControls.TreeNodeEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.OnTreeNodeCollapsed(System.Web.UI.WebControls.TreeNodeEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnTreeNodeCollapsed (e As TreeNodeEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnTreeNodeCollapsed(System::Web::UI::WebControls::TreeNodeEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnTreeNodeCollapsed : System.Web.UI.WebControls.TreeNodeEventArgs -&gt; unit&#xA;override this.OnTreeNodeCollapsed : System.Web.UI.WebControls.TreeNodeEventArgs -&gt; unit" Usage="treeView.OnTreeNodeCollapsed e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.TreeNodeEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件数据的 <see cref="T:System.Web.UI.WebControls.TreeNodeEventArgs" />。</param>
        <summary>引发 <see cref="T:System.Web.UI.WebControls.TreeView" /> 控件的 <see cref="E:System.Web.UI.WebControls.TreeView.TreeNodeCollapsed" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.TreeView.TreeNodeCollapsed>节点在控件中处于折叠状态时引发事件 <xref:System.Web.UI.WebControls.TreeView> 。 这使你可以提供一种事件处理方法，该方法可在每次发生此事件时执行自定义例程。

 引发事件时，将通过委托调用事件处理程序。 有关如何处理事件的详细信息，请参阅 [处理和引发事件](/dotnet/standard/events/)。

 <xref:System.Web.UI.WebControls.TreeView.OnTreeNodeCollapsed%2A> 方法还允许派生类对事件进行处理而不必附加委托。 这是在派生类中处理事件的首选技术。

 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>当在 <see cref="M:System.Web.UI.WebControls.TreeView.OnTreeNodeCollapsed(System.Web.UI.WebControls.TreeNodeEventArgs)" /> 派生类中重写方法时，请确保调用 <see cref="M:System.Web.UI.WebControls.TreeView.OnTreeNodeCollapsed(System.Web.UI.WebControls.TreeNodeEventArgs)" /> 基类的方法，以便注册的委托接收事件。</para></block>
        <altmember cref="E:System.Web.UI.WebControls.TreeView.TreeNodeCollapsed" />
      </Docs>
    </Member>
    <Member MemberName="OnTreeNodeDataBound">
      <MemberSignature Language="C#" Value="protected virtual void OnTreeNodeDataBound (System.Web.UI.WebControls.TreeNodeEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnTreeNodeDataBound(class System.Web.UI.WebControls.TreeNodeEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.OnTreeNodeDataBound(System.Web.UI.WebControls.TreeNodeEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnTreeNodeDataBound (e As TreeNodeEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnTreeNodeDataBound(System::Web::UI::WebControls::TreeNodeEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnTreeNodeDataBound : System.Web.UI.WebControls.TreeNodeEventArgs -&gt; unit&#xA;override this.OnTreeNodeDataBound : System.Web.UI.WebControls.TreeNodeEventArgs -&gt; unit" Usage="treeView.OnTreeNodeDataBound e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.TreeNodeEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件数据的 <see cref="T:System.Web.UI.WebControls.TreeNodeEventArgs" />。</param>
        <summary>引发 <see cref="T:System.Web.UI.WebControls.TreeView" /> 控件的 <see cref="E:System.Web.UI.WebControls.TreeView.TreeNodeDataBound" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.TreeView.TreeNodeDataBound>当数据项绑定到控件中的节点时，将引发事件 <xref:System.Web.UI.WebControls.TreeView> 。 这使你可以提供一种事件处理方法，该方法可在每次发生此事件时执行自定义例程。

 引发事件时，将通过委托调用事件处理程序。 有关如何处理事件的详细信息，请参阅 [处理和引发事件](/dotnet/standard/events/)。

 <xref:System.Web.UI.WebControls.TreeView.OnTreeNodeDataBound%2A> 方法还允许派生类对事件进行处理而不必附加委托。 这是在派生类中处理事件的首选技术。

 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>当在 <see cref="M:System.Web.UI.WebControls.TreeView.OnTreeNodeDataBound(System.Web.UI.WebControls.TreeNodeEventArgs)" /> 派生类中重写方法时，请确保调用 <see cref="M:System.Web.UI.WebControls.TreeView.OnTreeNodeDataBound(System.Web.UI.WebControls.TreeNodeEventArgs)" /> 基类的方法，以便注册的委托接收事件。</para></block>
        <altmember cref="E:System.Web.UI.WebControls.TreeView.TreeNodeDataBound" />
      </Docs>
    </Member>
    <Member MemberName="OnTreeNodeExpanded">
      <MemberSignature Language="C#" Value="protected virtual void OnTreeNodeExpanded (System.Web.UI.WebControls.TreeNodeEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnTreeNodeExpanded(class System.Web.UI.WebControls.TreeNodeEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.OnTreeNodeExpanded(System.Web.UI.WebControls.TreeNodeEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnTreeNodeExpanded (e As TreeNodeEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnTreeNodeExpanded(System::Web::UI::WebControls::TreeNodeEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnTreeNodeExpanded : System.Web.UI.WebControls.TreeNodeEventArgs -&gt; unit&#xA;override this.OnTreeNodeExpanded : System.Web.UI.WebControls.TreeNodeEventArgs -&gt; unit" Usage="treeView.OnTreeNodeExpanded e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.TreeNodeEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件数据的 <see cref="T:System.Web.UI.WebControls.TreeNodeEventArgs" />。</param>
        <summary>引发 <see cref="T:System.Web.UI.WebControls.TreeView" /> 控件的 <see cref="E:System.Web.UI.WebControls.TreeView.TreeNodeExpanded" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 在 <xref:System.Web.UI.WebControls.TreeView.TreeNodeExpanded> 控件中展开节点时，将引发事件 <xref:System.Web.UI.WebControls.TreeView> 。 这使你可以提供一种事件处理方法，该方法可在每次发生此事件时执行自定义例程。

> [!NOTE]
>  如果 <xref:System.Web.UI.WebControls.TreeNode.SelectAction%2A> 将节点的属性设置为 <xref:System.Web.UI.WebControls.TreeNodeSelectAction.Expand> 或，则 <xref:System.Web.UI.WebControls.TreeNodeSelectAction.SelectExpand> <xref:System.Web.UI.WebControls.TreeView.TreeNodeExpanded> 当在控件中单击该节点时，也会引发该事件 <xref:System.Web.UI.WebControls.TreeView> 。

 引发事件时，将通过委托调用事件处理程序。 有关如何处理事件的详细信息，请参阅 [处理和引发事件](/dotnet/standard/events/)。

 <xref:System.Web.UI.WebControls.TreeView.OnTreeNodeExpanded%2A> 方法还允许派生类对事件进行处理而不必附加委托。 这是在派生类中处理事件的首选技术。

 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>当在 <see cref="M:System.Web.UI.WebControls.TreeView.OnTreeNodeExpanded(System.Web.UI.WebControls.TreeNodeEventArgs)" /> 派生类中重写方法时，请确保调用 <see cref="M:System.Web.UI.WebControls.TreeView.OnTreeNodeExpanded(System.Web.UI.WebControls.TreeNodeEventArgs)" /> 基类的方法，以便注册的委托接收事件。</para></block>
        <altmember cref="E:System.Web.UI.WebControls.TreeView.TreeNodeExpanded" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.SelectAction" />
      </Docs>
    </Member>
    <Member MemberName="OnTreeNodePopulate">
      <MemberSignature Language="C#" Value="protected virtual void OnTreeNodePopulate (System.Web.UI.WebControls.TreeNodeEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnTreeNodePopulate(class System.Web.UI.WebControls.TreeNodeEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.OnTreeNodePopulate(System.Web.UI.WebControls.TreeNodeEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnTreeNodePopulate (e As TreeNodeEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnTreeNodePopulate(System::Web::UI::WebControls::TreeNodeEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnTreeNodePopulate : System.Web.UI.WebControls.TreeNodeEventArgs -&gt; unit&#xA;override this.OnTreeNodePopulate : System.Web.UI.WebControls.TreeNodeEventArgs -&gt; unit" Usage="treeView.OnTreeNodePopulate e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.TreeNodeEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件数据的 <see cref="T:System.Web.UI.WebControls.TreeNodeEventArgs" />。</param>
        <summary>引发 <see cref="T:System.Web.UI.WebControls.TreeView" /> 控件的 <see cref="E:System.Web.UI.WebControls.TreeView.TreeNodePopulate" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 有时，由于数据大小或自定义内容依赖于用户输入而导致静态预定义树结构是不切实际的。 因此， <xref:System.Web.UI.WebControls.TreeView> 控件支持动态节点填充。 如果将 <xref:System.Web.UI.WebControls.TreeNode.PopulateOnDemand%2A> 节点的属性设置为，则在 `true` 展开节点时，将在运行时填充该节点。

 若要动态填充节点，请首先将 <xref:System.Web.UI.WebControls.TreeNode.PopulateOnDemand%2A> 节点的属性设置为 `true` 。 接下来，为 <xref:System.Web.UI.WebControls.TreeView.TreeNodePopulate> 以编程方式填充节点的事件定义事件处理方法。 典型的事件处理方法从数据源中检索节点数据，将这些数据放入节点结构，然后将节点结构添加到要填充的 <xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A> 节点的集合中。 通过向 <xref:System.Web.UI.WebControls.TreeNode> 父节点的集合添加对象来创建节点结构 <xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A> 。

> [!NOTE]
>  如果将 <xref:System.Web.UI.WebControls.TreeNode.PopulateOnDemand%2A> 节点的属性设置为 `true` ，则必须动态填充节点。 不能以声明方式在其下嵌套另一个节点;否则，将在页面上出现错误。

 受支持的浏览器 (Microsoft Internet Explorer 4.0 兼容的浏览器和更高) 版本，也可利用客户端节点填充。 启用此功能后，控件可以在 <xref:System.Web.UI.WebControls.TreeView> 展开该节点时，动态填充客户端上的节点，这会阻止需要回发到服务器。 有关客户端节点填充的详细信息，请参阅 <xref:System.Web.UI.WebControls.TreeView.PopulateNodesFromClient%2A> 。

 引发事件时，将通过委托调用事件处理程序。 有关如何处理事件的详细信息，请参阅 [处理和引发事件](/dotnet/standard/events/)。

 <xref:System.Web.UI.WebControls.TreeView.OnTreeNodePopulate%2A> 方法还允许派生类对事件进行处理而不必附加委托。 这是在派生类中处理事件的首选技术。

 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>当在 <see cref="M:System.Web.UI.WebControls.TreeView.OnTreeNodePopulate(System.Web.UI.WebControls.TreeNodeEventArgs)" /> 派生类中重写方法时，请确保调用 <see cref="M:System.Web.UI.WebControls.TreeView.OnTreeNodePopulate(System.Web.UI.WebControls.TreeNodeEventArgs)" /> 基类的方法，以便注册的委托接收事件。</para></block>
        <altmember cref="E:System.Web.UI.WebControls.TreeView.TreeNodePopulate" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.PopulateOnDemand" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.EnableClientScript" />
      </Docs>
    </Member>
    <Member MemberName="ParentNodeStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TreeNodeStyle ParentNodeStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TreeNodeStyle ParentNodeStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.ParentNodeStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ParentNodeStyle As TreeNodeStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TreeNodeStyle ^ ParentNodeStyle { System::Web::UI::WebControls::TreeNodeStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ParentNodeStyle : System.Web.UI.WebControls.TreeNodeStyle" Usage="System.Web.UI.WebControls.TreeView.ParentNodeStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(null)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(null)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.NotifyParentProperty(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.NotifyParentProperty(true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TreeNodeStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取对 <see cref="T:System.Web.UI.WebControls.TreeNodeStyle" /> 对象的引用，该对象用于设置 <see cref="T:System.Web.UI.WebControls.TreeView" /> 控件中父节点的外观。</summary>
        <value>对 <see cref="T:System.Web.UI.WebControls.TreeNodeStyle" /> 的一个引用，表示 <see cref="T:System.Web.UI.WebControls.TreeView" /> 中父节点的样式。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 使用 <xref:System.Web.UI.WebControls.TreeView.ParentNodeStyle%2A> 属性可控制控件中父节点的外观 <xref:System.Web.UI.WebControls.TreeView> 。 此属性是只读的;但是，您可以设置 <xref:System.Web.UI.WebControls.TreeNodeStyle> 它返回的对象的属性。 可以在窗体中以声明方式设置这些属性 `Property-Subproperty` ，其中 `Subproperty` 是对象的属性 <xref:System.Web.UI.WebControls.TreeNodeStyle> (例如 `ParentNodeStyle-ForeColor`) 。 还可以以编程方式设置属性 `Property.Subproperty` ， (例如 `ParentNodeStyle.ForeColor`) 。 常见设置通常包括自定义背景色、前景颜色、字体属性和节点间距。 样式属性按以下优先级顺序应用：

1.  <xref:System.Web.UI.WebControls.TreeView.NodeStyle%2A>.

2.  <xref:System.Web.UI.WebControls.TreeView.RootNodeStyle%2A>、 <xref:System.Web.UI.WebControls.TreeView.ParentNodeStyle%2A> 或 <xref:System.Web.UI.WebControls.TreeView.LeafNodeStyle%2A> ，具体取决于节点类型。 如果 <xref:System.Web.UI.WebControls.TreeView.LevelStyles%2A> 定义了集合，则此时将应用该集合，并重写其他节点样式属性。

3.  <xref:System.Web.UI.WebControls.TreeView.SelectedNodeStyle%2A>.

4.  <xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A>.

 如果需要生成目录样式的导航菜单，其中某一级别的节点应具有相同的外观，无论它们是否具有子节点，都可以考虑使用 <xref:System.Web.UI.WebControls.TreeView.LevelStyles%2A> 属性，而不是设置各个样式属性。



## Examples
 下面的代码示例演示如何使用 <xref:System.Web.UI.WebControls.TreeView.ParentNodeStyle%2A> 属性控制控件中父节点的外观 <xref:System.Web.UI.WebControls.TreeView> 。

 [!code-aspx-csharp[TreeViewParentNodeStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewParentNodeStyle/CS/treeviewparentnodestylecs.aspx#1)]
 [!code-aspx-vb[TreeViewParentNodeStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewParentNodeStyle/VB/treeviewparentnodestylevb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.LeafNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.HoverNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.NodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.RootNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.SelectedNodeStyle" />
      </Docs>
    </Member>
    <Member MemberName="PathSeparator">
      <MemberSignature Language="C#" Value="public char PathSeparator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance char PathSeparator" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.PathSeparator" />
      <MemberSignature Language="VB.NET" Value="Public Property PathSeparator As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property char PathSeparator { char get(); void set(char value); };" />
      <MemberSignature Language="F#" Value="member this.PathSeparator : char with get, set" Usage="System.Web.UI.WebControls.TreeView.PathSeparator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue('/')]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue('/')&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置用于分隔由 <see cref="P:System.Web.UI.WebControls.TreeNode.ValuePath" /> 属性指定的节点值的字符。</summary>
        <value>用于分隔在 <see cref="P:System.Web.UI.WebControls.TreeNode.ValuePath" /> 属性中指定的节点值的字符。 默认值为斜杠 (/)。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.TreeNode.ValuePath%2A>属性包含以分隔符分隔的节点值列表，这些值构成从根节点到当前节点的路径。 使用 <xref:System.Web.UI.WebControls.TreeView.PathSeparator%2A> 属性指定分隔节点值时所用的分隔符字符。 此值通常在分析各个值的列表时使用。

 根据控件中显示的文本 <xref:System.Web.UI.WebControls.TreeView> ，分隔符字符可能需要更改以防止任何冲突。 例如，如果将分隔符字符设置为逗号，则显示的文本不应包含任何逗号;否则， <xref:System.Web.UI.WebControls.TreeNode.ValuePath%2A> 属性无法准确分析。

 此属性的值存储在视图状态中。



## Examples
 下面的代码示例演示如何使用 <xref:System.Web.UI.WebControls.TreeView.PathSeparator%2A> 属性来指定节点的属性的分隔符字符 <xref:System.Web.UI.WebControls.TreeNode.ValuePath%2A> 。 此值随后用于分析 <xref:System.Web.UI.WebControls.TreeNode.ValuePath%2A> 各个值的属性。

 [!code-aspx-csharp[TreeViewPathSeparator2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewPathSeparator2/CS/treeviewpathseparatorcs.aspx#1)]
 [!code-aspx-vb[TreeViewPathSeparator2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewPathSeparator2/VB/treeviewpathseparatorvb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.ValuePath" />
      </Docs>
    </Member>
    <Member MemberName="PerformDataBinding">
      <MemberSignature Language="C#" Value="protected internal override void PerformDataBinding ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void PerformDataBinding() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.PerformDataBinding" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub PerformDataBinding ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void PerformDataBinding();" />
      <MemberSignature Language="F#" Value="override this.PerformDataBinding : unit -&gt; unit" Usage="treeView.PerformDataBinding " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>基于数据源创建所有节点。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.TreeView.PerformDataBinding%2A>方法是一个帮助器方法，该方法由 <xref:System.Web.UI.WebControls.TreeView> 控件调用以将指定的数据源绑定到控件。

 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>由于 <see cref="M:System.Web.UI.WebControls.BaseDataBoundControl.DataBind" /> 方法是密封的，因此，如果在 <see cref="M:System.Web.UI.WebControls.TreeView.PerformDataBinding" /> 绑定数据时需要执行任何其他任务，则应重写方法。</para></block>
      </Docs>
    </Member>
    <Member MemberName="PopulateNodesFromClient">
      <MemberSignature Language="C#" Value="public bool PopulateNodesFromClient { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PopulateNodesFromClient" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.PopulateNodesFromClient" />
      <MemberSignature Language="VB.NET" Value="Public Property PopulateNodesFromClient As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool PopulateNodesFromClient { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.PopulateNodesFromClient : bool with get, set" Usage="System.Web.UI.WebControls.TreeView.PopulateNodesFromClient" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，它指示是否按需从客户端填充节点数据。</summary>
        <value>若要按需从客户端填充树节点数据，则为 <see langword="true" />；否则为 <see langword="false" />。 默认为 <see langword="true" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 有时，由于数据大小或自定义内容依赖于用户输入而导致静态预定义树结构是不切实际的。 因此， <xref:System.Web.UI.WebControls.TreeView> 控件支持动态节点填充。 如果将 <xref:System.Web.UI.WebControls.TreeNode.PopulateOnDemand%2A> 节点的属性设置为，则在 `true` 展开节点时，将在运行时填充该节点。

 除了按需填充节点以外，还可以直接在受支持的客户端浏览器上填充节点。 当 <xref:System.Web.UI.WebControls.TreeView.PopulateNodesFromClient%2A> 属性设置为时 `true` ，将从客户端调用服务以填充树节点，这样就无需回发到服务器。 否则， <xref:System.Web.UI.WebControls.TreeView> 控件回发到服务器来填充节点。

> [!NOTE]
>  <xref:System.Web.UI.WebControls.TreeView.EnableClientScript%2A>还必须将属性设置为，才能将 `true` <xref:System.Web.UI.WebControls.TreeView.PopulateNodesFromClient%2A> 属性设置为 `true` 。

 若要在客户端上填充节点，请先将 <xref:System.Web.UI.WebControls.TreeView.PopulateNodesFromClient%2A> 属性设置为， `true` 然后将 <xref:System.Web.UI.WebControls.TreeNode.PopulateOnDemand%2A> 节点的属性设置为 `true` 。 接下来，为 <xref:System.Web.UI.WebControls.TreeView.TreeNodePopulate> 以编程方式填充节点的事件定义事件处理方法。 典型的事件处理方法从数据源中检索节点数据，将这些数据放入节点结构，然后将节点结构添加到要填充的 <xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A> 节点的集合中。 您可以通过向 <xref:System.Web.UI.WebControls.TreeNode> 父节点的集合添加对象来创建节点结构 <xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A> 。

> [!NOTE]
>  如果将 <xref:System.Web.UI.WebControls.TreeNode.PopulateOnDemand%2A> 节点的属性设置为 `true` ，则必须动态填充节点。 不能以声明方式在其下嵌套另一个节点;否则，将在页面上出现错误。

> [!NOTE]
>  支持回调脚本的浏览器支持客户端节点填充功能。 若要检查浏览器是否支持回调脚本访问，请使用 <xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsCallback%2A> 类的属性 <xref:System.Web.HttpBrowserCapabilities> 。 可以 <xref:System.Web.HttpBrowserCapabilities> 通过类的属性访问当前请求的类的实例 <xref:System.Web.HttpRequest.Browser%2A> <xref:System.Web.HttpRequest> 。

 此属性的值存储在视图状态中。



## Examples
 下面的代码示例演示如何使用 <xref:System.Web.UI.WebControls.TreeView.PopulateNodesFromClient%2A> 属性来启用控件中节点的客户端填充 <xref:System.Web.UI.WebControls.TreeView> 。 请注意，启用客户端节点填充后，节点会在客户端上动态填充，而无需回发到服务器。

 [!code-aspx-csharp[TreeViewPopulateNodesFromClient#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewPopulateNodesFromClient/CS/treeviewpopulatenodesfromclientcs.aspx#1)]
 [!code-aspx-vb[TreeViewPopulateNodesFromClient#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewPopulateNodesFromClient/VB/treeviewpopulatenodesfromclientvb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.TreeView.EnableClientScript" />
        <altmember cref="E:System.Web.UI.WebControls.TreeView.TreeNodePopulate" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.PopulateOnDemand" />
      </Docs>
    </Member>
    <Member MemberName="RaiseCallbackEvent">
      <MemberSignature Language="C#" Value="protected virtual void RaiseCallbackEvent (string eventArgument);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void RaiseCallbackEvent(string eventArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.RaiseCallbackEvent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub RaiseCallbackEvent (eventArgument As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void RaiseCallbackEvent(System::String ^ eventArgument);" />
      <MemberSignature Language="F#" Value="abstract member RaiseCallbackEvent : string -&gt; unit&#xA;override this.RaiseCallbackEvent : string -&gt; unit" Usage="treeView.RaiseCallbackEvent eventArgument" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventArgument">表示要传递到事件处理程序的可选事件自变量的字符串。</param>
        <summary>使用指定参数引发回调事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.TreeView.RaiseCallbackEvent%2A> 方法是 <xref:System.Web.UI.WebControls.TreeView.System%23Web%23UI%23ICallbackEventHandler%23RaiseCallbackEvent%2A> 方法的帮助器方法。

 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.String,System.String,System.String,System.String,System.String,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="RaisePostBackEvent">
      <MemberSignature Language="C#" Value="protected virtual void RaisePostBackEvent (string eventArgument);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void RaisePostBackEvent(string eventArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.RaisePostBackEvent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub RaisePostBackEvent (eventArgument As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void RaisePostBackEvent(System::String ^ eventArgument);" />
      <MemberSignature Language="F#" Value="abstract member RaisePostBackEvent : string -&gt; unit&#xA;override this.RaisePostBackEvent : string -&gt; unit" Usage="treeView.RaisePostBackEvent eventArgument" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventArgument">表示要传递到事件处理程序的可选事件自变量的字符串。</param>
        <summary>启用 <see cref="T:System.Web.UI.WebControls.TreeView" /> 控件以处理将窗体发送到服务器时引发的事件。 <see cref="M:System.Web.UI.WebControls.TreeView.RaisePostBackEvent(System.String)" /> 方法是 <see cref="M:System.Web.UI.WebControls.TreeView.System#Web#UI#ICallbackEventHandler#RaiseCallbackEvent(System.String)" /> 方法的帮助器方法。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 该页将参数值传递 `eventArgument` 给 <xref:System.Web.UI.WebControls.TreeView.RaisePostBackEvent%2A> 实现接口的控件的方法 <xref:System.Web.UI.IPostBackEventHandler?displayProperty=nameWithType> 。 此 <xref:System.Web.UI.WebControls.TreeView> 控件还呈现导致回发事件发生的 HTML 元素。 如果控件呈现客户端脚本以回发到服务器，则会在参数中传递脚本中的参数 `eventArgument` 。 如果回发事件是由简单的服务器提交引起的，则 `eventArgument` 参数为 `null` 。

 <xref:System.Web.UI.WebControls.TreeView.RaisePostBackEvent%2A>方法为 HTML 和 Web 服务器控件实现的多个事件提供了功能。

 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.TreeView.System#Web#UI#ICallbackEventHandler#RaiseCallbackEvent(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="RaisePostDataChangedEvent">
      <MemberSignature Language="C#" Value="protected virtual void RaisePostDataChangedEvent ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void RaisePostDataChangedEvent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.RaisePostDataChangedEvent" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub RaisePostDataChangedEvent ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void RaisePostDataChangedEvent();" />
      <MemberSignature Language="F#" Value="abstract member RaisePostDataChangedEvent : unit -&gt; unit&#xA;override this.RaisePostDataChangedEvent : unit -&gt; unit" Usage="treeView.RaisePostDataChangedEvent " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>向 <see cref="T:System.Web.UI.WebControls.TreeView" /> 控件发出信号，以通知 ASP.NET 应用程序该控件的状态已更改。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 控件的更改事件 <xref:System.Web.UI.WebControls.TreeView> 是从方法引发的 <xref:System.Web.UI.WebControls.TreeView.RaisePostDataChangedEvent%2A> 。

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
      </Docs>
    </Member>
    <Member MemberName="RenderBeginTag">
      <MemberSignature Language="C#" Value="public override void RenderBeginTag (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void RenderBeginTag(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.RenderBeginTag(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub RenderBeginTag (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void RenderBeginTag(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.RenderBeginTag : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="treeView.RenderBeginTag writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">表示在客户端上呈现 HTML 内容的输出流的 <see cref="T:System.Web.UI.HtmlTextWriter" />。</param>
        <summary>将控件的 HTML 开始标记呈现到指定的编写器中。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.TreeView.RenderBeginTag%2A>方法主要由控件开发人员使用。

 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.TreeView.RenderEndTag(System.Web.UI.HtmlTextWriter)" />
        <altmember cref="M:System.Web.UI.WebControls.WebControl.RenderBeginTag(System.Web.UI.HtmlTextWriter)" />
      </Docs>
    </Member>
    <Member MemberName="RenderContents">
      <MemberSignature Language="C#" Value="protected internal override void RenderContents (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void RenderContents(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.RenderContents(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub RenderContents (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void RenderContents(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.RenderContents : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="treeView.RenderContents writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">表示用于向网页写入内容的输出流的 <see cref="T:System.Web.UI.HtmlTextWriter" />。</param>
        <summary>呈现 <see cref="T:System.Web.UI.WebControls.TreeView" /> 控件中的节点。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 使用 <xref:System.Web.UI.WebControls.TreeView.RenderContents%2A> 方法可向客户端呈现控件中的节点 <xref:System.Web.UI.WebControls.TreeView> 。

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.HtmlTextWriter" />
      </Docs>
    </Member>
    <Member MemberName="RenderEndTag">
      <MemberSignature Language="C#" Value="public override void RenderEndTag (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void RenderEndTag(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.RenderEndTag(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub RenderEndTag (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void RenderEndTag(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.RenderEndTag : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="treeView.RenderEndTag writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">表示在客户端上呈现 HTML 内容的输出流的 <see cref="T:System.Web.UI.HtmlTextWriter" />。</param>
        <summary>将控件的 HTML 结束标记呈现到指定的编写器中。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.TreeView.RenderEndTag%2A>方法主要由控件开发人员使用。

 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.TreeView.RenderBeginTag(System.Web.UI.HtmlTextWriter)" />
        <altmember cref="M:System.Web.UI.WebControls.WebControl.RenderEndTag(System.Web.UI.HtmlTextWriter)" />
      </Docs>
    </Member>
    <Member MemberName="RootNodeStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TreeNodeStyle RootNodeStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TreeNodeStyle RootNodeStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.RootNodeStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RootNodeStyle As TreeNodeStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TreeNodeStyle ^ RootNodeStyle { System::Web::UI::WebControls::TreeNodeStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RootNodeStyle : System.Web.UI.WebControls.TreeNodeStyle" Usage="System.Web.UI.WebControls.TreeView.RootNodeStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(null)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(null)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.NotifyParentProperty(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.NotifyParentProperty(true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TreeNodeStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取对 <see cref="T:System.Web.UI.WebControls.TreeNodeStyle" /> 对象的引用，该对象用于设置 <see cref="T:System.Web.UI.WebControls.TreeView" /> 控件中根节点的外观。</summary>
        <value>对 <see cref="T:System.Web.UI.WebControls.TreeNodeStyle" /> 的一个引用，表示 <see cref="T:System.Web.UI.WebControls.TreeView" /> 中根节点的样式。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 使用 <xref:System.Web.UI.WebControls.TreeView.RootNodeStyle%2A> 属性可控制控件中根节点的外观 <xref:System.Web.UI.WebControls.TreeView> 。 此属性是只读的;但是，您可以设置 <xref:System.Web.UI.WebControls.TreeNodeStyle> 它返回的对象的属性。 可以在窗体中以声明方式设置这些属性 `Property-Subproperty` ，其中 `Subproperty` 是对象的属性 <xref:System.Web.UI.WebControls.TreeNodeStyle> (例如 `RootNodeStyle-ForeColor`) 。 还可以以编程方式设置属性 `Property.Subproperty` ， (例如 `RootNodeStyle.ForeColor`) 。 常见设置通常包括自定义背景色、前景颜色、字体属性和节点间距。 样式属性按以下优先级顺序应用：

1.  <xref:System.Web.UI.WebControls.TreeView.NodeStyle%2A>.

2.  <xref:System.Web.UI.WebControls.TreeView.RootNodeStyle%2A>、 <xref:System.Web.UI.WebControls.TreeView.ParentNodeStyle%2A> 或 <xref:System.Web.UI.WebControls.TreeView.LeafNodeStyle%2A> ，具体取决于节点类型。 如果 <xref:System.Web.UI.WebControls.TreeView.LevelStyles%2A> 定义了集合，则此时将应用该集合，并重写其他节点样式属性。

3.  <xref:System.Web.UI.WebControls.TreeView.SelectedNodeStyle%2A>

4.  <xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A>.

 如果需要生成目录样式的导航菜单，其中某一级别的节点应具有相同的外观，无论它们是否具有子节点，都可以考虑使用 <xref:System.Web.UI.WebControls.TreeView.LevelStyles%2A> 属性，而不是设置各个样式属性。



## Examples
 下面的代码示例演示如何使用 <xref:System.Web.UI.WebControls.TreeView.RootNodeStyle%2A> 属性来控制控件中根节点的外观 <xref:System.Web.UI.WebControls.TreeView> 。

 [!code-aspx-csharp[TreeViewRootNodeStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewRootNodeStyle/CS/treeviewrootnodestylecs.aspx#1)]
 [!code-aspx-vb[TreeViewRootNodeStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewRootNodeStyle/VB/treeviewrootnodestylevb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.LeafNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.HoverNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.NodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ParentNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.SelectedNodeStyle" />
      </Docs>
    </Member>
    <Member MemberName="SaveViewState">
      <MemberSignature Language="C#" Value="protected override object SaveViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance object SaveViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.SaveViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function SaveViewState () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Object ^ SaveViewState();" />
      <MemberSignature Language="F#" Value="override this.SaveViewState : unit -&gt; obj" Usage="treeView.SaveViewState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>保存 <see cref="T:System.Web.UI.WebControls.TreeView" /> 控件的状态。</summary>
        <returns>服务器控件的当前视图状态；否则，如果没有与该控件相关联的视图状态，则为 <see langword="null" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectedNode">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TreeNode SelectedNode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TreeNode SelectedNode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.SelectedNode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SelectedNode As TreeNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TreeNode ^ SelectedNode { System::Web::UI::WebControls::TreeNode ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectedNode : System.Web.UI.WebControls.TreeNode" Usage="System.Web.UI.WebControls.TreeView.SelectedNode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TreeNode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取表示 <see cref="T:System.Web.UI.WebControls.TreeNode" /> 控件中选定节点的 <see cref="T:System.Web.UI.WebControls.TreeView" /> 对象。</summary>
        <value>一个 <see cref="T:System.Web.UI.WebControls.TreeNode" />，它表示 <see cref="T:System.Web.UI.WebControls.TreeView" /> 中的选定节点。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 控件中节点的文本 <xref:System.Web.UI.WebControls.TreeView> 可以是以下两种模式之一：选择模式和导航模式。 默认情况下，节点处于选择模式。 若要使节点进入导航模式，请将 <xref:System.Web.UI.WebControls.TreeNode.NavigateUrl%2A> 节点的属性设置为空字符串以外的值 ( "" ) 。 若要将节点置于选择模式下，请将 <xref:System.Web.UI.WebControls.TreeNode.NavigateUrl%2A> 节点的属性设置为空字符串 ( "" ) 。

 当节点处于选择模式时，用户可以通过单击节点中的文本来选择节点。 使用 <xref:System.Web.UI.WebControls.TreeView.SelectedNode%2A> 属性可确定在控件中选择的节点 <xref:System.Web.UI.WebControls.TreeView> 。

> [!NOTE]
>  当控件显示超链接时，不能选择节点 <xref:System.Web.UI.WebControls.TreeView> 。 显示超链接时， <xref:System.Web.UI.WebControls.TreeView.SelectedNode%2A> 属性始终返回 `null` 。

 当用户通过单击新节点中的文本在控件中选择另一个节点时 <xref:System.Web.UI.WebControls.TreeView> ，默认情况下 <xref:System.Web.UI.WebControls.TreeView.SelectedNodeChanged> 会引发该事件。 可以通过设置属性的属性来指定其他事件 <xref:System.Web.UI.WebControls.TreeNode.SelectAction%2A> 。 下表列出了可用的选项。

|选择操作|说明|
|----------------------|-----------------|
|<xref:System.Web.UI.WebControls.TreeNodeSelectAction.Expand>|在展开和折叠之间切换节点。 <xref:System.Web.UI.WebControls.TreeView.TreeNodeExpanded> <xref:System.Web.UI.WebControls.TreeView.TreeNodeCollapsed> 适当地引发或事件。|
|<xref:System.Web.UI.WebControls.TreeNodeSelectAction.None>|在选定节点时不引发任何事件。|
|<xref:System.Web.UI.WebControls.TreeNodeSelectAction.Select>|在选定节点时引发 <xref:System.Web.UI.WebControls.TreeView.SelectedNodeChanged> 事件。|
|<xref:System.Web.UI.WebControls.TreeNodeSelectAction.SelectExpand>|在选定节点时引发 <xref:System.Web.UI.WebControls.TreeView.SelectedNodeChanged> 和 <xref:System.Web.UI.WebControls.TreeView.TreeNodeExpanded> 两个事件。 节点只展开，从不折叠。|

> [!NOTE]
>  如果 <xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A> 节点的属性设置为，则不会呈现 <xref:System.Web.UI.WebControls.TreeNode.SelectAction%2A> `TreeNodeSelectAction.None` 。



## Examples
 下面的代码示例演示如何使用 <xref:System.Web.UI.WebControls.TreeView.SelectedNode%2A> 属性来确定控件中选定节点的值 <xref:System.Web.UI.WebControls.TreeView> 。

 [!code-aspx-csharp[TreeViewSelectedNodeStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewSelectedNodeStyle/CS/treeviewselectednodestylecs.aspx#1)]
 [!code-aspx-vb[TreeViewSelectedNodeStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewSelectedNodeStyle/VB/treeviewselectednodestylevb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeNode" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ShowCheckBoxes" />
        <altmember cref="E:System.Web.UI.WebControls.TreeView.SelectedNodeChanged" />
        <altmember cref="E:System.Web.UI.WebControls.TreeView.TreeNodeExpanded" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.SelectAction" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNodeBinding.SelectAction" />
      </Docs>
    </Member>
    <Member MemberName="SelectedNodeChanged">
      <MemberSignature Language="C#" Value="public event EventHandler SelectedNodeChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler SelectedNodeChanged" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.TreeView.SelectedNodeChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SelectedNodeChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ SelectedNodeChanged;" />
      <MemberSignature Language="F#" Value="member this.SelectedNodeChanged : EventHandler " Usage="member this.SelectedNodeChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>在 <see cref="T:System.Web.UI.WebControls.TreeView" /> 控件中选定某个节点时发生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.TreeView.SelectedNodeChanged>在控件中选择节点时，将引发事件 <xref:System.Web.UI.WebControls.TreeView> 。 这使你可以提供一种事件处理方法，该方法可在每次发生此事件时执行自定义例程，如更新显示的内容。

 您可以选择设置 <xref:System.Web.UI.WebControls.TreeNode.SelectAction%2A> 节点的属性，以指定在选择节点时引发的事件。 下表列出了可用的选项。

|选择操作|说明|
|----------------------|-----------------|
|<xref:System.Web.UI.WebControls.TreeNodeSelectAction.Expand>|在展开和折叠之间切换节点。 <xref:System.Web.UI.WebControls.TreeView.TreeNodeExpanded> <xref:System.Web.UI.WebControls.TreeView.TreeNodeCollapsed> 适当地引发或事件。|
|<xref:System.Web.UI.WebControls.TreeNodeSelectAction.None>|在选定节点时不引发任何事件。|
|<xref:System.Web.UI.WebControls.TreeNodeSelectAction.Select>|在选定节点时引发 <xref:System.Web.UI.WebControls.TreeView.SelectedNodeChanged> 事件。|
|<xref:System.Web.UI.WebControls.TreeNodeSelectAction.SelectExpand>|在选定节点时引发 <xref:System.Web.UI.WebControls.TreeView.SelectedNodeChanged> 和 <xref:System.Web.UI.WebControls.TreeView.TreeNodeExpanded> 两个事件。 节点只展开，从不折叠。|

> [!NOTE]
>  如果 <xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A> 节点的属性设置为，则不会呈现 <xref:System.Web.UI.WebControls.TreeNode.SelectAction%2A> `TreeNodeSelectAction.None` 。

 <xref:System.Web.UI.WebControls.TreeView.SelectedNodeChanged>仅当用户单击节点时在回发时才会触发事件。 如果 <xref:System.Web.UI.WebControls.TreeView.SelectedNode%2A> 以编程方式更改属性，则不会触发事件。

 有关如何处理事件的详细信息，请参阅 [处理和引发事件](/dotnet/standard/events/)。



## Examples
 下面的代码示例演示如何在 <xref:System.Web.UI.WebControls.TreeView.SelectedNodeChanged> <xref:System.Web.UI.WebControls.Label> 控件中选择节点时，使用事件更新控件 <xref:System.Web.UI.WebControls.TreeView> 。

 [!code-aspx-csharp[TreeViewSelectedNodeStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewSelectedNodeStyle/CS/treeviewselectednodestylecs.aspx#1)]
 [!code-aspx-vb[TreeViewSelectedNodeStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewSelectedNodeStyle/VB/treeviewselectednodestylevb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.TreeView.OnSelectedNodeChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="SelectedNodeStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TreeNodeStyle SelectedNodeStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TreeNodeStyle SelectedNodeStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.SelectedNodeStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SelectedNodeStyle As TreeNodeStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TreeNodeStyle ^ SelectedNodeStyle { System::Web::UI::WebControls::TreeNodeStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectedNodeStyle : System.Web.UI.WebControls.TreeNodeStyle" Usage="System.Web.UI.WebControls.TreeView.SelectedNodeStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(null)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(null)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.NotifyParentProperty(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.NotifyParentProperty(true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TreeNodeStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取 <see cref="T:System.Web.UI.WebControls.TreeNodeStyle" /> 对象，该对象控制 <see cref="T:System.Web.UI.WebControls.TreeView" /> 控件中选定节点的外观。</summary>
        <value>一个 <see cref="T:System.Web.UI.WebControls.TreeNodeStyle" />，它表示 <see cref="T:System.Web.UI.WebControls.TreeView" /> 控件中选定节点的样式。 默认值为 <see langword="null" />，表示未设置 <see cref="P:System.Web.UI.WebControls.TreeView.SelectedNodeStyle" /> 属性。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 使用 <xref:System.Web.UI.WebControls.TreeView.SelectedNodeStyle%2A> 属性可控制控件中选定节点的外观 <xref:System.Web.UI.WebControls.TreeView> 。 此属性是只读的;但是，您可以设置 <xref:System.Web.UI.WebControls.TreeNodeStyle> 它返回的对象的属性。 可以在窗体中以声明方式设置这些属性 `Property-Subproperty` ，其中 `Subproperty` 是对象的属性 <xref:System.Web.UI.WebControls.TreeNodeStyle> (例如 `SelectedNodeStyle-ForeColor`) 。 还可以以编程方式设置属性 `Property.Subproperty` ， (例如 `SelectedNodeStyle.ForeColor`) 。 常见设置通常包括自定义背景色、前景颜色、字体属性和节点间距。 样式属性按以下优先级顺序应用：

1.  <xref:System.Web.UI.WebControls.TreeView.NodeStyle%2A>.

2.  <xref:System.Web.UI.WebControls.TreeView.RootNodeStyle%2A>、 <xref:System.Web.UI.WebControls.TreeView.ParentNodeStyle%2A> 或 <xref:System.Web.UI.WebControls.TreeView.LeafNodeStyle%2A> ，具体取决于节点类型。 如果 <xref:System.Web.UI.WebControls.TreeView.LevelStyles%2A> 定义了集合，则此时将应用该集合，并重写其他节点样式属性。

3.  <xref:System.Web.UI.WebControls.TreeView.SelectedNodeStyle%2A>.

4.  <xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A>.



## Examples
 下面的代码示例演示如何使用 <xref:System.Web.UI.WebControls.TreeView.SelectedNodeStyle%2A> 属性控制控件中选定节点的外观 <xref:System.Web.UI.WebControls.TreeView> 。

 [!code-aspx-csharp[TreeViewSelectedNodeStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewSelectedNodeStyle/CS/treeviewselectednodestylecs.aspx#1)]
 [!code-aspx-vb[TreeViewSelectedNodeStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewSelectedNodeStyle/VB/treeviewselectednodestylevb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.LeafNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.HoverNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.NodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ParentNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.RootNodeStyle" />
      </Docs>
    </Member>
    <Member MemberName="SelectedValue">
      <MemberSignature Language="C#" Value="public string SelectedValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SelectedValue" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.SelectedValue" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SelectedValue As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SelectedValue { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectedValue : string" Usage="System.Web.UI.WebControls.TreeView.SelectedValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue("")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue("")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取选定节点的值。</summary>
        <value>选定节点的值。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.TreeView.SelectedValue%2A>属性提供了一种方便的方法来确定所选节点的值。 此属性只返回属性所引用的 <xref:System.Web.UI.WebControls.TreeNode.Value%2A> 对象的属性值 <xref:System.Web.UI.WebControls.TreeNode> <xref:System.Web.UI.WebControls.TreeView.SelectedNode%2A> 。 如果控件中当前未选定任何节点 <xref:System.Web.UI.WebControls.TreeView> ，则返回空字符串 ( "" ) 。

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.TreeView.SelectedNode" />
      </Docs>
    </Member>
    <Member MemberName="SetNodeDataBound">
      <MemberSignature Language="C#" Value="protected void SetNodeDataBound (System.Web.UI.WebControls.TreeNode node, bool dataBound);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SetNodeDataBound(class System.Web.UI.WebControls.TreeNode node, bool dataBound) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.SetNodeDataBound(System.Web.UI.WebControls.TreeNode,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub SetNodeDataBound (node As TreeNode, dataBound As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void SetNodeDataBound(System::Web::UI::WebControls::TreeNode ^ node, bool dataBound);" />
      <MemberSignature Language="F#" Value="member this.SetNodeDataBound : System.Web.UI.WebControls.TreeNode * bool -&gt; unit" Usage="treeView.SetNodeDataBound (node, dataBound)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="System.Web.UI.WebControls.TreeNode" />
        <Parameter Name="dataBound" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="node">要设置的 <see cref="T:System.Web.UI.WebControls.TreeNode" />。</param>
        <param name="dataBound">若要将节点设置为被数据绑定，则为 <see langword="true" />；否则为 <see langword="false" />。</param>
        <summary>允许派生类设置指定的 <see cref="T:System.Web.UI.WebControls.TreeNode" /> 控件是否被数据绑定。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 使用 <xref:System.Web.UI.WebControls.TreeView.SetNodeDataBound%2A> 方法来指示指定的是否 <xref:System.Web.UI.WebControls.TreeNode> 是数据绑定的。

 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><see cref="M:System.Web.UI.WebControls.TreeView.SetNodeDataBound(System.Web.UI.WebControls.TreeNode,System.Boolean)" />提供方法是为了允许从控件派生的控件 <see cref="T:System.Web.UI.WebControls.TreeView" /> <see cref="P:System.Web.UI.WebControls.TreeNode.DataBound" /> 在节点上设置属性。</para></block>
        <altmember cref="M:System.Web.UI.WebControls.TreeView.SetNodeDataItem(System.Web.UI.WebControls.TreeNode,System.Object)" />
        <altmember cref="M:System.Web.UI.WebControls.TreeView.SetNodeDataPath(System.Web.UI.WebControls.TreeNode,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="SetNodeDataItem">
      <MemberSignature Language="C#" Value="protected void SetNodeDataItem (System.Web.UI.WebControls.TreeNode node, object dataItem);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SetNodeDataItem(class System.Web.UI.WebControls.TreeNode node, object dataItem) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.SetNodeDataItem(System.Web.UI.WebControls.TreeNode,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub SetNodeDataItem (node As TreeNode, dataItem As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void SetNodeDataItem(System::Web::UI::WebControls::TreeNode ^ node, System::Object ^ dataItem);" />
      <MemberSignature Language="F#" Value="member this.SetNodeDataItem : System.Web.UI.WebControls.TreeNode * obj -&gt; unit" Usage="treeView.SetNodeDataItem (node, dataItem)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="System.Web.UI.WebControls.TreeNode" />
        <Parameter Name="dataItem" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="node">要设置的 <see cref="T:System.Web.UI.WebControls.TreeNode" />。</param>
        <param name="dataItem"><see cref="T:System.Web.UI.WebControls.TreeNode" /> 的数据项。</param>
        <summary>允许派生类为指定的 <see cref="T:System.Web.UI.WebControls.TreeNode" /> 控件设置数据项。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 使用 <xref:System.Web.UI.WebControls.TreeView.SetNodeDataItem%2A> 方法指定指定控件的数据项 <xref:System.Web.UI.WebControls.TreeNode> 。

 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.TreeView.SetNodeDataBound(System.Web.UI.WebControls.TreeNode,System.Boolean)" />
        <altmember cref="M:System.Web.UI.WebControls.TreeView.SetNodeDataPath(System.Web.UI.WebControls.TreeNode,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="SetNodeDataPath">
      <MemberSignature Language="C#" Value="protected void SetNodeDataPath (System.Web.UI.WebControls.TreeNode node, string dataPath);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SetNodeDataPath(class System.Web.UI.WebControls.TreeNode node, string dataPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.SetNodeDataPath(System.Web.UI.WebControls.TreeNode,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub SetNodeDataPath (node As TreeNode, dataPath As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void SetNodeDataPath(System::Web::UI::WebControls::TreeNode ^ node, System::String ^ dataPath);" />
      <MemberSignature Language="F#" Value="member this.SetNodeDataPath : System.Web.UI.WebControls.TreeNode * string -&gt; unit" Usage="treeView.SetNodeDataPath (node, dataPath)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="System.Web.UI.WebControls.TreeNode" />
        <Parameter Name="dataPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="node">要设置的 <see cref="T:System.Web.UI.WebControls.TreeNode" />。</param>
        <param name="dataPath"><see cref="T:System.Web.UI.WebControls.TreeNode" /> 的数据路径。</param>
        <summary>允许派生类为指定的 <see cref="T:System.Web.UI.WebControls.TreeNode" /> 控件设置数据路径。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 使用 <xref:System.Web.UI.WebControls.TreeView.SetNodeDataPath%2A> 方法设置指定控件的数据路径 <xref:System.Web.UI.WebControls.TreeNode> 。

 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.TreeView.SetNodeDataBound(System.Web.UI.WebControls.TreeNode,System.Boolean)" />
        <altmember cref="M:System.Web.UI.WebControls.TreeView.SetNodeDataItem(System.Web.UI.WebControls.TreeNode,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="ShowCheckBoxes">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TreeNodeTypes ShowCheckBoxes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.TreeNodeTypes ShowCheckBoxes" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.ShowCheckBoxes" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowCheckBoxes As TreeNodeTypes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TreeNodeTypes ShowCheckBoxes { System::Web::UI::WebControls::TreeNodeTypes get(); void set(System::Web::UI::WebControls::TreeNodeTypes value); };" />
      <MemberSignature Language="F#" Value="member this.ShowCheckBoxes : System.Web.UI.WebControls.TreeNodeTypes with get, set" Usage="System.Web.UI.WebControls.TreeView.ShowCheckBoxes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TreeNodeTypes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，它指示哪些节点类型将在 <see cref="T:System.Web.UI.WebControls.TreeView" /> 控件中显示复选框。</summary>
        <value><see cref="T:System.Web.UI.WebControls.TreeNodeTypes" /> 值的按位组合。 默认为 <see langword="TreeNodeType.None" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 若要在控件中提供多节点选择支持 <xref:System.Web.UI.WebControls.TreeView> ，可以在节点的图像旁显示复选框。 使用 <xref:System.Web.UI.WebControls.TreeView.ShowCheckBoxes%2A> 属性可指定哪些节点类型将显示复选框。 例如，如果将此属性设置为，则将 `TreeNodeType.Parent` 为树中的每个父节点显示复选框。 下表列出了此属性的有效值。

|节点类型|描述|
|---------------|-----------------|
|`TreeNodeType.All`|为所有节点显示复选框。|
|`TreeNodeType.Leaf`|为所有叶节点显示复选框。|
|`TreeNodeType.None`|不显示复选框。|
|`TreeNodeType.Parent`|为所有父节点显示复选框。|
|`TreeNodeType.Root`|为所有根节点显示复选框。|

 用于属性的枚举类型 <xref:System.Web.UI.WebControls.TreeView.ShowCheckBoxes%2A> 是一个标志枚举，它允许您通过按位运算组合值。 例如，若要显示父节点和叶节点的复选框，请使用按位 "或" 运算符合并 `TreeNodeType.Parent` 和 `TreeNodeType.Leaf` 值。

 若要确定哪些节点选中了复选框，请循环访问集合的节点 <xref:System.Web.UI.WebControls.TreeView.CheckedNodes%2A> 。

> [!NOTE]
>  可以 <xref:System.Web.UI.WebControls.TreeView.ShowCheckBoxes%2A> 通过设置每个节点的属性来重写该设置 <xref:System.Web.UI.WebControls.TreeNode.ShowCheckBox%2A> 。

 如果只需要提供单项选择支持，请考虑使用 <xref:System.Web.UI.WebControls.TreeView.SelectedNode%2A> 属性。

 此属性的值存储在视图状态中。



## Examples
 下面的代码示例演示如何使用 <xref:System.Web.UI.WebControls.TreeView.ShowCheckBoxes%2A> 属性来显示和隐藏不同节点类型的复选框。

 [!code-aspx-csharp[TreeViewShowCheckBoxes#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewShowCheckBoxes/CS/treeviewshowcheckboxescs.aspx#1)]
 [!code-aspx-vb[TreeViewShowCheckBoxes#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewShowCheckBoxes/VB/treeviewshowcheckboxesvb.aspx#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">按位组合值在 <see cref="T:System.Web.UI.WebControls.TreeNodeTypes" /> 枚举的范围之外。</exception>
        <altmember cref="T:System.Web.UI.WebControls.TreeNodeTypes" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.SelectedNode" />
      </Docs>
    </Member>
    <Member MemberName="ShowExpandCollapse">
      <MemberSignature Language="C#" Value="public bool ShowExpandCollapse { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowExpandCollapse" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.ShowExpandCollapse" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowExpandCollapse As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowExpandCollapse { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ShowExpandCollapse : bool with get, set" Usage="System.Web.UI.WebControls.TreeView.ShowExpandCollapse" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，它指示是否显示展开节点指示符。</summary>
        <value>若要显示展开节点指示符，则为 <see langword="true" />；否则为 <see langword="false" />。 默认为 <see langword="true" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 展开节点指示符用于显示节点是展开、折叠还是不可展开。 使用 <xref:System.Web.UI.WebControls.TreeView.ShowExpandCollapse%2A> 属性来指定展开节点指示符是否显示在 <xref:System.Web.UI.WebControls.TreeView> 控件中。

 当 <xref:System.Web.UI.WebControls.TreeView.ShowExpandCollapse%2A> 属性设置为时 `true` ，控件将 <xref:System.Web.UI.WebControls.TreeView> 在节点旁显示加号 (+) 或减号 ( ) 或一个占位符图像，以指示节点是可展开、可折叠还是不可展开。 通过首先将 <xref:System.Web.UI.WebControls.TreeView.ImageSet%2A> 属性设置为 `TreeViewImageSet.Custom` ，然后将 <xref:System.Web.UI.WebControls.TreeView.NoExpandImageUrl%2A> 、 <xref:System.Web.UI.WebControls.TreeView.ExpandImageUrl%2A> 和属性设置 <xref:System.Web.UI.WebControls.TreeView.CollapseImageUrl%2A> 为自定义图像的 url，可以指定自定义映像。 如果未指定任何图像，则使用默认图像。

 此属性的值存储在视图状态中。



## Examples
 下面的代码示例演示如何使用 <xref:System.Web.UI.WebControls.TreeView.ShowExpandCollapse%2A> 属性来显示和隐藏展开节点图标。

 [!code-aspx-csharp[TreeViewShowExpandCollapse#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewShowExpandCollapse/CS/treeviewshowexpandcollapsecs.aspx#1)]
 [!code-aspx-vb[TreeViewShowExpandCollapse#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewShowExpandCollapse/VB/treeviewshowexpandcollapsevb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.TreeView.NoExpandImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.CollapseImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ExpandImageUrl" />
      </Docs>
    </Member>
    <Member MemberName="ShowLines">
      <MemberSignature Language="C#" Value="public bool ShowLines { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowLines" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.ShowLines" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowLines As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowLines { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ShowLines : bool with get, set" Usage="System.Web.UI.WebControls.TreeView.ShowLines" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，它指示是否显示连接子节点和父节点的线条。</summary>
        <value>若要显示连接各节点的线条，则为 <see langword="true" />；否则为 <see langword="false" />。 默认为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 使用 <xref:System.Web.UI.WebControls.TreeView.ShowLines%2A> 属性来指定是否显示将子节点连接到父节点的行。 当此属性设置为时 `true` ， <xref:System.Web.UI.WebControls.TreeView> 控件将搜索由行图像的属性指定的可通过 Web 访问的文件夹 <xref:System.Web.UI.WebControls.TreeView.LineImagesFolder%2A> 。

> [!NOTE]
>  如果 <xref:System.Web.UI.WebControls.TreeView.LineImagesFolder%2A> 未设置该属性，则 <xref:System.Web.UI.WebControls.TreeView> 控件将使用内置的默认图像 (20 x 20 像素) 。

 此属性的值存储在视图状态中。



## Examples
 下面的代码示例演示如何使用 <xref:System.Web.UI.WebControls.TreeView.ShowLines%2A> 属性在控件中显示连接节点的线 <xref:System.Web.UI.WebControls.TreeView> 。 请确保使用线条设计器工具创建一组线条图像，并将其放置在示例应用程序的目录中名为 LineImages 的文件夹中。

 [!code-aspx-csharp[TreeViewLineImagesFolderUrl#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewLineImagesFolderUrl/CS/treeviewlineimagesfolderurlcs.aspx#1)]
 [!code-aspx-vb[TreeViewLineImagesFolderUrl#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewLineImagesFolderUrl/VB/treeviewlineimagesfolderurlvb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.TreeView.LineImagesFolder" />
      </Docs>
    </Member>
    <Member MemberName="SkipLinkText">
      <MemberSignature Language="C#" Value="public string SkipLinkText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SkipLinkText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.SkipLinkText" />
      <MemberSignature Language="VB.NET" Value="Public Property SkipLinkText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SkipLinkText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SkipLinkText : string with get, set" Usage="System.Web.UI.WebControls.TreeView.SkipLinkText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Localizable(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Localizable(true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，它用于为屏幕读取器呈现替换文字以跳过该控件的内容。</summary>
        <value>一个字符串，<see cref="T:System.Web.UI.WebControls.TreeView" /> 将其呈现为不可见图像的替换文字，作为对屏幕读取器的提示。 默认为“跳过导航链接”。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.TreeView.SkipLinkText%2A>属性是一个属性，你可以将其设置为使网页更易于访问。 包含重复内容的网页可以为屏幕阅读器用户提供一种机制来跳过读取内容的机制。

 <xref:System.Web.UI.WebControls.TreeView>控件提供 <xref:System.Web.UI.WebControls.TreeView.SkipLinkText%2A> 属性作为一种方法，让屏幕阅读器跳过整个控件。 如果 <xref:System.Web.UI.WebControls.TreeView.SkipLinkText%2A> 设置了属性，则会呈现一个带有替换文本的不可见图像，从而向用户提供跳转到控件末尾的选项。 屏幕阅读器会大声朗读备用文本，而图像只占用一个像素空间。 若要对页面的呈现进行精确的控件控制，请将 <xref:System.Web.UI.WebControls.TreeView.SkipLinkText%2A> 属性设置为空字符串 ( "" ) ，并提供您自己的用于跳过树的机制。

 <xref:System.Web.UI.WebControls.TreeView.SkipLinkText%2A>默认情况下，此属性设置为空字符串，这使得屏幕阅读器不会跳过控件。

 此属性的值存储在视图状态中。

 设置此属性后，可以使用设计器工具自动将此属性的值保存到资源文件中。 有关详细信息，请参阅 <xref:System.ComponentModel.LocalizableAttribute> 和 [全球化和本地化](https://docs.microsoft.com/previous-versions/aspnet/c6zyy3s9(v=vs.100))。

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.ICallbackEventHandler.GetCallbackResult">
      <MemberSignature Language="C#" Value="string ICallbackEventHandler.GetCallbackResult ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.Web.UI.ICallbackEventHandler.GetCallbackResult() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.System#Web#UI#ICallbackEventHandler#GetCallbackResult" />
      <MemberSignature Language="VB.NET" Value="Function GetCallbackResult () As String Implements ICallbackEventHandler.GetCallbackResult" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::String ^ System.Web.UI.ICallbackEventHandler.GetCallbackResult() = System::Web::UI::ICallbackEventHandler::GetCallbackResult;" />
      <MemberSignature Language="F#" Value="abstract member System.Web.UI.ICallbackEventHandler.GetCallbackResult : unit -&gt; string&#xA;override this.System.Web.UI.ICallbackEventHandler.GetCallbackResult : unit -&gt; string" Usage="treeView.System.Web.UI.ICallbackEventHandler.GetCallbackResult " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.ICallbackEventHandler.GetCallbackResult</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>返回以控件为目标的回调事件的结果。</summary>
        <returns>回调的结果。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.TreeView>控件实现 <xref:System.Web.UI.ICallbackEventHandler> 接口，并使用 <xref:System.Web.UI.WebControls.TreeView.RaisePostBackEvent%2A> 来检索数据，并使用方法将检索到的 <xref:System.Web.UI.WebControls.TreeView.GetCallbackResult%2A> 数据返回到控件。

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent">
      <MemberSignature Language="C#" Value="void ICallbackEventHandler.RaiseCallbackEvent (string eventArgument);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(string eventArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.System#Web#UI#ICallbackEventHandler#RaiseCallbackEvent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Sub RaiseCallbackEvent (eventArgument As String) Implements ICallbackEventHandler.RaiseCallbackEvent" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System::String ^ eventArgument) = System::Web::UI::ICallbackEventHandler::RaiseCallbackEvent;" />
      <MemberSignature Language="F#" Value="abstract member System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent : string -&gt; unit&#xA;override this.System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent : string -&gt; unit" Usage="treeView.System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent eventArgument" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventArgument">表示要传递到事件处理程序的可选事件自变量的字符串。</param>
        <summary>使用指定参数引发回调事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 控件开发人员应重写 <xref:System.Web.UI.WebControls.TreeView.RaiseCallbackEvent%2A> 方法。

 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.String,System.String,System.String,System.String,System.String,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IPostBackDataHandler.LoadPostData">
      <MemberSignature Language="C#" Value="bool IPostBackDataHandler.LoadPostData (string postDataKey, System.Collections.Specialized.NameValueCollection postCollection);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Web.UI.IPostBackDataHandler.LoadPostData(string postDataKey, class System.Collections.Specialized.NameValueCollection postCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.System#Web#UI#IPostBackDataHandler#LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Function LoadPostData (postDataKey As String, postCollection As NameValueCollection) As Boolean Implements IPostBackDataHandler.LoadPostData" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Web.UI.IPostBackDataHandler.LoadPostData(System::String ^ postDataKey, System::Collections::Specialized::NameValueCollection ^ postCollection) = System::Web::UI::IPostBackDataHandler::LoadPostData;" />
      <MemberSignature Language="F#" Value="abstract member System.Web.UI.IPostBackDataHandler.LoadPostData : string * System.Collections.Specialized.NameValueCollection -&gt; bool&#xA;override this.System.Web.UI.IPostBackDataHandler.LoadPostData : string * System.Collections.Specialized.NameValueCollection -&gt; bool" Usage="treeView.System.Web.UI.IPostBackDataHandler.LoadPostData (postDataKey, postCollection)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackDataHandler.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="postDataKey" Type="System.String" />
        <Parameter Name="postCollection" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="postDataKey">控件的主要标识符。</param>
        <param name="postCollection">所有传入名称值的集合。</param>
        <summary>处理 <see cref="T:System.Web.UI.WebControls.TreeView" /> 控件的回发数据。</summary>
        <returns>如果 <see cref="T:System.Web.UI.WebControls.TreeView" /> 控件的状态由于回发事件而发生更改，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 控件开发人员应重写 <xref:System.Web.UI.WebControls.TreeView.LoadPostData%2A> 方法。

 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.TreeView.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent">
      <MemberSignature Language="C#" Value="void IPostBackDataHandler.RaisePostDataChangedEvent ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.System#Web#UI#IPostBackDataHandler#RaisePostDataChangedEvent" />
      <MemberSignature Language="VB.NET" Value="Sub RaisePostDataChangedEvent () Implements IPostBackDataHandler.RaisePostDataChangedEvent" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent() = System::Web::UI::IPostBackDataHandler::RaisePostDataChangedEvent;" />
      <MemberSignature Language="F#" Value="abstract member System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent : unit -&gt; unit&#xA;override this.System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent : unit -&gt; unit" Usage="treeView.System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>向 <see cref="T:System.Web.UI.WebControls.TreeView" /> 控件发出信号，以通知 ASP.NET 应用程序该控件的状态已更改。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 控件开发人员应重写 <xref:System.Web.UI.WebControls.TreeView.RaisePostDataChangedEvent%2A> 方法。

 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.TreeView.RaisePostDataChangedEvent" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IPostBackEventHandler.RaisePostBackEvent">
      <MemberSignature Language="C#" Value="void IPostBackEventHandler.RaisePostBackEvent (string eventArgument);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(string eventArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Sub RaisePostBackEvent (eventArgument As String) Implements IPostBackEventHandler.RaisePostBackEvent" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System::String ^ eventArgument) = System::Web::UI::IPostBackEventHandler::RaisePostBackEvent;" />
      <MemberSignature Language="F#" Value="abstract member System.Web.UI.IPostBackEventHandler.RaisePostBackEvent : string -&gt; unit&#xA;override this.System.Web.UI.IPostBackEventHandler.RaisePostBackEvent : string -&gt; unit" Usage="treeView.System.Web.UI.IPostBackEventHandler.RaisePostBackEvent eventArgument" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventArgument">表示要传递到事件处理程序的可选事件自变量的字符串。</param>
        <summary>启用 <see cref="T:System.Web.UI.WebControls.TreeView" /> 控件以处理将窗体发送到服务器时引发的事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 控件开发人员应重写 <xref:System.Web.UI.WebControls.TreeView.RaisePostBackEvent%2A> 方法。

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TagKey">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.HtmlTextWriterTag TagKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.HtmlTextWriterTag TagKey" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.TagKey" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property TagKey As HtmlTextWriterTag" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Web::UI::HtmlTextWriterTag TagKey { System::Web::UI::HtmlTextWriterTag get(); };" />
      <MemberSignature Language="F#" Value="member this.TagKey : System.Web.UI.HtmlTextWriterTag" Usage="System.Web.UI.WebControls.TreeView.TagKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.HtmlTextWriterTag</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取 <see cref="T:System.Web.UI.WebControls.TreeView" /> 控件的 <see cref="T:System.Web.UI.HtmlTextWriterTag" /> 值。</summary>
        <value>总是返回 <see cref="F:System.Web.UI.HtmlTextWriterTag.Div" /> 值。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.TreeView.TagKey%2A>属性允许输出流为控件写入适当的 HTML 标记 <xref:System.Web.UI.WebControls.TreeView> 。

 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>可以重写 <see cref="P:System.Web.UI.WebControls.TreeView.TagKey" /> 属性以指定要用于 <see cref="T:System.Web.UI.HtmlTextWriterTag" /> 派生控件的值。</para></block>
        <altmember cref="T:System.Web.UI.HtmlTextWriterTag" />
      </Docs>
    </Member>
    <Member MemberName="Target">
      <MemberSignature Language="C#" Value="public string Target { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Target" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.Target" />
      <MemberSignature Language="VB.NET" Value="Public Property Target As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Target { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Target : string with get, set" Usage="System.Web.UI.WebControls.TreeView.Target" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue("")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue("")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置要在其中显示与节点相关联的网页内容的目标窗口或框架。</summary>
        <value>显示所链接的网页内容的目标窗口或框架。 值必须以 A 到 Z 范围内的字母（不区分大小写）打头，但某些以下划线打头的特殊值除外，如下表所示：

 <list type="table"><listheader><term> 目标值

 </term><description> 呈现内容的位置

 </description></listheader><item><term><see langword="_blank" /></term><description> 无框架的新窗口。

 </description></item><item><term><see langword="_parent" /></term><description> 直接框架集父级。

 </description></item><item><term><see langword="_search" /></term><description> 搜索窗格。

 </description></item><item><term><see langword="_self" /></term><description> 具有焦点的框架。

 </description></item><item><term><see langword="_top" /></term><description> 没有框架的完整窗口。

 </description></item></list><block subset="none" type="note"><para>
请查看浏览器文档，确定是否支持 <see langword="_search" /> 值。  例如，Microsoft Internet Explorer 5.0 及更高版本支持 <see langword="_search" /> 目标值。

</para></block>

默认值为空字符串 ("")，这会刷新具有焦点的窗口或框架。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 使用 " <xref:System.Web.UI.WebControls.TreeView.Target%2A> 属性" 指定在单击节点时要在其中显示链接到该节点的 Web 内容的窗口或框架。

> [!NOTE]
>  <xref:System.Web.UI.WebControls.TreeView.Target%2A>属性呈现为 `target` 属性。 `target` `anchor` XHTML 1.1 文档类型定义中不允许使用元素的属性。 <xref:System.Web.UI.WebControls.TreeView.Target%2A>如果的呈现输出 <xref:System.Web.UI.WebControls.TreeView> 必须符合 XHTML 1.1，请不要设置属性。 有关详细信息，请参阅 [Visual Studio 中的 XHTML 标准和 ASP.NET](https://docs.microsoft.com/previous-versions/aspnet/exc57y7e(v=vs.100))。
>
>  创建可访问的网页时，应避免使用 <xref:System.Web.UI.WebControls.TreeView.Target%2A> 属性来面向其他窗口。 有关详细信息，请参阅 [ASP.NET 控件和辅助功能](https://docs.microsoft.com/previous-versions/ms227996(v=vs.140))。

 此属性的值存储在视图状态中。



## Examples
 下面的代码示例演示如何使用属性在 <xref:System.Web.UI.WebControls.TreeView.Target%2A> 单击节点时显示链接到新窗口中某个节点的 Web 内容。

 [!code-aspx-csharp[TreeViewTarget#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewTarget/CS/treeviewtargetcs.aspx#1)]
 [!code-aspx-vb[TreeViewTarget#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewTarget/VB/treeviewtargetvb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.Target" />
      </Docs>
    </Member>
    <Member MemberName="TrackViewState">
      <MemberSignature Language="C#" Value="protected override void TrackViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void TrackViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.TrackViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub TrackViewState ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void TrackViewState();" />
      <MemberSignature Language="F#" Value="override this.TrackViewState : unit -&gt; unit" Usage="treeView.TrackViewState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>跟踪 <see cref="T:System.Web.UI.WebControls.TreeView" /> 控件的视图状态更改，以便可将它们存储在该控件的 <see cref="T:System.Web.UI.StateBag" /> 对象中。 通过 <see cref="T:System.Web.UI.StateBag" /> 属性可以访问此 <see cref="P:System.Web.UI.Control.ViewState" />。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.TreeView.TrackViewState%2A>重写方法，以将起始点标记为开始跟踪，并将更改保存为控件的视图状态的一部分。

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.StateBag" />
        <altmember cref="P:System.Web.UI.Control.ViewState" />
      </Docs>
    </Member>
    <Member MemberName="TreeNodeCheckChanged">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.TreeNodeEventHandler TreeNodeCheckChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.TreeNodeEventHandler TreeNodeCheckChanged" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.TreeView.TreeNodeCheckChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TreeNodeCheckChanged As TreeNodeEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::TreeNodeEventHandler ^ TreeNodeCheckChanged;" />
      <MemberSignature Language="F#" Value="member this.TreeNodeCheckChanged : System.Web.UI.WebControls.TreeNodeEventHandler " Usage="member this.TreeNodeCheckChanged : System.Web.UI.WebControls.TreeNodeEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TreeNodeEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>当 <see cref="T:System.Web.UI.WebControls.TreeView" /> 控件中的复选框在向服务器的两次发送过程之间状态有所更改时发生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.TreeView.TreeNodeCheckChanged>当控件中的复选框在 <xref:System.Web.UI.WebControls.TreeView> 向服务器的各次发送过程间更改状态时，将引发事件。 这使你可以提供一种事件处理方法，该方法可在每次发生此事件时执行自定义例程，如更新数据库或显示的内容。

 即使在 <xref:System.Web.UI.WebControls.TreeView.TreeNodeCheckChanged> 回发时触发事件，更改复选框也不会导致回发。

 有关如何处理事件的详细信息，请参阅 [处理和引发事件](/dotnet/standard/events/)。



## Examples
 下面的代码示例演示如何使用事件在 <xref:System.Web.UI.WebControls.TreeView.TreeNodeCheckChanged> <xref:System.Web.UI.WebControls.Label> 控件的复选框在 <xref:System.Web.UI.WebControls.TreeView> 向服务器的各次发送过程间更改状态时更新控件。

 [!code-aspx-csharp[TreeViewCheckChanged#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewCheckChanged/CS/treeviewcheckchangedcs.aspx#1)]
 [!code-aspx-vb[TreeViewCheckChanged#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewCheckChanged/VB/treeviewcheckchangedvb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.TreeView.OnTreeNodeCheckChanged(System.Web.UI.WebControls.TreeNodeEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="TreeNodeCollapsed">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.TreeNodeEventHandler TreeNodeCollapsed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.TreeNodeEventHandler TreeNodeCollapsed" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.TreeView.TreeNodeCollapsed" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TreeNodeCollapsed As TreeNodeEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::TreeNodeEventHandler ^ TreeNodeCollapsed;" />
      <MemberSignature Language="F#" Value="member this.TreeNodeCollapsed : System.Web.UI.WebControls.TreeNodeEventHandler " Usage="member this.TreeNodeCollapsed : System.Web.UI.WebControls.TreeNodeEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TreeNodeEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>在 <see cref="T:System.Web.UI.WebControls.TreeView" /> 控件中折叠某个节点时发生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.TreeView.TreeNodeCollapsed>节点在控件中处于折叠状态时引发事件 <xref:System.Web.UI.WebControls.TreeView> 。 这使你可以提供一种事件处理方法，该方法可在每次发生此事件时执行自定义例程。

 有关如何处理事件的详细信息，请参阅 [处理和引发事件](/dotnet/standard/events/)。



## Examples
 下面的代码示例演示 <xref:System.Web.UI.WebControls.TreeView.TreeNodeCollapsed> <xref:System.Web.UI.WebControls.Label> 当用户折叠控件中的节点时，如何使用事件更新控件的内容 <xref:System.Web.UI.WebControls.TreeView> 。

 [!code-aspx-csharp[TreeViewTreeNodeExpand#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewTreeNodeExpand/CS/treeviewtreenodeexpandcs.aspx#1)]
 [!code-aspx-vb[TreeViewTreeNodeExpand#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewTreeNodeExpand/VB/treeviewtreenodeexpandvb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.TreeView.OnTreeNodeCollapsed(System.Web.UI.WebControls.TreeNodeEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="TreeNodeDataBound">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.TreeNodeEventHandler TreeNodeDataBound;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.TreeNodeEventHandler TreeNodeDataBound" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.TreeView.TreeNodeDataBound" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TreeNodeDataBound As TreeNodeEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::TreeNodeEventHandler ^ TreeNodeDataBound;" />
      <MemberSignature Language="F#" Value="member this.TreeNodeDataBound : System.Web.UI.WebControls.TreeNodeEventHandler " Usage="member this.TreeNodeDataBound : System.Web.UI.WebControls.TreeNodeEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TreeNodeEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>将数据项绑定到 <see cref="T:System.Web.UI.WebControls.TreeView" /> 控件中的某个节点时发生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.TreeView.TreeNodeDataBound>当数据项绑定到控件中的节点时，将引发事件 <xref:System.Web.UI.WebControls.TreeView> 。 这使你可以提供一种事件处理方法，该方法可在每次发生此事件时执行自定义例程。

 有关如何处理事件的详细信息，请参阅 [处理和引发事件](/dotnet/standard/events/)。



## Examples
 本部分包含两个代码示例。 第一个代码示例演示如何使用 <xref:System.Web.UI.WebControls.TreeView.TreeNodeDataBound> 事件在满足某些条件时更改节点的图像。 第二个代码示例提供了第一个代码示例的示例 XML 数据。

 下面的代码示例演示如何使用 <xref:System.Web.UI.WebControls.TreeView.TreeNodeDataBound> 事件在满足某些条件时更改节点的图像。 若要使此示例正常工作，必须将示例 XML 数据（在此代码示例之后提供）复制到名为 Book.xml 的文件中。 此外，请务必提供自己的图像，以便此示例显示。

 [!code-aspx-csharp[TreeViewTreeNodeDataBound#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewTreeNodeDataBound/CS/treeviewtreenodedataboundcs.aspx#1)]
 [!code-aspx-vb[TreeViewTreeNodeDataBound#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewTreeNodeDataBound/VB/treeviewtreenodedataboundvb.aspx#1)]

 下面的代码示例提供了前面的代码示例的示例 XML 数据。

```
<Book Title="Book Title">
    <Chapter Heading="Chapter 1">
        <Section Heading="Section 1">
        </Section>
        <Section Heading="Section 2">
        </Section>
    </Chapter>
    <Chapter Heading="Chapter 2">
        <Section Heading="Section 1">
        </Section>
    </Chapter>
</Book>
```

 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.TreeView.OnTreeNodeDataBound(System.Web.UI.WebControls.TreeNodeEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="TreeNodeExpanded">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.TreeNodeEventHandler TreeNodeExpanded;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.TreeNodeEventHandler TreeNodeExpanded" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.TreeView.TreeNodeExpanded" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TreeNodeExpanded As TreeNodeEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::TreeNodeEventHandler ^ TreeNodeExpanded;" />
      <MemberSignature Language="F#" Value="member this.TreeNodeExpanded : System.Web.UI.WebControls.TreeNodeEventHandler " Usage="member this.TreeNodeExpanded : System.Web.UI.WebControls.TreeNodeEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TreeNodeEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>在 <see cref="T:System.Web.UI.WebControls.TreeView" /> 控件中展开某个节点时发生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 在 <xref:System.Web.UI.WebControls.TreeView.TreeNodeExpanded> 控件中展开节点时，将引发事件 <xref:System.Web.UI.WebControls.TreeView> 。 这使你可以提供一种事件处理方法，该方法可在每次发生此事件时执行自定义例程。

> [!NOTE]
>  如果 <xref:System.Web.UI.WebControls.TreeNode.SelectAction%2A> 将节点的属性设置为 `TreeNodeSelectAction.Expand` 或，则 `TreeNodeSelectAction.SelectExpand` <xref:System.Web.UI.WebControls.TreeView.TreeNodeExpanded> 当在控件中单击该节点时，也会引发该事件 <xref:System.Web.UI.WebControls.TreeView> 。

 有关如何处理事件的详细信息，请参阅 [处理和引发事件](/dotnet/standard/events/)。



## Examples
 下面的代码示例演示 <xref:System.Web.UI.WebControls.TreeView.TreeNodeExpanded> <xref:System.Web.UI.WebControls.Label> 当用户展开控件中的节点时，如何使用事件更新控件的内容 <xref:System.Web.UI.WebControls.TreeView> 。

 [!code-aspx-csharp[TreeViewTreeNodeExpand#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewTreeNodeExpand/CS/treeviewtreenodeexpandcs.aspx#1)]
 [!code-aspx-vb[TreeViewTreeNodeExpand#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewTreeNodeExpand/VB/treeviewtreenodeexpandvb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.TreeView.OnTreeNodeExpanded(System.Web.UI.WebControls.TreeNodeEventArgs)" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.SelectAction" />
      </Docs>
    </Member>
    <Member MemberName="TreeNodePopulate">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.TreeNodeEventHandler TreeNodePopulate;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.TreeNodeEventHandler TreeNodePopulate" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.TreeView.TreeNodePopulate" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TreeNodePopulate As TreeNodeEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::TreeNodeEventHandler ^ TreeNodePopulate;" />
      <MemberSignature Language="F#" Value="member this.TreeNodePopulate : System.Web.UI.WebControls.TreeNodeEventHandler " Usage="member this.TreeNodePopulate : System.Web.UI.WebControls.TreeNodeEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TreeNodeEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>当其 <see cref="P:System.Web.UI.WebControls.TreeNode.PopulateOnDemand" /> 属性设置为 <see langword="true" /> 的节点在 <see cref="T:System.Web.UI.WebControls.TreeView" /> 控件中展开时发生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 有时，由于数据大小或自定义内容依赖于用户输入而导致静态预定义树结构是不切实际的。 因此， <xref:System.Web.UI.WebControls.TreeView> 控件支持动态节点填充。 如果将 <xref:System.Web.UI.WebControls.TreeNode.PopulateOnDemand%2A> 节点的属性设置为，则在 `true` 展开节点时，将在运行时填充该节点。

 若要动态填充节点，请首先将 <xref:System.Web.UI.WebControls.TreeNode.PopulateOnDemand%2A> 节点的属性设置为 `true` 。 接下来，为 <xref:System.Web.UI.WebControls.TreeView.TreeNodePopulate> 以编程方式填充节点的事件定义事件处理方法。 典型的事件处理方法从数据源中检索节点数据，将这些数据放入节点结构，然后将节点结构添加到要填充的 <xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A> 节点的集合中。 通过向 <xref:System.Web.UI.WebControls.TreeNode> 父节点的集合添加对象来创建节点结构 <xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A> 。

> [!NOTE]
>  如果将 <xref:System.Web.UI.WebControls.TreeNode.PopulateOnDemand%2A> 节点的属性设置为 `true` ，则必须动态填充节点。 不能以声明方式在其下嵌套另一个节点;否则，将在页面上出现错误。

 受支持的浏览器 (Microsoft Internet Explorer 4.0 兼容的浏览器和更高) 版本，也可利用客户端节点填充。 启用此功能后，控件可以在该 <xref:System.Web.UI.WebControls.TreeView> 节点展开时在客户端上动态填充节点，这会阻止需要回发到服务器。 有关客户端节点填充的详细信息，请参阅 <xref:System.Web.UI.WebControls.TreeView.PopulateNodesFromClient%2A> 。

 有关如何处理事件的详细信息，请参阅 [处理和引发事件](/dotnet/standard/events/)。



## Examples
 下面的代码示例演示如何使用事件在 <xref:System.Web.UI.WebControls.TreeView.TreeNodePopulate> <xref:System.Web.UI.WebControls.TreeView> 服务器上动态填充控件中的节点。 请注意， <xref:System.Web.UI.WebControls.TreeView.EnableClientScript%2A> 属性设置为 `false` ，以防止在客户端上处理扩展节点事件。

 [!code-aspx-csharp[TreeViewTreeNodePopulate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewTreeNodePopulate/CS/treeviewtreenodepopulatecs.aspx#1)]
 [!code-aspx-vb[TreeViewTreeNodePopulate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewTreeNodePopulate/VB/treeviewtreenodepopulatevb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.TreeView.OnTreeNodePopulate(System.Web.UI.WebControls.TreeNodeEventArgs)" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.PopulateOnDemand" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.PopulateNodesFromClient" />
      </Docs>
    </Member>
    <Member MemberName="Visible">
      <MemberSignature Language="C#" Value="public override bool Visible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Visible" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.Visible" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Visible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Visible { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Visible : bool with get, set" Usage="System.Web.UI.WebControls.TreeView.Visible" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示控件是否作为 UI 呈现在页上。</summary>
        <value>如果控件在页上可见，则为 <see langword="true" />；否则为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 如果将 <xref:System.Web.UI.WebControls.TreeView.Visible%2A> 属性设置为 `false` ，则不会呈现控件。

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
      </Docs>
    </Member>
  </Members>
</Type>
