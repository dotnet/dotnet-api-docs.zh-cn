<Type Name="ListView" FullName="System.Web.UI.WebControls.ListView">
  <Metadata><Meta Name="ms.openlocfilehash" Value="f70b4fe12296d091b3ba82ba6a455aaf433b4bd0" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89678826" /></Metadata><TypeSignature Language="C#" Value="public class ListView : System.Web.UI.WebControls.DataBoundControl, System.Web.UI.INamingContainer, System.Web.UI.WebControls.IPageableItemContainer, System.Web.UI.WebControls.IPersistedSelector" FrameworkAlternate="netframework-3.5" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ListView extends System.Web.UI.WebControls.DataBoundControl implements class System.Web.UI.INamingContainer, class System.Web.UI.WebControls.IPageableItemContainer, class System.Web.UI.WebControls.IPersistedSelector" FrameworkAlternate="netframework-3.5" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.ListView" />
  <TypeSignature Language="VB.NET" Value="Public Class ListView&#xA;Inherits DataBoundControl&#xA;Implements INamingContainer, IPageableItemContainer, IPersistedSelector" FrameworkAlternate="netframework-3.5" />
  <TypeSignature Language="C++ CLI" Value="public ref class ListView : System::Web::UI::WebControls::DataBoundControl, System::Web::UI::INamingContainer, System::Web::UI::WebControls::IPageableItemContainer, System::Web::UI::WebControls::IPersistedSelector" FrameworkAlternate="netframework-3.5" />
  <TypeSignature Language="F#" Value="type ListView = class&#xA;    inherit DataBoundControl&#xA;    interface INamingContainer&#xA;    interface IPageableItemContainer&#xA;    interface IPersistedSelector" FrameworkAlternate="netframework-3.5" />
  <TypeSignature Language="C#" Value="public class ListView : System.Web.UI.WebControls.DataBoundControl, System.Web.UI.IDataKeysControl, System.Web.UI.INamingContainer, System.Web.UI.WebControls.IDataBoundListControl, System.Web.UI.WebControls.IPageableItemContainer, System.Web.UI.WebControls.IPersistedSelector" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ListView extends System.Web.UI.WebControls.DataBoundControl implements class System.Web.UI.IDataKeysControl, class System.Web.UI.INamingContainer, class System.Web.UI.WebControls.IDataBoundControl, class System.Web.UI.WebControls.IDataBoundListControl, class System.Web.UI.WebControls.IPageableItemContainer, class System.Web.UI.WebControls.IPersistedSelector" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <TypeSignature Language="VB.NET" Value="Public Class ListView&#xA;Inherits DataBoundControl&#xA;Implements IDataBoundListControl, IDataKeysControl, INamingContainer, IPageableItemContainer, IPersistedSelector" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <TypeSignature Language="C++ CLI" Value="public ref class ListView : System::Web::UI::WebControls::DataBoundControl, System::Web::UI::IDataKeysControl, System::Web::UI::INamingContainer, System::Web::UI::WebControls::IDataBoundListControl, System::Web::UI::WebControls::IPageableItemContainer, System::Web::UI::WebControls::IPersistedSelector" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <TypeSignature Language="F#" Value="type ListView = class&#xA;    inherit DataBoundControl&#xA;    interface INamingContainer&#xA;    interface IPageableItemContainer&#xA;    interface IPersistedSelector&#xA;    interface IDataKeysControl&#xA;    interface IDataBoundListControl&#xA;    interface IDataBoundControl" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.DataBoundControl</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.UI.INamingContainer</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.WebControls.IPageableItemContainer</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.WebControls.IPersistedSelector</InterfaceName>
    </Interface>
    <Interface FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <InterfaceName>System.Web.UI.IDataKeysControl</InterfaceName>
    </Interface>
    <Interface FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <InterfaceName>System.Web.UI.WebControls.IDataBoundControl</InterfaceName>
    </Interface>
    <Interface FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <InterfaceName>System.Web.UI.WebControls.IDataBoundListControl</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.ComponentModel.DefaultEvent("SelectedIndexChanged")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultEvent("SelectedIndexChanged")&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.ComponentModel.DefaultProperty("SelectedValue")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultProperty("SelectedValue")&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.5">
      <AttributeName Language="C#">[System.ComponentModel.Designer("System.Web.UI.Design.WebControls.ListViewDesigner, System.Web.Extensions.Design, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.ComponentModel.Designer("System.Web.UI.Design.WebControls.ListViewDesigner, System.Web.Extensions.Design, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.5">
      <AttributeName Language="C#">[System.ComponentModel.ToolboxItemFilter("System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", System.ComponentModel.ToolboxItemFilterType.Require)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.ComponentModel.ToolboxItemFilter("System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", System.ComponentModel.ToolboxItemFilterType.Require)&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.5">
      <AttributeName Language="C#">[System.Drawing.ToolboxBitmap(typeof(System.Web.UI.WebControls.ListView), "ListView.ico")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Drawing.ToolboxBitmap(typeof(System.Web.UI.WebControls.ListView), "ListView.ico")&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Web.UI.ControlValueProperty("SelectedValue")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Web.UI.ControlValueProperty("SelectedValue")&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Web.UI.SupportsEventValidation]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Web.UI.SupportsEventValidation&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName Language="C#">[System.ComponentModel.Designer("System.Web.UI.Design.WebControls.ListViewDesigner, System.Web.Extensions.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.ComponentModel.Designer("System.Web.UI.Design.WebControls.ListViewDesigner, System.Web.Extensions.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName Language="C#">[System.Drawing.ToolboxBitmap(typeof(System.Web.UI.WebControls.ListView), "ListView.bmp")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Drawing.ToolboxBitmap(typeof(System.Web.UI.WebControls.ListView), "ListView.bmp")&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName Language="C#">[System.Web.UI.DataKeyProperty("SelectedPersistedDataKey")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Web.UI.DataKeyProperty("SelectedPersistedDataKey")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>通过使用用户定义的模板来显示数据源的值。 <see cref="T:System.Web.UI.WebControls.ListView" /> 控件使用户可以选择、删除、编辑、插入记录及对其进行排序。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[

## Remarks
 本主题内容：

-   [介绍](#introduction)

-   [模板](#templates)

-   [绑定到数据源](#binding_to_a_data_source)

-   [数据操作](#data_operations)

-   [事件](#Events)

-   [声明性语法](#declarative_syntax)

<a name="introduction"></a>
## <a name="introduction"></a>介绍
 <xref:System.Web.UI.WebControls.ListView>控件用于显示数据源中的值。 它类似于 <xref:System.Web.UI.WebControls.GridView> 控件，只不过它使用用户定义的模板而不是行字段来显示数据。 创建自己的模板使你可以更灵活地控制数据的显示方式。

 本主题提供了包含源代码的 Visual Studio 项目： [下载](https://go.microsoft.com/fwlink/?LinkId=199759)。

 <xref:System.Web.UI.WebControls.ListView>控件支持以下功能：

-   支持绑定到数据源控件 <xref:System.Web.UI.WebControls.SqlDataSource> ，例如、 <xref:System.Web.UI.WebControls.LinqDataSource> 和 <xref:System.Web.UI.WebControls.ObjectDataSource> 。

-   通过用户定义的模板和样式自定义外观。

-   内置的排序功能。

-   内置的更新和删除功能。

-   内置插入功能。

-   使用控件支持分页功能 <xref:System.Web.UI.WebControls.DataPager> 。

-   内置项选择功能。

-   以编程方式访问 <xref:System.Web.UI.WebControls.ListView> 对象模型，以动态设置属性、处理事件等。

-   多个键字段。

 若要了解 ASP.NET 中可用的其他数据绑定控件，请参阅 [数据绑定 Web 服务器控件](https://docs.microsoft.com/previous-versions/aspnet/ms228214(v=vs.100))。

<a name="templates"></a>
## <a name="templates"></a>模板
 为了使 <xref:System.Web.UI.WebControls.ListView> 控件能够显示内容，您必须为控件的不同部分创建模板。 <xref:System.Web.UI.WebControls.ListView.ItemTemplate%2A> 是必需的。 所有其他模板都是可选的。 此 <xref:System.Web.UI.WebControls.ListView.LayoutTemplate%2A> 属性不是必需的。

 但是，您必须为在其中配置控件的模式创建模板。 例如， <xref:System.Web.UI.WebControls.ListView> 支持插入记录的控件必须 <xref:System.Web.UI.WebControls.ListView.InsertItemTemplate%2A> 定义一个模板。 下表列出了可以为控件创建的模板 <xref:System.Web.UI.WebControls.ListView> 。

|模板类型|说明|
|-------------------|-----------------|
|<xref:System.Web.UI.WebControls.ListView.LayoutTemplate%2A>|用于定义容器对象的根模板，如 `table` 、 `div` 或 `span` 元素，它将包含或模板中定义的内容 <xref:System.Web.UI.WebControls.ListView.ItemTemplate%2A> <xref:System.Web.UI.WebControls.ListView.GroupTemplate%2A> 。 它还可能包含 <xref:System.Web.UI.WebControls.DataPager> 对象。|
|<xref:System.Web.UI.WebControls.ListView.ItemTemplate%2A>|定义要为各项显示的数据绑定内容。|
|<xref:System.Web.UI.WebControls.ListView.ItemSeparatorTemplate%2A>|定义要在各个项之间呈现的内容。|
|<xref:System.Web.UI.WebControls.ListView.GroupTemplate%2A>|定义容器对象（如 (`tr`) 、或元素的表行 `div` ）， `span` 该对象将包含和模板中定义的内容 <xref:System.Web.UI.WebControls.ListView.ItemTemplate%2A> <xref:System.Web.UI.WebControls.ListView.EmptyItemTemplate%2A> 。 组中显示的项目数由 <xref:System.Web.UI.WebControls.ListView.GroupItemCount%2A> 属性指定。|
|<xref:System.Web.UI.WebControls.ListView.GroupSeparatorTemplate%2A>|定义要在项组之间呈现的内容。|
|<xref:System.Web.UI.WebControls.ListView.EmptyItemTemplate%2A>|定义使用模板时为空项呈现的内容 <xref:System.Web.UI.WebControls.ListView.GroupTemplate%2A> 。 例如，如果将 <xref:System.Web.UI.WebControls.ListView.GroupItemCount%2A> 属性设置为5，并且从数据源返回的项的总数为8，则控件显示的最后一组数据 <xref:System.Web.UI.WebControls.ListView> 将包含模板指定的三个项 <xref:System.Web.UI.WebControls.ListView.ItemTemplate%2A> ，以及模板指定的两个项 <xref:System.Web.UI.WebControls.ListView.EmptyItemTemplate%2A> 。|
|<xref:System.Web.UI.WebControls.ListView.EmptyDataTemplate%2A>|定义数据源未返回任何数据时要呈现的内容。|
|<xref:System.Web.UI.WebControls.ListView.SelectedItemTemplate%2A>|定义要为选定数据项呈现的内容，以便将所选项与其他项区分开来。|
|<xref:System.Web.UI.WebControls.ListView.AlternatingItemTemplate%2A>|定义要为替换项呈现的内容，以便更容易区分连续项。|
|<xref:System.Web.UI.WebControls.ListView.EditItemTemplate%2A>|定义要在编辑项时呈现的内容。 <xref:System.Web.UI.WebControls.ListView.EditItemTemplate%2A> <xref:System.Web.UI.WebControls.ListView.ItemTemplate%2A> 对于正在编辑的数据项，将呈现模板来替代模板。|
|<xref:System.Web.UI.WebControls.ListView.InsertItemTemplate%2A>|定义要呈现的用于插入项的内容。 在 <xref:System.Web.UI.WebControls.ListView.InsertItemTemplate%2A> 控件所显示的项的开头或结尾，将呈现模板来替代 <xref:System.Web.UI.WebControls.ListView.ItemTemplate%2A> 模板 <xref:System.Web.UI.WebControls.ListView> 。 您可以 <xref:System.Web.UI.WebControls.ListView.InsertItemTemplate%2A> 通过使用控件的属性来指定呈现模板的位置 <xref:System.Web.UI.WebControls.ListView.InsertItemPosition%2A> <xref:System.Web.UI.WebControls.ListView> 。|

 若要显示模板（例如）中的字段的值 <xref:System.Web.UI.WebControls.ListView.ItemTemplate%2A> ，请使用数据绑定表达式。 有关数据绑定表达式的详细信息，请参阅 [数据绑定表达式概述](https://docs.microsoft.com/previous-versions/aspnet/ms178366(v=vs.100))。

 若要将和模板中的输入控件绑定 <xref:System.Web.UI.WebControls.ListView.EditItemTemplate%2A> <xref:System.Web.UI.WebControls.ListView.InsertItemTemplate%2A> 到数据源的字段，可以使用双向绑定表达式。 这使 <xref:System.Web.UI.WebControls.ListView> 控件可以自动提取用于更新或插入操作的输入控件的值。 双向绑定表达式也使中的输入控件 <xref:System.Web.UI.WebControls.ListView.EditItemTemplate%2A> 能够自动显示原始字段值。 有关双向绑定表达式的详细信息，请参阅 [绑定到数据库](https://docs.microsoft.com/previous-versions/aspnet/ms178361(v=vs.100))。

<a name="binding_to_a_data_source"></a>
## <a name="binding-to-a-data-source"></a>绑定到数据源
 可以将控件绑定 <xref:System.Web.UI.WebControls.ListView> 到数据源控件 (例如 <xref:System.Web.UI.WebControls.SqlDataSource> 控件或 <xref:System.Web.UI.WebControls.ObjectDataSource> 控件) 或实现接口的任何数据源集合 <xref:System.Collections.IEnumerable?displayProperty=nameWithType> ，如 <xref:System.Data.DataView?displayProperty=nameWithType> 、、 <xref:System.Collections.ArrayList?displayProperty=nameWithType> <xref:System.Collections.Generic.List%601?displayProperty=nameWithType> 或其他集合类型。 使用以下方法之一将 <xref:System.Web.UI.WebControls.ListView> 控件绑定到相应的数据源类型：

-   若要绑定到数据源控件，请将 <xref:System.Web.UI.WebControls.DataBoundControl.DataSourceID%2A> 控件的属性设置 <xref:System.Web.UI.WebControls.ListView> 为 <xref:System.Web.UI.Control.ID%2A> 数据源控件的值。 <xref:System.Web.UI.WebControls.ListView>控件将自动绑定到指定的数据源控件，并可以利用数据源控件的功能执行排序、插入、更新、删除和分页功能。 这是绑定到数据的首选方法。

-   若要绑定到实现接口的数据源 <xref:System.Collections.IEnumerable?displayProperty=nameWithType> ，请以编程方式将 <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataSource%2A> 控件的属性设置 <xref:System.Web.UI.WebControls.ListView> 为数据源，然后调用 <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> 方法。 使用此方法时，控件不 <xref:System.Web.UI.WebControls.ListView> 提供内置排序、更新、删除和分页功能。 必须通过使用相应的事件来提供此功能。

 有关数据绑定的详细信息，请参阅 [ASP.NET 数据访问内容映射](https://docs.microsoft.com/previous-versions/aspnet/6759sth4(v=vs.100))。

> [!NOTE]
>  <xref:System.Web.UI.WebControls.ListView>控件可用于显示用户输入，其中可能包括恶意的客户端脚本。 在应用程序中显示可执行脚本、SQL 语句或其他代码之前，请检查从该客户端发送的任何信息。 我们强烈建议在可能的情况下，在该控件中显示值之前，尽可能对它们进行 HTML 编码。 ASP.NET 提供输入请求验证功能来帮助阻止用户输入中的脚本和 HTML。 你还可以使用验证服务器控件来检查用户输入。 有关详细信息，请参阅 [验证控件简介](https://docs.microsoft.com/previous-versions/dotnet/netframework-3.0/2e4hd649(v=vs.85))。

<a name="data_operations"></a>
## <a name="data-operations"></a>数据操作
 当 <xref:System.Web.UI.WebControls.ListView> 控件绑定到数据源控件时， <xref:System.Web.UI.WebControls.ListView> 控件可以利用数据源控件的功能，并提供自动排序、插入、更新和删除功能。

> [!NOTE]
>  <xref:System.Web.UI.WebControls.ListView>控件可以提供对其他类型的数据源的排序、插入、更新和删除的支持。 但是，若要实现这些操作，必须在相应的事件处理程序中创建代码。

 由于 <xref:System.Web.UI.WebControls.ListView> 控件使用模板，因此它不提供自动生成按钮以执行更新、删除、插入、排序或选择操作的方法。 你必须在相应的模板中手动包含这些按钮。 <xref:System.Web.UI.WebControls.ListView>控件识别其 <xref:System.Web.UI.WebControls.Button.CommandName%2A> 属性设置为特定值的某些按钮。 下表列出了控件识别的按钮 <xref:System.Web.UI.WebControls.ListView> 及其功能。

|Button|CommandName 值|说明|
|------------|-----------------------|-----------------|
|取消|退出|取消编辑或插入操作。 引发 <xref:System.Web.UI.WebControls.ListView.ItemCanceling> 事件。|
|删除|“Delete”|从数据源中删除当前记录。 引发 <xref:System.Web.UI.WebControls.ListView.ItemDeleted> 和 <xref:System.Web.UI.WebControls.ListView.ItemDeleting> 事件。|
|选择|“选择”|将 <xref:System.Web.UI.WebControls.ListView.SelectedIndex%2A> 属性设置为 <xref:System.Web.UI.WebControls.ListViewDataItem.DisplayIndex%2A> 项的属性值。 呈现 <xref:System.Web.UI.WebControls.ListView.SelectedItemTemplate%2A> 项的模板。 引发 <xref:System.Web.UI.WebControls.ListView.SelectedIndexChanging> 和 <xref:System.Web.UI.WebControls.ListView.SelectedIndexChanged> 事件。|
|编辑|编辑|将项置于编辑模式。 呈现 <xref:System.Web.UI.WebControls.ListView.EditItemTemplate%2A> 项的模板。 引发 <xref:System.Web.UI.WebControls.ListView.ItemEditing> 事件。|
|插入|&|将模板中的绑定值插入 <xref:System.Web.UI.WebControls.ListView.InsertItemTemplate%2A> 到数据源中。 引发 <xref:System.Web.UI.WebControls.ListView.ItemInserting> 和 <xref:System.Web.UI.WebControls.ListView.ItemInserted> 事件。|
|更新|时更新|用模板中的绑定值更新数据源中的当前记录 <xref:System.Web.UI.WebControls.ListView.EditItemTemplate%2A> 。 引发 <xref:System.Web.UI.WebControls.ListView.ItemUpdating> 和 <xref:System.Web.UI.WebControls.ListView.ItemUpdated> 事件。|
|排序|进行|对按钮的属性中列出的列进行排序 `CommandArgument` 。 引发 <xref:System.Web.UI.WebControls.ListView.Sorting> 和 <xref:System.Web.UI.WebControls.ListView.Sorted> 事件。|

 与 "删除" 按钮 (它会立即删除当前数据项) 在单击 "编辑" 按钮时， <xref:System.Web.UI.WebControls.ListView> 控件将在编辑模式下显示当前项。 在编辑模式下，将显示当前数据项的属性中包含的内容 <xref:System.Web.UI.WebControls.ListView.EditItemTemplate%2A> 。 通常，在 "编辑项" 模板中，"编辑" 按钮将替换为更新和 "取消" 按钮。 适用于字段的数据类型 (（如或) 控件）的输入 <xref:System.Web.UI.WebControls.TextBox> 控件 <xref:System.Web.UI.WebControls.CheckBox> 通常还会显示字段的值，供用户修改。 单击 "更新" 按钮将更新数据源中的记录，单击 "取消" 按钮将取消编辑操作。

 当 <xref:System.Web.UI.WebControls.ListView.InsertItemPosition%2A> 属性设置为或时，将启用插入功能 <xref:System.Web.UI.WebControls.InsertItemPosition.FirstItem> <xref:System.Web.UI.WebControls.InsertItemPosition.LastItem> 。 此属性定义为 <xref:System.Web.UI.WebControls.ListView.InsertItemTemplate%2A> 插入项呈现模板的位置。 插入项模板通常包含一个 "插入" 和 "取消" 按钮，并为用户显示空输入控件以输入新记录的值。 单击 "插入" 按钮会在数据源中插入记录，单击 "取消" 按钮将清除所有字段。

### <a name="sorting"></a>排序
 <xref:System.Web.UI.WebControls.ListView>控件使用户能够通过单击排序按钮对项进行排序。 排序功能是在 `CommandArgument` 包含要排序的列的按钮的属性中定义的。

### <a name="paging"></a>分页
 控件可以将记录分成不同的页，而不是同时显示数据源中的所有记录 <xref:System.Web.UI.WebControls.ListView> 。 若要启用分页，请将 <xref:System.Web.UI.WebControls.DataPager> 控件与 <xref:System.Web.UI.WebControls.ListView> 控件相关联。 然后在 <xref:System.Web.UI.WebControls.DataPager> 模板中插入控件 <xref:System.Web.UI.WebControls.ListView.LayoutTemplate%2A> 。 或者，如果 <xref:System.Web.UI.WebControls.DataPager> 控件在 <xref:System.Web.UI.WebControls.ListView> 控件之外，请将属性设置 <xref:System.Web.UI.WebControls.DataPager.PagedControlID%2A> 为控件的 <xref:System.Web.UI.Control.ID%2A> <xref:System.Web.UI.WebControls.ListView> 。

<a name="Events"></a>
## <a name="events"></a>事件
 下表列出了控件支持的事件 <xref:System.Web.UI.WebControls.ListView> 。

|事件|说明|
|-----------|-----------------|
|<xref:System.Web.UI.WebControls.ListView.ItemCanceling>|当单击 "取消" 按钮时，如果单击 "取消" 按钮 (其 `CommandName` 属性设置为 "取消" ) ，则在 <xref:System.Web.UI.WebControls.ListView> 控件取消插入或编辑操作之前发生。 此事件通常用于停止取消操作。|
|<xref:System.Web.UI.WebControls.ListView.ItemCommand>|在 <xref:System.Web.UI.WebControls.ListView> 控件中单击某个按钮时发生。 当单击控件中的按钮时，此事件通常用于执行自定义任务。|
|<xref:System.Web.UI.WebControls.ListView.ItemCreated>|在控件中创建新项时发生 <xref:System.Web.UI.WebControls.ListView> 。 此事件通常用于在创建项时修改项的内容。|
|<xref:System.Web.UI.WebControls.ListView.ItemDataBound>|当数据项绑定到控件中的数据时发生 <xref:System.Web.UI.WebControls.ListView> 。 当项绑定到数据时，此事件通常用于修改项的内容。|
|<xref:System.Web.UI.WebControls.ListView.ItemDeleted>|当单击 "删除" 按钮时，如果单击了 "删除" 按钮 (该按钮的 `CommandName` 属性设置为 "删除" ) 或者在 <xref:System.Web.UI.WebControls.ListView.DeleteItem%2A> 该 <xref:System.Web.UI.WebControls.ListView> 控件从数据源中删除记录后调用方法。 此事件通常用于检查删除操作的结果。|
|<xref:System.Web.UI.WebControls.ListView.ItemDeleting>|在单击 "删除" 按钮 (按钮 `CommandName` 设置为 "删除" ) 按钮或 <xref:System.Web.UI.WebControls.ListView.DeleteItem%2A> 调用方法，但在 <xref:System.Web.UI.WebControls.ListView> 控件从数据源中删除记录之前发生。 此事件通常用于确认或取消删除操作。|
|<xref:System.Web.UI.WebControls.ListView.ItemEditing>|在单击 "编辑" 按钮 (`CommandName` 属性设置为 "编辑" ) 的按钮时，但在 <xref:System.Web.UI.WebControls.ListView> 控件进入编辑模式之前发生。 此事件通常用于取消编辑操作。|
|<xref:System.Web.UI.WebControls.ListView.ItemInserted>|当在 `CommandName` <xref:System.Web.UI.WebControls.ListView.InsertNewItem%2A> <xref:System.Web.UI.WebControls.ListView> 控件从数据源插入新记录后，当插入按钮 (其属性设置为 "插入" ) 的按钮或调用方法时发生。 此事件通常用于检查插入操作的结果。|
|<xref:System.Web.UI.WebControls.ListView.ItemInserting>|当单击 "插入" 按钮 (按钮 `CommandName` 设置为 "插入" ) 按钮或 <xref:System.Web.UI.WebControls.ListView.InsertNewItem%2A> 调用方法，但在 <xref:System.Web.UI.WebControls.ListView> 控件插入记录之前发生。 此事件通常用于取消插入操作或更改或验证新项的值。|
|<xref:System.Web.UI.WebControls.ListView.ItemUpdated>|当单击 "更新" 按钮时，如果单击 "更新" 按钮 (该按钮的 `CommandName` 属性设置为 "Update" ) 或者在 <xref:System.Web.UI.WebControls.ListView.UpdateItem%2A> 控件更新记录后调用了方法，则会发生此事件 <xref:System.Web.UI.WebControls.ListView> 。 此事件通常用于检查更新操作的结果。|
|<xref:System.Web.UI.WebControls.ListView.ItemUpdating>|在单击 "更新" 按钮 (将其 `CommandName` 属性设置为 "Update" ) 按钮或 <xref:System.Web.UI.WebControls.ListView.UpdateItem%2A> 调用方法，但在 <xref:System.Web.UI.WebControls.ListView> 控件更新记录之前发生。 此事件通常用于取消更新操作或更改或验证所编辑的项的值。|
|<xref:System.Web.UI.WebControls.ListView.LayoutCreated>|在 <xref:System.Web.UI.WebControls.ListView.LayoutTemplate%2A> 控件中创建 <xref:System.Web.UI.WebControls.ListView> 模板后发生。 此事件通常用于在创建模板后执行任务。|
|<xref:System.Web.UI.WebControls.ListView.PagePropertiesChanged>|在页属性更改且 <xref:System.Web.UI.WebControls.ListView> 控件设置新值之后发生。|
|<xref:System.Web.UI.WebControls.ListView.PagePropertiesChanging>|在数据页属性更改时，但在 <xref:System.Web.UI.WebControls.ListView> 控件设置新值之前发生。|
|<xref:System.Web.UI.WebControls.ListView.SelectedIndexChanged>|在控件处理选择操作后，如果单击 "选择" 按钮 (该按钮的 `CommandName` 属性设置为 "select" ) ，则会出现此错误 <xref:System.Web.UI.WebControls.ListView> 。 此事件通常用于在控件中选择项后执行自定义任务。|
|<xref:System.Web.UI.WebControls.ListView.SelectedIndexChanging>|在单击 "选择" 按钮 (其 `CommandName` 属性设置为 "选择" ) 的按钮时，但在 <xref:System.Web.UI.WebControls.ListView> 控件处理选择操作之前发生。 此事件通常用于取消选择操作。|
|<xref:System.Web.UI.WebControls.ListView.Sorted>|在 `CommandName` <xref:System.Web.UI.WebControls.ListView.Sort%2A> <xref:System.Web.UI.WebControls.ListView> 控件处理排序操作后，当某个排序按钮 (其属性设置为 "Sort" ) 或调用该方法的按钮时发生。 此事件通常用于在用户单击排序按钮后执行自定义任务，并对数据进行排序。|
|<xref:System.Web.UI.WebControls.ListView.Sorting>|当单击排序按钮 (其 `CommandName` 属性设置为 "Sort" ) 或 <xref:System.Web.UI.WebControls.ListView.Sort%2A> 调用方法，但在 <xref:System.Web.UI.WebControls.ListView> 控件处理排序操作之前发生。 此事件通常用于取消排序操作或执行自定义的排序例程。|

<a name="declarative_syntax"></a>
## <a name="declarative-syntax"></a>声明性语法

```
<asp:ListView
    ConvertEmptyStringToNull="True|False"
    DataKeyNames="string"
    DataMember="string"
    DataSource="string"
    DataSourceID="string"
    EditIndex="integer"
    Enabled="True|False"
    EnableTheming="True|False"
    EnableViewState="True|False"
    GroupPlaceholderID="string"
    GroupItemCount="integer"
    ID="string"
    InsertItemPosition="None|FirstItem|LastItem"
    ItemPlaceholderID="string"
    OnDataBinding="DataBinding event handler"
    OnDataBound="DataBound event handler"
    OnDisposed="Disposed event handler"
    OnInit="Init event handler"
    OnItemCanceling="ItemCanceling event handler"
    OnItemCommand="ItemCommand event handler"
    OnItemCreated="ItemCreated event handler"
    OnItemDataBound="ItemDataBound event handler"
    OnItemDeleted="ItemDeleted event handler"
    OnItemDeleting="ItemDeleting event handler"
    OnItemEditing="ItemEditing event handler"
    OnItemInserted="ItemInserted event handler"
    OnItemInserting="ItemInserting event handler"
    OnItemUpdated="ItemUpdated event handler"
    OnItemUpdating="ItemUpdating event handler"
    OnLayoutCreated="LayoutCreated event handler"
    OnLoad="Load event handler"
    OnPagePropertiesChanged="PagePropertiesChanged event handler"
    OnPagePropertiesChanging="PagePropertiesChanging event handler"
    OnPreRender="PreRender event handler"
    OnSelectedIndexChanged="SelectedIndexChanged event handler"
    OnSelectedIndexChanging="SelectedIndexChanging event handler"
    OnSorted="Sorted event handler"
    OnSorting="Sorting event handler"
    OnUnload="Unload event handler"
    runat="server"
    SelectedIndex="integer"
    SkinID="string"
    Style="string"
    Visible="True|False"
>
        <AlternatingItemTemplate>
            <!-- child controls -->
        </AlternatingItemTemplate>
        <EditItemTemplate>
            <!-- child controls -->
        </EditItemTemplate>
        <EmptyDataTemplate>
            <!-- child controls -->
        </EmptyDataTemplate>
        <EmptyItemTemplate>
            <!-- child controls -->
        </EmptyItemTemplate>
        <GroupSeparatorTemplate>
            <!-- child controls -->
        </GroupSeparatorTemplate>
        <GroupTemplate>
            <!-- child controls -->
        </GroupTemplate>
        <InsertItemTemplate>
            <!-- child controls -->
        </InsertItemTemplate>
        <ItemSeparatorTemplate>
            <!-- child controls -->
        </ItemSeparatorTemplate>
        <ItemTemplate>
            <!-- child controls -->
        </ItemTemplate>
        <LayoutTemplate>
                <!-- child controls -->
        </LayoutTemplate>
        <SelectedItemTemplate>
            <!-- child controls -->
        </SelectedItemTemplate>
</asp:ListView>
```



## Examples
 下面的示例演示如何使用 <xref:System.Web.UI.WebControls.ListView> HTML 表从数据库显示记录。 使用控件来检索值 <xref:System.Web.UI.WebControls.LinqDataSource> 。

 [!code-aspx-csharp[System.Web.UI.WebControls.ListView_Simple#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView_Simple/CS/ListViewSimpleCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ListView_Simple#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView_Simple/VB/ListViewSimpleVB.aspx#1)]

 下面的示例演示如何使用 <xref:System.Web.UI.WebControls.ListView> 控件通过元素在流布局中显示值 `div` 。 使用控件来检索值 <xref:System.Web.UI.WebControls.SqlDataSource> 。

 [!code-aspx-csharp[System.Web.UI.WebControls.ListView_FlowLayout#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView_FlowLayout/CS/ListViewFlowLayoutCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ListView_FlowLayout#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView_FlowLayout/VB/ListViewFlowLayoutVB.aspx#1)]

 下面的示例演示如何使用 <xref:System.Web.UI.WebControls.ListView> 控件插入、删除和更新记录。

> [!IMPORTANT]
>  此示例具有一个接受用户输入的文本框，这是一个潜在的安全威胁。 默认情况下，ASP.NET 网页验证用户输入是否不包含脚本或 HTML 元素。 有关详细信息，请参阅[脚本侵入概述](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100))。

 [!code-aspx-csharp[System.Web.UI.WebControls.ListView_Edit#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView_Edit/CS/ListViewEditCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ListView_Edit#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView_Edit/VB/ListViewEditVB.aspx#1)]

 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.LinqDataSource" />
    <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/bb398790(v=vs.100)">ListView Web 服务器控件</related>
    <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms228214(v=vs.100)">ASP.NET 数据绑定 Web 服务器控件概述</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ListView ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ListView();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Web.UI.WebControls.ListView" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 使用此构造函数初始化类的新实例 <xref:System.Web.UI.WebControls.ListView> 。 若要将控件动态添加 <xref:System.Web.UI.WebControls.ListView> 到页面，请创建新的 <xref:System.Web.UI.WebControls.ListView> 对象。 设置其属性，然后将其添加到 <xref:System.Web.UI.Control.Controls%2A?displayProperty=nameWithType> 容器控件（如控件）的集合 <xref:System.Web.UI.WebControls.PlaceHolder> 。

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.Controls" />
        <altmember cref="T:System.Web.UI.WebControls.PlaceHolder" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/bb398790(v=vs.100)">ListView Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="AccessKey">
      <MemberSignature Language="C#" Value="public override string AccessKey { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AccessKey" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.AccessKey" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property AccessKey As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ AccessKey { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AccessKey : string with get, set" Usage="System.Web.UI.WebControls.ListView.AccessKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>重写 <see cref="P:System.Web.UI.WebControls.WebControl.AccessKey" /> 属性。 <see cref="T:System.Web.UI.WebControls.ListView" /> 控件不支持设置此属性。</summary>
        <value><see cref="F:System.String.Empty" />，表示该属性未设置。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 控件不支持样式属性 <xref:System.Web.UI.WebControls.ListView> 。 如果尝试设置该 <xref:System.Web.UI.WebControls.ListView.AccessKey%2A> 属性，则 <xref:System.NotSupportedException> 会引发异常。 如果获得属性，它将返回基类的相应属性的默认值。

 若要为 <xref:System.Web.UI.WebControls.ListView> 控件的样式，必须 <xref:System.Web.UI.WebControls.ListView> 使用级联样式表 (CSS) 类或内联样式元素来为模板内的控件制定样式。

 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">已尝试设置 <see cref="P:System.Web.UI.WebControls.ListView.AccessKey" /> 属性。</exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/bb398790(v=vs.100)">ListView Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="AddControlToContainer">
      <MemberSignature Language="C#" Value="protected virtual void AddControlToContainer (System.Web.UI.Control control, System.Web.UI.Control container, int addLocation);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void AddControlToContainer(class System.Web.UI.Control control, class System.Web.UI.Control container, int32 addLocation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.AddControlToContainer(System.Web.UI.Control,System.Web.UI.Control,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub AddControlToContainer (control As Control, container As Control, addLocation As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void AddControlToContainer(System::Web::UI::Control ^ control, System::Web::UI::Control ^ container, int addLocation);" />
      <MemberSignature Language="F#" Value="abstract member AddControlToContainer : System.Web.UI.Control * System.Web.UI.Control * int -&gt; unit&#xA;override this.AddControlToContainer : System.Web.UI.Control * System.Web.UI.Control * int -&gt; unit" Usage="listView.AddControlToContainer (control, container, addLocation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
        <Parameter Name="container" Type="System.Web.UI.Control" />
        <Parameter Name="addLocation" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="control">一个对象，包含要添加到容器的控件。</param>
        <param name="container">用于存储子控件的容器。</param>
        <param name="addLocation">控件集合中要添加子控件的位置。</param>
        <summary>将指定控件添加到指定容器。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.ListView.AddControlToContainer%2A>方法是一个帮助器方法，该方法由 <xref:System.Web.UI.WebControls.ListView> 控件调用以将控件添加到指定的容器中。

> [!NOTE]
>  此方法主要由控件开发人员用来扩展 <xref:System.Web.UI.WebControls.ListView> 控件。

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.Control" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/bb398790(v=vs.100)">ListView Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="AlternatingItemTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate AlternatingItemTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate AlternatingItemTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.AlternatingItemTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property AlternatingItemTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ AlternatingItemTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AlternatingItemTemplate : System.Web.UI.ITemplate with get, set" Usage="System.Web.UI.WebControls.ListView.AlternatingItemTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(null)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(null)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.ListViewDataItem), System.ComponentModel.BindingDirection.TwoWay)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.ListViewDataItem), System.ComponentModel.BindingDirection.TwoWay)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置 <see cref="T:System.Web.UI.WebControls.ListView" /> 控件中交替数据项的自定义内容。</summary>
        <value>一个对象，包含 <see cref="T:System.Web.UI.WebControls.ListView" /> 控件中交替数据项的自定义内容。 默认值为 <see langword="null" />，指示未设置此属性。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 使用 <xref:System.Web.UI.WebControls.ListView.AlternatingItemTemplate%2A> 属性可为交替数据项定义 (UI) 的自定义用户界面。 <xref:System.Web.UI.WebControls.ListView.AlternatingItemTemplate%2A>模板通常包含与模板相同的控件和内容 <xref:System.Web.UI.WebControls.ListView.ItemTemplate%2A> ，但具有不同的外观来区分项。

 若要以声明的方式指定自定义模板，请在 `AlternatingItemTemplate` 控件内添加一个元素 <xref:System.Web.UI.WebControls.ListView> 。 然后在开始标记和结束标记之间添加控件和内容 `<AlternatingItemTemplate>` 。 若要显示数据源中的字段值，请使用数据绑定表达式。 有关详细信息，请参阅 [数据绑定表达式概述](https://docs.microsoft.com/previous-versions/aspnet/ms178366(v=vs.100))。

 若要创建自动选择、删除和编辑操作的按钮，请向模板添加一个按钮控件。 将其 <xref:System.Web.UI.WebControls.Button.CommandName%2A> 属性设置为下表中列出的值之一。

|按钮类型|CommandName 值|
|-----------------|-----------------------|
|删除|“Delete”|
|编辑|编辑|
|选择|“选择”|



## Examples
 下面的示例演示如何使用 <xref:System.Web.UI.WebControls.ListView.AlternatingItemTemplate%2A> 模板定义控件中交替数据项的样式 <xref:System.Web.UI.WebControls.ListView> 。

 [!code-aspx-csharp[System.Web.UI.WebControls.ListView.AlternatingItemTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.AlternatingItemTemplate/CS/ListViewAlternatingItemTemplateCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ListView.AlternatingItemTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.AlternatingItemTemplate/VB/ListViewAlternatingItemTemplateVB.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ListView.GroupTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.ListView.ItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.ListView.LayoutTemplate" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/bb398790(v=vs.100)">ListView Web 服务器控件</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms178366(v=vs.100)">数据绑定表达式语法</related>
      </Docs>
    </Member>
    <Member MemberName="BackColor">
      <MemberSignature Language="C#" Value="public override System.Drawing.Color BackColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color BackColor" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.BackColor" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property BackColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Color BackColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.BackColor : System.Drawing.Color with get, set" Usage="System.Web.UI.WebControls.ListView.BackColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>重写 <see cref="P:System.Web.UI.WebControls.WebControl.BackColor" /> 属性。 <see cref="T:System.Web.UI.WebControls.ListView" /> 控件不支持设置此属性。</summary>
        <value><see cref="F:System.Drawing.Color.Empty" />，表示该属性未设置。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 控件不支持样式属性 <xref:System.Web.UI.WebControls.ListView> 。 如果尝试设置该 <xref:System.Web.UI.WebControls.ListView.BackColor%2A> 属性，则 <xref:System.NotSupportedException> 会引发异常。 如果获得属性，它将返回基类的相应属性的默认值。

 若要为 <xref:System.Web.UI.WebControls.ListView> 控件的样式，必须 <xref:System.Web.UI.WebControls.ListView> 使用级联样式表 (CSS) 类或内联样式元素来为模板内的控件制定样式。

 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">已尝试设置 <see cref="P:System.Web.UI.WebControls.ListView.BackColor" /> 属性。</exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/bb398790(v=vs.100)">ListView Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="BorderColor">
      <MemberSignature Language="C#" Value="public override System.Drawing.Color BorderColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color BorderColor" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.BorderColor" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property BorderColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Color BorderColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.BorderColor : System.Drawing.Color with get, set" Usage="System.Web.UI.WebControls.ListView.BorderColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>重写 <see cref="P:System.Web.UI.WebControls.WebControl.BorderColor" /> 属性。 <see cref="T:System.Web.UI.WebControls.ListView" /> 控件不支持设置此属性。</summary>
        <value><see cref="F:System.Drawing.Color.Empty" />，表示该属性未设置。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 控件不支持样式属性 <xref:System.Web.UI.WebControls.ListView> 。 如果尝试设置该 <xref:System.Web.UI.WebControls.ListView.BorderColor%2A> 属性，则 <xref:System.NotSupportedException> 会引发异常。 如果获得属性，它将返回基类的相应属性的默认值。

 若要为 <xref:System.Web.UI.WebControls.ListView> 控件的样式，必须 <xref:System.Web.UI.WebControls.ListView> 使用级联样式表 (CSS) 类或内联样式元素来为模板内的控件制定样式。

 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">已尝试设置 <see cref="P:System.Web.UI.WebControls.ListView.BorderColor" /> 属性。</exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/bb398790(v=vs.100)">ListView Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="BorderStyle">
      <MemberSignature Language="C#" Value="public override System.Web.UI.WebControls.BorderStyle BorderStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.BorderStyle BorderStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.BorderStyle" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property BorderStyle As BorderStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::BorderStyle BorderStyle { System::Web::UI::WebControls::BorderStyle get(); void set(System::Web::UI::WebControls::BorderStyle value); };" />
      <MemberSignature Language="F#" Value="member this.BorderStyle : System.Web.UI.WebControls.BorderStyle with get, set" Usage="System.Web.UI.WebControls.ListView.BorderStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.BorderStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>重写 <see cref="P:System.Web.UI.WebControls.WebControl.BorderStyle" /> 属性。 <see cref="T:System.Web.UI.WebControls.ListView" /> 控件不支持设置此属性。</summary>
        <value><see cref="F:System.Web.UI.WebControls.BorderStyle.NotSet" />，表示该属性未设置。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 控件不支持样式属性 <xref:System.Web.UI.WebControls.ListView> 。 如果尝试设置该 <xref:System.Web.UI.WebControls.ListView.BorderStyle%2A> 属性，则 <xref:System.NotSupportedException> 会引发异常。 如果获得属性，它将返回基类的相应属性的默认值。

 若要为 <xref:System.Web.UI.WebControls.ListView> 控件的样式，必须 <xref:System.Web.UI.WebControls.ListView> 使用级联样式表 (CSS) 类或内联样式元素来为模板内的控件制定样式。

 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">已尝试设置 <see cref="P:System.Web.UI.WebControls.ListView.BorderStyle" /> 属性。</exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/bb398790(v=vs.100)">ListView Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="BorderWidth">
      <MemberSignature Language="C#" Value="public override System.Web.UI.WebControls.Unit BorderWidth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.Unit BorderWidth" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.BorderWidth" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property BorderWidth As Unit" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::Unit BorderWidth { System::Web::UI::WebControls::Unit get(); void set(System::Web::UI::WebControls::Unit value); };" />
      <MemberSignature Language="F#" Value="member this.BorderWidth : System.Web.UI.WebControls.Unit with get, set" Usage="System.Web.UI.WebControls.ListView.BorderWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Unit</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>重写 <see cref="P:System.Web.UI.WebControls.WebControl.BorderWidth" /> 属性。 <see cref="T:System.Web.UI.WebControls.ListView" /> 控件不支持设置此属性。</summary>
        <value><see cref="F:System.Web.UI.WebControls.Unit.Empty" />，表示该属性未设置。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 控件不支持样式属性 <xref:System.Web.UI.WebControls.ListView> 。 如果尝试设置该 <xref:System.Web.UI.WebControls.ListView.BorderWidth%2A> 属性，则 <xref:System.NotSupportedException> 会引发异常。 如果获得属性，它将返回基类的相应属性的默认值。

 若要为 <xref:System.Web.UI.WebControls.ListView> 控件的样式，必须 <xref:System.Web.UI.WebControls.ListView> 使用级联样式表 (CSS) 类或内联样式元素来为模板内的控件制定样式。

 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">已尝试设置 <see cref="P:System.Web.UI.WebControls.ListView.BorderWidth" /> 属性。</exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/bb398790(v=vs.100)">ListView Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="ClientIDRowSuffix">
      <MemberSignature Language="C#" Value="public virtual string[] ClientIDRowSuffix { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] ClientIDRowSuffix" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.ClientIDRowSuffix" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ClientIDRowSuffix As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property cli::array &lt;System::String ^&gt; ^ ClientIDRowSuffix { cli::array &lt;System::String ^&gt; ^ get(); void set(cli::array &lt;System::String ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ClientIDRowSuffix : string[] with get, set" Usage="System.Web.UI.WebControls.ListView.ClientIDRowSuffix" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(null)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(null)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.TypeConverter(typeof(System.Web.UI.WebControls.StringArrayConverter))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.TypeConverter(typeof(System.Web.UI.WebControls.StringArrayConverter))&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Web.WebCategory("Data")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.WebCategory("Data")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置数据字段的名称，当 <see cref="T:System.Web.UI.WebControls.ListView" /> 属性设置为 <see cref="P:System.Web.UI.Control.ClientIDMode" /> 时，这些数据字段的值用于唯一地标识 <see cref="F:System.Web.UI.ClientIDMode.Predictable" /> 控件的每个数据行。</summary>
        <value>数据字段的名称，当 ASP.NET 生成 <see cref="T:System.Web.UI.WebControls.ListView" /> 值时，这些数据字段的值用于唯一地标识 <see cref="P:System.Web.UI.Control.ClientID" /> 控件的每个实例。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 若要在控件的多个行中呈现控件的多个实例时避免命名冲突 <xref:System.Web.UI.WebControls.ListView> ，ASP.NET 将 <xref:System.Web.UI.Control.ClientID%2A> 为控件的每个实例生成一个唯一值。 <xref:System.Web.UI.Control.ClientID%2A>通过设置属性来指定如何生成值 <xref:System.Web.UI.Control.ClientIDMode%2A> 。 如果将属性设置 <xref:System.Web.UI.Control.ClientIDMode%2A> 为 <xref:System.Web.UI.ClientIDMode.Predictable> ，则 ASP.NET <xref:System.Web.UI.Control.ClientID%2A> 会通过追加一个从中指定的数据字段派生的后缀来生成 <xref:System.Web.UI.WebControls.GridView.ClientIDRowSuffix%2A> 。 如果 <xref:System.Web.UI.WebControls.GridView.ClientIDRowSuffix%2A> 未设置，则后缀为序列号。

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.ClientIDMode" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/1d04y8ss(v=vs.140)">ASP.NET 控件标识</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dd410598(v=vs.140)">如何：按 ID 从 JavaScript 访问控件</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dd381611(v=vs.140)">演练：使数据绑定控件更易于从 JavaScript 访问</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dd483476(v=vs.140)">演练：使位于 Web 用户控件中的控件更易于从 JavaScript 访问</related>
      </Docs>
    </Member>
    <Member MemberName="ClientIDRowSuffixDataKeys">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.DataKeyArray ClientIDRowSuffixDataKeys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.DataKeyArray ClientIDRowSuffixDataKeys" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.ClientIDRowSuffixDataKeys" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ClientIDRowSuffixDataKeys As DataKeyArray" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::DataKeyArray ^ ClientIDRowSuffixDataKeys { System::Web::UI::WebControls::DataKeyArray ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ClientIDRowSuffixDataKeys : System.Web.UI.WebControls.DataKeyArray" Usage="System.Web.UI.WebControls.ListView.ClientIDRowSuffixDataKeys" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataKeyArray</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取数据值，在 ASP.NET 生成 <see cref="P:System.Web.UI.Control.ClientID" /> 值时，这些数据值用于唯一标识数据绑定控件的每个实例。</summary>
        <value>数据值，在 ASP.NET 生成 <see cref="P:System.Web.UI.Control.ClientID" /> 值时，这些数据值用于唯一标识数据绑定控件的每个实例。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Controls">
      <MemberSignature Language="C#" Value="public override System.Web.UI.ControlCollection Controls { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ControlCollection Controls" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.Controls" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Controls As ControlCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ControlCollection ^ Controls { System::Web::UI::ControlCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Controls : System.Web.UI.ControlCollection" Usage="System.Web.UI.WebControls.ListView.Controls" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.ControlCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个 <see cref="T:System.Web.UI.ControlCollection" /> 对象，该对象表示 <see cref="T:System.Web.UI.WebControls.ListView" /> 控件的子控件。</summary>
        <value><see cref="T:System.Web.UI.WebControls.ListView" /> 控件的子控件集合。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.ListView.Controls%2A>属性重写基实现。 这可以保证在属性返回对象之前已经创建了所有子控件 <xref:System.Web.UI.ControlCollection> 。

 <xref:System.Web.UI.Control.Controls%2A>属性使你能够以编程方式访问控件的类的实例 <xref:System.Web.UI.ControlCollection> <xref:System.Web.UI.WebControls.ListView> 。 您可以向集合添加控件、从集合中移除控件或循环访问集合中的服务器控件。

 若要访问控件的特定子控件 <xref:System.Web.UI.WebControls.ListView> ，可以使用 <xref:System.Web.UI.Control.FindControl%2A> 方法。

 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/bb398790(v=vs.100)">ListView Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="ConvertEmptyStringToNull">
      <MemberSignature Language="C#" Value="public virtual bool ConvertEmptyStringToNull { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ConvertEmptyStringToNull" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.ConvertEmptyStringToNull" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ConvertEmptyStringToNull As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool ConvertEmptyStringToNull { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ConvertEmptyStringToNull : bool with get, set" Usage="System.Web.UI.WebControls.ListView.ConvertEmptyStringToNull" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Category("Behavior")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Category("Behavior")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示在数据源中更新数据字段时是否将空字符串值 ("") 自动转换为 null 值。</summary>
        <value>如果将空字符串值自动转换为 null 值，则为 <see langword="true" />；否则为 <see langword="false" />。 默认值为 <see langword="true" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.Parameter>控件绑定到的数据源控件的对象 <xref:System.Web.UI.WebControls.ListView> 也有一个名为的属性 <xref:System.Web.UI.WebControls.Parameter.ConvertEmptyStringToNull%2A?displayProperty=nameWithType> 。 此属性执行相同的功能。 请确保这两个属性都已正确设置。

 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/bb398790(v=vs.100)">ListView Web 服务器控件</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms366709(v=vs.100)">使用数据源控件处理 Null 数据库值</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateChildControls">
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>创建用于呈现 <see cref="T:System.Web.UI.WebControls.ListView" /> 控件的控件层次结构。</summary>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/bb398790(v=vs.100)">ListView Web 服务器控件</related>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateChildControls">
      <MemberSignature Language="C#" Value="protected internal override void CreateChildControls ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void CreateChildControls() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.CreateChildControls" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub CreateChildControls ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void CreateChildControls();" />
      <MemberSignature Language="F#" Value="override this.CreateChildControls : unit -&gt; unit" Usage="listView.CreateChildControls " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>根据视图状态中存储的值，创建用于呈现 <see cref="T:System.Web.UI.WebControls.ListView" /> 控件的控件层次结构。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.ListView.CreateChildControls>方法是一个帮助器方法， <xref:System.Web.UI.WebControls.ListView> 该类使用该类来创建控件层次结构。 此方法重载基于视图状态的值创建控件层次结构，而不是直接从数据源创建控件层次结构。

 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/bb398790(v=vs.100)">ListView Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="CreateChildControls">
      <MemberSignature Language="C#" Value="protected virtual int CreateChildControls (System.Collections.IEnumerable dataSource, bool dataBinding);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance int32 CreateChildControls(class System.Collections.IEnumerable dataSource, bool dataBinding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.CreateChildControls(System.Collections.IEnumerable,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateChildControls (dataSource As IEnumerable, dataBinding As Boolean) As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual int CreateChildControls(System::Collections::IEnumerable ^ dataSource, bool dataBinding);" />
      <MemberSignature Language="F#" Value="override this.CreateChildControls : System.Collections.IEnumerable * bool -&gt; int" Usage="listView.CreateChildControls (dataSource, dataBinding)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSource" Type="System.Collections.IEnumerable" />
        <Parameter Name="dataBinding" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="dataSource">一个对象，包含 <see cref="T:System.Web.UI.WebControls.ListView" /> 控件的数据源。</param>
        <param name="dataBinding">如果为 <see langword="true" />，则表示将子控件绑定到数据；如果为 <see langword="false" />，则表示控件将在回发期间从视图状态重新创建自身。</param>
        <summary>使用指定数据源创建用于呈现 <see cref="T:System.Web.UI.WebControls.ListView" /> 控件的控件层次结构。</summary>
        <returns>所创建的项数。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.ListView.CreateChildControls%2A>方法用于创建控件的控件层次结构 <xref:System.Web.UI.WebControls.ListView> 。

> [!NOTE]
>  此方法主要由控件开发人员用来扩展 <xref:System.Web.UI.WebControls.ListView> 控件。

 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><paramref name="dataSource" /> 为 <see cref="T:System.Web.UI.DataSourceView" /> 返回 <see langword="null" />。

- 或 -

 <paramref name="dataSource" /> 未实现 <see cref="T:System.Collections.ICollection" /> 接口，无法返回 <see cref="P:System.Web.UI.DataSourceSelectArguments.TotalRowCount" /> 值。

- 或 -

 <paramref name="dataSource" /> 未实现 <see cref="T:System.Collections.ICollection" /> 接口，<paramref name="dataBinding" /> 被设置为 <see langword="false" />。

- 或 -

<see cref="T:System.Web.UI.WebControls.ListView" /> 控件没有指定组占位符。

- 或 -

<see cref="T:System.Web.UI.WebControls.ListView" /> 控件没有指定项占位符。</exception>
        <altmember cref="T:System.Collections.IEnumerable" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/bb398790(v=vs.100)">ListView Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="CreateControlStyle">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.WebControls.Style CreateControlStyle ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.WebControls.Style CreateControlStyle() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.CreateControlStyle" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateControlStyle () As Style" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Web::UI::WebControls::Style ^ CreateControlStyle();" />
      <MemberSignature Language="F#" Value="override this.CreateControlStyle : unit -&gt; System.Web.UI.WebControls.Style" Usage="listView.CreateControlStyle " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Style</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>为控件创建默认样式。</summary>
        <returns><see cref="T:System.Web.UI.WebControls.ListView" /> 控件的样式。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 控件不支持样式属性 <xref:System.Web.UI.WebControls.ListView> 。 如果尝试调用 <xref:System.Web.UI.WebControls.ListView.CreateControlStyle%2A> 方法，将 <xref:System.NotSupportedException> 引发异常。

 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">尝试调用 <see cref="M:System.Web.UI.WebControls.ListView.CreateControlStyle" /> 方法。</exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/bb398790(v=vs.100)">ListView Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="CreateDataItem">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.WebControls.ListViewDataItem CreateDataItem (int dataItemIndex, int displayIndex);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.UI.WebControls.ListViewDataItem CreateDataItem(int32 dataItemIndex, int32 displayIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.CreateDataItem(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateDataItem (dataItemIndex As Integer, displayIndex As Integer) As ListViewDataItem" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Web::UI::WebControls::ListViewDataItem ^ CreateDataItem(int dataItemIndex, int displayIndex);" />
      <MemberSignature Language="F#" Value="abstract member CreateDataItem : int * int -&gt; System.Web.UI.WebControls.ListViewDataItem&#xA;override this.CreateDataItem : int * int -&gt; System.Web.UI.WebControls.ListViewDataItem" Usage="listView.CreateDataItem (dataItemIndex, displayIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ListViewDataItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataItemIndex" Type="System.Int32" />
        <Parameter Name="displayIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="dataItemIndex">数据项在基础数据源对象中的索引。</param>
        <param name="displayIndex">数据项在 <see cref="T:System.Web.UI.WebControls.ListView" /> 控件中的显示索引。</param>
        <summary>在 <see cref="T:System.Web.UI.WebControls.ListView" /> 控件中创建一个数据项。</summary>
        <returns>使用指定参数创建的数据项。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 此方法主要由控件开发人员用来扩展 <xref:System.Web.UI.WebControls.ListView> 控件。

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.ListViewDataItem" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/bb398790(v=vs.100)">ListView Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="CreateDataSourceSelectArguments">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.DataSourceSelectArguments CreateDataSourceSelectArguments ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.DataSourceSelectArguments CreateDataSourceSelectArguments() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.CreateDataSourceSelectArguments" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateDataSourceSelectArguments () As DataSourceSelectArguments" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Web::UI::DataSourceSelectArguments ^ CreateDataSourceSelectArguments();" />
      <MemberSignature Language="F#" Value="override this.CreateDataSourceSelectArguments : unit -&gt; System.Web.UI.DataSourceSelectArguments" Usage="listView.CreateDataSourceSelectArguments " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataSourceSelectArguments</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>创建 <see cref="T:System.Web.UI.DataSourceSelectArguments" /> 对象，该对象包含传递到数据源的参数。</summary>
        <returns>传递到数据源的参数。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.ListView.CreateDataSourceSelectArguments%2A>方法是由控件调用的帮助器方法 <xref:System.Web.UI.WebControls.ListView> 。 在此实现中， <xref:System.Web.UI.DataSourceSelectArguments> 对象包含用于分页操作的参数。

 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>扩展 <see cref="T:System.Web.UI.WebControls.ListView" /> 类时，可以重写此方法，并指定传递到数据源的自定义值。</para></block>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/bb398790(v=vs.100)">ListView Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="CreateEmptyDataItem">
      <MemberSignature Language="C#" Value="protected virtual void CreateEmptyDataItem ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void CreateEmptyDataItem() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.CreateEmptyDataItem" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub CreateEmptyDataItem ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void CreateEmptyDataItem();" />
      <MemberSignature Language="F#" Value="abstract member CreateEmptyDataItem : unit -&gt; unit&#xA;override this.CreateEmptyDataItem : unit -&gt; unit" Usage="listView.CreateEmptyDataItem " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>在 <see cref="P:System.Web.UI.WebControls.ListView.EmptyDataTemplate" /> 控件中创建 <see cref="T:System.Web.UI.WebControls.ListView" /> 模板。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.ListView.CreateEmptyDataItem%2A>方法是一个帮助器方法，该方法由 <xref:System.Web.UI.WebControls.ListView> 控件调用以创建 <xref:System.Web.UI.WebControls.ListView.EmptyDataTemplate%2A> 模板。 如果数据源未返回任何记录，则显示空数据模板。

> [!NOTE]
>  此方法主要由控件开发人员用来扩展 <xref:System.Web.UI.WebControls.ListView> 控件。

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ListView.EmptyDataTemplate" />
        <altmember cref="M:System.Web.UI.WebControls.ListView.CreateItem(System.Web.UI.WebControls.ListViewItemType)" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/bb398790(v=vs.100)">ListView Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="CreateEmptyItem">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.WebControls.ListViewItem CreateEmptyItem ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.UI.WebControls.ListViewItem CreateEmptyItem() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.CreateEmptyItem" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateEmptyItem () As ListViewItem" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Web::UI::WebControls::ListViewItem ^ CreateEmptyItem();" />
      <MemberSignature Language="F#" Value="abstract member CreateEmptyItem : unit -&gt; System.Web.UI.WebControls.ListViewItem&#xA;override this.CreateEmptyItem : unit -&gt; System.Web.UI.WebControls.ListViewItem" Usage="listView.CreateEmptyItem " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ListViewItem</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>在 <see cref="T:System.Web.UI.WebControls.ListView" /> 控件中创建一个空项。</summary>
        <returns>所创建的空项。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.ListView.CreateEmptyItem%2A>方法是一个帮助器方法，该方法由 <xref:System.Web.UI.WebControls.ListView> 控件调用以创建一个空项。 当控件中的数据页的最后一组没有 <xref:System.Web.UI.WebControls.ListView> 更多要显示的记录时，将显示空项。

> [!NOTE]
>  此方法主要由控件开发人员用来扩展 <xref:System.Web.UI.WebControls.ListView> 控件。

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ListView.EmptyItemTemplate" />
        <altmember cref="T:System.Web.UI.WebControls.ListViewItem" />
        <altmember cref="P:System.Web.UI.WebControls.ListViewItem.ItemType" />
        <altmember cref="T:System.Web.UI.WebControls.ListViewItemType" />
        <altmember cref="M:System.Web.UI.WebControls.ListView.CreateItem(System.Web.UI.WebControls.ListViewItemType)" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/bb398790(v=vs.100)">ListView Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="CreateInsertItem">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.WebControls.ListViewItem CreateInsertItem ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.UI.WebControls.ListViewItem CreateInsertItem() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.CreateInsertItem" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateInsertItem () As ListViewItem" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Web::UI::WebControls::ListViewItem ^ CreateInsertItem();" />
      <MemberSignature Language="F#" Value="abstract member CreateInsertItem : unit -&gt; System.Web.UI.WebControls.ListViewItem&#xA;override this.CreateInsertItem : unit -&gt; System.Web.UI.WebControls.ListViewItem" Usage="listView.CreateInsertItem " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ListViewItem</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>在 <see cref="T:System.Web.UI.WebControls.ListView" /> 控件中创建一个插入项。</summary>
        <returns>所创建的插入项。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.ListView.CreateInsertItem%2A>方法是一个帮助器方法，该方法由 <xref:System.Web.UI.WebControls.ListView> 控件调用以创建插入项。 Insert 项是一个 <xref:System.Web.UI.WebControls.ListViewItem> 对象，其 <xref:System.Web.UI.WebControls.ListViewItem.ItemType%2A> 等于 <xref:System.Web.UI.WebControls.ListViewItemType.InsertItem?displayProperty=nameWithType> 。

> [!NOTE]
>  此方法主要由控件开发人员用来扩展 <xref:System.Web.UI.WebControls.ListView> 控件。

 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="T:System.Web.UI.WebControls.ListView" /> 控件没有指定 <see cref="P:System.Web.UI.WebControls.ListView.InsertItemTemplate" /> 模板。</exception>
        <altmember cref="P:System.Web.UI.WebControls.ListView.InsertItemTemplate" />
        <altmember cref="T:System.Web.UI.WebControls.ListViewItem" />
        <altmember cref="P:System.Web.UI.WebControls.ListViewItem.ItemType" />
        <altmember cref="T:System.Web.UI.WebControls.ListViewItemType" />
        <altmember cref="M:System.Web.UI.WebControls.ListView.CreateItem(System.Web.UI.WebControls.ListViewItemType)" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/bb398790(v=vs.100)">ListView Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="CreateItem">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.WebControls.ListViewItem CreateItem (System.Web.UI.WebControls.ListViewItemType itemType);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.UI.WebControls.ListViewItem CreateItem(valuetype System.Web.UI.WebControls.ListViewItemType itemType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.CreateItem(System.Web.UI.WebControls.ListViewItemType)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateItem (itemType As ListViewItemType) As ListViewItem" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Web::UI::WebControls::ListViewItem ^ CreateItem(System::Web::UI::WebControls::ListViewItemType itemType);" />
      <MemberSignature Language="F#" Value="abstract member CreateItem : System.Web.UI.WebControls.ListViewItemType -&gt; System.Web.UI.WebControls.ListViewItem&#xA;override this.CreateItem : System.Web.UI.WebControls.ListViewItemType -&gt; System.Web.UI.WebControls.ListViewItem" Usage="listView.CreateItem itemType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ListViewItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemType" Type="System.Web.UI.WebControls.ListViewItemType" />
      </Parameters>
      <Docs>
        <param name="itemType"><see cref="T:System.Web.UI.WebControls.ListViewItemType" /> 值之一。</param>
        <summary>创建一个具有指定类型的 <see cref="T:System.Web.UI.WebControls.ListViewItem" /> 对象。</summary>
        <returns>一个具有指定类型的 <see cref="T:System.Web.UI.WebControls.ListViewItem" /> 对象。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.ListView.CreateItem%2A>方法是一个帮助器方法，该方法由 <xref:System.Web.UI.WebControls.ListView> 控件调用以创建 <xref:System.Web.UI.WebControls.ListViewItem> 对象。

> [!NOTE]
>  此方法主要由控件开发人员用来扩展 <xref:System.Web.UI.WebControls.ListView> 控件。

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.ListViewItem" />
        <altmember cref="T:System.Web.UI.WebControls.ListViewItemType" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/bb398790(v=vs.100)">ListView Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="CreateItemsInGroups">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.Generic.IList&lt;System.Web.UI.WebControls.ListViewDataItem&gt; CreateItemsInGroups (System.Web.UI.WebControls.ListViewPagedDataSource dataSource, bool dataBinding, System.Web.UI.WebControls.InsertItemPosition insertPosition, System.Collections.ArrayList keyArray);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;class System.Web.UI.WebControls.ListViewDataItem&gt; CreateItemsInGroups(class System.Web.UI.WebControls.ListViewPagedDataSource dataSource, bool dataBinding, valuetype System.Web.UI.WebControls.InsertItemPosition insertPosition, class System.Collections.ArrayList keyArray) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.CreateItemsInGroups(System.Web.UI.WebControls.ListViewPagedDataSource,System.Boolean,System.Web.UI.WebControls.InsertItemPosition,System.Collections.ArrayList)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateItemsInGroups (dataSource As ListViewPagedDataSource, dataBinding As Boolean, insertPosition As InsertItemPosition, keyArray As ArrayList) As IList(Of ListViewDataItem)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Collections::Generic::IList&lt;System::Web::UI::WebControls::ListViewDataItem ^&gt; ^ CreateItemsInGroups(System::Web::UI::WebControls::ListViewPagedDataSource ^ dataSource, bool dataBinding, System::Web::UI::WebControls::InsertItemPosition insertPosition, System::Collections::ArrayList ^ keyArray);" />
      <MemberSignature Language="F#" Value="abstract member CreateItemsInGroups : System.Web.UI.WebControls.ListViewPagedDataSource * bool * System.Web.UI.WebControls.InsertItemPosition * System.Collections.ArrayList -&gt; System.Collections.Generic.IList&lt;System.Web.UI.WebControls.ListViewDataItem&gt;&#xA;override this.CreateItemsInGroups : System.Web.UI.WebControls.ListViewPagedDataSource * bool * System.Web.UI.WebControls.InsertItemPosition * System.Collections.ArrayList -&gt; System.Collections.Generic.IList&lt;System.Web.UI.WebControls.ListViewDataItem&gt;" Usage="listView.CreateItemsInGroups (dataSource, dataBinding, insertPosition, keyArray)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Web.UI.WebControls.ListViewDataItem&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSource" Type="System.Web.UI.WebControls.ListViewPagedDataSource" />
        <Parameter Name="dataBinding" Type="System.Boolean" />
        <Parameter Name="insertPosition" Type="System.Web.UI.WebControls.InsertItemPosition" />
        <Parameter Name="keyArray" Type="System.Collections.ArrayList" />
      </Parameters>
      <Docs>
        <param name="dataSource">数据源。</param>
        <param name="dataBinding">如果 <see cref="T:System.Web.UI.WebControls.ListView" /> 控件绑定到数据，则为 <see langword="true" />；否则为 <see langword="false" />。</param>
        <param name="insertPosition"><see cref="T:System.Web.UI.WebControls.InsertItemPosition" /> 值之一。</param>
        <param name="keyArray">一个数组，表示 <see cref="T:System.Web.UI.WebControls.ListView" /> 控件中的每一项的数据键值。</param>
        <summary>以组的形式创建 <see cref="T:System.Web.UI.WebControls.ListView" /> 控件层次结构。</summary>
        <returns>一个对象，包含 <see cref="T:System.Web.UI.WebControls.ListView" /> 控件中的当前数据页的所有数据项。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.ListView.CreateItemsInGroups%2A>方法用于 <xref:System.Web.UI.WebControls.ListView> 在组中创建控件的控件层次结构。 <xref:System.Web.UI.WebControls.ListView>仅当定义了和属性时，控件才使用此方法 <xref:System.Web.UI.WebControls.ListView.GroupTemplate%2A> <xref:System.Web.UI.WebControls.ListView.GroupItemCount%2A> 。

> [!NOTE]
>  此方法主要由控件开发人员用来扩展 <xref:System.Web.UI.WebControls.ListView> 控件。

 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="T:System.Web.UI.WebControls.ListView" /> 控件没有指定项占位符。</exception>
        <altmember cref="M:System.Web.UI.WebControls.ListView.CreateItemsWithoutGroups(System.Web.UI.WebControls.ListViewPagedDataSource,System.Boolean,System.Web.UI.WebControls.InsertItemPosition,System.Collections.ArrayList)" />
        <altmember cref="P:System.Web.UI.WebControls.ListView.GroupItemCount" />
        <altmember cref="P:System.Web.UI.WebControls.ListView.GroupTemplate" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/bb398790(v=vs.100)">ListView Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="CreateItemsWithoutGroups">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.Generic.IList&lt;System.Web.UI.WebControls.ListViewDataItem&gt; CreateItemsWithoutGroups (System.Web.UI.WebControls.ListViewPagedDataSource dataSource, bool dataBinding, System.Web.UI.WebControls.InsertItemPosition insertPosition, System.Collections.ArrayList keyArray);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;class System.Web.UI.WebControls.ListViewDataItem&gt; CreateItemsWithoutGroups(class System.Web.UI.WebControls.ListViewPagedDataSource dataSource, bool dataBinding, valuetype System.Web.UI.WebControls.InsertItemPosition insertPosition, class System.Collections.ArrayList keyArray) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.CreateItemsWithoutGroups(System.Web.UI.WebControls.ListViewPagedDataSource,System.Boolean,System.Web.UI.WebControls.InsertItemPosition,System.Collections.ArrayList)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateItemsWithoutGroups (dataSource As ListViewPagedDataSource, dataBinding As Boolean, insertPosition As InsertItemPosition, keyArray As ArrayList) As IList(Of ListViewDataItem)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Collections::Generic::IList&lt;System::Web::UI::WebControls::ListViewDataItem ^&gt; ^ CreateItemsWithoutGroups(System::Web::UI::WebControls::ListViewPagedDataSource ^ dataSource, bool dataBinding, System::Web::UI::WebControls::InsertItemPosition insertPosition, System::Collections::ArrayList ^ keyArray);" />
      <MemberSignature Language="F#" Value="abstract member CreateItemsWithoutGroups : System.Web.UI.WebControls.ListViewPagedDataSource * bool * System.Web.UI.WebControls.InsertItemPosition * System.Collections.ArrayList -&gt; System.Collections.Generic.IList&lt;System.Web.UI.WebControls.ListViewDataItem&gt;&#xA;override this.CreateItemsWithoutGroups : System.Web.UI.WebControls.ListViewPagedDataSource * bool * System.Web.UI.WebControls.InsertItemPosition * System.Collections.ArrayList -&gt; System.Collections.Generic.IList&lt;System.Web.UI.WebControls.ListViewDataItem&gt;" Usage="listView.CreateItemsWithoutGroups (dataSource, dataBinding, insertPosition, keyArray)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Web.UI.WebControls.ListViewDataItem&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSource" Type="System.Web.UI.WebControls.ListViewPagedDataSource" />
        <Parameter Name="dataBinding" Type="System.Boolean" />
        <Parameter Name="insertPosition" Type="System.Web.UI.WebControls.InsertItemPosition" />
        <Parameter Name="keyArray" Type="System.Collections.ArrayList" />
      </Parameters>
      <Docs>
        <param name="dataSource">数据源。</param>
        <param name="dataBinding">如果 <see cref="T:System.Web.UI.WebControls.ListView" /> 控件绑定到数据，则为 <see langword="true" />；否则为 <see langword="false" />。</param>
        <param name="insertPosition"><see cref="T:System.Web.UI.WebControls.InsertItemPosition" /> 值之一。</param>
        <param name="keyArray">一个数组，表示 <see cref="T:System.Web.UI.WebControls.ListView" /> 控件中的每一项的数据键值。</param>
        <summary>创建不带有组的 <see cref="T:System.Web.UI.WebControls.ListView" /> 控件层次结构。</summary>
        <returns>一个对象，包含 <see cref="T:System.Web.UI.WebControls.ListView" /> 控件中的当前数据页的所有数据项。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.ListView.CreateItemsWithoutGroups%2A>方法用于创建控件的控件层次结构 <xref:System.Web.UI.WebControls.ListView> 。 此方法 <xref:System.Web.UI.WebControls.ListView> 仅在未定义属性时由控件使用 <xref:System.Web.UI.WebControls.ListView.GroupTemplate%2A> 。

> [!NOTE]
>  此方法主要由控件开发人员用来扩展 <xref:System.Web.UI.WebControls.ListView> 控件。

 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.ListView.CreateItemsInGroups(System.Web.UI.WebControls.ListViewPagedDataSource,System.Boolean,System.Web.UI.WebControls.InsertItemPosition,System.Collections.ArrayList)" />
        <altmember cref="P:System.Web.UI.WebControls.ListView.GroupTemplate" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/bb398790(v=vs.100)">ListView Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="CreateLayoutTemplate">
      <MemberSignature Language="C#" Value="protected virtual void CreateLayoutTemplate ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void CreateLayoutTemplate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.CreateLayoutTemplate" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub CreateLayoutTemplate ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void CreateLayoutTemplate();" />
      <MemberSignature Language="F#" Value="abstract member CreateLayoutTemplate : unit -&gt; unit&#xA;override this.CreateLayoutTemplate : unit -&gt; unit" Usage="listView.CreateLayoutTemplate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>在 <see cref="T:System.Web.UI.WebControls.ListView" /> 控件中创建根容器。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.ListView.CreateLayoutTemplate%2A>方法是一个帮助器方法，用于在控件中创建根容器 <xref:System.Web.UI.WebControls.ListView> 。 容器的内容由 <xref:System.Web.UI.WebControls.ListView.LayoutTemplate%2A> 属性定义。

> [!NOTE]
>  此方法主要由控件开发人员用来扩展 <xref:System.Web.UI.WebControls.ListView> 控件。

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ListView.LayoutTemplate" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/bb398790(v=vs.100)">ListView Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="CreateSuffixArrayList">
      <MemberSignature Language="C#" Value="protected virtual void CreateSuffixArrayList (System.Web.UI.WebControls.ListViewPagedDataSource dataSource, System.Collections.ArrayList suffixArray);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void CreateSuffixArrayList(class System.Web.UI.WebControls.ListViewPagedDataSource dataSource, class System.Collections.ArrayList suffixArray) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.CreateSuffixArrayList(System.Web.UI.WebControls.ListViewPagedDataSource,System.Collections.ArrayList)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub CreateSuffixArrayList (dataSource As ListViewPagedDataSource, suffixArray As ArrayList)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void CreateSuffixArrayList(System::Web::UI::WebControls::ListViewPagedDataSource ^ dataSource, System::Collections::ArrayList ^ suffixArray);" />
      <MemberSignature Language="F#" Value="abstract member CreateSuffixArrayList : System.Web.UI.WebControls.ListViewPagedDataSource * System.Collections.ArrayList -&gt; unit&#xA;override this.CreateSuffixArrayList : System.Web.UI.WebControls.ListViewPagedDataSource * System.Collections.ArrayList -&gt; unit" Usage="listView.CreateSuffixArrayList (dataSource, suffixArray)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSource" Type="System.Web.UI.WebControls.ListViewPagedDataSource" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="suffixArray" Type="System.Collections.ArrayList" Index="1" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="dataSource">将为后缀提供值的数据源。</param>
        <param name="suffixArray">后缀数组。</param>
        <summary>创建一个后缀数组，以供 ASP.NET 在其生成 <see cref="P:System.Web.UI.Control.ClientID" /> 值时使用。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CssClass">
      <MemberSignature Language="C#" Value="public override string CssClass { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CssClass" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.CssClass" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property CssClass As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ CssClass { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CssClass : string with get, set" Usage="System.Web.UI.WebControls.ListView.CssClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.CssClassProperty]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.CssClassProperty&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>重写 <see cref="P:System.Web.UI.WebControls.WebControl.CssClass" /> 属性。 <see cref="T:System.Web.UI.WebControls.ListView" /> 控件不支持设置此属性。</summary>
        <value><see cref="F:System.String.Empty" />，表示该属性未设置。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 控件不支持样式属性 <xref:System.Web.UI.WebControls.ListView> 。 如果尝试设置该 <xref:System.Web.UI.WebControls.ListView.CssClass%2A> 属性，则 <xref:System.NotSupportedException> 会引发异常。 如果获得属性，它将返回基类的相应属性的默认值。

 若要为 <xref:System.Web.UI.WebControls.ListView> 控件的样式，必须 <xref:System.Web.UI.WebControls.ListView> 使用级联样式表 (CSS) 类或内联样式元素来为模板内的控件制定样式。

 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">已尝试设置 <see cref="P:System.Web.UI.WebControls.ListView.CssClass" /> 属性。</exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/bb398790(v=vs.100)">ListView Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="DataKeyNames">
      <MemberSignature Language="C#" Value="public virtual string[] DataKeyNames { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] DataKeyNames" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.DataKeyNames" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property DataKeyNames As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property cli::array &lt;System::String ^&gt; ^ DataKeyNames { cli::array &lt;System::String ^&gt; ^ get(); void set(cli::array &lt;System::String ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataKeyNames : string[] with get, set" Usage="System.Web.UI.WebControls.ListView.DataKeyNames" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Category("Data")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Category("Data")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(null)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(null)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.5">
          <AttributeName Language="C#">[System.ComponentModel.Editor("System.Web.UI.Design.WebControls.DataFieldEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Editor("System.Web.UI.Design.WebControls.DataFieldEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.TypeConverter(typeof(System.Web.UI.WebControls.StringArrayConverter))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.TypeConverter(typeof(System.Web.UI.WebControls.StringArrayConverter))&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.Editor("System.Web.UI.Design.WebControls.DataFieldEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Editor("System.Web.UI.Design.WebControls.DataFieldEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个数组，该数组包含了显示在 <see cref="T:System.Web.UI.WebControls.ListView" /> 控件中的项的主键字段的名称。</summary>
        <value>一个数组，其中包含了显示在 <see cref="T:System.Web.UI.WebControls.ListView" /> 控件中的项的主键字段的名称。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 使用 <xref:System.Web.UI.WebControls.ListView.DataKeyNames%2A> 属性指定表示数据源的主键的一个或多个字段。 若要以声明方式设置此属性，请使用以逗号分隔的字段名称列表。

 <xref:System.Web.UI.WebControls.ListView.DataKeyNames%2A>设置属性后，控件将自动用指定的一个或多个字段 <xref:System.Web.UI.WebControls.ListView> <xref:System.Web.UI.WebControls.ListView.DataKeys%2A> 中的值填充其集合。 这提供了一种便捷的方式来访问每个项的主键。

> [!IMPORTANT]
>  <xref:System.Web.UI.WebControls.ListView>控件在控件状态字段中存储键字段值。 如果这些值包含敏感信息，我们建议您通过将属性设置为来启用视图状态加密 <xref:System.Web.UI.Page.ViewStateEncryptionMode%2A> `ViewStateEncryptionMode.Always` 。

 必须将属性设置 <xref:System.Web.UI.WebControls.ListView.DataKeyNames%2A> 为 "自动更新" 和 "删除" 功能， <xref:System.Web.UI.WebControls.ListView> 才能正常工作。 这些键字段的值将传递到数据源控件，以便与要更新或删除的项匹配。

 使用属性指定为数据键的字段 <xref:System.Web.UI.WebControls.ListView.DataKeyNames%2A> 在更新和删除操作过程中通过使用集合传递到数据源控件 `Keys` 。 数据键字段会传递到数据源控件，即使它们未绑定到模板中的控件。



## Examples
 下面的示例演示如何使用 <xref:System.Web.UI.WebControls.ListView.DataKeyNames%2A> 属性指定数据源的键字段。

 [!code-aspx-csharp[System.Web.UI.WebControls.ListViewItemCommand#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListViewItemCommand/CS/ListViewItemCommandCS.aspx#3)]
 [!code-aspx-vb[System.Web.UI.WebControls.ListViewItemCommand#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListViewItemCommand/VB/ListViewItemCommandVB.aspx#3)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.DataKey" />
        <altmember cref="T:System.Web.UI.WebControls.DataKeyArray" />
        <altmember cref="P:System.Web.UI.WebControls.ListView.DataKeys" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/bb398790(v=vs.100)">ListView Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="DataKeys">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.DataKeyArray DataKeys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.DataKeyArray DataKeys" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.DataKeys" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property DataKeys As DataKeyArray" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::DataKeyArray ^ DataKeys { System::Web::UI::WebControls::DataKeyArray ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DataKeys : System.Web.UI.WebControls.DataKeyArray" Usage="System.Web.UI.WebControls.ListView.DataKeys" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataKeyArray</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个 <see cref="T:System.Web.UI.WebControls.DataKey" /> 对象集合，这些对象表示 <see cref="T:System.Web.UI.WebControls.ListView" /> 控件中的每一项的数据键值。</summary>
        <value>一个对象，包含 <see cref="T:System.Web.UI.WebControls.ListView" /> 控件中的每一项的数据键。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.ListView.DataKeyNames%2A>设置属性后， <xref:System.Web.UI.WebControls.ListView> 控件将自动 <xref:System.Web.UI.WebControls.DataKey> 为控件中的每一项创建一个对象。 <xref:System.Web.UI.WebControls.DataKey>对象包含属性中指定的一个或多个字段的值 <xref:System.Web.UI.WebControls.ListView.DataKeyNames%2A> 。 然后，将 <xref:System.Web.UI.WebControls.DataKey> 对象添加到控件的 <xref:System.Web.UI.WebControls.ListView.DataKeys%2A> 集合中。

 使用 <xref:System.Web.UI.WebControls.ListView.DataKeys%2A> 属性可检索 <xref:System.Web.UI.WebControls.DataKey> 控件中特定数据项的对象 <xref:System.Web.UI.WebControls.ListView> 。

 您可以使用 <xref:System.Web.UI.WebControls.ListView.SelectedDataKey%2A> 属性来检索 <xref:System.Web.UI.WebControls.DataKey> 当前选定项的对象。 你还可以使用 <xref:System.Web.UI.WebControls.ListView.SelectedValue%2A> 属性来直接检索当前选定项的数据键值。

 您可以使用 <xref:System.Web.UI.WebControls.ListViewDataItem.DisplayIndex%2A?displayProperty=nameWithType> 属性来检索为 <xref:System.Web.UI.WebControls.DataKey> 其单击命令按钮的项的对象。



## Examples
 下面的示例演示如何使用 <xref:System.Web.UI.WebControls.ListView.DataKeys%2A> 属性来确定控件中项的数据键值 <xref:System.Web.UI.WebControls.ListView> 。 它还演示了如何根据数据项而不是使用索引的默认行为保留用户选择。

 [!code-csharp[System.Web.UI.WebControls.ListView.SelectedIndexChanged#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.SelectedIndexChanged/CS/ListViewItemSelectedIndexChanged2CS.aspx#3)]
 [!code-vb[System.Web.UI.WebControls.ListView.SelectedIndexChanged#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.SelectedIndexChanged/VB/ListViewItemSelectedIndexChanged2VB.aspx#3)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.DataKey" />
        <altmember cref="T:System.Web.UI.WebControls.DataKeyArray" />
        <altmember cref="P:System.Web.UI.WebControls.ListView.DataKeyNames" />
        <altmember cref="P:System.Web.UI.WebControls.ListView.SelectedDataKey" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/bb398790(v=vs.100)">ListView Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="DeleteItem">
      <MemberSignature Language="C#" Value="public virtual void DeleteItem (int itemIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DeleteItem(int32 itemIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.DeleteItem(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub DeleteItem (itemIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void DeleteItem(int itemIndex);" />
      <MemberSignature Language="F#" Value="abstract member DeleteItem : int -&gt; unit&#xA;override this.DeleteItem : int -&gt; unit" Usage="listView.DeleteItem itemIndex" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="itemIndex">要删除的项的索引。</param>
        <summary>从数据源中删除位于指定索引位置的记录。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 使用 <xref:System.Web.UI.WebControls.ListView.DeleteItem%2A> 方法以编程方式从数据源中删除指定索引处的记录。 此方法通常用于从控件之外删除记录 <xref:System.Web.UI.WebControls.ListView> ，如页上的其他控件。 此方法引发 <xref:System.Web.UI.WebControls.ListView.ItemDeleted> 和 <xref:System.Web.UI.WebControls.ListView.ItemDeleting> 事件。



## Examples
 下面的示例演示如何使用方法以 <xref:System.Web.UI.WebControls.ListView.DeleteItem%2A> 编程方式从数据源中删除控件中的选定项 <xref:System.Web.UI.WebControls.ListView> 。

 [!code-aspx-csharp[System.Web.UI.WebControls.ListView.DeleteItem#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.DeleteItem/CS/ListViewDeleteItemCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ListView.DeleteItem#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.DeleteItem/VB/ListViewDeleteItemVB.aspx#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><paramref name="itemIndex" /> 小于 0。

- 或 -

与 <see cref="T:System.Web.UI.DataSourceView" /> 控件相关联的 <see cref="T:System.Web.UI.WebControls.ListView" /> 对象为 <see langword="null" />。</exception>
        <altmember cref="E:System.Web.UI.WebControls.ListView.ItemDeleted" />
        <altmember cref="E:System.Web.UI.WebControls.ListView.ItemDeleting" />
        <altmember cref="M:System.Web.UI.WebControls.ListView.InsertNewItem(System.Boolean)" />
        <altmember cref="M:System.Web.UI.WebControls.ListView.UpdateItem(System.Int32,System.Boolean)" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/bb398790(v=vs.100)">ListView Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="DeleteMethod">
      <MemberSignature Language="C#" Value="public virtual string DeleteMethod { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DeleteMethod" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.DeleteMethod" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property DeleteMethod As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ DeleteMethod { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DeleteMethod : string with get, set" Usage="System.Web.UI.WebControls.ListView.DeleteMethod" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue("")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue("")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Web.UI.Themeable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.Themeable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Web.WebCategory("Data")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.WebCategory("Data")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Web.WebSysDescription("DataBoundControl_DeleteMethod")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.WebSysDescription("DataBoundControl_DeleteMethod")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置为了删除数据要调用的方法的名称。</summary>
        <value>方法的名称。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 设置此属性将导致模型绑定用作数据绑定方法。

 有关如何在 Web 窗体中使用模型绑定的教程系列，请参阅 [模型绑定和 Web 窗体](/aspnet/web-forms/overview/presenting-and-managing-data/model-binding/retrieving-data)。

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EditIndex">
      <MemberSignature Language="C#" Value="public virtual int EditIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 EditIndex" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.EditIndex" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property EditIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int EditIndex { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.EditIndex : int with get, set" Usage="System.Web.UI.WebControls.ListView.EditIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Category("Default")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Category("Default")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(-1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(-1)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置所编辑的项的索引。</summary>
        <value>所编辑的项的从零开始的索引。 默认值为 -1，表示没有正在编辑的项。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 您可以使用 <xref:System.Web.UI.WebControls.ListView.EditIndex%2A> 属性以编程方式指定或确定 <xref:System.Web.UI.WebControls.ListView> 控件中要编辑的项。 如果将此属性设置为控件中的项的索引，则该项在编辑模式下显示。 在编辑模式下，使用 <xref:System.Web.UI.WebControls.ListView.EditItemTemplate%2A> 模板而不是模板呈现项 <xref:System.Web.UI.WebControls.ListView.ItemTemplate%2A> 。 您可以 <xref:System.Web.UI.WebControls.ListView.EditItemTemplate%2A> 使用数据绑定控件填充，以使用户能够修改项的值。 若要从编辑模式切换到显示模式，请将此属性设置为-1。

 <xref:System.Web.UI.WebControls.ListView.EditIndex%2A>当必须以编程方式确定要编辑的项时，或将自定义编辑功能添加到控件时，通常会使用属性 <xref:System.Web.UI.WebControls.ListView> 。 <xref:System.Web.UI.WebControls.ListView>如果将按钮添加到其 <xref:System.Web.UI.WebControls.Button.CommandName%2A> 属性设置为的项模板，则该控件具有内置的编辑功能，该功能会自动将项置于编辑模式 `Edit` 。



## Examples
 下面的示例演示如何使用 <xref:System.Web.UI.WebControls.ListView.EditIndex%2A> 属性来确定控件中是否处于编辑模式 <xref:System.Web.UI.WebControls.ListView> 。 此代码示例是为类提供的更大示例的一部分 <xref:System.Web.UI.WebControls.ListViewDataItem> 。

 [!code-csharp[System.Web.UI.WebControls.ListViewDataItem#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListViewDataItem/CS/ListViewDataItemDataItemCS.aspx#2)]
 [!code-vb[System.Web.UI.WebControls.ListViewDataItem#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListViewDataItem/VB/ListViewDataItemDataItemVB.aspx#2)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><see cref="P:System.Web.UI.WebControls.ListView.EditIndex" /> 属性被设置为小于 -1 的值。</exception>
        <altmember cref="P:System.Web.UI.WebControls.ListView.AlternatingItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.ListView.DataKeys" />
        <altmember cref="P:System.Web.UI.WebControls.ListView.DataKeyNames" />
        <altmember cref="P:System.Web.UI.WebControls.ListView.EditItem" />
        <altmember cref="P:System.Web.UI.WebControls.ListView.EditItemTemplate" />
        <altmember cref="E:System.Web.UI.WebControls.ListView.ItemEditing" />
        <altmember cref="P:System.Web.UI.WebControls.ListView.ItemTemplate" />
        <altmember cref="E:System.Web.UI.WebControls.ListView.ItemUpdated" />
        <altmember cref="E:System.Web.UI.WebControls.ListView.ItemUpdating" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/bb398790(v=vs.100)">ListView Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="EditItem">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.ListViewItem EditItem { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ListViewItem EditItem" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.EditItem" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property EditItem As ListViewItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::ListViewItem ^ EditItem { System::Web::UI::WebControls::ListViewItem ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EditItem : System.Web.UI.WebControls.ListViewItem" Usage="System.Web.UI.WebControls.ListView.EditItem" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ListViewItem</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取 <see cref="T:System.Web.UI.WebControls.ListView" /> 控件中处于编辑模式的项。</summary>
        <value><see cref="T:System.Web.UI.WebControls.ListView" /> 控件中处于编辑模式的项；或者，如果没有项处于编辑模式，则为 <see langword="null" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 使用 <xref:System.Web.UI.WebControls.ListView.EditItem%2A> 属性可访问控件中处于编辑模式的项 <xref:System.Web.UI.WebControls.ListView> 。 编辑项的内容由 <xref:System.Web.UI.WebControls.ListView.EditItemTemplate%2A> 属性定义。



## Examples
 下面的示例演示如何通过使用属性访问模板中包含的控件来检索处于编辑模式的项 <xref:System.Web.UI.WebControls.ListView.EditItem%2A> <xref:System.Web.UI.WebControls.ListView.EditItemTemplate%2A> 。

> [!IMPORTANT]
>  此示例具有一个接受用户输入的文本框，这是一个潜在的安全威胁。 默认情况下，ASP.NET 网页验证用户输入是否不包含脚本或 HTML 元素。 有关详细信息，请参阅[脚本侵入概述](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100))。

 [!code-aspx-csharp[System.Web.UI.WebControls.ListView.ItemEditing#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.ItemEditing/CS/ListViewItemEditingCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ListView.ItemEditing#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.ItemEditing/VB/ListViewItemEditingVB.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ListView.EditItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.ListView.EditIndex" />
        <altmember cref="T:System.Web.UI.WebControls.ListViewItem" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/bb398790(v=vs.100)">ListView Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="EditItemTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate EditItemTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate EditItemTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.EditItemTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property EditItemTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ EditItemTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberSignature Language="F#" Value="member this.EditItemTemplate : System.Web.UI.ITemplate with get, set" Usage="System.Web.UI.WebControls.ListView.EditItemTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(null)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(null)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.ListViewDataItem), System.ComponentModel.BindingDirection.TwoWay)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.ListViewDataItem), System.ComponentModel.BindingDirection.TwoWay)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置处于编辑模式的项的自定义内容。</summary>
        <value>一个对象，包含处于编辑模式的项的自定义内容。 默认值为 <see langword="null" />，指示未设置此属性。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 使用 <xref:System.Web.UI.WebControls.ListView.EditItemTemplate%2A> 属性可在编辑模式下为项定义一个自定义用户界面 (UI) 。 该 <xref:System.Web.UI.WebControls.ListView.EditItemTemplate%2A> 模板通常包含输入控件，用户可通过这些控件更新现有记录的值。 它通常还包含用于更新记录和取消更新操作的按钮。

 若要以声明的方式指定自定义模板，请在 `EditItemTemplate` 控件内添加一个元素 <xref:System.Web.UI.WebControls.ListView> 。 然后，将模板的内容和控件添加到 `EditItemTemplate` 元素。 您可以通过使用双向绑定表达式将字段与输入控件相关联。 这使 <xref:System.Web.UI.WebControls.ListView> 控件能够在编辑模式下自动在项的关联输入控件中显示原始字段值。 当更新记录时， <xref:System.Web.UI.WebControls.ListView> 控件可以从关联的输入控件中自动提取更新的字段值。 有关详细信息，请参阅 [数据绑定表达式概述](https://docs.microsoft.com/previous-versions/aspnet/ms178366(v=vs.100))。

 若要创建执行内置 "取消" 和 "更新" 操作的按钮，请向模板添加一个按钮控件。 将其 <xref:System.Web.UI.WebControls.Button.CommandName%2A> 属性设置为下表中列出的值之一。

|按钮类型|CommandName 值|
|-----------------|-----------------------|
|取消|退出|
|更新|时更新|



## Examples
 下面的示例演示如何在编辑模式下为项定义自定义模板。

> [!IMPORTANT]
>  此示例具有一个接受用户输入的文本框，这是一个潜在的安全威胁。 默认情况下，ASP.NET 网页验证用户输入是否不包含脚本或 HTML 元素。 有关详细信息，请参阅[脚本侵入概述](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100))。

 [!code-aspx-csharp[System.Web.UI.WebControls.ListView.EditItemTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.EditItemTemplate/CS/ListViewEditItemTemplateCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ListView.EditItemTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.EditItemTemplate/VB/ListViewEditItemTemplateVB.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ListView.EditIndex" />
        <altmember cref="P:System.Web.UI.WebControls.ListView.EditItem" />
        <altmember cref="E:System.Web.UI.WebControls.ListView.ItemEditing" />
        <altmember cref="P:System.Web.UI.WebControls.ListView.ItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.ListView.LayoutTemplate" />
        <altmember cref="E:System.Web.UI.WebControls.ListView.ItemUpdated" />
        <altmember cref="E:System.Web.UI.WebControls.ListView.ItemUpdating" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/bb398790(v=vs.100)">ListView Web 服务器控件</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms178366(v=vs.100)">数据绑定表达式语法</related>
      </Docs>
    </Member>
    <Member MemberName="EmptyDataTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate EmptyDataTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate EmptyDataTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.EmptyDataTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property EmptyDataTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ EmptyDataTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberSignature Language="F#" Value="member this.EmptyDataTemplate : System.Web.UI.ITemplate with get, set" Usage="System.Web.UI.WebControls.ListView.EmptyDataTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(null)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(null)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.ListView))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.ListView))&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置在 <see cref="T:System.Web.UI.WebControls.ListView" /> 控件绑定到不包含任何记录的数据源时所呈现的空模板的用户定义内容。</summary>
        <value>一个对象，包含空模板的自定义内容。 默认值为 <see langword="null" />，指示未设置此属性。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.ListView>当绑定到控件的数据源不包含任何记录并且属性设置为时，控件中将显示空模板 <xref:System.Web.UI.WebControls.ListView.InsertItemPosition%2A> <xref:System.Web.UI.WebControls.InsertItemPosition.None?displayProperty=nameWithType> 。 将呈现模板而不是 <xref:System.Web.UI.WebControls.ListView.LayoutTemplate%2A> 模板。 如果 <xref:System.Web.UI.WebControls.ListView.InsertItemPosition%2A> 将属性设置为以外的值，则 <xref:System.Web.UI.WebControls.InsertItemPosition.None?displayProperty=nameWithType> <xref:System.Web.UI.WebControls.ListView.EmptyDataTemplate%2A> 不会呈现模板。

 您可以使用属性为空模板定义自定义用户界面 (UI) <xref:System.Web.UI.WebControls.ListView.EmptyDataTemplate%2A> 。 若要以声明方式为空模板指定自定义模板，请在 `EmptyDataTemplate` 控件内添加元素和元素 <xref:System.Web.UI.WebControls.ListView> 。 然后，可以将模板的内容添加到 `EmptyDataTemplate` 元素。



## Examples
 下面的示例演示如何为空模板定义自定义模板。

 [!code-aspx-csharp[System.Web.UI.WebControls.ListView.EmptyDataTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.EmptyDataTemplate/CS/ListViewEmptyDataTemplateCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ListView.EmptyDataTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.EmptyDataTemplate/VB/ListViewEmptyDataTemplateVB.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ListView.EmptyItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.ListView.LayoutTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.ListView.InsertItemPosition" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/bb398790(v=vs.100)">ListView Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="EmptyItemTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate EmptyItemTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate EmptyItemTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.EmptyItemTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property EmptyItemTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ EmptyItemTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberSignature Language="F#" Value="member this.EmptyItemTemplate : System.Web.UI.ITemplate with get, set" Usage="System.Web.UI.WebControls.ListView.EmptyItemTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(null)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(null)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.ListViewItem))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.ListViewItem))&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置在当前数据页的最后一行中没有可显示的数据项时，<see cref="T:System.Web.UI.WebControls.ListView" /> 控件中呈现的空项的用户定义内容。</summary>
        <value>一个对象，该对象包含空项的自定义内容。 默认值为 <see langword="null" />，指示未设置此属性。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.ListView>当当前页的最后一组中没有更多要显示的数据项时，空项显示在控件中。 仅当 <xref:System.Web.UI.WebControls.ListView.GroupItemCount%2A> 设置为大于1的值时，才会发生这种情况。 例如，在控件中 <xref:System.Web.UI.WebControls.ListView> ， <xref:System.Web.UI.WebControls.ListView.GroupItemCount%2A> 属性可能设置为5，并且从数据源返回的项的总数为8。 在这种情况下，数据的最后一行将包含由模板定义的三个项 <xref:System.Web.UI.WebControls.ListView.ItemTemplate%2A> 和由模板定义的两个项 <xref:System.Web.UI.WebControls.ListView.EmptyItemTemplate%2A> 。

 可以通过使用属性为空项定义 (UI) 的自定义用户界面 <xref:System.Web.UI.WebControls.ListView.EmptyItemTemplate%2A> 。 若要以声明方式为空项指定自定义模板，请在 `EmptyItemTemplate` 控件内添加一个元素 <xref:System.Web.UI.WebControls.ListView> 。 然后，可以将模板的内容添加到 `EmptyItemTemplate` 元素。



## Examples
 下面的示例演示如何为空项定义自定义模板。

 [!code-aspx-csharp[System.Web.UI.WebControls.ListView.EmptyItemTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.EmptyItemTemplate/CS/ListViewEmptyItemTemplateCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ListView.EmptyItemTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.EmptyItemTemplate/VB/ListViewEmptyItemTemplateVB.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ListView.EmptyDataTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.ListView.GroupItemCount" />
        <altmember cref="P:System.Web.UI.WebControls.ListView.ItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.ListView.LayoutTemplate" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/bb398790(v=vs.100)">ListView Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="EnableModelValidation">
      <MemberSignature Language="C#" Value="public virtual bool EnableModelValidation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableModelValidation" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.EnableModelValidation" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property EnableModelValidation As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool EnableModelValidation { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableModelValidation : bool with get, set" Usage="System.Web.UI.WebControls.ListView.EnableModelValidation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5">
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.WebCategory("Behavior")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.WebCategory("Behavior")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示验证程序控件是否会处理在插入或更新操作过程中出现的异常。</summary>
        <value>如果验证程序控件将处理在插入或更新操作过程中出现的异常，则为 <see langword="true" />；否则为 <see langword="false" />。 默认值为 <see langword="false" />。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnablePersistedSelection">
      <MemberSignature Language="C#" Value="public virtual bool EnablePersistedSelection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnablePersistedSelection" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.EnablePersistedSelection" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property EnablePersistedSelection As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool EnablePersistedSelection { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnablePersistedSelection : bool with get, set" Usage="System.Web.UI.WebControls.ListView.EnablePersistedSelection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Web.WebCategory("Behavior")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.WebCategory("Behavior")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示当用户在逐页浏览数据绑定控件中的数据时，行选择是否保持。</summary>
        <value>如果行选择保持，则为 <see langword="true" />；否则为 <see langword="false" />。 默认值为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 您可以指定当控件处于分页模式时所选行的保留方式 <xref:System.Web.UI.WebControls.ListView> 。 默认情况下，行选择基于行索引。 同一行 (例如，在每个页面上选择第三行) 。 或者，您可以基于所选行的数据键启用持久性。 在这种情况下，如果你选择第1页上的第3行并移动到第2页，则第2页上未选择任何行。 如果向后移动到第1页，则仍选择第3行。 若要启用此功能，请将此属性设置为 `true` 。

> [!NOTE]
>  在 ASP.NET 版本2.0、3.0 和3.5 中，行选择仅基于行索引。 默认情况下，ASP.NET 4 中的行选择基于用于向后兼容的索引。

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnsureLayoutTemplate">
      <MemberSignature Language="C#" Value="protected virtual void EnsureLayoutTemplate ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void EnsureLayoutTemplate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.EnsureLayoutTemplate" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub EnsureLayoutTemplate ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void EnsureLayoutTemplate();" />
      <MemberSignature Language="F#" Value="abstract member EnsureLayoutTemplate : unit -&gt; unit&#xA;override this.EnsureLayoutTemplate : unit -&gt; unit" Usage="listView.EnsureLayoutTemplate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>确保在 <see cref="P:System.Web.UI.WebControls.ListView.LayoutTemplate" /> 控件中正确创建 <see cref="T:System.Web.UI.WebControls.ListView" /> 内容。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.ListView.EnsureLayoutTemplate%2A>方法是一个帮助器方法，该方法由 <xref:System.Web.UI.WebControls.ListView> 控件调用以确保仅将 <xref:System.Web.UI.WebControls.ListView.LayoutTemplate%2A> 内容添加到控件中一次。

 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.ListView.CreateLayoutTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.ListView.LayoutTemplate" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/bb398790(v=vs.100)">ListView Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="ExtractItemValues">
      <MemberSignature Language="C#" Value="public virtual void ExtractItemValues (System.Collections.Specialized.IOrderedDictionary itemValues, System.Web.UI.WebControls.ListViewItem item, bool includePrimaryKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExtractItemValues(class System.Collections.Specialized.IOrderedDictionary itemValues, class System.Web.UI.WebControls.ListViewItem item, bool includePrimaryKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.ExtractItemValues(System.Collections.Specialized.IOrderedDictionary,System.Web.UI.WebControls.ListViewItem,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ExtractItemValues (itemValues As IOrderedDictionary, item As ListViewItem, includePrimaryKey As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ExtractItemValues(System::Collections::Specialized::IOrderedDictionary ^ itemValues, System::Web::UI::WebControls::ListViewItem ^ item, bool includePrimaryKey);" />
      <MemberSignature Language="F#" Value="abstract member ExtractItemValues : System.Collections.Specialized.IOrderedDictionary * System.Web.UI.WebControls.ListViewItem * bool -&gt; unit&#xA;override this.ExtractItemValues : System.Collections.Specialized.IOrderedDictionary * System.Web.UI.WebControls.ListViewItem * bool -&gt; unit" Usage="listView.ExtractItemValues (itemValues, item, includePrimaryKey)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemValues" Type="System.Collections.Specialized.IOrderedDictionary" />
        <Parameter Name="item" Type="System.Web.UI.WebControls.ListViewItem" />
        <Parameter Name="includePrimaryKey" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="itemValues">一个字典对象，用于存储字段值。</param>
        <param name="item">要从中检索字段值的 <see cref="T:System.Web.UI.WebControls.ListViewItem" /> 对象。</param>
        <param name="includePrimaryKey"><see langword="true" /> 表示包含主键字段；否则为 <see langword="false" />。</param>
        <summary>检索在指定项中声明的每个字段的值，并将它们存储在指定的 <see cref="T:System.Collections.Specialized.IOrderedDictionary" /> 对象中。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.ListView.ExtractItemValues%2A>方法是一个帮助器方法，该方法由 <xref:System.Web.UI.WebControls.ListView> 控件调用以检索中声明的每个字段的值 `item` 。 可以通过使用参数来指定提取的值是否包含键字段 `includePrimaryKey` 。

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="itemValues" /> 为 <see langword="null" />。</exception>
        <exception cref="T:System.InvalidOperationException"><paramref name="item" /> 不是 <see cref="T:System.Web.UI.WebControls.ListViewDataItem" /> 对象。</exception>
        <altmember cref="T:System.Collections.Specialized.IOrderedDictionary" />
        <altmember cref="T:System.Web.UI.WebControls.ListViewDataItem" />
        <altmember cref="T:System.Web.UI.WebControls.ListViewItem" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/bb398790(v=vs.100)">ListView Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="FindPlaceholder">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.Control FindPlaceholder (string containerID, System.Web.UI.Control container);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.UI.Control FindPlaceholder(string containerID, class System.Web.UI.Control container) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.FindPlaceholder(System.String,System.Web.UI.Control)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function FindPlaceholder (containerID As String, container As Control) As Control" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Web::UI::Control ^ FindPlaceholder(System::String ^ containerID, System::Web::UI::Control ^ container);" />
      <MemberSignature Language="F#" Value="abstract member FindPlaceholder : string * System.Web.UI.Control -&gt; System.Web.UI.Control&#xA;override this.FindPlaceholder : string * System.Web.UI.Control -&gt; System.Web.UI.Control" Usage="listView.FindPlaceholder (containerID, container)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.Control</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containerID" Type="System.String" />
        <Parameter Name="container" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="containerID">要查找的控件的标识符。</param>
        <param name="container">要搜索的容器。</param>
        <summary>在指定容器中搜索具有指定标识符的控件。</summary>
        <returns>指定的控件；或者，如果找不到指定的控件，则为 <see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 此方法主要由控件开发人员用来扩展 <xref:System.Web.UI.WebControls.ListView> 控件。

 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/bb398790(v=vs.100)">ListView Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="Font">
      <MemberSignature Language="C#" Value="public override System.Web.UI.WebControls.FontInfo Font { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.FontInfo Font" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.Font" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Font As FontInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::FontInfo ^ Font { System::Web::UI::WebControls::FontInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Font : System.Web.UI.WebControls.FontInfo" Usage="System.Web.UI.WebControls.ListView.Font" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.FontInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>重写 <see cref="P:System.Web.UI.WebControls.WebControl.Font" /> 属性。 <see cref="T:System.Web.UI.WebControls.ListView" /> 控件不支持此属性。</summary>
        <value>此属性不受支持，并且引发 <see cref="T:System.NotSupportedException" /> 错误。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 控件不支持样式属性 <xref:System.Web.UI.WebControls.ListView> 。 如果尝试访问该 <xref:System.Web.UI.WebControls.ListView.Font%2A> 属性，则 <xref:System.NotSupportedException> 会引发异常。

 若要为 <xref:System.Web.UI.WebControls.ListView> 控件的样式，必须 <xref:System.Web.UI.WebControls.ListView> 使用级联样式表 (CSS) 类或内联样式元素来为模板内的控件制定样式。

 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">尝试访问 <see cref="P:System.Web.UI.WebControls.ListView.Font" /> 属性。</exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/bb398790(v=vs.100)">ListView Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="ForeColor">
      <MemberSignature Language="C#" Value="public override System.Drawing.Color ForeColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color ForeColor" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.ForeColor" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ForeColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Color ForeColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.ForeColor : System.Drawing.Color with get, set" Usage="System.Web.UI.WebControls.ListView.ForeColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>重写 <see cref="P:System.Web.UI.WebControls.WebControl.ForeColor" /> 属性。 <see cref="T:System.Web.UI.WebControls.ListView" /> 控件不支持设置此属性。</summary>
        <value><see cref="F:System.Drawing.Color.Empty" />，表示该属性未设置。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 控件不支持样式属性 <xref:System.Web.UI.WebControls.ListView> 。 如果尝试设置该 <xref:System.Web.UI.WebControls.ListView.ForeColor%2A> 属性，则 <xref:System.NotSupportedException> 会引发异常。  如果获得属性，它将返回基类的相应属性的默认值。

 若要为 <xref:System.Web.UI.WebControls.ListView> 控件的样式，必须 <xref:System.Web.UI.WebControls.ListView> 使用级联样式表 (CSS) 类或内联样式元素来为模板内的控件制定样式。

 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">已尝试设置 <see cref="P:System.Web.UI.WebControls.ListView.ForeColor" /> 属性。</exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/bb398790(v=vs.100)">ListView Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="GroupItemCount">
      <MemberSignature Language="C#" Value="public virtual int GroupItemCount { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 GroupItemCount" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.GroupItemCount" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property GroupItemCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int GroupItemCount { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.GroupItemCount : int with get, set" Usage="System.Web.UI.WebControls.ListView.GroupItemCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Category("Default")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Category("Default")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(1)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置 <see cref="T:System.Web.UI.WebControls.ListView" /> 控件中每组显示的项数。</summary>
        <value><see cref="T:System.Web.UI.WebControls.ListView" /> 控件中每组显示的项数。 默认值为 1，表示 <see cref="T:System.Web.UI.WebControls.ListView" /> 控件将每组显示一项。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 使用 <xref:System.Web.UI.WebControls.ListView.GroupItemCount%2A> 属性指定要在控件中一起组合在一起的项数 <xref:System.Web.UI.WebControls.ListView> 。  (换言之，这将指定为控件的每个组显示的项数。 ) 对于每个组，该 <xref:System.Web.UI.WebControls.ListView> 控件呈现模板的内容 <xref:System.Web.UI.WebControls.ListView.GroupTemplate%2A> ，并将项占位符替换为实际项内容。 它执行的次数与属性定义的项数多 <xref:System.Web.UI.WebControls.ListView.GroupItemCount%2A> 。

 您可以使用 <xref:System.Web.UI.WebControls.ListView.GroupItemCount%2A> 与 <xref:System.Web.UI.WebControls.ListView.GroupTemplate%2A> 模板在控件中创建平铺布局 <xref:System.Web.UI.WebControls.ListView> 。 在平铺表布局中，项在行中水平重复。 项重复的次数由 <xref:System.Web.UI.WebControls.ListView.GroupItemCount%2A> 属性指定。



## Examples
 下面的示例演示如何使用属性在控件中创建平铺布局 <xref:System.Web.UI.WebControls.ListView> <xref:System.Web.UI.WebControls.ListView.GroupItemCount%2A> 。 它还演示如何以编程方式更改此属性。

 [!code-aspx-csharp[System.Web.UI.WebControls.ListView.GroupItemCount#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.GroupItemCount/CS/ListViewGroupItemCountCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ListView.GroupItemCount#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.GroupItemCount/VB/ListViewGroupItemCountVB.aspx#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><see cref="P:System.Web.UI.WebControls.ListView.GroupItemCount" /> 属性被设置为小于 1 的值。</exception>
        <altmember cref="P:System.Web.UI.WebControls.ListView.GroupTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.ListView.GroupSeparatorTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.ListView.ItemSeparatorTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.ListView.ItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.ListView.LayoutTemplate" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/bb398790(v=vs.100)">ListView Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="GroupPlaceholderID">
      <MemberSignature Language="C#" Value="public virtual string GroupPlaceholderID { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string GroupPlaceholderID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.GroupPlaceholderID" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property GroupPlaceholderID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ GroupPlaceholderID { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.GroupPlaceholderID : string with get, set" Usage="System.Web.UI.WebControls.ListView.GroupPlaceholderID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Category("Behavior")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Category("Behavior")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue("groupPlaceholder")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue("groupPlaceholder")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置 <see cref="T:System.Web.UI.WebControls.ListView" /> 控件中的组占位符的 ID。</summary>
        <value><see cref="T:System.Web.UI.WebControls.ListView" /> 控件中的组占位符的 ID。 默认值为“groupPlaceholder”。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 使用 <xref:System.Web.UI.WebControls.ListView.GroupPlaceholderID%2A> 属性指定组占位符的 ID。 组占位符是您在 <xref:System.Web.UI.WebControls.ListView.LayoutTemplate%2A> 使用组来表示将在其中呈现组的位置时添加到模板的控件。



## Examples
 下面的示例演示如何使用 <xref:System.Web.UI.WebControls.ListView.GroupPlaceholderID%2A> 属性为控件的组占位符指定其他 ID <xref:System.Web.UI.WebControls.ListView> 。

 [!code-aspx-csharp[System.Web.UI.WebControls.ListView.ItemContainerID#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.ItemContainerID/CS/ListViewItemContainerIDCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ListView.ItemContainerID#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.ItemContainerID/VB/ListViewItemContainerIDVB.aspx#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">指定的 ID 为 <see langword="null" /> 或空字符串。</exception>
        <altmember cref="P:System.Web.UI.WebControls.ListView.GroupItemCount" />
        <altmember cref="P:System.Web.UI.WebControls.ListView.GroupTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.ListView.ItemPlaceholderID" />
        <altmember cref="P:System.Web.UI.WebControls.ListView.LayoutTemplate" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/bb398790(v=vs.100)">ListView Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="GroupSeparatorTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate GroupSeparatorTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate GroupSeparatorTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.GroupSeparatorTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property GroupSeparatorTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ GroupSeparatorTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberSignature Language="F#" Value="member this.GroupSeparatorTemplate : System.Web.UI.ITemplate with get, set" Usage="System.Web.UI.WebControls.ListView.GroupSeparatorTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(null)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(null)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.ListViewItem))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.ListViewItem))&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置 <see cref="T:System.Web.UI.WebControls.ListView" /> 控件中的组之间的分隔符的用户定义内容。</summary>
        <value>一个对象，包含组分隔符的自定义内容。 默认值为 <see langword="null" />，指示未设置此属性。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 分隔符使你可以将具有自定义内容的元素放置在每个组之间。 <xref:System.Web.UI.WebControls.ListView>然后，控件交替呈现 <xref:System.Web.UI.WebControls.ListView.GroupTemplate%2A> 内容和 <xref:System.Web.UI.WebControls.ListView.GroupSeparatorTemplate%2A> 内容。 <xref:System.Web.UI.WebControls.ListView.GroupTemplate%2A>始终呈现最后一个内容。

 请确保在模板中定义整行的内容 <xref:System.Web.UI.WebControls.ListView.GroupSeparatorTemplate%2A> ，因为该 <xref:System.Web.UI.WebControls.ListView> 控件呈现 <xref:System.Web.UI.WebControls.ListView.GroupSeparatorTemplate%2A> 模板内的内容 <xref:System.Web.UI.WebControls.ListView.LayoutTemplate%2A> 。 例如，可以 <xref:System.Web.UI.WebControls.ListView> 使用 () 元素的表行来创建控件中的组 `tr` 。 如果该 <xref:System.Web.UI.WebControls.ListView.GroupItemCount%2A> 属性设置为3，则 `colspan` 模板中的属性必须设置为 3 <xref:System.Web.UI.WebControls.ListView.GroupSeparatorTemplate%2A> 。

 若要以声明方式为分隔符指定模板，请在 `GroupSeparatorTemplate` 控件内添加一个元素 <xref:System.Web.UI.WebControls.ListView> 。 然后，可以将模板的内容添加到 `GroupSeparatorTemplate` 元素。



## Examples
 下面的示例演示如何使用属性在控件中创建组分隔符 <xref:System.Web.UI.WebControls.ListView> <xref:System.Web.UI.WebControls.ListView.GroupSeparatorTemplate%2A> 。

 [!code-aspx-csharp[System.Web.UI.WebControls.ListView.GroupTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.GroupTemplate/CS/ListViewGroupTemplateCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ListView.GroupTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.GroupTemplate/VB/ListViewGroupTemplateVB.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ListView.GroupItemCount" />
        <altmember cref="P:System.Web.UI.WebControls.ListView.GroupTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.ListView.ItemSeparatorTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.ListView.ItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.ListView.LayoutTemplate" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/bb398790(v=vs.100)">ListView Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="GroupTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate GroupTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate GroupTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.GroupTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property GroupTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ GroupTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberSignature Language="F#" Value="member this.GroupTemplate : System.Web.UI.ITemplate with get, set" Usage="System.Web.UI.WebControls.ListView.GroupTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(null)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(null)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.ListViewItem))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.ListViewItem))&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置 <see cref="T:System.Web.UI.WebControls.ListView" /> 控件中的组容器的用户定义内容。</summary>
        <value>一个对象，包含 <see cref="T:System.Web.UI.WebControls.ListView" /> 控件中的组容器的自定义内容。 默认值为 <see langword="null" />，指示未设置此属性。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 使用 <xref:System.Web.UI.WebControls.ListView.GroupTemplate%2A> 属性可在控件中创建平铺布局 <xref:System.Web.UI.WebControls.ListView> 。 在平铺表布局中，项在行中水平重复。 项重复的次数由 <xref:System.Web.UI.WebControls.ListView.GroupItemCount%2A> 属性指定。

 若要以声明方式为组容器指定模板，请在 `GroupTemplate` 控件内添加一个元素 <xref:System.Web.UI.WebControls.ListView> 。 然后，可以将模板的内容添加到 `GroupTemplate` 元素。

 <xref:System.Web.UI.WebControls.ListView.GroupTemplate%2A>属性必须包含数据项的占位符，如 (`td`) 、或元素的表单元 `div` `span` 。 此占位符必须将 `runat` 属性设置为 "server"，并将 `ID` 属性设置为属性的值 <xref:System.Web.UI.WebControls.ListView.ItemPlaceholderID%2A> 。 在运行时， <xref:System.Web.UI.WebControls.ListView> 控件将占位符替换为和模板中为每一项定义的内容 <xref:System.Web.UI.WebControls.ListView.ItemTemplate%2A> <xref:System.Web.UI.WebControls.ListView.AlternatingItemTemplate%2A> 。



## Examples
 下面的示例演示如何使用属性在控件中创建平铺布局 <xref:System.Web.UI.WebControls.ListView> <xref:System.Web.UI.WebControls.ListView.GroupTemplate%2A> 。

 [!code-aspx-csharp[System.Web.UI.WebControls.ListView.GroupTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.GroupTemplate/CS/ListViewGroupTemplateCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ListView.GroupTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.GroupTemplate/VB/ListViewGroupTemplateVB.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ListView.GroupItemCount" />
        <altmember cref="P:System.Web.UI.WebControls.ListView.GroupSeparatorTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.ListView.ItemSeparatorTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.ListView.ItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.ListView.LayoutTemplate" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/bb398790(v=vs.100)">ListView Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="Height">
      <MemberSignature Language="C#" Value="public override System.Web.UI.WebControls.Unit Height { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.Unit Height" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.Height" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Height As Unit" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::Unit Height { System::Web::UI::WebControls::Unit get(); void set(System::Web::UI::WebControls::Unit value); };" />
      <MemberSignature Language="F#" Value="member this.Height : System.Web.UI.WebControls.Unit with get, set" Usage="System.Web.UI.WebControls.ListView.Height" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Unit</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>重写 <see cref="P:System.Web.UI.WebControls.WebControl.Height" /> 属性。 <see cref="T:System.Web.UI.WebControls.ListView" /> 控件不支持设置此属性。</summary>
        <value><see cref="F:System.Web.UI.WebControls.Unit.Empty" />，表示该属性未设置。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 控件不支持样式属性 <xref:System.Web.UI.WebControls.ListView> 。 如果尝试设置该 <xref:System.Web.UI.WebControls.ListView.Height%2A> 属性，则 <xref:System.NotSupportedException> 会引发异常。 如果获得属性，它将返回基类的相应属性的默认值。

 若要为 <xref:System.Web.UI.WebControls.ListView> 控件的样式，必须 <xref:System.Web.UI.WebControls.ListView> 使用级联样式表 (CSS) 类或内联样式元素来为模板内的控件制定样式。

 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">已尝试设置 <see cref="P:System.Web.UI.WebControls.ListView.Height" /> 属性。</exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/bb398790(v=vs.100)">ListView Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="InsertItem">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.ListViewItem InsertItem { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ListViewItem InsertItem" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.InsertItem" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property InsertItem As ListViewItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::ListViewItem ^ InsertItem { System::Web::UI::WebControls::ListViewItem ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InsertItem : System.Web.UI.WebControls.ListViewItem" Usage="System.Web.UI.WebControls.ListView.InsertItem" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ListViewItem</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取 <see cref="T:System.Web.UI.WebControls.ListView" /> 控件的插入项。</summary>
        <value>一个对象，表示 <see cref="T:System.Web.UI.WebControls.ListView" /> 控件的插入项。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 使用 <xref:System.Web.UI.WebControls.ListView.InsertItem%2A> 属性访问控件的插入项 <xref:System.Web.UI.WebControls.ListView> 。 Insert 项是一个 <xref:System.Web.UI.WebControls.ListViewItem> 对象，其 <xref:System.Web.UI.WebControls.ListViewItem.ItemType%2A> 等于 <xref:System.Web.UI.WebControls.ListViewItemType.InsertItem?displayProperty=nameWithType> 。 插入项的内容由 <xref:System.Web.UI.WebControls.ListView.InsertItemTemplate%2A> 属性定义。



## Examples
 下面的示例演示如何通过使用 <xref:System.Web.UI.WebControls.ListView.InsertItem%2A> 属性访问模板中包含的控件来获取插入项 <xref:System.Web.UI.WebControls.ListView.InsertItemTemplate%2A> 。

> [!IMPORTANT]
>  此示例包含接受用户输入的文本框，这是一个潜在的安全威胁。 默认情况下，ASP.NET 网页验证用户输入是否不包含脚本或 HTML 元素。 有关详细信息，请参阅[脚本侵入概述](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100))。

 [!code-aspx-csharp[System.Web.UI.WebControls.ListView.InsertItem#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.InsertItem/CS/ListViewInsertItemCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ListView.InsertItem#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.InsertItem/VB/ListViewInsertItemVB.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ListView.InsertItemPosition" />
        <altmember cref="P:System.Web.UI.WebControls.ListView.InsertItemTemplate" />
        <altmember cref="T:System.Web.UI.WebControls.ListViewItem" />
        <altmember cref="P:System.Web.UI.WebControls.ListViewItem.ItemType" />
        <altmember cref="T:System.Web.UI.WebControls.ListViewItemType" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/bb398790(v=vs.100)">ListView Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="InsertItemPosition">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.InsertItemPosition InsertItemPosition { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.InsertItemPosition InsertItemPosition" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.InsertItemPosition" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property InsertItemPosition As InsertItemPosition" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::InsertItemPosition InsertItemPosition { System::Web::UI::WebControls::InsertItemPosition get(); void set(System::Web::UI::WebControls::InsertItemPosition value); };" />
      <MemberSignature Language="F#" Value="member this.InsertItemPosition : System.Web.UI.WebControls.InsertItemPosition with get, set" Usage="System.Web.UI.WebControls.ListView.InsertItemPosition" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Category("Default")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Category("Default")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.InsertItemPosition</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置 <see cref="P:System.Web.UI.WebControls.ListView.InsertItemTemplate" /> 模板在作为 <see cref="T:System.Web.UI.WebControls.ListView" /> 控件的一部分呈现时的位置。</summary>
        <value><see cref="T:System.Web.UI.WebControls.InsertItemPosition" /> 值之一。 默认值为 <see cref="F:System.Web.UI.WebControls.InsertItemPosition.None" />，表示 <see cref="P:System.Web.UI.WebControls.ListView.InsertItemTemplate" /> 控件将不呈现 <see cref="T:System.Web.UI.WebControls.ListView" /> 内容。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 下表列出了可用的项位置值。

|行类型|说明|
|--------------|-----------------|
|<xref:System.Web.UI.WebControls.InsertItemPosition.FirstItem?displayProperty=nameWithType>|将 <xref:System.Web.UI.WebControls.ListView.InsertItemTemplate%2A> 模板呈现为控件中的第一项 <xref:System.Web.UI.WebControls.ListView> 。|
|<xref:System.Web.UI.WebControls.InsertItemPosition.LastItem?displayProperty=nameWithType>|将 <xref:System.Web.UI.WebControls.ListView.InsertItemTemplate%2A> 模板呈现为控件中的最后一项 <xref:System.Web.UI.WebControls.ListView> 。|
|<xref:System.Web.UI.WebControls.InsertItemPosition.None?displayProperty=nameWithType>|不呈现 <xref:System.Web.UI.WebControls.ListView.InsertItemTemplate%2A> 模板。|



## Examples
 下面的示例演示如何配置 <xref:System.Web.UI.WebControls.ListView> 控件以显示 <xref:System.Web.UI.WebControls.ListView.InsertItemTemplate%2A> 模板。 此代码示例是为事件提供的更大示例的一部分 <xref:System.Web.UI.WebControls.ListView.ItemInserted> 。

> [!IMPORTANT]
>  此示例具有一个接受用户输入的文本框，这是一个潜在的安全威胁。 默认情况下，ASP.NET 网页验证用户输入是否不包含脚本或 HTML 元素。 有关详细信息，请参阅[脚本侵入概述](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100))。

 [!code-aspx-csharp[System.Web.UI.WebControls.ListView.ItemInserted#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.ItemInserted/CS/ListViewItemInsertedCS.aspx#2)]
 [!code-aspx-vb[System.Web.UI.WebControls.ListView.ItemInserted#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.ItemInserted/VB/ListViewItemInsertedVB.aspx#2)]

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ListView.InsertItem" />
        <altmember cref="P:System.Web.UI.WebControls.ListView.InsertItemTemplate" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/bb398790(v=vs.100)">ListView Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="InsertItemTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate InsertItemTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate InsertItemTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.InsertItemTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property InsertItemTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ InsertItemTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberSignature Language="F#" Value="member this.InsertItemTemplate : System.Web.UI.ITemplate with get, set" Usage="System.Web.UI.WebControls.ListView.InsertItemTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(null)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(null)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.ListViewItem), System.ComponentModel.BindingDirection.TwoWay)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.ListViewItem), System.ComponentModel.BindingDirection.TwoWay)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置 <see cref="T:System.Web.UI.WebControls.ListView" /> 控件中的插入项的自定义内容。</summary>
        <value>一个对象，包含 <see cref="T:System.Web.UI.WebControls.ListView" /> 控件中的插入项的自定义内容。 默认值为 <see langword="null" />，指示未设置此属性。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 使用 <xref:System.Web.UI.WebControls.ListView.InsertItemTemplate%2A> 属性可为控件中的 "插入" 项定义 (UI) 的自定义用户界面 <xref:System.Web.UI.WebControls.ListView> 。 此 UI 呈现在所显示项的开头或结尾。 通过使用属性，指定呈现 UI 的位置 <xref:System.Web.UI.WebControls.ListView.InsertItemPosition%2A> 。

 该 <xref:System.Web.UI.WebControls.ListView.InsertItemTemplate%2A> 模板通常包含输入控件，用户可在其中输入新记录的值。 它通常还包含用于插入记录和取消插入操作的按钮或超链接。

 若要以声明的方式指定自定义模板，请在 `InsertItemTemplate` 元素中添加一个元素 `ListView` 。 然后，可以将模板的内容添加到 `InsertItemTemplate` 元素。 您可以通过使用双向绑定表达式将字段与输入控件相关联。 插入记录后， <xref:System.Web.UI.WebControls.ListView> 控件将自动从关联的输入控件提取字段值。 有关详细信息，请参阅 [数据绑定表达式概述](https://docs.microsoft.com/previous-versions/aspnet/ms178366(v=vs.100))。

 若要创建执行内置取消和插入操作的按钮，请向模板添加一个按钮控件。 将其 <xref:System.Web.UI.WebControls.Button.CommandName%2A> 属性设置为下表中列出的值之一。

|按钮类型|CommandName 值|
|-----------------|-----------------------|
|取消|退出|
|插入|&|

 您可以使用属性控制插入项在控件中的位置 <xref:System.Web.UI.WebControls.ListView> <xref:System.Web.UI.WebControls.ListView.InsertItemPosition%2A> 。



## Examples
 下面的示例演示如何为控件的插入项定义自定义模板 <xref:System.Web.UI.WebControls.ListView> 。 此代码示例是为事件提供的更大示例的一部分 <xref:System.Web.UI.WebControls.ListView.ItemInserted> 。

> [!IMPORTANT]
>  此示例具有一个接受用户输入的文本框，这是一个潜在的安全威胁。 默认情况下，ASP.NET 网页验证用户输入是否不包含脚本或 HTML 元素。 有关详细信息，请参阅[脚本侵入概述](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100))。

 [!code-aspx-csharp[System.Web.UI.WebControls.ListView.ItemInserted#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.ItemInserted/CS/ListViewItemInsertedCS.aspx#2)]
 [!code-aspx-vb[System.Web.UI.WebControls.ListView.ItemInserted#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.ItemInserted/VB/ListViewItemInsertedVB.aspx#2)]

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ListView.InsertItem" />
        <altmember cref="P:System.Web.UI.WebControls.ListView.InsertItemPosition" />
        <altmember cref="P:System.Web.UI.WebControls.ListView.ItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.ListView.LayoutTemplate" />
        <altmember cref="E:System.Web.UI.WebControls.ListView.ItemInserted" />
        <altmember cref="E:System.Web.UI.WebControls.ListView.ItemInserting" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/bb398790(v=vs.100)">ListView Web 服务器控件</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms178366(v=vs.100)">数据绑定表达式语法</related>
      </Docs>
    </Member>
    <Member MemberName="InsertMethod">
      <MemberSignature Language="C#" Value="public virtual string InsertMethod { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string InsertMethod" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.InsertMethod" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property InsertMethod As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ InsertMethod { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.InsertMethod : string with get, set" Usage="System.Web.UI.WebControls.ListView.InsertMethod" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue("")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue("")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Web.UI.Themeable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.Themeable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Web.WebCategory("Data")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.WebCategory("Data")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Web.WebSysDescription("DataBoundControl_InsertMethod")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.WebSysDescription("DataBoundControl_InsertMethod")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置为了插入数据要调用的方法的名称。</summary>
        <value>方法的名称。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 设置此属性将导致模型绑定用作数据绑定方法。

 有关如何在 Web 窗体中使用模型绑定的教程系列，请参阅 [模型绑定和 Web 窗体](/aspnet/web-forms/overview/presenting-and-managing-data/model-binding/retrieving-data)。

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertNewItem">
      <MemberSignature Language="C#" Value="public virtual void InsertNewItem (bool causesValidation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InsertNewItem(bool causesValidation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.InsertNewItem(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub InsertNewItem (causesValidation As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void InsertNewItem(bool causesValidation);" />
      <MemberSignature Language="F#" Value="abstract member InsertNewItem : bool -&gt; unit&#xA;override this.InsertNewItem : bool -&gt; unit" Usage="listView.InsertNewItem causesValidation" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="causesValidation" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="causesValidation"><see langword="true" /> 表示在调用此方法时执行页面验证；否则为 <see langword="false" />。</param>
        <summary>将当前记录插入到数据源中。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 使用 <xref:System.Web.UI.WebControls.ListView.InsertNewItem%2A> 方法以编程方式在数据源中插入项。 此方法通常用于从控件之外插入项 <xref:System.Web.UI.WebControls.ListView> ，如页上的其他控件。

 若要使用 <xref:System.Web.UI.WebControls.ListView.InsertNewItem%2A> 方法，必须 <xref:System.Web.UI.WebControls.ListView.InsertItemTemplate%2A> 在控件中定义模板 <xref:System.Web.UI.WebControls.ListView> 。 还必须将属性设置 <xref:System.Web.UI.WebControls.ListView.InsertItemPosition%2A> 为不同于的值 <xref:System.Web.UI.WebControls.InsertItemPosition.None?displayProperty=nameWithType> 。 若要指定在插入操作之前是否执行页验证，请使用 `causesValidation` 参数。

 此方法引发 <xref:System.Web.UI.WebControls.ListView.ItemInserted> 和 <xref:System.Web.UI.WebControls.ListView.ItemInserting> 事件。



## Examples
 下面的示例演示如何使用 <xref:System.Web.UI.WebControls.ListView.InsertNewItem%2A> 方法以编程方式将控件的插入项的内容插入 <xref:System.Web.UI.WebControls.ListView> 到数据源中。

> [!IMPORTANT]
>  此示例具有一个接受用户输入的文本框，这是一个潜在的安全威胁。 默认情况下，ASP.NET 网页验证用户输入是否不包含脚本或 HTML 元素。 有关详细信息，请参阅[脚本侵入概述](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100))。

 [!code-aspx-csharp[System.Web.UI.WebControls.ListView.InsertNewItem#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.InsertNewItem/CS/ListViewInsertNewItemCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ListView.InsertNewItem#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.InsertNewItem/VB/ListViewInsertNewItemVB.aspx#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="T:System.Web.UI.WebControls.ListView" /> 控件没有插入项。

- 或 -

与 <see cref="T:System.Web.UI.DataSourceView" /> 控件相关联的 <see cref="T:System.Web.UI.WebControls.ListView" /> 对象为 <see langword="null" />。</exception>
        <altmember cref="P:System.Web.UI.WebControls.ListView.InsertItem" />
        <altmember cref="P:System.Web.UI.WebControls.ListView.InsertItemPosition" />
        <altmember cref="P:System.Web.UI.WebControls.ListView.InsertItemTemplate" />
        <altmember cref="E:System.Web.UI.WebControls.ListView.ItemInserted" />
        <altmember cref="E:System.Web.UI.WebControls.ListView.ItemInserting" />
        <altmember cref="M:System.Web.UI.WebControls.ListView.DeleteItem(System.Int32)" />
        <altmember cref="M:System.Web.UI.WebControls.ListView.UpdateItem(System.Int32,System.Boolean)" />
        <altmember cref="T:System.Web.UI.WebControls.InsertItemPosition" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/bb398790(v=vs.100)">ListView Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="InstantiateEmptyDataTemplate">
      <MemberSignature Language="C#" Value="protected virtual void InstantiateEmptyDataTemplate (System.Web.UI.Control container);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void InstantiateEmptyDataTemplate(class System.Web.UI.Control container) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.InstantiateEmptyDataTemplate(System.Web.UI.Control)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub InstantiateEmptyDataTemplate (container As Control)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void InstantiateEmptyDataTemplate(System::Web::UI::Control ^ container);" />
      <MemberSignature Language="F#" Value="abstract member InstantiateEmptyDataTemplate : System.Web.UI.Control -&gt; unit&#xA;override this.InstantiateEmptyDataTemplate : System.Web.UI.Control -&gt; unit" Usage="listView.InstantiateEmptyDataTemplate container" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="container" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="container">一个容器，用于存储 <see cref="P:System.Web.UI.WebControls.ListView.EmptyDataTemplate" /> 模板中的子控件。</param>
        <summary>通过使用 <see cref="T:System.Web.UI.Control" /> 模板中包含的子控件，填充指定的 <see cref="P:System.Web.UI.WebControls.ListView.EmptyDataTemplate" /> 对象。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 此方法用于 <xref:System.Web.UI.Control> 通过使用模板中包含的子控件填充指定的对象 <xref:System.Web.UI.WebControls.ListView.EmptyDataTemplate%2A> 。

> [!NOTE]
>  此方法主要由控件开发人员用来扩展 <xref:System.Web.UI.WebControls.ListView> 控件。

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ListView.EmptyDataTemplate" />
        <altmember cref="M:System.Web.UI.ITemplate.InstantiateIn(System.Web.UI.Control)" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/bb398790(v=vs.100)">ListView Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="InstantiateEmptyItemTemplate">
      <MemberSignature Language="C#" Value="protected virtual void InstantiateEmptyItemTemplate (System.Web.UI.Control container);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void InstantiateEmptyItemTemplate(class System.Web.UI.Control container) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.InstantiateEmptyItemTemplate(System.Web.UI.Control)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub InstantiateEmptyItemTemplate (container As Control)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void InstantiateEmptyItemTemplate(System::Web::UI::Control ^ container);" />
      <MemberSignature Language="F#" Value="abstract member InstantiateEmptyItemTemplate : System.Web.UI.Control -&gt; unit&#xA;override this.InstantiateEmptyItemTemplate : System.Web.UI.Control -&gt; unit" Usage="listView.InstantiateEmptyItemTemplate container" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="container" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="container">一个容器，用于存储 <see cref="P:System.Web.UI.WebControls.ListView.EmptyItemTemplate" /> 模板中的子控件。</param>
        <summary>通过使用 <see cref="T:System.Web.UI.Control" /> 模板中包含的子控件，填充指定的 <see cref="P:System.Web.UI.WebControls.ListView.EmptyItemTemplate" /> 对象。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 此方法用于 <xref:System.Web.UI.Control> 通过使用模板中包含的子控件来填充对象 <xref:System.Web.UI.WebControls.ListView.EmptyItemTemplate%2A> 。

> [!NOTE]
>  此方法主要由控件开发人员用来扩展 <xref:System.Web.UI.WebControls.ListView> 控件。

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ListView.EmptyItemTemplate" />
        <altmember cref="M:System.Web.UI.ITemplate.InstantiateIn(System.Web.UI.Control)" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/bb398790(v=vs.100)">ListView Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="InstantiateGroupSeparatorTemplate">
      <MemberSignature Language="C#" Value="protected virtual void InstantiateGroupSeparatorTemplate (System.Web.UI.Control container);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void InstantiateGroupSeparatorTemplate(class System.Web.UI.Control container) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.InstantiateGroupSeparatorTemplate(System.Web.UI.Control)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub InstantiateGroupSeparatorTemplate (container As Control)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void InstantiateGroupSeparatorTemplate(System::Web::UI::Control ^ container);" />
      <MemberSignature Language="F#" Value="abstract member InstantiateGroupSeparatorTemplate : System.Web.UI.Control -&gt; unit&#xA;override this.InstantiateGroupSeparatorTemplate : System.Web.UI.Control -&gt; unit" Usage="listView.InstantiateGroupSeparatorTemplate container" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="container" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="container">一个容器，用于存储 <see cref="P:System.Web.UI.WebControls.ListView.GroupSeparatorTemplate" /> 模板中的子控件。</param>
        <summary>通过使用 <see cref="T:System.Web.UI.Control" /> 模板中包含的子控件，填充指定的 <see cref="P:System.Web.UI.WebControls.ListView.GroupSeparatorTemplate" /> 对象。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 此方法主要由控件开发人员用来扩展 <xref:System.Web.UI.WebControls.ListView> 控件。

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ListView.GroupSeparatorTemplate" />
        <altmember cref="M:System.Web.UI.ITemplate.InstantiateIn(System.Web.UI.Control)" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/bb398790(v=vs.100)">ListView Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="InstantiateGroupTemplate">
      <MemberSignature Language="C#" Value="protected virtual void InstantiateGroupTemplate (System.Web.UI.Control container);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void InstantiateGroupTemplate(class System.Web.UI.Control container) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.InstantiateGroupTemplate(System.Web.UI.Control)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub InstantiateGroupTemplate (container As Control)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void InstantiateGroupTemplate(System::Web::UI::Control ^ container);" />
      <MemberSignature Language="F#" Value="abstract member InstantiateGroupTemplate : System.Web.UI.Control -&gt; unit&#xA;override this.InstantiateGroupTemplate : System.Web.UI.Control -&gt; unit" Usage="listView.InstantiateGroupTemplate container" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="container" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="container">一个容器，用于存储 <see cref="P:System.Web.UI.WebControls.ListView.GroupTemplate" /> 模板中的子控件。</param>
        <summary>通过使用 <see cref="T:System.Web.UI.Control" /> 模板中包含的子控件，填充指定的 <see cref="P:System.Web.UI.WebControls.ListView.GroupTemplate" /> 对象。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 此方法主要由控件开发人员用来扩展 <xref:System.Web.UI.WebControls.ListView> 控件。

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ListView.GroupSeparatorTemplate" />
        <altmember cref="M:System.Web.UI.ITemplate.InstantiateIn(System.Web.UI.Control)" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/bb398790(v=vs.100)">ListView Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="InstantiateInsertItemTemplate">
      <MemberSignature Language="C#" Value="protected virtual void InstantiateInsertItemTemplate (System.Web.UI.Control container);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void InstantiateInsertItemTemplate(class System.Web.UI.Control container) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.InstantiateInsertItemTemplate(System.Web.UI.Control)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub InstantiateInsertItemTemplate (container As Control)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void InstantiateInsertItemTemplate(System::Web::UI::Control ^ container);" />
      <MemberSignature Language="F#" Value="abstract member InstantiateInsertItemTemplate : System.Web.UI.Control -&gt; unit&#xA;override this.InstantiateInsertItemTemplate : System.Web.UI.Control -&gt; unit" Usage="listView.InstantiateInsertItemTemplate container" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="container" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="container">一个容器，用于存储 <see cref="P:System.Web.UI.WebControls.ListView.InsertItemTemplate" /> 模板中的子控件。</param>
        <summary>通过使用 <see cref="T:System.Web.UI.Control" /> 模板中包含的子控件，填充指定的 <see cref="P:System.Web.UI.WebControls.ListView.InsertItemTemplate" /> 对象。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 此方法主要由控件开发人员用来扩展 <xref:System.Web.UI.WebControls.ListView> 控件。

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ListView.InsertItemTemplate" />
        <altmember cref="M:System.Web.UI.ITemplate.InstantiateIn(System.Web.UI.Control)" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/bb398790(v=vs.100)">ListView Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="InstantiateItemSeparatorTemplate">
      <MemberSignature Language="C#" Value="protected virtual void InstantiateItemSeparatorTemplate (System.Web.UI.Control container);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void InstantiateItemSeparatorTemplate(class System.Web.UI.Control container) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.InstantiateItemSeparatorTemplate(System.Web.UI.Control)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub InstantiateItemSeparatorTemplate (container As Control)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void InstantiateItemSeparatorTemplate(System::Web::UI::Control ^ container);" />
      <MemberSignature Language="F#" Value="abstract member InstantiateItemSeparatorTemplate : System.Web.UI.Control -&gt; unit&#xA;override this.InstantiateItemSeparatorTemplate : System.Web.UI.Control -&gt; unit" Usage="listView.InstantiateItemSeparatorTemplate container" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="container" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="container">一个容器，用于存储 <see cref="P:System.Web.UI.WebControls.ListView.ItemSeparatorTemplate" /> 模板中的子控件。</param>
        <summary>通过使用 <see cref="T:System.Web.UI.Control" /> 模板中包含的子控件，填充指定的 <see cref="P:System.Web.UI.WebControls.ListView.ItemSeparatorTemplate" /> 对象。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 此方法主要由控件开发人员用来扩展 <xref:System.Web.UI.WebControls.ListView> 控件。

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ListView.ItemSeparatorTemplate" />
        <altmember cref="M:System.Web.UI.ITemplate.InstantiateIn(System.Web.UI.Control)" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/bb398790(v=vs.100)">ListView Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="InstantiateItemTemplate">
      <MemberSignature Language="C#" Value="protected virtual void InstantiateItemTemplate (System.Web.UI.Control container, int displayIndex);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void InstantiateItemTemplate(class System.Web.UI.Control container, int32 displayIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.InstantiateItemTemplate(System.Web.UI.Control,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub InstantiateItemTemplate (container As Control, displayIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void InstantiateItemTemplate(System::Web::UI::Control ^ container, int displayIndex);" />
      <MemberSignature Language="F#" Value="abstract member InstantiateItemTemplate : System.Web.UI.Control * int -&gt; unit&#xA;override this.InstantiateItemTemplate : System.Web.UI.Control * int -&gt; unit" Usage="listView.InstantiateItemTemplate (container, displayIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="container" Type="System.Web.UI.Control" />
        <Parameter Name="displayIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="container">用于存储子控件的容器。</param>
        <param name="displayIndex">要实例化的项的显示索引。</param>
        <summary>通过使用其中一个 <see cref="T:System.Web.UI.Control" /> 控件模板的子控件，填充指定的 <see cref="T:System.Web.UI.WebControls.ListView" /> 对象。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 此方法使用不同的模板，具体取决于要实例化的项的模式和控件的设置 <xref:System.Web.UI.WebControls.ListView> 。 <xref:System.Web.UI.WebControls.ListView.InstantiateItemTemplate%2A>方法使用以下模板之一来填充容器：

-   <xref:System.Web.UI.WebControls.ListView.ItemTemplate%2A>

-   <xref:System.Web.UI.WebControls.ListView.AlternatingItemTemplate%2A>

-   <xref:System.Web.UI.WebControls.ListView.SelectedItemTemplate%2A>

-   <xref:System.Web.UI.WebControls.ListView.EditItemTemplate%2A>

    > [!NOTE]
    >  此方法主要由控件开发人员用来扩展 <xref:System.Web.UI.WebControls.ListView> 控件。

 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="T:System.Web.UI.WebControls.ListView" /> 控件没有指定 <see cref="P:System.Web.UI.WebControls.ListView.ItemTemplate" /> 模板。</exception>
        <altmember cref="P:System.Web.UI.WebControls.ListView.ItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.ListView.AlternatingItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.ListView.SelectedItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.ListView.EditItemTemplate" />
        <altmember cref="M:System.Web.UI.ITemplate.InstantiateIn(System.Web.UI.Control)" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/bb398790(v=vs.100)">ListView Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="IsUsingModelBinders">
      <MemberSignature Language="C#" Value="protected override bool IsUsingModelBinders { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsUsingModelBinders" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.IsUsingModelBinders" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property IsUsingModelBinders As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property bool IsUsingModelBinders { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsUsingModelBinders : bool" Usage="System.Web.UI.WebControls.ListView.IsUsingModelBinders" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个值，该值指示是否使用模型绑定。</summary>
        <value>如果正在使用模型绑定，则为 <see langword="true" />；否则为 <see langword="false" />。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemCanceling">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Web.UI.WebControls.ListViewCancelEventArgs&gt; ItemCanceling;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Web.UI.WebControls.ListViewCancelEventArgs&gt; ItemCanceling" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ListView.ItemCanceling" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ItemCanceling As EventHandler(Of ListViewCancelEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Web::UI::WebControls::ListViewCancelEventArgs ^&gt; ^ ItemCanceling;" />
      <MemberSignature Language="F#" Value="member this.ItemCanceling : EventHandler&lt;System.Web.UI.WebControls.ListViewCancelEventArgs&gt; " Usage="member this.ItemCanceling : System.EventHandler&lt;System.Web.UI.WebControls.ListViewCancelEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Category("Action")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Category("Action")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Web.UI.WebControls.ListViewCancelEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>在请求取消操作之后、<see cref="T:System.Web.UI.WebControls.ListView" /> 控件取消插入或编辑操作之前发生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.ListView> <xref:System.Web.UI.WebControls.ListView.ItemCanceling> 当单击或模板中的 "取消" 按钮时 <xref:System.Web.UI.WebControls.ListView.InsertItemTemplate%2A> <xref:System.Web.UI.WebControls.ListView.EditItemTemplate%2A> ，但在 <xref:System.Web.UI.WebControls.ListView> 控件取消插入或编辑操作之前，控件引发事件。  ("取消" 按钮是一个按钮控件，其 <xref:System.Web.UI.WebControls.Button.CommandName%2A> 属性设置为 "取消"。 ) 这使您可以在每次发生此事件时执行自定义例程，如在将项目置于不需要的状态时停止取消操作。

 <xref:System.Web.UI.WebControls.ListViewCancelEventArgs>对象传递到事件处理程序，使您可以确定项的索引。 它还使你能够指示应停止取消操作。 若要停止操作，请将 <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> 对象的属性设置 <xref:System.Web.UI.WebControls.ListViewCancelEventArgs> 为 `true` 。

 有关如何处理事件的详细信息，请参阅 [处理和引发事件](/dotnet/standard/events/)。



## Examples
 下面的示例演示如何创建 <xref:System.Web.UI.WebControls.ListView.ItemCanceling> 事件处理程序。

> [!IMPORTANT]
>  此示例包含接受用户输入的文本框，这是一个潜在的安全威胁。 默认情况下，ASP.NET 网页验证用户输入是否不包含脚本或 HTML 元素。 有关详细信息，请参阅[脚本侵入概述](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100))。

 [!code-aspx-csharp[System.Web.UI.WebControls.ListView.ItemCanceling#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.ItemCanceling/CS/ListViewItemCancelingCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ListView.ItemCanceling#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.ItemCanceling/VB/ListViewItemCancelingVB.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.ListViewCancelEventArgs" />
        <altmember cref="M:System.Web.UI.WebControls.ListView.OnItemCanceling(System.Web.UI.WebControls.ListViewCancelEventArgs)" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/bb398790(v=vs.100)">ListView Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="ItemCommand">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Web.UI.WebControls.ListViewCommandEventArgs&gt; ItemCommand;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Web.UI.WebControls.ListViewCommandEventArgs&gt; ItemCommand" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ListView.ItemCommand" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ItemCommand As EventHandler(Of ListViewCommandEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Web::UI::WebControls::ListViewCommandEventArgs ^&gt; ^ ItemCommand;" />
      <MemberSignature Language="F#" Value="member this.ItemCommand : EventHandler&lt;System.Web.UI.WebControls.ListViewCommandEventArgs&gt; " Usage="member this.ItemCommand : System.EventHandler&lt;System.Web.UI.WebControls.ListViewCommandEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Category("Action")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Category("Action")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Web.UI.WebControls.ListViewCommandEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>当单击 <see cref="T:System.Web.UI.WebControls.ListView" /> 控件中的按钮时发生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.ListView.ItemCommand>单击控件中的按钮时，将引发事件 <xref:System.Web.UI.WebControls.ListView> 。 这使您可以在每次发生此事件时执行自定义例程。

 控件中的按钮 <xref:System.Web.UI.WebControls.ListView> 还可以调用控件的内置功能。 下表列出了可与按钮的属性一起使用的值，以便 <xref:System.Web.UI.WebControls.Button.CommandName%2A> 调用内置功能。

|CommandName 值|说明|
|-----------------------|-----------------|
|退出|取消编辑或插入操作。 引发 <xref:System.Web.UI.WebControls.ListView.ItemCanceling> 事件。|
|“Delete”|从数据源中删除当前记录。 引发 <xref:System.Web.UI.WebControls.ListView.ItemDeleted> 和 <xref:System.Web.UI.WebControls.ListView.ItemDeleting> 事件。|
|“选择”|将 <xref:System.Web.UI.WebControls.ListView.SelectedIndex%2A> 属性设置为 <xref:System.Web.UI.WebControls.ListViewDataItem.DisplayIndex%2A> 项的属性值。 呈现 <xref:System.Web.UI.WebControls.ListView.SelectedItemTemplate%2A> 项的模板。 引发 <xref:System.Web.UI.WebControls.ListView.SelectedIndexChanging> 和 <xref:System.Web.UI.WebControls.ListView.SelectedIndexChanged> 事件。|
|编辑|将项置于编辑模式。 呈现 <xref:System.Web.UI.WebControls.ListView.EditItemTemplate%2A> 项的模板。 引发 <xref:System.Web.UI.WebControls.ListView.ItemEditing> 事件。|
|&|将模板中的绑定值插入 <xref:System.Web.UI.WebControls.ListView.InsertItemTemplate%2A> 到数据源中。 引发 <xref:System.Web.UI.WebControls.ListView.ItemInserting> 和 <xref:System.Web.UI.WebControls.ListView.ItemInserted> 事件。|
|时更新|用模板中的绑定值更新数据源中的当前记录 <xref:System.Web.UI.WebControls.ListView.EditItemTemplate%2A> 。 引发 <xref:System.Web.UI.WebControls.ListView.ItemUpdating> 和 <xref:System.Web.UI.WebControls.ListView.ItemUpdated> 事件。|
|进行|对按钮的属性中列出的列进行排序 `CommandArgument` 。 引发 <xref:System.Web.UI.WebControls.ListView.Sorting> 和 <xref:System.Web.UI.WebControls.ListView.Sorted> 事件。|

 <xref:System.Web.UI.WebControls.ListView.ItemCommand>当单击上表中列出的按钮时，也会引发该事件。 但建议使用表中列出的事件。 此 <xref:System.Web.UI.WebControls.ListView.ItemCommand> 事件通常用于处理自定义操作。

 <xref:System.Web.UI.WebControls.ListViewCommandEventArgs>对象将传递到事件处理程序，这使您能够确定所单击的按钮的命令名称和命令参数。 若要确定命令名称，请使用 <xref:System.Web.UI.WebControls.CommandEventArgs.CommandName%2A?displayProperty=nameWithType> 属性。 若要确定命令参数，请使用 <xref:System.Web.UI.WebControls.CommandEventArgs.CommandArgument%2A?displayProperty=nameWithType> 属性。 若要访问引发事件的控件，请使用 <xref:System.Web.UI.WebControls.ListViewCommandEventArgs.CommandSource%2A?displayProperty=nameWithType> 属性。

 有关如何处理事件的详细信息，请参阅 [处理和引发事件](/dotnet/standard/events/)。



## Examples
 下面的示例演示如何创建 <xref:System.Web.UI.WebControls.ListView.ItemCommand> 事件处理程序。

 [!code-aspx-csharp[System.Web.UI.WebControls.ListViewItemCommand#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListViewItemCommand/CS/ListViewItemCommandCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ListViewItemCommand#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListViewItemCommand/VB/ListViewItemCommandVB.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.ListViewCommandEventArgs" />
        <altmember cref="P:System.Web.UI.WebControls.CommandEventArgs.CommandName" />
        <altmember cref="P:System.Web.UI.WebControls.CommandEventArgs.CommandArgument" />
        <altmember cref="P:System.Web.UI.WebControls.ListViewCommandEventArgs.CommandSource" />
        <altmember cref="M:System.Web.UI.WebControls.ListView.OnItemCommand(System.Web.UI.WebControls.ListViewCommandEventArgs)" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/bb398790(v=vs.100)">ListView Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="ItemCreated">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Web.UI.WebControls.ListViewItemEventArgs&gt; ItemCreated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Web.UI.WebControls.ListViewItemEventArgs&gt; ItemCreated" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ListView.ItemCreated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ItemCreated As EventHandler(Of ListViewItemEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Web::UI::WebControls::ListViewItemEventArgs ^&gt; ^ ItemCreated;" />
      <MemberSignature Language="F#" Value="member this.ItemCreated : EventHandler&lt;System.Web.UI.WebControls.ListViewItemEventArgs&gt; " Usage="member this.ItemCreated : System.EventHandler&lt;System.Web.UI.WebControls.ListViewItemEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Category("Behavior")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Category("Behavior")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Web.UI.WebControls.ListViewItemEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>在 <see cref="T:System.Web.UI.WebControls.ListView" /> 控件中创建项时发生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 在 <xref:System.Web.UI.WebControls.ListView> 呈现控件之前， <xref:System.Web.UI.WebControls.ListViewItem> 必须为控件中的每一项创建一个对象。 <xref:System.Web.UI.WebControls.ListView.ItemCreated>当创建控件中的每一项时，将引发事件 <xref:System.Web.UI.WebControls.ListView> 。 这使您可以在每次发生此事件时执行自定义例程，例如向项添加自定义内容。

 <xref:System.Web.UI.WebControls.ListViewItemEventArgs>对象传递到事件处理程序，使您能够访问正在创建的项的属性。 若要访问项中的特定控件，请使用 <xref:System.Web.UI.Control.FindControl%2A> <xref:System.Web.UI.WebControls.ListViewItem> 对象的属性中包含的对象的方法 <xref:System.Web.UI.WebControls.ListViewItemEventArgs.Item%2A> <xref:System.Web.UI.WebControls.ListViewItemEventArgs> 。 您可以使用属性确定 (数据项、insert item、empty) 项创建的项类型 <xref:System.Web.UI.WebControls.ListViewItem.ItemType%2A> 。

 有关如何处理事件的详细信息，请参阅 [处理和引发事件](/dotnet/standard/events/)。

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.ListViewItemEventArgs" />
        <altmember cref="M:System.Web.UI.WebControls.ListView.OnItemCreated(System.Web.UI.WebControls.ListViewItemEventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.ListView.ItemDataBound" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/bb398790(v=vs.100)">ListView Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="ItemDataBound">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Web.UI.WebControls.ListViewItemEventArgs&gt; ItemDataBound;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Web.UI.WebControls.ListViewItemEventArgs&gt; ItemDataBound" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ListView.ItemDataBound" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ItemDataBound As EventHandler(Of ListViewItemEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Web::UI::WebControls::ListViewItemEventArgs ^&gt; ^ ItemDataBound;" />
      <MemberSignature Language="F#" Value="member this.ItemDataBound : EventHandler&lt;System.Web.UI.WebControls.ListViewItemEventArgs&gt; " Usage="member this.ItemDataBound : System.EventHandler&lt;System.Web.UI.WebControls.ListViewItemEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Category("Data")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Category("Data")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Web.UI.WebControls.ListViewItemEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>在数据项绑定到 <see cref="T:System.Web.UI.WebControls.ListView" /> 控件中的数据时发生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 在 <xref:System.Web.UI.WebControls.ListView> 呈现控件之前，必须将控件中的每一项绑定到数据源中的记录。 <xref:System.Web.UI.WebControls.ListView.ItemDataBound>当数据项绑定到控件中的数据时，将引发事件 <xref:System.Web.UI.WebControls.ListView> 。  (数据项由 <xref:System.Web.UI.WebControls.ListViewDataItem> 对象表示。 ) 这使您可以在每次发生此事件时执行自定义例程，如修改绑定到项的数据值。

 <xref:System.Web.UI.WebControls.ListViewItemEventArgs>对象传递到事件处理程序，使您可以访问所绑定项的属性。 若要访问项中的特定控件，请使用 <xref:System.Web.UI.Control.FindControl%2A> <xref:System.Web.UI.WebControls.ListViewItem> 对象的属性中包含的对象的方法 <xref:System.Web.UI.WebControls.ListViewItemEventArgs.Item%2A> <xref:System.Web.UI.WebControls.ListViewItemEventArgs> 。 您可以使用属性确定 (数据项、insert item、empty) 的项类型 <xref:System.Web.UI.WebControls.ListViewItem.ItemType%2A> 。

 有关如何处理事件的详细信息，请参阅 [处理和引发事件](/dotnet/standard/events/)。



## Examples
 下面的示例演示如何使用 <xref:System.Web.UI.WebControls.ListView.ItemDataBound> 事件。

 [!code-aspx-csharp[System.Web.UI.WebControls.ListView.ItemDataBound#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.ItemDataBound/CS/ListViewItemDataBoundCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ListView.ItemDataBound#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.ItemDataBound/VB/ListViewItemDataBoundVB.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.ListViewItemEventArgs" />
        <altmember cref="M:System.Web.UI.WebControls.ListView.OnItemDataBound(System.Web.UI.WebControls.ListViewItemEventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.ListView.ItemCreated" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/bb398790(v=vs.100)">ListView Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="ItemDeleted">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Web.UI.WebControls.ListViewDeletedEventArgs&gt; ItemDeleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Web.UI.WebControls.ListViewDeletedEventArgs&gt; ItemDeleted" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ListView.ItemDeleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ItemDeleted As EventHandler(Of ListViewDeletedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Web::UI::WebControls::ListViewDeletedEventArgs ^&gt; ^ ItemDeleted;" />
      <MemberSignature Language="F#" Value="member this.ItemDeleted : EventHandler&lt;System.Web.UI.WebControls.ListViewDeletedEventArgs&gt; " Usage="member this.ItemDeleted : System.EventHandler&lt;System.Web.UI.WebControls.ListViewDeletedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Category("Action")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Category("Action")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Web.UI.WebControls.ListViewDeletedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>在请求删除操作且 <see cref="T:System.Web.UI.WebControls.ListView" /> 控件删除项之后发生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.ListView.ItemDeleted>当单击项的 "删除" 按钮或在 <xref:System.Web.UI.WebControls.ListView.DeleteItem%2A> <xref:System.Web.UI.WebControls.ListView> 控件删除该项后调用方法时，将引发事件。  ("删除" 按钮是其 <xref:System.Web.UI.WebControls.Button.CommandName%2A> 属性设置为 "Delete" 的按钮控件。 ) 这样就可以在每次发生此事件时执行自定义例程，如检查删除操作的结果。

 <xref:System.Web.UI.WebControls.ListViewDeletedEventArgs>对象将传递到事件处理程序，该处理程序使您可以确定数据源中受影响的行数。 它还允许你确定可能发生的异常。 通过将对象的属性设置为，可以指示是否已在事件处理程序中处理异常 <xref:System.Web.UI.WebControls.ListViewDeletedEventArgs.ExceptionHandled%2A> <xref:System.Web.UI.WebControls.ListViewDeletedEventArgs> `true` 。

 有关如何处理事件的详细信息，请参阅 [处理和引发事件](/dotnet/standard/events/)。



## Examples
 下面的示例演示如何为事件添加事件处理程序 <xref:System.Web.UI.WebControls.ListView.ItemDeleted> 。

 [!code-aspx-csharp[System.Web.UI.WebControls.ListViewDeletedEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListViewDeletedEventArgs/CS/ListViewDeletedEventArgsCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ListViewDeletedEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListViewDeletedEventArgs/VB/ListViewDeletedEventArgsVB.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.ListViewDeletedEventArgs" />
        <altmember cref="M:System.Web.UI.WebControls.ListView.OnItemDeleted(System.Web.UI.WebControls.ListViewDeletedEventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.ListView.ItemDeleting" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/bb398790(v=vs.100)">ListView Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="ItemDeleting">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Web.UI.WebControls.ListViewDeleteEventArgs&gt; ItemDeleting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Web.UI.WebControls.ListViewDeleteEventArgs&gt; ItemDeleting" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ListView.ItemDeleting" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ItemDeleting As EventHandler(Of ListViewDeleteEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Web::UI::WebControls::ListViewDeleteEventArgs ^&gt; ^ ItemDeleting;" />
      <MemberSignature Language="F#" Value="member this.ItemDeleting : EventHandler&lt;System.Web.UI.WebControls.ListViewDeleteEventArgs&gt; " Usage="member this.ItemDeleting : System.EventHandler&lt;System.Web.UI.WebControls.ListViewDeleteEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Category("Action")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Category("Action")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Web.UI.WebControls.ListViewDeleteEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>在请求删除操作之后、<see cref="T:System.Web.UI.WebControls.ListView" /> 控件删除项之前发生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.ListView.ItemDeleting>当单击项的 "删除" 按钮或 <xref:System.Web.UI.WebControls.ListView.DeleteItem%2A> 调用方法，但在控件删除项之前，会引发事件 <xref:System.Web.UI.WebControls.ListView> 。  ("删除" 按钮是其 <xref:System.Web.UI.WebControls.Button.CommandName%2A> 属性设置为 "Delete" 的按钮控件。 ) 这样就可以在每次发生此事件时执行自定义例程，如取消删除操作。

 <xref:System.Web.UI.WebControls.ListViewDeleteEventArgs>对象传递到事件处理程序，使您可以确定当前项的索引。 它还使你能够指示应取消删除操作。 若要取消删除操作，请将 <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> 对象的属性设置 <xref:System.Web.UI.WebControls.ListViewDeleteEventArgs> 为 `true` 。 在将 <xref:System.Web.UI.WebControls.ListViewDeleteEventArgs.Keys%2A> <xref:System.Web.UI.WebControls.ListViewDeleteEventArgs.Values%2A> 值传递给数据源之前，您还可以使用和集合。

 有关如何处理事件的详细信息，请参阅 [处理和引发事件](/dotnet/standard/events/)。



## Examples
 下面的示例演示如何以声明方式为事件添加事件处理程序 <xref:System.Web.UI.WebControls.ListView.ItemDeleting> 。

 [!code-aspx-csharp[System.Web.UI.WebControls.ListViewItemDeleting#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListViewItemDeleting/CS/ListViewItemItemDeletingCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ListViewItemDeleting#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListViewItemDeleting/VB/ListViewItemItemDeletingVB.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.ListViewDeleteEventArgs" />
        <altmember cref="M:System.Web.UI.WebControls.ListView.OnItemDeleting(System.Web.UI.WebControls.ListViewDeleteEventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.ListView.ItemDeleted" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/bb398790(v=vs.100)">ListView Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="ItemEditing">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Web.UI.WebControls.ListViewEditEventArgs&gt; ItemEditing;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Web.UI.WebControls.ListViewEditEventArgs&gt; ItemEditing" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ListView.ItemEditing" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ItemEditing As EventHandler(Of ListViewEditEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Web::UI::WebControls::ListViewEditEventArgs ^&gt; ^ ItemEditing;" />
      <MemberSignature Language="F#" Value="member this.ItemEditing : EventHandler&lt;System.Web.UI.WebControls.ListViewEditEventArgs&gt; " Usage="member this.ItemEditing : System.EventHandler&lt;System.Web.UI.WebControls.ListViewEditEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Category("Action")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Category("Action")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Web.UI.WebControls.ListViewEditEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>在请求编辑操作之后、<see cref="T:System.Web.UI.WebControls.ListView" /> 项进入编辑模式之前发生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.ListView.ItemEditing>当单击某项的 "编辑" 按钮时，但在 <xref:System.Web.UI.WebControls.ListView> 该项进入编辑模式之前，将引发该事件。  (编辑按钮是其 <xref:System.Web.UI.WebControls.Button.CommandName%2A> 属性设置为 "编辑" 的按钮控件。 ) 这使您可以在每次发生此事件时执行自定义例程，如取消编辑操作。

 <xref:System.Web.UI.WebControls.ListViewEditEventArgs>对象传递到事件处理程序，使您可以确定当前项的索引。 它还使你能够指示应取消编辑操作。 若要取消编辑操作，请将 <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> 对象的属性设置 <xref:System.Web.UI.WebControls.ListViewEditEventArgs> 为 `true` 。

 有关如何处理事件的详细信息，请参阅 [处理和引发事件](/dotnet/standard/events/)。



## Examples
 下面的示例演示如何为事件添加事件处理程序 <xref:System.Web.UI.WebControls.ListView.ItemEditing> 。

> [!IMPORTANT]
>  此示例具有一个接受用户输入的文本框，这是一个潜在的安全威胁。 默认情况下，ASP.NET 网页验证用户输入是否不包含脚本或 HTML 元素。 有关详细信息，请参阅[脚本侵入概述](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100))。

 [!code-aspx-csharp[System.Web.UI.WebControls.ListView.ItemEditing#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.ItemEditing/CS/ListViewItemEditingCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ListView.ItemEditing#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.ItemEditing/VB/ListViewItemEditingVB.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.ListViewEditEventArgs" />
        <altmember cref="M:System.Web.UI.WebControls.ListView.OnItemEditing(System.Web.UI.WebControls.ListViewEditEventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.ListView.ItemCanceling" />
        <altmember cref="E:System.Web.UI.WebControls.ListView.ItemUpdated" />
        <altmember cref="E:System.Web.UI.WebControls.ListView.ItemUpdating" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/bb398790(v=vs.100)">ListView Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="ItemInserted">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Web.UI.WebControls.ListViewInsertedEventArgs&gt; ItemInserted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Web.UI.WebControls.ListViewInsertedEventArgs&gt; ItemInserted" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ListView.ItemInserted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ItemInserted As EventHandler(Of ListViewInsertedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Web::UI::WebControls::ListViewInsertedEventArgs ^&gt; ^ ItemInserted;" />
      <MemberSignature Language="F#" Value="member this.ItemInserted : EventHandler&lt;System.Web.UI.WebControls.ListViewInsertedEventArgs&gt; " Usage="member this.ItemInserted : System.EventHandler&lt;System.Web.UI.WebControls.ListViewInsertedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Category("Action")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Category("Action")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Web.UI.WebControls.ListViewInsertedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>在请求插入操作且 <see cref="T:System.Web.UI.WebControls.ListView" /> 控件在数据源中插入项之后发生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.ListView> <xref:System.Web.UI.WebControls.ListView.ItemInserted> 当单击模板中的 "插入" 按钮或在 <xref:System.Web.UI.WebControls.ListView.InsertItemTemplate%2A> <xref:System.Web.UI.WebControls.ListView.InsertNewItem%2A> <xref:System.Web.UI.WebControls.ListView> 控件插入数据源中的项之后调用方法时，控件引发事件。  (插入按钮是其 <xref:System.Web.UI.WebControls.Button.CommandName%2A> 属性设置为 "插入" 的按钮控件。 ) 这使您可以在每次发生此事件时执行自定义例程，如检查插入操作的结果。

 <xref:System.Web.UI.WebControls.ListViewInsertedEventArgs>对象传递到事件处理程序，使您可以确定受影响的记录数。 它还允许你确定可能发生的异常。 若要确定受插入操作影响的记录数，请使用 <xref:System.Web.UI.WebControls.ListViewInsertedEventArgs.AffectedRows%2A> 属性。 若要确定是否发生了任何异常，请使用 <xref:System.Web.UI.WebControls.ListViewInsertedEventArgs.Exception%2A> 属性。 还可以通过设置属性，指示是否已在事件处理程序中处理异常 <xref:System.Web.UI.WebControls.ListViewInsertedEventArgs.ExceptionHandled%2A> 。 如果要访问插入的记录的值，请使用 <xref:System.Web.UI.WebControls.ListViewInsertedEventArgs.Values%2A> 属性。

 如果 <xref:System.Web.UI.WebControls.ListViewInsertedEventArgs.AffectedRows%2A> 属性报告未插入任何项，可以 <xref:System.Web.UI.WebControls.ListView.InsertItemTemplate%2A> 通过将属性设置为，将插入值重新绑定到模板 <xref:System.Web.UI.WebControls.ListViewInsertedEventArgs.KeepInInsertMode%2A> `true` 。

 有关如何处理事件的详细信息，请参阅 [处理和引发事件](/dotnet/standard/events/)。



## Examples
 下面的示例演示如何为事件添加事件处理程序 <xref:System.Web.UI.WebControls.ListView.ItemInserted> 。

> [!IMPORTANT]
>  此示例具有一个接受用户输入的文本框，这是一个潜在的安全威胁。 默认情况下，ASP.NET 网页验证用户输入是否不包含脚本或 HTML 元素。 有关详细信息，请参阅[脚本侵入概述](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100))。

 [!code-aspx-csharp[System.Web.UI.WebControls.ListView.ItemInserted#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.ItemInserted/CS/ListViewItemInsertedCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ListView.ItemInserted#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.ItemInserted/VB/ListViewItemInsertedVB.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.ListViewInsertedEventArgs" />
        <altmember cref="P:System.Web.UI.WebControls.ListViewInsertedEventArgs.AffectedRows" />
        <altmember cref="P:System.Web.UI.WebControls.ListViewInsertedEventArgs.Exception" />
        <altmember cref="P:System.Web.UI.WebControls.ListViewInsertedEventArgs.ExceptionHandled" />
        <altmember cref="P:System.Web.UI.WebControls.ListViewInsertedEventArgs.KeepInInsertMode" />
        <altmember cref="P:System.Web.UI.WebControls.ListViewInsertedEventArgs.Values" />
        <altmember cref="M:System.Web.UI.WebControls.ListView.OnItemInserted(System.Web.UI.WebControls.ListViewInsertedEventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.ListView.ItemInserting" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/bb398790(v=vs.100)">ListView Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="ItemInserting">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Web.UI.WebControls.ListViewInsertEventArgs&gt; ItemInserting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Web.UI.WebControls.ListViewInsertEventArgs&gt; ItemInserting" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ListView.ItemInserting" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ItemInserting As EventHandler(Of ListViewInsertEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Web::UI::WebControls::ListViewInsertEventArgs ^&gt; ^ ItemInserting;" />
      <MemberSignature Language="F#" Value="member this.ItemInserting : EventHandler&lt;System.Web.UI.WebControls.ListViewInsertEventArgs&gt; " Usage="member this.ItemInserting : System.EventHandler&lt;System.Web.UI.WebControls.ListViewInsertEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Category("Action")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Category("Action")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Web.UI.WebControls.ListViewInsertEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>在请求插入操作之后、<see cref="T:System.Web.UI.WebControls.ListView" /> 控件执行插入之前发生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.ListView> <xref:System.Web.UI.WebControls.ListView.ItemInserting> 当 <xref:System.Web.UI.WebControls.ListView.InsertItemTemplate%2A> 单击模板中的 "插入" 按钮或 <xref:System.Web.UI.WebControls.ListView.InsertNewItem%2A> 调用方法，但在控件插入记录之前，控件引发事件 <xref:System.Web.UI.WebControls.ListView> 。  (插入按钮是其 <xref:System.Web.UI.WebControls.Button.CommandName%2A> 属性设置为 "插入" 的按钮控件。 ) 这使您可以在每次发生此事件时执行自定义例程，如在数据源中插入记录之前对记录的值进行 HTML 编码。

 <xref:System.Web.UI.WebControls.ListViewInsertEventArgs>对象传递到事件处理程序，该处理程序可用于确定发送到控件的可选命令参数的值 <xref:System.Web.UI.WebControls.ListView> 。 它还使你能够指示应取消插入操作。 若要取消插入操作，请将 <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> 属性设置为 `true` 。 您可以通过使用属性来读取或修改新记录的字段值 <xref:System.Web.UI.WebControls.ListViewInsertEventArgs.Values%2A> 。

 有关如何处理事件的详细信息，请参阅 [处理和引发事件](/dotnet/standard/events/)。



## Examples
 下面的示例演示如何为事件添加事件处理程序 <xref:System.Web.UI.WebControls.ListView.ItemInserting> 。

> [!IMPORTANT]
>  此示例包含接受用户输入的控件，这是一个潜在的安全威胁。 默认情况下，ASP.NET 网页验证用户输入是否不包含脚本或 HTML 元素。 有关详细信息，请参阅[脚本侵入概述](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100))。

 [!code-aspx-csharp[System.Web.UI.WebControls.ListView.ItemInserting#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.ItemInserting/CS/ListViewItemInsertingCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ListView.ItemInserting#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.ItemInserting/VB/ListViewItemInsertingVB.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.ListViewInsertEventArgs" />
        <altmember cref="P:System.ComponentModel.CancelEventArgs.Cancel" />
        <altmember cref="P:System.Web.UI.WebControls.ListViewInsertEventArgs.Values" />
        <altmember cref="M:System.Web.UI.WebControls.ListView.OnItemInserting(System.Web.UI.WebControls.ListViewInsertEventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.ListView.ItemInserted" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/bb398790(v=vs.100)">ListView Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="ItemPlaceholderID">
      <MemberSignature Language="C#" Value="public virtual string ItemPlaceholderID { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ItemPlaceholderID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.ItemPlaceholderID" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ItemPlaceholderID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ItemPlaceholderID { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ItemPlaceholderID : string with get, set" Usage="System.Web.UI.WebControls.ListView.ItemPlaceholderID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Category("Behavior")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Category("Behavior")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue("itemPlaceholder")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue("itemPlaceholder")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置 <see cref="T:System.Web.UI.WebControls.ListView" /> 控件中的项占位符的 ID。</summary>
        <value><see cref="T:System.Web.UI.WebControls.ListView" /> 控件中的项占位符的 ID。 默认值为“itemPlaceholder”。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 使用 <xref:System.Web.UI.WebControls.ListView.ItemPlaceholderID%2A> 属性指定项占位符的 ID。 项占位符是添加到模板的控件 <xref:System.Web.UI.WebControls.ListView.LayoutTemplate%2A> (如果你未使用组) 或 <xref:System.Web.UI.WebControls.ListView.GroupTemplate%2A> 模板 (如果你使用组) 来表示将呈现项的位置。



## Examples
 下面的示例演示如何使用 <xref:System.Web.UI.WebControls.ListView.ItemPlaceholderID%2A> 属性指定控件的项占位符的 ID <xref:System.Web.UI.WebControls.ListView> 。

 [!code-aspx-csharp[System.Web.UI.WebControls.ListView.ItemContainerID#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.ItemContainerID/CS/ListViewItemContainerIDCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ListView.ItemContainerID#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.ItemContainerID/VB/ListViewItemContainerIDVB.aspx#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">指定的 ID 为 <see langword="null" /> 或空字符串。</exception>
        <altmember cref="P:System.Web.UI.WebControls.ListView.GroupPlaceholderID" />
        <altmember cref="P:System.Web.UI.WebControls.ListView.GroupTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.ListView.LayoutTemplate" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/bb398790(v=vs.100)">ListView Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="Items">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IList&lt;System.Web.UI.WebControls.ListViewDataItem&gt; Items { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class System.Web.UI.WebControls.ListViewDataItem&gt; Items" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.Items" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Items As IList(Of ListViewDataItem)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::Generic::IList&lt;System::Web::UI::WebControls::ListViewDataItem ^&gt; ^ Items { System::Collections::Generic::IList&lt;System::Web::UI::WebControls::ListViewDataItem ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Items : System.Collections.Generic.IList&lt;System.Web.UI.WebControls.ListViewDataItem&gt;" Usage="System.Web.UI.WebControls.ListView.Items" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Web.UI.WebControls.ListViewDataItem&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个 <see cref="T:System.Web.UI.WebControls.ListViewDataItem" /> 对象集合，这些对象表示 <see cref="T:System.Web.UI.WebControls.ListView" /> 控件中的当前数据页的数据项。</summary>
        <value>一个对象，包含 <see cref="T:System.Web.UI.WebControls.ListView" /> 控件中的当前数据页的所有数据项。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.ListView.Items%2A>属性用于在控件中存储数据项 <xref:System.Web.UI.WebControls.ListView> 。 <xref:System.Web.UI.WebControls.ListView>控件 <xref:System.Web.UI.WebControls.ListView.Items%2A> 通过 <xref:System.Web.UI.WebControls.ListViewDataItem> 为数据源中的当前数据页中的每个记录创建一个对象来自动填充该集合。 然后将每个对象添加到集合中。 此属性通常用于访问控件中的特定项或循环访问项的完整集合。



## Examples
 下面的示例演示如何使用 <xref:System.Web.UI.WebControls.ListView.Items%2A> 集合来访问控件中正在编辑的项 <xref:System.Web.UI.WebControls.ListView> 。 此代码示例是为事件提供的更大示例的一部分 <xref:System.Web.UI.WebControls.ListView.ItemEditing> 。

 [!code-csharp[System.Web.UI.WebControls.ListView.ItemEditing#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.ItemEditing/CS/ListViewItemEditingCS.aspx#2)]
 [!code-vb[System.Web.UI.WebControls.ListView.ItemEditing#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.ItemEditing/VB/ListViewItemEditingVB.aspx#2)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.ListViewDataItem" />
        <altmember cref="T:System.Web.UI.WebControls.ListViewItem" />
        <altmember cref="T:System.Web.UI.WebControls.DataPager" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/bb398790(v=vs.100)">ListView Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="ItemSeparatorTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate ItemSeparatorTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate ItemSeparatorTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.ItemSeparatorTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ItemSeparatorTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ ItemSeparatorTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ItemSeparatorTemplate : System.Web.UI.ITemplate with get, set" Usage="System.Web.UI.WebControls.ListView.ItemSeparatorTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(null)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(null)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.ListViewItem))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.ListViewItem))&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置 <see cref="T:System.Web.UI.WebControls.ListView" /> 控件中的项之间的分隔符的自定义内容。</summary>
        <value>一个对象，包含 <see cref="T:System.Web.UI.WebControls.ListView" /> 控件的项之间的分隔符的自定义内容。 默认值为 <see langword="null" />，指示未设置此属性。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 使用 <xref:System.Web.UI.WebControls.ListView.ItemSeparatorTemplate%2A> 属性定义控件的单个项之间的分隔符的内容 <xref:System.Web.UI.WebControls.ListView> 。 <xref:System.Web.UI.WebControls.ListView.ItemSeparatorTemplate%2A>显示在每个项（最后一个除外）之后。

 若要以声明的方式指定自定义模板，请在 `ItemSeparatorTemplate` 控件内添加一个元素 <xref:System.Web.UI.WebControls.ListView> 。 然后，可以将模板的内容添加到 `ItemSeparatorTemplate` 元素。



## Examples
 下面的示例演示如何使用属性在控件中创建项分隔符 <xref:System.Web.UI.WebControls.ListView> <xref:System.Web.UI.WebControls.ListView.ItemSeparatorTemplate%2A> 。

 [!code-aspx-csharp[System.Web.UI.WebControls.ListView.GroupTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.GroupTemplate/CS/ListViewGroupTemplateCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ListView.GroupTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.GroupTemplate/VB/ListViewGroupTemplateVB.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ListView.AlternatingItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.ListView.ItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.ListView.GroupSeparatorTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.ListView.GroupTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.ListView.LayoutTemplate" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/bb398790(v=vs.100)">ListView Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="ItemTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate ItemTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate ItemTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.ItemTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ItemTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ ItemTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ItemTemplate : System.Web.UI.ITemplate with get, set" Usage="System.Web.UI.WebControls.ListView.ItemTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(null)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(null)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.ListViewDataItem), System.ComponentModel.BindingDirection.TwoWay)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.ListViewDataItem), System.ComponentModel.BindingDirection.TwoWay)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置 <see cref="T:System.Web.UI.WebControls.ListView" /> 控件中的数据项的自定义内容。</summary>
        <value>一个对象，包含 <see cref="T:System.Web.UI.WebControls.ListView" /> 控件中的数据项的自定义内容。 默认值为 <see langword="null" />，指示未设置此属性。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 使用 <xref:System.Web.UI.WebControls.ListView.ItemTemplate%2A> 属性可定义自定义用户界面 (UI) 以显示数据项。 <xref:System.Web.UI.WebControls.ListView.ItemTemplate%2A>控件需要此模板 <xref:System.Web.UI.WebControls.ListView> 。 它通常包含用于显示记录字段值的控件。 如果希望允许用户修改数据，通常还会将按钮添加到 <xref:System.Web.UI.WebControls.ListView.ItemTemplate%2A> 模板，使用户能够选择记录、切换到编辑模式或删除记录。

 若要以声明的方式指定自定义模板，请在 `ItemTemplate` 控件内添加一个元素 <xref:System.Web.UI.WebControls.ListView> 。 然后，可以将模板的内容添加到 `ItemTemplate` 元素。 若要显示绑定到控件的数据源的字段值，请使用数据绑定表达式。 有关详细信息，请参阅 [数据绑定表达式概述](https://docs.microsoft.com/previous-versions/aspnet/ms178366(v=vs.100))。

 若要创建执行内置的 "选择"、"删除" 和 "编辑" 操作的按钮，请将 "按钮" 控件添加到模板。 将其 <xref:System.Web.UI.WebControls.Button.CommandName%2A> 属性设置为下表中列出的值之一。

|按钮类型|CommandName 值|
|-----------------|-----------------------|
|删除|“Delete”|
|编辑|编辑|
|选择|“选择”|



## Examples
 下面的示例演示如何为控件中的数据项定义自定义模板 <xref:System.Web.UI.WebControls.ListView> 。

> [!IMPORTANT]
>  此示例具有一个接受用户输入的文本框，这是一个潜在的安全威胁。 默认情况下，ASP.NET 网页验证用户输入是否不包含脚本或 HTML 元素。 有关详细信息，请参阅[脚本侵入概述](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100))。

 [!code-aspx-csharp[System.Web.UI.WebControls.ListView.EditItemTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.EditItemTemplate/CS/ListViewEditItemTemplateCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ListView.EditItemTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.EditItemTemplate/VB/ListViewEditItemTemplateVB.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ListView.AlternatingItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.ListView.EditItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.ListView.GroupTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.ListView.ItemSeparatorTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.ListView.InsertItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.ListView.LayoutTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.ListView.SelectedItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.ListView.Items" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/bb398790(v=vs.100)">ListView Web 服务器控件</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms178366(v=vs.100)">数据绑定表达式语法</related>
      </Docs>
    </Member>
    <Member MemberName="ItemUpdated">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Web.UI.WebControls.ListViewUpdatedEventArgs&gt; ItemUpdated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Web.UI.WebControls.ListViewUpdatedEventArgs&gt; ItemUpdated" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ListView.ItemUpdated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ItemUpdated As EventHandler(Of ListViewUpdatedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Web::UI::WebControls::ListViewUpdatedEventArgs ^&gt; ^ ItemUpdated;" />
      <MemberSignature Language="F#" Value="member this.ItemUpdated : EventHandler&lt;System.Web.UI.WebControls.ListViewUpdatedEventArgs&gt; " Usage="member this.ItemUpdated : System.EventHandler&lt;System.Web.UI.WebControls.ListViewUpdatedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Category("Action")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Category("Action")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Web.UI.WebControls.ListViewUpdatedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>在请求更新操作且 <see cref="T:System.Web.UI.WebControls.ListView" /> 控件更新项之后发生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.ListView.ItemUpdated>当单击项的 "更新" 按钮或在 <xref:System.Web.UI.WebControls.ListView.UpdateItem%2A> <xref:System.Web.UI.WebControls.ListView> 控件更新项后调用方法时，将引发事件。  ("更新" 按钮是一个按钮控件，其 <xref:System.Web.UI.WebControls.Button.CommandName%2A> 属性设置为 "Update"。 ) 这使你能够在每次发生此事件时执行自定义例程，如检查更新操作的结果。

 <xref:System.Web.UI.WebControls.ListViewUpdatedEventArgs>对象传递到事件处理程序，使您可以确定受影响的行数。 它还允许你确定可能发生的异常。 您可以通过设置对象的属性，指示是否已在事件处理程序中处理异常 <xref:System.Web.UI.WebControls.ListViewUpdatedEventArgs.ExceptionHandled%2A> <xref:System.Web.UI.WebControls.ListViewUpdatedEventArgs> 。

 有关如何处理事件的详细信息，请参阅 [处理和引发事件](/dotnet/standard/events/)。



## Examples
 下面的示例演示如何为事件添加事件处理程序 <xref:System.Web.UI.WebControls.ListView.ItemUpdated> 。

> [!IMPORTANT]
>  此示例具有一个接受用户输入的文本框，这是一个潜在的安全威胁。 默认情况下，ASP.NET 网页验证用户输入是否不包含脚本或 HTML 元素。 有关详细信息，请参阅[脚本侵入概述](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100))。

 [!code-aspx-csharp[System.Web.UI.WebControls.ListView.ItemUpdated#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.ItemUpdated/CS/ListViewItemUpdatedCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ListView.ItemUpdated#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.ItemUpdated/VB/ListViewItemUpdatedVB.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.ListViewUpdatedEventArgs" />
        <altmember cref="M:System.Web.UI.WebControls.ListView.OnItemUpdated(System.Web.UI.WebControls.ListViewUpdatedEventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.ListView.ItemCanceling" />
        <altmember cref="E:System.Web.UI.WebControls.ListView.ItemEditing" />
        <altmember cref="E:System.Web.UI.WebControls.ListView.ItemUpdating" />
        <altmember cref="M:System.Web.UI.WebControls.ListView.OnItemUpdating(System.Web.UI.WebControls.ListViewUpdateEventArgs)" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/bb398790(v=vs.100)">ListView Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="ItemUpdating">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Web.UI.WebControls.ListViewUpdateEventArgs&gt; ItemUpdating;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Web.UI.WebControls.ListViewUpdateEventArgs&gt; ItemUpdating" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ListView.ItemUpdating" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ItemUpdating As EventHandler(Of ListViewUpdateEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Web::UI::WebControls::ListViewUpdateEventArgs ^&gt; ^ ItemUpdating;" />
      <MemberSignature Language="F#" Value="member this.ItemUpdating : EventHandler&lt;System.Web.UI.WebControls.ListViewUpdateEventArgs&gt; " Usage="member this.ItemUpdating : System.EventHandler&lt;System.Web.UI.WebControls.ListViewUpdateEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Category("Action")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Category("Action")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Web.UI.WebControls.ListViewUpdateEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>在请求更新操作之后、<see cref="T:System.Web.UI.WebControls.ListView" /> 控件更新项之前发生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.ListView.ItemUpdating>当单击项的 "更新" 按钮或 <xref:System.Web.UI.WebControls.ListView.UpdateItem%2A> 调用方法，但在控件更新项之前，会引发事件 <xref:System.Web.UI.WebControls.ListView> 。  ("更新" 按钮是一个按钮控件，其 <xref:System.Web.UI.WebControls.Button.CommandName%2A> 属性设置为 "Update"。 ) 这使您可以在每次发生此事件时执行自定义例程，如取消更新操作。

 <xref:System.Web.UI.WebControls.ListViewUpdateEventArgs>对象传递到事件处理程序，使您可以确定当前项的索引。 它还使你能够指示应取消更新操作。 若要取消更新操作，请将 <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> 对象的属性设置 <xref:System.Web.UI.WebControls.ListViewUpdateEventArgs> 为 `true` 。

 在将 <xref:System.Web.UI.WebControls.ListViewDeleteEventArgs.Keys%2A> <xref:System.Web.UI.WebControls.ListViewUpdateEventArgs.OldValues%2A> <xref:System.Web.UI.WebControls.ListViewUpdateEventArgs.NewValues%2A> 值传递给数据源之前，您可以使用、和集合。 使用这些集合的典型方法是对用户提供的值进行 HTML 编码，然后将用户提供的值存储在数据源中。 这有助于防止脚本注入攻击。

 有关如何处理事件的详细信息，请参阅 [处理和引发事件](/dotnet/standard/events/)。



## Examples
 下面的示例演示如何为事件添加事件处理程序 <xref:System.Web.UI.WebControls.ListView.ItemUpdating> 。

> [!IMPORTANT]
>  此示例具有一个接受用户输入的文本框，这是一个潜在的安全威胁。 默认情况下，ASP.NET 网页验证用户输入是否不包含脚本或 HTML 元素。 有关详细信息，请参阅[脚本侵入概述](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100))。

 [!code-aspx-csharp[System.Web.UI.WebControls.ListView.ItemUpdating#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.ItemUpdating/CS/ListViewItemUpdatingCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ListView.ItemUpdating#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.ItemUpdating/VB/ListViewItemUpdatingVB.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.ListViewUpdateEventArgs" />
        <altmember cref="M:System.Web.UI.WebControls.ListView.OnItemUpdating(System.Web.UI.WebControls.ListViewUpdateEventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.ListView.ItemCanceling" />
        <altmember cref="E:System.Web.UI.WebControls.ListView.ItemEditing" />
        <altmember cref="E:System.Web.UI.WebControls.ListView.ItemUpdated" />
        <altmember cref="M:System.Web.UI.WebControls.ListView.OnItemUpdated(System.Web.UI.WebControls.ListViewUpdatedEventArgs)" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/bb398790(v=vs.100)">ListView Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="LayoutCreated">
      <MemberSignature Language="C#" Value="public event EventHandler LayoutCreated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler LayoutCreated" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ListView.LayoutCreated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event LayoutCreated As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ LayoutCreated;" />
      <MemberSignature Language="F#" Value="member this.LayoutCreated : EventHandler " Usage="member this.LayoutCreated : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Category("Behavior")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Category("Behavior")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>在 <see cref="P:System.Web.UI.WebControls.ListView.LayoutTemplate" /> 控件中创建 <see cref="T:System.Web.UI.WebControls.ListView" /> 模板后发生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 在 <xref:System.Web.UI.WebControls.ListView> 呈现控件之前， <xref:System.Web.UI.WebControls.ListView.LayoutTemplate%2A> 必须创建模板以用作控件的根容器。 <xref:System.Web.UI.WebControls.ListView.LayoutCreated>当创建控件中的布局模板时，会引发事件 <xref:System.Web.UI.WebControls.ListView> 。 这使您可以在每次发生此事件时执行自定义例程。

 有关如何处理事件的详细信息，请参阅 [处理和引发事件](/dotnet/standard/events/)。

 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.ListView.OnLayoutCreated(System.EventArgs)" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/bb398790(v=vs.100)">ListView Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="LayoutTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate LayoutTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate LayoutTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.LayoutTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property LayoutTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ LayoutTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberSignature Language="F#" Value="member this.LayoutTemplate : System.Web.UI.ITemplate with get, set" Usage="System.Web.UI.WebControls.ListView.LayoutTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(null)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(null)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.ListView))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.ListView))&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置 <see cref="T:System.Web.UI.WebControls.ListView" /> 控件中的根容器的自定义内容。</summary>
        <value>一个对象，包含 <see cref="T:System.Web.UI.WebControls.ListView" /> 控件中的根容器的自定义内容。 默认值为 <see langword="null" />，指示未设置此属性。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 使用 <xref:System.Web.UI.WebControls.ListView.LayoutTemplate%2A> 属性定义控件的根容器 (UI) 的自定义用户界面 <xref:System.Web.UI.WebControls.ListView> 。

 若要指定布局模板，请在 `LayoutTemplate` 控件内添加一个元素 <xref:System.Web.UI.WebControls.ListView> 。 然后，可以将模板的内容添加到 `LayoutTemplate` 元素。

 <xref:System.Web.UI.WebControls.ListView.LayoutTemplate%2A>内容必须包含占位符控件（例如表行）， (`tr` 模板定义的项或模板所定义的组的) 元素 <xref:System.Web.UI.WebControls.ListView.ItemTemplate%2A> <xref:System.Web.UI.WebControls.ListView.GroupTemplate%2A> 。 占位符控件必须将 `runat` 属性设置为 "server"，并将 `ID` 特性设置为 <xref:System.Web.UI.WebControls.ListView.ItemPlaceholderID%2A> 或属性的值 <xref:System.Web.UI.WebControls.ListView.GroupPlaceholderID%2A> ，具体取决于 <xref:System.Web.UI.WebControls.ListView> 控件是否正在使用组。

 <xref:System.Web.UI.WebControls.ListView.LayoutTemplate%2A>控件不需要此模板 <xref:System.Web.UI.WebControls.ListView> 。 可以使用 <xref:System.Web.UI.WebControls.ListView> 不带的控件 <xref:System.Web.UI.WebControls.ListView.LayoutTemplate%2A> ，也可以使用具有已知 ID 的占位符服务器控件。



## Examples
 下面的示例演示如何为控件中的根容器定义自定义模板 <xref:System.Web.UI.WebControls.ListView> 。

> [!IMPORTANT]
>  此示例具有一个接受用户输入的文本框，这是一个潜在的安全威胁。 默认情况下，ASP.NET 网页验证用户输入是否不包含脚本或 HTML 元素。 有关详细信息，请参阅[脚本侵入概述](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100))。

 [!code-aspx-csharp[System.Web.UI.WebControls.ListView.EditItemTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.EditItemTemplate/CS/ListViewEditItemTemplateCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ListView.EditItemTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.EditItemTemplate/VB/ListViewEditItemTemplateVB.aspx#1)]

 下面的示例演示如何 <xref:System.Web.UI.WebControls.ListView> <xref:System.Web.UI.WebControls.ListView.LayoutTemplate%2A> 在不在控件中定义模板的情况下使用控件。 还未指定具有已知 ID 的服务器控件。

```
<asp:ListView ID="ListView1" runat="server">
  <ItemTemplate>
    <% Eval("LastName")%>
  </ItemTemplate>
</asp:ListView>
```

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ListView.AlternatingItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.ListView.EditItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.ListView.EmptyItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.ListView.GroupSeparatorTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.ListView.GroupTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.ListView.ItemSeparatorTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.ListView.InsertItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.ListView.ItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.ListView.SelectedItemTemplate" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/bb398790(v=vs.100)">ListView Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="LoadControlState">
      <MemberSignature Language="C#" Value="protected internal override void LoadControlState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void LoadControlState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.LoadControlState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub LoadControlState (savedState As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void LoadControlState(System::Object ^ savedState);" />
      <MemberSignature Language="F#" Value="override this.LoadControlState : obj -&gt; unit" Usage="listView.LoadControlState savedState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState">包含保存的控件状态值的对象。</param>
        <summary>加载 <see cref="T:System.Web.UI.WebControls.ListView" /> 控件中必须保持的属性的状态（即使在 <see cref="P:System.Web.UI.Control.EnableViewState" /> 属性设置为 <see langword="false" /> 时仍然加载）。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 此方法主要由控件开发人员用来扩展 <xref:System.Web.UI.WebControls.ListView> 控件。

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.EnableViewState" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/bb398790(v=vs.100)">ListView Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="LoadViewState">
      <MemberSignature Language="C#" Value="protected override void LoadViewState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void LoadViewState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.LoadViewState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub LoadViewState (savedState As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void LoadViewState(System::Object ^ savedState);" />
      <MemberSignature Language="F#" Value="override this.LoadViewState : obj -&gt; unit" Usage="listView.LoadViewState savedState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState">包含控件的已保存视图状态值的对象。</param>
        <summary>加载以前保存的 <see cref="T:System.Web.UI.WebControls.ListView" /> 控件的视图状态。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 此方法主要由 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 基础结构使用，不应在代码中直接使用。 不过，控件开发人员可以重写此方法，以指定自定义服务器控件如何还原其视图状态。 有关详细信息，请参阅 [ASP.NET 状态管理概述](https://docs.microsoft.com/previous-versions/aspnet/75x4ha6s(v=vs.100))。

 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Control.LoadViewState(System.Object)" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/bb398790(v=vs.100)">ListView Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="MaximumRows">
      <MemberSignature Language="C#" Value="protected virtual int MaximumRows { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaximumRows" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.MaximumRows" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property MaximumRows As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property int MaximumRows { int get(); };" />
      <MemberSignature Language="F#" Value="member this.MaximumRows : int" Usage="System.Web.UI.WebControls.ListView.MaximumRows" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取要在 <see cref="T:System.Web.UI.WebControls.ListView" /> 控件的单个页上显示的最大项数。</summary>
        <value>要在 <see cref="T:System.Web.UI.WebControls.ListView" /> 控件的单个页上显示的最大项数。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 如果 <xref:System.Web.UI.WebControls.DataPager> 对象与控件相关联 <xref:System.Web.UI.WebControls.ListView> ，则 <xref:System.Web.UI.WebControls.ListView.MaximumRows%2A> 属性值由 <xref:System.Web.UI.WebControls.DataPager> 对象控制，它与 <xref:System.Web.UI.WebControls.DataPager.PageSize%2A> 属性值相同。 否则，该值为-1。

 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/bb398790(v=vs.100)">ListView Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="OnBubbleEvent">
      <MemberSignature Language="C#" Value="protected override bool OnBubbleEvent (object source, EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool OnBubbleEvent(object source, class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.OnBubbleEvent(System.Object,System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function OnBubbleEvent (source As Object, e As EventArgs) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool OnBubbleEvent(System::Object ^ source, EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnBubbleEvent : obj * EventArgs -&gt; bool" Usage="listView.OnBubbleEvent (source, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Object" />
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="source">事件源。</param>
        <param name="e">事件数据。</param>
        <summary>确定是否应处理 <see cref="T:System.Web.UI.WebControls.ListView" /> 控件的事件。</summary>
        <returns>如果应处理事件，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 此 <xref:System.Web.UI.WebControls.ListView.OnBubbleEvent%2A> 方法由 <xref:System.Web.UI.WebControls.ListView> 控件用来选择处理通过控件层次结构向上传递的事件。 它通过检查参数中包含的对象的属性来确定是否要处理事件 <xref:System.EventArgs> `e` 。 当必须处理某个事件时，该方法会执行相应的操作。 其他事件将被忽略并向上传递控件层次结构。 此方法的返回值指示是处理事件还是将事件向上传递到控件层次结构。

 <xref:System.Web.UI.WebControls.ListView>控件重写此方法的基实现，以在单击控件所识别的某个按钮时执行相应的操作。 下表列出了控件识别的按钮 <xref:System.Web.UI.WebControls.ListView> 。

|CommandName 值|说明|
|-----------------------|-----------------|
|退出|取消编辑或插入操作。 引发 <xref:System.Web.UI.WebControls.ListView.ItemCanceling> 事件。|
|“Delete”|从数据源中删除当前记录。 引发 <xref:System.Web.UI.WebControls.ListView.ItemDeleted> 和 <xref:System.Web.UI.WebControls.ListView.ItemDeleting> 事件。|
|“选择”|将 <xref:System.Web.UI.WebControls.ListView.SelectedIndex%2A> 属性设置为 <xref:System.Web.UI.WebControls.ListViewDataItem.DisplayIndex%2A> 项的属性值。 呈现 <xref:System.Web.UI.WebControls.ListView.SelectedItemTemplate%2A> 项的模板。 引发 <xref:System.Web.UI.WebControls.ListView.SelectedIndexChanging> 和 <xref:System.Web.UI.WebControls.ListView.SelectedIndexChanged> 事件。|
|编辑|将项置于编辑模式。 呈现 <xref:System.Web.UI.WebControls.ListView.EditItemTemplate%2A> 项的模板。 引发 <xref:System.Web.UI.WebControls.ListView.ItemEditing> 事件。|
|&|将模板中的绑定值插入 <xref:System.Web.UI.WebControls.ListView.InsertItemTemplate%2A> 到数据源中。 引发 <xref:System.Web.UI.WebControls.ListView.ItemInserting> 和 <xref:System.Web.UI.WebControls.ListView.ItemInserted> 事件。|
|时更新|用模板中的绑定值更新数据源中的当前记录 <xref:System.Web.UI.WebControls.ListView.EditItemTemplate%2A> 。 引发 <xref:System.Web.UI.WebControls.ListView.ItemUpdating> 和 <xref:System.Web.UI.WebControls.ListView.ItemUpdated> 事件。|
|进行|对按钮的属性中列出的列进行排序 `CommandArgument` 。 引发 <xref:System.Web.UI.WebControls.ListView.Sorting> 和 <xref:System.Web.UI.WebControls.ListView.Sorted> 事件。|

 `true`如果其中一个按钮引发了由控件处理的事件，则此版本的方法将返回。 有关事件冒泡的详细信息，请参阅 [处理和引发事件](/dotnet/standard/events/)。

 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Control.OnBubbleEvent(System.Object,System.EventArgs)" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/bb398790(v=vs.100)">ListView Web 服务器控件</related>
        <related type="Article" href="/dotnet/visual-basic/programming-guide/language-features/events/walkthrough-handling-events">演练：处理事件</related>
      </Docs>
    </Member>
    <Member MemberName="OnInit">
      <MemberSignature Language="C#" Value="protected internal override void OnInit (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnInit(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.OnInit(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnInit (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnInit(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnInit : EventArgs -&gt; unit" Usage="listView.OnInit e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">事件数据。</param>
        <summary>引发 <see cref="E:System.Web.UI.Control.Init" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 当通过此方法通知时，Web 服务器控件必须执行创建和设置实例所需的任何初始化步骤。 在服务器控件生命周期的此阶段中，尚未填充控件的视图状态。 此外，如果调用此方法，则不能访问其他服务器控件，无论它是此控件的子控件还是父控件。 不保证其他服务器控件已创建并且可供访问。

 引发事件时，将通过委托调用事件处理程序。 有关详细信息，请参阅 [处理和引发事件](/dotnet/standard/events/)。

 <xref:System.Web.UI.WebControls.ListView.OnInit%2A>方法还使派生类可以处理事件，而无需附加委托。 这是在派生类中处理事件的首选技术。

 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>当在 <see cref="M:System.Web.UI.WebControls.ListView.OnInit(System.EventArgs)" /> 派生类中重写时，调用基类的 <see cref="M:System.Web.UI.WebControls.ListView.OnInit(System.EventArgs)" /> 方法，以便注册的委托接收事件。</para></block>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/bb398790(v=vs.100)">ListView Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="OnItemCanceling">
      <MemberSignature Language="C#" Value="protected virtual void OnItemCanceling (System.Web.UI.WebControls.ListViewCancelEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemCanceling(class System.Web.UI.WebControls.ListViewCancelEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.OnItemCanceling(System.Web.UI.WebControls.ListViewCancelEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnItemCanceling (e As ListViewCancelEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnItemCanceling(System::Web::UI::WebControls::ListViewCancelEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnItemCanceling : System.Web.UI.WebControls.ListViewCancelEventArgs -&gt; unit&#xA;override this.OnItemCanceling : System.Web.UI.WebControls.ListViewCancelEventArgs -&gt; unit" Usage="listView.OnItemCanceling e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.ListViewCancelEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">事件数据。</param>
        <summary>引发 <see cref="E:System.Web.UI.WebControls.ListView.ItemCanceling" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.ListView> <xref:System.Web.UI.WebControls.ListView.ItemCanceling> 当单击控件中的 "取消" 按钮时，但在退出 "插入" 或 "编辑" 模式之前，控件引发事件。  ("取消" 按钮是一个按钮控件，其 <xref:System.Web.UI.WebControls.Button.CommandName%2A> 属性设置为 "取消"。 ) 这使您可以在每次发生此事件时执行自定义例程，如在将项目置于不需要的状态时停止取消操作。

 此 <xref:System.Web.UI.WebControls.ListView.OnItemCanceling%2A> 方法由 <xref:System.Web.UI.WebControls.ListView> 控件调用以引发 <xref:System.Web.UI.WebControls.ListView.ItemCanceling> 事件。 它通常由控件开发人员在扩展类时使用 <xref:System.Web.UI.WebControls.ListView> 。

 引发事件时，将通过委托调用事件处理程序。 有关详细信息，请参阅 [处理和引发事件](/dotnet/standard/events/)。

 <xref:System.Web.UI.WebControls.ListView.OnItemCanceling%2A>方法还使派生类可以处理事件，而无需附加委托。 这是在派生类中处理事件的首选技术。

 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">没有 <see cref="E:System.Web.UI.WebControls.ListView.ItemCanceling" /> 事件的处理程序。</exception>
        <block subset="none" type="overrides"><para>当在 <see cref="M:System.Web.UI.WebControls.ListView.OnItemCanceling(System.Web.UI.WebControls.ListViewCancelEventArgs)" /> 派生类中重写时，调用基类的 <see cref="M:System.Web.UI.WebControls.ListView.OnItemCanceling(System.Web.UI.WebControls.ListViewCancelEventArgs)" /> 方法，以便注册的委托接收事件。</para></block>
        <altmember cref="E:System.Web.UI.WebControls.ListView.ItemCanceling" />
        <altmember cref="T:System.Web.UI.WebControls.ListViewCancelEventArgs" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/bb398790(v=vs.100)">ListView Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="OnItemCommand">
      <MemberSignature Language="C#" Value="protected virtual void OnItemCommand (System.Web.UI.WebControls.ListViewCommandEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemCommand(class System.Web.UI.WebControls.ListViewCommandEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.OnItemCommand(System.Web.UI.WebControls.ListViewCommandEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnItemCommand (e As ListViewCommandEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnItemCommand(System::Web::UI::WebControls::ListViewCommandEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnItemCommand : System.Web.UI.WebControls.ListViewCommandEventArgs -&gt; unit&#xA;override this.OnItemCommand : System.Web.UI.WebControls.ListViewCommandEventArgs -&gt; unit" Usage="listView.OnItemCommand e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.ListViewCommandEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">事件数据。</param>
        <summary>引发 <see cref="E:System.Web.UI.WebControls.ListView.ItemCommand" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.ListView.ItemCommand>当单击项模板中的按钮时，但在执行该命令之前，会引发事件。 这使您可以在 <xref:System.Web.UI.WebControls.Button.CommandName%2A> <xref:System.Web.UI.WebControls.Button.CommandArgument%2A> 每次发生此事件时执行自定义例程，以响应提供的或值。

 此 <xref:System.Web.UI.WebControls.ListView.OnItemCommand%2A> 方法由 <xref:System.Web.UI.WebControls.ListView> 控件调用以引发 <xref:System.Web.UI.WebControls.ListView.ItemCommand> 事件。 它通常由控件开发人员在扩展类时使用 <xref:System.Web.UI.WebControls.ListView> 。

 引发事件时，将通过委托调用事件处理程序。 有关详细信息，请参阅 [处理和引发事件](/dotnet/standard/events/)。

 <xref:System.Web.UI.WebControls.ListView.OnItemCommand%2A>方法还使派生类可以处理事件，而无需附加委托。 这是在派生类中处理事件的首选技术。

 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>当在 <see cref="M:System.Web.UI.WebControls.ListView.OnItemCommand(System.Web.UI.WebControls.ListViewCommandEventArgs)" /> 派生类中重写时，调用基类的 <see cref="M:System.Web.UI.WebControls.ListView.OnItemCommand(System.Web.UI.WebControls.ListViewCommandEventArgs)" /> 方法，以便注册的委托接收事件。</para></block>
        <altmember cref="E:System.Web.UI.WebControls.ListView.ItemCommand" />
        <altmember cref="T:System.Web.UI.WebControls.ListViewCommandEventArgs" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/bb398790(v=vs.100)">ListView Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="OnItemCreated">
      <MemberSignature Language="C#" Value="protected virtual void OnItemCreated (System.Web.UI.WebControls.ListViewItemEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemCreated(class System.Web.UI.WebControls.ListViewItemEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.OnItemCreated(System.Web.UI.WebControls.ListViewItemEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnItemCreated (e As ListViewItemEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnItemCreated(System::Web::UI::WebControls::ListViewItemEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnItemCreated : System.Web.UI.WebControls.ListViewItemEventArgs -&gt; unit&#xA;override this.OnItemCreated : System.Web.UI.WebControls.ListViewItemEventArgs -&gt; unit" Usage="listView.OnItemCreated e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.ListViewItemEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">事件数据。</param>
        <summary>引发 <see cref="E:System.Web.UI.WebControls.ListView.ItemCreated" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 在 <xref:System.Web.UI.WebControls.ListView> 呈现控件之前， <xref:System.Web.UI.WebControls.ListViewItem> 必须为控件中的每一项创建一个对象。 <xref:System.Web.UI.WebControls.ListView.ItemCreated>当创建控件中的每一项时，将引发事件 <xref:System.Web.UI.WebControls.ListView> 。 这使您可以在每次发生此事件时执行自定义例程，如将内容添加到项。

 此 <xref:System.Web.UI.WebControls.ListView.OnItemCreated%2A> 方法由 <xref:System.Web.UI.WebControls.ListView> 控件调用以引发 <xref:System.Web.UI.WebControls.ListView.ItemCreated> 事件。 它通常由控件开发人员在扩展类时使用 <xref:System.Web.UI.WebControls.ListView> 。

 引发事件时，将通过委托调用事件处理程序。 有关详细信息，请参阅 [处理和引发事件](/dotnet/standard/events/)。

 <xref:System.Web.UI.WebControls.ListView.OnItemCreated%2A>方法还使派生类可以处理事件，而无需附加委托。 这是在派生类中处理事件的首选技术。

 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>当在 <see cref="M:System.Web.UI.WebControls.ListView.OnItemCreated(System.Web.UI.WebControls.ListViewItemEventArgs)" /> 派生类中重写时，调用基类的 <see cref="M:System.Web.UI.WebControls.ListView.OnItemCreated(System.Web.UI.WebControls.ListViewItemEventArgs)" /> 方法，以便注册的委托接收事件。</para></block>
        <altmember cref="E:System.Web.UI.WebControls.ListView.ItemCreated" />
        <altmember cref="T:System.Web.UI.WebControls.ListViewItemEventArgs" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/bb398790(v=vs.100)">ListView Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="OnItemDataBound">
      <MemberSignature Language="C#" Value="protected virtual void OnItemDataBound (System.Web.UI.WebControls.ListViewItemEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemDataBound(class System.Web.UI.WebControls.ListViewItemEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.OnItemDataBound(System.Web.UI.WebControls.ListViewItemEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnItemDataBound (e As ListViewItemEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnItemDataBound(System::Web::UI::WebControls::ListViewItemEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnItemDataBound : System.Web.UI.WebControls.ListViewItemEventArgs -&gt; unit&#xA;override this.OnItemDataBound : System.Web.UI.WebControls.ListViewItemEventArgs -&gt; unit" Usage="listView.OnItemDataBound e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.ListViewItemEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">事件数据。</param>
        <summary>引发 <see cref="E:System.Web.UI.WebControls.ListView.ItemDataBound" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 在 <xref:System.Web.UI.WebControls.ListView> 呈现控件之前，必须将控件中的每一项绑定到数据源中的记录。 将 <xref:System.Web.UI.WebControls.ListView.ItemDataBound> 对象绑定到数据项时，将引发事件 <xref:System.Web.UI.WebControls.ListViewItem> 。 这使您可以在每次发生此事件时执行自定义例程，如在绑定过程中修改数据项的值。

 引发事件时，将通过委托调用事件处理程序。 有关详细信息，请参阅 [处理和引发事件](/dotnet/standard/events/)。

 <xref:System.Web.UI.WebControls.ListView.OnItemDataBound%2A>方法还使派生类可以处理事件，而无需附加委托。 这是在派生类中处理事件的首选技术。

 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>当在 <see cref="M:System.Web.UI.WebControls.ListView.OnItemDataBound(System.Web.UI.WebControls.ListViewItemEventArgs)" /> 派生类中重写时，必须调用基类的 <see cref="M:System.Web.UI.WebControls.ListView.OnItemDataBound(System.Web.UI.WebControls.ListViewItemEventArgs)" /> 方法，以便注册的委托接收事件。</para></block>
        <altmember cref="T:System.Web.UI.WebControls.ListViewItemEventArgs" />
        <altmember cref="E:System.Web.UI.WebControls.ListView.ItemDataBound" />
        <altmember cref="E:System.Web.UI.WebControls.ListView.ItemCreated" />
        <altmember cref="M:System.Web.UI.WebControls.ListView.OnItemCreated(System.Web.UI.WebControls.ListViewItemEventArgs)" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/bb398790(v=vs.100)">ListView Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="OnItemDeleted">
      <MemberSignature Language="C#" Value="protected virtual void OnItemDeleted (System.Web.UI.WebControls.ListViewDeletedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemDeleted(class System.Web.UI.WebControls.ListViewDeletedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.OnItemDeleted(System.Web.UI.WebControls.ListViewDeletedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnItemDeleted (e As ListViewDeletedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnItemDeleted(System::Web::UI::WebControls::ListViewDeletedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnItemDeleted : System.Web.UI.WebControls.ListViewDeletedEventArgs -&gt; unit&#xA;override this.OnItemDeleted : System.Web.UI.WebControls.ListViewDeletedEventArgs -&gt; unit" Usage="listView.OnItemDeleted e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.ListViewDeletedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">事件数据。</param>
        <summary>引发 <see cref="E:System.Web.UI.WebControls.ListView.ItemDeleted" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.ListView.ItemDeleted>当单击项的 "删除" 按钮或在 <xref:System.Web.UI.WebControls.ListView.DeleteItem%2A> <xref:System.Web.UI.WebControls.ListView> 控件删除该项后调用方法时，将引发事件。  ("删除" 按钮是其 <xref:System.Web.UI.WebControls.Button.CommandName%2A> 属性设置为 "Delete" 的按钮控件。 ) 这样就可以在每次发生此事件时执行自定义例程，如检查删除操作的结果。

 引发事件时，将通过委托调用事件处理程序。 有关详细信息，请参阅 [处理和引发事件](/dotnet/standard/events/)。

 <xref:System.Web.UI.WebControls.ListView.OnItemDeleted%2A>方法还使派生类可以处理事件，而无需附加委托。 这是在派生类中处理事件的首选技术。

 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>当在 <see cref="M:System.Web.UI.WebControls.ListView.OnItemDeleted(System.Web.UI.WebControls.ListViewDeletedEventArgs)" /> 派生类中重写时，调用基类的 <see cref="M:System.Web.UI.WebControls.ListView.OnItemDeleted(System.Web.UI.WebControls.ListViewDeletedEventArgs)" /> 方法，以便注册的委托接收事件。</para></block>
        <altmember cref="T:System.Web.UI.WebControls.ListViewDeletedEventArgs" />
        <altmember cref="E:System.Web.UI.WebControls.ListView.ItemDeleted" />
        <altmember cref="E:System.Web.UI.WebControls.ListView.ItemDeleting" />
        <altmember cref="M:System.Web.UI.WebControls.ListView.OnItemDeleting(System.Web.UI.WebControls.ListViewDeleteEventArgs)" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/bb398790(v=vs.100)">ListView Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="OnItemDeleting">
      <MemberSignature Language="C#" Value="protected virtual void OnItemDeleting (System.Web.UI.WebControls.ListViewDeleteEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemDeleting(class System.Web.UI.WebControls.ListViewDeleteEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.OnItemDeleting(System.Web.UI.WebControls.ListViewDeleteEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnItemDeleting (e As ListViewDeleteEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnItemDeleting(System::Web::UI::WebControls::ListViewDeleteEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnItemDeleting : System.Web.UI.WebControls.ListViewDeleteEventArgs -&gt; unit&#xA;override this.OnItemDeleting : System.Web.UI.WebControls.ListViewDeleteEventArgs -&gt; unit" Usage="listView.OnItemDeleting e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.ListViewDeleteEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">事件数据。</param>
        <summary>引发 <see cref="E:System.Web.UI.WebControls.ListView.ItemDeleting" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.ListView.ItemDeleting>当单击项的 "删除" 按钮或 <xref:System.Web.UI.WebControls.ListView.DeleteItem%2A> 调用方法，但在控件删除项之前，会引发事件 <xref:System.Web.UI.WebControls.ListView> 。  ("删除" 按钮是其 <xref:System.Web.UI.WebControls.Button.CommandName%2A> 属性设置为 "Delete" 的按钮控件。 ) 这样就可以在每次发生此事件时执行自定义例程，如取消删除操作。

 引发事件时，将通过委托调用事件处理程序。 有关详细信息，请参阅 [处理和引发事件](/dotnet/standard/events/)。

 <xref:System.Web.UI.WebControls.ListView.OnItemDeleting%2A>方法还使派生类可以处理事件，而无需附加委托。 这是在派生类中处理事件的首选技术。

 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="T:System.Web.UI.WebControls.ListView" /> 控件没有使用 <see cref="P:System.Web.UI.WebControls.DataBoundControl.DataSourceID" /> 属性绑定到数据源控件。</exception>
        <block subset="none" type="overrides"><para>当在 <see cref="M:System.Web.UI.WebControls.ListView.OnItemDeleting(System.Web.UI.WebControls.ListViewDeleteEventArgs)" /> 派生类中重写时，调用基类的 <see cref="M:System.Web.UI.WebControls.ListView.OnItemDeleting(System.Web.UI.WebControls.ListViewDeleteEventArgs)" /> 方法，以便注册的委托接收事件。</para></block>
        <altmember cref="T:System.Web.UI.WebControls.ListViewDeleteEventArgs" />
        <altmember cref="E:System.Web.UI.WebControls.ListView.ItemDeleting" />
        <altmember cref="E:System.Web.UI.WebControls.ListView.ItemDeleted" />
        <altmember cref="M:System.Web.UI.WebControls.ListView.OnItemDeleted(System.Web.UI.WebControls.ListViewDeletedEventArgs)" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/bb398790(v=vs.100)">ListView Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="OnItemEditing">
      <MemberSignature Language="C#" Value="protected virtual void OnItemEditing (System.Web.UI.WebControls.ListViewEditEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemEditing(class System.Web.UI.WebControls.ListViewEditEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.OnItemEditing(System.Web.UI.WebControls.ListViewEditEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnItemEditing (e As ListViewEditEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnItemEditing(System::Web::UI::WebControls::ListViewEditEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnItemEditing : System.Web.UI.WebControls.ListViewEditEventArgs -&gt; unit&#xA;override this.OnItemEditing : System.Web.UI.WebControls.ListViewEditEventArgs -&gt; unit" Usage="listView.OnItemEditing e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.ListViewEditEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">事件数据。</param>
        <summary>引发 <see cref="E:System.Web.UI.WebControls.ListView.ItemEditing" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.ListView.ItemEditing>当单击项的 "编辑" 按钮时，但在 <xref:System.Web.UI.WebControls.ListView> 控件进入编辑模式之前，会引发事件。  (编辑按钮是其 <xref:System.Web.UI.WebControls.Button.CommandName%2A> 属性设置为 "编辑" 的按钮控件。 ) 这使您可以在每次发生此事件时执行自定义例程，如取消编辑操作。

 引发事件时，将通过委托调用事件处理程序。 有关详细信息，请参阅 [处理和引发事件](/dotnet/standard/events/)。

 <xref:System.Web.UI.WebControls.ListView.OnItemEditing%2A>方法还使派生类可以处理事件，而无需附加委托。 这是在派生类中处理事件的首选技术。

 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="T:System.Web.UI.WebControls.ListView" /> 控件没有使用 <see cref="P:System.Web.UI.WebControls.DataBoundControl.DataSourceID" /> 属性绑定到数据源控件。</exception>
        <block subset="none" type="overrides"><para>当在 <see cref="M:System.Web.UI.WebControls.ListView.OnItemEditing(System.Web.UI.WebControls.ListViewEditEventArgs)" /> 派生类中重写时，调用基类的 <see cref="M:System.Web.UI.WebControls.ListView.OnItemEditing(System.Web.UI.WebControls.ListViewEditEventArgs)" /> 方法，以便注册的委托接收事件。</para></block>
        <altmember cref="T:System.Web.UI.WebControls.ListViewEditEventArgs" />
        <altmember cref="E:System.Web.UI.WebControls.ListView.ItemEditing" />
        <altmember cref="M:System.Web.UI.WebControls.ListView.OnItemCanceling(System.Web.UI.WebControls.ListViewCancelEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.ListView.OnItemUpdated(System.Web.UI.WebControls.ListViewUpdatedEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.ListView.OnItemUpdating(System.Web.UI.WebControls.ListViewUpdateEventArgs)" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/bb398790(v=vs.100)">ListView Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="OnItemInserted">
      <MemberSignature Language="C#" Value="protected virtual void OnItemInserted (System.Web.UI.WebControls.ListViewInsertedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemInserted(class System.Web.UI.WebControls.ListViewInsertedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.OnItemInserted(System.Web.UI.WebControls.ListViewInsertedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnItemInserted (e As ListViewInsertedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnItemInserted(System::Web::UI::WebControls::ListViewInsertedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnItemInserted : System.Web.UI.WebControls.ListViewInsertedEventArgs -&gt; unit&#xA;override this.OnItemInserted : System.Web.UI.WebControls.ListViewInsertedEventArgs -&gt; unit" Usage="listView.OnItemInserted e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.ListViewInsertedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">事件数据。</param>
        <summary>引发 <see cref="E:System.Web.UI.WebControls.ListView.ItemInserted" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.ListView.ItemInserted>当单击某项的 "插入" 按钮或在 <xref:System.Web.UI.WebControls.ListView.InsertNewItem%2A> <xref:System.Web.UI.WebControls.ListView> 控件插入该项后调用该方法时，将引发该事件。  (插入按钮是其 <xref:System.Web.UI.WebControls.Button.CommandName%2A> 属性设置为 "插入" 的按钮控件。 ) 这使您可以在每次发生此事件时执行自定义例程，例如从数据库中检索已插入项的自动生成的值。

 此 <xref:System.Web.UI.WebControls.ListView.OnItemInserted%2A> 方法由 <xref:System.Web.UI.WebControls.ListView> 控件调用以引发 <xref:System.Web.UI.WebControls.ListView.ItemInserted> 事件。 它通常由控件开发人员在扩展类时使用 <xref:System.Web.UI.WebControls.ListView> 。

 引发事件时，将通过委托调用事件处理程序。 有关详细信息，请参阅 [处理和引发事件](/dotnet/standard/events/)。

 <xref:System.Web.UI.WebControls.ListView.OnItemInserted%2A>方法还使派生类可以处理事件，而无需附加委托。 这是在派生类中处理事件的首选技术。

 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>当在 <see cref="M:System.Web.UI.WebControls.ListView.OnItemInserted(System.Web.UI.WebControls.ListViewInsertedEventArgs)" /> 派生类中重写时，调用基类的 <see cref="M:System.Web.UI.WebControls.ListView.OnItemInserted(System.Web.UI.WebControls.ListViewInsertedEventArgs)" /> 方法，以便注册的委托接收事件。</para></block>
        <altmember cref="E:System.Web.UI.WebControls.ListView.ItemInserted" />
        <altmember cref="M:System.Web.UI.WebControls.ListView.OnItemInserting(System.Web.UI.WebControls.ListViewInsertEventArgs)" />
        <altmember cref="T:System.Web.UI.WebControls.ListViewInsertedEventArgs" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/bb398790(v=vs.100)">ListView Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="OnItemInserting">
      <MemberSignature Language="C#" Value="protected virtual void OnItemInserting (System.Web.UI.WebControls.ListViewInsertEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemInserting(class System.Web.UI.WebControls.ListViewInsertEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.OnItemInserting(System.Web.UI.WebControls.ListViewInsertEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnItemInserting (e As ListViewInsertEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnItemInserting(System::Web::UI::WebControls::ListViewInsertEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnItemInserting : System.Web.UI.WebControls.ListViewInsertEventArgs -&gt; unit&#xA;override this.OnItemInserting : System.Web.UI.WebControls.ListViewInsertEventArgs -&gt; unit" Usage="listView.OnItemInserting e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.ListViewInsertEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">事件数据。</param>
        <summary>引发 <see cref="E:System.Web.UI.WebControls.ListView.ItemInserting" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.ListView> <xref:System.Web.UI.WebControls.ListView.ItemInserting> 当单击控件中的 "插入" 按钮或 <xref:System.Web.UI.WebControls.ListView.InsertNewItem%2A> 调用方法，但在 <xref:System.Web.UI.WebControls.ListView> 控件插入记录之前，控件引发事件。  (插入按钮是其 <xref:System.Web.UI.WebControls.Button.CommandName%2A> 属性设置为 "插入" 的按钮控件。 ) 这样就可以在每次发生此事件时（例如，在数据源中插入记录之前对记录的值进行 HTML 编码或验证）执行自定义例程。

 此 <xref:System.Web.UI.WebControls.ListView.OnItemInserting%2A> 方法由 <xref:System.Web.UI.WebControls.ListView> 控件调用以引发 <xref:System.Web.UI.WebControls.ListView.ItemInserting> 事件。 它通常由控件开发人员在扩展类时使用 <xref:System.Web.UI.WebControls.ListView> 。

 引发事件时，将通过委托调用事件处理程序。 有关详细信息，请参阅 [处理和引发事件](/dotnet/standard/events/)。

 <xref:System.Web.UI.WebControls.ListView.OnItemInserting%2A>方法还使派生类可以处理事件，而无需附加委托。 这是在派生类中处理事件的首选技术。

 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="T:System.Web.UI.WebControls.ListView" /> 控件没有使用 <see cref="P:System.Web.UI.WebControls.DataBoundControl.DataSourceID" /> 属性绑定到数据源控件。</exception>
        <block subset="none" type="overrides"><para>当在 <see cref="M:System.Web.UI.WebControls.ListView.OnItemInserting(System.Web.UI.WebControls.ListViewInsertEventArgs)" /> 派生类中重写时，调用基类的 <see cref="M:System.Web.UI.WebControls.ListView.OnItemInserting(System.Web.UI.WebControls.ListViewInsertEventArgs)" /> 方法，以便注册的委托接收事件。</para></block>
        <altmember cref="E:System.Web.UI.WebControls.ListView.ItemInserting" />
        <altmember cref="M:System.Web.UI.WebControls.ListView.OnItemInserted(System.Web.UI.WebControls.ListViewInsertedEventArgs)" />
        <altmember cref="T:System.Web.UI.WebControls.ListViewInsertEventArgs" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/bb398790(v=vs.100)">ListView Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="OnItemUpdated">
      <MemberSignature Language="C#" Value="protected virtual void OnItemUpdated (System.Web.UI.WebControls.ListViewUpdatedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemUpdated(class System.Web.UI.WebControls.ListViewUpdatedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.OnItemUpdated(System.Web.UI.WebControls.ListViewUpdatedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnItemUpdated (e As ListViewUpdatedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnItemUpdated(System::Web::UI::WebControls::ListViewUpdatedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnItemUpdated : System.Web.UI.WebControls.ListViewUpdatedEventArgs -&gt; unit&#xA;override this.OnItemUpdated : System.Web.UI.WebControls.ListViewUpdatedEventArgs -&gt; unit" Usage="listView.OnItemUpdated e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.ListViewUpdatedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">事件数据。</param>
        <summary>引发 <see cref="E:System.Web.UI.WebControls.ListView.ItemUpdated" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.ListView.ItemUpdated>当单击项的 "更新" 按钮或在 <xref:System.Web.UI.WebControls.ListView.UpdateItem%2A> <xref:System.Web.UI.WebControls.ListView> 控件更新项后调用方法时，将引发事件。  ("更新" 按钮是一个按钮控件，其 <xref:System.Web.UI.WebControls.Button.CommandName%2A> 属性设置为 "Update"。 ) 这使你能够在每次发生此事件时执行自定义例程，如检查更新操作的结果。

 引发事件时，将通过委托调用事件处理程序。 有关详细信息，请参阅 [处理和引发事件](/dotnet/standard/events/)。

 <xref:System.Web.UI.WebControls.ListView.OnItemUpdated%2A>方法还使派生类可以处理事件，而无需附加委托。 这是在派生类中处理事件的首选技术。

 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>当在 <see cref="M:System.Web.UI.WebControls.ListView.OnItemUpdated(System.Web.UI.WebControls.ListViewUpdatedEventArgs)" /> 派生类中重写时，调用基类的 <see cref="M:System.Web.UI.WebControls.ListView.OnItemUpdated(System.Web.UI.WebControls.ListViewUpdatedEventArgs)" /> 方法，以便注册的委托接收事件。</para></block>
        <altmember cref="T:System.Web.UI.WebControls.ListViewUpdatedEventArgs" />
        <altmember cref="E:System.Web.UI.WebControls.ListView.ItemUpdated" />
        <altmember cref="M:System.Web.UI.WebControls.ListView.OnItemCanceling(System.Web.UI.WebControls.ListViewCancelEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.ListView.OnItemEditing(System.Web.UI.WebControls.ListViewEditEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.ListView.OnItemUpdating(System.Web.UI.WebControls.ListViewUpdateEventArgs)" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/bb398790(v=vs.100)">ListView Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="OnItemUpdating">
      <MemberSignature Language="C#" Value="protected virtual void OnItemUpdating (System.Web.UI.WebControls.ListViewUpdateEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemUpdating(class System.Web.UI.WebControls.ListViewUpdateEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.OnItemUpdating(System.Web.UI.WebControls.ListViewUpdateEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnItemUpdating (e As ListViewUpdateEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnItemUpdating(System::Web::UI::WebControls::ListViewUpdateEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnItemUpdating : System.Web.UI.WebControls.ListViewUpdateEventArgs -&gt; unit&#xA;override this.OnItemUpdating : System.Web.UI.WebControls.ListViewUpdateEventArgs -&gt; unit" Usage="listView.OnItemUpdating e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.ListViewUpdateEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">事件数据。</param>
        <summary>引发 <see cref="E:System.Web.UI.WebControls.ListView.ItemUpdating" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.ListView.ItemUpdating>当单击项的 "更新" 按钮或 <xref:System.Web.UI.WebControls.ListView.UpdateItem%2A> 调用方法，但在控件更新项之前，会引发事件 <xref:System.Web.UI.WebControls.ListView> 。  ("更新" 按钮是一个按钮控件，其 <xref:System.Web.UI.WebControls.Button.CommandName%2A> 属性设置为 "Update"。 ) 这使您可以在每次发生此事件时执行自定义例程，如取消更新操作。

 引发事件时，将通过委托调用事件处理程序。 有关详细信息，请参阅 [处理和引发事件](/dotnet/standard/events/)。

 <xref:System.Web.UI.WebControls.ListView.OnItemUpdating%2A>方法还使派生类可以处理事件，而无需附加委托。 这是在派生类中处理事件的首选技术。

 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="T:System.Web.UI.WebControls.ListView" /> 控件没有使用 <see cref="P:System.Web.UI.WebControls.DataBoundControl.DataSourceID" /> 属性绑定到数据源控件。</exception>
        <block subset="none" type="overrides"><para>当在 <see cref="M:System.Web.UI.WebControls.ListView.OnItemUpdating(System.Web.UI.WebControls.ListViewUpdateEventArgs)" /> 派生类中重写时，调用基类的 <see cref="M:System.Web.UI.WebControls.ListView.OnItemUpdating(System.Web.UI.WebControls.ListViewUpdateEventArgs)" /> 方法，以便注册的委托接收事件。</para></block>
        <altmember cref="T:System.Web.UI.WebControls.ListViewUpdateEventArgs" />
        <altmember cref="E:System.Web.UI.WebControls.ListView.ItemUpdating" />
        <altmember cref="M:System.Web.UI.WebControls.ListView.OnItemCanceling(System.Web.UI.WebControls.ListViewCancelEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.ListView.OnItemEditing(System.Web.UI.WebControls.ListViewEditEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.ListView.OnItemUpdated(System.Web.UI.WebControls.ListViewUpdatedEventArgs)" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/bb398790(v=vs.100)">ListView Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="OnLayoutCreated">
      <MemberSignature Language="C#" Value="protected virtual void OnLayoutCreated (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnLayoutCreated(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.OnLayoutCreated(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnLayoutCreated (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnLayoutCreated(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnLayoutCreated : EventArgs -&gt; unit&#xA;override this.OnLayoutCreated : EventArgs -&gt; unit" Usage="listView.OnLayoutCreated e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">事件数据。</param>
        <summary>引发 <see cref="E:System.Web.UI.WebControls.ListView.LayoutCreated" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 在 <xref:System.Web.UI.WebControls.ListView> 呈现控件之前， <xref:System.Web.UI.WebControls.ListViewItem> 必须创建对象以充当控件的容器。 <xref:System.Web.UI.WebControls.ListView.LayoutCreated>在控件中创建布局模板时，会引发事件 <xref:System.Web.UI.WebControls.ListView> 。 这使您可以在每次发生此事件时执行自定义例程，如更改模板内的控件的可见性 <xref:System.Web.UI.WebControls.ListView.LayoutTemplate%2A> 。

 引发事件时，将通过委托调用事件处理程序。 有关详细信息，请参阅 [处理和引发事件](/dotnet/standard/events/)。

 <xref:System.Web.UI.WebControls.ListView.OnLayoutCreated%2A>方法还使派生类可以处理事件，而无需附加委托。 这是在派生类中处理事件的首选技术。

 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>当在 <see cref="M:System.Web.UI.WebControls.ListView.OnLayoutCreated(System.EventArgs)" /> 派生类中重写时，调用基类的 <see cref="M:System.Web.UI.WebControls.ListView.OnLayoutCreated(System.EventArgs)" /> 方法，以便注册的委托接收事件。</para></block>
        <altmember cref="E:System.Web.UI.WebControls.ListView.LayoutCreated" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/bb398790(v=vs.100)">ListView Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="OnPagePropertiesChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnPagePropertiesChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPagePropertiesChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.OnPagePropertiesChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPagePropertiesChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPagePropertiesChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPagePropertiesChanged : EventArgs -&gt; unit&#xA;override this.OnPagePropertiesChanged : EventArgs -&gt; unit" Usage="listView.OnPagePropertiesChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">事件数据。</param>
        <summary>引发 <see cref="E:System.Web.UI.WebControls.ListView.PagePropertiesChanged" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.ListView.PagePropertiesChanged>当页属性更改时，在 <xref:System.Web.UI.WebControls.ListView> 控件通过使用方法设置新值之后，将引发事件 <xref:System.Web.UI.WebControls.ListView.SetPageProperties%2A> 。 这使您可以在每次发生此事件时执行自定义例程，如自定义分页操作。

 引发事件时，将通过委托调用事件处理程序。 有关详细信息，请参阅 [处理和引发事件](/dotnet/standard/events/)。

 <xref:System.Web.UI.WebControls.ListView.OnPagePropertiesChanged%2A>方法还使派生类可以处理事件，而无需附加委托。 这是在派生类中处理事件的首选技术。

 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>当在 <see cref="M:System.Web.UI.WebControls.ListView.OnPagePropertiesChanged(System.EventArgs)" /> 派生类中重写时，调用基类的 <see cref="M:System.Web.UI.WebControls.ListView.OnPagePropertiesChanged(System.EventArgs)" /> 方法，以便注册的委托接收事件。</para></block>
        <altmember cref="E:System.Web.UI.WebControls.ListView.PagePropertiesChanged" />
        <altmember cref="E:System.Web.UI.WebControls.ListView.PagePropertiesChanging" />
        <altmember cref="M:System.Web.UI.WebControls.ListView.OnPagePropertiesChanging(System.Web.UI.WebControls.PagePropertiesChangingEventArgs)" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/bb398790(v=vs.100)">ListView Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="OnPagePropertiesChanging">
      <MemberSignature Language="C#" Value="protected virtual void OnPagePropertiesChanging (System.Web.UI.WebControls.PagePropertiesChangingEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPagePropertiesChanging(class System.Web.UI.WebControls.PagePropertiesChangingEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.OnPagePropertiesChanging(System.Web.UI.WebControls.PagePropertiesChangingEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPagePropertiesChanging (e As PagePropertiesChangingEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPagePropertiesChanging(System::Web::UI::WebControls::PagePropertiesChangingEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPagePropertiesChanging : System.Web.UI.WebControls.PagePropertiesChangingEventArgs -&gt; unit&#xA;override this.OnPagePropertiesChanging : System.Web.UI.WebControls.PagePropertiesChangingEventArgs -&gt; unit" Usage="listView.OnPagePropertiesChanging e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.PagePropertiesChangingEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">事件数据。</param>
        <summary>引发 <see cref="E:System.Web.UI.WebControls.ListView.PagePropertiesChanging" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.ListView.PagePropertiesChanging>当页属性更改时，但在 <xref:System.Web.UI.WebControls.ListView> 控件通过使用方法设置新值之前，会引发事件 <xref:System.Web.UI.WebControls.ListView.SetPageProperties%2A> 。 这使您可以在每次发生此事件时执行自定义例程，如清除 <xref:System.Web.UI.WebControls.ListView.SelectedIndex%2A> 或 <xref:System.Web.UI.WebControls.ListView.EditIndex%2A> 属性。

 引发事件时，将通过委托调用事件处理程序。 有关详细信息，请参阅 [处理和引发事件](/dotnet/standard/events/)。

 <xref:System.Web.UI.WebControls.ListView.OnPagePropertiesChanging%2A>方法还使派生类可以处理事件，而无需附加委托。 这是在派生类中处理事件的首选技术。

 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>当在 <see cref="M:System.Web.UI.WebControls.ListView.OnPagePropertiesChanging(System.Web.UI.WebControls.PagePropertiesChangingEventArgs)" /> 派生类中重写时，调用基类的 <see cref="M:System.Web.UI.WebControls.ListView.OnPagePropertiesChanging(System.Web.UI.WebControls.PagePropertiesChangingEventArgs)" /> 方法，以便注册的委托接收事件。</para></block>
        <altmember cref="E:System.Web.UI.WebControls.ListView.PagePropertiesChanging" />
        <altmember cref="E:System.Web.UI.WebControls.ListView.PagePropertiesChanged" />
        <altmember cref="M:System.Web.UI.WebControls.ListView.OnPagePropertiesChanged(System.EventArgs)" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/bb398790(v=vs.100)">ListView Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="OnSelectedIndexChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnSelectedIndexChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSelectedIndexChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.OnSelectedIndexChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSelectedIndexChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSelectedIndexChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnSelectedIndexChanged : EventArgs -&gt; unit&#xA;override this.OnSelectedIndexChanged : EventArgs -&gt; unit" Usage="listView.OnSelectedIndexChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">事件数据。</param>
        <summary>引发 <see cref="E:System.Web.UI.WebControls.ListView.SelectedIndexChanged" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.ListView.SelectedIndexChanged>当单击项的 "选择" 按钮时，在 <xref:System.Web.UI.WebControls.ListView> 控件处理选定操作后引发事件。  ("选择" 按钮是一个按钮控件，其 <xref:System.Web.UI.WebControls.Button.CommandName%2A> 属性设置为 "Select"。 ) 这使您可以在每次发生此事件时执行自定义例程，如使用当前选定项更新状态标签。

 引发事件时，将通过委托调用事件处理程序。 有关详细信息，请参阅 [处理和引发事件](/dotnet/standard/events/)。

 <xref:System.Web.UI.WebControls.ListView.OnSelectedIndexChanged%2A>方法还使派生类可以处理事件，而无需附加委托。 这是在派生类中处理事件的首选技术。

 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>当在 <see cref="M:System.Web.UI.WebControls.ListView.OnSelectedIndexChanged(System.EventArgs)" /> 派生类中重写时，调用基类的 <see cref="M:System.Web.UI.WebControls.ListView.OnSelectedIndexChanged(System.EventArgs)" /> 方法，以便注册的委托接收事件。</para></block>
        <altmember cref="E:System.Web.UI.WebControls.ListView.SelectedIndexChanged" />
        <altmember cref="E:System.Web.UI.WebControls.ListView.SelectedIndexChanging" />
        <altmember cref="M:System.Web.UI.WebControls.ListView.OnSelectedIndexChanging(System.Web.UI.WebControls.ListViewSelectEventArgs)" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/bb398790(v=vs.100)">ListView Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="OnSelectedIndexChanging">
      <MemberSignature Language="C#" Value="protected virtual void OnSelectedIndexChanging (System.Web.UI.WebControls.ListViewSelectEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSelectedIndexChanging(class System.Web.UI.WebControls.ListViewSelectEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.OnSelectedIndexChanging(System.Web.UI.WebControls.ListViewSelectEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSelectedIndexChanging (e As ListViewSelectEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSelectedIndexChanging(System::Web::UI::WebControls::ListViewSelectEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnSelectedIndexChanging : System.Web.UI.WebControls.ListViewSelectEventArgs -&gt; unit&#xA;override this.OnSelectedIndexChanging : System.Web.UI.WebControls.ListViewSelectEventArgs -&gt; unit" Usage="listView.OnSelectedIndexChanging e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.ListViewSelectEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">事件数据。</param>
        <summary>引发 <see cref="E:System.Web.UI.WebControls.ListView.SelectedIndexChanging" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.ListView.SelectedIndexChanging>当单击项的 "选择" 按钮时，但在 <xref:System.Web.UI.WebControls.ListView> 控件处理选择操作之前引发事件。  ("选择" 按钮是一个按钮控件，其 <xref:System.Web.UI.WebControls.Button.CommandName%2A> 属性设置为 "Select"。 ) 这使您可以在每次发生此事件时执行自定义例程，如取消选择操作。

 引发事件时，将通过委托调用事件处理程序。 有关详细信息，请参阅 [处理和引发事件](/dotnet/standard/events/)。

 <xref:System.Web.UI.WebControls.ListView.OnSelectedIndexChanging%2A>方法还使派生类可以处理事件，而无需附加委托。 这是在派生类中处理事件的首选技术。

 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">没有 <see cref="E:System.Web.UI.WebControls.ListView.SelectedIndexChanging" /> 事件的处理程序。</exception>
        <block subset="none" type="overrides"><para>当在 <see cref="M:System.Web.UI.WebControls.ListView.OnSelectedIndexChanging(System.Web.UI.WebControls.ListViewSelectEventArgs)" /> 派生类中重写时，调用基类的 <see cref="M:System.Web.UI.WebControls.ListView.OnSelectedIndexChanging(System.Web.UI.WebControls.ListViewSelectEventArgs)" /> 方法，以便注册的委托接收事件。</para></block>
        <altmember cref="T:System.Web.UI.WebControls.ListViewSelectEventArgs" />
        <altmember cref="E:System.Web.UI.WebControls.ListView.SelectedIndexChanging" />
        <altmember cref="E:System.Web.UI.WebControls.ListView.SelectedIndexChanged" />
        <altmember cref="M:System.Web.UI.WebControls.ListView.OnSelectedIndexChanged(System.EventArgs)" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/bb398790(v=vs.100)">ListView Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="OnSorted">
      <MemberSignature Language="C#" Value="protected virtual void OnSorted (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSorted(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.OnSorted(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSorted (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSorted(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnSorted : EventArgs -&gt; unit&#xA;override this.OnSorted : EventArgs -&gt; unit" Usage="listView.OnSorted e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">事件数据。</param>
        <summary>引发 <see cref="E:System.Web.UI.WebControls.ListView.Sorted" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.ListView.Sorted>当单击排序按钮或在 <xref:System.Web.UI.WebControls.ListView.Sort%2A> <xref:System.Web.UI.WebControls.ListView> 控件处理排序操作后调用方法时，将引发事件。  (排序按钮是其 <xref:System.Web.UI.WebControls.Button.CommandName%2A> 属性设置为 "排序" 的按钮控件。 ) 这使您可以在每次发生此事件时执行自定义例程。

 引发事件时，将通过委托调用事件处理程序。 有关详细信息，请参阅 [处理和引发事件](/dotnet/standard/events/)。

 <xref:System.Web.UI.WebControls.ListView.OnSorted%2A>方法还使派生类可以处理事件，而无需附加委托。 这是在派生类中处理事件的首选技术。

 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>当在 <see cref="M:System.Web.UI.WebControls.ListView.OnSorted(System.EventArgs)" /> 派生类中重写时，调用基类的 <see cref="M:System.Web.UI.WebControls.ListView.OnSorted(System.EventArgs)" /> 方法，以便注册的委托接收事件。</para></block>
        <altmember cref="E:System.Web.UI.WebControls.ListView.Sorted" />
        <altmember cref="E:System.Web.UI.WebControls.ListView.Sorting" />
        <altmember cref="M:System.Web.UI.WebControls.ListView.OnSorting(System.Web.UI.WebControls.ListViewSortEventArgs)" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/bb398790(v=vs.100)">ListView Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="OnSorting">
      <MemberSignature Language="C#" Value="protected virtual void OnSorting (System.Web.UI.WebControls.ListViewSortEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSorting(class System.Web.UI.WebControls.ListViewSortEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.OnSorting(System.Web.UI.WebControls.ListViewSortEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSorting (e As ListViewSortEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSorting(System::Web::UI::WebControls::ListViewSortEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnSorting : System.Web.UI.WebControls.ListViewSortEventArgs -&gt; unit&#xA;override this.OnSorting : System.Web.UI.WebControls.ListViewSortEventArgs -&gt; unit" Usage="listView.OnSorting e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.ListViewSortEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">事件数据。</param>
        <summary>引发 <see cref="E:System.Web.UI.WebControls.ListView.Sorting" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.ListView.Sorting>当单击排序按钮或 <xref:System.Web.UI.WebControls.ListView.Sort%2A> 调用方法，但在 <xref:System.Web.UI.WebControls.ListView> 控件处理排序操作之前，将引发事件。  (排序按钮是其 <xref:System.Web.UI.WebControls.Button.CommandName%2A> 属性设置为 "排序" 的按钮控件。 ) 这使您可以在每次发生此事件时执行自定义例程，如取消排序操作。

 引发事件时，将通过委托调用事件处理程序。 有关详细信息，请参阅 [处理和引发事件](/dotnet/standard/events/)。

 <xref:System.Web.UI.WebControls.ListView.OnSorting%2A>方法还使派生类可以处理事件，而无需附加委托。 这是在派生类中处理事件的首选技术。

 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="T:System.Web.UI.WebControls.ListView" /> 控件没有使用 <see cref="P:System.Web.UI.WebControls.DataBoundControl.DataSourceID" /> 属性绑定到数据源控件。</exception>
        <block subset="none" type="overrides"><para>当在 <see cref="M:System.Web.UI.WebControls.ListView.OnSorting(System.Web.UI.WebControls.ListViewSortEventArgs)" /> 派生类中重写时，调用基类的 <see cref="M:System.Web.UI.WebControls.ListView.OnSorting(System.Web.UI.WebControls.ListViewSortEventArgs)" /> 方法，以便注册的委托接收事件。</para></block>
        <altmember cref="T:System.Web.UI.WebControls.ListViewSortEventArgs" />
        <altmember cref="E:System.Web.UI.WebControls.ListView.Sorting" />
        <altmember cref="E:System.Web.UI.WebControls.ListView.Sorted" />
        <altmember cref="M:System.Web.UI.WebControls.ListView.OnSorted(System.EventArgs)" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/bb398790(v=vs.100)">ListView Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="OnTotalRowCountAvailable">
      <MemberSignature Language="C#" Value="protected virtual void OnTotalRowCountAvailable (System.Web.UI.WebControls.PageEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnTotalRowCountAvailable(class System.Web.UI.WebControls.PageEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.OnTotalRowCountAvailable(System.Web.UI.WebControls.PageEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnTotalRowCountAvailable (e As PageEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnTotalRowCountAvailable(System::Web::UI::WebControls::PageEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnTotalRowCountAvailable : System.Web.UI.WebControls.PageEventArgs -&gt; unit&#xA;override this.OnTotalRowCountAvailable : System.Web.UI.WebControls.PageEventArgs -&gt; unit" Usage="listView.OnTotalRowCountAvailable e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.PageEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">事件数据。</param>
        <summary>引发 <see cref="E:System.Web.UI.WebControls.ListView.System#Web#UI#WebControls#IPageableItemContainer#TotalRowCountAvailable" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.ListView.System%23Web%23UI%23WebControls%23IPageableItemContainer%23TotalRowCountAvailable>当数据可用于控件时，将引发事件 <xref:System.Web.UI.WebControls.DataPager> 。

 引发事件时，将通过委托调用事件处理程序。 有关详细信息，请参阅 [处理和引发事件](/dotnet/standard/events/)。

 <xref:System.Web.UI.WebControls.ListView.OnTotalRowCountAvailable%2A>方法还使派生类可以处理事件，而无需附加委托。 这是在派生类中处理事件的首选技术。

 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>当在 <see cref="M:System.Web.UI.WebControls.ListView.OnTotalRowCountAvailable(System.Web.UI.WebControls.PageEventArgs)" /> 派生类中重写时，调用基类的 <see cref="M:System.Web.UI.WebControls.ListView.OnTotalRowCountAvailable(System.Web.UI.WebControls.PageEventArgs)" /> 方法，以便注册的委托接收事件。</para></block>
        <altmember cref="T:System.Web.UI.WebControls.PageEventArgs" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/bb398790(v=vs.100)">ListView Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="PagePropertiesChanged">
      <MemberSignature Language="C#" Value="public event EventHandler PagePropertiesChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler PagePropertiesChanged" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ListView.PagePropertiesChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PagePropertiesChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ PagePropertiesChanged;" />
      <MemberSignature Language="F#" Value="member this.PagePropertiesChanged : EventHandler " Usage="member this.PagePropertiesChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Category("Behavior")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Category("Behavior")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>在页属性更改且 <see cref="T:System.Web.UI.WebControls.ListView" /> 控件设置新值之后发生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.ListView.PagePropertiesChanged>当页属性更改时，在 <xref:System.Web.UI.WebControls.ListView> 控件通过使用方法设置新值之后，将引发事件 <xref:System.Web.UI.WebControls.ListView.SetPageProperties%2A> 。 这使您可以在每次发生此事件时执行自定义例程，如清除选定项或执行自定义分页操作。

 有关如何处理事件的详细信息，请参阅 [处理和引发事件](/dotnet/standard/events/)。

 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.ListView.OnPagePropertiesChanged(System.EventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.ListView.PagePropertiesChanging" />
        <altmember cref="M:System.Web.UI.WebControls.ListView.OnPagePropertiesChanging(System.Web.UI.WebControls.PagePropertiesChangingEventArgs)" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/bb398790(v=vs.100)">ListView Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="PagePropertiesChanging">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Web.UI.WebControls.PagePropertiesChangingEventArgs&gt; PagePropertiesChanging;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Web.UI.WebControls.PagePropertiesChangingEventArgs&gt; PagePropertiesChanging" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ListView.PagePropertiesChanging" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PagePropertiesChanging As EventHandler(Of PagePropertiesChangingEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Web::UI::WebControls::PagePropertiesChangingEventArgs ^&gt; ^ PagePropertiesChanging;" />
      <MemberSignature Language="F#" Value="member this.PagePropertiesChanging : EventHandler&lt;System.Web.UI.WebControls.PagePropertiesChangingEventArgs&gt; " Usage="member this.PagePropertiesChanging : System.EventHandler&lt;System.Web.UI.WebControls.PagePropertiesChangingEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Category("Behavior")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Category("Behavior")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Web.UI.WebControls.PagePropertiesChangingEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>在页属性更改之后、<see cref="T:System.Web.UI.WebControls.ListView" /> 控件设置新值之前发生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.ListView.PagePropertiesChanging>当页属性更改时，但在 <xref:System.Web.UI.WebControls.ListView> 控件通过使用方法设置新值之前，会引发事件 <xref:System.Web.UI.WebControls.ListView.SetPageProperties%2A> 。 这使您可以在每次发生此事件时执行自定义例程，如清除 <xref:System.Web.UI.WebControls.ListView.SelectedIndex%2A> 或 <xref:System.Web.UI.WebControls.ListView.EditIndex%2A> 属性。

 <xref:System.Web.UI.WebControls.PagePropertiesChangingEventArgs>对象传递到事件处理程序，使您可以确定页面上显示的第一条记录的索引。 它还允许您确定要显示在单个页面上的最大项数。

 有关如何处理事件的详细信息，请参阅 [处理和引发事件](/dotnet/standard/events/)。



## Examples
 下面的示例演示如何为事件创建事件处理程序 <xref:System.Web.UI.WebControls.ListView.PagePropertiesChanging> 。

 [!code-aspx-csharp[System.Web.UI.WebControls.ListView.DeleteItem#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.DeleteItem/CS/ListViewDeleteItemCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ListView.DeleteItem#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.DeleteItem/VB/ListViewDeleteItemVB.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.ListView.OnPagePropertiesChanging(System.Web.UI.WebControls.PagePropertiesChangingEventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.ListView.PagePropertiesChanged" />
        <altmember cref="M:System.Web.UI.WebControls.ListView.OnPagePropertiesChanged(System.EventArgs)" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/bb398790(v=vs.100)">ListView Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="PerformDataBinding">
      <MemberSignature Language="C#" Value="protected internal override void PerformDataBinding (System.Collections.IEnumerable data);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void PerformDataBinding(class System.Collections.IEnumerable data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.PerformDataBinding(System.Collections.IEnumerable)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub PerformDataBinding (data As IEnumerable)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void PerformDataBinding(System::Collections::IEnumerable ^ data);" />
      <MemberSignature Language="F#" Value="override this.PerformDataBinding : System.Collections.IEnumerable -&gt; unit" Usage="listView.PerformDataBinding data" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Collections.IEnumerable" />
      </Parameters>
      <Docs>
        <param name="data">一个对象，该对象实现 <see cref="T:System.Collections.IEnumerable" /> 接口并包含数据。</param>
        <summary>将 <see cref="T:System.Web.UI.WebControls.ListView" /> 控件绑定到指定的数据源。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.ListView.PerformDataBinding%2A>方法是一个帮助器方法，该方法由 <xref:System.Web.UI.WebControls.ListView> 控件调用以将控件绑定到指定的数据源。

 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>由于 <see cref="M:System.Web.UI.WebControls.BaseDataBoundControl.DataBind" /> 方法是密封的，因此， <see cref="M:System.Web.UI.WebControls.ListView.PerformDataBinding(System.Collections.IEnumerable)" /> 如果要在绑定数据时执行任何其他任务，则必须重写方法。</para></block>
        <altmember cref="T:System.Collections.IEnumerable" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/bb398790(v=vs.100)">ListView Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="PerformSelect">
      <MemberSignature Language="C#" Value="protected override void PerformSelect ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void PerformSelect() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.PerformSelect" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub PerformSelect ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void PerformSelect();" />
      <MemberSignature Language="F#" Value="override this.PerformSelect : unit -&gt; unit" Usage="listView.PerformSelect " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>从关联的数据源中检索数据。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.ListView.PerformDataBinding%2A>检索数据以将数据绑定控件绑定到数据之后，将调用方法。 有关详细信息，请参阅 <xref:System.Web.UI.WebControls.DataBoundControl.PerformSelect%2A?displayProperty=nameWithType>。

 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.DataBoundControl.PerformSelect" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/bb398790(v=vs.100)">ListView Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="RemoveItems">
      <MemberSignature Language="C#" Value="protected virtual void RemoveItems ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void RemoveItems() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.RemoveItems" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub RemoveItems ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void RemoveItems();" />
      <MemberSignature Language="F#" Value="abstract member RemoveItems : unit -&gt; unit&#xA;override this.RemoveItems : unit -&gt; unit" Usage="listView.RemoveItems " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>删除 <see cref="T:System.Web.UI.WebControls.ListView" /> 控件的项或组容器中的所有子控件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 此方法用于删除控件的项或组容器中的所有子控件 <xref:System.Web.UI.WebControls.ListView> 。 如果在 <xref:System.Web.UI.WebControls.ListView.GroupTemplate%2A> 控件中定义了模板 <xref:System.Web.UI.WebControls.ListView> ，则该 <xref:System.Web.UI.WebControls.ListView.RemoveItems%2A> 方法将删除组容器中的所有子控件。 否则，它将删除项容器中的所有子控件。

> [!NOTE]
>  此方法主要由控件开发人员用来扩展 <xref:System.Web.UI.WebControls.ListView> 控件。

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ListView.GroupTemplate" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/bb398790(v=vs.100)">ListView Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="protected internal override void Render (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Render(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.Render(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub Render (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void Render(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.Render : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="listView.Render writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">一个对象，用于在客户端的浏览器上呈现服务器控件内容。</param>
        <summary>使用指定的 <see cref="T:System.Web.UI.HtmlTextWriter" /> 对象将 Web 服务器控件内容呈现到客户端的浏览器。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.ListView.Render%2A>方法用于通过使用指定的对象将服务器控件内容呈现到客户端的浏览器 <xref:System.Web.UI.HtmlTextWriter> 。

> [!NOTE]
>  此方法主要由控件开发人员用来扩展 <xref:System.Web.UI.WebControls.ListView> 控件。

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.HtmlTextWriter" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/bb398790(v=vs.100)">ListView Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="SaveControlState">
      <MemberSignature Language="C#" Value="protected internal override object SaveControlState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance object SaveControlState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.SaveControlState" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function SaveControlState () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override System::Object ^ SaveControlState();" />
      <MemberSignature Language="F#" Value="override this.SaveControlState : unit -&gt; obj" Usage="listView.SaveControlState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>保存 <see cref="T:System.Web.UI.WebControls.ListView" /> 控件中必须保持的属性的状态（即使在 <see cref="P:System.Web.UI.Control.EnableViewState" /> 属性设置为 <see langword="false" /> 时仍然保存）。</summary>
        <returns>返回服务器控件的当前视图状态。 如果没有与该控件关联的视图状态，则此方法返回 <see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 此方法用于保存控件中必须保持的属性的状态 <xref:System.Web.UI.WebControls.ListView> ，即使在属性设置为时也是如此 <xref:System.Web.UI.Control.EnableViewState%2A> `false` 。

> [!NOTE]
>  此方法主要由控件开发人员用来扩展 <xref:System.Web.UI.WebControls.ListView> 控件。

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.EnableViewState" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/bb398790(v=vs.100)">ListView Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="SaveViewState">
      <MemberSignature Language="C#" Value="protected override object SaveViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance object SaveViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.SaveViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function SaveViewState () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Object ^ SaveViewState();" />
      <MemberSignature Language="F#" Value="override this.SaveViewState : unit -&gt; obj" Usage="listView.SaveViewState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>保存 <see cref="T:System.Web.UI.WebControls.ListView" /> 控件的当前视图状态。</summary>
        <returns>一个对象，包含 <see cref="T:System.Web.UI.WebControls.ListView" /> 控件的已保存的视图状态值。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.ListView.SaveViewState%2A>方法是一个帮助器方法，该方法由 <xref:System.Web.UI.WebControls.ListView> 控件调用以保存控件的状态。 有关详细信息，请参阅 <xref:System.Web.UI.WebControls.WebControl.SaveViewState%2A?displayProperty=nameWithType>。

 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebControl.SaveViewState" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/bb398790(v=vs.100)">ListView Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="SelectedDataKey">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.DataKey SelectedDataKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.DataKey SelectedDataKey" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.SelectedDataKey" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SelectedDataKey As DataKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::DataKey ^ SelectedDataKey { System::Web::UI::WebControls::DataKey ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectedDataKey : System.Web.UI.WebControls.DataKey" Usage="System.Web.UI.WebControls.ListView.SelectedDataKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取 <see cref="T:System.Web.UI.WebControls.ListView" /> 控件中的选定项的数据键值。</summary>
        <value><see cref="T:System.Web.UI.WebControls.ListView" /> 控件中的选定项的数据键值。 默认值为 <see langword="null" />，表示当前未选择项。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.ListView.DataKeyNames%2A>设置属性后， <xref:System.Web.UI.WebControls.ListView> 控件将 <xref:System.Web.UI.WebControls.DataKey> 使用指定字段的一个或多个值为控件中的每一项创建一个对象。 然后，将 <xref:System.Web.UI.WebControls.DataKey> 对象添加到控件的 <xref:System.Web.UI.WebControls.ListView.DataKeys%2A> 集合中。 通常， <xref:System.Web.UI.WebControls.ListView.DataKeys%2A> 属性用于检索 <xref:System.Web.UI.WebControls.DataKey> 控件中特定数据项的对象 <xref:System.Web.UI.WebControls.ListView> 。 但是，如果要仅检索 <xref:System.Web.UI.WebControls.DataKey> 当前选定项的对象，则可以使用 <xref:System.Web.UI.WebControls.ListView.SelectedDataKey%2A> 属性作为快捷方式。

 使用属性与在 <xref:System.Web.UI.WebControls.ListView.SelectedDataKey%2A> <xref:System.Web.UI.WebControls.DataKey> <xref:System.Web.UI.WebControls.ListView.DataKeys%2A> 由属性指定的索引处的集合中检索对象时相同 <xref:System.Web.UI.WebControls.ListView.SelectedIndex%2A> 。 你还可以使用 <xref:System.Web.UI.WebControls.ListView.SelectedValue%2A> 属性来直接检索当前选定项的数据键值。

 如果要创建一个 <xref:System.Web.UI.WebControls.ControlParameter> 对象，并且想要访问第一个字段之外的键字段，请 <xref:System.Web.UI.WebControls.ListView.SelectedDataKey%2A> 在对象的属性中使用 indexed 属性 <xref:System.Web.UI.WebControls.ControlParameter.PropertyName%2A> <xref:System.Web.UI.WebControls.ControlParameter> 。



## Examples
 下面的示例演示如何使用第二个键字段作为主/从方案中的参数。 <xref:System.Web.UI.WebControls.ListView>控件用于显示 AdventureWorks 数据库的产品库存表中的记录。 在控件中选择某项后 <xref:System.Web.UI.WebControls.ListView> ，该产品的详细信息将显示在另一个 <xref:System.Web.UI.WebControls.ListView> 控件中。 ProductID 是第一个控件中的第二个密钥名称 <xref:System.Web.UI.WebControls.ListView> 。 为了访问第二个键，代码使用 `ProductInventoryListView.SelectedDataKey[1]` Visual Basic 中 (的值 `ProductInventoryListView.SelectedDataKey(1)`) 为对象的 <xref:System.Web.UI.WebControls.ControlParameter.PropertyName%2A> <xref:System.Web.UI.WebControls.ControlParameter> 。 此参数对象又由 <xref:System.Web.UI.WebControls.SqlDataSource> 第二个 <xref:System.Web.UI.WebControls.ListView> 控件绑定到的控件使用。

 [!code-aspx-csharp[System.Web.UI.WebControls.ListView.SelectedDataKey#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.SelectedDataKey/CS/ListViewSelectedDataKeyCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ListView.SelectedDataKey#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.SelectedDataKey/VB/ListViewSelectedDataKeyVB.aspx#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="P:System.Web.UI.WebControls.ListView.DataKeyNames" /> 属性中未指定数据键。</exception>
        <altmember cref="P:System.Web.UI.WebControls.ListView.DataKeyNames" />
        <altmember cref="P:System.Web.UI.WebControls.ListView.DataKeys" />
        <altmember cref="P:System.Web.UI.WebControls.ListView.SelectedIndex" />
        <altmember cref="P:System.Web.UI.WebControls.ListView.SelectedValue" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/bb398790(v=vs.100)">ListView Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="SelectedIndex">
      <MemberSignature Language="C#" Value="public virtual int SelectedIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SelectedIndex" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.SelectedIndex" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property SelectedIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int SelectedIndex { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.SelectedIndex : int with get, set" Usage="System.Web.UI.WebControls.ListView.SelectedIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Category("Default")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Category("Default")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(-1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(-1)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置 <see cref="T:System.Web.UI.WebControls.ListView" /> 控件中的选定项的索引。</summary>
        <value><see cref="T:System.Web.UI.WebControls.ListView" /> 控件中的选定项的从零开始的索引。 默认值为 -1，表示当前未选择项。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 使用 <xref:System.Web.UI.WebControls.ListView.SelectedIndex%2A> 属性可确定控件中当前选定项的索引 <xref:System.Web.UI.WebControls.ListView> 。 还可以使用此属性以编程方式选择控件中的项。  (但是，如果你手动对控件进行数据绑定 <xref:System.Web.UI.WebControls.ListView> ，则可能还需要手动处理读取或设置此属性。 ) 



## Examples
 下面的示例演示如何使用 <xref:System.Web.UI.WebControls.ListView.SelectedIndex%2A> 属性来确定控件中是否选择了某个项 <xref:System.Web.UI.WebControls.ListView> 。 此代码示例是为方法提供的一个更大示例的一部分 <xref:System.Web.UI.WebControls.ListView.DeleteItem%2A> 。

 [!code-csharp[System.Web.UI.WebControls.ListView.DeleteItem#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.DeleteItem/CS/ListViewDeleteItemCS.aspx#2)]
 [!code-vb[System.Web.UI.WebControls.ListView.DeleteItem#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.DeleteItem/VB/ListViewDeleteItemVB.aspx#2)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><see cref="P:System.Web.UI.WebControls.ListView.SelectedIndex" /> 属性被设置为小于 -1 的值。</exception>
        <altmember cref="P:System.Web.UI.WebControls.ListView.SelectedDataKey" />
        <altmember cref="P:System.Web.UI.WebControls.ListView.SelectedItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.ListView.SelectedValue" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/bb398790(v=vs.100)">ListView Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="SelectedIndexChanged">
      <MemberSignature Language="C#" Value="public event EventHandler SelectedIndexChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler SelectedIndexChanged" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ListView.SelectedIndexChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SelectedIndexChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ SelectedIndexChanged;" />
      <MemberSignature Language="F#" Value="member this.SelectedIndexChanged : EventHandler " Usage="member this.SelectedIndexChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Category("Action")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Category("Action")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>在单击项的“选择”按钮且 <see cref="T:System.Web.UI.WebControls.ListView" /> 控件处理选择操作之后发生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.ListView.SelectedIndexChanged>当单击项的 "选择" 按钮时，在 <xref:System.Web.UI.WebControls.ListView> 控件处理选定操作后引发事件。  ("选择" 按钮是一个按钮控件，其 <xref:System.Web.UI.WebControls.Button.CommandName%2A> 属性设置为 "Select"。 ) 这使你能够在每次发生此事件时执行自定义例程，如使用当前选定项的相关信息更新状态标签。

 有关如何处理事件的详细信息，请参阅 [处理和引发事件](/dotnet/standard/events/)。



## Examples
 下面的示例演示如何为事件创建事件处理程序 <xref:System.Web.UI.WebControls.ListView.SelectedIndexChanged> 。

 [!code-aspx-csharp[System.Web.UI.WebControls.ListView.SelectedIndexChanged#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.SelectedIndexChanged/CS/ListViewItemSelectedIndexChanged2CS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ListView.SelectedIndexChanged#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.SelectedIndexChanged/VB/ListViewItemSelectedIndexChanged2VB.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.ListView.OnSelectedIndexChanged(System.EventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.ListView.SelectedIndexChanging" />
        <altmember cref="M:System.Web.UI.WebControls.ListView.OnSelectedIndexChanging(System.Web.UI.WebControls.ListViewSelectEventArgs)" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/bb398790(v=vs.100)">ListView Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="SelectedIndexChanging">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Web.UI.WebControls.ListViewSelectEventArgs&gt; SelectedIndexChanging;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Web.UI.WebControls.ListViewSelectEventArgs&gt; SelectedIndexChanging" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ListView.SelectedIndexChanging" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SelectedIndexChanging As EventHandler(Of ListViewSelectEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Web::UI::WebControls::ListViewSelectEventArgs ^&gt; ^ SelectedIndexChanging;" />
      <MemberSignature Language="F#" Value="member this.SelectedIndexChanging : EventHandler&lt;System.Web.UI.WebControls.ListViewSelectEventArgs&gt; " Usage="member this.SelectedIndexChanging : System.EventHandler&lt;System.Web.UI.WebControls.ListViewSelectEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Category("Action")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Category("Action")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Web.UI.WebControls.ListViewSelectEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>在单击项的“选择”按钮之后、<see cref="T:System.Web.UI.WebControls.ListView" /> 控件处理选择操作之前发生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.ListView.SelectedIndexChanging>当单击项的 "选择" 按钮时，但在 <xref:System.Web.UI.WebControls.ListView> 控件处理选择操作之前引发事件。  ("选择" 按钮是一个按钮控件，其 <xref:System.Web.UI.WebControls.Button.CommandName%2A> 属性设置为 "Select"。 ) 这使您可以在每次发生此事件时执行自定义例程，如取消选择操作。

> [!NOTE]
>  以编程方式设置该属性时，不会引发此事件 <xref:System.Web.UI.WebControls.ListView.SelectedIndex%2A> 。

 <xref:System.Web.UI.WebControls.ListViewSelectEventArgs>对象传递到事件处理程序，使您可以确定用户选择的项的索引。 它还使你能够指示应取消选择操作。 若要取消选择操作，请将 <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> 对象的属性设置 <xref:System.Web.UI.WebControls.ListViewSelectEventArgs> 为 `true` 。

 有关如何处理事件的详细信息，请参阅 [处理和引发事件](/dotnet/standard/events/)。



## Examples
 下面的示例演示如何为事件创建事件处理程序 <xref:System.Web.UI.WebControls.ListView.SelectedIndexChanging> 。

 [!code-aspx-csharp[System.Web.UI.WebControls.ListView.SelectedIndexChanging#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.SelectedIndexChanging/CS/ListViewItemSelectedIndexChangingCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ListView.SelectedIndexChanging#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.SelectedIndexChanging/VB/ListViewItemSelectedIndexChangingVB.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.ListViewSelectEventArgs" />
        <altmember cref="M:System.Web.UI.WebControls.ListView.OnSelectedIndexChanging(System.Web.UI.WebControls.ListViewSelectEventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.ListView.SelectedIndexChanged" />
        <altmember cref="M:System.Web.UI.WebControls.ListView.OnSelectedIndexChanged(System.EventArgs)" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/bb398790(v=vs.100)">ListView Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="SelectedItemTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate SelectedItemTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate SelectedItemTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.SelectedItemTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property SelectedItemTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ SelectedItemTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SelectedItemTemplate : System.Web.UI.ITemplate with get, set" Usage="System.Web.UI.WebControls.ListView.SelectedItemTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(null)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(null)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.ListViewDataItem), System.ComponentModel.BindingDirection.TwoWay)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.ListViewDataItem), System.ComponentModel.BindingDirection.TwoWay)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置 <see cref="T:System.Web.UI.WebControls.ListView" /> 控件中的选定项的自定义内容。</summary>
        <value>一个对象，包含 <see cref="T:System.Web.UI.WebControls.ListView" /> 控件中的选定项的自定义内容。 默认值为 <see langword="null" />，指示未设置此属性。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 使用 <xref:System.Web.UI.WebControls.ListView.SelectedItemTemplate%2A> 属性可为控件中的选定项定义 (UI) 的自定义用户界面 <xref:System.Web.UI.WebControls.ListView> 。 <xref:System.Web.UI.WebControls.ListView.SelectedItemTemplate%2A>通常用于区分选定项与其他显示项。 <xref:System.Web.UI.WebControls.ListView.SelectedItemTemplate%2A> 呈现，而不是 <xref:System.Web.UI.WebControls.ListView.ItemTemplate%2A> 选定项的模板。

 若要以声明的方式指定自定义模板，请在 `SelectedItemTemplate` 控件内添加一个元素 <xref:System.Web.UI.WebControls.ListView> 。 然后，可以将模板的内容添加到 `SelectedItemTemplate` 元素。 若要显示绑定到控件的数据源的字段值，请使用数据绑定表达式。 有关详细信息，请参阅 [数据绑定表达式概述](https://docs.microsoft.com/previous-versions/aspnet/ms178366(v=vs.100))。

 你还可以将按钮添加到 <xref:System.Web.UI.WebControls.ListView.SelectedItemTemplate%2A> 。 若要创建执行内置删除或编辑操作的按钮，请向模板添加一个按钮控件，并将其 <xref:System.Web.UI.WebControls.Button.CommandName%2A> 属性设置为下表中列出的值之一。

|按钮类型|CommandName 值|
|-----------------|-----------------------|
|删除|“Delete”|
|编辑|编辑|



## Examples
 下面的示例演示如何使用 <xref:System.Web.UI.WebControls.ListView.SelectedItemTemplate%2A> 属性定义控件中选定项的内容 <xref:System.Web.UI.WebControls.ListView> 。

 [!code-aspx-csharp[System.Web.UI.WebControls.ListViewItemDeleting#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListViewItemDeleting/CS/ListViewItemItemDeletingCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ListViewItemDeleting#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListViewItemDeleting/VB/ListViewItemItemDeletingVB.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ListView.AlternatingItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.ListView.EditItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.ListView.InsertItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.ListView.ItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.ListView.SelectedIndex" />
        <altmember cref="E:System.Web.UI.WebControls.ListView.SelectedIndexChanged" />
        <altmember cref="E:System.Web.UI.WebControls.ListView.SelectedIndexChanging" />
        <altmember cref="P:System.Web.UI.WebControls.ListView.SelectedValue" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/bb398790(v=vs.100)">ListView Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="SelectedPersistedDataKey">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.DataKey SelectedPersistedDataKey { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.DataKey SelectedPersistedDataKey" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.SelectedPersistedDataKey" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property SelectedPersistedDataKey As DataKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::DataKey ^ SelectedPersistedDataKey { System::Web::UI::WebControls::DataKey ^ get(); void set(System::Web::UI::WebControls::DataKey ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SelectedPersistedDataKey : System.Web.UI.WebControls.DataKey with get, set" Usage="System.Web.UI.WebControls.ListView.SelectedPersistedDataKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置数据绑定控件中选择的持久项的数据键值。</summary>
        <value>数据绑定控件中选择的持久项的数据键。 默认值为 <see langword="null" />，表示当前未选择项。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectedValue">
      <MemberSignature Language="C#" Value="public object SelectedValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SelectedValue" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.SelectedValue" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SelectedValue As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ SelectedValue { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectedValue : obj" Usage="System.Web.UI.WebControls.ListView.SelectedValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取 <see cref="T:System.Web.UI.WebControls.ListView" /> 控件中的选定项的数据键值。</summary>
        <value><see cref="T:System.Web.UI.WebControls.ListView" /> 控件中的选定项的数据键值。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.ListView.DataKeyNames%2A>属性可以设置为表示数据源主键的字段名称的逗号分隔列表。 如果已设置该控件，则 <xref:System.Web.UI.WebControls.ListView> 控件将 <xref:System.Web.UI.WebControls.DataKey> 使用指定字段的一个或多个值自动为控件中的每个项创建一个对象。 然后，将 <xref:System.Web.UI.WebControls.DataKey> 对象添加到控件的 <xref:System.Web.UI.WebControls.ListView.DataKeys%2A> 集合中。

 通常， <xref:System.Web.UI.WebControls.ListView.DataKeys%2A> 属性用于获取 <xref:System.Web.UI.WebControls.DataKey> 控件中特定数据项的对象 <xref:System.Web.UI.WebControls.ListView> 。 但是，如果您只想获取 <xref:System.Web.UI.WebControls.DataKey> 当前选定项的对象，则可以使用 <xref:System.Web.UI.WebControls.ListView.SelectedDataKey%2A> 属性作为快捷方式。 还可以通过使用属性，直接确定所选项的第一个键字段的数据键值 <xref:System.Web.UI.WebControls.ListView.SelectedValue%2A> 。

 如果要创建一个 <xref:System.Web.UI.WebControls.ControlParameter> 对象并希望访问第一个字段之外的键字段，请使用 <xref:System.Web.UI.WebControls.ListView.SelectedDataKey%2A> 属性。 有关示例，请参见 <xref:System.Web.UI.WebControls.ListView.SelectedDataKey%2A> 属性。



## Examples
 下面的示例演示如何使用第一个键字段作为主/详细方案中的参数。 在控件中选择项时 <xref:System.Web.UI.WebControls.ListView> ， <xref:System.Web.UI.WebControls.ListView.SelectedValue%2A> 属性将用作 <xref:System.Web.UI.WebControls.ControlParameter.PropertyName%2A> 对象的 <xref:System.Web.UI.WebControls.ControlParameter> 。 此参数对象又由 <xref:System.Web.UI.WebControls.SqlDataSource> 第二个 <xref:System.Web.UI.WebControls.ListView> 控件绑定到的控件使用。

 [!code-aspx-csharp[System.Web.UI.WebControls.ListViewItemDeleting#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListViewItemDeleting/CS/ListViewItemItemDeletingCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ListViewItemDeleting#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListViewItemDeleting/VB/ListViewItemItemDeletingVB.aspx#1)]

 下面的示例演示如何使用 <xref:System.Web.UI.WebControls.ListView.SelectedValue%2A> 属性来确定键字段的值。

 [!code-aspx-csharp[System.Web.UI.WebControls.ListView.SelectedValue#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.SelectedValue/CS/ListViewSelectedValueCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ListView.SelectedValue#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.SelectedValue/VB/ListViewSelectedValueVB.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.DataKey" />
        <altmember cref="P:System.Web.UI.WebControls.ListView.DataKeyNames" />
        <altmember cref="P:System.Web.UI.WebControls.ListView.DataKeys" />
        <altmember cref="P:System.Web.UI.WebControls.ListView.SelectedDataKey" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/bb398790(v=vs.100)">ListView Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="SelectItem">
      <MemberSignature Language="C#" Value="public void SelectItem (int rowIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SelectItem(int32 rowIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.SelectItem(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SelectItem (rowIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SelectItem(int rowIndex);" />
      <MemberSignature Language="F#" Value="member this.SelectItem : int -&gt; unit" Usage="listView.SelectItem rowIndex" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowIndex" Type="System.Int32" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="rowIndex">处于编辑模式的项的索引。</param>
        <summary>选择 <see cref="T:System.Web.UI.WebControls.ListView" /> 控件中处于编辑模式的项。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 此方法引发 <xref:System.Web.UI.WebControls.ListView.SelectedIndexChanged> 事件。

 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">项索引为负。</exception>
      </Docs>
    </Member>
    <Member MemberName="SetEditItem">
      <MemberSignature Language="C#" Value="public void SetEditItem (int rowIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetEditItem(int32 rowIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.SetEditItem(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetEditItem (rowIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetEditItem(int rowIndex);" />
      <MemberSignature Language="F#" Value="member this.SetEditItem : int -&gt; unit" Usage="listView.SetEditItem rowIndex" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowIndex" Type="System.Int32" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="rowIndex">要设置为编辑模式的项的索引。</param>
        <summary>在 <see cref="T:System.Web.UI.WebControls.ListView" /> 控件中将指定项设置为编辑模式。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 使用 <xref:System.Web.UI.WebControls.ListView.EditItem%2A> 属性可访问控件中处于编辑模式的项 <xref:System.Web.UI.WebControls.ListView> 。 编辑项的内容由 <xref:System.Web.UI.WebControls.ListView.EditItemTemplate%2A> 属性定义。

 此方法引发 <xref:System.Web.UI.WebControls.ListView.ItemEditing> 事件。

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetPageProperties">
      <MemberSignature Language="C#" Value="protected virtual void SetPageProperties (int startRowIndex, int maximumRows, bool databind);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void SetPageProperties(int32 startRowIndex, int32 maximumRows, bool databind) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.SetPageProperties(System.Int32,System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub SetPageProperties (startRowIndex As Integer, maximumRows As Integer, databind As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void SetPageProperties(int startRowIndex, int maximumRows, bool databind);" />
      <MemberSignature Language="F#" Value="abstract member SetPageProperties : int * int * bool -&gt; unit&#xA;override this.SetPageProperties : int * int * bool -&gt; unit" Usage="listView.SetPageProperties (startRowIndex, maximumRows, databind)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startRowIndex" Type="System.Int32" />
        <Parameter Name="maximumRows" Type="System.Int32" />
        <Parameter Name="databind" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="startRowIndex">页面中第一条记录的索引。</param>
        <param name="maximumRows">单个页面上的最大项数。</param>
        <param name="databind">如果设置属性后重新绑定控件，则为 <see langword="true" />；否则为 <see langword="false" />。</param>
        <summary>设置 <see cref="T:System.Web.UI.WebControls.ListView" /> 控件中的数据页的属性。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="maximumRows" /> 小于 1。

- 或 -

 <paramref name="startRowIndex" /> 小于 0。</exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/bb398790(v=vs.100)">ListView Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="Sort">
      <MemberSignature Language="C#" Value="public virtual void Sort (string sortExpression, System.Web.UI.WebControls.SortDirection sortDirection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Sort(string sortExpression, valuetype System.Web.UI.WebControls.SortDirection sortDirection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.Sort(System.String,System.Web.UI.WebControls.SortDirection)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Sort (sortExpression As String, sortDirection As SortDirection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Sort(System::String ^ sortExpression, System::Web::UI::WebControls::SortDirection sortDirection);" />
      <MemberSignature Language="F#" Value="abstract member Sort : string * System.Web.UI.WebControls.SortDirection -&gt; unit&#xA;override this.Sort : string * System.Web.UI.WebControls.SortDirection -&gt; unit" Usage="listView.Sort (sortExpression, sortDirection)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sortExpression" Type="System.String" />
        <Parameter Name="sortDirection" Type="System.Web.UI.WebControls.SortDirection" />
      </Parameters>
      <Docs>
        <param name="sortExpression">用于对 <see cref="T:System.Web.UI.WebControls.ListView" /> 控件进行排序的排序表达式。</param>
        <param name="sortDirection"><see cref="T:System.Web.UI.WebControls.SortDirection" /> 值之一。</param>
        <summary>根据指定的排序表达式和方向对 <see cref="T:System.Web.UI.WebControls.ListView" /> 控件进行排序。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 使用 <xref:System.Web.UI.WebControls.ListView.Sort%2A> 方法，以编程方式 <xref:System.Web.UI.WebControls.ListView> 使用指定的排序表达式和方向对控件中显示的数据进行排序。 排序表达式指定要进行排序的一个或多个列。 若要对多个列进行排序，请创建一个排序表达式，其中包含以逗号分隔的字段名称列表。 排序方向指示是按升序还是降序执行排序。

 如果要 <xref:System.Web.UI.WebControls.ListView> 从控件之外（如页面上的不同控件）对控件的内容进行排序，通常应使用此方法。 此方法还可用于以编程方式设置 <xref:System.Web.UI.WebControls.ListView> 控件第一次呈现时的默认排序顺序。

 此方法引发 <xref:System.Web.UI.WebControls.ListView.Sorted> 和 <xref:System.Web.UI.WebControls.ListView.Sorting> 事件。



## Examples
 下面的示例演示如何使用 <xref:System.Web.UI.WebControls.ListView.Sort%2A> 方法以编程方式 <xref:System.Web.UI.WebControls.ListView> 按多个数据字段对控件进行排序。

 [!code-aspx-csharp[System.Web.UI.WebControls.ListView.Sort#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.Sort/CS/ListViewSortCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ListView.Sort#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.Sort/VB/ListViewSortVB.aspx#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="T:System.Web.UI.WebControls.ListView" /> 控件绑定到某个数据源控件，但是与该数据源关联的 <see cref="T:System.Web.UI.DataSourceView" /> 对象为 <see langword="null" />。</exception>
        <altmember cref="T:System.Web.UI.WebControls.SortDirection" />
        <altmember cref="P:System.Web.UI.WebControls.ListView.SortDirection" />
        <altmember cref="P:System.Web.UI.WebControls.ListView.SortExpression" />
        <altmember cref="E:System.Web.UI.WebControls.ListView.Sorted" />
        <altmember cref="E:System.Web.UI.WebControls.ListView.Sorting" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/bb398790(v=vs.100)">ListView Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="SortDirection">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.SortDirection SortDirection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.SortDirection SortDirection" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.SortDirection" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SortDirection As SortDirection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::SortDirection SortDirection { System::Web::UI::WebControls::SortDirection get(); };" />
      <MemberSignature Language="F#" Value="member this.SortDirection : System.Web.UI.WebControls.SortDirection" Usage="System.Web.UI.WebControls.ListView.SortDirection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SortDirection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取要排序的字段的排序方向。</summary>
        <value><see cref="T:System.Web.UI.WebControls.SortDirection" /> 值之一。 默认值为 <see langword="SortDirection.Ascending" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 使用 <xref:System.Web.UI.WebControls.ListView.SortDirection%2A> 属性可确定要排序的一个或多个字段是否按升序或降序排序。



## Examples
 下面的示例演示如何使用 <xref:System.Web.UI.WebControls.ListView.SortDirection%2A> 属性以编程方式确定控件的排序方向 <xref:System.Web.UI.WebControls.ListView> 。

 [!code-aspx-csharp[System.Web.UI.WebControls.ListView.SortDirection#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.SortDirection/CS/ListViewSortCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ListView.SortDirection#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.SortDirection/VB/ListViewSortVB.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.SortDirection" />
        <altmember cref="P:System.Web.UI.WebControls.ListView.SortExpression" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/bb398790(v=vs.100)">ListView Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="Sorted">
      <MemberSignature Language="C#" Value="public event EventHandler Sorted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Sorted" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ListView.Sorted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Sorted As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Sorted;" />
      <MemberSignature Language="F#" Value="member this.Sorted : EventHandler " Usage="member this.Sorted : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Category("Action")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Category("Action")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>在请求排序操作且 <see cref="T:System.Web.UI.WebControls.ListView" /> 控件处理排序操作之后发生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.ListView.Sorted>当单击排序按钮或在 <xref:System.Web.UI.WebControls.ListView.Sort%2A> <xref:System.Web.UI.WebControls.ListView> 控件处理排序操作后调用方法时，将引发事件。  (排序按钮是其 <xref:System.Web.UI.WebControls.Button.CommandName%2A> 属性设置为 "排序" 的按钮控件。 ) 这使您可以在每次发生此事件时执行自定义例程。

 有关如何处理事件的详细信息，请参阅 [处理和引发事件](/dotnet/standard/events/)。

 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.ListView.OnSorted(System.EventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.ListView.Sorting" />
        <altmember cref="M:System.Web.UI.WebControls.ListView.OnSorting(System.Web.UI.WebControls.ListViewSortEventArgs)" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/bb398790(v=vs.100)">ListView Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="SortExpression">
      <MemberSignature Language="C#" Value="public virtual string SortExpression { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SortExpression" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.SortExpression" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SortExpression As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ SortExpression { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SortExpression : string" Usage="System.Web.UI.WebControls.ListView.SortExpression" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取与要排序的字段关联的排序表达式。</summary>
        <value>与要排序的字段关联的排序表达式。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 在对多个列进行排序时，此属性包含要按其排序的字段的逗号分隔列表。



## Examples
 下面的示例演示如何使用属性以 <xref:System.Web.UI.WebControls.ListView.SortExpression%2A> 编程方式确定在控件中进行排序的列 <xref:System.Web.UI.WebControls.ListView> 。

 [!code-aspx-csharp[System.Web.UI.WebControls.ListView.SortDirection#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.SortDirection/CS/ListViewSortCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ListView.SortDirection#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.SortDirection/VB/ListViewSortVB.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ListView.SortDirection" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/bb398790(v=vs.100)">ListView Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="Sorting">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Web.UI.WebControls.ListViewSortEventArgs&gt; Sorting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Web.UI.WebControls.ListViewSortEventArgs&gt; Sorting" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ListView.Sorting" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Sorting As EventHandler(Of ListViewSortEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Web::UI::WebControls::ListViewSortEventArgs ^&gt; ^ Sorting;" />
      <MemberSignature Language="F#" Value="member this.Sorting : EventHandler&lt;System.Web.UI.WebControls.ListViewSortEventArgs&gt; " Usage="member this.Sorting : System.EventHandler&lt;System.Web.UI.WebControls.ListViewSortEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Category("Action")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Category("Action")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Web.UI.WebControls.ListViewSortEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>在请求排序操作之后、<see cref="T:System.Web.UI.WebControls.ListView" /> 控件处理排序操作之前发生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.ListView.Sorting>当单击排序按钮或 <xref:System.Web.UI.WebControls.ListView.Sort%2A> 调用方法，但在 <xref:System.Web.UI.WebControls.ListView> 控件处理排序操作之前，将引发事件。  (排序按钮是其 <xref:System.Web.UI.WebControls.Button.CommandName%2A> 属性设置为 "Sort" 的按钮控件。 ) 这使您可以在每次发生此事件时执行自定义例程，如自定义排序表达式。

 <xref:System.Web.UI.WebControls.ListViewSortEventArgs>对象传递到事件处理程序，从而使您能够确定该列的排序表达式。 它还允许您指示应取消排序操作。 若要取消排序操作，请将 <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> 对象的属性设置 <xref:System.Web.UI.WebControls.ListViewSortEventArgs> 为 `true` 。

 有关如何处理事件的详细信息，请参阅 [处理和引发事件](/dotnet/standard/events/)。



## Examples
 下面的示例演示如何为事件创建事件处理程序 <xref:System.Web.UI.WebControls.ListView.Sorting> 。

 [!code-aspx-csharp[System.Web.UI.WebControls.ListView.Sorting#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.Sorting/CS/ListViewSortingCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ListView.Sorting#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.Sorting/VB/ListViewSortingVB.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.ListView" />
        <altmember cref="T:System.Web.UI.WebControls.ListViewSortEventArgs" />
        <altmember cref="M:System.Web.UI.WebControls.ListView.OnSorting(System.Web.UI.WebControls.ListViewSortEventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.ListView.Sorted" />
        <altmember cref="M:System.Web.UI.WebControls.ListView.OnSorted(System.EventArgs)" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/bb398790(v=vs.100)">ListView Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="StartRowIndex">
      <MemberSignature Language="C#" Value="protected virtual int StartRowIndex { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 StartRowIndex" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.StartRowIndex" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property StartRowIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property int StartRowIndex { int get(); };" />
      <MemberSignature Language="F#" Value="member this.StartRowIndex : int" Usage="System.Web.UI.WebControls.ListView.StartRowIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取 <see cref="T:System.Web.UI.WebControls.ListView" /> 控件中的数据页上显示的第一条记录的索引。</summary>
        <value><see cref="T:System.Web.UI.WebControls.ListView" /> 控件中的数据页上显示的第一条记录的索引。</value>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/bb398790(v=vs.100)">ListView Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IDataKeysControl.ClientIDRowSuffixDataKeys">
      <MemberSignature Language="C#" Value="System.Web.UI.WebControls.DataKeyArray System.Web.UI.IDataKeysControl.ClientIDRowSuffixDataKeys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.DataKeyArray System.Web.UI.IDataKeysControl.ClientIDRowSuffixDataKeys" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.System#Web#UI#IDataKeysControl#ClientIDRowSuffixDataKeys" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property ClientIDRowSuffixDataKeys As DataKeyArray Implements IDataKeysControl.ClientIDRowSuffixDataKeys" />
      <MemberSignature Language="C++ CLI" Value="property System::Web::UI::WebControls::DataKeyArray ^ System::Web::UI::IDataKeysControl::ClientIDRowSuffixDataKeys { System::Web::UI::WebControls::DataKeyArray ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.System.Web.UI.IDataKeysControl.ClientIDRowSuffixDataKeys : System.Web.UI.WebControls.DataKeyArray" Usage="System.Web.UI.IDataKeysControl.ClientIDRowSuffixDataKeys" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.IDataKeysControl.ClientIDRowSuffixDataKeys</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataKeyArray</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取数据值的集合，在 ASP.NET 生成 <see cref="P:System.Web.UI.Control.ClientID" /> 值时，这些数据值用于唯一标识数据绑定控件的每个实例。</summary>
        <value>数据字段值的集合。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 此成员是显式接口成员的实现。 它只能在 <xref:System.Web.UI.WebControls.ListView> 实例被强制转换为 <xref:System.Web.UI.IDataKeysControl> 接口时使用。

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IDataBoundControl.DataKeyNames">
      <MemberSignature Language="C#" Value="string[] System.Web.UI.WebControls.IDataBoundControl.DataKeyNames { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] System.Web.UI.WebControls.IDataBoundControl.DataKeyNames" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.System#Web#UI#WebControls#IDataBoundControl#DataKeyNames" />
      <MemberSignature Language="VB.NET" Value=" Property DataKeyNames As String() Implements IDataBoundControl.DataKeyNames" />
      <MemberSignature Language="C++ CLI" Value="property cli::array &lt;System::String ^&gt; ^ System::Web::UI::WebControls::IDataBoundControl::DataKeyNames { cli::array &lt;System::String ^&gt; ^ get(); void set(cli::array &lt;System::String ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.System.Web.UI.WebControls.IDataBoundControl.DataKeyNames : string[] with get, set" Usage="System.Web.UI.WebControls.IDataBoundControl.DataKeyNames" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IDataBoundControl.DataKeyNames</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个数组，该数组包含显示在数据绑定控件中的项的主键字段的名称。</summary>
        <value>一个数组，该数组包含显示在数据绑定控件中的项的主键字段的名称。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 此成员是显式接口成员的实现。 它只能在 <xref:System.Web.UI.WebControls.ListView> 实例被强制转换为 <xref:System.Web.UI.WebControls.IDataBoundControl> 接口时使用。

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IDataBoundControl.DataMember">
      <MemberSignature Language="C#" Value="string System.Web.UI.WebControls.IDataBoundControl.DataMember { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string System.Web.UI.WebControls.IDataBoundControl.DataMember" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.System#Web#UI#WebControls#IDataBoundControl#DataMember" />
      <MemberSignature Language="VB.NET" Value=" Property DataMember As String Implements IDataBoundControl.DataMember" />
      <MemberSignature Language="C++ CLI" Value="property System::String ^ System::Web::UI::WebControls::IDataBoundControl::DataMember { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.System.Web.UI.WebControls.IDataBoundControl.DataMember : string with get, set" Usage="System.Web.UI.WebControls.IDataBoundControl.DataMember" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IDataBoundControl.DataMember</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>当数据源包含多个不同的数据项列表时，获取或设置数据绑定控件绑定到的数据列表的名称。</summary>
        <value>数据绑定控件绑定到的数据列表的名称。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 此成员是显式接口成员的实现。 它只能在 <xref:System.Web.UI.WebControls.ListView> 实例被强制转换为 <xref:System.Web.UI.WebControls.IDataBoundControl> 接口时使用。

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IDataBoundControl.DataSource">
      <MemberSignature Language="C#" Value="object System.Web.UI.WebControls.IDataBoundControl.DataSource { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Web.UI.WebControls.IDataBoundControl.DataSource" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.System#Web#UI#WebControls#IDataBoundControl#DataSource" />
      <MemberSignature Language="VB.NET" Value=" Property DataSource As Object Implements IDataBoundControl.DataSource" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Web::UI::WebControls::IDataBoundControl::DataSource { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.System.Web.UI.WebControls.IDataBoundControl.DataSource : obj with get, set" Usage="System.Web.UI.WebControls.IDataBoundControl.DataSource" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IDataBoundControl.DataSource</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置对象，数据绑定控件从该对象中检索其数据项列表。</summary>
        <value>包含数据绑定控件所检索到的数据列表的对象。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 此成员是显式接口成员的实现。 它只能在 <xref:System.Web.UI.WebControls.ListView> 实例被强制转换为 <xref:System.Web.UI.WebControls.IDataBoundControl> 接口时使用。

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IDataBoundControl.DataSourceID">
      <MemberSignature Language="C#" Value="string System.Web.UI.WebControls.IDataBoundControl.DataSourceID { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string System.Web.UI.WebControls.IDataBoundControl.DataSourceID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.System#Web#UI#WebControls#IDataBoundControl#DataSourceID" />
      <MemberSignature Language="VB.NET" Value=" Property DataSourceID As String Implements IDataBoundControl.DataSourceID" />
      <MemberSignature Language="C++ CLI" Value="property System::String ^ System::Web::UI::WebControls::IDataBoundControl::DataSourceID { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.System.Web.UI.WebControls.IDataBoundControl.DataSourceID : string with get, set" Usage="System.Web.UI.WebControls.IDataBoundControl.DataSourceID" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IDataBoundControl.DataSourceID</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置数据源控件的 ID，数据绑定控件从数据源控件中检索其数据项列表。</summary>
        <value>表示数据源的控件的 ID，数据绑定控件从该控件中检索其数据。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 此成员是显式接口成员的实现。 它只能在 <xref:System.Web.UI.WebControls.ListView> 实例被强制转换为 <xref:System.Web.UI.WebControls.IDataBoundControl> 接口时使用。

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IDataBoundControl.DataSourceObject">
      <MemberSignature Language="C#" Value="System.Web.UI.IDataSource System.Web.UI.WebControls.IDataBoundControl.DataSourceObject { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.IDataSource System.Web.UI.WebControls.IDataBoundControl.DataSourceObject" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.System#Web#UI#WebControls#IDataBoundControl#DataSourceObject" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property DataSourceObject As IDataSource Implements IDataBoundControl.DataSourceObject" />
      <MemberSignature Language="C++ CLI" Value="property System::Web::UI::IDataSource ^ System::Web::UI::WebControls::IDataBoundControl::DataSourceObject { System::Web::UI::IDataSource ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.System.Web.UI.WebControls.IDataBoundControl.DataSourceObject : System.Web.UI.IDataSource" Usage="System.Web.UI.WebControls.IDataBoundControl.DataSourceObject" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IDataBoundControl.DataSourceObject</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.IDataSource</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个对象，该对象实现 <see cref="T:System.Web.UI.IDataSource" /> 接口，以便提供对该对象的数据内容的访问。</summary>
        <value>数据源对象，其中包含数据绑定控件所检索到的数据项列表。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 此成员是显式接口成员的实现。 它只能在 <xref:System.Web.UI.WebControls.ListView> 实例被强制转换为 <xref:System.Web.UI.WebControls.IDataBoundControl> 接口时使用。

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IDataBoundListControl.ClientIDRowSuffix">
      <MemberSignature Language="C#" Value="string[] System.Web.UI.WebControls.IDataBoundListControl.ClientIDRowSuffix { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] System.Web.UI.WebControls.IDataBoundListControl.ClientIDRowSuffix" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.System#Web#UI#WebControls#IDataBoundListControl#ClientIDRowSuffix" />
      <MemberSignature Language="VB.NET" Value=" Property ClientIDRowSuffix As String() Implements IDataBoundListControl.ClientIDRowSuffix" />
      <MemberSignature Language="C++ CLI" Value="property cli::array &lt;System::String ^&gt; ^ System::Web::UI::WebControls::IDataBoundListControl::ClientIDRowSuffix { cli::array &lt;System::String ^&gt; ^ get(); void set(cli::array &lt;System::String ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.System.Web.UI.WebControls.IDataBoundListControl.ClientIDRowSuffix : string[] with get, set" Usage="System.Web.UI.WebControls.IDataBoundListControl.ClientIDRowSuffix" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IDataBoundListControl.ClientIDRowSuffix</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取数据字段的名称，当 <see cref="T:System.Web.UI.WebControls.ListView" /> 属性设置为 <see cref="P:System.Web.UI.Control.ClientIDMode" /> 时，这些数据字段的值用于唯一地标识 <see cref="F:System.Web.UI.ClientIDMode.Predictable" /> 控件的每个数据行。</summary>
        <value>数据字段的名称，当 ASP.NET 生成 <see cref="T:System.Web.UI.WebControls.ListView" /> 值时，这些数据字段的值用于唯一地标识 <see cref="P:System.Web.UI.Control.ClientID" /> 控件的每个实例。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 此成员是显式接口成员的实现。 它只能在 <xref:System.Web.UI.WebControls.ListView> 实例被强制转换为 <xref:System.Web.UI.IDataKeysControl> 接口时使用。

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IDataBoundListControl.DataKeys">
      <MemberSignature Language="C#" Value="System.Web.UI.WebControls.DataKeyArray System.Web.UI.WebControls.IDataBoundListControl.DataKeys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.DataKeyArray System.Web.UI.WebControls.IDataBoundListControl.DataKeys" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.System#Web#UI#WebControls#IDataBoundListControl#DataKeys" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property DataKeys As DataKeyArray Implements IDataBoundListControl.DataKeys" />
      <MemberSignature Language="C++ CLI" Value="property System::Web::UI::WebControls::DataKeyArray ^ System::Web::UI::WebControls::IDataBoundListControl::DataKeys { System::Web::UI::WebControls::DataKeyArray ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.System.Web.UI.WebControls.IDataBoundListControl.DataKeys : System.Web.UI.WebControls.DataKeyArray" Usage="System.Web.UI.WebControls.IDataBoundListControl.DataKeys" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IDataBoundListControl.DataKeys</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataKeyArray</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取数据键值的集合，这些值表示数据绑定控件中的每一行。</summary>
        <value>一个数组，其中包含数据绑定控件中每一行的数据键值。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 此成员是显式接口成员的实现。 它只能在 <xref:System.Web.UI.WebControls.ListView> 实例被强制转换为 <xref:System.Web.UI.WebControls.IDataBoundListControl> 接口时使用。

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IDataBoundListControl.EnablePersistedSelection">
      <MemberSignature Language="C#" Value="bool System.Web.UI.WebControls.IDataBoundListControl.EnablePersistedSelection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Web.UI.WebControls.IDataBoundListControl.EnablePersistedSelection" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.System#Web#UI#WebControls#IDataBoundListControl#EnablePersistedSelection" />
      <MemberSignature Language="VB.NET" Value=" Property EnablePersistedSelection As Boolean Implements IDataBoundListControl.EnablePersistedSelection" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Web::UI::WebControls::IDataBoundListControl::EnablePersistedSelection { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.System.Web.UI.WebControls.IDataBoundListControl.EnablePersistedSelection : bool with get, set" Usage="System.Web.UI.WebControls.IDataBoundListControl.EnablePersistedSelection" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IDataBoundListControl.EnablePersistedSelection</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指定当用户在逐页浏览数据绑定控件的数据时，所选行是否保持。</summary>
        <value>如果行选择基于数据键，则为 <see langword="true" />；否则为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 此成员是显式接口成员的实现。 它只能在 <xref:System.Web.UI.WebControls.ListView> 实例被强制转换为 <xref:System.Web.UI.WebControls.IDataBoundListControl> 接口时使用。

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IDataBoundListControl.SelectedDataKey">
      <MemberSignature Language="C#" Value="System.Web.UI.WebControls.DataKey System.Web.UI.WebControls.IDataBoundListControl.SelectedDataKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.DataKey System.Web.UI.WebControls.IDataBoundListControl.SelectedDataKey" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.System#Web#UI#WebControls#IDataBoundListControl#SelectedDataKey" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property SelectedDataKey As DataKey Implements IDataBoundListControl.SelectedDataKey" />
      <MemberSignature Language="C++ CLI" Value="property System::Web::UI::WebControls::DataKey ^ System::Web::UI::WebControls::IDataBoundListControl::SelectedDataKey { System::Web::UI::WebControls::DataKey ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.System.Web.UI.WebControls.IDataBoundListControl.SelectedDataKey : System.Web.UI.WebControls.DataKey" Usage="System.Web.UI.WebControls.IDataBoundListControl.SelectedDataKey" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IDataBoundListControl.SelectedDataKey</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取数据键对象，其中包含数据绑定控件中所选行的数据键值。</summary>
        <value>一个对象，其中包含数据绑定控件中所选行的数据键值。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 此成员是显式接口成员的实现。 它只能在 <xref:System.Web.UI.WebControls.ListView> 实例被强制转换为 <xref:System.Web.UI.WebControls.IDataBoundListControl> 接口时使用。

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IDataBoundListControl.SelectedIndex">
      <MemberSignature Language="C#" Value="int System.Web.UI.WebControls.IDataBoundListControl.SelectedIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 System.Web.UI.WebControls.IDataBoundListControl.SelectedIndex" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.System#Web#UI#WebControls#IDataBoundListControl#SelectedIndex" />
      <MemberSignature Language="VB.NET" Value=" Property SelectedIndex As Integer Implements IDataBoundListControl.SelectedIndex" />
      <MemberSignature Language="C++ CLI" Value="property int System::Web::UI::WebControls::IDataBoundListControl::SelectedIndex { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.System.Web.UI.WebControls.IDataBoundListControl.SelectedIndex : int with get, set" Usage="System.Web.UI.WebControls.IDataBoundListControl.SelectedIndex" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IDataBoundListControl.SelectedIndex</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置数据绑定控件中所选行的索引。</summary>
        <value>数据绑定控件中所选行的索引。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 此成员是显式接口成员的实现。 它只能在 <xref:System.Web.UI.WebControls.ListView> 实例被强制转换为 <xref:System.Web.UI.WebControls.IDataBoundListControl> 接口时使用。

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IPageableItemContainer.MaximumRows">
      <MemberSignature Language="C#" Value="int System.Web.UI.WebControls.IPageableItemContainer.MaximumRows { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 System.Web.UI.WebControls.IPageableItemContainer.MaximumRows" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.System#Web#UI#WebControls#IPageableItemContainer#MaximumRows" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property MaximumRows As Integer Implements IPageableItemContainer.MaximumRows" />
      <MemberSignature Language="C++ CLI" Value="property int System::Web::UI::WebControls::IPageableItemContainer::MaximumRows { int get(); };" />
      <MemberSignature Language="F#" Value="member this.System.Web.UI.WebControls.IPageableItemContainer.MaximumRows : int" Usage="System.Web.UI.WebControls.IPageableItemContainer.MaximumRows" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IPageableItemContainer.MaximumRows</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>有关此成员的说明，请参见 <see cref="P:System.Web.UI.WebControls.IPageableItemContainer.MaximumRows" />。</summary>
        <value>要在 <see cref="T:System.Web.UI.WebControls.ListView" /> 控件的单个页上显示的最大项数。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.ListView.System%23Web%23UI%23WebControls%23IPageableItemContainer%23MaximumRows%2A>属性使用属性的值 <xref:System.Web.UI.WebControls.ListView.MaximumRows%2A> 来获取要在单个页面上显示的最大项数。

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ListView.MaximumRows" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/bb398790(v=vs.100)">ListView Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IPageableItemContainer.SetPageProperties">
      <MemberSignature Language="C#" Value="void IPageableItemContainer.SetPageProperties (int startRowIndex, int maximumRows, bool databind);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.WebControls.IPageableItemContainer.SetPageProperties(int32 startRowIndex, int32 maximumRows, bool databind) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.System#Web#UI#WebControls#IPageableItemContainer#SetPageProperties(System.Int32,System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Sub SetPageProperties (startRowIndex As Integer, maximumRows As Integer, databind As Boolean) Implements IPageableItemContainer.SetPageProperties" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.WebControls.IPageableItemContainer.SetPageProperties(int startRowIndex, int maximumRows, bool databind) = System::Web::UI::WebControls::IPageableItemContainer::SetPageProperties;" />
      <MemberSignature Language="F#" Value="abstract member System.Web.UI.WebControls.IPageableItemContainer.SetPageProperties : int * int * bool -&gt; unit&#xA;override this.System.Web.UI.WebControls.IPageableItemContainer.SetPageProperties : int * int * bool -&gt; unit" Usage="listView.System.Web.UI.WebControls.IPageableItemContainer.SetPageProperties (startRowIndex, maximumRows, databind)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.WebControls.IPageableItemContainer.SetPageProperties(System.Int32,System.Int32,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startRowIndex" Type="System.Int32" />
        <Parameter Name="maximumRows" Type="System.Int32" />
        <Parameter Name="databind" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="startRowIndex">页面中第一条记录的索引。</param>
        <param name="maximumRows">单个页面上的最大项数。</param>
        <param name="databind">如果设置属性后重新绑定控件，则为 <see langword="true" />；否则为 <see langword="false" />。</param>
        <summary>有关此成员的说明，请参见 <see cref="M:System.Web.UI.WebControls.IPageableItemContainer.SetPageProperties(System.Int32,System.Int32,System.Boolean)" />。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.ListView.System%23Web%23UI%23WebControls%23IPageableItemContainer%23SetPageProperties%2A>方法调用控件的 <xref:System.Web.UI.WebControls.ListView.SetPageProperties%2A> 方法 <xref:System.Web.UI.WebControls.ListView> 来设置页面属性。

 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.ListView.SetPageProperties(System.Int32,System.Int32,System.Boolean)" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/bb398790(v=vs.100)">ListView Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IPageableItemContainer.StartRowIndex">
      <MemberSignature Language="C#" Value="int System.Web.UI.WebControls.IPageableItemContainer.StartRowIndex { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 System.Web.UI.WebControls.IPageableItemContainer.StartRowIndex" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.System#Web#UI#WebControls#IPageableItemContainer#StartRowIndex" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property StartRowIndex As Integer Implements IPageableItemContainer.StartRowIndex" />
      <MemberSignature Language="C++ CLI" Value="property int System::Web::UI::WebControls::IPageableItemContainer::StartRowIndex { int get(); };" />
      <MemberSignature Language="F#" Value="member this.System.Web.UI.WebControls.IPageableItemContainer.StartRowIndex : int" Usage="System.Web.UI.WebControls.IPageableItemContainer.StartRowIndex" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IPageableItemContainer.StartRowIndex</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>有关此成员的说明，请参见 <see cref="P:System.Web.UI.WebControls.IPageableItemContainer.StartRowIndex" />。</summary>
        <value><see cref="T:System.Web.UI.WebControls.ListView" /> 控件中的数据页上显示的第一条记录的索引。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.ListView.System%23Web%23UI%23WebControls%23IPageableItemContainer%23StartRowIndex%2A>属性使用属性的值 <xref:System.Web.UI.WebControls.ListView.StartRowIndex%2A> 来获取页面上显示的第一条记录的索引。

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ListView.StartRowIndex" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/bb398790(v=vs.100)">ListView Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IPageableItemContainer.TotalRowCountAvailable">
      <MemberSignature Language="C#" Value="event EventHandler&lt;System.Web.UI.WebControls.PageEventArgs&gt; System.Web.UI.WebControls.IPageableItemContainer.TotalRowCountAvailable;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Web.UI.WebControls.PageEventArgs&gt; System.Web.UI.WebControls.IPageableItemContainer.TotalRowCountAvailable" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ListView.System#Web#UI#WebControls#IPageableItemContainer#TotalRowCountAvailable" />
      <MemberSignature Language="VB.NET" Value="Custom Event TotalRowCountAvailable As EventHandler(Of PageEventArgs) Implements System.Web.UI.WebControls.IPageableItemContainer" />
      <MemberSignature Language="F#" Value="member this.System.Web.UI.WebControls.IPageableItemContainer.TotalRowCountAvailable : EventHandler&lt;System.Web.UI.WebControls.PageEventArgs&gt; " Usage="member this.System.Web.UI.WebControls.IPageableItemContainer.TotalRowCountAvailable : System.EventHandler&lt;System.Web.UI.WebControls.PageEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Web.UI.WebControls.IPageableItemContainer.TotalRowCountAvailable</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Web.UI.WebControls.PageEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>有关此成员的说明，请参见 <see cref="E:System.Web.UI.WebControls.IPageableItemContainer.TotalRowCountAvailable" />。</summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/bb398790(v=vs.100)">ListView Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IPersistedSelector.DataKey">
      <MemberSignature Language="C#" Value="System.Web.UI.WebControls.DataKey System.Web.UI.WebControls.IPersistedSelector.DataKey { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.DataKey System.Web.UI.WebControls.IPersistedSelector.DataKey" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.System#Web#UI#WebControls#IPersistedSelector#DataKey" />
      <MemberSignature Language="VB.NET" Value=" Property DataKey As DataKey Implements IPersistedSelector.DataKey" />
      <MemberSignature Language="C++ CLI" Value="property System::Web::UI::WebControls::DataKey ^ System::Web::UI::WebControls::IPersistedSelector::DataKey { System::Web::UI::WebControls::DataKey ^ get(); void set(System::Web::UI::WebControls::DataKey ^ value); };" />
      <MemberSignature Language="F#" Value="member this.System.Web.UI.WebControls.IPersistedSelector.DataKey : System.Web.UI.WebControls.DataKey with get, set" Usage="System.Web.UI.WebControls.IPersistedSelector.DataKey" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IPersistedSelector.DataKey</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置数据绑定控件中所选记录的数据键值。</summary>
        <value>数据绑定控件中所选记录的数据键值。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 此成员是显式接口成员的实现。 它只能在 <xref:System.Web.UI.WebControls.ListView> 实例被强制转换为 <xref:System.Web.UI.WebControls.IPersistedSelector> 接口时使用。

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TabIndex">
      <MemberSignature Language="C#" Value="public override short TabIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int16 TabIndex" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.TabIndex" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property TabIndex As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property short TabIndex { short get(); void set(short value); };" />
      <MemberSignature Language="F#" Value="member this.TabIndex : int16 with get, set" Usage="System.Web.UI.WebControls.ListView.TabIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>重写 <see cref="P:System.Web.UI.WebControls.WebControl.TabIndex" /> 属性。 <see cref="T:System.Web.UI.WebControls.ListView" /> 控件不支持设置此属性。</summary>
        <value><see langword="0" />，表示该属性未设置。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 控件不支持样式属性 <xref:System.Web.UI.WebControls.ListView> 。 如果尝试设置该 <xref:System.Web.UI.WebControls.ListView.TabIndex%2A> 属性，则 <xref:System.NotSupportedException> 会引发异常。 如果获得属性，它将返回基类的相应属性的默认值。

 若要为 <xref:System.Web.UI.WebControls.ListView> 控件的样式，必须 <xref:System.Web.UI.WebControls.ListView> 使用级联样式表 (CSS) 类或内联样式元素来为模板内的控件制定样式。

 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">已尝试设置 <see cref="P:System.Web.UI.WebControls.ListView.TabIndex" /> 属性。</exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/bb398790(v=vs.100)">ListView Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="ToolTip">
      <MemberSignature Language="C#" Value="public override string ToolTip { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ToolTip" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.ToolTip" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ToolTip As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ToolTip { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ToolTip : string with get, set" Usage="System.Web.UI.WebControls.ListView.ToolTip" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>重写 <see cref="P:System.Web.UI.WebControls.WebControl.ToolTip" /> 属性。 <see cref="T:System.Web.UI.WebControls.ListView" /> 控件不支持设置此属性。</summary>
        <value><see cref="F:System.String.Empty" />，表示该属性未设置。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 控件不支持样式属性 <xref:System.Web.UI.WebControls.ListView> 。 如果尝试设置该 <xref:System.Web.UI.WebControls.ListView.ToolTip%2A> 属性，则 <xref:System.NotSupportedException> 会引发异常。 如果获得属性，它将返回基类的相应属性的默认值。

 若要为 <xref:System.Web.UI.WebControls.ListView> 控件的样式，必须 <xref:System.Web.UI.WebControls.ListView> 使用级联样式表 (CSS) 类或内联样式元素来为模板内的控件制定样式。

 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">已尝试设置 <see cref="P:System.Web.UI.WebControls.ListView.ToolTip" /> 属性。</exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/bb398790(v=vs.100)">ListView Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="UpdateItem">
      <MemberSignature Language="C#" Value="public virtual void UpdateItem (int itemIndex, bool causesValidation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UpdateItem(int32 itemIndex, bool causesValidation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.UpdateItem(System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub UpdateItem (itemIndex As Integer, causesValidation As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void UpdateItem(int itemIndex, bool causesValidation);" />
      <MemberSignature Language="F#" Value="abstract member UpdateItem : int * bool -&gt; unit&#xA;override this.UpdateItem : int * bool -&gt; unit" Usage="listView.UpdateItem (itemIndex, causesValidation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemIndex" Type="System.Int32" />
        <Parameter Name="causesValidation" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="itemIndex">要更新的项的索引。</param>
        <param name="causesValidation"><see langword="true" /> 表示在调用此方法时执行页面验证；否则为 <see langword="false" />。</param>
        <summary>更新数据源中指定索引处的记录。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 使用 <xref:System.Web.UI.WebControls.ListView.UpdateItem%2A> 方法以编程方式更新数据源中指定索引处的记录。 如果要从控件以外的 <xref:System.Web.UI.WebControls.ListView> 其他控件（如页面上的其他控件）更新记录，通常使用此方法。

> [!NOTE]
>  只能为包含双向数据绑定输入控件的项调用此方法。 有关双向绑定表达式的详细信息，请参阅 [绑定到数据库](https://docs.microsoft.com/previous-versions/aspnet/ms178361(v=vs.100))。

 若要指定在更新操作之前是否执行页验证，请使用 `causesValidation` 参数。

 此方法引发 <xref:System.Web.UI.WebControls.ListView.ItemUpdated> 和 <xref:System.Web.UI.WebControls.ListView.ItemUpdating> 事件。



## Examples
 下面的示例演示如何使用 <xref:System.Web.UI.WebControls.ListView.UpdateItem%2A> 方法以编程方式更新 <xref:System.Web.UI.WebControls.ListView> 数据源中的项。

 [!code-aspx-csharp[System.Web.UI.WebControls.ListView.UpdateItem#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.UpdateItem/CS/ListViewUpdateItemCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ListView.UpdateItem#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.UpdateItem/VB/ListViewUpdateItemVB.aspx#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><paramref name="itemIndex" /> 小于 0。

- 或 -

与 <see cref="T:System.Web.UI.DataSourceView" /> 控件相关联的 <see cref="T:System.Web.UI.WebControls.ListView" /> 对象为 <see langword="null" />。</exception>
        <altmember cref="P:System.Web.UI.WebControls.ListView.EditItemTemplate" />
        <altmember cref="M:System.Web.UI.WebControls.ListView.DeleteItem(System.Int32)" />
        <altmember cref="M:System.Web.UI.WebControls.ListView.InsertNewItem(System.Boolean)" />
        <altmember cref="E:System.Web.UI.WebControls.ListView.ItemUpdated" />
        <altmember cref="E:System.Web.UI.WebControls.ListView.ItemUpdating" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/bb398790(v=vs.100)">ListView Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="UpdateMethod">
      <MemberSignature Language="C#" Value="public virtual string UpdateMethod { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UpdateMethod" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.UpdateMethod" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property UpdateMethod As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ UpdateMethod { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.UpdateMethod : string with get, set" Usage="System.Web.UI.WebControls.ListView.UpdateMethod" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue("")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue("")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Web.UI.Themeable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.Themeable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Web.WebCategory("Data")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.WebCategory("Data")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Web.WebSysDescription("DataBoundControl_UpdateMethod")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.WebSysDescription("DataBoundControl_UpdateMethod")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置为了更新数据要调用的方法的名称。</summary>
        <value>方法的名称。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 设置此属性将导致模型绑定用作数据绑定方法。

 有关如何在 Web 窗体中使用模型绑定的教程系列，请参阅 [模型绑定和 Web 窗体](/aspnet/web-forms/overview/presenting-and-managing-data/model-binding/retrieving-data)。

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Width">
      <MemberSignature Language="C#" Value="public override System.Web.UI.WebControls.Unit Width { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.Unit Width" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.Width" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Width As Unit" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::Unit Width { System::Web::UI::WebControls::Unit get(); void set(System::Web::UI::WebControls::Unit value); };" />
      <MemberSignature Language="F#" Value="member this.Width : System.Web.UI.WebControls.Unit with get, set" Usage="System.Web.UI.WebControls.ListView.Width" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Unit</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>重写 <see cref="P:System.Web.UI.WebControls.WebControl.Width" /> 属性。 <see cref="T:System.Web.UI.WebControls.ListView" /> 控件不支持设置此属性。</summary>
        <value><see cref="F:System.Web.UI.WebControls.Unit.Empty" />，表示该属性未设置。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 控件不支持样式属性 <xref:System.Web.UI.WebControls.ListView> 。 如果尝试设置该 <xref:System.Web.UI.WebControls.ListView.Width%2A> 属性，则 <xref:System.NotSupportedException> 会引发异常。 如果获得属性，它将返回基类的相应属性的默认值。

 若要为 <xref:System.Web.UI.WebControls.ListView> 控件的样式，必须 <xref:System.Web.UI.WebControls.ListView> 使用级联样式表 (CSS) 类或内联样式元素来为模板内的控件制定样式。

 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">已尝试设置 <see cref="P:System.Web.UI.WebControls.ListView.Width" /> 属性。</exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/bb398790(v=vs.100)">ListView Web 服务器控件</related>
      </Docs>
    </Member>
  </Members>
</Type>
