<Type Name="LinqDataSourceStatusEventArgs" FullName="System.Web.UI.WebControls.LinqDataSourceStatusEventArgs">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e940508145d13b95d32449ef2b4a679fb2ac81ac" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86627002" /></Metadata><TypeSignature Language="C#" Value="public class LinqDataSourceStatusEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit LinqDataSourceStatusEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class LinqDataSourceStatusEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class LinqDataSourceStatusEventArgs : EventArgs" />
  <TypeSignature Language="F#" Value="type LinqDataSourceStatusEventArgs = class&#xA;    inherit EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="1cb9a-101">为 <see cref="E:System.Web.UI.WebControls.LinqDataSource.ContextCreated" />、<see cref="E:System.Web.UI.WebControls.LinqDataSource.Deleted" />、<see cref="E:System.Web.UI.WebControls.LinqDataSource.Inserted" />、<see cref="E:System.Web.UI.WebControls.LinqDataSource.Selected" /> 和 <see cref="E:System.Web.UI.WebControls.LinqDataSource.Updated" /> 事件提供数据。</span><span class="sxs-lookup"><span data-stu-id="1cb9a-101">Provides data for the <see cref="E:System.Web.UI.WebControls.LinqDataSource.ContextCreated" />, <see cref="E:System.Web.UI.WebControls.LinqDataSource.Deleted" />, <see cref="E:System.Web.UI.WebControls.LinqDataSource.Inserted" />, <see cref="E:System.Web.UI.WebControls.LinqDataSource.Selected" />, and <see cref="E:System.Web.UI.WebControls.LinqDataSource.Updated" /> events.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1cb9a-102"><xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs>利用类，您可以检查由控件执行的数据操作的结果 <xref:System.Web.UI.WebControls.LinqDataSource> 。</span><span class="sxs-lookup"><span data-stu-id="1cb9a-102">The <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs> class enables you to examine the results of data operations that have been performed by a <xref:System.Web.UI.WebControls.LinqDataSource> control.</span></span> <span data-ttu-id="1cb9a-103"><xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs>对象传递给控件的、、、和事件的事件处理程序 <xref:System.Web.UI.WebControls.LinqDataSource.ContextCreated> <xref:System.Web.UI.WebControls.LinqDataSource.Deleted> <xref:System.Web.UI.WebControls.LinqDataSource.Inserted> <xref:System.Web.UI.WebControls.LinqDataSource.Selected> <xref:System.Web.UI.WebControls.LinqDataSource.Updated> <xref:System.Web.UI.WebControls.LinqDataSource> 。</span><span class="sxs-lookup"><span data-stu-id="1cb9a-103">A <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs> object is passed to event handlers for the <xref:System.Web.UI.WebControls.LinqDataSource.ContextCreated>, <xref:System.Web.UI.WebControls.LinqDataSource.Deleted>, <xref:System.Web.UI.WebControls.LinqDataSource.Inserted>, <xref:System.Web.UI.WebControls.LinqDataSource.Selected>, and <xref:System.Web.UI.WebControls.LinqDataSource.Updated> events of the <xref:System.Web.UI.WebControls.LinqDataSource> control.</span></span>  
  
 <span data-ttu-id="1cb9a-104">如果数据操作成功完成，则生成的数据对象存储在属性中 <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A> ， <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> 属性为 `null` 。</span><span class="sxs-lookup"><span data-stu-id="1cb9a-104">If the data operation completed successfully, the resulting data object is stored in the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A> property and the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> property is `null`.</span></span> <span data-ttu-id="1cb9a-105">如果数据操作失败，则在数据操作过程中发生的异常将存储在属性中， <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> 而 <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A> 属性为 `null` 。</span><span class="sxs-lookup"><span data-stu-id="1cb9a-105">If the data operation failed, the exception that occurred during the data operation is stored in the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> property and the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A> property is `null`.</span></span> <span data-ttu-id="1cb9a-106">如果处理了由属性表示的异常 <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> ，则将 <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.ExceptionHandled%2A> 属性设置为， `true` 以便不会引发异常。</span><span class="sxs-lookup"><span data-stu-id="1cb9a-106">If you handled the exception represented by the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> property, set the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.ExceptionHandled%2A> property to `true` so that the exception will not be thrown.</span></span>  
  
 <span data-ttu-id="1cb9a-107">您可以通过属性检索查询返回的数据记录总数 <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount%2A> 。</span><span class="sxs-lookup"><span data-stu-id="1cb9a-107">You retrieve the total number of data records returned from a query through the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1cb9a-108">下面的示例演示事件的事件处理程序 <xref:System.Web.UI.WebControls.LinqDataSource.Inserted> 。</span><span class="sxs-lookup"><span data-stu-id="1cb9a-108">The following example shows an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Inserted> event.</span></span> <span data-ttu-id="1cb9a-109">在事件处理程序中，如果 <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> 属性为 `null` ，则从属性中的对象检索产品 ID <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A> 。</span><span class="sxs-lookup"><span data-stu-id="1cb9a-109">In the event handler, if the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> property is `null`, the product ID is retrieved from the object in the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A> property.</span></span> <span data-ttu-id="1cb9a-110">Product ID 是表的主键，由数据库进行设置，因此，在完成插入操作之前值是未知的。</span><span class="sxs-lookup"><span data-stu-id="1cb9a-110">The product ID is a primary key for the table and is set by the database, therefore the value is not known until the insert operation has finished.</span></span> <span data-ttu-id="1cb9a-111">如果该属性不等于，则记录异常消息 <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> `null` 。</span><span class="sxs-lookup"><span data-stu-id="1cb9a-111">The exception message is logged if the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> property is not equal to `null`.</span></span> <span data-ttu-id="1cb9a-112"><xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.ExceptionHandled%2A>然后将属性设置为 `true` 。</span><span class="sxs-lookup"><span data-stu-id="1cb9a-112">The <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.ExceptionHandled%2A> property is then set to `true`.</span></span>  
  
 [!code-csharp[System.Web.UI.WebControls.LinqDataSourceStatusEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSourceStatusEventArgs/cs/Default.aspx#1)]
 [!code-vb[System.Web.UI.WebControls.LinqDataSourceStatusEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSourceStatusEventArgs/vb/Default.aspx#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="1cb9a-113">初始化 <see cref="T:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="1cb9a-113">Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LinqDataSourceStatusEventArgs (Exception exception);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Exception exception) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.#ctor(System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (exception As Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LinqDataSourceStatusEventArgs(Exception ^ exception);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.LinqDataSourceStatusEventArgs : Exception -&gt; System.Web.UI.WebControls.LinqDataSourceStatusEventArgs" Usage="new System.Web.UI.WebControls.LinqDataSourceStatusEventArgs exception" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="exception" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="exception"><span data-ttu-id="1cb9a-114">在数据操作过程中发生的错误。</span><span class="sxs-lookup"><span data-stu-id="1cb9a-114">The error that occurred during the data operation.</span></span></param>
        <summary><span data-ttu-id="1cb9a-115">使用数据操作所引发的异常初始化 <see cref="T:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="1cb9a-115">Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs" /> class by using an exception that occurred as a result of the data operation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1cb9a-116">在数据操作过程中引发异常时，将使用此构造函数。</span><span class="sxs-lookup"><span data-stu-id="1cb9a-116">This constructor is used when an exception is thrown during the data operation.</span></span> <span data-ttu-id="1cb9a-117"><xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A>属性自动设置为 `null` 。</span><span class="sxs-lookup"><span data-stu-id="1cb9a-117">The <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A> property is automatically set to `null`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LinqDataSourceStatusEventArgs (object result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.#ctor(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (result As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LinqDataSourceStatusEventArgs(System::Object ^ result);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.LinqDataSourceStatusEventArgs : obj -&gt; System.Web.UI.WebControls.LinqDataSourceStatusEventArgs" Usage="new System.Web.UI.WebControls.LinqDataSourceStatusEventArgs result" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="result" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="result"><span data-ttu-id="1cb9a-118">包含数据操作结果数据的对象。</span><span class="sxs-lookup"><span data-stu-id="1cb9a-118">An object that contains the data that results from a data operation.</span></span></param>
        <summary><span data-ttu-id="1cb9a-119">使用包含数据操作结果数据的对象初始化 <see cref="T:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="1cb9a-119">Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs" /> class by using an object that contains the data from the data operation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1cb9a-120">此构造函数在数据操作完成且未发生错误时使用。</span><span class="sxs-lookup"><span data-stu-id="1cb9a-120">This constructor is used when the data operation has finished without an error.</span></span> <span data-ttu-id="1cb9a-121">`result`参数包含一个对象，该对象表示数据操作的结果。</span><span class="sxs-lookup"><span data-stu-id="1cb9a-121">The `result` parameter contains an object that represents the result of the data operation.</span></span> <span data-ttu-id="1cb9a-122"><xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A>属性自动设置为 `null` 。</span><span class="sxs-lookup"><span data-stu-id="1cb9a-122">The <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> property is automatically set to `null`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LinqDataSourceStatusEventArgs (object result, int totalRowCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object result, int32 totalRowCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.#ctor(System.Object,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (result As Object, totalRowCount As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LinqDataSourceStatusEventArgs(System::Object ^ result, int totalRowCount);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.LinqDataSourceStatusEventArgs : obj * int -&gt; System.Web.UI.WebControls.LinqDataSourceStatusEventArgs" Usage="new System.Web.UI.WebControls.LinqDataSourceStatusEventArgs (result, totalRowCount)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="result" Type="System.Object" />
        <Parameter Name="totalRowCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="result"><span data-ttu-id="1cb9a-123">包含数据操作结果数据的对象。</span><span class="sxs-lookup"><span data-stu-id="1cb9a-123">An object that contains the data that results from a data operation.</span></span></param>
        <param name="totalRowCount"><span data-ttu-id="1cb9a-124">数据检索操作返回的行数。</span><span class="sxs-lookup"><span data-stu-id="1cb9a-124">The number of rows that were returned from a data retrieval operation.</span></span></param>
        <summary><span data-ttu-id="1cb9a-125">使用包含数据操作结果数据以及返回的行数的对象初始化 <see cref="T:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="1cb9a-125">Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs" /> class with an object that contains the data from the data operation and the number of rows returned.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Exception">
      <MemberSignature Language="C#" Value="public Exception Exception { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Exception Exception" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Exception As Exception" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Exception ^ Exception { Exception ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Exception : Exception" Usage="System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1cb9a-126">获取在数据操作过程中引发的异常。</span><span class="sxs-lookup"><span data-stu-id="1cb9a-126">Gets the exception that was thrown during the data operation.</span></span></summary>
        <value><span data-ttu-id="1cb9a-127">如果出现错误，则为表示异常的 <see cref="T:System.Exception" /> 对象；否则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="1cb9a-127">An <see cref="T:System.Exception" /> object that represents the exception, if an error occurred; otherwise, <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1cb9a-128">如果在数据操作过程中引发了异常，则该异常将存储在 <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> 属性中。</span><span class="sxs-lookup"><span data-stu-id="1cb9a-128">If an exception is raised during the data operation, the exception is stored in the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> property.</span></span> <span data-ttu-id="1cb9a-129">可以为、、、和事件创建事件处理程序， <xref:System.Web.UI.WebControls.LinqDataSource.ContextCreated> <xref:System.Web.UI.WebControls.LinqDataSource.Deleted> <xref:System.Web.UI.WebControls.LinqDataSource.Inserted> <xref:System.Web.UI.WebControls.LinqDataSource.Selected> <xref:System.Web.UI.WebControls.LinqDataSource.Updated> 并通过属性检索异常（如果有） <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> 。</span><span class="sxs-lookup"><span data-stu-id="1cb9a-129">You can create event handlers for the <xref:System.Web.UI.WebControls.LinqDataSource.ContextCreated>, <xref:System.Web.UI.WebControls.LinqDataSource.Deleted>, <xref:System.Web.UI.WebControls.LinqDataSource.Inserted>, <xref:System.Web.UI.WebControls.LinqDataSource.Selected>, and <xref:System.Web.UI.WebControls.LinqDataSource.Updated> events and retrieve the exception, if any, through the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1cb9a-130">下面的示例演示事件的事件处理程序 <xref:System.Web.UI.WebControls.LinqDataSource.Inserted> 。</span><span class="sxs-lookup"><span data-stu-id="1cb9a-130">The following example shows an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Inserted> event.</span></span> <span data-ttu-id="1cb9a-131">在事件处理程序中，如果 <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> 属性为 `null` ，则从属性中的对象检索产品 ID <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A> 。</span><span class="sxs-lookup"><span data-stu-id="1cb9a-131">In the event handler, if the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> property is `null`, the product ID is retrieved from the object in the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A> property.</span></span> <span data-ttu-id="1cb9a-132">产品 ID 是表的主键，由数据库进行设置，因此在插入操作完成前，值是未知的。</span><span class="sxs-lookup"><span data-stu-id="1cb9a-132">The product ID is a primary key for the table and is set by the database, so the value is not known until the insert operation has finished.</span></span> <span data-ttu-id="1cb9a-133">如果该属性不等于，则记录异常消息 <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> `null` 。</span><span class="sxs-lookup"><span data-stu-id="1cb9a-133">The exception message is logged if the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> property is not equal to `null`.</span></span> <span data-ttu-id="1cb9a-134"><xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.ExceptionHandled%2A>然后将属性设置为 `true` 。</span><span class="sxs-lookup"><span data-stu-id="1cb9a-134">The <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.ExceptionHandled%2A> property is then set to `true`.</span></span>  
  
 [!code-csharp[System.Web.UI.WebControls.LinqDataSourceStatusEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSourceStatusEventArgs/cs/Default.aspx#1)]
 [!code-vb[System.Web.UI.WebControls.LinqDataSourceStatusEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSourceStatusEventArgs/vb/Default.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExceptionHandled">
      <MemberSignature Language="C#" Value="public bool ExceptionHandled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ExceptionHandled" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.ExceptionHandled" />
      <MemberSignature Language="VB.NET" Value="Public Property ExceptionHandled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ExceptionHandled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ExceptionHandled : bool with get, set" Usage="System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.ExceptionHandled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1cb9a-135">获取或设置一个值，该值指示异常是否已得到处理而不该再次引发。</span><span class="sxs-lookup"><span data-stu-id="1cb9a-135">Gets or sets a value that indicates whether the exception was handled and that it should not be thrown again.</span></span></summary>
        <value><span data-ttu-id="1cb9a-136">如果异常已得到处理，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="1cb9a-136"><see langword="true" /> if the exception was handled; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1cb9a-137">您可以为、、、和事件创建事件处理程序 <xref:System.Web.UI.WebControls.LinqDataSource.ContextCreated> ， <xref:System.Web.UI.WebControls.LinqDataSource.Deleted> <xref:System.Web.UI.WebControls.LinqDataSource.Inserted> <xref:System.Web.UI.WebControls.LinqDataSource.Selected> <xref:System.Web.UI.WebControls.LinqDataSource.Updated> 以检查这些操作期间发生的任何异常。</span><span class="sxs-lookup"><span data-stu-id="1cb9a-137">You can create event handlers for the <xref:System.Web.UI.WebControls.LinqDataSource.ContextCreated>, <xref:System.Web.UI.WebControls.LinqDataSource.Deleted>, <xref:System.Web.UI.WebControls.LinqDataSource.Inserted>, <xref:System.Web.UI.WebControls.LinqDataSource.Selected>, and <xref:System.Web.UI.WebControls.LinqDataSource.Updated> events to examine any exceptions that occurred during those operations.</span></span> <span data-ttu-id="1cb9a-138">如果处理异常，而不希望再次引发异常，则将 <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.ExceptionHandled%2A> 属性设置为 `true` 。</span><span class="sxs-lookup"><span data-stu-id="1cb9a-138">If you handle the exception and do not want it to be thrown again, set the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.ExceptionHandled%2A> property to `true`.</span></span> <span data-ttu-id="1cb9a-139">如果未将 <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.ExceptionHandled%2A> 属性设置为，则 `true` 异常将传播到调用堆栈中的下一个事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="1cb9a-139">If you do not set the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.ExceptionHandled%2A> property to `true`, the exception will be propagated to the next event handler in the call stack.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1cb9a-140">下面的示例演示事件的事件处理程序 <xref:System.Web.UI.WebControls.LinqDataSource.Inserted> 。</span><span class="sxs-lookup"><span data-stu-id="1cb9a-140">The following example shows an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Inserted> event.</span></span> <span data-ttu-id="1cb9a-141">在事件处理程序中，如果 <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> 属性为 `null` ，则从属性中的对象检索产品 ID <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A> 。</span><span class="sxs-lookup"><span data-stu-id="1cb9a-141">In the event handler, if the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> property is `null`, the product ID is retrieved from the object in the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A> property.</span></span> <span data-ttu-id="1cb9a-142">Product ID 是表的主键，由数据库进行设置，因此，在完成插入操作之前值是未知的。</span><span class="sxs-lookup"><span data-stu-id="1cb9a-142">The product ID is a primary key for the table and is set by the database, therefore the value is not known until the insert operation has finished.</span></span> <span data-ttu-id="1cb9a-143">如果该属性不等于，则记录异常消息 <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> `null` 。</span><span class="sxs-lookup"><span data-stu-id="1cb9a-143">The exception message is logged if the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> property is not equal to `null`.</span></span> <span data-ttu-id="1cb9a-144"><xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.ExceptionHandled%2A>然后将属性设置为 `true` 。</span><span class="sxs-lookup"><span data-stu-id="1cb9a-144">The <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.ExceptionHandled%2A> property is then set to `true`.</span></span>  
  
 [!code-csharp[System.Web.UI.WebControls.LinqDataSourceStatusEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSourceStatusEventArgs/cs/Default.aspx#1)]
 [!code-vb[System.Web.UI.WebControls.LinqDataSourceStatusEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSourceStatusEventArgs/vb/Default.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Result">
      <MemberSignature Language="C#" Value="public object Result { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Result" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Result As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Result { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Result : obj" Usage="System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1cb9a-145">获取表示数据操作结果的对象。</span><span class="sxs-lookup"><span data-stu-id="1cb9a-145">Gets the object that represents the result of a data operation.</span></span></summary>
        <value><span data-ttu-id="1cb9a-146">包含数据操作结果数据的对象。</span><span class="sxs-lookup"><span data-stu-id="1cb9a-146">An object that contains the data from the data operation.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1cb9a-147">使用 <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A> 属性来检查从数据操作返回的值。</span><span class="sxs-lookup"><span data-stu-id="1cb9a-147">You use the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A> property to examine values returned from a data operation.</span></span> <span data-ttu-id="1cb9a-148">可以从数据操作检索输出参数，或修改从查询返回的值。</span><span class="sxs-lookup"><span data-stu-id="1cb9a-148">You can retrieve output parameters from a data operation or modify the values returned from a query.</span></span>  
  
 <span data-ttu-id="1cb9a-149">存储在属性中的数据 <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A> 取决于已执行的数据操作的类型。</span><span class="sxs-lookup"><span data-stu-id="1cb9a-149">The data stored in the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A> property depends on the type of data operation that has been performed.</span></span> <span data-ttu-id="1cb9a-150">删除数据时， <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A> 属性包含属性中指定的类型的对象 <xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A> 以及从数据源中删除的原始值。</span><span class="sxs-lookup"><span data-stu-id="1cb9a-150">When you delete data, the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A> property contains an object of the type specified in the <xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A> property, with the original values that were deleted from the data source.</span></span> <span data-ttu-id="1cb9a-151">在插入或更新数据时， <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A> 属性包含在属性中指定的类型的对象 <xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A> ，其中包含已保存到数据源的新值。</span><span class="sxs-lookup"><span data-stu-id="1cb9a-151">When you insert or update data, the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A> property contains an object of the type specified in the <xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A> property, with the new values that were saved to the data source.</span></span> <span data-ttu-id="1cb9a-152">选择数据时， <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A> 属性包含查询的结果。</span><span class="sxs-lookup"><span data-stu-id="1cb9a-152">When you select data, the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A> property contains the results of the query.</span></span>  
  
 <span data-ttu-id="1cb9a-153">如果选择查询涉及到分组数据或从属性中指定的类型中选择属性的子集 <xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A> ，则属性将 <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A> 包含动态创建的类型的对象。</span><span class="sxs-lookup"><span data-stu-id="1cb9a-153">If the select query involves grouping the data or selecting a subset of properties from the type specified in the <xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A> property, the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A> property contains an object of a dynamically created type.</span></span> <span data-ttu-id="1cb9a-154">否则， <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A> 属性包含属性中指定的类型的对象 <xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A> 。</span><span class="sxs-lookup"><span data-stu-id="1cb9a-154">Otherwise, the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A> property contains an object of the type specified in the <xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1cb9a-155">下面的示例演示事件的事件处理程序 <xref:System.Web.UI.WebControls.LinqDataSource.Inserted> 。</span><span class="sxs-lookup"><span data-stu-id="1cb9a-155">The following example shows an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Inserted> event.</span></span> <span data-ttu-id="1cb9a-156">在事件处理程序中，如果 <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> 属性为 `null` ，则从属性中的对象检索产品 ID <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A> 。</span><span class="sxs-lookup"><span data-stu-id="1cb9a-156">In the event handler, if the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> property is `null`, the product ID is retrieved from the object in the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A> property.</span></span> <span data-ttu-id="1cb9a-157">Product ID 是表的主键，由数据库进行设置，因此，在完成插入操作之前值是未知的。</span><span class="sxs-lookup"><span data-stu-id="1cb9a-157">The product ID is a primary key for the table and is set by the database, therefore the value is not known until the insert operation has finished.</span></span> <span data-ttu-id="1cb9a-158">如果该属性不等于，则记录异常消息 <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> `null` 。</span><span class="sxs-lookup"><span data-stu-id="1cb9a-158">The exception message is logged if the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> property is not equal to `null`.</span></span> <span data-ttu-id="1cb9a-159"><xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.ExceptionHandled%2A>然后将属性设置为 `true` 。</span><span class="sxs-lookup"><span data-stu-id="1cb9a-159">The <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.ExceptionHandled%2A> property is then set to `true`.</span></span>  
  
 [!code-csharp[System.Web.UI.WebControls.LinqDataSourceStatusEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSourceStatusEventArgs/cs/Default.aspx#1)]
 [!code-vb[System.Web.UI.WebControls.LinqDataSourceStatusEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSourceStatusEventArgs/vb/Default.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TotalRowCount">
      <MemberSignature Language="C#" Value="public int TotalRowCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 TotalRowCount" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TotalRowCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int TotalRowCount { int get(); };" />
      <MemberSignature Language="F#" Value="member this.TotalRowCount : int" Usage="System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1cb9a-160">获取数据检索操作过程中在某个数据集中检索的总行数。</span><span class="sxs-lookup"><span data-stu-id="1cb9a-160">Gets the total number of rows in a data set from a data-retrieval operation.</span></span></summary>
        <value><span data-ttu-id="1cb9a-161">数据检索操作过程中在某个数据集中检索的总行数；如果 <see cref="T:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs" /> 对象是在数据修改操作过程中创建的，则为 -1；如果通过将 <see cref="P:System.Web.UI.WebControls.LinqDataSource.AutoPage" /> 设置为 <see langword="true" /> 并将 <see cref="P:System.Web.UI.DataSourceSelectArguments.RetrieveTotalRowCount" /> 设置为 <see langword="false" /> 启用了自定义分页，则为 -1。</span><span class="sxs-lookup"><span data-stu-id="1cb9a-161">The total number of rows in a data set from the data retrieval operation; -1 if the <see cref="T:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs" /> object was created during a data modification operation; -1 if you enabled customized paging by setting <see cref="P:System.Web.UI.WebControls.LinqDataSource.AutoPage" /> to <see langword="true" /> and by setting <see cref="P:System.Web.UI.DataSourceSelectArguments.RetrieveTotalRowCount" /> to <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1cb9a-162">在 <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount%2A> 数据检索操作过程中，可以使用属性来获取数据集中的记录数。</span><span class="sxs-lookup"><span data-stu-id="1cb9a-162">You use the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount%2A> property to get the number of records in the data set during a data retrieval operation.</span></span> <span data-ttu-id="1cb9a-163">通常，在显示数据页时检索此属性，并希望显示记录总数。</span><span class="sxs-lookup"><span data-stu-id="1cb9a-163">Typically, you retrieve this property when you are displaying pages of data and want to show the total number of records.</span></span>  
  
 <span data-ttu-id="1cb9a-164">数据分页时，属性中的值 <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount%2A> 可能与查询返回的实际行数不同。</span><span class="sxs-lookup"><span data-stu-id="1cb9a-164">When data is being paged, the value in the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount%2A> property might be different from the actual number of rows that are returned by the query.</span></span> <span data-ttu-id="1cb9a-165">这是因为查询只返回该数据页所需的行数。</span><span class="sxs-lookup"><span data-stu-id="1cb9a-165">This is because the query returns only the number of rows that are needed for that page of data.</span></span>  
  
 <span data-ttu-id="1cb9a-166"><xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount%2A>仅当在事件的事件处理程序中对其进行访问时，此属性才包含查询中的记录数 <xref:System.Web.UI.WebControls.LinqDataSource.Selected> 。</span><span class="sxs-lookup"><span data-stu-id="1cb9a-166">The <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount%2A> property contains the number of records from a query only when it is accessed in an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Selected> event.</span></span> <span data-ttu-id="1cb9a-167">当从、、或事件的事件处理程序访问该属性时 <xref:System.Web.UI.WebControls.LinqDataSource.ContextCreated> <xref:System.Web.UI.WebControls.LinqDataSource.Deleted> <xref:System.Web.UI.WebControls.LinqDataSource.Inserted> <xref:System.Web.UI.WebControls.LinqDataSource.Updated> ，该属性将 <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount%2A> 包含-1。</span><span class="sxs-lookup"><span data-stu-id="1cb9a-167">When the property is accessed from an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.ContextCreated>, <xref:System.Web.UI.WebControls.LinqDataSource.Deleted>, <xref:System.Web.UI.WebControls.LinqDataSource.Inserted>, or <xref:System.Web.UI.WebControls.LinqDataSource.Updated> event, the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount%2A> property contains -1.</span></span>  
  
 <span data-ttu-id="1cb9a-168">属性的值 <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount%2A> 取决于 <xref:System.Web.UI.WebControls.LinqDataSource.AutoPage%2A> 控件的属性 <xref:System.Web.UI.WebControls.LinqDataSource> 和 `AllowPaging` 数据绑定控件的属性。</span><span class="sxs-lookup"><span data-stu-id="1cb9a-168">The value of the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount%2A> property depends on the <xref:System.Web.UI.WebControls.LinqDataSource.AutoPage%2A> property of the <xref:System.Web.UI.WebControls.LinqDataSource> control, and on the `AllowPaging` property of the data-bound control.</span></span> <span data-ttu-id="1cb9a-169">下表汇总了属性的可能值 <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount%2A> 。</span><span class="sxs-lookup"><span data-stu-id="1cb9a-169">The following table summarizes the possible values for the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount%2A> property.</span></span>  
  
|<span data-ttu-id="1cb9a-170">LinqDataSource 控件的 "自动页" 属性</span><span class="sxs-lookup"><span data-stu-id="1cb9a-170">AutoPage Property of LinqDataSource control</span></span>|<span data-ttu-id="1cb9a-171">数据绑定控件的 AllowPaging 属性</span><span class="sxs-lookup"><span data-stu-id="1cb9a-171">AllowPaging Property of data-bound control</span></span>|<span data-ttu-id="1cb9a-172">TotalRowCount 属性</span><span class="sxs-lookup"><span data-stu-id="1cb9a-172">TotalRowCount property</span></span>|<span data-ttu-id="1cb9a-173">业务成效</span><span class="sxs-lookup"><span data-stu-id="1cb9a-173">Outcome</span></span>|  
|-------------------------------------------------|-------------------------------------------------|----------------------------|-------------|  
|`true`|`true`|<span data-ttu-id="1cb9a-174">查询的记录数。</span><span class="sxs-lookup"><span data-stu-id="1cb9a-174">Number of records for a query.</span></span>|<span data-ttu-id="1cb9a-175">数据自动分页。</span><span class="sxs-lookup"><span data-stu-id="1cb9a-175">Data is automatically paged.</span></span>|  
|`false`|`false`|<span data-ttu-id="1cb9a-176">查询的记录数。</span><span class="sxs-lookup"><span data-stu-id="1cb9a-176">Number of records for a query.</span></span>|<span data-ttu-id="1cb9a-177">数据未分页。</span><span class="sxs-lookup"><span data-stu-id="1cb9a-177">Data is not paged.</span></span>|  
|`true`|`false`|<span data-ttu-id="1cb9a-178">-1</span><span class="sxs-lookup"><span data-stu-id="1cb9a-178">-1</span></span>|<span data-ttu-id="1cb9a-179">数据未分页。</span><span class="sxs-lookup"><span data-stu-id="1cb9a-179">Data is not paged.</span></span>|  
|`false`|`true`|<span data-ttu-id="1cb9a-180">分配给 <xref:System.Web.UI.DataSourceSelectArguments.TotalRowCount%2A> 事件的事件处理程序中的属性的值 <xref:System.Web.UI.WebControls.LinqDataSource.Selecting> 。</span><span class="sxs-lookup"><span data-stu-id="1cb9a-180">The value that you assigned to the <xref:System.Web.UI.DataSourceSelectArguments.TotalRowCount%2A> property in the event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Selecting> event.</span></span>|<span data-ttu-id="1cb9a-181">数据会根据自定义分页时指定的值分页。</span><span class="sxs-lookup"><span data-stu-id="1cb9a-181">Data is paged according to the values that you specified when you customized paging.</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="1cb9a-182">下面的示例演示包含 <xref:System.Web.UI.WebControls.LinqDataSource> 控件、 <xref:System.Web.UI.WebControls.GridView> 控件和控件的网页 <xref:System.Web.UI.WebControls.Literal> 。</span><span class="sxs-lookup"><span data-stu-id="1cb9a-182">The following example shows a Web page with a <xref:System.Web.UI.WebControls.LinqDataSource> control, a <xref:System.Web.UI.WebControls.GridView> control, and a <xref:System.Web.UI.WebControls.Literal> control.</span></span> <span data-ttu-id="1cb9a-183"><xref:System.Web.UI.WebControls.LinqDataSource>控件定义事件的事件处理程序 <xref:System.Web.UI.WebControls.LinqDataSource.Selected> 。</span><span class="sxs-lookup"><span data-stu-id="1cb9a-183">The <xref:System.Web.UI.WebControls.LinqDataSource> control defines an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Selected> event.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount/cs/Default.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount/vb/Default.aspx#1)]  
  
 <span data-ttu-id="1cb9a-184">下面的示例演示事件的事件处理程序的代码 <xref:System.Web.UI.WebControls.LinqDataSource.Selected> 。</span><span class="sxs-lookup"><span data-stu-id="1cb9a-184">The following example shows the code for the event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Selected> event.</span></span> <span data-ttu-id="1cb9a-185">将属性的值 <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount%2A> 分配给 <xref:System.Web.UI.WebControls.Literal> 控件。</span><span class="sxs-lookup"><span data-stu-id="1cb9a-185">The value of the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount%2A> property is assigned to the <xref:System.Web.UI.WebControls.Literal> control.</span></span>  
  
 [!code-csharp[System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount/cs/Default.aspx.cs#2)]
 [!code-vb[System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount/vb/Default.aspx.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
