<Type Name="SiteMapPath" FullName="System.Web.UI.WebControls.SiteMapPath">
  <Metadata><Meta Name="ms.openlocfilehash" Value="b1d2bd4a9d2ca3c8a903092b350d3cb54d77573b" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89918299" /></Metadata><TypeSignature Language="C#" Value="public class SiteMapPath : System.Web.UI.WebControls.CompositeControl" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SiteMapPath extends System.Web.UI.WebControls.CompositeControl" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.SiteMapPath" />
  <TypeSignature Language="VB.NET" Value="Public Class SiteMapPath&#xA;Inherits CompositeControl" />
  <TypeSignature Language="C++ CLI" Value="public ref class SiteMapPath : System::Web::UI::WebControls::CompositeControl" />
  <TypeSignature Language="F#" Value="type SiteMapPath = class&#xA;    inherit CompositeControl" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.CompositeControl</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName Language="C#">[System.ComponentModel.Designer("System.Web.UI.Design.WebControls.SiteMapPathDesigner, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.ComponentModel.Designer("System.Web.UI.Design.WebControls.SiteMapPathDesigner, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName Language="C#">[System.ComponentModel.Designer("System.Web.UI.Design.WebControls.SiteMapPathDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.ComponentModel.Designer("System.Web.UI.Design.WebControls.SiteMapPathDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>显示一组文本或图像的超链接，使用户能够更轻松地浏览网站，同时占用最少量的页面空间。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[

## Remarks
 本主题内容：

-   [介绍](#introduction)

-   [Nodes](#nodes)

-   [节点外观](#node_appearance)

-   [事件](#events)

-   [自定义 SiteMapPath 控件](#customizing_the_sitemappath_control)

-   [辅助功能](#accessibility)

-   [声明性语法](#declarative_syntax)

<a name="introduction"></a>
## <a name="introduction"></a>介绍
 <xref:System.Web.UI.WebControls.SiteMapPath>控件是反映对象提供的数据的站点导航控件 <xref:System.Web.SiteMap> 。 它提供了一种节省空间的方式，可以轻松地在网站中导航，并作为对当前显示的页在站点内的位置的参考点。 这种类型的控件通常称为痕迹导航或页眉，因为它显示超链接页名称的分层路径，该路径提供从当前位置到页面层次结构的转义。 <xref:System.Web.UI.WebControls.SiteMapDataSource>. <xref:System.Web.UI.WebControls.SiteMapPath>对于具有深层层次结构页结构的站点很有用，但在 <xref:System.Web.UI.WebControls.TreeView> <xref:System.Web.UI.WebControls.Menu> 页面上或可能需要太多的空间。

 <xref:System.Web.UI.WebControls.SiteMapPath>控件直接与网站的站点地图数据一起工作。 如果在不在站点地图中显示的页面上使用它，则不会显示该页面。 有关站点映射的详细信息，请参阅 [ASP.NET 站点导航](https://docs.microsoft.com/previous-versions/aspnet/e468hxky(v=vs.100))。

<a name="nodes"></a>
## <a name="nodes"></a>Nodes
 由 <xref:System.Web.UI.WebControls.SiteMapPath> 节点组成。 路径中的每个元素称为一个节点，由一个对象表示 <xref:System.Web.UI.WebControls.SiteMapNodeItem> 。 定位路径并表示层次结构树基的节点称为根节点。 表示当前显示页的节点是当前节点。 当前节点与根节点之间的任何其他节点均为父节点。 下表介绍了这三种不同的节点类型。

|节点类型|描述|
|---------------|-----------------|
|根|锚定一组分层节点的节点。|
|父级 (parent)|具有一个或多个子节点但不是当前节点的节点。|
|当前|表示当前显示页的节点。|

<a name="node_appearance"></a>
## <a name="node-appearance"></a>节点外观
 显示的每个节点 <xref:System.Web.UI.WebControls.SiteMapPath> 都是 <xref:System.Web.UI.WebControls.HyperLink> 或 <xref:System.Web.UI.WebControls.Literal> 控件，您可以将模板或样式应用于。 模板和样式按照两个优先级规则应用于节点：

-   如果为节点定义了模板，则它将覆盖为该节点定义的任何样式。

-   特定于节点类型的模板和样式会重写为所有节点定义的常规模板和样式。

 <xref:System.Web.UI.WebControls.SiteMapPath.NodeStyle%2A>和 <xref:System.Web.UI.WebControls.SiteMapPath.NodeTemplate%2A> 属性应用到所有节点，而不考虑其节点类型。 如果同时定义了这两个属性，则 <xref:System.Web.UI.WebControls.SiteMapPath.NodeTemplate%2A> 优先使用。

 <xref:System.Web.UI.WebControls.SiteMapPath.CurrentNodeTemplate%2A>和 <xref:System.Web.UI.WebControls.SiteMapPath.CurrentNodeStyle%2A> 属性应用于表示当前显示页的节点。 如果定义了，则将 <xref:System.Web.UI.WebControls.SiteMapPath.NodeTemplate%2A> <xref:System.Web.UI.WebControls.SiteMapPath.CurrentNodeTemplate%2A> 忽略它。 如果 <xref:System.Web.UI.WebControls.SiteMapPath.NodeStyle%2A> 除了定义外，还定义了 <xref:System.Web.UI.WebControls.SiteMapPath.CurrentNodeStyle%2A> ，则将与合并 <xref:System.Web.UI.WebControls.SiteMapPath.CurrentNodeStyle%2A> 以创建合并样式。 此合并样式使用的所有元素 <xref:System.Web.UI.WebControls.SiteMapPath.CurrentNodeStyle%2A> ，以及与不冲突的的任何其他元素 <xref:System.Web.UI.WebControls.SiteMapPath.NodeStyle%2A> <xref:System.Web.UI.WebControls.SiteMapPath.CurrentNodeStyle%2A> 。

 <xref:System.Web.UI.WebControls.SiteMapPath.RootNodeTemplate%2A>和 <xref:System.Web.UI.WebControls.SiteMapPath.RootNodeStyle%2A> 属性应用于表示站点导航层次结构的根的节点。 如果定义了，则将 <xref:System.Web.UI.WebControls.SiteMapPath.NodeTemplate%2A> <xref:System.Web.UI.WebControls.SiteMapPath.RootNodeTemplate%2A> 忽略它。 如果 <xref:System.Web.UI.WebControls.SiteMapPath.NodeStyle%2A> 除了定义外，还定义了 <xref:System.Web.UI.WebControls.SiteMapPath.RootNodeStyle%2A> ，则将与合并 <xref:System.Web.UI.WebControls.SiteMapPath.RootNodeStyle%2A> 以创建合并样式。 此合并样式使用的所有元素 <xref:System.Web.UI.WebControls.SiteMapPath.RootNodeStyle%2A> ，以及与不冲突的的任何其他元素 <xref:System.Web.UI.WebControls.SiteMapPath.NodeStyle%2A> <xref:System.Web.UI.WebControls.SiteMapPath.CurrentNodeStyle%2A> 。 最后，如果当前显示的页面是站点的根页面，则 <xref:System.Web.UI.WebControls.SiteMapPath.RootNodeTemplate%2A> 使用和， <xref:System.Web.UI.WebControls.SiteMapPath.RootNodeStyle%2A> 而不是使用 <xref:System.Web.UI.WebControls.SiteMapPath.CurrentNodeTemplate%2A> 或 <xref:System.Web.UI.WebControls.SiteMapPath.CurrentNodeStyle%2A> 。

 <xref:System.Web.UI.WebControls.SiteMapPath>控件使用由属性标识的站点地图提供程序 <xref:System.Web.UI.WebControls.SiteMapPath.SiteMapProvider%2A> 作为站点导航信息的数据源。 如果未指定提供程序，则它将使用该站点的默认提供程序，该提供程序在属性中标识 <xref:System.Web.SiteMap.Provider%2A?displayProperty=nameWithType> 。 通常，这是 ASP.NET 的默认站点地图提供程序的实例 <xref:System.Web.XmlSiteMapProvider> 。 如果在 <xref:System.Web.UI.WebControls.SiteMapPath> 站点内使用控件，但未配置站点地图提供程序，则控件将引发 <xref:System.Web.HttpException> 异常。

<a name="events"></a>
## <a name="events"></a>事件
 该 <xref:System.Web.UI.WebControls.SiteMapPath> 控件还提供您可以对其进行编程的事件。 这使您可以在每次发生事件时运行自定义例程。 下表列出了控件支持的事件 <xref:System.Web.UI.WebControls.SiteMapPath> 。

|事件|说明|
|-----------|-----------------|
|<xref:System.Web.UI.WebControls.SiteMapPath.ItemCreated>|在 <xref:System.Web.UI.WebControls.SiteMapPath> 控件首次创建并将 <xref:System.Web.UI.WebControls.SiteMapNodeItem> 其与关联时发生 <xref:System.Web.SiteMapNode> 。|
|<xref:System.Web.UI.WebControls.SiteMapPath.ItemDataBound>|当 <xref:System.Web.UI.WebControls.SiteMapNodeItem> 绑定到包含的站点地图数据时发生 <xref:System.Web.SiteMapNode> 。|

<a name="customizing_the_sitemappath_control"></a>
## <a name="customizing-the-sitemappath-control"></a>自定义 SiteMapPath 控件
 派生自的类 <xref:System.Web.UI.WebControls.SiteMapPath> 重写 <xref:System.Web.UI.WebControls.SiteMapPath.InitializeItem%2A> 方法以自定义 <xref:System.Web.UI.WebControls.SiteMapNodeItem> 导航控件包含的控件。 为了完全控制 <xref:System.Web.UI.WebControls.SiteMapNodeItem> 创建对象并将其添加到中的方式 <xref:System.Web.UI.WebControls.SiteMapPath> ，派生类会重写 <xref:System.Web.UI.WebControls.SiteMapPath.CreateControlHierarchy%2A> 方法。

<a name="accessibility"></a>
## <a name="accessibility"></a>可访问性
 有关如何配置此控件以生成符合辅助功能标准的标记的信息，请参阅 [Visual Studio 中的辅助功能和 ASP.NET](https://docs.microsoft.com/previous-versions/ms228004(v=vs.140)) 和 [ASP.NET 控件和辅助功能](https://docs.microsoft.com/previous-versions/ms227996(v=vs.140))。

<a name="declarative_syntax"></a>
## <a name="declarative-syntax"></a>声明性语法

```
<asp:SiteMapPath
    AccessKey="string"
    BackColor="color name|#dddddd"
    BorderColor="color name|#dddddd"
    BorderStyle="NotSet|None|Dotted|Dashed|Solid|Double|Groove|Ridge|
        Inset|Outset"
    BorderWidth="size"
    CssClass="string"
    Enabled="True|False"
    EnableTheming="True|False"
    EnableViewState="True|False"
    Font-Bold="True|False"
    Font-Italic="True|False"
    Font-Names="string"
    Font-Overline="True|False"
    Font-Size="string|Smaller|Larger|XX-Small|X-Small|Small|Medium|
        Large|X-Large|XX-Large"
    Font-Strikeout="True|False"
    Font-Underline="True|False"
    ForeColor="color name|#dddddd"
    Height="size"
    ID="string"
    OnDataBinding="DataBinding event handler"
    OnDisposed="Disposed event handler"
    OnInit="Init event handler"
    OnItemCreated="ItemCreated event handler"
    OnItemDataBound="ItemDataBound event handler"
    OnLoad="Load event handler"
    OnPreRender="PreRender event handler"
    OnUnload="Unload event handler"
    ParentLevelsDisplayed="integer"
    PathDirection="RootToCurrent|CurrentToRoot"
    PathSeparator="string"
    RenderCurrentNodeAsLink="True|False"
    runat="server"
    ShowToolTips="True|False"
    SiteMapProvider="string"
    SkinID="string"
    SkipLinkText="string"
    Style="string"
    TabIndex="integer"
    ToolTip="string"
    Visible="True|False"
    Width="size"
>
        <CurrentNodeStyle />
        <CurrentNodeTemplate>
            <!-- child controls -->
        </CurrentNodeTemplate>
        <NodeStyle />
        <NodeTemplate>
            <!-- child controls -->
        </NodeTemplate>
        <PathSeparatorStyle />
        <PathSeparatorTemplate>
            <!-- child controls -->
        </PathSeparatorTemplate>
        <RootNodeStyle />
        <RootNodeTemplate>
            <!-- child controls -->
        </RootNodeTemplate>
</asp:SiteMapPath>
```



## Examples
 下面的代码示例 <xref:System.Web.UI.WebControls.SiteMapPath> 在 Web 窗体页中以声明方式使用控件。 此示例演示一些优先规则规则，这些规则控制模板和样式应用于节点的顺序 <xref:System.Web.UI.WebControls.SiteMapPath> 。

 [!code-aspx-csharp[System.Web.UI.WebControls.NavigationPath_decl_5#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.NavigationPath_decl_5/CS/webform2navpathcs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.NavigationPath_decl_5#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.NavigationPath_decl_5/VB/webform2navpathvb.aspx#1)]

 前面的示例使用默认的站点地图提供程序和具有以下结构的 Web.config 文件。

```
<siteMap>
  <siteMapNode title="WebForm1" description="WebForm1" url="WebForm1.aspx" >
    <siteMapNode title="WebForm2" description="WebForm2" url="WebForm2.aspx"/>
  </siteMapNode>
</siteMap>
```

 下面的代码示例演示如何 <xref:System.Web.UI.WebControls.SiteMapPath> 通过重写方法来扩展控件并向其添加新功能 <xref:System.Web.UI.WebControls.SiteMapPath.InitializeItem%2A> 。 `DropDownSiteMapPath`控件在 <xref:System.Web.UI.WebControls.DropDownList> 当前节点后面添加一个，以方便导航到作为当前页的子节点的页。 此示例演示如何使用 <xref:System.Web.UI.WebControls.SiteMapNodeItem> 对象，包括检查它们并在 <xref:System.Web.UI.WebControls.SiteMapNodeItemType> <xref:System.Web.UI.WebControls.SiteMapPath.OnItemCreated%2A> 创建项后调用方法。

 [!code-csharp[Urtue.Samples.Alexkr.DropDownNavigationPath_1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Urtue.Samples.Alexkr.DropDownNavigationPath_1/CS/dropdownnavigationpath.cs#1)]
 [!code-vb[Urtue.Samples.Alexkr.DropDownNavigationPath_1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Urtue.Samples.Alexkr.DropDownNavigationPath_1/VB/dropdownnavigationpath.vb#1)]

 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.SiteMap" />
    <altmember cref="T:System.Web.SiteMapProvider" />
    <altmember cref="T:System.Web.SiteMapNode" />
    <altmember cref="T:System.Web.UI.WebControls.SiteMapNodeItem" />
    <altmember cref="T:System.Web.UI.WebControls.TreeView" />
    <altmember cref="T:System.Web.UI.WebControls.Menu" />
    <altmember cref="T:System.Web.UI.WebControls.SiteMapDataSource" />
    <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/x20z8c51(v=vs.100)">SiteMapPath Web 服务器控件</related>
    <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms227425(v=vs.100)">保护 ASP.NET 站点导航</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SiteMapPath ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SiteMapPath.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SiteMapPath();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Web.UI.WebControls.SiteMapPath" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 使用此构造函数创建并初始化类的新实例 <xref:System.Web.UI.WebControls.SiteMapPath> 。 若要将控件动态添加 <xref:System.Web.UI.WebControls.SiteMapPath> 到页面，请创建新的 <xref:System.Web.UI.WebControls.SiteMapPath> 对象，设置其属性，然后将其添加到 <xref:System.Web.UI.Control.Controls%2A?displayProperty=nameWithType> 容器控件（如）的集合 <xref:System.Web.UI.WebControls.PlaceHolder> 。



## Examples
 下面的代码示例演示如何使用 <xref:System.Web.UI.WebControls.SiteMapPath.%23ctor%2A> 构造函数向 <xref:System.Web.UI.WebControls.SiteMapPath> 页面添加控件。 要使此示例正常运行，需要将映像添加到根目录，并将示例代码中的映像名称从 "myimage.jpg" 更改为映像文件的名称。

 [!code-aspx-csharp[System.Web.UI.WebControls.NavigationPath_decl_3#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.NavigationPath_decl_3/CS/aboutus2cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.NavigationPath_decl_3#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.NavigationPath_decl_3/VB/aboutus2vb.aspx#1)]

 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/x20z8c51(v=vs.100)">SiteMapPath Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="CreateChildControls">
      <MemberSignature Language="C#" Value="protected internal override void CreateChildControls ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void CreateChildControls() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SiteMapPath.CreateChildControls" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub CreateChildControls ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void CreateChildControls();" />
      <MemberSignature Language="F#" Value="override this.CreateChildControls : unit -&gt; unit" Usage="siteMapPath.CreateChildControls " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>清除当前子控件集合，并通过调用 <see cref="M:System.Web.UI.WebControls.SiteMapPath.CreateControlHierarchy" /> 方法重新生成它。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 此方法由 ASP.NET 基础结构调用，通知任何使用基于撰写的实现的控件，其中包括从和派生的控件， <xref:System.Web.UI.WebControls.CompositeDataBoundControl> <xref:System.Web.UI.WebControls.CompositeControl> 以创建它们所包含的任何子控件，以便为回发或呈现做准备。

 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.SiteMapPath.CreateControlHierarchy" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/x20z8c51(v=vs.100)">SiteMapPath Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="CreateControlHierarchy">
      <MemberSignature Language="C#" Value="protected virtual void CreateControlHierarchy ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void CreateControlHierarchy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SiteMapPath.CreateControlHierarchy" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub CreateControlHierarchy ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void CreateControlHierarchy();" />
      <MemberSignature Language="F#" Value="abstract member CreateControlHierarchy : unit -&gt; unit&#xA;override this.CreateControlHierarchy : unit -&gt; unit" Usage="siteMapPath.CreateControlHierarchy " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>检查 <see cref="P:System.Web.UI.WebControls.SiteMapPath.SiteMapProvider" /> 提供的站点地图结构，并根据为功能节点定义的样式和模板生成子控件集合。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.SiteMapPath.CreateControlHierarchy%2A>方法创建 <xref:System.Web.UI.WebControls.SiteMapNodeItem> 控件，将它们与 <xref:System.Web.SiteMapNode> 当前站点地图提供程序中的相应对象关联，并将这些节点添加到 <xref:System.Web.UI.Control.Controls%2A> 集合中。

 方法首先查找 <xref:System.Web.SiteMap.CurrentNode%2A?displayProperty=nameWithType> ，然后向上遍历对象的层次结构树 <xref:System.Web.SiteMapNode> ，为每个对象创建一个， <xref:System.Web.UI.WebControls.SiteMapNodeItem> 直到 <xref:System.Web.SiteMap.RootNode%2A> 达到为止。 创建每个后 <xref:System.Web.UI.WebControls.SiteMapNodeItem> ，但在将其绑定到相应的后 <xref:System.Web.SiteMapNode> ，将 <xref:System.Web.UI.WebControls.SiteMapPath.InitializeItem%2A> 调用方法。 <xref:System.Web.UI.WebControls.SiteMapPath.InitializeItem%2A>方法应用为特定节点类型定义的任何模板或样式，并创建并初始化包含的任何子控件 <xref:System.Web.UI.WebControls.SiteMapNodeItem> 。 最后， <xref:System.Web.UI.WebControls.SiteMapPath.InitializeItem%2A> 方法将的子控件添加 <xref:System.Web.UI.WebControls.SiteMapNodeItem> 到 <xref:System.Web.UI.Control.Controls%2A> 集合中。

 每次 <xref:System.Web.UI.WebControls.SiteMapNodeItem> 初始化后，将 <xref:System.Web.UI.WebControls.SiteMapPath.OnItemCreated%2A> 调用方法。 然后，将 <xref:System.Web.UI.WebControls.SiteMapNodeItem> 绑定到相应的 <xref:System.Web.SiteMapNode> ，并 <xref:System.Web.UI.WebControls.BaseDataBoundControl.OnDataBound%2A> 调用。

 <xref:System.Web.UI.WebControls.SiteMapPath.CreateControlHierarchy%2A>方法从方法中调用 <xref:System.Web.UI.WebControls.SiteMapPath.CreateChildControls%2A> 。

 扩展控件的类 <xref:System.Web.UI.WebControls.SiteMapPath> 会重写 <xref:System.Web.UI.WebControls.SiteMapPath.CreateControlHierarchy%2A> 方法，以改变 <xref:System.Web.UI.WebControls.SiteMapNodeItem> 控件创建或添加到控件的方式 <xref:System.Web.UI.WebControls.SiteMapPath> 。 单个节点项的操作是在方法中执行的 <xref:System.Web.UI.WebControls.SiteMapPath.InitializeItem%2A> ，大多数扩展 <xref:System.Web.UI.WebControls.SiteMapPath> 的类只重写此方法。

 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">没有 <see cref="P:System.Web.UI.WebControls.SiteMapPath.SiteMapProvider" /> 可用于 <see cref="T:System.Web.UI.WebControls.SiteMapPath" /> 控件。</exception>
        <altmember cref="M:System.Web.UI.WebControls.SiteMapPath.CreateChildControls" />
        <altmember cref="M:System.Web.UI.WebControls.SiteMapPath.InitializeItem(System.Web.UI.WebControls.SiteMapNodeItem)" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/x20z8c51(v=vs.100)">SiteMapPath Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="CurrentNodeStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.Style CurrentNodeStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.Style CurrentNodeStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SiteMapPath.CurrentNodeStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CurrentNodeStyle As Style" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::Style ^ CurrentNodeStyle { System::Web::UI::WebControls::Style ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrentNodeStyle : System.Web.UI.WebControls.Style" Usage="System.Web.UI.WebControls.SiteMapPath.CurrentNodeStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(null)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(null)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.NotifyParentProperty(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.NotifyParentProperty(true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Style</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取用于当前节点显示文本的样式。</summary>
        <value><see cref="T:System.Web.UI.WebControls.Style" />，它包含 <see cref="T:System.Web.UI.WebControls.SiteMapPath" /> 控件当前节点的显示文本的样式设置。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 使用 <xref:System.Web.UI.WebControls.SiteMapPath.CurrentNodeStyle%2A> 属性可控制表示当前显示页的导航路径节点的显示文本外观。 默认情况下，显示文本是在 <xref:System.Web.SiteMapNode.Title%2A> 表示页面的的属性中指定的 <xref:System.Web.SiteMapNode> 。 常用样式设置包括自定义背景色、前景颜色、字体属性和节点间距。

 对于 <xref:System.Web.UI.WebControls.SiteMapPath> 节点，样式属性将按以下顺序合并为单个样式：

1.  <xref:System.Web.UI.WebControls.SiteMapPath.NodeStyle%2A>

2.  <xref:System.Web.UI.WebControls.SiteMapPath.CurrentNodeStyle%2A> 或者，如果当前显示的页是根节点，则为 <xref:System.Web.UI.WebControls.SiteMapPath.RootNodeStyle%2A> 。

> [!NOTE]
>  如果将节点字体样式设置为删除线或上划线样式，则不会显示节点的默认下划线样式，除非将其显式设置为 `true` 。

 如果 <xref:System.Web.UI.WebControls.SiteMapPath.CurrentNodeTemplate%2A> 定义了属性，则 <xref:System.Web.UI.WebControls.SiteMapPath.CurrentNodeStyle%2A> 忽略属性。



## Examples
 下面的代码示例演示如何 <xref:System.Web.UI.WebControls.SiteMapPath.CurrentNodeStyle%2A> <xref:System.Web.UI.WebControls.SiteMapPath> 在 Web 窗体页中以声明方式设置控件的。

 [!code-aspx-csharp[System.Web.UI.WebControls.NavigationPath_decl_1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.NavigationPath_decl_1/CS/customerservicecs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.NavigationPath_decl_1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.NavigationPath_decl_1/VB/customerservicevb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SiteMapPath.CurrentNodeTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.SiteMapPath.NodeStyle" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/x20z8c51(v=vs.100)">SiteMapPath Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="CurrentNodeTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate CurrentNodeTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate CurrentNodeTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SiteMapPath.CurrentNodeTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CurrentNodeTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ CurrentNodeTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CurrentNodeTemplate : System.Web.UI.ITemplate with get, set" Usage="System.Web.UI.WebControls.SiteMapPath.CurrentNodeTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(null)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(null)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.SiteMapNodeItem))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.SiteMapNodeItem))&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个控件模板，用于代表当前显示页的站点导航路径的节点。</summary>
        <value>一个 <see cref="T:System.Web.UI.ITemplate" /> 对象，它实现 <see cref="M:System.Web.UI.ITemplate.InstantiateIn(System.Web.UI.Control)" /> 方法，以呈现表示当前显示页的导航路径节点的自定义内容。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 将设置 <xref:System.Web.UI.WebControls.SiteMapPath.CurrentNodeTemplate%2A> 为一个 <xref:System.Web.UI.ITemplate> 对象，以使用 <xref:System.Web.UI.WebControls.Image> 控件或某个其他控件（如 <xref:System.Web.UI.WebControls.Label> ）作为当前节点的用户界面元素，而不是字符串。

 如果 <xref:System.Web.UI.WebControls.SiteMapPath.CurrentNodeTemplate%2A> 设置了属性，则模板将覆盖显示的当前导航节点文本和任何 <xref:System.Web.UI.WebControls.SiteMapPath.CurrentNodeStyle%2A> 应用的。 但是，如果当前显示的页与根节点相对应，则 <xref:System.Web.UI.WebControls.SiteMapPath.RootNodeTemplate%2A> <xref:System.Web.UI.WebControls.SiteMapPath.RootNodeStyle%2A> 使用或。

 您可以以声明方式将 <xref:System.Web.UI.WebControls.SiteMapPath.CurrentNodeTemplate%2A> 属性设置为任何 Web 服务器控件，ASP.NET 基础结构将执行必要的步骤以将 Web 服务器控件包装为 <xref:System.Web.UI.ITemplate> 对象。 但是，Web 服务器控件不实现接口， <xref:System.Web.UI.ITemplate> 因此，如果 <xref:System.Web.UI.ITemplate> 以编程方式使用属性，则必须 <xref:System.Web.UI.ITemplate> 为任何模板代码编写包装。 然后，将 <xref:System.Web.UI.WebControls.SiteMapPath.CurrentNodeTemplate%2A> 属性设置为包装器的实例 <xref:System.Web.UI.ITemplate> 。



## Examples
 下面的代码示例以声明方式定义 <xref:System.Web.UI.WebControls.SiteMapPath.CurrentNodeTemplate%2A> 并覆盖定义的 <xref:System.Web.UI.WebControls.SiteMapPath.CurrentNodeStyle%2A> 。

 [!code-aspx-csharp[System.Web.UI.WebControls.NavigationPath_decl_5#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.NavigationPath_decl_5/CS/webform2navpathcs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.NavigationPath_decl_5#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.NavigationPath_decl_5/VB/webform2navpathvb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SiteMapPath.CurrentNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.SiteMapPath.NodeTemplate" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/x20z8c51(v=vs.100)">SiteMapPath Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="DataBind">
      <MemberSignature Language="C#" Value="public override void DataBind ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void DataBind() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SiteMapPath.DataBind" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub DataBind ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void DataBind();" />
      <MemberSignature Language="F#" Value="override this.DataBind : unit -&gt; unit" Usage="siteMapPath.DataBind " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>将数据源绑定到 <see cref="T:System.Web.UI.WebControls.SiteMapPath" /> 控件及其子控件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.SiteMapPath>控件旨在通过使用属性，直接从站点地图提供程序检索其数据 <xref:System.Web.UI.WebControls.SiteMapPath.Provider%2A> 。 不要使用 <xref:System.Web.UI.WebControls.SiteMapPath> 控件绑定到 ASP.NET 数据源控件，并且不 <xref:System.Web.UI.WebControls.SiteMapPath.DataBind%2A> 显式调用方法。

 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/x20z8c51(v=vs.100)">SiteMapPath Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="InitializeItem">
      <MemberSignature Language="C#" Value="protected virtual void InitializeItem (System.Web.UI.WebControls.SiteMapNodeItem item);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void InitializeItem(class System.Web.UI.WebControls.SiteMapNodeItem item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SiteMapPath.InitializeItem(System.Web.UI.WebControls.SiteMapNodeItem)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub InitializeItem (item As SiteMapNodeItem)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void InitializeItem(System::Web::UI::WebControls::SiteMapNodeItem ^ item);" />
      <MemberSignature Language="F#" Value="abstract member InitializeItem : System.Web.UI.WebControls.SiteMapNodeItem -&gt; unit&#xA;override this.InitializeItem : System.Web.UI.WebControls.SiteMapNodeItem -&gt; unit" Usage="siteMapPath.InitializeItem item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Web.UI.WebControls.SiteMapNodeItem" />
      </Parameters>
      <Docs>
        <param name="item">要初始化的 <see cref="T:System.Web.UI.WebControls.SiteMapNodeItem" />。</param>
        <summary>根据节点功能和为节点指定的模板和样式，使用一组子控件填充 <see cref="T:System.Web.UI.WebControls.SiteMapNodeItem" />，这是一个表示 <see cref="T:System.Web.SiteMapNode" /> 的 Web 服务器控件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.SiteMapPath.InitializeItem%2A>方法通过检查来确定项表示的节点的功能类型 <xref:System.Web.UI.WebControls.SiteMapNodeItemType> ，并应用为该类型的节点定义的任何模板或样式。

 如果 <xref:System.Web.UI.WebControls.SiteMapNodeItem> 具有 <xref:System.Web.UI.WebControls.SiteMapNodeItemType.Root> 项类型， <xref:System.Web.UI.WebControls.HyperLink> 则创建子控件，并且 <xref:System.Web.UI.WebControls.SiteMapPath.RootNodeTemplate%2A> <xref:System.Web.UI.WebControls.SiteMapPath.RootNodeStyle%2A> 可以应用和。 如果设置了，则将 <xref:System.Web.UI.WebControls.SiteMapPath.RootNodeTemplate%2A> 其 <xref:System.Web.UI.ITemplate> 应用于节点。 而在中 <xref:System.Web.UI.WebControls.SiteMapPath.RootNodeStyle%2A> 设置时，它将与任何已定义的 <xref:System.Web.UI.WebControls.SiteMapPath.NodeStyle%2A> 和应用的合并。 最后，如果未定义任何模板或样式，则将 <xref:System.Web.UI.WebControls.HyperLink> 创建一个基本控件，并使用节点中的值对其进行初始化。

 如果 <xref:System.Web.UI.WebControls.SiteMapNodeItem> 具有 <xref:System.Web.UI.WebControls.SiteMapNodeItemType.Current> 项类型， <xref:System.Web.UI.WebControls.Literal> <xref:System.Web.UI.WebControls.HyperLink> 则创建或子控件，具体取决于的返回值 <xref:System.Web.UI.WebControls.SiteMapPath.RenderCurrentNodeAsLink%2A> 。 然后，可以 <xref:System.Web.UI.WebControls.SiteMapPath.CurrentNodeTemplate%2A> <xref:System.Web.UI.WebControls.SiteMapPath.CurrentNodeStyle%2A> 应用或。 如果设置了，则将 <xref:System.Web.UI.WebControls.SiteMapPath.CurrentNodeTemplate%2A> 其 <xref:System.Web.UI.ITemplate> 应用于节点。 如果改为 <xref:System.Web.UI.WebControls.SiteMapPath.CurrentNodeStyle%2A> 设置，则会将其与任何已定义的和应用的一起合并 <xref:System.Web.UI.WebControls.SiteMapPath.NodeStyle%2A> 。

 如果 <xref:System.Web.UI.WebControls.SiteMapNodeItem> 具有 <xref:System.Web.UI.WebControls.SiteMapNodeItemType.Parent> 项类型， <xref:System.Web.UI.WebControls.HyperLink> 则创建一个子控件，并 <xref:System.Web.UI.WebControls.SiteMapPath.NodeTemplate%2A> <xref:System.Web.UI.WebControls.SiteMapPath.NodeStyle%2A> 可以应用和。 如果设置了，则将 <xref:System.Web.UI.WebControls.SiteMapPath.NodeTemplate%2A> 其 <xref:System.Web.UI.ITemplate> 应用于节点。 如果改为 <xref:System.Web.UI.WebControls.SiteMapPath.NodeStyle%2A> 设置，则会应用它。

 最后，如果 <xref:System.Web.UI.WebControls.SiteMapNodeItem> 具有 <xref:System.Web.UI.WebControls.SiteMapNodeItemType.PathSeparator> 项类型， <xref:System.Web.UI.WebControls.Literal> 则创建一个子控件，并根据为 <xref:System.Web.UI.WebControls.SiteMapPath.PathSeparatorTemplate%2A> <xref:System.Web.UI.WebControls.SiteMapPath.PathSeparatorStyle%2A> 节点类型定义的相同常规规则应用和 <xref:System.Web.UI.WebControls.SiteMapNodeItemType.Parent> 。

 重写 <xref:System.Web.UI.WebControls.SiteMapPath.InitializeItem%2A> 方法以操作各个 <xref:System.Web.UI.WebControls.SiteMapNodeItem> 对象。 如果类的设计需要对创建对象并将其添加到控件的方式进行更全面 <xref:System.Web.UI.WebControls.SiteMapNodeItem> <xref:System.Web.UI.WebControls.SiteMapPath> 的控制，则重写 <xref:System.Web.UI.WebControls.SiteMapPath.CreateControlHierarchy%2A> 方法。



## Examples
 下面的代码示例演示如何重写 <xref:System.Web.UI.WebControls.SiteMapPath.InitializeItem%2A> 方法，以便向派生自的控件添加功能 <xref:System.Web.UI.WebControls.SiteMapPath> 。 此代码示例是为类提供的更大示例的一部分 <xref:System.Web.UI.WebControls.SiteMapPath> 。

 [!code-csharp[Urtue.Samples.Alexkr.DropDownNavigationPath_1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/Urtue.Samples.Alexkr.DropDownNavigationPath_1/CS/dropdownnavigationpath.cs#2)]
 [!code-vb[Urtue.Samples.Alexkr.DropDownNavigationPath_1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Urtue.Samples.Alexkr.DropDownNavigationPath_1/VB/dropdownnavigationpath.vb#2)]

 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.SiteMapPath.CreateControlHierarchy" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/x20z8c51(v=vs.100)">SiteMapPath Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="ItemCreated">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.SiteMapNodeItemEventHandler ItemCreated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.SiteMapNodeItemEventHandler ItemCreated" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.SiteMapPath.ItemCreated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ItemCreated As SiteMapNodeItemEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::SiteMapNodeItemEventHandler ^ ItemCreated;" />
      <MemberSignature Language="F#" Value="member this.ItemCreated : System.Web.UI.WebControls.SiteMapNodeItemEventHandler " Usage="member this.ItemCreated : System.Web.UI.WebControls.SiteMapNodeItemEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SiteMapNodeItemEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>在 <see cref="T:System.Web.UI.WebControls.SiteMapNodeItem" /> 由 <see cref="T:System.Web.UI.WebControls.SiteMapPath" /> 创建且与其对应的 <see cref="T:System.Web.SiteMapNode" /> 关联时发生。 该事件由 <see cref="M:System.Web.UI.WebControls.SiteMapPath.OnItemCreated(System.Web.UI.WebControls.SiteMapNodeItemEventArgs)" /> 方法引发。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 有关处理事件的详细信息，请参阅 [处理和引发事件](/dotnet/standard/events/)。

 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/x20z8c51(v=vs.100)">SiteMapPath Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="ItemDataBound">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.SiteMapNodeItemEventHandler ItemDataBound;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.SiteMapNodeItemEventHandler ItemDataBound" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.SiteMapPath.ItemDataBound" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ItemDataBound As SiteMapNodeItemEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::SiteMapNodeItemEventHandler ^ ItemDataBound;" />
      <MemberSignature Language="F#" Value="member this.ItemDataBound : System.Web.UI.WebControls.SiteMapNodeItemEventHandler " Usage="member this.ItemDataBound : System.Web.UI.WebControls.SiteMapNodeItemEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SiteMapNodeItemEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>在 <see cref="T:System.Web.UI.WebControls.SiteMapNodeItem" /> 由 <see cref="T:System.Web.SiteMapNode" /> 绑定到其基础 <see cref="T:System.Web.UI.WebControls.SiteMapPath" /> 数据后发生。 该事件由 <see cref="M:System.Web.UI.WebControls.SiteMapPath.OnItemDataBound(System.Web.UI.WebControls.SiteMapNodeItemEventArgs)" /> 方法引发。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 有关处理事件的详细信息，请参阅 [处理和引发事件](/dotnet/standard/events/)。

 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/x20z8c51(v=vs.100)">SiteMapPath Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="LoadViewState">
      <MemberSignature Language="C#" Value="protected override void LoadViewState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void LoadViewState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SiteMapPath.LoadViewState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub LoadViewState (savedState As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void LoadViewState(System::Object ^ savedState);" />
      <MemberSignature Language="F#" Value="override this.LoadViewState : obj -&gt; unit" Usage="siteMapPath.LoadViewState savedState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState">表示要还原的控件状态的 <see cref="T:System.Object" />。</param>
        <summary>从使用 <see cref="M:System.Web.UI.WebControls.SiteMapPath.SaveViewState" /> 方法保存的前一请求还原视图状态信息。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 此方法主要由 .NET Framework 基础结构使用，不应在代码中直接使用。 不过，控件开发人员可以重写此方法，以指定自定义服务器控件如何还原其视图状态。 有关详细信息，请参阅 [ASP.NET 状态管理概述](https://docs.microsoft.com/previous-versions/aspnet/75x4ha6s(v=vs.100))。

 <xref:System.Web.UI.WebControls.Login.LoadViewState%2A>方法还原在上一个请求期间保存的视图状态信息。

 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.SiteMapPath.TrackViewState" />
        <altmember cref="M:System.Web.UI.WebControls.SiteMapPath.SaveViewState" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/x20z8c51(v=vs.100)">SiteMapPath Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="NodeStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.Style NodeStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.Style NodeStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SiteMapPath.NodeStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NodeStyle As Style" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::Style ^ NodeStyle { System::Web::UI::WebControls::Style ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.NodeStyle : System.Web.UI.WebControls.Style" Usage="System.Web.UI.WebControls.SiteMapPath.NodeStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(null)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(null)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.NotifyParentProperty(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.NotifyParentProperty(true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Style</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取用于站点导航路径中所有节点的显示文本的样式。</summary>
        <value><see cref="T:System.Web.UI.WebControls.Style" />，它包含 <see cref="T:System.Web.UI.WebControls.SiteMapPath" /> 控件中显示文本的样式设置。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 使用 <xref:System.Web.UI.WebControls.SiteMapPath.NodeStyle%2A> 属性可控制控件呈现的所有导航路径节点的显示文本外观。 默认情况下，显示文本是在 <xref:System.Web.SiteMapNode.Title%2A> 表示页面的的属性中指定的 <xref:System.Web.SiteMapNode> 。 常用样式设置包括自定义背景色、前景颜色、字体属性和节点间距。

 对于 <xref:System.Web.UI.WebControls.SiteMapPath> 节点，样式属性将按以下顺序合并为单个样式：

1.  <xref:System.Web.UI.WebControls.SiteMapPath.NodeStyle%2A>

2.  <xref:System.Web.UI.WebControls.SiteMapPath.CurrentNodeStyle%2A> 或 <xref:System.Web.UI.WebControls.SiteMapPath.RootNodeStyle%2A> ，具体取决于节点类型。

> [!NOTE]
>  如果将节点字体样式设置为删除线或上划线样式，则不会显示节点的默认下划线样式，除非将其显式设置为 `true` 。

 如果 <xref:System.Web.UI.WebControls.SiteMapPath.NodeStyle%2A> 定义了，则它最初应用于每个节点。 如果为特定类型的节点（如根节点或当前节点）定义了其他样式，则此样式将取代在属性中指定的常规样式 <xref:System.Web.UI.WebControls.SiteMapPath.NodeStyle%2A> 。 如果为特定类型的节点定义了模板，则它将取代该节点的所有已定义样式。



## Examples
 下面的代码示例演示如何定义 <xref:System.Web.UI.WebControls.SiteMapPath.NodeStyle%2A> 与合并的， <xref:System.Web.UI.WebControls.SiteMapPath.RootNodeStyle%2A> 以演示节点的样式优先级顺序 <xref:System.Web.UI.WebControls.SiteMapPath> 。

 [!code-aspx-csharp[System.Web.UI.WebControls.NavigationPath_decl_5#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.NavigationPath_decl_5/CS/webform2navpathcs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.NavigationPath_decl_5#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.NavigationPath_decl_5/VB/webform2navpathvb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SiteMapPath.CurrentNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.SiteMapPath.RootNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.SiteMapPath.NodeTemplate" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/x20z8c51(v=vs.100)">SiteMapPath Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="NodeTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate NodeTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate NodeTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SiteMapPath.NodeTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property NodeTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ NodeTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberSignature Language="F#" Value="member this.NodeTemplate : System.Web.UI.ITemplate with get, set" Usage="System.Web.UI.WebControls.SiteMapPath.NodeTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(null)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(null)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.SiteMapNodeItem))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.SiteMapNodeItem))&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个控件模板，用于站点导航路径的所有功能节点。</summary>
        <value>一个 <see cref="T:System.Web.UI.ITemplate" /> 对象，它实现 <see cref="M:System.Web.UI.ITemplate.InstantiateIn(System.Web.UI.Control)" /> 方法，以呈现导航路径每个节点的自定义内容。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 将设置 <xref:System.Web.UI.WebControls.SiteMapPath.NodeTemplate%2A> 为一个 <xref:System.Web.UI.ITemplate> 对象以使用 <xref:System.Web.UI.WebControls.Image> 或其他某个控件（例如 <xref:System.Web.UI.WebControls.Label> ）作为所有导航路径节点的用户界面元素。

 如果 <xref:System.Web.UI.WebControls.SiteMapPath.NodeTemplate%2A> 设置了属性，则模板将覆盖显示的导航节点文本和任何 <xref:System.Web.UI.WebControls.SiteMapPath.NodeStyle%2A> 应用的。 对于当前节点和根节点，如果 <xref:System.Web.UI.WebControls.SiteMapPath.CurrentNodeTemplate%2A> 设置了或 <xref:System.Web.UI.WebControls.SiteMapPath.RootNodeTemplate%2A> ，则这些模板会重写 <xref:System.Web.UI.WebControls.SiteMapPath.NodeTemplate%2A> 。

 您可以以声明方式将 <xref:System.Web.UI.WebControls.SiteMapPath.NodeTemplate%2A> 属性设置为任何 Web 服务器控件，ASP.NET 基础结构将执行必要的步骤以将 Web 服务器控件包装为 <xref:System.Web.UI.ITemplate> 对象。 但是，Web 服务器控件不实现接口， <xref:System.Web.UI.ITemplate> 因此，如果 <xref:System.Web.UI.ITemplate> 以编程方式使用属性，则必须 <xref:System.Web.UI.ITemplate> 为任何模板代码编写包装。 然后，将 <xref:System.Web.UI.WebControls.SiteMapPath.RootNodeTemplate%2A> 属性设置为包装器的实例 <xref:System.Web.UI.ITemplate> 。



## Examples
 下面的代码示例演示了在指定的情况下，如何 <xref:System.Web.UI.WebControls.SiteMapPath.NodeTemplate%2A> 覆盖为所有节点定义的样式，包括根节点和当前节点的特殊样式。

> [!IMPORTANT]
>  此示例具有一个接受用户输入的文本框，这是一个潜在的安全威胁。 默认情况下，ASP.NET 网页验证用户输入是否不包含脚本或 HTML 元素。 有关详细信息，请参阅[脚本侵入概述](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100))。

 [!code-aspx-csharp[System.Web.UI.WebControls.NavigationPath_decl_6#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.NavigationPath_decl_6/CS/webform1navpathcs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.NavigationPath_decl_6#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.NavigationPath_decl_6/VB/webform1navpathvb.aspx#1)]

 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/x20z8c51(v=vs.100)">SiteMapPath Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="OnDataBinding">
      <MemberSignature Language="C#" Value="protected override void OnDataBinding (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnDataBinding(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SiteMapPath.OnDataBinding(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnDataBinding (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnDataBinding(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnDataBinding : EventArgs -&gt; unit" Usage="siteMapPath.OnDataBinding e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件数据的 <see cref="T:System.EventArgs" />。</param>
        <summary>重写 <see cref="M:System.Web.UI.Control.OnDataBinding(System.EventArgs)" /> 类的 <see cref="T:System.Web.UI.WebControls.CompositeControl" /> 方法，并引发 <see cref="E:System.Web.UI.Control.DataBinding" /> 事件。</summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/x20z8c51(v=vs.100)">SiteMapPath Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="OnItemCreated">
      <MemberSignature Language="C#" Value="protected virtual void OnItemCreated (System.Web.UI.WebControls.SiteMapNodeItemEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemCreated(class System.Web.UI.WebControls.SiteMapNodeItemEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SiteMapPath.OnItemCreated(System.Web.UI.WebControls.SiteMapNodeItemEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnItemCreated (e As SiteMapNodeItemEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnItemCreated(System::Web::UI::WebControls::SiteMapNodeItemEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnItemCreated : System.Web.UI.WebControls.SiteMapNodeItemEventArgs -&gt; unit&#xA;override this.OnItemCreated : System.Web.UI.WebControls.SiteMapNodeItemEventArgs -&gt; unit" Usage="siteMapPath.OnItemCreated e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.SiteMapNodeItemEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件数据的 <see cref="T:System.Web.UI.WebControls.SiteMapNodeItemEventArgs" />。</param>
        <summary>引发 <see cref="T:System.Web.UI.WebControls.SiteMapPath" /> 控件的 <see cref="E:System.Web.UI.WebControls.SiteMapPath.ItemCreated" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 此 <xref:System.Web.UI.WebControls.SiteMapPath.ItemCreated> 事件在 <xref:System.Web.UI.WebControls.SiteMapPath> 控件创建 <xref:System.Web.UI.WebControls.SiteMapNodeItem> （表示的 Web 服务器控件）后引发 <xref:System.Web.SiteMapNode> ，并将其与关联 <xref:System.Web.SiteMapNode> 。 在 <xref:System.Web.UI.WebControls.SiteMapPath.OnItemCreated%2A> 创建的节点项绑定到其数据之前调用方法。 这使你可以提供一种事件处理方法，该方法可在创建时执行自定义例程 <xref:System.Web.UI.WebControls.SiteMapNodeItem> 。

 引发事件时，将通过委托调用事件处理程序。 有关详细信息，请参阅 [处理和引发事件](/dotnet/standard/events/)。

 <xref:System.Web.UI.WebControls.SiteMapPath.OnItemCreated%2A> 方法还允许派生类对事件进行处理而不必附加委托。 这是在派生类中处理事件的首选技术。



## Examples
 下面的代码示例演示如何在 <xref:System.Web.UI.WebControls.SiteMapPath.OnItemCreated%2A> 方法中创建后调用方法 <xref:System.Web.UI.WebControls.SiteMapNodeItem> <xref:System.Web.UI.WebControls.SiteMapPath.InitializeItem%2A> 。 此代码示例是为类提供的更大示例的一部分 <xref:System.Web.UI.WebControls.SiteMapPath> 。

 [!code-csharp[Urtue.Samples.Alexkr.DropDownNavigationPath_1#3](~/samples/snippets/csharp/VS_Snippets_WebNet/Urtue.Samples.Alexkr.DropDownNavigationPath_1/CS/dropdownnavigationpath.cs#3)]
 [!code-vb[Urtue.Samples.Alexkr.DropDownNavigationPath_1#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Urtue.Samples.Alexkr.DropDownNavigationPath_1/VB/dropdownnavigationpath.vb#3)]

 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>在派生类中重写 <see cref="M:System.Web.UI.WebControls.SiteMapPath.OnItemCreated(System.Web.UI.WebControls.SiteMapNodeItemEventArgs)" /> 时，一定要调用基类的 <see cref="M:System.Web.UI.WebControls.SiteMapPath.OnItemCreated(System.Web.UI.WebControls.SiteMapNodeItemEventArgs)" /> 方法，以便已注册的委托对事件进行接收。</para></block>
        <altmember cref="M:System.Web.UI.WebControls.SiteMapPath.OnItemDataBound(System.Web.UI.WebControls.SiteMapNodeItemEventArgs)" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/x20z8c51(v=vs.100)">SiteMapPath Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="OnItemDataBound">
      <MemberSignature Language="C#" Value="protected virtual void OnItemDataBound (System.Web.UI.WebControls.SiteMapNodeItemEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemDataBound(class System.Web.UI.WebControls.SiteMapNodeItemEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SiteMapPath.OnItemDataBound(System.Web.UI.WebControls.SiteMapNodeItemEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnItemDataBound (e As SiteMapNodeItemEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnItemDataBound(System::Web::UI::WebControls::SiteMapNodeItemEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnItemDataBound : System.Web.UI.WebControls.SiteMapNodeItemEventArgs -&gt; unit&#xA;override this.OnItemDataBound : System.Web.UI.WebControls.SiteMapNodeItemEventArgs -&gt; unit" Usage="siteMapPath.OnItemDataBound e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.SiteMapNodeItemEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件数据的 <see cref="T:System.Web.UI.WebControls.SiteMapNodeItemEventArgs" />。</param>
        <summary>引发 <see cref="T:System.Web.UI.WebControls.SiteMapPath" /> 控件的 <see cref="E:System.Web.UI.WebControls.SiteMapPath.ItemDataBound" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.SiteMapPath.ItemDataBound>当 <xref:System.Web.UI.WebControls.SiteMapPath> 控件绑定到由其提供的数据时，将引发事件 <xref:System.Web.UI.WebControls.SiteMapPath.SiteMapProvider%2A> 。 这使你可以提供一种事件处理方法，该方法可在每次发生此事件时执行自定义例程，如更新数据库或显示的内容。

 引发事件时，将通过委托调用事件处理程序。 有关详细信息，请参阅 [处理和引发事件](/dotnet/standard/events/)。

 <xref:System.Web.UI.WebControls.SiteMapPath.OnItemDataBound%2A> 方法还允许派生类对事件进行处理而不必附加委托。 这是在派生类中处理事件的首选技术。

 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>当在 <see cref="M:System.Web.UI.WebControls.SiteMapPath.OnItemDataBound(System.Web.UI.WebControls.SiteMapNodeItemEventArgs)" /> 派生类中重写方法时，请确保调用 <see cref="M:System.Web.UI.WebControls.SiteMapPath.OnItemDataBound(System.Web.UI.WebControls.SiteMapNodeItemEventArgs)" /> 基类的方法，以便注册的委托接收事件。</para></block>
        <altmember cref="M:System.Web.UI.WebControls.SiteMapPath.OnItemCreated(System.Web.UI.WebControls.SiteMapNodeItemEventArgs)" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/x20z8c51(v=vs.100)">SiteMapPath Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="ParentLevelsDisplayed">
      <MemberSignature Language="C#" Value="public virtual int ParentLevelsDisplayed { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ParentLevelsDisplayed" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SiteMapPath.ParentLevelsDisplayed" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ParentLevelsDisplayed As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int ParentLevelsDisplayed { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.ParentLevelsDisplayed : int with get, set" Usage="System.Web.UI.WebControls.SiteMapPath.ParentLevelsDisplayed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(-1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(-1)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.Themeable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.Themeable(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置控件显示的相对于当前显示节点的父节点级别数。</summary>
        <value>一个整数，指定相对于当前上下文节点显示的父节点级别数。 默认值为 -1，指示对控件显示的父级别数没有限制。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.SiteMapPath.ParentLevelsDisplayed%2A>属性控制 <xref:System.Web.UI.WebControls.SiteMapPath> 当前上下文节点上方的控件所显示的父节点级别数。 默认情况下，将显示当前上下文节点上方的所有父节点和祖先节点。

 此属性的值存储在视图状态中。

 无法通过主题或样式表主题设置此属性。 有关详细信息，请参阅 <xref:System.Web.UI.ThemeableAttribute> 和 [ASP.NET 主题和外观](https://docs.microsoft.com/previous-versions/aspnet/ykzx33wh(v=vs.100))。

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><see cref="P:System.Web.UI.WebControls.SiteMapPath.ParentLevelsDisplayed" /> 值小于 -1。</exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/x20z8c51(v=vs.100)">SiteMapPath Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="PathDirection">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.PathDirection PathDirection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.PathDirection PathDirection" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SiteMapPath.PathDirection" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property PathDirection As PathDirection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::PathDirection PathDirection { System::Web::UI::WebControls::PathDirection get(); void set(System::Web::UI::WebControls::PathDirection value); };" />
      <MemberSignature Language="F#" Value="member this.PathDirection : System.Web.UI.WebControls.PathDirection with get, set" Usage="System.Web.UI.WebControls.SiteMapPath.PathDirection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.PathDirection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置导航路径节点的呈现顺序。</summary>
        <value>一个 <see cref="T:System.Web.UI.WebControls.PathDirection" />，指示呈现导航节点时的层次结构顺序。 默认值为 <see cref="F:System.Web.UI.WebControls.PathDirection.RootToCurrent" />，指示节点以从最顶部的节点到当前节点、从左到右的层次结构顺序呈现。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.SiteMapPath.PathDirection%2A> <xref:System.Web.UI.WebControls.PathDirection.RootToCurrent> 如果要从左到右显示导航路径，则设置为; 导航路径显示为 "站点地图" 节点从左向右的进度。 换言之，根节点位于最左端位置，每个后续节点在右侧的下一个位置，而当前节点位于最右侧的位置。

 <xref:System.Web.UI.WebControls.SiteMapPath.PathDirection%2A> <xref:System.Web.UI.WebControls.PathDirection.CurrentToRoot> 如果要从右到左显示导航路径，则设置为。 换句话说，将反转节点顺序，以便根节点显示在最右边的位置，当前节点显示在最左侧的位置。 虽然这种排序并不常见，但这种排序可用于本地化 Web 窗体页和 <xref:System.Web.UI.WebControls.SiteMapPath> 对从右到左读取的语言的控件。

 此属性的值存储在视图状态中。



## Examples
 下面的代码示例演示如何 <xref:System.Web.UI.WebControls.SiteMapPath.PathDirection%2A> <xref:System.Web.UI.WebControls.SiteMapPath> 在 Web 窗体页中以声明方式设置的属性。

 [!code-aspx-csharp[System.Web.UI.WebControls.NavigationPath_decl_4#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.NavigationPath_decl_4/CS/catalog3cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.NavigationPath_decl_4#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.NavigationPath_decl_4/VB/catalog3vb.aspx#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">该 <see cref="P:System.Web.UI.WebControls.SiteMapPath.PathDirection" /> 值不是基 <see cref="T:System.Web.UI.WebControls.PathDirection" /> 枚举之一。</exception>
        <altmember cref="P:System.Web.UI.WebControls.SiteMapPath.PathSeparator" />
        <altmember cref="P:System.Web.UI.WebControls.SiteMapPath.PathSeparatorTemplate" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/x20z8c51(v=vs.100)">SiteMapPath Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="PathSeparator">
      <MemberSignature Language="C#" Value="public virtual string PathSeparator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PathSeparator" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SiteMapPath.PathSeparator" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property PathSeparator As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ PathSeparator { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PathSeparator : string with get, set" Usage="System.Web.UI.WebControls.SiteMapPath.PathSeparator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(" &gt; ")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(" &gt; ")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Localizable(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Localizable(true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个字符串，该字符串在呈现的导航路径中分隔 <see cref="T:System.Web.UI.WebControls.SiteMapPath" /> 节点。</summary>
        <value>一个字符串，它表示导航路径中节点的分隔符。 默认值为 " &gt; "，它是一个从左到右的字符，对应于默认值 <see cref="T:System.Web.UI.WebControls.PathDirection" /> ，它设置为 <see cref="F:System.Web.UI.WebControls.PathDirection.RootToCurrent" /> 。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 如果定义了，则将 <xref:System.Web.UI.WebControls.SiteMapPath.PathSeparatorStyle%2A> 其应用到 <xref:System.Web.UI.WebControls.SiteMapPath.PathSeparator%2A> 属性。 但是，如果 <xref:System.Web.UI.WebControls.SiteMapPath.PathSeparatorTemplate%2A> 定义了属性，则和属性都将被 <xref:System.Web.UI.WebControls.SiteMapPath.PathSeparator%2A> <xref:System.Web.UI.WebControls.SiteMapPath.PathSeparatorStyle%2A> 忽略。

 此属性的值存储在视图状态中。

 设置此属性后，可以使用设计器工具自动将此属性的值保存到资源文件中。 有关详细信息，请参阅 <xref:System.ComponentModel.LocalizableAttribute> 和 [全球化和本地化](https://docs.microsoft.com/previous-versions/aspnet/c6zyy3s9(v=vs.100))。



## Examples
 下面的示例演示如何将的 <xref:System.Web.UI.WebControls.SiteMapPath.PathSeparator%2A> 属性设置 <xref:System.Web.UI.WebControls.SiteMapPath> 为默认值以外的其他字符串。

 [!code-aspx-csharp[System.Web.UI.WebControls.NavigationPath_decl_3#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.NavigationPath_decl_3/CS/aboutus2cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.NavigationPath_decl_3#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.NavigationPath_decl_3/VB/aboutus2vb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SiteMapPath.PathSeparatorStyle" />
        <altmember cref="P:System.Web.UI.WebControls.SiteMapPath.PathSeparatorTemplate" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/x20z8c51(v=vs.100)">SiteMapPath Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="PathSeparatorStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.Style PathSeparatorStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.Style PathSeparatorStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SiteMapPath.PathSeparatorStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PathSeparatorStyle As Style" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::Style ^ PathSeparatorStyle { System::Web::UI::WebControls::Style ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PathSeparatorStyle : System.Web.UI.WebControls.Style" Usage="System.Web.UI.WebControls.SiteMapPath.PathSeparatorStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(null)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(null)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.NotifyParentProperty(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.NotifyParentProperty(true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Style</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取用于 <see cref="P:System.Web.UI.WebControls.SiteMapPath.PathSeparator" /> 字符串的样式。</summary>
        <value><see cref="T:System.Web.UI.WebControls.Style" />，它包含 <see cref="T:System.Web.UI.WebControls.SiteMapPath" /> 控件的 <see cref="P:System.Web.UI.WebControls.SiteMapPath.PathSeparator" /> 文本的样式设置。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 使用 <xref:System.Web.UI.WebControls.SiteMapPath.PathSeparatorStyle%2A> 属性可控制导航路径节点之间出现的路径分隔符的外观。 常见样式设置包括字体属性和属性使用的字体的前景色 <xref:System.Web.UI.WebControls.SiteMapPath.PathSeparator%2A> 。

 如果 <xref:System.Web.UI.WebControls.SiteMapPath.PathSeparatorTemplate%2A> 定义了属性，则 <xref:System.Web.UI.WebControls.SiteMapPath.PathSeparator%2A> <xref:System.Web.UI.WebControls.SiteMapPath.PathSeparatorStyle%2A> 会忽略和属性。

 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/x20z8c51(v=vs.100)">SiteMapPath Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="PathSeparatorTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate PathSeparatorTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate PathSeparatorTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SiteMapPath.PathSeparatorTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property PathSeparatorTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ PathSeparatorTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PathSeparatorTemplate : System.Web.UI.ITemplate with get, set" Usage="System.Web.UI.WebControls.SiteMapPath.PathSeparatorTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(null)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(null)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.SiteMapNodeItem))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.SiteMapNodeItem))&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个控件模板，用于站点导航路径的路径分隔符。</summary>
        <value>一个 <see cref="T:System.Web.UI.ITemplate" /> 对象，它实现 <see cref="M:System.Web.UI.ITemplate.InstantiateIn(System.Web.UI.Control)" /> 方法，以呈现导航路径的路径分隔符的自定义内容。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 将设置 <xref:System.Web.UI.WebControls.SiteMapPath.PathSeparatorTemplate%2A> 为一个 <xref:System.Web.UI.ITemplate> 对象，以使用 <xref:System.Web.UI.WebControls.Image> 或某个其他控件（如 <xref:System.Web.UI.WebControls.Label> ）作为导航节点之间的路径分隔符，而不是 <xref:System.Web.UI.WebControls.SiteMapPath.PathSeparator%2A> 字符串。

 如果 <xref:System.Web.UI.WebControls.SiteMapPath.PathSeparatorTemplate%2A> 设置了属性，则模板将覆盖显示的 <xref:System.Web.UI.WebControls.SiteMapPath.PathSeparator%2A> 文本以及任何应用的内容 <xref:System.Web.UI.WebControls.SiteMapPath.PathSeparatorStyle%2A> 。

 您可以以声明方式将 <xref:System.Web.UI.WebControls.SiteMapPath.PathSeparatorTemplate%2A> 属性设置为任何 Web 服务器控件，而 ASP.NET 基础结构会执行必要的步骤，以将 Web 服务器控件作为包装 <xref:System.Web.UI.ITemplate> 。 但是，Web 服务器控件不实现接口， <xref:System.Web.UI.ITemplate> 因此，如果 <xref:System.Web.UI.ITemplate> 以编程方式使用属性，则必须 <xref:System.Web.UI.ITemplate> 为任何模板代码编写包装。 然后，将 <xref:System.Web.UI.WebControls.SiteMapPath.PathSeparatorTemplate%2A> 属性设置为包装器的实例 <xref:System.Web.UI.ITemplate> 。



## Examples
 下面的代码示例演示如何 <xref:System.Web.UI.WebControls.Image> <xref:System.Web.UI.WebControls.SiteMapPath.PathSeparatorTemplate%2A> 在 Web 窗体中以声明方式定义为。

 [!code-aspx-csharp[System.Web.UI.WebControls.NavigationPath_decl_2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.NavigationPath_decl_2/CS/aboutuscs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.NavigationPath_decl_2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.NavigationPath_decl_2/VB/aboutusvb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SiteMapPath.PathSeparator" />
        <altmember cref="P:System.Web.UI.WebControls.SiteMapPath.PathSeparatorStyle" />
        <altmember cref="T:System.Web.UI.ITemplate" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/x20z8c51(v=vs.100)">SiteMapPath Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="Provider">
      <MemberSignature Language="C#" Value="public System.Web.SiteMapProvider Provider { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.SiteMapProvider Provider" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SiteMapPath.Provider" />
      <MemberSignature Language="VB.NET" Value="Public Property Provider As SiteMapProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::SiteMapProvider ^ Provider { System::Web::SiteMapProvider ^ get(); void set(System::Web::SiteMapProvider ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Provider : System.Web.SiteMapProvider with get, set" Usage="System.Web.UI.WebControls.SiteMapPath.Provider" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.SiteMapProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置与 Web 服务器控件关联的 <see cref="T:System.Web.SiteMapProvider" />。</summary>
        <value>与该控件关联的 <see cref="T:System.Web.SiteMapProvider" /> 实例。 如果没有显式设置任何提供程序，将使用默认的站点地图提供程序。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.SiteMapPath.Provider%2A>属性指定要与控件一起使用的站点地图提供程序的实例。 如果设置，此提供程序可能与属性标识的提供程序不同 <xref:System.Web.UI.WebControls.SiteMapPath.SiteMapProvider%2A> 。

 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException"><see cref="P:System.Web.UI.WebControls.SiteMapDataSource.SiteMapProvider" /> 属性指定的提供程序不可用。

- 或 -

没有为站点配置默认提供程序。</exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/x20z8c51(v=vs.100)">SiteMapPath Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="protected internal override void Render (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Render(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SiteMapPath.Render(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub Render (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void Render(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.Render : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="siteMapPath.Render writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">接收呈现输出的 <see cref="T:System.Web.UI.HtmlTextWriter" />。</param>
        <summary>将 <see cref="T:System.Web.UI.WebControls.CompositeControl" /> 内容写入指定的 <see cref="T:System.Web.UI.HtmlTextWriter" /> 对象，以便在客户端上显示。</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.UI.WebControls.CompositeControl.Render(System.Web.UI.HtmlTextWriter)" />
      </Docs>
    </Member>
    <Member MemberName="RenderContents">
      <MemberSignature Language="C#" Value="protected internal override void RenderContents (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void RenderContents(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SiteMapPath.RenderContents(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub RenderContents (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void RenderContents(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.RenderContents : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="siteMapPath.RenderContents writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">表示用于向网页写入内容的输出流的 <see cref="T:System.Web.UI.HtmlTextWriter" />。</param>
        <summary>呈现 <see cref="T:System.Web.UI.WebControls.SiteMapPath" /> 控件中的节点。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.SiteMapPath> <xref:System.Web.UI.WebControls.SiteMapPath.RenderContents%2A> 如果该 <xref:System.Web.UI.WebControls.SiteMapPath.SkipLinkText%2A> 属性未设置为，则该控件将重写方法以执行其可访问性呈现 <xref:System.String.Empty?displayProperty=nameWithType> 。

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SiteMapPath.SkipLinkText" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/x20z8c51(v=vs.100)">SiteMapPath Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="RenderCurrentNodeAsLink">
      <MemberSignature Language="C#" Value="public virtual bool RenderCurrentNodeAsLink { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RenderCurrentNodeAsLink" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SiteMapPath.RenderCurrentNodeAsLink" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property RenderCurrentNodeAsLink As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool RenderCurrentNodeAsLink { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.RenderCurrentNodeAsLink : bool with get, set" Usage="System.Web.UI.WebControls.SiteMapPath.RenderCurrentNodeAsLink" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>指示是否将表示当前显示页的站点导航节点呈现为超链接。</summary>
        <value>如果将表示当前页的节点呈现为超链接，则为 <see langword="true" />；否则为 <see langword="false" />。 默认值是 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 表示当前显示的页的节点是 <xref:System.Web.SiteMap.CurrentNode%2A?displayProperty=nameWithType> 。 其 <xref:System.Web.SiteMapNode.Title%2A> 属性指定要为当前节点显示的文本，其 <xref:System.Web.SiteMapNode.Url%2A> 属性用于创建超链接。 默认情况下，不会为当前页呈现任何超链接，以防止出现错误的窗体发布。

 此属性的值存储在视图状态中。



## Examples
 下面的代码示例演示如何将属性设置 <xref:System.Web.UI.WebControls.SiteMapPath.RenderCurrentNodeAsLink%2A> 为， `true` 以使当前节点在 <xref:System.Web.UI.WebControls.SiteMapPath> 控件呈现其内容时成为超链接。

 [!code-aspx-csharp[System.Web.UI.WebControls.NavigationPath_decl_4#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.NavigationPath_decl_4/CS/catalog3cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.NavigationPath_decl_4#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.NavigationPath_decl_4/VB/catalog3vb.aspx#1)]

 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/x20z8c51(v=vs.100)">SiteMapPath Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="RootNodeStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.Style RootNodeStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.Style RootNodeStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SiteMapPath.RootNodeStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RootNodeStyle As Style" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::Style ^ RootNodeStyle { System::Web::UI::WebControls::Style ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RootNodeStyle : System.Web.UI.WebControls.Style" Usage="System.Web.UI.WebControls.SiteMapPath.RootNodeStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(null)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(null)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.NotifyParentProperty(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.NotifyParentProperty(true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Style</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取根节点显示文本的样式。</summary>
        <value><see cref="T:System.Web.UI.WebControls.Style" />，它包含 <see cref="T:System.Web.UI.WebControls.SiteMapPath" /> 控件根节点显示文本的样式设置。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 使用 <xref:System.Web.UI.WebControls.SiteMapPath.RootNodeStyle%2A> 属性可控制导航路径的根节点显示文本的外观。 默认情况下，显示文本是在 <xref:System.Web.SiteMapNode.Title%2A> 表示页面的的属性中指定的 <xref:System.Web.SiteMapNode> 。 常用样式设置包括自定义背景色、前景颜色、字体属性和节点间距。

 对于 <xref:System.Web.UI.WebControls.SiteMapPath> 节点，样式属性将按以下顺序合并为单个样式：

1.  <xref:System.Web.UI.WebControls.SiteMapPath.NodeStyle%2A>

2.  <xref:System.Web.UI.WebControls.SiteMapPath.CurrentNodeStyle%2A> 或 <xref:System.Web.UI.WebControls.SiteMapPath.RootNodeStyle%2A> ，具体取决于节点类型。

> [!NOTE]
>  如果将节点字体样式设置为删除线或上划线样式，则不会显示节点的默认下划线样式，除非将其显式设置为 `true` 。

 如果 <xref:System.Web.UI.WebControls.SiteMapPath.RootNodeTemplate%2A> 定义了属性，则 <xref:System.Web.UI.WebControls.SiteMapPath.RootNodeStyle%2A> 忽略属性。



## Examples
 下面的代码示例演示如何以声明方式设置 <xref:System.Web.UI.WebControls.SiteMapPath.RootNodeStyle%2A> 控件的特性 <xref:System.Web.UI.WebControls.SiteMapPath> 。

> [!IMPORTANT]
>  此示例具有一个接受用户输入的文本框，这是一个潜在的安全威胁。 默认情况下，ASP.NET 网页验证用户输入是否不包含脚本或 HTML 元素。 有关详细信息，请参阅[脚本侵入概述](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100))。

 [!code-aspx-csharp[System.Web.UI.WebControls.NavigationPath_decl_1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.NavigationPath_decl_1/CS/customerservicecs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.NavigationPath_decl_1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.NavigationPath_decl_1/VB/customerservicevb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SiteMapPath.RootNodeTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.SiteMapPath.NodeStyle" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/x20z8c51(v=vs.100)">SiteMapPath Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="RootNodeTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate RootNodeTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate RootNodeTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SiteMapPath.RootNodeTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property RootNodeTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ RootNodeTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberSignature Language="F#" Value="member this.RootNodeTemplate : System.Web.UI.ITemplate with get, set" Usage="System.Web.UI.WebControls.SiteMapPath.RootNodeTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(null)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(null)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.SiteMapNodeItem))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.SiteMapNodeItem))&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个控件模板，用于站点导航路径的根节点。</summary>
        <value>一个 <see cref="T:System.Web.UI.ITemplate" /> 对象，它实现 <see cref="M:System.Web.UI.ITemplate.InstantiateIn(System.Web.UI.Control)" /> 方法，以呈现导航路径根节点的自定义内容。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 将设置 <xref:System.Web.UI.WebControls.SiteMapPath.RootNodeTemplate%2A> 为 <xref:System.Web.UI.ITemplate> 使用 <xref:System.Web.UI.WebControls.Image> 控件或某个其他控件（如） <xref:System.Web.UI.WebControls.Label> 作为根节点的用户界面元素而不是字符串。

 如果 <xref:System.Web.UI.WebControls.SiteMapPath.RootNodeTemplate%2A> 设置了属性，则模板将覆盖显示的根导航节点文本，并将 <xref:System.Web.UI.WebControls.SiteMapPath.RootNodeStyle%2A> 其应用于它。 <xref:System.Web.UI.WebControls.SiteMapPath.CurrentNodeTemplate%2A> <xref:System.Web.UI.WebControls.SiteMapPath.CurrentNodeStyle%2A> 如果根页是当前显示的页，则模板还会重写和属性。

 您可以以声明方式将 <xref:System.Web.UI.WebControls.SiteMapPath.RootNodeTemplate%2A> 属性设置为任何 Web 服务器控件，而 ASP.NET 基础结构会执行必要的步骤，以将 Web 服务器控件作为包装 <xref:System.Web.UI.ITemplate> 。 但是，Web 服务器控件不实现接口， <xref:System.Web.UI.ITemplate> 因此，如果 <xref:System.Web.UI.ITemplate> 以编程方式使用属性，则必须 <xref:System.Web.UI.ITemplate> 为任何模板代码编写包装。 然后，将 <xref:System.Web.UI.WebControls.SiteMapPath.RootNodeTemplate%2A> 属性设置为包装器的实例 <xref:System.Web.UI.ITemplate> 。



## Examples
 下面的代码示例演示如何以编程方式定义实现 <xref:System.Web.UI.ITemplate> 接口包装控件的类 <xref:System.Web.UI.WebControls.Image> 。 然后，将 <xref:System.Web.UI.WebControls.SiteMapPath.RootNodeTemplate%2A> 属性设置为类的实例。

 [!code-aspx-csharp[System.Web.UI.WebControls.NavigationPath_decl_3#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.NavigationPath_decl_3/CS/aboutus2cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.NavigationPath_decl_3#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.NavigationPath_decl_3/VB/aboutus2vb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SiteMapPath.RootNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.SiteMapPath.NodeTemplate" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/x20z8c51(v=vs.100)">SiteMapPath Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="SaveViewState">
      <MemberSignature Language="C#" Value="protected override object SaveViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance object SaveViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SiteMapPath.SaveViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function SaveViewState () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Object ^ SaveViewState();" />
      <MemberSignature Language="F#" Value="override this.SaveViewState : unit -&gt; obj" Usage="siteMapPath.SaveViewState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>保存对 <see cref="T:System.Web.UI.WebControls.SiteMapPath" /> 控件的视图状态所做的更改。</summary>
        <returns>返回服务器控件的当前视图状态。 如果没有与该控件关联的视图状态，则此方法返回 <see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 视图状态是服务器控件属性的值的累计。 这些值自动置于服务器控件的 <xref:System.Web.UI.Control.ViewState%2A> 属性中，该属性是类的实例 <xref:System.Web.UI.StateBag> 。 然后，此属性的值在服务器控件生命周期的保存状态阶段后保存到字符串对象。

 保存视图状态时，此字符串对象将作为存储在 HTML 元素中的变量返回给客户端 `Hidden` 。 创作自定义服务器控件时，可以通过重写此方法并修改服务器控件的属性来提高效率 <xref:System.Web.UI.Control.ViewState%2A> 。

 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.SiteMapPath.LoadViewState(System.Object)" />
        <altmember cref="M:System.Web.UI.WebControls.SiteMapPath.TrackViewState" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/x20z8c51(v=vs.100)">SiteMapPath Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="ShowToolTips">
      <MemberSignature Language="C#" Value="public virtual bool ShowToolTips { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowToolTips" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SiteMapPath.ShowToolTips" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ShowToolTips As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool ShowToolTips { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ShowToolTips : bool with get, set" Usage="System.Web.UI.WebControls.SiteMapPath.ShowToolTips" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.Themeable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.Themeable(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示 <see cref="T:System.Web.UI.WebControls.SiteMapPath" /> 控件是否为超链接导航节点编写附加超链接特性。 根据客户端支持，在将鼠标悬停在设置了附加特性的超链接上时，将显示相应的工具提示。</summary>
        <value>如果应为超链接导航节点编写替换文字，则为 <see langword="true" />；否则为 <see langword="false" />。 默认值是 <see langword="true" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 最常见的方案是 `Title` html 超链接的 html 属性 `A Href` 。 例如，Microsoft Internet Explorer 4.0 及更高版本和 Netscape 6.0 及更高版本将 `Title` 属性作为悬停工具提示进行实现，而 opera 3.0 和更高版本在 " `Title` opera" 工具栏区域中同时实现 "工具提示" 和 "标题"。 并非所有客户端都显示其他超链接属性的工具提示。

 此属性的值存储在视图状态中。

 无法通过主题或样式表主题设置此属性。 有关详细信息，请参阅 <xref:System.Web.UI.ThemeableAttribute> 和 [ASP.NET 主题和外观](https://docs.microsoft.com/previous-versions/aspnet/ykzx33wh(v=vs.100))。



## Examples
 下面的代码示例演示如何 <xref:System.Web.UI.WebControls.SiteMapPath.ShowToolTips%2A> `false` 在 Web 窗体页中以声明方式将属性设置为。

 [!code-aspx-csharp[System.Web.UI.WebControls.NavigationPath_decl_4#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.NavigationPath_decl_4/CS/catalog3cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.NavigationPath_decl_4#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.NavigationPath_decl_4/VB/catalog3vb.aspx#1)]

 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/x20z8c51(v=vs.100)">SiteMapPath Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="SiteMapProvider">
      <MemberSignature Language="C#" Value="public virtual string SiteMapProvider { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SiteMapProvider" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SiteMapPath.SiteMapProvider" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property SiteMapProvider As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ SiteMapProvider { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SiteMapProvider : string with get, set" Usage="System.Web.UI.WebControls.SiteMapPath.SiteMapProvider" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue("")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue("")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.Themeable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.Themeable(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置用于呈现站点导航控件的 <see cref="T:System.Web.SiteMapProvider" /> 的名称。</summary>
        <value><see cref="T:System.Web.SiteMapProvider" /> 的名称，它定义要显示的 <see cref="T:System.Web.UI.WebControls.SiteMapPath" /> 的导航结构。 所有可用提供程序都包含在 <see cref="P:System.Web.SiteMap.Providers" /> 集合中，都可使用 <see cref="P:System.Web.SiteMapProviderCollection.Item(System.String)" /> 属性按名称进行枚举和检索。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.SiteMapPath>控件使用 <xref:System.Web.SiteMapProvider> 作为其呈现的站点地图数据的源。 如果 <xref:System.Web.UI.WebControls.SiteMapPath.SiteMapProvider%2A> 未设置该属性，则该 <xref:System.Web.UI.WebControls.SiteMapPath> 控件将使用由属性标识的提供程序 <xref:System.Web.SiteMap.Provider%2A?displayProperty=nameWithType> ，这是为 <xref:System.Web.SiteMapProvider> 配置层次结构中的站点定义的默认值（通常为） <xref:System.Web.XmlSiteMapProvider> 。 设置 <xref:System.Web.UI.WebControls.SiteMapPath.SiteMapProvider%2A> 属性将指示 <xref:System.Web.UI.WebControls.SiteMapPath> 控件呈现提供程序定义的站点地图数据。

 <xref:System.Web.UI.WebControls.SiteMapPath>控件直接使用 <xref:System.Web.SiteMapProvider> 及其 <xref:System.Web.SiteMapNode> 对象来显示站点地图信息。 其他控件（如 <xref:System.Web.UI.WebControls.Menu> 和 <xref:System.Web.UI.WebControls.TreeView> ）需要类提供的数据抽象 <xref:System.Web.UI.WebControls.SiteMapDataSource> 来显示相同的站点导航信息。

 此属性的值存储在视图状态中。

 无法通过主题或样式表主题设置此属性。 有关详细信息，请参阅 <xref:System.Web.UI.ThemeableAttribute> 和 [ASP.NET 主题和外观](https://docs.microsoft.com/previous-versions/aspnet/ykzx33wh(v=vs.100))。

 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/x20z8c51(v=vs.100)">SiteMapPath Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="SkipLinkText">
      <MemberSignature Language="C#" Value="public virtual string SkipLinkText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SkipLinkText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SiteMapPath.SkipLinkText" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property SkipLinkText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ SkipLinkText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SkipLinkText : string with get, set" Usage="System.Web.UI.WebControls.SiteMapPath.SkipLinkText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Localizable(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Localizable(true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，用于呈现替换文字，以让屏幕读取器跳过控件内容。</summary>
        <value>一个字符串，<see cref="T:System.Web.UI.WebControls.SiteMapPath" /> 控件使用不可见图像将其呈现为替换文字，作为对屏幕读取器的提示。 默认值为“跳过导航链接”。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.SiteMapPath.SkipLinkText%2A> 是一个属性，你可以将其设置为使网页更易于访问屏幕阅读器的用户。 包含重复出现在多个页面上的内容（如显示站点地图数据的控件）的网站可提供一种机制，使屏幕阅读器用户可以跳过重复的内容，使其不会被大声读出。

 <xref:System.Web.UI.WebControls.SiteMapPath>控件提供 <xref:System.Web.UI.WebControls.SiteMapPath.SkipLinkText%2A> 属性作为一种方法，让屏幕阅读器跳过整个控件。  如果 <xref:System.Web.UI.WebControls.SiteMapPath.SkipLinkText%2A> 设置了属性，则会呈现一个带有替换文本的不可见图像，为用户提供跳转到内容末尾的选项。 屏幕阅读器会大声朗读备用文本，但图像不会干扰页面的视觉对象流。 默认情况下，该属性设置为 "跳过导航链接"，这将使屏幕阅读器跳过控件。 如果要禁用此行为，请将属性设置为 <xref:System.String.Empty?displayProperty=nameWithType> 。

 此属性的值存储在视图状态中。

 设置此属性后，可以使用设计器工具自动将此属性的值保存到资源文件中。 有关详细信息，请参阅 <xref:System.ComponentModel.LocalizableAttribute> 和 [全球化和本地化](https://docs.microsoft.com/previous-versions/aspnet/c6zyy3s9(v=vs.100))。

 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/x20z8c51(v=vs.100)">SiteMapPath Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="TrackViewState">
      <MemberSignature Language="C#" Value="protected override void TrackViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void TrackViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SiteMapPath.TrackViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub TrackViewState ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void TrackViewState();" />
      <MemberSignature Language="F#" Value="override this.TrackViewState : unit -&gt; unit" Usage="siteMapPath.TrackViewState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>跟踪对 <see cref="T:System.Web.UI.WebControls.SiteMapPath" /> 控件的视图状态所做的更改。</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.UI.WebControls.SiteMapPath.LoadViewState(System.Object)" />
        <altmember cref="M:System.Web.UI.WebControls.SiteMapPath.SaveViewState" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/x20z8c51(v=vs.100)">SiteMapPath Web 服务器控件</related>
      </Docs>
    </Member>
  </Members>
</Type>
