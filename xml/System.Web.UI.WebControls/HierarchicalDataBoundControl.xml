<Type Name="HierarchicalDataBoundControl" FullName="System.Web.UI.WebControls.HierarchicalDataBoundControl">
  <Metadata><Meta Name="ms.openlocfilehash" Value="8e39bf2dc2735cbdb043caf3b7131abc3438ce9d" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86627183" /></Metadata><TypeSignature Language="C#" Value="public abstract class HierarchicalDataBoundControl : System.Web.UI.WebControls.BaseDataBoundControl" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit HierarchicalDataBoundControl extends System.Web.UI.WebControls.BaseDataBoundControl" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.HierarchicalDataBoundControl" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class HierarchicalDataBoundControl&#xA;Inherits BaseDataBoundControl" />
  <TypeSignature Language="C++ CLI" Value="public ref class HierarchicalDataBoundControl abstract : System::Web::UI::WebControls::BaseDataBoundControl" />
  <TypeSignature Language="F#" Value="type HierarchicalDataBoundControl = class&#xA;    inherit BaseDataBoundControl" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.BaseDataBoundControl</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName Language="C#">[System.ComponentModel.Designer("System.Web.UI.Design.WebControls.HierarchicalDataBoundControlDesigner, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.ComponentModel.Designer("System.Web.UI.Design.WebControls.HierarchicalDataBoundControlDesigner, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName Language="C#">[System.ComponentModel.Designer("System.Web.UI.Design.WebControls.HierarchicalDataBoundControlDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.ComponentModel.Designer("System.Web.UI.Design.WebControls.HierarchicalDataBoundControlDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>用作所有以分层形式显示数据的 ASP.NET 2.0 版数据绑定控件的基类。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.HierarchicalDataBoundControl>类是用于 ASP.NET 控件的基类，这些控件从 ASP.NET 分层数据源控件中检索数据，并将控件的用户界面元素绑定到该数据以供显示。 <xref:System.Web.UI.WebControls.TreeView>和 <xref:System.Web.UI.WebControls.Menu> 类派生自 <xref:System.Web.UI.WebControls.HierarchicalDataBoundControl> 。  
  
 页面开发人员不会 <xref:System.Web.UI.WebControls.HierarchicalDataBoundControl> 直接使用该类; 而是使用派生自此类的控件。  
  
 控件开发人员扩展此类以创建数据绑定控件，这些控件可用于实现接口的类 <xref:System.Web.UI.IHierarchicalDataSource> 以及从和类派生的类 <xref:System.Web.UI.HierarchicalDataSourceControl> <xref:System.Web.UI.HierarchicalDataSourceView> 。 从类派生类时 <xref:System.Web.UI.WebControls.HierarchicalDataBoundControl> ，重写方法， <xref:System.Web.UI.WebControls.HierarchicalDataBoundControl.PerformDataBinding%2A> 将控件的用户界面元素绑定到方法检索的数据 <xref:System.Web.UI.WebControls.HierarchicalDataBoundControl.GetData%2A> 。 在大多数情况下， <xref:System.Web.UI.WebControls.HierarchicalDataBoundControl.PerformDataBinding%2A> 方法是您将在派生类中重写的唯一方法。  
  
 对于 ASP.NET 2.0 数据绑定控件， <xref:System.Web.UI.WebControls.HierarchicalDataBoundControl.PerformSelect%2A> 方法等效于 <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> 方法，并调用来在运行时绑定数据。 <xref:System.Web.UI.WebControls.HierarchicalDataBoundControl.PerformSelect%2A>方法调用 <xref:System.Web.UI.WebControls.HierarchicalDataBoundControl.GetData%2A> 和 <xref:System.Web.UI.WebControls.HierarchicalDataBoundControl.PerformDataBinding%2A> 方法。  
  
   
  
## Examples  
 下面的代码示例演示如何从类派生类 <xref:System.Web.UI.WebControls.HierarchicalDataBoundControl> ，以创建自定义的数据绑定控件。 `GeneologyTree`控件呈现 `pre` HTML 节，其中包含从关联的数据源控件检索到的数据的文本树。  
  
 [!code-csharp[Samples.AspNet.GeneologyTree#2](~/samples/snippets/csharp/VS_Snippets_WebNet/Samples.AspNet.GeneologyTree/CS/geneologytree.cs#2)]
 [!code-vb[Samples.AspNet.GeneologyTree#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Samples.AspNet.GeneologyTree/VB/geneologytree.vb#2)]  
  
 下面的代码示例演示如何使用 `GeneologyTree` 在前面的示例中定义的控件，并将其绑定到 <xref:System.Web.UI.WebControls.XmlDataSource> 控件。  
  
 [!code-aspx-csharp[Samples.AspNet.GeneologyTree#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Samples.AspNet.GeneologyTree/CS/rootviewcs.aspx#1)]
 [!code-aspx-vb[Samples.AspNet.GeneologyTree#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Samples.AspNet.GeneologyTree/VB/rootviewvb.aspx#1)]  
  
 在代码示例中访问的 geneology.xml 文件包含以下数据。  
  
```  
<family>  
  <member title="great-grandfather">  
    <member title="grandfather" >  
      <member title="child" />  
      <member title="father" >  
         <member title="son" />  
      </member>  
    </member>  
  </member>  
</family>  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected HierarchicalDataBoundControl ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.HierarchicalDataBoundControl.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; HierarchicalDataBoundControl();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Web.UI.WebControls.HierarchicalDataBoundControl" /> 类的新实例。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DataSourceID">
      <MemberSignature Language="C#" Value="public override string DataSourceID { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataSourceID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.HierarchicalDataBoundControl.DataSourceID" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property DataSourceID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ DataSourceID { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataSourceID : string with get, set" Usage="System.Web.UI.WebControls.HierarchicalDataBoundControl.DataSourceID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.IDReferenceProperty(typeof(System.Web.UI.HierarchicalDataSourceControl))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.IDReferenceProperty(typeof(System.Web.UI.HierarchicalDataSourceControl))&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置控件的 ID，数据绑定控件从该控件中检索其数据项列表。</summary>
        <value>表示数据源的控件的 ID，数据绑定控件从该控件中检索其数据。 默认值为 <see cref="F:System.String.Empty" />。</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.UI.WebControls.BaseDataBoundControl.DataSourceID" />
      </Docs>
    </Member>
    <Member MemberName="GetData">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.HierarchicalDataSourceView GetData (string viewPath);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.UI.HierarchicalDataSourceView GetData(string viewPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.HierarchicalDataBoundControl.GetData(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetData (viewPath As String) As HierarchicalDataSourceView" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Web::UI::HierarchicalDataSourceView ^ GetData(System::String ^ viewPath);" />
      <MemberSignature Language="F#" Value="abstract member GetData : string -&gt; System.Web.UI.HierarchicalDataSourceView&#xA;override this.GetData : string -&gt; System.Web.UI.HierarchicalDataSourceView" Usage="hierarchicalDataBoundControl.GetData viewPath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.HierarchicalDataSourceView</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="viewPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="viewPath">要检索的视图的分层路径。</param>
        <summary>检索数据绑定控件用于执行数据操作的 <see cref="T:System.Web.UI.HierarchicalDataSourceView" /> 对象。</summary>
        <returns><see cref="T:System.Web.UI.HierarchicalDataSourceView" /> 对象，数据绑定控件使用此对象执行数据操作。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.HierarchicalDataBoundControl.GetData%2A>方法 <xref:System.Web.UI.HierarchicalDataSourceView> 通过调用方法从关联的数据源控件中检索对象 <xref:System.Web.UI.WebControls.HierarchicalDataBoundControl.GetDataSource%2A> 。  
  
   
  
## Examples  
 下面的代码示例演示如何 <xref:System.Web.UI.WebControls.HierarchicalDataBoundControl.GetData%2A> 调用方法，以便 <xref:System.Web.UI.HierarchicalDataSourceView> 从关联的数据源控件中检索对象，以及如何 <xref:System.Web.UI.HierarchicalDataSourceView.Select%2A?displayProperty=nameWithType> 调用方法来检索数据。 此代码示例是为类提供的更大示例的一部分 <xref:System.Web.UI.WebControls.HierarchicalDataBoundControl> 。  
  
 [!code-csharp[Samples.AspNet.GeneologyTree#4](~/samples/snippets/csharp/VS_Snippets_WebNet/Samples.AspNet.GeneologyTree/CS/geneologytree.cs#4)]
 [!code-vb[Samples.AspNet.GeneologyTree#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Samples.AspNet.GeneologyTree/VB/geneologytree.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">对于指定的 <paramref name="viewPath" />，未能检索到 <see cref="T:System.Web.UI.HierarchicalDataSourceView" />。</exception>
        <altmember cref="P:System.Web.UI.WebControls.DataBoundControl.DataMember" />
        <altmember cref="M:System.Web.UI.WebControls.HierarchicalDataBoundControl.GetDataSource" />
      </Docs>
    </Member>
    <Member MemberName="GetDataSource">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.IHierarchicalDataSource GetDataSource ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.UI.IHierarchicalDataSource GetDataSource() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.HierarchicalDataBoundControl.GetDataSource" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetDataSource () As IHierarchicalDataSource" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Web::UI::IHierarchicalDataSource ^ GetDataSource();" />
      <MemberSignature Language="F#" Value="abstract member GetDataSource : unit -&gt; System.Web.UI.IHierarchicalDataSource&#xA;override this.GetDataSource : unit -&gt; System.Web.UI.IHierarchicalDataSource" Usage="hierarchicalDataBoundControl.GetDataSource " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.IHierarchicalDataSource</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>如果存在与数据绑定控件关联的 <see cref="T:System.Web.UI.IHierarchicalDataSource" />，则检索它。</summary>
        <returns>表示数据源的 <see cref="T:System.Web.UI.IHierarchicalDataSource" /> 实例，此数据源由 <see cref="P:System.Web.UI.WebControls.DataBoundControl.DataSourceID" /> 属性标识。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.HierarchicalDataBoundControl.GetData%2A>方法 <xref:System.Web.UI.WebControls.HierarchicalDataBoundControl.GetDataSource%2A> 在内部调用方法。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">当前容器中不存在由 <see cref="P:System.Web.UI.WebControls.HierarchicalDataBoundControl.DataSourceID" /> 属性标识的数据源控件。  
  
-或- 
由 <see cref="P:System.Web.UI.WebControls.HierarchicalDataBoundControl.DataSourceID" /> 属性标识的数据源控件不实现 <see cref="T:System.Web.UI.IHierarchicalDataSource" /> 接口。</exception>
        <altmember cref="M:System.Web.UI.WebControls.HierarchicalDataBoundControl.GetData(System.String)" />
        <altmember cref="T:System.Web.UI.IHierarchicalDataSource" />
      </Docs>
    </Member>
    <Member MemberName="MarkAsDataBound">
      <MemberSignature Language="C#" Value="protected void MarkAsDataBound ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void MarkAsDataBound() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.HierarchicalDataBoundControl.MarkAsDataBound" />
      <MemberSignature Language="VB.NET" Value="Protected Sub MarkAsDataBound ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void MarkAsDataBound();" />
      <MemberSignature Language="F#" Value="member this.MarkAsDataBound : unit -&gt; unit" Usage="hierarchicalDataBoundControl.MarkAsDataBound " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>将视图状态中的控件状态设置为成功绑定到数据。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 数据绑定控件在视图状态中维护一个值，该值指示当前是否已绑定到数据。 <xref:System.Web.UI.WebControls.HierarchicalDataBoundControl.MarkAsDataBound%2A>方法将值设置为 `true` 。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDataPropertyChanged">
      <MemberSignature Language="C#" Value="protected override void OnDataPropertyChanged ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnDataPropertyChanged() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.HierarchicalDataBoundControl.OnDataPropertyChanged" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnDataPropertyChanged ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnDataPropertyChanged();" />
      <MemberSignature Language="F#" Value="override this.OnDataPropertyChanged : unit -&gt; unit" Usage="hierarchicalDataBoundControl.OnDataPropertyChanged " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>在其中一个基数据源标识属性更改时被调用，以将数据绑定控件重新绑定到其数据。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.HierarchicalDataBoundControl.OnDataPropertyChanged%2A>当 <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataSource%2A> 或在 <xref:System.Web.UI.WebControls.HierarchicalDataBoundControl.DataSourceID%2A> 页面事件之后的任何时间更改时，将调用方法 <xref:System.Web.UI.Control.PreRender> 。  
  
   
  
## Examples  
 下面的代码示例演示了一个数据绑定控件， <xref:System.Web.UI.WebControls.HierarchicalDataBoundControl.OnDataPropertyChanged%2A> 如果在数据绑定控件初始化之后更改了用于标识数据源的属性，则该控件可以调用方法。 此代码示例是为类提供的更大示例的一部分 <xref:System.Web.UI.WebControls.HierarchicalDataBoundControl> 。  
  
 [!code-csharp[Samples.AspNet.GeneologyTree#3](~/samples/snippets/csharp/VS_Snippets_WebNet/Samples.AspNet.GeneologyTree/CS/geneologytree.cs#3)]
 [!code-vb[Samples.AspNet.GeneologyTree#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Samples.AspNet.GeneologyTree/VB/geneologytree.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDataSourceChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnDataSourceChanged (object sender, EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDataSourceChanged(object sender, class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.HierarchicalDataBoundControl.OnDataSourceChanged(System.Object,System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDataSourceChanged (sender As Object, e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDataSourceChanged(System::Object ^ sender, EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDataSourceChanged : obj * EventArgs -&gt; unit&#xA;override this.OnDataSourceChanged : obj * EventArgs -&gt; unit" Usage="hierarchicalDataBoundControl.OnDataSourceChanged (sender, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="sender">此事件的源，即 <see cref="T:System.Web.UI.IHierarchicalDataSource" /> 对象。</param>
        <param name="e">包含事件数据的 <see cref="T:System.EventArgs" /> 对象。</param>
        <summary>在与数据绑定控件一起使用的 <see cref="T:System.Web.UI.IHierarchicalDataSource" /> 实例引发 <see cref="E:System.Web.UI.IDataSource.DataSourceChanged" /> 事件时被调用。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.HierarchicalDataBoundControl>类处理 <xref:System.Web.UI.IHierarchicalDataSource.DataSourceChanged> 要将属性设置为的事件 <xref:System.Web.UI.WebControls.BaseDataBoundControl.RequiresDataBinding%2A> `true` 。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnLoad">
      <MemberSignature Language="C#" Value="protected internal override void OnLoad (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnLoad(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.HierarchicalDataBoundControl.OnLoad(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnLoad (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnLoad(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnLoad : EventArgs -&gt; unit" Usage="hierarchicalDataBoundControl.OnLoad e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件数据的 <see cref="T:System.EventArgs" /> 对象。</param>
        <summary>处理 <see cref="E:System.Web.UI.Control.Load" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.HierarchicalDataBoundControl> <xref:System.Web.UI.WebControls.BaseDataBoundControl.RequiresDataBinding%2A> `true` 如果 HTTP 请求不是回发，则处理 Load 事件以将属性设置为。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPagePreLoad">
      <MemberSignature Language="C#" Value="protected override void OnPagePreLoad (object sender, EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnPagePreLoad(object sender, class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.HierarchicalDataBoundControl.OnPagePreLoad(System.Object,System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnPagePreLoad (sender As Object, e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnPagePreLoad(System::Object ^ sender, EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnPagePreLoad : obj * EventArgs -&gt; unit" Usage="hierarchicalDataBoundControl.OnPagePreLoad (sender, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="sender">引发事件的 <see cref="T:System.Web.UI.Page" />。</param>
        <param name="e">包含事件数据的 <see cref="T:System.EventArgs" />。</param>
        <summary>在加载数据绑定控件之前设置该控件的初始化状态。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.HierarchicalDataBoundControl.OnPagePreLoad%2A> <xref:System.Web.UI.WebControls.BaseDataBoundControl.RequiresDataBinding%2A> `true` 如果 HTTP 请求为回发并启用了视图状态，但尚未绑定数据绑定控件，则将设置为。 此方案通常用于控件（例如） <xref:System.Web.UI.WebControls.Wizard> 和 <xref:System.Web.UI.WebControls.MultiView> 控件的可见性在运行时发生更改。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PerformDataBinding">
      <MemberSignature Language="C#" Value="protected internal virtual void PerformDataBinding ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void PerformDataBinding() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.HierarchicalDataBoundControl.PerformDataBinding" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub PerformDataBinding ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void PerformDataBinding();" />
      <MemberSignature Language="F#" Value="abstract member PerformDataBinding : unit -&gt; unit&#xA;override this.PerformDataBinding : unit -&gt; unit" Usage="hierarchicalDataBoundControl.PerformDataBinding " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>在派生类中重写时，将数据源中的数据绑定到控件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A>从类派生数据绑定控件时，实现此方法而不是方法 <xref:System.Web.UI.WebControls.HierarchicalDataBoundControl> 。 在中放置控件的数据绑定逻辑可 <xref:System.Web.UI.WebControls.HierarchicalDataBoundControl.PerformDataBinding%2A> 防止 <xref:System.Web.UI.Control.DataBinding> <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBound> 按错误的顺序引发和事件。  
  
 虽然基类 <xref:System.Web.UI.WebControls.HierarchicalDataBoundControl> 不为此方法提供任何特定的实现，但方法 <xref:System.Web.UI.WebControls.HierarchicalDataBoundControl.PerformDataBinding%2A> 会调用方法， <xref:System.Web.UI.WebControls.HierarchicalDataBoundControl.PerformSelect%2A> 以将任何用户界面控件的值绑定到由方法检索的数据 <xref:System.Web.UI.WebControls.HierarchicalDataBoundControl.PerformSelect%2A> 。  
  
   
  
## Examples  
 下面的代码示例演示如何实现 <xref:System.Web.UI.WebControls.HierarchicalDataBoundControl.PerformDataBinding%2A> 派生自的类中的方法 <xref:System.Web.UI.WebControls.HierarchicalDataBoundControl> 。 `GeneologyTree`控件将循环访问 <xref:System.Web.UI.IHierarchicalEnumerable> <xref:System.Web.UI.IHierarchyData> 从其关联的检索的和对象 <xref:System.Web.UI.HierarchicalDataSourceView> ，并为它所绑定到的数据创建文本树结构。 此代码示例是为类提供的更大示例的一部分 <xref:System.Web.UI.WebControls.HierarchicalDataBoundControl> 。  
  
 [!code-csharp[Samples.AspNet.GeneologyTree#4](~/samples/snippets/csharp/VS_Snippets_WebNet/Samples.AspNet.GeneologyTree/CS/geneologytree.cs#4)]
 [!code-vb[Samples.AspNet.GeneologyTree#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Samples.AspNet.GeneologyTree/VB/geneologytree.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PerformSelect">
      <MemberSignature Language="C#" Value="protected override void PerformSelect ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void PerformSelect() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.HierarchicalDataBoundControl.PerformSelect" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub PerformSelect ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void PerformSelect();" />
      <MemberSignature Language="F#" Value="override this.PerformSelect : unit -&gt; unit" Usage="hierarchicalDataBoundControl.PerformSelect " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>从关联的数据源中检索数据。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 在 <xref:System.Web.UI.WebControls.HierarchicalDataBoundControl.PerformSelect%2A> 检索数据后调用方法，以将数据绑定到数据绑定控件的元素。 派生类型重写此方法，以便仅在默认实现不足的情况下检索数据。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.HierarchicalDataBoundControl.PerformDataBinding" />
      </Docs>
    </Member>
    <Member MemberName="ValidateDataSource">
      <MemberSignature Language="C#" Value="protected override void ValidateDataSource (object dataSource);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void ValidateDataSource(object dataSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.HierarchicalDataBoundControl.ValidateDataSource(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub ValidateDataSource (dataSource As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void ValidateDataSource(System::Object ^ dataSource);" />
      <MemberSignature Language="F#" Value="override this.ValidateDataSource : obj -&gt; unit" Usage="hierarchicalDataBoundControl.ValidateDataSource dataSource" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSource" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="dataSource">设置为 <see cref="P:System.Web.UI.WebControls.BaseDataBoundControl.DataSource" /> 属性的对象。</param>
        <summary>验证数据绑定控件绑定到的对象是否可以和该控件一同使用。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.HierarchicalDataBoundControl.ValidateDataSource%2A>仅在 <xref:System.Web.UI.WebControls.BaseDataBoundControl> 类的赋值函数 (setter) 为属性调用方法 <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataSource%2A> 。 <xref:System.Web.UI.WebControls.HierarchicalDataBoundControl>类检查为属性设置的对象的类型， <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataSource%2A> 以确保它是 <xref:System.Web.UI.IHierarchicalEnumerable> 或接口的实例 <xref:System.Web.UI.IHierarchicalDataSource> 。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><paramref name="dataSource" /> 不是 <see langword="null" />，不实现 <see cref="T:System.Web.UI.IHierarchicalEnumerable" /> 或 <see cref="T:System.Web.UI.IHierarchicalDataSource" /> 接口。</exception>
        <altmember cref="P:System.Web.UI.WebControls.BaseDataBoundControl.DataSource" />
        <altmember cref="M:System.Web.UI.WebControls.BaseDataBoundControl.ValidateDataSource(System.Object)" />
      </Docs>
    </Member>
  </Members>
</Type>
