<Type Name="Panel" FullName="System.Web.UI.WebControls.Panel">
  <Metadata><Meta Name="ms.openlocfilehash" Value="086e00cea126422f0f686f80c2ce5a16b76a2470" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86611024" /></Metadata><TypeSignature Language="C#" Value="public class Panel : System.Web.UI.WebControls.WebControl" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Panel extends System.Web.UI.WebControls.WebControl" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.Panel" />
  <TypeSignature Language="VB.NET" Value="Public Class Panel&#xA;Inherits WebControl" />
  <TypeSignature Language="C++ CLI" Value="public ref class Panel : System::Web::UI::WebControls::WebControl" />
  <TypeSignature Language="F#" Value="type Panel = class&#xA;    inherit WebControl" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.WebControl</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1">
      <AttributeName Language="C#">[System.ComponentModel.Designer("System.Web.UI.Design.WebControls.PanelDesigner, System.Design, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.ComponentModel.Designer("System.Web.UI.Design.WebControls.PanelDesigner, System.Design, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Web.UI.ParseChildren(false)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Web.UI.ParseChildren(false)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Web.UI.PersistChildren(true)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Web.UI.PersistChildren(true)&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1">
      <AttributeName Language="C#">[System.Web.UI.ToolboxData("&lt;{0}:Panel runat=server&gt;Panel&lt;/{0}:Panel&gt;")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Web.UI.ToolboxData("&lt;{0}:Panel runat=server&gt;Panel&lt;/{0}:Panel&gt;")&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName Language="C#">[System.ComponentModel.Designer("System.Web.UI.Design.WebControls.PanelContainerDesigner, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.ComponentModel.Designer("System.Web.UI.Design.WebControls.PanelContainerDesigner, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName Language="C#">[System.ComponentModel.Designer("System.Web.UI.Design.WebControls.PanelContainerDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.ComponentModel.Designer("System.Web.UI.Design.WebControls.PanelContainerDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>表示作为其他控件的容器的控件。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 本主题内容：  
  
-   [介绍](#introduction)  
  
-   [声明性语法](#declarative_syntax)  
  
<a name="introduction"></a>   
## <a name="introduction"></a>简介  
 <xref:System.Web.UI.WebControls.Panel>控件是其他控件的容器。 如果要以编程方式生成控件、隐藏/显示一组控件或对一组控件进行本地化，此方法特别有用。  
  
 <xref:System.Web.UI.WebControls.Panel.Direction%2A>属性用于本地化 <xref:System.Web.UI.WebControls.Panel> 控件的内容，以显示从右向左书写的语言（例如阿拉伯语或希伯来语）的文本。  
  
 <xref:System.Web.UI.WebControls.Panel>控件提供了几个属性，这些属性允许您自定义行为并显示其内容。 使用 <xref:System.Web.UI.WebControls.Panel.BackImageUrl%2A> 属性显示控件的自定义图像 <xref:System.Web.UI.WebControls.Panel> 。 使用 <xref:System.Web.UI.WebControls.Panel.ScrollBars%2A> 属性为控件指定滚动条。  
  
<a name="declarative_syntax"></a>   
## <a name="declarative-syntax"></a>声明性语法  
  
```  
<asp:Panel  
    AccessKey="string"  
    BackColor="color name|#dddddd"  
    BackImageUrl="uri"  
    BorderColor="color name|#dddddd"  
    BorderStyle="NotSet|None|Dotted|Dashed|Solid|Double|Groove|Ridge|  
        Inset|Outset"  
    BorderWidth="size"  
    CssClass="string"  
    DefaultButton="string"  
    Direction="NotSet|LeftToRight|RightToLeft"  
    Enabled="True|False"  
    EnableTheming="True|False"  
    EnableViewState="True|False"  
    Font-Bold="True|False"  
    Font-Italic="True|False"  
    Font-Names="string"  
    Font-Overline="True|False"  
    Font-Size="string|Smaller|Larger|XX-Small|X-Small|Small|Medium|  
        Large|X-Large|XX-Large"  
    Font-Strikeout="True|False"  
    Font-Underline="True|False"  
    ForeColor="color name|#dddddd"  
    GroupingText="string"  
    Height="size"  
    HorizontalAlign="NotSet|Left|Center|Right|Justify"  
    ID="string"  
    OnDataBinding="DataBinding event handler"  
    OnDisposed="Disposed event handler"  
    OnInit="Init event handler"  
    OnLoad="Load event handler"  
    OnPreRender="PreRender event handler"  
    OnUnload="Unload event handler"  
    runat="server"  
    ScrollBars="None|Horizontal|Vertical|Both|Auto"  
    SkinID="string"  
    Style="string"  
    TabIndex="integer"  
    ToolTip="string"  
    Visible="True|False"  
    Width="size"  
    Wrap="True|False"  
/>  
```  
  
   
  
## Examples  
 下面的示例演示 <xref:System.Web.UI.WebControls.Panel> 如何使用控件以编程方式生成控件并隐藏/显示一组控件。  
  
> [!NOTE]
>  下面的代码示例使用单文件代码模型，如果直接复制到代码隐藏文件中，则可能无法正常工作。 必须将此代码示例复制到扩展名为 .aspx 的空文本文件中。 有关 Web 窗体代码模型的详细信息，请参阅 [ASP.NET Web 窗体页代码模型](https://docs.microsoft.com/previous-versions/aspnet/015103yb(v=vs.100))。  
  
 [!code-aspx-csharp[Classic Panel Example 2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic Panel Example 2/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic Panel Example 2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic Panel Example 2/VB/sourcevb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.WebControl" />
    <altmember cref="P:System.Web.UI.WebControls.Panel.Direction" />
    <altmember cref="P:System.Web.UI.WebControls.Panel.BackImageUrl" />
    <altmember cref="P:System.Web.UI.WebControls.Panel.ScrollBars" />
    <related type="Article" href="https://msdn.microsoft.com/library/127b61ed-87f2-46f4-92a3-785166e7245b">面板 Web 服务器控件概述</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Panel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Panel.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Panel();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Web.UI.WebControls.Panel" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的示例演示如何创建控件的新实例，该 <xref:System.Web.UI.WebControls.Panel> 控件包含 <xref:System.Web.UI.WebControls.Label> 右对齐的控件。  
  
> [!NOTE]
>  下面的代码示例使用单文件代码模型，如果直接复制到代码隐藏文件中，则可能无法正常工作。 必须将此代码示例复制到扩展名为 .aspx 的空文本文件中。 有关 Web 窗体代码模型的详细信息，请参阅 [ASP.NET Web 窗体页代码模型](https://docs.microsoft.com/previous-versions/aspnet/015103yb(v=vs.100))。  
  
 [!code-aspx-csharp[Classic Panel.Panel Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic Panel.Panel Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic Panel.Panel Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic Panel.Panel Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddAttributesToRender">
      <MemberSignature Language="C#" Value="protected override void AddAttributesToRender (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void AddAttributesToRender(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Panel.AddAttributesToRender(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub AddAttributesToRender (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void AddAttributesToRender(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.AddAttributesToRender : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="panel.AddAttributesToRender writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">表示在客户端上呈现 HTML 内容的输出流的 <see cref="T:System.Web.UI.HtmlTextWriter" />。</param>
        <summary>将有关背景图像、对齐方式、换行和方向的信息添加到特性列表以进行呈现。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Panel.AddAttributesToRender%2A>方法主要由控件开发人员使用。  
  
   
  
## Examples  
 下面的代码示例演示如何重写 <xref:System.Web.UI.WebControls.Panel.AddAttributesToRender%2A> 自定义服务器控件中的方法，使 <xref:System.Web.UI.WebControls.Panel> 文本始终显示为粗体。  
  
 [!code-aspx-csharp[CustomPanelAddAttributesToRender#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomPanelAddAttributesToRender/CS/custom_panel_addattributestorendercs.aspx#1)]
 [!code-aspx-vb[CustomPanelAddAttributesToRender#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomPanelAddAttributesToRender/VB/custom_panel_addattributestorendervb.aspx#1)]  
  
 [!code-csharp[CustomPanelAddAttributesToRender#2](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomPanelAddAttributesToRender/CS/custom_panel_addattributestorender.cs#2)]
 [!code-vb[CustomPanelAddAttributesToRender#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomPanelAddAttributesToRender/VB/custom_panel_addattributestorender.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="P:System.Web.UI.WebControls.Panel.DefaultButton" /> 控件的 <see cref="T:System.Web.UI.WebControls.Panel" /> 属性必须是类型为 <see cref="T:System.Web.UI.WebControls.IButtonControl" /> 的控件的 ID。</exception>
      </Docs>
    </Member>
    <Member MemberName="BackImageUrl">
      <MemberSignature Language="C#" Value="public virtual string BackImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string BackImageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Panel.BackImageUrl" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property BackImageUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ BackImageUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.BackImageUrl : string with get, set" Usage="System.Web.UI.WebControls.Panel.BackImageUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName Language="C#">[System.ComponentModel.Bindable(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Bindable(true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue("")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue("")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName Language="C#">[System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName Language="C#">[System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Web.UI.UrlProperty]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.UrlProperty&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置面板控件背景图像的 URL。</summary>
        <value>面板控件背景图像的 URL。 默认值为 <see cref="F:System.String.Empty" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用此属性可以显示控件的自定义图像 <xref:System.Web.UI.WebControls.Panel> 。  
  
 如果图像小于 <xref:System.Web.UI.WebControls.Panel> ，则会平铺以填充 <xref:System.Web.UI.WebControls.Panel> 。  
  
> [!NOTE]
>  此属性仅在支持 HTML 4.0 或更高版本的浏览器上受支持。  
  
   
  
## Examples  
 下面的示例演示如何以编程方式设置 <xref:System.Web.UI.WebControls.Panel.BackImageUrl%2A> 的属性 <xref:System.Web.UI.WebControls.Panel> 。  
  
> [!NOTE]
>  下面的代码示例使用单文件代码模型，如果直接复制到代码隐藏文件中，则可能无法正常工作。 必须将此代码示例复制到扩展名为 .aspx 的空文本文件中。 有关 Web 窗体代码模型的详细信息，请参阅 [ASP.NET Web 窗体页代码模型](https://docs.microsoft.com/previous-versions/aspnet/015103yb(v=vs.100))。  
  
 [!code-aspx-csharp[Classic Panel.BackImageUrl Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic Panel.BackImageUrl Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic Panel.BackImageUrl Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic Panel.BackImageUrl Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateControlStyle">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.WebControls.Style CreateControlStyle ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.WebControls.Style CreateControlStyle() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Panel.CreateControlStyle" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateControlStyle () As Style" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Web::UI::WebControls::Style ^ CreateControlStyle();" />
      <MemberSignature Language="F#" Value="override this.CreateControlStyle : unit -&gt; System.Web.UI.WebControls.Style" Usage="panel.CreateControlStyle " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Style</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>创建由 <see cref="T:System.Web.UI.WebControls.Panel" /> 控件在内部用来实现所有与样式有关的属性的样式对象。</summary>
        <returns>包含控件的样式属性的 <see cref="T:System.Web.UI.WebControls.PanelStyle" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Panel.CreateControlStyle%2A>方法主要由控件开发人员使用。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultButton">
      <MemberSignature Language="C#" Value="public virtual string DefaultButton { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DefaultButton" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Panel.DefaultButton" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property DefaultButton As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ DefaultButton { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DefaultButton : string with get, set" Usage="System.Web.UI.WebControls.Panel.DefaultButton" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue("")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue("")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Web.UI.Themeable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.Themeable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置 <see cref="T:System.Web.UI.WebControls.Panel" /> 控件中包含的默认按钮的标识符。</summary>
        <value>一个字符串值，对应于 <see cref="P:System.Web.UI.Control.ID" /> 中包含的按钮控件的 <see cref="T:System.Web.UI.WebControls.Panel" />。 默认值为空字符串，指示 <see cref="T:System.Web.UI.WebControls.Panel" /> 没有默认按钮。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用 <xref:System.Web.UI.WebControls.Panel.DefaultButton%2A> 属性指示在 <xref:System.Web.UI.WebControls.Panel> 控件具有焦点并且用户按 ENTER 键时单击的按钮。 <xref:System.Web.UI.WebControls.Panel.DefaultButton%2A>可以设置为控件的标识符，也可以设置为 <xref:System.Web.UI.WebControls.Button> <xref:System.Web.UI.WebControls.IButtonControl> 除控件以外实现接口的任何控件的标识符 <xref:System.Web.UI.WebControls.LinkButton> 。  
  
 如果将 <xref:System.Web.UI.WebControls.Panel.DefaultButton%2A> 设置为不实现接口的控件 <xref:System.Web.UI.WebControls.IButtonControl> ，或设置为不包含在控件中的控件 <xref:System.Web.UI.WebControls.Panel> ，则该 <xref:System.Web.UI.WebControls.Panel> 控件在呈现时将引发异常。  
  
 <xref:System.Web.UI.WebControls.Panel.DefaultButton%2A>以下方案不支持设置属性：  
  
-   将焦点设置在面板的输入控件外，然后按 ENTER 键。 不保证默认的回发操作触发。  
  
-   按 ENTER 键时，焦点位于多行文本框内。 在多行文本框中，按 ENTER 键应在文本框中创建一个新行，这是预期的行为。 在浏览器中，如果在多行文本框中按 ENTER 键，则会触发回发，但要改为输入键来创建新行，则可以将 JavaScript 函数附加到输入控件。 脚本应捕获 ENTER 键并停止回发。 例如，可以使用 <xref:System.Web.UI.WebControls.WebControl.Attributes%2A> 属性集合添加事件的客户端脚本 `onKeyPress` 。  
  
-   引用作为控件的默认按钮 <xref:System.Web.UI.WebControls.LinkButton> 。 仅 <xref:System.Web.UI.WebControls.Button> <xref:System.Web.UI.WebControls.ImageButton> 支持和控件。  
  
-   在 <xref:System.Web.UI.WebControls.Panel.DefaultButton%2A> 异步回发过程中，当 <xref:System.Web.UI.WebControls.Panel> 控件不在控件内时，以编程方式更改 <xref:System.Web.UI.UpdatePanel> 。 可以通过将一个或多个控件添加到页面上来启用异步 post <xref:System.Web.UI.UpdatePanel> 。 <xref:System.Web.UI.UpdatePanel> 控件可用于更新页面的选定区域，而不是使用回发来更新整个页面。 有关详细信息，请参阅 [UpdatePanel 控件概述](https://docs.microsoft.com/previous-versions/aspnet/bb386454(v=vs.100)) 和 [部分页呈现概述](https://docs.microsoft.com/previous-versions/aspnet/bb386573(v=vs.100))。  
  
-   通过主题或样式表主题设置此属性。 有关详细信息，请参阅 <xref:System.Web.UI.ThemeableAttribute> 和 [ASP.NET 主题和外观](https://docs.microsoft.com/previous-versions/aspnet/ykzx33wh(v=vs.100))。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.Button.OnClick(System.EventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.IButtonControl.Click" />
      </Docs>
    </Member>
    <Member MemberName="Direction">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.ContentDirection Direction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.ContentDirection Direction" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Panel.Direction" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Direction As ContentDirection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::ContentDirection Direction { System::Web::UI::WebControls::ContentDirection get(); void set(System::Web::UI::WebControls::ContentDirection value); };" />
      <MemberSignature Language="F#" Value="member this.Direction : System.Web.UI.WebControls.ContentDirection with get, set" Usage="System.Web.UI.WebControls.Panel.Direction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ContentDirection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置在 <see cref="T:System.Web.UI.WebControls.Panel" /> 控件中显示包含文本的控件的方向。</summary>
        <value><see cref="T:System.Web.UI.WebControls.ContentDirection" /> 枚举值之一。 默认值为 <see langword="NotSet" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用 <xref:System.Web.UI.WebControls.Panel.Direction%2A> 属性指定控件中包含文本的控件的显示方向 <xref:System.Web.UI.WebControls.Panel> 。 使用枚举值之一设置此属性 <xref:System.Web.UI.WebControls.ContentDirection> 。 下表列出了可能的值。  
  
|值|说明|  
|-----------|-----------------|  
|`NotSet`|未设置内容方向。|  
|`LeftToRight`|内容方向从左到右。|  
|`RightToLeft`|内容方向是从右到左。|  
  
 如果指定 `LeftToRight` ，则包含文本的子控件从左到右显示。 如果指定 `RightToLeft` ，则包含文本的子控件从右到左显示。 用于 `RightToLeft` 显示从右向左书写的语言（例如阿拉伯语或希伯来语）的文本。  
  
> [!NOTE]
>  此属性仅在支持 HTML 4.0 或更高版本的浏览器上受支持。  
  
   
  
## Examples  
 下面的代码示例演示如何以编程方式设置 <xref:System.Web.UI.WebControls.Panel.Direction%2A> 属性。 <xref:System.Web.UI.WebControls.ListBox>使用 <xref:System.Web.UI.WebControls.ContentDirection> 枚举值填充控件。 面板中标签和单选按钮的显示方向会根据用户从列表框中选择的值更改。 请注意，此示例使用英文文本。 因此，当选择此值时， `RightToLeft` 文本将在控件的右侧对齐 <xref:System.Web.UI.WebControls.Panel> ，但会保留英语文本的从左到右顺序。 在实际应用程序中， <xref:System.Web.UI.WebControls.Panel.Direction%2A> `RightToLeft` 如果要显示从左到右语言的文本，则不能将属性设置为。  
  
> [!NOTE]
>  下面的代码示例使用单文件代码模型，如果直接复制到代码隐藏文件中，则可能无法正常工作。 必须将此代码示例复制到扩展名为 .aspx 的空文本文件中。 有关 Web 窗体代码模型的详细信息，请参阅 [ASP.NET Web 窗体页代码模型](https://docs.microsoft.com/previous-versions/aspnet/015103yb(v=vs.100))。  
  
 [!code-aspx-vb[Panel.Direction#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Panel.Direction/VB/panel.directionvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.ContentDirection" />
      </Docs>
    </Member>
    <Member MemberName="GroupingText">
      <MemberSignature Language="C#" Value="public virtual string GroupingText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string GroupingText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Panel.GroupingText" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property GroupingText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ GroupingText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.GroupingText : string with get, set" Usage="System.Web.UI.WebControls.Panel.GroupingText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue("")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue("")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.Localizable(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Localizable(true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置面板控件中包含的控件组的标题。</summary>
        <value>面板控件中包含的子控件的标题文本。 默认值为空字符串("")。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用 <xref:System.Web.UI.WebControls.Panel.GroupingText%2A> 属性可为控件中包含的控件组显示框架和标题 <xref:System.Web.UI.WebControls.Panel> 。  
  
 <xref:System.Web.UI.WebControls.Panel.GroupingText%2A>控件的值 <xref:System.Web.UI.WebControls.Panel> 是使用 HTML 4.0 规范中引入的字段集和图例元素呈现的。 如果客户端浏览器使用 HTML 3.2，则 <xref:System.Web.UI.WebControls.Panel.GroupingText%2A> 不会呈现此值。 请参阅客户端浏览器文档，了解有关字段集和图例元素显示方式的详细信息。  
  
 设置此属性后，可以使用设计器工具自动将此属性的值保存到资源文件中。 有关详细信息，请参阅 <xref:System.ComponentModel.LocalizableAttribute> 和 [ASP.NET 全球化和本地化](https://docs.microsoft.com/previous-versions/aspnet/c6zyy3s9(v=vs.100))。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HorizontalAlign">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.HorizontalAlign HorizontalAlign { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.HorizontalAlign HorizontalAlign" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Panel.HorizontalAlign" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property HorizontalAlign As HorizontalAlign" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::HorizontalAlign HorizontalAlign { System::Web::UI::WebControls::HorizontalAlign get(); void set(System::Web::UI::WebControls::HorizontalAlign value); };" />
      <MemberSignature Language="F#" Value="member this.HorizontalAlign : System.Web.UI.WebControls.HorizontalAlign with get, set" Usage="System.Web.UI.WebControls.Panel.HorizontalAlign" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName Language="C#">[System.ComponentModel.Bindable(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Bindable(true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.HorizontalAlign</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置面板内容的水平对齐方式。</summary>
        <value><see cref="T:System.Web.UI.WebControls.HorizontalAlign" /> 值之一。 默认值为 <see langword="NotSet" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用此属性来指定中元素的对齐方式 <xref:System.Web.UI.WebControls.Panel> 。  
  
   
  
## Examples  
 下面的示例演示如何在中右对齐或左对齐控件 <xref:System.Web.UI.WebControls.Panel> 。  
  
> [!NOTE]
>  下面的代码示例使用单文件代码模型，如果直接复制到代码隐藏文件中，则可能无法正常工作。 必须将此代码示例复制到扩展名为 .aspx 的空文本文件中。 有关 Web 窗体代码模型的详细信息，请参阅 [ASP.NET Web 窗体页代码模型](https://docs.microsoft.com/previous-versions/aspnet/015103yb(v=vs.100))。  
  
 [!code-aspx-csharp[Classic Panel.HorizontalAlign Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic Panel.HorizontalAlign Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic Panel.HorizontalAlign Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic Panel.HorizontalAlign Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">水平对齐方式不是 <see cref="T:System.Web.UI.WebControls.HorizontalAlign" /> 值之一。</exception>
        <altmember cref="T:System.Web.UI.WebControls.HorizontalAlign" />
      </Docs>
    </Member>
    <Member MemberName="RenderBeginTag">
      <MemberSignature Language="C#" Value="public override void RenderBeginTag (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void RenderBeginTag(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Panel.RenderBeginTag(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub RenderBeginTag (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void RenderBeginTag(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.RenderBeginTag : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="panel.RenderBeginTag writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="writer">表示在客户端上呈现 HTML 内容的输出流的 <see cref="T:System.Web.UI.HtmlTextWriter" />。</param>
        <summary>将 <see cref="T:System.Web.UI.WebControls.Panel" /> 控件的 HTML 开始标记呈现到指定的编写器中。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Panel.RenderBeginTag%2A>方法主要由控件开发人员使用。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RenderEndTag">
      <MemberSignature Language="C#" Value="public override void RenderEndTag (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void RenderEndTag(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Panel.RenderEndTag(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub RenderEndTag (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void RenderEndTag(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.RenderEndTag : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="panel.RenderEndTag writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="writer">表示在客户端上呈现 HTML 内容的输出流的 <see cref="T:System.Web.UI.HtmlTextWriter" />。</param>
        <summary>将 <see cref="T:System.Web.UI.WebControls.Panel" /> 控件的 HTML 结束标记呈现到指定的编写器中。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Panel.RenderEndTag%2A>方法主要由控件开发人员使用。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ScrollBars">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.ScrollBars ScrollBars { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.ScrollBars ScrollBars" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Panel.ScrollBars" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ScrollBars As ScrollBars" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::ScrollBars ScrollBars { System::Web::UI::WebControls::ScrollBars get(); void set(System::Web::UI::WebControls::ScrollBars value); };" />
      <MemberSignature Language="F#" Value="member this.ScrollBars : System.Web.UI.WebControls.ScrollBars with get, set" Usage="System.Web.UI.WebControls.Panel.ScrollBars" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ScrollBars</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置 <see cref="T:System.Web.UI.WebControls.Panel" /> 控件中滚动条的可见性和位置。</summary>
        <value><see cref="T:System.Web.UI.WebControls.ScrollBars" /> 枚举值之一。 默认值为 <see langword="None" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用 <xref:System.Web.UI.WebControls.Panel.ScrollBars%2A> 属性指定控件中滚动条的可见性和位置 <xref:System.Web.UI.WebControls.Panel> 。 使用枚举值之一设置此属性 <xref:System.Web.UI.WebControls.ScrollBars> 。 下表列出了可能的值。  
  
|值|说明|  
|-----------|-----------------|  
|`None`|不显示任何滚动条。|  
|`Horizontal`|只显示水平滚动条。|  
|`Vertical`|只显示垂直滚动条。|  
|`Both`|同时显示水平滚动条和垂直滚动条。|  
|`Auto`|如有必要，将显示水平、垂直或同时显示这两个滚动条。 要不然也可以不显示任何滚动条。|  
  
 如果 `Auto` 为 <xref:System.Web.UI.WebControls.Panel.ScrollBars%2A> 属性指定，则当控件内容的大小 <xref:System.Web.UI.WebControls.Panel> 超过控件本身的大小时，将自动显示滚动条 <xref:System.Web.UI.WebControls.Panel> 。 例如，如果 <xref:System.Web.UI.WebControls.Panel> 控件包含一个表，并且该面板的宽度不足以显示表中的所有行，则将显示一个垂直滚动条。 如果表的大小超过面板的高度和宽度，则会同时显示垂直滚动条和水平滚动条。  
  
> [!NOTE]
>  此属性仅在支持 HTML 4.0 或更高版本的浏览器上受支持。  
  
   
  
## Examples  
 下面的代码示例演示如何以声明方式将 <xref:System.Web.UI.WebControls.Panel.ScrollBars%2A> 属性设置为 `Auto` 。 面板包含一个表，其中的全部内容超出了面板的大小。 这会导致垂直滚动条和水平滚动条在呈现面板时自动显示。 然后，用户可以滚动查看表中的所有数据。  
  
> [!NOTE]
>  下面的代码示例使用单文件代码模型，如果直接复制到代码隐藏文件中，则可能无法正常工作。 必须将此代码示例复制到扩展名为 .aspx 的空文本文件中。 有关 Web 窗体代码模型的详细信息，请参阅 [ASP.NET Web 窗体页代码模型](https://docs.microsoft.com/previous-versions/aspnet/015103yb(v=vs.100))。  
  
 [!code-aspx-csharp[Panel.Scrollbars#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Panel.Scrollbars/CS/panel.scrollbarscs.aspx#1)]
 [!code-aspx-vb[Panel.Scrollbars#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Panel.Scrollbars/VB/panel.scrollbarsvb.aspx#1)]  
  
 下面的代码示例演示如何以编程方式设置 <xref:System.Web.UI.WebControls.Panel.ScrollBars%2A> 属性。 <xref:System.Web.UI.WebControls.ListBox>使用 <xref:System.Web.UI.WebControls.ScrollBars> 枚举值填充控件。 面板中显示的滚动条将根据用户从列表框中选择的值更改。  
  
> [!NOTE]
>  下面的代码示例使用单文件代码模型，如果直接复制到代码隐藏文件中，则可能无法正常工作。 必须将此代码示例复制到扩展名为 .aspx 的空文本文件中。 有关 Web 窗体代码模型的详细信息，请参阅 [ASP.NET Web 窗体页代码模型](https://docs.microsoft.com/previous-versions/aspnet/015103yb(v=vs.100))。  
  
 [!code-aspx-csharp[Panel.Scrollbars2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Panel.Scrollbars2/CS/panel.scrollbars2cs.aspx#1)]
 [!code-aspx-vb[Panel.Scrollbars2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Panel.Scrollbars2/VB/panel.scrollbars2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.ScrollBars" />
      </Docs>
    </Member>
    <Member MemberName="SupportsDisabledAttribute">
      <MemberSignature Language="C#" Value="public override bool SupportsDisabledAttribute { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsDisabledAttribute" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Panel.SupportsDisabledAttribute" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property SupportsDisabledAttribute As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsDisabledAttribute { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsDisabledAttribute : bool" Usage="System.Web.UI.WebControls.Panel.SupportsDisabledAttribute" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个值，该值指示在控件的 <see langword="disabled" /> 属性为 <see cref="P:System.Web.UI.WebControls.WebControl.IsEnabled" /> 时，控件是否应将呈现的 HTML 元素的 <see langword="false" /> 特性设置为 "disabled"。</summary>
        <value><see langword="true" /> 如果 <see cref="P:System.Web.UI.Control.RenderingCompatibility" /> 属性指示 ASP.NET 版本低于 <c>4.0</c>，则为; 否则为 <see langword="false" /> 。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此属性指示在控件被禁用时 ASP.NET 应如何呈现控件的 HTML。 如果此属性为 `true` ，则 `disabled` 在禁用控件时，ASP.NET 将呈现属性。 如果此属性为 `false` ，则 `class` 在禁用控件时，ASP.NET 将呈现属性。 有关详细信息，请参阅 <xref:System.Web.UI.WebControls.WebControl.SupportsDisabledAttribute%2A?displayProperty=nameWithType>。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.RenderingCompatibility" />
        <altmember cref="P:System.Web.UI.WebControls.WebControl.DisabledCssClass" />
        <altmember cref="P:System.Web.UI.WebControls.WebControl.SupportsDisabledAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Wrap">
      <MemberSignature Language="C#" Value="public virtual bool Wrap { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Wrap" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Panel.Wrap" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Wrap As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Wrap { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Wrap : bool with get, set" Usage="System.Web.UI.WebControls.Panel.Wrap" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName Language="C#">[System.ComponentModel.Bindable(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Bindable(true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个指示面板中的内容是否换行的值。</summary>
        <value>如果面板中的内容换行，则为 <see langword="true" />；否则为 <see langword="false" />。 默认值为 <see langword="true" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用此属性可以包装的内容 <xref:System.Web.UI.WebControls.Panel> 。  
  
   
  
## Examples  
 下面的示例演示如何以编程方式设置 <xref:System.Web.UI.WebControls.Panel.Wrap%2A> 控件的属性 <xref:System.Web.UI.WebControls.Panel> 。  
  
> [!NOTE]
>  下面的代码示例使用单文件代码模型，如果直接复制到代码隐藏文件中，则可能无法正常工作。 必须将此代码示例复制到扩展名为 .aspx 的空文本文件中。 有关 Web 窗体代码模型的详细信息，请参阅 [ASP.NET Web 窗体页代码模型](https://docs.microsoft.com/previous-versions/aspnet/015103yb(v=vs.100))。  
  
 [!code-aspx-csharp[Classic Panel.Wrap Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic Panel.Wrap Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic Panel.Wrap Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic Panel.Wrap Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
