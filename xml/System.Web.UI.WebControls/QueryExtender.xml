<Type Name="QueryExtender" FullName="System.Web.UI.WebControls.QueryExtender">
  <Metadata><Meta Name="ms.openlocfilehash" Value="c77dac937d0bb3a47525a8d3b044fd248d28ed0e" /><Meta Name="ms.sourcegitcommit" Value="9f423345753728e8cad38d4a22663a109e69ea91" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="03/04/2021" /><Meta Name="ms.locfileid" Value="102064289" /></Metadata><TypeSignature Language="C#" Value="public class QueryExtender : System.Web.UI.Control" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit QueryExtender extends System.Web.UI.Control" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.QueryExtender" />
  <TypeSignature Language="VB.NET" Value="Public Class QueryExtender&#xA;Inherits Control" />
  <TypeSignature Language="C++ CLI" Value="public ref class QueryExtender : System::Web::UI::Control" />
  <TypeSignature Language="F#" Value="type QueryExtender = class&#xA;    inherit Control" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.Control</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.ComponentModel.DefaultProperty("TargetControlID")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultProperty("TargetControlID")&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.ComponentModel.Designer("System.Web.UI.Design.QueryExtenderDesigner, System.Web.Extensions.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.ComponentModel.Designer("System.Web.UI.Design.QueryExtenderDesigner, System.Web.Extensions.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Drawing.ToolboxBitmap(typeof(System.Web.UI.WebControls.QueryExtender), "QueryExtender.bmp")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Drawing.ToolboxBitmap(typeof(System.Web.UI.WebControls.QueryExtender), "QueryExtender.bmp")&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Web.UI.NonVisualControl]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Web.UI.NonVisualControl&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Web.UI.ParseChildren(true, "Expressions")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Web.UI.ParseChildren(true, "Expressions")&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Web.UI.PersistChildren(false)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Web.UI.PersistChildren(false)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Web.UI.TargetControlType(typeof(System.Web.UI.WebControls.IQueryableDataSource))]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Web.UI.TargetControlType(typeof(System.Web.UI.WebControls.IQueryableDataSource))&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>允许在数据源中不使用显式 <see langword="Where" /> 子句的情况下筛选来自数据源的数据。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 本主题内容：  
  
-   [介绍](#Introduction)  
  
-   [背景](#background)  
  
-   [筛选选项](#filter_options)  
  
-   [任务](#Tasks)  
  
-   [声明性语法](#declarative_syntax)  
  
<a name="Introduction"></a>   
## <a name="introduction"></a>介绍  
 <xref:System.Web.UI.WebControls.QueryExtender>控件用于为从数据源检索的数据创建筛选器，而无需 `Where` 在数据源中使用显式子句。 此 <xref:System.Web.UI.WebControls.QueryExtender> 控件可用于通过声明性语法指定筛选。  
  
<a name="background"></a>   
## <a name="background"></a>背景  
 筛选只显示满足指定条件的记录，从数据源中排除数据。 通过筛选，您可以显示数据集中的数据的不同视图，而不会影响数据集中的数据。  
  
 筛选通常要求您创建一个 `Where` 要应用于查询数据源的命令的子句。 但是， `Where` 数据源控件的属性可能不会公开可用的完整功能。 例如，QueryExtender 控件使您可以通过在数据字段的开头、结尾或任意位置搜索字符串来查询表。  
  
 为了公开 LINQ 中提供的完整功能并使筛选数据更容易，ASP.NET 提供了 <xref:System.Web.UI.WebControls.QueryExtender> 控件。 <xref:System.Web.UI.WebControls.QueryExtender>控件具有以下优势：  
  
-   它提供比编写子句更丰富的筛选体验 `Where` 。 例如，您可以使用筛选器在 Products 表中搜索布尔值， <xref:System.Web.UI.WebControls.Expressions.PropertyExpression> 而无需编写查询。  
  
-   它允许您通过对 <xref:System.Web.UI.WebControls.LinqDataSource> 和 <xref:System.Web.UI.WebControls.EntityDataSource> 控件以及您可能使用的任何其他数据源控件使用相同的语法来指定筛选器。  
  
-   它可以与控件一起使用，也可以与控件一起使用 <xref:System.Web.UI.WebControls.LinqDataSource> <xref:System.Web.UI.WebControls.EntityDataSource> ，也可以与第三方数据源一起使用。  
  
<a name="filter_options"></a>   
## <a name="filter-options"></a>筛选器选项  
 <xref:System.Web.UI.WebControls.QueryExtender>控件支持多种选项，这些选项可用于筛选数据。 控件使您可以搜索字符串，在指定范围内搜索数字值，并将表中的属性值与指定的值进行比较。 该控件还使您能够对数据进行排序并提供自定义查询。  
  
 这些选项在控件中作为 LINQ 表达式提供 <xref:System.Web.UI.WebControls.QueryExtender> 。 该 <xref:System.Web.UI.WebControls.QueryExtender> 控件还支持特定于 ASP.NET 动态数据应用程序的表达式。  
  
 下表列出了可用于在控件中筛选数据的选项 <xref:System.Web.UI.WebControls.QueryExtender> 。  
  
|表达式|说明|  
|----------------|-----------------|  
|<xref:System.Web.DynamicData.ControlFilterExpression>| (动态数据仅) 使用源数据绑定控件中所选的数据键生成数据库查询。<br /><br /> 有关如何使用此筛选器选项的信息，请参阅 [如何：使用动态数据中的父表中的值筛选表行](https://msdn.microsoft.com/library/a5566986-7c30-4e71-b4a4-81cd16095749)。|  
|<xref:System.Web.UI.WebControls.Expressions.CustomExpression>|指定数据源的用户定义表达式。 可以在事件处理程序中调用自定义 LINQ 表达式。|  
|<xref:System.Web.DynamicData.DynamicFilterExpression>| (动态数据仅) 使用指定的控件生成数据库查询 <xref:System.Web.DynamicData.DynamicFilter> 。<br /><br /> 有关如何使用此筛选器选项的信息，请参阅 [如何：在动态数据中使用外键筛选表行](https://msdn.microsoft.com/library/b774e56a-a5b9-41b7-b114-699313ef2056)。|  
|<xref:System.Web.UI.WebControls.Expressions.MethodExpression>|为数据源指定用户定义的 LINQ 表达式。 表达式在方法中调用。|  
|<xref:System.Web.UI.WebControls.Expressions.OrderByExpression>|将排序表达式应用于 <xref:System.Linq.IQueryable> 数据源对象。 应用 <xref:System.Web.UI.WebControls.Expressions.OrderByExpression> 值后，可以通过指定值来应用其他排序操作 <xref:System.Web.UI.WebControls.Expressions.OrderByExpression.ThenByExpressions%2A> 。|  
|<xref:System.Web.UI.WebControls.Expressions.PropertyExpression>|比较在集合中指定的数据字段和属性值的属性 <xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A> 。|  
|<xref:System.Web.UI.WebControls.Expressions.RangeExpression>|确定值是大于还是小于指定值，或者值是否介于两个值之间。|  
|<xref:System.Web.UI.WebControls.Expressions.SearchExpression>|将一个或多个字段中的值与指定的字符串值进行比较。|  
  
 可以单独使用这些 <xref:System.Web.UI.WebControls.QueryExtender> 选项，也可以将它们组合在一起提供网页中的复杂筛选。 有关详细信息，请参阅 [QueryExtender Web 服务器控件概述](https://msdn.microsoft.com/library/b93e32b9-af41-4539-a009-6cbbe809c702)。 [演练：使用声明性语法筛选网页中的数据](https://msdn.microsoft.com/library/b305ae31-1a1b-4d07-a678-51457c17614f)  
  
<a name="Tasks"></a>   
## <a name="tasks"></a>任务  
 下表列出了演示如何使用 <xref:System.Web.UI.WebControls.QueryExtender> 控件来筛选数据的任务。  
  
|文档|任务|  
|--------------|----------|  
|[演练：使用声明性语法筛选网页中的数据](https://msdn.microsoft.com/library/b305ae31-1a1b-4d07-a678-51457c17614f)|演示如何使用控件提供的筛选选项 <xref:System.Web.UI.WebControls.QueryExtender> 。|  
  
<a name="declarative_syntax"></a>   
## <a name="declarative-syntax"></a>声明性语法  
  
```  
<asp:QueryExtender   
    EnableViewState="True|False"  
    ID="string"  
    OnDataBinding="DataBiding event handler"  
    OnDisposed="Disposed event handler"  
    OnInit="Init event handler  
    OnLoad="Load event handler"  
    OnPreRender="PreRender event handler"  
    OnUnload="UnLoad event handler"  
    Runat="server"  
    TargetControlID="string"  
    Visible="True|False"  
>  
        <asp:ControlFilterExpression   
            ControlD="string"  
            Column="string">   
        </asp:ControlFilterExpression>  
        <asp:DynamicFilterExpression  
            ControlD="string"  
        </asp:DynamicFilterExpression>  
        <asp:CustomExpression="string"  
            OnQuerying="OnQuerying event handler">  
        </asp:CustomExpression>  
        <asp:OrderByExpression="string"  
            DataField="string"  
            Direction="string">  
            <asp:ThenByExpression  
                 DataField="string"  
                 Direction="string"  
            </asp:ThenBy>  
        </asp:OrderByExpression>  
        <asp:PropertyExpression="string">  
                <!-- child controls -->  
        </asp:PropertyExpression  
        >  
        <asp:RangeExpression="integer"  
            Datafield="string"  
            MaxType="Exclusive|Inclusive|None"  
            MinType="Exclusive|Inclusive|None">  
                <!--child controls-->  
        </asp:RangeExpression>  
        <asp:SearchExpression="string"  
            ComparisonType="CurrentCulture|CurrentCultureIgnoreCase|  
                InvariantCulture|InvariantCultureIgnoreCase|  
                Ordinal|OrdinalIgnoreCase"  
            DataField="string"  
            SearchType="Contains|EndsWith|StartsWith">  
                <!--child controls-->  
        </asp:SearchExpression>  
</asp:QueryExtender>  
```  
  
   
  
## Examples  
 下面的示例演示如何使用 <xref:System.Web.UI.WebControls.QueryExtender> 控件在网页中提供搜索函数。 <xref:System.Web.UI.WebControls.QueryExtender>控件使用在控件中输入的文本 `TextBoxSearch` 来搜索 ProductName 和供应商的内容。产品表在从控件返回的数据中的列。 <xref:System.Web.UI.WebControls.LinqDataSource> <xref:System.Web.UI.WebControls.Expressions.SearchExpression>对象用于执行搜索。 <xref:System.Web.UI.WebControls.Expressions.SearchExpression.DataFields%2A>属性指定要搜索的数据字段。 <xref:System.Web.UI.WebControls.Expressions.SearchExpression.SearchType%2A>属性指定要执行的搜索类型。 <xref:System.Web.UI.WebControls.ControlParameter>元素指定包含要用于搜索的文本的控件。 此代码示例是在 [演练：使用声明性语法筛选网页中的数据中](https://msdn.microsoft.com/library/b305ae31-1a1b-4d07-a678-51457c17614f)提供的一个更大示例的一部分。  
  
```  
<asp:LinqDataSource ID="dataSource" runat="server"   
    TableName="Products">  
</asp:LinqDataSource>  
<asp:QueryExtender TargetControlID="dataSource" runat="server">  
  <asp:SearchExpression DataFields="ProductName, Supplier.CompanyName"   
        SearchType="StartsWith">  
    <asp:ControlParameter ControlID="TextBoxSearch" />  
  </asp:SearchExpression>  
</asp:QueryExtender>  
```  
  
 下面的示例演示如何使用控件在网页 <xref:System.Web.UI.WebControls.QueryExtender> 中搜索指定范围内的值。 <xref:System.Web.UI.WebControls.QueryExtender>控件使用在和控件中输入的值 `TextBoxFrom` `TextBoxTo` 来搜索 ProductName 和供应商. 中的值。产品表在从控件返回的数据中的列。 <xref:System.Web.UI.WebControls.LinqDataSource> <xref:System.Web.UI.WebControls.ControlParameter>元素指定文本框控件，这些控件包含用于搜索范围的最小值和最大值。 <xref:System.Web.UI.WebControls.Expressions.RangeExpression.MinType%2A>和 <xref:System.Web.UI.WebControls.Expressions.RangeExpression.MaxType%2A> 属性指定在返回的数据中必须包含最小值和最大值。 此代码示例摘自 [演练：使用声明性语法筛选网页中的数据中](https://msdn.microsoft.com/library/b305ae31-1a1b-4d07-a678-51457c17614f)提供的一个更大的示例。  
  
```  
<asp:LinqDataSource ID="dataSource" runat="server"   
    TableName="Products">  
</asp:LinqDataSource>  
<asp:QueryExtender TargetControlID="dataSource" runat="server">  
  <asp:RangeExpression DataField="UnitPrice" MinType="Inclusive"   
        MaxType="Inclusive">  
    <asp:ControlParameter ControlID="TextBoxFrom" />  
    <asp:ControlParameter ControlID="TexBoxTo" />  
  </asp:RangeExpression>  
</asp:QueryExtender>  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.Expressions.QueryExpression" />
    <altmember cref="T:System.Web.UI.WebControls.Expressions.ParameterDataSourceExpression" />
    <altmember cref="T:System.Web.UI.WebControls.Expressions.SearchType" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public QueryExtender ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.QueryExtender.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; QueryExtender();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Web.UI.WebControls.QueryExtender" /> 类的新实例。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DataSource">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.IQueryableDataSource DataSource { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.IQueryableDataSource DataSource" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.QueryExtender.DataSource" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property DataSource As IQueryableDataSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::IQueryableDataSource ^ DataSource { System::Web::UI::WebControls::IQueryableDataSource ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DataSource : System.Web.UI.WebControls.IQueryableDataSource" Usage="System.Web.UI.WebControls.QueryExtender.DataSource" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.IQueryableDataSource</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取要用于查询的数据源控件（<see cref="T:System.Web.UI.IDataSource" /> 对象）。</summary>
        <value>要用于查询的数据源控件。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.QueryExtender>控件支持 <xref:System.Web.UI.WebControls.LinqDataSource> 和 <xref:System.Web.UI.WebControls.EntityDataSource> 控件。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="P:System.Web.UI.WebControls.QueryExtender.DataSource" /> 属性为 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="Expressions">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.Expressions.DataSourceExpressionCollection Expressions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.Expressions.DataSourceExpressionCollection Expressions" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.QueryExtender.Expressions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Expressions As DataSourceExpressionCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::Expressions::DataSourceExpressionCollection ^ Expressions { System::Web::UI::WebControls::Expressions::DataSourceExpressionCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Expressions : System.Web.UI.WebControls.Expressions.DataSourceExpressionCollection" Usage="System.Web.UI.WebControls.QueryExtender.Expressions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Category("Behavior")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Category("Behavior")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerDefaultProperty)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerDefaultProperty)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Expressions.DataSourceExpressionCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取应用于 <see cref="T:System.Web.UI.IDataSource" /> 控件的表达式的集合。</summary>
        <value>应用于数据源控件的表达式的集合。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadViewState">
      <MemberSignature Language="C#" Value="protected override void LoadViewState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void LoadViewState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.QueryExtender.LoadViewState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub LoadViewState (savedState As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void LoadViewState(System::Object ^ savedState);" />
      <MemberSignature Language="F#" Value="override this.LoadViewState : obj -&gt; unit" Usage="queryExtender.LoadViewState savedState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState">一个对象，它表示 <see cref="T:System.Web.UI.WebControls.QueryExtender" /> 控件的状态。</param>
        <summary>加载必须保持的 <see cref="T:System.Web.UI.WebControls.QueryExtender" /> 控件中的值的状态。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnInit">
      <MemberSignature Language="C#" Value="protected internal override void OnInit (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnInit(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.QueryExtender.OnInit(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnInit (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnInit(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnInit : EventArgs -&gt; unit" Usage="queryExtender.OnInit e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">事件数据。</param>
        <summary>初始化 <see cref="T:System.Web.UI.WebControls.QueryExtender" /> 类的新实例后发生。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveViewState">
      <MemberSignature Language="C#" Value="protected override object SaveViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance object SaveViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.QueryExtender.SaveViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function SaveViewState () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Object ^ SaveViewState();" />
      <MemberSignature Language="F#" Value="override this.SaveViewState : unit -&gt; obj" Usage="queryExtender.SaveViewState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>保存 <see cref="T:System.Web.UI.WebControls.QueryExtender" /> 控件的当前视图状态。</summary>
        <returns>一个包含 <see cref="T:System.Web.UI.WebControls.QueryExtender" /> 控件的已保存状态的对象。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TargetControlID">
      <MemberSignature Language="C#" Value="public virtual string TargetControlID { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TargetControlID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.QueryExtender.TargetControlID" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property TargetControlID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ TargetControlID { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TargetControlID : string with get, set" Usage="System.Web.UI.WebControls.QueryExtender.TargetControlID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Category("Behavior")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Category("Behavior")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue("")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue("")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.IDReferenceProperty]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.IDReferenceProperty&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置用于查询的 <see cref="T:System.Web.UI.IDataSource" /> 控件的 ID。</summary>
        <value>要用于查询的数据源控件的 ID。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TrackViewState">
      <MemberSignature Language="C#" Value="protected override void TrackViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void TrackViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.QueryExtender.TrackViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub TrackViewState ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void TrackViewState();" />
      <MemberSignature Language="F#" Value="override this.TrackViewState : unit -&gt; unit" Usage="queryExtender.TrackViewState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>跟踪 <see cref="T:System.Web.UI.WebControls.QueryExtender" /> 控件的视图状态更改，以使这些更改可以存储在该控件的 <see cref="T:System.Web.UI.StateBag" /> 对象中。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
