<Type Name="PagedDataSource" FullName="System.Web.UI.WebControls.PagedDataSource">
  <Metadata><Meta Name="ms.openlocfilehash" Value="984d5a109d1e2153042787986196a61a6390f11f" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89890737" /></Metadata><TypeSignature Language="C#" Value="public sealed class PagedDataSource : System.Collections.ICollection, System.ComponentModel.ITypedList" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit PagedDataSource extends System.Object implements class System.Collections.ICollection, class System.Collections.IEnumerable, class System.ComponentModel.ITypedList" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.PagedDataSource" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class PagedDataSource&#xA;Implements ICollection, ITypedList" />
  <TypeSignature Language="C++ CLI" Value="public ref class PagedDataSource sealed : System::Collections::ICollection, System::ComponentModel::ITypedList" />
  <TypeSignature Language="F#" Value="type PagedDataSource = class&#xA;    interface ICollection&#xA;    interface IEnumerable&#xA;    interface ITypedList" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ComponentModel.ITypedList</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="96688-101">封装数据绑定控件（如 <see cref="T:System.Web.UI.WebControls.DataGrid" />、<see cref="T:System.Web.UI.WebControls.GridView" />、<see cref="T:System.Web.UI.WebControls.DetailsView" /> 和 <see cref="T:System.Web.UI.WebControls.FormView" />）的与分页相关的属性，以允许该控件执行分页操作。</span><span class="sxs-lookup"><span data-stu-id="96688-101">Encapsulates the paging-related properties of a data-bound control (such as <see cref="T:System.Web.UI.WebControls.DataGrid" />, <see cref="T:System.Web.UI.WebControls.GridView" />, <see cref="T:System.Web.UI.WebControls.DetailsView" />, and <see cref="T:System.Web.UI.WebControls.FormView" />) that allow it to perform paging.</span></span> <span data-ttu-id="96688-102">此类不能被继承。</span><span class="sxs-lookup"><span data-stu-id="96688-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96688-103"><xref:System.Web.UI.WebControls.PagedDataSource>类封装属性，这些属性允许数据源控件（如 <xref:System.Web.UI.WebControls.DataGrid> 、 <xref:System.Web.UI.WebControls.GridView> 、 <xref:System.Web.UI.WebControls.DetailsView> 和 <xref:System.Web.UI.WebControls.FormView> ）执行分页。</span><span class="sxs-lookup"><span data-stu-id="96688-103">The <xref:System.Web.UI.WebControls.PagedDataSource> class encapsulates the properties that allow data-source controls, such as the <xref:System.Web.UI.WebControls.DataGrid>, <xref:System.Web.UI.WebControls.GridView>, <xref:System.Web.UI.WebControls.DetailsView>, and <xref:System.Web.UI.WebControls.FormView>, to perform paging.</span></span> <span data-ttu-id="96688-104">当向自定义数据绑定控件提供分页支持时，控件开发人员将使用此类。</span><span class="sxs-lookup"><span data-stu-id="96688-104">This class is used by control developers when providing paging support to a custom data-bound control.</span></span>  
  
 <span data-ttu-id="96688-105">此类使用最佳的可用方法对属于当前页的数据进行枚举。</span><span class="sxs-lookup"><span data-stu-id="96688-105">This class uses the best available method to enumerate over the data belonging to the current page.</span></span> <span data-ttu-id="96688-106">如果基础数据源支持索引访问 (例如 <xref:System.Array?displayProperty=nameWithType> 和 <xref:System.Collections.IList?displayProperty=nameWithType>) ，则此类将使用它。</span><span class="sxs-lookup"><span data-stu-id="96688-106">If the underlying data source supports indexed access (such as <xref:System.Array?displayProperty=nameWithType> and <xref:System.Collections.IList?displayProperty=nameWithType>), this class uses it.</span></span> <span data-ttu-id="96688-107">否则，它将使用由方法创建的枚举器 <xref:System.Collections.IEnumerable.GetEnumerator%2A> 。</span><span class="sxs-lookup"><span data-stu-id="96688-107">Otherwise, it uses the enumerator created by the <xref:System.Collections.IEnumerable.GetEnumerator%2A> method.</span></span>  
  
 <span data-ttu-id="96688-108">有关实例的初始属性值的列表 <xref:System.Web.UI.WebControls.PagedDataSource> ，请参见 <xref:System.Web.UI.WebControls.PagedDataSource.%23ctor%2A> 构造函数。</span><span class="sxs-lookup"><span data-stu-id="96688-108">For a list of initial property values for an instance of <xref:System.Web.UI.WebControls.PagedDataSource>, see the <xref:System.Web.UI.WebControls.PagedDataSource.%23ctor%2A> constructor.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.DataGrid" />
    <altmember cref="T:System.Web.UI.WebControls.DetailsView" />
    <altmember cref="T:System.Web.UI.WebControls.FormView" />
    <altmember cref="T:System.Web.UI.WebControls.GridView" />
    <altmember cref="T:System.Collections.ICollection" />
    <altmember cref="T:System.Array" />
    <altmember cref="T:System.Collections.IList" />
    <altmember cref="T:System.Collections.IEnumerable" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PagedDataSource ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.PagedDataSource.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PagedDataSource();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="96688-109">初始化 <see cref="T:System.Web.UI.WebControls.PagedDataSource" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="96688-109">Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.PagedDataSource" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96688-110">使用此构造函数创建并初始化类的新实例 <xref:System.Web.UI.WebControls.PagedDataSource> 。</span><span class="sxs-lookup"><span data-stu-id="96688-110">Use this constructor to create and initialize a new instance of the <xref:System.Web.UI.WebControls.PagedDataSource> class.</span></span>  
  
 <span data-ttu-id="96688-111">下表显示了实例的初始属性值 <xref:System.Web.UI.WebControls.PagedDataSource> 。</span><span class="sxs-lookup"><span data-stu-id="96688-111">The following table shows initial property values for an instance of <xref:System.Web.UI.WebControls.PagedDataSource>.</span></span>  
  
|<span data-ttu-id="96688-112">属性</span><span class="sxs-lookup"><span data-stu-id="96688-112">Property</span></span>|<span data-ttu-id="96688-113">初始值</span><span class="sxs-lookup"><span data-stu-id="96688-113">Initial Value</span></span>|  
|--------------|-------------------|  
|<xref:System.Web.UI.WebControls.PagedDataSource.AllowCustomPaging%2A>|`false`|  
|<xref:System.Web.UI.WebControls.PagedDataSource.AllowPaging%2A>|`false`|  
|<xref:System.Web.UI.WebControls.PagedDataSource.AllowServerPaging%2A>|`false`|  
|<xref:System.Web.UI.WebControls.PagedDataSource.CurrentPageIndex%2A>|<span data-ttu-id="96688-114">0</span><span class="sxs-lookup"><span data-stu-id="96688-114">0</span></span>|  
|<xref:System.Web.UI.WebControls.PagedDataSource.PageSize%2A>|<span data-ttu-id="96688-115">10</span><span class="sxs-lookup"><span data-stu-id="96688-115">10</span></span>|  
|<xref:System.Web.UI.WebControls.PagedDataSource.VirtualCount%2A>|<span data-ttu-id="96688-116">0</span><span class="sxs-lookup"><span data-stu-id="96688-116">0</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowCustomPaging">
      <MemberSignature Language="C#" Value="public bool AllowCustomPaging { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowCustomPaging" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.PagedDataSource.AllowCustomPaging" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowCustomPaging As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowCustomPaging { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowCustomPaging : bool with get, set" Usage="System.Web.UI.WebControls.PagedDataSource.AllowCustomPaging" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="96688-117">获取或设置一个值，指示是否在数据绑定控件中启用自定义分页。</span><span class="sxs-lookup"><span data-stu-id="96688-117">Gets or sets a value indicating whether custom paging is enabled in a data-bound control.</span></span></summary>
        <value><span data-ttu-id="96688-118">如果启用自定义分页，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="96688-118"><see langword="true" /> if custom paging is enabled; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96688-119">使用 <xref:System.Web.UI.WebControls.PagedDataSource.AllowCustomPaging%2A> 属性指示是否启用自定义分页。</span><span class="sxs-lookup"><span data-stu-id="96688-119">Use the <xref:System.Web.UI.WebControls.PagedDataSource.AllowCustomPaging%2A> property to indicate whether custom paging is enabled.</span></span> <span data-ttu-id="96688-120">自定义分页是由控件专门提供的一种可选的分页 <xref:System.Web.UI.WebControls.DataGrid> 。</span><span class="sxs-lookup"><span data-stu-id="96688-120">Custom paging is an optional type of paging provided specifically by the <xref:System.Web.UI.WebControls.DataGrid> control.</span></span> <span data-ttu-id="96688-121">ASP.NET 版本 2.0 (的数据绑定控件（如 <xref:System.Web.UI.WebControls.GridView> 、 <xref:System.Web.UI.WebControls.DetailsView> 和 <xref:System.Web.UI.WebControls.FormView>) ）使用服务器端分页，不支持自定义分页。</span><span class="sxs-lookup"><span data-stu-id="96688-121">ASP.NET version 2.0 data-bound control (such as <xref:System.Web.UI.WebControls.GridView>, <xref:System.Web.UI.WebControls.DetailsView>, and <xref:System.Web.UI.WebControls.FormView>) uses server-side paging and does not support custom paging.</span></span> <span data-ttu-id="96688-122">自定义分页和服务器端分页互相排斥。</span><span class="sxs-lookup"><span data-stu-id="96688-122">Custom paging and server-side paging are mutually exclusive.</span></span> <span data-ttu-id="96688-123">如果将设置 <xref:System.Web.UI.WebControls.PagedDataSource.AllowCustomPaging%2A> 为 `true` ，请确保将 <xref:System.Web.UI.WebControls.PagedDataSource.AllowServerPaging%2A> 设置为 `false` 。</span><span class="sxs-lookup"><span data-stu-id="96688-123">If you set <xref:System.Web.UI.WebControls.PagedDataSource.AllowCustomPaging%2A> to `true`, be sure that <xref:System.Web.UI.WebControls.PagedDataSource.AllowServerPaging%2A> is set to `false`.</span></span>  
  
 <span data-ttu-id="96688-124">有关自定义分页的详细信息，请参阅 <xref:System.Web.UI.WebControls.DataGrid.AllowCustomPaging%2A?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="96688-124">For more information about custom paging, see <xref:System.Web.UI.WebControls.DataGrid.AllowCustomPaging%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.PagedDataSource.AllowPaging" />
      </Docs>
    </Member>
    <Member MemberName="AllowPaging">
      <MemberSignature Language="C#" Value="public bool AllowPaging { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowPaging" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.PagedDataSource.AllowPaging" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowPaging As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowPaging { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowPaging : bool with get, set" Usage="System.Web.UI.WebControls.PagedDataSource.AllowPaging" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="96688-125">获取或设置一个值，指示是否在数据绑定控件中启用分页。</span><span class="sxs-lookup"><span data-stu-id="96688-125">Gets or sets a value indicating whether paging is enabled in a data-bound control.</span></span></summary>
        <value><span data-ttu-id="96688-126">如果启用分页，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="96688-126"><see langword="true" /> if paging is enabled; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96688-127">使用 <xref:System.Web.UI.WebControls.PagedDataSource.AllowPaging%2A> 属性可指定数据绑定控件是否已启用分页。</span><span class="sxs-lookup"><span data-stu-id="96688-127">Use the <xref:System.Web.UI.WebControls.PagedDataSource.AllowPaging%2A> property to specify whether a data-bound control has paging enabled.</span></span> <span data-ttu-id="96688-128">ASP.NET 版本2.0 数据绑定控件 (例如 <xref:System.Web.UI.WebControls.GridView> 、 <xref:System.Web.UI.WebControls.DetailsView> 和 <xref:System.Web.UI.WebControls.FormView>) 也使用服务器端分页来提供自动分页功能。</span><span class="sxs-lookup"><span data-stu-id="96688-128">ASP.NET version 2.0 data-bound controls (such as <xref:System.Web.UI.WebControls.GridView>, <xref:System.Web.UI.WebControls.DetailsView>, and <xref:System.Web.UI.WebControls.FormView>) also use server-side paging to provide automatic paging functionality.</span></span> <span data-ttu-id="96688-129">有关服务器端分页的详细信息，请参阅 <xref:System.Web.UI.WebControls.PagedDataSource.AllowServerPaging%2A> 。</span><span class="sxs-lookup"><span data-stu-id="96688-129">For more information on server-side paging, see <xref:System.Web.UI.WebControls.PagedDataSource.AllowServerPaging%2A>.</span></span> <span data-ttu-id="96688-130">使用控件时 <xref:System.Web.UI.WebControls.DataGrid> ，还可以提供自己的自定义分页逻辑。</span><span class="sxs-lookup"><span data-stu-id="96688-130">When using the <xref:System.Web.UI.WebControls.DataGrid> control, you can also provide your own custom paging logic.</span></span> <span data-ttu-id="96688-131">有关自定义分页的详细信息，请参阅 <xref:System.Web.UI.WebControls.DataGrid.AllowCustomPaging%2A?displayProperty=nameWithType> 和 <xref:System.Web.UI.WebControls.PagedDataSource.AllowCustomPaging%2A?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="96688-131">For more information on custom paging, see <xref:System.Web.UI.WebControls.DataGrid.AllowCustomPaging%2A?displayProperty=nameWithType> and <xref:System.Web.UI.WebControls.PagedDataSource.AllowCustomPaging%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="96688-132">有关对数据绑定控件的分页支持的详细信息，请参阅 `AllowPaging` 数据绑定控件的属性。</span><span class="sxs-lookup"><span data-stu-id="96688-132">For more information about paging support for data-bound controls, see the `AllowPaging` property of the data-bound control.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.DataGrid.AllowCustomPaging" />
        <altmember cref="P:System.Web.UI.WebControls.PagedDataSource.AllowCustomPaging" />
        <altmember cref="P:System.Web.UI.WebControls.PagedDataSource.AllowServerPaging" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.AllowPaging" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.AllowPaging" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.AllowPaging" />
        <altmember cref="P:System.Web.UI.WebControls.DataGrid.AllowPaging" />
      </Docs>
    </Member>
    <Member MemberName="AllowServerPaging">
      <MemberSignature Language="C#" Value="public bool AllowServerPaging { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowServerPaging" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.PagedDataSource.AllowServerPaging" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowServerPaging As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowServerPaging { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowServerPaging : bool with get, set" Usage="System.Web.UI.WebControls.PagedDataSource.AllowServerPaging" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="96688-133">获取或设置一个值，指示是否启用服务器端分页。</span><span class="sxs-lookup"><span data-stu-id="96688-133">Gets or sets a value indicating whether server-side paging is enabled.</span></span></summary>
        <value><span data-ttu-id="96688-134">如果启用服务器端分页，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="96688-134"><see langword="true" /> if server-side paging is enabled; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96688-135">ASP.NET 2.0 版数据绑定控件 (例如 <xref:System.Web.UI.WebControls.GridView> 、 <xref:System.Web.UI.WebControls.DetailsView> 和 <xref:System.Web.UI.WebControls.FormView>) 通过服务器端分页提供自动分页功能。</span><span class="sxs-lookup"><span data-stu-id="96688-135">ASP.NET version 2.0 data-bound controls (such as <xref:System.Web.UI.WebControls.GridView>, <xref:System.Web.UI.WebControls.DetailsView>, and <xref:System.Web.UI.WebControls.FormView>) provide automatic paging functionality through server-side paging.</span></span> <span data-ttu-id="96688-136">使用 ASP.NET 2.0 数据绑定控件时，请将此属性设置为 `true` 。</span><span class="sxs-lookup"><span data-stu-id="96688-136">When using an ASP.NET 2.0 data-bound control, set this property to `true`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="96688-137">服务器端分页和自定义分页互相排斥。</span><span class="sxs-lookup"><span data-stu-id="96688-137">Server-side paging and custom paging are mutually exclusive.</span></span> <span data-ttu-id="96688-138">如果将设置 <xref:System.Web.UI.WebControls.PagedDataSource.AllowServerPaging%2A> 为 `true` ，请确保将 <xref:System.Web.UI.WebControls.PagedDataSource.AllowCustomPaging%2A> 设置为 `false` 。</span><span class="sxs-lookup"><span data-stu-id="96688-138">If you set <xref:System.Web.UI.WebControls.PagedDataSource.AllowServerPaging%2A> to `true`, be sure that <xref:System.Web.UI.WebControls.PagedDataSource.AllowCustomPaging%2A> is set to `false`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.PagedDataSource.AllowCustomPaging" />
        <altmember cref="P:System.Web.UI.WebControls.PagedDataSource.AllowServerPaging" />
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.PagedDataSource.CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (array As Array, index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(Array ^ array, int index);" />
      <MemberSignature Language="F#" Value="abstract member CopyTo : Array * int -&gt; unit&#xA;override this.CopyTo : Array * int -&gt; unit" Usage="pagedDataSource.CopyTo (array, index)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="96688-139">从零开始的 <see cref="T:System.Array" />，它接收来自数据源的复制项。</span><span class="sxs-lookup"><span data-stu-id="96688-139">A zero-based <see cref="T:System.Array" /> that receives the copied items from the data source.</span></span></param>
        <param name="index"><span data-ttu-id="96688-140">指定的 <see cref="T:System.Array" /> 中接收复制内容的第一个位置。</span><span class="sxs-lookup"><span data-stu-id="96688-140">The first position in the specified <see cref="T:System.Array" /> to receive the copied contents.</span></span></param>
        <summary><span data-ttu-id="96688-141">从 <see cref="T:System.Array" /> 中的指定索引位置开始，将数据源中的所有项复制到指定的 <see cref="T:System.Array" />。</span><span class="sxs-lookup"><span data-stu-id="96688-141">Copies all the items from the data source to the specified <see cref="T:System.Array" />, starting at the specified index in the <see cref="T:System.Array" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96688-142">使用此方法可 <xref:System.Array?displayProperty=nameWithType> 从指定索引处开始，将数据源的内容复制到指定的中。</span><span class="sxs-lookup"><span data-stu-id="96688-142">Use this method to copy the contents of the data source into the specified <xref:System.Array?displayProperty=nameWithType>, starting at the specified index.</span></span> <span data-ttu-id="96688-143"><xref:System.Array?displayProperty=nameWithType>通常用于循环访问数据源中的项。</span><span class="sxs-lookup"><span data-stu-id="96688-143">The <xref:System.Array?displayProperty=nameWithType> is often used to iterate through the items in the data source.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Array" />
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.PagedDataSource.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Web.UI.WebControls.PagedDataSource.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="96688-144">获取要从数据源使用的项数。</span><span class="sxs-lookup"><span data-stu-id="96688-144">Gets the number of items to be used from the data source.</span></span></summary>
        <value><span data-ttu-id="96688-145">要从数据源使用的项数。</span><span class="sxs-lookup"><span data-stu-id="96688-145">The number of items to be used from the data source.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96688-146">使用 <xref:System.Web.UI.WebControls.PagedDataSource.Count%2A> 属性可确定要从数据源使用的项数。</span><span class="sxs-lookup"><span data-stu-id="96688-146">Use the <xref:System.Web.UI.WebControls.PagedDataSource.Count%2A> property to determine the number of items to be used from the data source.</span></span> <span data-ttu-id="96688-147">返回的值取决于是否启用分页以及是否使用自定义分页。</span><span class="sxs-lookup"><span data-stu-id="96688-147">The value returned depends on whether paging is enabled and whether custom paging is used.</span></span>  
  
-   <span data-ttu-id="96688-148">如果 (通过将 <xref:System.Web.UI.WebControls.PagedDataSource.IsPagingEnabled%2A> 属性设置为) 来禁用分页 `false` ，则 <xref:System.Web.UI.WebControls.PagedDataSource.DataSourceCount%2A> 返回属性的值。</span><span class="sxs-lookup"><span data-stu-id="96688-148">If paging is disabled (by setting the <xref:System.Web.UI.WebControls.PagedDataSource.IsPagingEnabled%2A> property to `false`), the value of the <xref:System.Web.UI.WebControls.PagedDataSource.DataSourceCount%2A> property is returned.</span></span>  
  
-   <span data-ttu-id="96688-149">如果启用分页 (通过将属性设置为 <xref:System.Web.UI.WebControls.PagedDataSource.IsPagingEnabled%2A> `true` ") ，并通过将属性设置为)  (启用自定义分页，则 <xref:System.Web.UI.WebControls.PagedDataSource.IsCustomPagingEnabled%2A> `true` <xref:System.Web.UI.WebControls.PagedDataSource.PageSize%2A> 返回属性的值。</span><span class="sxs-lookup"><span data-stu-id="96688-149">If paging is enabled (by setting the <xref:System.Web.UI.WebControls.PagedDataSource.IsPagingEnabled%2A> property to `true`) and custom paging is enabled (by setting the <xref:System.Web.UI.WebControls.PagedDataSource.IsCustomPagingEnabled%2A> property set to `true`), the value of the <xref:System.Web.UI.WebControls.PagedDataSource.PageSize%2A> property is returned.</span></span>  
  
-   <span data-ttu-id="96688-150">如果通过将属性设置为) 启用了分页 (<xref:System.Web.UI.WebControls.PagedDataSource.IsPagingEnabled%2A> `true` 并且 <xref:System.Web.UI.WebControls.PagedDataSource.IsLastPage%2A> 属性设置为，则 `false` <xref:System.Web.UI.WebControls.PagedDataSource.PageSize%2A> 返回属性的值。</span><span class="sxs-lookup"><span data-stu-id="96688-150">If paging is enabled (by setting the <xref:System.Web.UI.WebControls.PagedDataSource.IsPagingEnabled%2A> property to `true`) and the <xref:System.Web.UI.WebControls.PagedDataSource.IsLastPage%2A> property is set to `false`, the value of the <xref:System.Web.UI.WebControls.PagedDataSource.PageSize%2A> property is returned.</span></span>  
  
-   <span data-ttu-id="96688-151">如果 (通过将属性设置为) 启用了分页 <xref:System.Web.UI.WebControls.PagedDataSource.IsPagingEnabled%2A> `true` ，则 (通过设置属性) 来禁用自定义分页， <xref:System.Web.UI.WebControls.PagedDataSource.IsCustomPagingEnabled%2A> `false` 并且 <xref:System.Web.UI.WebControls.PagedDataSource.IsLastPage%2A> 属性设置为，则在 `true` 返回属性值 <xref:System.Web.UI.WebControls.PagedDataSource.DataSourceCount%2A> 之前从属性的值中减去 <xref:System.Web.UI.WebControls.PagedDataSource.FirstIndexInPage%2A> 该属性的值。</span><span class="sxs-lookup"><span data-stu-id="96688-151">If paging is enabled (by setting the <xref:System.Web.UI.WebControls.PagedDataSource.IsPagingEnabled%2A> property to `true`), custom paging is disabled (by setting the <xref:System.Web.UI.WebControls.PagedDataSource.IsCustomPagingEnabled%2A> property `false`), and the <xref:System.Web.UI.WebControls.PagedDataSource.IsLastPage%2A> property is set to `true`, the value of the <xref:System.Web.UI.WebControls.PagedDataSource.DataSourceCount%2A> property is subtracted from the value of the <xref:System.Web.UI.WebControls.PagedDataSource.FirstIndexInPage%2A> property before it is returned.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="96688-152">如果 <xref:System.Web.UI.WebControls.PagedDataSource.DataSource%2A> 属性包含 `null` ，则返回0。</span><span class="sxs-lookup"><span data-stu-id="96688-152">If the <xref:System.Web.UI.WebControls.PagedDataSource.DataSource%2A> property contains `null`, 0 is returned.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.PagedDataSource.IsPagingEnabled" />
        <altmember cref="P:System.Web.UI.WebControls.PagedDataSource.DataSourceCount" />
        <altmember cref="P:System.Web.UI.WebControls.PagedDataSource.IsCustomPagingEnabled" />
        <altmember cref="P:System.Web.UI.WebControls.PagedDataSource.IsLastPage" />
        <altmember cref="P:System.Web.UI.WebControls.PagedDataSource.PageSize" />
        <altmember cref="P:System.Web.UI.WebControls.PagedDataSource.FirstIndexInPage" />
        <altmember cref="P:System.Web.UI.WebControls.PagedDataSource.DataSource" />
      </Docs>
    </Member>
    <Member MemberName="CurrentPageIndex">
      <MemberSignature Language="C#" Value="public int CurrentPageIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CurrentPageIndex" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.PagedDataSource.CurrentPageIndex" />
      <MemberSignature Language="VB.NET" Value="Public Property CurrentPageIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int CurrentPageIndex { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.CurrentPageIndex : int with get, set" Usage="System.Web.UI.WebControls.PagedDataSource.CurrentPageIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="96688-153">获取或设置当前页的索引。</span><span class="sxs-lookup"><span data-stu-id="96688-153">Gets or sets the index of the current page.</span></span></summary>
        <value><span data-ttu-id="96688-154">当前页的索引。</span><span class="sxs-lookup"><span data-stu-id="96688-154">The index of the current page.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96688-155">使用 <xref:System.Web.UI.WebControls.PagedDataSource.CurrentPageIndex%2A> 属性来指定或确定当前页的索引。</span><span class="sxs-lookup"><span data-stu-id="96688-155">Use the <xref:System.Web.UI.WebControls.PagedDataSource.CurrentPageIndex%2A> property to specify or determine the index of the current page.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.PagedDataSource.Count" />
        <altmember cref="P:System.Web.UI.WebControls.PagedDataSource.PageCount" />
        <altmember cref="P:System.Web.UI.WebControls.PagedDataSource.PageSize" />
        <altmember cref="P:System.Web.UI.WebControls.PagedDataSource.VirtualCount" />
      </Docs>
    </Member>
    <Member MemberName="DataSource">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerable DataSource { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IEnumerable DataSource" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.PagedDataSource.DataSource" />
      <MemberSignature Language="VB.NET" Value="Public Property DataSource As IEnumerable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::IEnumerable ^ DataSource { System::Collections::IEnumerable ^ get(); void set(System::Collections::IEnumerable ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataSource : System.Collections.IEnumerable with get, set" Usage="System.Web.UI.WebControls.PagedDataSource.DataSource" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="96688-156">获取或设置数据源。</span><span class="sxs-lookup"><span data-stu-id="96688-156">Gets or sets the data source.</span></span></summary>
        <value><span data-ttu-id="96688-157">一个实现了 <see cref="T:System.Collections.IEnumerable" /> 的对象，表示数据源。</span><span class="sxs-lookup"><span data-stu-id="96688-157">A <see cref="T:System.Collections.IEnumerable" /> implemented object that represents the data source.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96688-158">使用 <xref:System.Web.UI.WebControls.PagedDataSource.DataSource%2A> 属性来指定或确定要分页的数据源。</span><span class="sxs-lookup"><span data-stu-id="96688-158">Use the <xref:System.Web.UI.WebControls.PagedDataSource.DataSource%2A> property to specify or determine the data source being paged.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IEnumerable" />
        <altmember cref="P:System.Web.UI.WebControls.PagedDataSource.DataSourceCount" />
      </Docs>
    </Member>
    <Member MemberName="DataSourceCount">
      <MemberSignature Language="C#" Value="public int DataSourceCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 DataSourceCount" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.PagedDataSource.DataSourceCount" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DataSourceCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int DataSourceCount { int get(); };" />
      <MemberSignature Language="F#" Value="member this.DataSourceCount : int" Usage="System.Web.UI.WebControls.PagedDataSource.DataSourceCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="96688-159">获取数据源中的项数。</span><span class="sxs-lookup"><span data-stu-id="96688-159">Gets the number of items in the data source.</span></span></summary>
        <value><span data-ttu-id="96688-160">数据源中的项数。</span><span class="sxs-lookup"><span data-stu-id="96688-160">The number of items in the data source.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96688-161">使用 <xref:System.Web.UI.WebControls.PagedDataSource.DataSourceCount%2A> 属性可确定数据源中的项数。</span><span class="sxs-lookup"><span data-stu-id="96688-161">Use the <xref:System.Web.UI.WebControls.PagedDataSource.DataSourceCount%2A> property to determine the number of items in the data source.</span></span> <span data-ttu-id="96688-162">如果使用自定义分页或服务器端分页，则返回属性的值 <xref:System.Web.UI.WebControls.PagedDataSource.VirtualCount%2A> ; 否则，返回数据源中的总项数。</span><span class="sxs-lookup"><span data-stu-id="96688-162">If custom paging or server-side paging is used, the value of the <xref:System.Web.UI.WebControls.PagedDataSource.VirtualCount%2A> property is returned; otherwise, the total number of items in the data source is returned.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="96688-163">如果 <xref:System.Web.UI.WebControls.PagedDataSource.DataSource%2A> 属性包含 `null` ，则返回0。</span><span class="sxs-lookup"><span data-stu-id="96688-163">If the <xref:System.Web.UI.WebControls.PagedDataSource.DataSource%2A> property contains `null`, 0 is returned.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException"><span data-ttu-id="96688-164">该数据源不是实现了 <see cref="T:System.Collections.ICollection" /> 的对象。</span><span class="sxs-lookup"><span data-stu-id="96688-164">The data source is not an <see cref="T:System.Collections.ICollection" /> implemented object.</span></span></exception>
        <altmember cref="P:System.Web.UI.WebControls.PagedDataSource.IsCustomPagingEnabled" />
        <altmember cref="P:System.Web.UI.WebControls.PagedDataSource.AllowServerPaging" />
      </Docs>
    </Member>
    <Member MemberName="FirstIndexInPage">
      <MemberSignature Language="C#" Value="public int FirstIndexInPage { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 FirstIndexInPage" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.PagedDataSource.FirstIndexInPage" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FirstIndexInPage As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int FirstIndexInPage { int get(); };" />
      <MemberSignature Language="F#" Value="member this.FirstIndexInPage : int" Usage="System.Web.UI.WebControls.PagedDataSource.FirstIndexInPage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="96688-165">获取页面中显示的首条记录的索引。</span><span class="sxs-lookup"><span data-stu-id="96688-165">Gets the index of the first record displayed on the page.</span></span></summary>
        <value><span data-ttu-id="96688-166">页面中显示的首条记录的索引。</span><span class="sxs-lookup"><span data-stu-id="96688-166">The index of the first record displayed on the page.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96688-167">使用 <xref:System.Web.UI.WebControls.PagedDataSource.FirstIndexInPage%2A> 属性可确定当前页上第一项的索引。</span><span class="sxs-lookup"><span data-stu-id="96688-167">Use the <xref:System.Web.UI.WebControls.PagedDataSource.FirstIndexInPage%2A> property to determine the index of the first item on the current page.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="96688-168">如果 <xref:System.Web.UI.WebControls.PagedDataSource.IsPagingEnabled%2A> 属性设置为，或者 `false` <xref:System.Web.UI.WebControls.PagedDataSource.IsCustomPagingEnabled%2A> 或 <xref:System.Web.UI.WebControls.PagedDataSource.AllowServerPaging%2A> 属性设置为 `true` ，或者 <xref:System.Web.UI.WebControls.PagedDataSource.DataSource%2A> 属性包含 `null` ，则返回0。</span><span class="sxs-lookup"><span data-stu-id="96688-168">If the <xref:System.Web.UI.WebControls.PagedDataSource.IsPagingEnabled%2A> property is set to `false`, or the <xref:System.Web.UI.WebControls.PagedDataSource.IsCustomPagingEnabled%2A> or <xref:System.Web.UI.WebControls.PagedDataSource.AllowServerPaging%2A> properties are set to `true`, or the <xref:System.Web.UI.WebControls.PagedDataSource.DataSource%2A> property contains `null`, 0 is returned.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.PagedDataSource.IsPagingEnabled" />
        <altmember cref="P:System.Web.UI.WebControls.PagedDataSource.IsCustomPagingEnabled" />
        <altmember cref="P:System.Web.UI.WebControls.PagedDataSource.DataSource" />
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.PagedDataSource.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.IEnumerator&#xA;override this.GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="pagedDataSource.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="96688-169">返回一个实现了 <see cref="T:System.Collections.IEnumerator" /> 的对象，该对象包含数据源中的所有项。</span><span class="sxs-lookup"><span data-stu-id="96688-169">Returns a <see cref="T:System.Collections.IEnumerator" /> implemented object that contains all items in the data source.</span></span></summary>
        <returns><span data-ttu-id="96688-170">一个实现了 <see cref="T:System.Collections.IEnumerator" /> 的对象，该对象包含数据源中的所有项。</span><span class="sxs-lookup"><span data-stu-id="96688-170">A <see cref="T:System.Collections.IEnumerator" /> implemented object that contains all items in the data source.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96688-171">使用此方法创建一个 <xref:System.Collections.IEnumerator?displayProperty=nameWithType> 可以循环访问以获取数据源中的每个项的。</span><span class="sxs-lookup"><span data-stu-id="96688-171">Use this method to create a <xref:System.Collections.IEnumerator?displayProperty=nameWithType> that can be iterated through to get each item in the data source.</span></span> <span data-ttu-id="96688-172">若要访问枚举器中当前位置的项，请使用 <xref:System.Collections.IEnumerator.Current%2A?displayProperty=nameWithType> 属性。</span><span class="sxs-lookup"><span data-stu-id="96688-172">To access the item at the current position in the enumerator, use the <xref:System.Collections.IEnumerator.Current%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="96688-173">使用 <xref:System.Collections.IEnumerator.MoveNext%2A?displayProperty=nameWithType> 方法移动到集合中的下一项。</span><span class="sxs-lookup"><span data-stu-id="96688-173">Use the <xref:System.Collections.IEnumerator.MoveNext%2A?displayProperty=nameWithType> method to move to the next item in the collection.</span></span> <span data-ttu-id="96688-174">若要将枚举器移动到其初始位置，请使用 <xref:System.Collections.IEnumerator.Reset%2A?displayProperty=nameWithType> 方法。</span><span class="sxs-lookup"><span data-stu-id="96688-174">To move the enumerator to its initial position, use the <xref:System.Collections.IEnumerator.Reset%2A?displayProperty=nameWithType> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="96688-175">最初获取枚举器或使用 <xref:System.Collections.IEnumerator.Reset%2A?displayProperty=nameWithType> 方法将枚举数移到集合中的第一项时，必须调用 <xref:System.Collections.IEnumerator.MoveNext%2A?displayProperty=nameWithType> 方法。</span><span class="sxs-lookup"><span data-stu-id="96688-175">When you initially get the enumerator or use the <xref:System.Collections.IEnumerator.Reset%2A?displayProperty=nameWithType> method to move the enumerator to the first item in the collection, you must call the <xref:System.Collections.IEnumerator.MoveNext%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="96688-176">否则，由属性表示的项 <xref:System.Collections.IEnumerator.Current%2A?displayProperty=nameWithType> 是不确定的。</span><span class="sxs-lookup"><span data-stu-id="96688-176">Otherwise, the item represented by the <xref:System.Collections.IEnumerator.Current%2A?displayProperty=nameWithType> property is undefined.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IEnumerable" />
        <altmember cref="M:System.Collections.IEnumerator.Reset" />
        <altmember cref="M:System.Collections.IEnumerator.MoveNext" />
        <altmember cref="P:System.Collections.IEnumerator.Current" />
      </Docs>
    </Member>
    <Member MemberName="GetItemProperties">
      <MemberSignature Language="C#" Value="public System.ComponentModel.PropertyDescriptorCollection GetItemProperties (System.ComponentModel.PropertyDescriptor[] listAccessors);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ComponentModel.PropertyDescriptorCollection GetItemProperties(class System.ComponentModel.PropertyDescriptor[] listAccessors) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.PagedDataSource.GetItemProperties(System.ComponentModel.PropertyDescriptor[])" />
      <MemberSignature Language="VB.NET" Value="Public Function GetItemProperties (listAccessors As PropertyDescriptor()) As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::ComponentModel::PropertyDescriptorCollection ^ GetItemProperties(cli::array &lt;System::ComponentModel::PropertyDescriptor ^&gt; ^ listAccessors);" />
      <MemberSignature Language="F#" Value="abstract member GetItemProperties : System.ComponentModel.PropertyDescriptor[] -&gt; System.ComponentModel.PropertyDescriptorCollection&#xA;override this.GetItemProperties : System.ComponentModel.PropertyDescriptor[] -&gt; System.ComponentModel.PropertyDescriptorCollection" Usage="pagedDataSource.GetItemProperties listAccessors" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.ITypedList.GetItemProperties(System.ComponentModel.PropertyDescriptor[])</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="listAccessors" Type="System.ComponentModel.PropertyDescriptor[]" />
      </Parameters>
      <Docs>
        <param name="listAccessors"><span data-ttu-id="96688-177"><see cref="T:System.ComponentModel.PropertyDescriptor" /> 对象数组中包含返回的列表名称。</span><span class="sxs-lookup"><span data-stu-id="96688-177">An array of <see cref="T:System.ComponentModel.PropertyDescriptor" /> objects that contains the list name returned.</span></span> <span data-ttu-id="96688-178">它可以是 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="96688-178">This can be <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="96688-179">返回 <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />，其表示每一项上用于绑定数据的属性。</span><span class="sxs-lookup"><span data-stu-id="96688-179">Returns the <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> that represents the properties on each item used to bind data.</span></span></summary>
        <returns><span data-ttu-id="96688-180"><see cref="T:System.ComponentModel.PropertyDescriptorCollection" />，其表示每一项上用于绑定数据的属性。</span><span class="sxs-lookup"><span data-stu-id="96688-180">The <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> that represents the properties on each item used to bind data.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96688-181">使用 <xref:System.Web.UI.WebControls.PagedDataSource.GetItemProperties%2A> 方法创建一个 <xref:System.ComponentModel.PropertyDescriptorCollection?displayProperty=nameWithType> ，该对象表示用于绑定数据的每个项的属性。</span><span class="sxs-lookup"><span data-stu-id="96688-181">Use the <xref:System.Web.UI.WebControls.PagedDataSource.GetItemProperties%2A> method to create a <xref:System.ComponentModel.PropertyDescriptorCollection?displayProperty=nameWithType> that represents the properties on each item used to bind data.</span></span> <span data-ttu-id="96688-182">如果 <xref:System.Web.UI.WebControls.PagedDataSource.DataSource%2A> 属性为 `null` 或不是实现的 <xref:System.ComponentModel.ITypedList?displayProperty=nameWithType> 对象， `null` 则返回。</span><span class="sxs-lookup"><span data-stu-id="96688-182">If the <xref:System.Web.UI.WebControls.PagedDataSource.DataSource%2A> property is `null` or is not a <xref:System.ComponentModel.ITypedList?displayProperty=nameWithType> implemented object, `null` is returned.</span></span> <span data-ttu-id="96688-183">有关方法的详细信息 <xref:System.Web.UI.WebControls.PagedDataSource.GetItemProperties%2A> ，请参阅 <xref:System.ComponentModel.ITypedList.GetItemProperties%2A?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="96688-183">For more information on the <xref:System.Web.UI.WebControls.PagedDataSource.GetItemProperties%2A> method, see <xref:System.ComponentModel.ITypedList.GetItemProperties%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.ITypedList" />
        <altmember cref="T:System.ComponentModel.PropertyDescriptorCollection" />
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
        <altmember cref="M:System.ComponentModel.ITypedList.GetItemProperties(System.ComponentModel.PropertyDescriptor[])" />
      </Docs>
    </Member>
    <Member MemberName="GetListName">
      <MemberSignature Language="C#" Value="public string GetListName (System.ComponentModel.PropertyDescriptor[] listAccessors);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetListName(class System.ComponentModel.PropertyDescriptor[] listAccessors) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.PagedDataSource.GetListName(System.ComponentModel.PropertyDescriptor[])" />
      <MemberSignature Language="VB.NET" Value="Public Function GetListName (listAccessors As PropertyDescriptor()) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetListName(cli::array &lt;System::ComponentModel::PropertyDescriptor ^&gt; ^ listAccessors);" />
      <MemberSignature Language="F#" Value="abstract member GetListName : System.ComponentModel.PropertyDescriptor[] -&gt; string&#xA;override this.GetListName : System.ComponentModel.PropertyDescriptor[] -&gt; string" Usage="pagedDataSource.GetListName listAccessors" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.ITypedList.GetListName(System.ComponentModel.PropertyDescriptor[])</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="listAccessors" Type="System.ComponentModel.PropertyDescriptor[]" />
      </Parameters>
      <Docs>
        <param name="listAccessors"><span data-ttu-id="96688-184"><see cref="T:System.ComponentModel.PropertyDescriptor" /> 对象数组中包含返回的列表名称。</span><span class="sxs-lookup"><span data-stu-id="96688-184">An array of <see cref="T:System.ComponentModel.PropertyDescriptor" /> objects that contains the list name returned.</span></span> <span data-ttu-id="96688-185">它可以是 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="96688-185">This can be <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="96688-186">返回列表名称。</span><span class="sxs-lookup"><span data-stu-id="96688-186">Returns the name of the list.</span></span> <span data-ttu-id="96688-187">此方法不适用于此类。</span><span class="sxs-lookup"><span data-stu-id="96688-187">This method does not apply to this class.</span></span></summary>
        <returns><span data-ttu-id="96688-188">所有情况下均为 <see cref="F:System.String.Empty" />。</span><span class="sxs-lookup"><span data-stu-id="96688-188"><see cref="F:System.String.Empty" /> for all cases.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96688-189">此方法从继承 <xref:System.ComponentModel.ITypedList?displayProperty=nameWithType> 而来，不适用于此类。</span><span class="sxs-lookup"><span data-stu-id="96688-189">This method is inherited from <xref:System.ComponentModel.ITypedList?displayProperty=nameWithType> and is not applicable to this class.</span></span> <span data-ttu-id="96688-190">它已经实现为 <xref:System.String.Empty?displayProperty=nameWithType> 所有事例返回。</span><span class="sxs-lookup"><span data-stu-id="96688-190">It has been implemented to return <xref:System.String.Empty?displayProperty=nameWithType> for all cases.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.ITypedList" />
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
        <altmember cref="M:System.ComponentModel.ITypedList.GetListName(System.ComponentModel.PropertyDescriptor[])" />
      </Docs>
    </Member>
    <Member MemberName="IsCustomPagingEnabled">
      <MemberSignature Language="C#" Value="public bool IsCustomPagingEnabled { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsCustomPagingEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.PagedDataSource.IsCustomPagingEnabled" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsCustomPagingEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsCustomPagingEnabled { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsCustomPagingEnabled : bool" Usage="System.Web.UI.WebControls.PagedDataSource.IsCustomPagingEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="96688-191">获取一个值，该值指示是否启用自定义分页。</span><span class="sxs-lookup"><span data-stu-id="96688-191">Gets a value indicating whether custom paging is enabled.</span></span></summary>
        <value><span data-ttu-id="96688-192">如果启用自定义分页，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="96688-192"><see langword="true" /> if custom paging is enabled; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96688-193">使用 <xref:System.Web.UI.WebControls.PagedDataSource.IsCustomPagingEnabled%2A> 属性可确定是否已启用自定义分页。</span><span class="sxs-lookup"><span data-stu-id="96688-193">Use the <xref:System.Web.UI.WebControls.PagedDataSource.IsCustomPagingEnabled%2A> property to determine whether custom paging is enabled.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="96688-194"><xref:System.Web.UI.WebControls.PagedDataSource.IsPagingEnabled%2A>和属性都 <xref:System.Web.UI.WebControls.PagedDataSource.AllowCustomPaging%2A> 必须是， `true` 此属性才会返回 `true` 。</span><span class="sxs-lookup"><span data-stu-id="96688-194">Both the <xref:System.Web.UI.WebControls.PagedDataSource.IsPagingEnabled%2A> and <xref:System.Web.UI.WebControls.PagedDataSource.AllowCustomPaging%2A> properties must be `true` for this property to return `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.PagedDataSource.IsPagingEnabled" />
        <altmember cref="P:System.Web.UI.WebControls.PagedDataSource.AllowCustomPaging" />
      </Docs>
    </Member>
    <Member MemberName="IsFirstPage">
      <MemberSignature Language="C#" Value="public bool IsFirstPage { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsFirstPage" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.PagedDataSource.IsFirstPage" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsFirstPage As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsFirstPage { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsFirstPage : bool" Usage="System.Web.UI.WebControls.PagedDataSource.IsFirstPage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="96688-195">获取一个值，该值指示当前页是否是首页。</span><span class="sxs-lookup"><span data-stu-id="96688-195">Gets a value indicating whether the current page is the first page.</span></span></summary>
        <value><span data-ttu-id="96688-196">如果当前页是首页，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="96688-196"><see langword="true" /> if the current page is the first page; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96688-197">使用 <xref:System.Web.UI.WebControls.PagedDataSource.IsFirstPage%2A> 属性来确定当前页是否为第一页。</span><span class="sxs-lookup"><span data-stu-id="96688-197">Use the <xref:System.Web.UI.WebControls.PagedDataSource.IsFirstPage%2A> property to determine whether the current page is the first page.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.PagedDataSource.IsLastPage" />
      </Docs>
    </Member>
    <Member MemberName="IsLastPage">
      <MemberSignature Language="C#" Value="public bool IsLastPage { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsLastPage" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.PagedDataSource.IsLastPage" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsLastPage As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsLastPage { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsLastPage : bool" Usage="System.Web.UI.WebControls.PagedDataSource.IsLastPage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="96688-198">获取一个值，该值指示当前页是否是最后一页。</span><span class="sxs-lookup"><span data-stu-id="96688-198">Gets a value indicating whether the current page is the last page.</span></span></summary>
        <value><span data-ttu-id="96688-199">如果当前页是最后一页，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="96688-199"><see langword="true" /> if the current page is the last page; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96688-200">使用 <xref:System.Web.UI.WebControls.PagedDataSource.IsLastPage%2A> 属性来确定当前页是否是最后一页。</span><span class="sxs-lookup"><span data-stu-id="96688-200">Use the <xref:System.Web.UI.WebControls.PagedDataSource.IsLastPage%2A> property to determine whether the current page is the last page.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.PagedDataSource.IsFirstPage" />
      </Docs>
    </Member>
    <Member MemberName="IsPagingEnabled">
      <MemberSignature Language="C#" Value="public bool IsPagingEnabled { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPagingEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.PagedDataSource.IsPagingEnabled" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsPagingEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsPagingEnabled { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsPagingEnabled : bool" Usage="System.Web.UI.WebControls.PagedDataSource.IsPagingEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="96688-201">获取一个值，该值指示是否启用分页。</span><span class="sxs-lookup"><span data-stu-id="96688-201">Gets a value indicating whether paging is enabled.</span></span></summary>
        <value><span data-ttu-id="96688-202">如果启用分页，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="96688-202"><see langword="true" /> if paging is enabled; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96688-203">使用 <xref:System.Web.UI.WebControls.PagedDataSource.IsPagingEnabled%2A> 属性可确定是否已启用分页。</span><span class="sxs-lookup"><span data-stu-id="96688-203">Use the <xref:System.Web.UI.WebControls.PagedDataSource.IsPagingEnabled%2A> property to determine whether paging is enabled.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="96688-204"><xref:System.Web.UI.WebControls.PagedDataSource.AllowPaging%2A>属性必须为 `true` ，且 <xref:System.Web.UI.WebControls.PagedDataSource.PageSize%2A> 不能将属性设置为0以使此属性返回 `true` 。</span><span class="sxs-lookup"><span data-stu-id="96688-204">The <xref:System.Web.UI.WebControls.PagedDataSource.AllowPaging%2A> property must be `true` and the <xref:System.Web.UI.WebControls.PagedDataSource.PageSize%2A> property cannot be set to 0 for this property to return `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.PagedDataSource.AllowPaging" />
        <altmember cref="P:System.Web.UI.WebControls.PagedDataSource.PageSize" />
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.PagedDataSource.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="System.Web.UI.WebControls.PagedDataSource.IsReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="96688-205">获取一个值，该值指示数据源是否是只读的。</span><span class="sxs-lookup"><span data-stu-id="96688-205">Gets a value indicating whether the data source is read-only.</span></span></summary>
        <value><span data-ttu-id="96688-206">所有情况下均为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="96688-206"><see langword="false" /> for all cases.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96688-207">此属性实现为始终返回 `false` ，这表示可以在所有情况下修改数据源。</span><span class="sxs-lookup"><span data-stu-id="96688-207">This property is implemented to always return `false`, which indicates that the data source can be modified in all cases.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsServerPagingEnabled">
      <MemberSignature Language="C#" Value="public bool IsServerPagingEnabled { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsServerPagingEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.PagedDataSource.IsServerPagingEnabled" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsServerPagingEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsServerPagingEnabled { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsServerPagingEnabled : bool" Usage="System.Web.UI.WebControls.PagedDataSource.IsServerPagingEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="96688-208">获取一个值，指示是否启用服务器端分页支持。</span><span class="sxs-lookup"><span data-stu-id="96688-208">Gets a value indicating whether server-side paging support is enabled.</span></span></summary>
        <value><span data-ttu-id="96688-209">如果已启用分页，且使用 <see cref="P:System.Web.UI.WebControls.PagedDataSource.AllowServerPaging" /> 属性指示服务器端分页，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="96688-209"><see langword="true" /> if paging is enabled and server-side paging is indicated using the <see cref="P:System.Web.UI.WebControls.PagedDataSource.AllowServerPaging" /> property; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96688-210">当 <xref:System.Web.UI.WebControls.PagedDataSource.AllowPaging%2A> 和 <xref:System.Web.UI.WebControls.PagedDataSource.AllowServerPaging%2A> 属性都设置为 `true` ，并且数据源检索的数据量无法在单个页面中显示时，将启用服务器端分页。</span><span class="sxs-lookup"><span data-stu-id="96688-210">Server-side paging is enabled when the <xref:System.Web.UI.WebControls.PagedDataSource.AllowPaging%2A> and <xref:System.Web.UI.WebControls.PagedDataSource.AllowServerPaging%2A> properties are both set to `true`, and the amount of data retrieved by the data source cannot be displayed in a single page.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.PagedDataSource.AllowPaging" />
        <altmember cref="P:System.Web.UI.WebControls.PagedDataSource.AllowServerPaging" />
        <altmember cref="P:System.Web.UI.WebControls.PagedDataSource.PageCount" />
      </Docs>
    </Member>
    <Member MemberName="IsSynchronized">
      <MemberSignature Language="C#" Value="public bool IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.PagedDataSource.IsSynchronized" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSynchronized As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSynchronized : bool" Usage="System.Web.UI.WebControls.PagedDataSource.IsSynchronized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="96688-211">获取一个值，该值指示是否同步对数据源的访问（线程安全）。</span><span class="sxs-lookup"><span data-stu-id="96688-211">Gets a value indicating whether access to the data source is synchronized (thread-safe).</span></span></summary>
        <value><span data-ttu-id="96688-212">所有情况下均为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="96688-212"><see langword="false" /> for all cases.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96688-213">此属性是从类派生的 <xref:System.Collections.ICollection?displayProperty=nameWithType> ，并被重写以始终返回 `false` ，以指示此类不是线程安全的。</span><span class="sxs-lookup"><span data-stu-id="96688-213">This property is derived from the <xref:System.Collections.ICollection?displayProperty=nameWithType> class and is overridden to always return `false` to indicate that this class is not thread-safe.</span></span>  
  
 <span data-ttu-id="96688-214">有关属性的详细信息 <xref:System.Web.UI.WebControls.PagedDataSource.IsSynchronized%2A> ，请参阅 <xref:System.Collections.ICollection.IsSynchronized%2A?displayProperty=nameWithType> 接口的属性 <xref:System.Collections.ICollection?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="96688-214">For more information on the <xref:System.Web.UI.WebControls.PagedDataSource.IsSynchronized%2A> property, see the <xref:System.Collections.ICollection.IsSynchronized%2A?displayProperty=nameWithType> property of the <xref:System.Collections.ICollection?displayProperty=nameWithType> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.ICollection" />
        <altmember cref="P:System.Collections.ICollection.IsSynchronized" />
      </Docs>
    </Member>
    <Member MemberName="PageCount">
      <MemberSignature Language="C#" Value="public int PageCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PageCount" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.PagedDataSource.PageCount" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PageCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int PageCount { int get(); };" />
      <MemberSignature Language="F#" Value="member this.PageCount : int" Usage="System.Web.UI.WebControls.PagedDataSource.PageCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="96688-215">获取显示数据源中的所有项所需要的总页数。</span><span class="sxs-lookup"><span data-stu-id="96688-215">Gets the total number of pages necessary to display all items in the data source.</span></span></summary>
        <value><span data-ttu-id="96688-216">显示数据源中的所有项所需要的页数。</span><span class="sxs-lookup"><span data-stu-id="96688-216">The number of pages necessary to display all items in the data source.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96688-217">使用 <xref:System.Web.UI.WebControls.PagedDataSource.PageCount%2A> 属性可确定显示数据源中的所有项所需的页数。</span><span class="sxs-lookup"><span data-stu-id="96688-217">Use the <xref:System.Web.UI.WebControls.PagedDataSource.PageCount%2A> property to determine the number of pages necessary to display all items in the data source.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="96688-218">如果 <xref:System.Web.UI.WebControls.PagedDataSource.DataSource%2A> 属性为 `null` ，则返回0。</span><span class="sxs-lookup"><span data-stu-id="96688-218">If the <xref:System.Web.UI.WebControls.PagedDataSource.DataSource%2A> property is `null`, 0 is returned.</span></span> <span data-ttu-id="96688-219">如果将 <xref:System.Web.UI.WebControls.PagedDataSource.IsPagingEnabled%2A> 属性设置为 `false` 或将 <xref:System.Web.UI.WebControls.PagedDataSource.DataSourceCount%2A> 属性设置为0或更小，则返回1。</span><span class="sxs-lookup"><span data-stu-id="96688-219">If the <xref:System.Web.UI.WebControls.PagedDataSource.IsPagingEnabled%2A> property is set to `false` or the <xref:System.Web.UI.WebControls.PagedDataSource.DataSourceCount%2A> property is set to 0 or less, 1 is returned.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.PagedDataSource.Count" />
        <altmember cref="P:System.Web.UI.WebControls.PagedDataSource.CurrentPageIndex" />
        <altmember cref="P:System.Web.UI.WebControls.PagedDataSource.DataSourceCount" />
        <altmember cref="P:System.Web.UI.WebControls.PagedDataSource.PageSize" />
        <altmember cref="P:System.Web.UI.WebControls.PagedDataSource.VirtualCount" />
      </Docs>
    </Member>
    <Member MemberName="PageSize">
      <MemberSignature Language="C#" Value="public int PageSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PageSize" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.PagedDataSource.PageSize" />
      <MemberSignature Language="VB.NET" Value="Public Property PageSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int PageSize { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.PageSize : int with get, set" Usage="System.Web.UI.WebControls.PagedDataSource.PageSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="96688-220">获取或设置要在单页上显示的项数。</span><span class="sxs-lookup"><span data-stu-id="96688-220">Gets or sets the number of items to display on a single page.</span></span></summary>
        <value><span data-ttu-id="96688-221">要在单页上显示的项数。</span><span class="sxs-lookup"><span data-stu-id="96688-221">The number of items to display on a single page.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96688-222">使用 <xref:System.Web.UI.WebControls.PagedDataSource.PageSize%2A> 属性来指定或确定要在单个页面上显示的项目数。</span><span class="sxs-lookup"><span data-stu-id="96688-222">Use the <xref:System.Web.UI.WebControls.PagedDataSource.PageSize%2A> property to specify or determine the number of items to display on a single page.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.PagedDataSource.Count" />
        <altmember cref="P:System.Web.UI.WebControls.PagedDataSource.CurrentPageIndex" />
        <altmember cref="P:System.Web.UI.WebControls.PagedDataSource.DataSourceCount" />
        <altmember cref="P:System.Web.UI.WebControls.PagedDataSource.PageCount" />
        <altmember cref="P:System.Web.UI.WebControls.PagedDataSource.VirtualCount" />
      </Docs>
    </Member>
    <Member MemberName="SyncRoot">
      <MemberSignature Language="C#" Value="public object SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.PagedDataSource.SyncRoot" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SyncRoot As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SyncRoot : obj" Usage="System.Web.UI.WebControls.PagedDataSource.SyncRoot" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="96688-223">获取可用于同步集合访问的对象。</span><span class="sxs-lookup"><span data-stu-id="96688-223">Gets the object that can be used to synchronize access to the collection.</span></span></summary>
        <value><span data-ttu-id="96688-224">用于同步对集合的访问的对象。</span><span class="sxs-lookup"><span data-stu-id="96688-224">An object that can be used to synchronize access to the collection.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96688-225">此实现中返回的对象是 <xref:System.Web.UI.WebControls.PagedDataSource> 对象本身。</span><span class="sxs-lookup"><span data-stu-id="96688-225">The object returned in this implementation is the <xref:System.Web.UI.WebControls.PagedDataSource> object itself.</span></span>  
  
 <span data-ttu-id="96688-226">有关属性的详细信息 <xref:System.Web.UI.WebControls.DataGridColumnCollection.SyncRoot%2A> ，请参阅 <xref:System.Collections.ICollection.SyncRoot%2A?displayProperty=nameWithType> 接口的属性 <xref:System.Collections.ICollection?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="96688-226">For more information on the <xref:System.Web.UI.WebControls.DataGridColumnCollection.SyncRoot%2A> property, see the <xref:System.Collections.ICollection.SyncRoot%2A?displayProperty=nameWithType> property of the <xref:System.Collections.ICollection?displayProperty=nameWithType> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Object" />
        <altmember cref="P:System.Collections.ICollection.SyncRoot" />
        <altmember cref="T:System.Collections.ICollection" />
      </Docs>
    </Member>
    <Member MemberName="VirtualCount">
      <MemberSignature Language="C#" Value="public int VirtualCount { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 VirtualCount" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.PagedDataSource.VirtualCount" />
      <MemberSignature Language="VB.NET" Value="Public Property VirtualCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int VirtualCount { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.VirtualCount : int with get, set" Usage="System.Web.UI.WebControls.PagedDataSource.VirtualCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="96688-227">获取或设置在使用自定义分页时数据源中的实际项数。</span><span class="sxs-lookup"><span data-stu-id="96688-227">Gets or sets the virtual number of items in the data source when custom paging is used.</span></span></summary>
        <value><span data-ttu-id="96688-228">在使用自定义分页时数据源中的实际项数。</span><span class="sxs-lookup"><span data-stu-id="96688-228">The virtual number of items in the data source when custom paging is used.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96688-229">使用 <xref:System.Web.UI.WebControls.PagedDataSource.VirtualCount%2A> 自定义分页或服务器端分页来确定数据源中的虚拟项数时，使用属性。</span><span class="sxs-lookup"><span data-stu-id="96688-229">Use the <xref:System.Web.UI.WebControls.PagedDataSource.VirtualCount%2A> property when custom paging or server-side paging is used to determine the virtual number of items in the data source.</span></span> <span data-ttu-id="96688-230">有关属性的详细信息 <xref:System.Web.UI.WebControls.PagedDataSource.VirtualCount%2A> ，请参阅 <xref:System.Web.UI.WebControls.DataGrid.VirtualItemCount%2A?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="96688-230">For more information on the <xref:System.Web.UI.WebControls.PagedDataSource.VirtualCount%2A> property, see <xref:System.Web.UI.WebControls.DataGrid.VirtualItemCount%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.DataGrid.VirtualItemCount" />
      </Docs>
    </Member>
  </Members>
</Type>
