<Type Name="Button" FullName="System.Web.UI.WebControls.Button">
  <Metadata><Meta Name="ms.openlocfilehash" Value="fb496e6251641316521c296c8377b245b8f038f5" /><Meta Name="ms.sourcegitcommit" Value="11d168140aa8fade0768c2a9dde3e3bcacfdfb7d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="05/27/2020" /><Meta Name="ms.locfileid" Value="83963028" /></Metadata><TypeSignature Language="C#" Value="public class Button : System.Web.UI.WebControls.WebControl, System.Web.UI.IPostBackEventHandler" FrameworkAlternate="netframework-1.1" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Button extends System.Web.UI.WebControls.WebControl implements class System.Web.UI.IPostBackEventHandler" FrameworkAlternate="netframework-1.1" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.Button" />
  <TypeSignature Language="VB.NET" Value="Public Class Button&#xA;Inherits WebControl&#xA;Implements IPostBackEventHandler" FrameworkAlternate="netframework-1.1" />
  <TypeSignature Language="C++ CLI" Value="public ref class Button : System::Web::UI::WebControls::WebControl, System::Web::UI::IPostBackEventHandler" FrameworkAlternate="netframework-1.1" />
  <TypeSignature Language="F#" Value="type Button = class&#xA;    inherit WebControl&#xA;    interface IPostBackEventHandler" FrameworkAlternate="netframework-1.1" />
  <TypeSignature Language="C#" Value="public class Button : System.Web.UI.WebControls.WebControl, System.Web.UI.IPostBackEventHandler, System.Web.UI.WebControls.IButtonControl" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Button extends System.Web.UI.WebControls.WebControl implements class System.Web.UI.IPostBackEventHandler, class System.Web.UI.WebControls.IButtonControl" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <TypeSignature Language="VB.NET" Value="Public Class Button&#xA;Inherits WebControl&#xA;Implements IButtonControl, IPostBackEventHandler" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <TypeSignature Language="C++ CLI" Value="public ref class Button : System::Web::UI::WebControls::WebControl, System::Web::UI::IPostBackEventHandler, System::Web::UI::WebControls::IButtonControl" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <TypeSignature Language="F#" Value="type Button = class&#xA;    inherit WebControl&#xA;    interface IButtonControl&#xA;    interface IPostBackEventHandler" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.WebControl</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.UI.IPostBackEventHandler</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.WebControls.IButtonControl</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("Click")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("Text")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.ButtonDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Web.UI.DataBindingHandler("System.Web.UI.Design.TextDataBindingHandler, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Web.UI.SupportsEventValidation</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Web.UI.ToolboxData("&lt;{0}:Button runat="server" Text="Button"&gt;&lt;/{0}:Button&gt;")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1">
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.ButtonDesigner, System.Design, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1">
      <AttributeName>System.Web.UI.DataBindingHandler("System.Web.UI.Design.TextDataBindingHandler, System.Design, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1">
      <AttributeName>System.Web.UI.ToolboxData("&lt;{0}:Button runat=server Text="Button"&gt;&lt;/{0}:Button&gt;")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.ButtonDesigner, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.Web.UI.DataBindingHandler("System.Web.UI.Design.TextDataBindingHandler, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>在网页上显示按钮控件。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[

## Remarks
 本主题内容：

-   [介绍](#Introduction)

-   [按钮回发行为和服务器事件](#ButtonPostbackBehaviorandServerEvents)

-   [处理客户端脚本中的按钮事件](#HandlingButtonEventsinClientScript)

-   [按钮控件和验证](#ButtonControlsAndValidation)

-   [数据控件中的按钮](#ButtonsInDataControls)

-   [将数据绑定到控件](#BindingDataToTheControls)

-   [使用带有 UpdatePanel 控件的按钮](#UsingButtonsWithUpdatePanelControls)

-   [声明性语法](#DeclarativeSyntax)

<a name="Introduction"></a>
## <a name="introduction"></a>介绍
 使用 "<xref:System.Web.UI.WebControls.Button>" 控件在网页上创建一个 "推送" 按钮，该按钮使用户能够向服务器发送页面。 控件触发服务器代码中的一个事件，您可以处理该事件以响应回发。 它还可以在客户端脚本中引发事件，您可以在页面发布之前处理此事件，或者运行然后取消页面的提交。

> [!NOTE]
>  ASP.NET 包括几种按钮控件，每种按钮控件在网页上以不同方式显示。 它们是以 "按下" 按钮形式呈现的 <xref:System.Web.UI.WebControls.Button> 控件;呈现为链接的 <xref:System.Web.UI.WebControls.LinkButton> 控件;和以图像形式呈现的 <xref:System.Web.UI.WebControls.ImageButton> 控件;和 <xref:System.Web.UI.WebControls.ImageMap> 控件，该控件使您可以创建具有用户可单击的热点的图形。 默认情况下，单击时，所有按钮控件都会提交该页。 你还可以使用 <xref:System.Web.UI.HtmlControls.HtmlButton> 和 <xref:System.Web.UI.HtmlControls.HtmlInputButton> 控件创建在服务器代码中可编程的页上的按钮。 有关 HTML 和 Web 服务器控件之间的差异的详细信息，请参阅[ASP.NET Web 服务器控件概述](https://docs.microsoft.com/previous-versions/aspnet/zsyt68f1(v=vs.100))。

 默认情况下，<xref:System.Web.UI.WebControls.Button> 控件是 "提交" 按钮。 "提交" 按钮没有与该按钮关联的命令名称（由 <xref:System.Web.UI.WebControls.Button.CommandName%2A> 属性指定），只是将该网页发布回服务器。 可以为 <xref:System.Web.UI.WebControls.Button.Click> 事件提供事件处理程序，以编程方式控制在单击 "提交" 按钮时执行的操作。

 命令按钮具有与按钮关联的命令名（例如 `Sort`），方法是设置 "<xref:System.Web.UI.WebControls.Button.CommandName%2A>" 属性。 这样，便可以在网页上创建多个 <xref:System.Web.UI.WebControls.Button> 控件，并以编程方式确定单击的 <xref:System.Web.UI.WebControls.Button> 控件。 你还可以将 <xref:System.Web.UI.WebControls.Button.CommandArgument%2A> 属性与命令按钮一起使用，以提供有关要执行的命令的其他信息，如 `Ascending`。 您可以为 <xref:System.Web.UI.WebControls.Button.Command> 事件提供事件处理程序，以编程方式控制单击命令按钮时执行的操作。

<a name="ButtonPostbackBehaviorandServerEvents"></a>
## <a name="button-postback-behavior-and-server-events"></a>按钮回发行为和服务器事件
 当用户单击任何 Web 服务器控件按钮时，该页将发送到服务器。 这会导致在基于服务器的代码中处理网页并引发任何挂起事件。 完成所有页面和控件处理后，页面会再次呈现给浏览器。

 按钮可以引发自己的 <xref:System.Web.UI.WebControls.Button.Click> 事件或 <xref:System.Web.UI.WebControls.Button.Command> 事件，可以使用基于服务器的代码处理这些事件。 这不同于传统 HTML 页或基于客户端的 Web 应用程序中的事件，其中按钮 `onclick` 事件通过使用在客户端中运行的 JavaScript 来处理。 有关详细信息，请参阅[ASP.NET Web 窗体服务器控件事件模型](https://docs.microsoft.com/previous-versions/aspnet/y3bwdsh3(v=vs.100))。

 用户单击按钮控件时，该页会回发到服务器。 默认情况下，该页面会回发到自身。

 您可以将按钮配置为将当前页发送到另一页。 这对于创建多页窗体非常有用。 有关详细信息，请参阅[ASP.NET Web Forms 中的跨页面发布](https://docs.microsoft.com/previous-versions/aspnet/ms178139(v=vs.100))。

<a name="HandlingButtonEventsinClientScript"></a>
## <a name="handling-button-events-in-client-script"></a>处理客户端脚本中的按钮事件
 按钮控件可以引发服务器事件和客户端事件。 在回发后发生服务器事件，并在为该页编写的服务器端代码中处理这些事件。 客户端事件在客户端脚本（通常是 ECMAScript （JavaScript））中处理，在提交页面之前引发。 通过向 ASP.NET 按钮控件添加客户端事件，可以在提交页面之前执行一些任务，如显示确认对话框，并可能取消提交。 有关详细信息，请参阅[中的客户端脚本 ASP.NET 网页](https://docs.microsoft.com/previous-versions/aspnet/3hc29e2a(v=vs.100))和[如何：在客户端脚本中响应按钮 Web 服务器控件事件](https://docs.microsoft.com/previous-versions/aspnet/ms227426(v=vs.100))。

 你可能还希望 <xref:System.Web.UI.WebControls.Button> 控件也使用客户端脚本来执行回发（而不是简单地执行 HTTP POST 操作）。 如果要以编程方式处理回发（如将其附加到页面上的其他元素），这会很有用。 可以将 <xref:System.Web.UI.WebControls.Button> 控件的 <xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A> 属性设置为 `true`，使 <xref:System.Web.UI.WebControls.Button> 控件使用基于客户端脚本的回发。

<a name="ButtonControlsAndValidation"></a>
## <a name="button-controls-and-validation"></a>按钮控件和验证
 如果页面包含 ASP.NET 验证程序控件，则默认情况下，单击按钮控件将导致验证程序控件执行其检查。 如果为验证程序控件启用了客户端验证，则在验证检查失败的情况下不会提交该页。

 下表描述了按钮控件支持的属性，这些属性使你能够更精确地控制验证过程。

|属性|说明|
|--------------|-----------------|
|<xref:System.Web.UI.WebControls.Button.CausesValidation%2A>|指定单击按钮是否还会执行验证检查。 将此属性设置为 "`false`" 以防止验证检查。|
|<xref:System.Web.UI.WebControls.Button.ValidationGroup%2A>|使您能够指定在单击按钮时要调用的页上的验证程序。 如果未建立验证组，按钮单击将调用该页上的所有验证程序。|

 有关详细信息，请参阅[在 ASP.NET 网页中验证用户输入](https://docs.microsoft.com/previous-versions/aspnet/7kh55542(v=vs.100))。

<a name="ButtonsInDataControls"></a>
## <a name="buttons-in-data-controls"></a>数据控件中的按钮
 按钮 Web 服务器控件通常用于数据控件，如 <xref:System.Web.UI.WebControls.DataList>、<xref:System.Web.UI.WebControls.GridView>和 <xref:System.Web.UI.WebControls.Repeater> 列表控件中。 在这些情况下，通常不会直接响应按钮单击事件。 相反，数据控件中的按钮引发特定于数据控件的事件。 例如，在 <xref:System.Web.UI.WebControls.DataList> 控件中，按钮可能引发 <xref:System.Web.UI.WebControls.DataList> 控件的 <xref:System.Web.UI.WebControls.DataList.ItemCommand> 事件，而不是引发 <xref:System.Web.UI.WebControls.Button> 控件的 <xref:System.Web.UI.WebControls.Button.Click> 事件。

 由于数据绑定列表控件可以包含多个按钮，因此您可以设置按钮的 <xref:System.Web.UI.WebControls.Button.CommandArgument%2A> 属性以指定作为事件的一部分传递的值。 然后，你可以测试此参数以查看单击了哪个按钮。

<a name="BindingDataToTheControls"></a>
## <a name="binding-data-to-the-controls"></a>将数据绑定到控件
 您可以将按钮 Web 服务器控件绑定到数据源，以便动态控制其属性设置。 例如，可以使用数据绑定来设置按钮的 <xref:System.Web.UI.WebControls.Button.Text%2A> 属性。

<a name="UsingButtonsWithUpdatePanelControls"></a>
## <a name="using-buttons-with-updatepanel-controls"></a>使用带有 UpdatePanel 控件的按钮
 通过部分页呈现，可以在不回发的情况下刷新部分页面。 <xref:System.Web.UI.UpdatePanel> 控件使您能够标记部分页面呈现的部分页面。 默认情况下，<xref:System.Web.UI.UpdatePanel> 控件内的控件的行为（包括 <xref:System.Web.UI.WebControls.Button> 控件）是执行异步回发而不是回发。 这仅刷新回发源自的 <xref:System.Web.UI.UpdatePanel> 控件的内容。

 除了 <xref:System.Web.UI.UpdatePanel> 控件内 <xref:System.Web.UI.WebControls.Button> 控件的方案外，还可以在以下方案中将 <xref:System.Web.UI.WebControls.Button> 控件与 <xref:System.Web.UI.UpdatePanel> 控件一起使用：

-   将 <xref:System.Web.UI.UpdatePanel> 控件之外的 <xref:System.Web.UI.WebControls.Button> 控件定义为该面板的 <xref:System.Web.UI.AsyncPostBackTrigger> 控件。 单击该按钮时，它会执行异步回发并刷新面板的内容。

-   将 <xref:System.Web.UI.UpdatePanel> 控件内的 <xref:System.Web.UI.WebControls.Button> 控件定义为面板的 <xref:System.Web.UI.PostBackTrigger>。 单击该按钮时，它会执行回发，即使它位于 <xref:System.Web.UI.UpdatePanel> 控件中。

 有关部分页面呈现和使用 <xref:System.Web.UI.UpdatePanel> 控件的详细信息，请参阅[UpdatePanel 控件概述](https://docs.microsoft.com/previous-versions/aspnet/bb386454(v=vs.100))和[部分页呈现概述](https://docs.microsoft.com/previous-versions/aspnet/bb386573(v=vs.100))。

<a name="DeclarativeSyntax"></a>
## <a name="declarative-syntax"></a>声明性语法

```
<asp:Button
    AccessKey="string"
    BackColor="color name|#dddddd"
    BorderColor="color name|#dddddd"
    BorderStyle="NotSet|None|Dotted|Dashed|Solid|Double|Groove|Ridge|
        Inset|Outset"
    BorderWidth="size"
    CausesValidation="True|False"
    CommandArgument="string"
    CommandName="string"
    CssClass="string"
    Enabled="True|False"
    EnableTheming="True|False"
    EnableViewState="True|False"
    Font-Bold="True|False"
    Font-Italic="True|False"
    Font-Names="string"
    Font-Overline="True|False"
    Font-Size="string|Smaller|Larger|XX-Small|X-Small|Small|Medium|
        Large|X-Large|XX-Large"
    Font-Strikeout="True|False"
    Font-Underline="True|False"
    ForeColor="color name|#dddddd"
    Height="size"
    ID="string"
    OnClick="Click event handler"
    OnClientClick="string"
    OnCommand="Command event handler"
    OnDataBinding="DataBinding event handler"
    OnDisposed="Disposed event handler"
    OnInit="Init event handler"
    OnLoad="Load event handler"
    OnPreRender="PreRender event handler"
    OnUnload="Unload event handler"
    PostBackUrl="uri"
    runat="server"
    SkinID="string"
    Style="string"
    TabIndex="integer"
    Text="string"
    ToolTip="string"
    UseSubmitBehavior="True|False"
    ValidationGroup="string"
    Visible="True|False"
    Width="size"
/>
```



## Examples
 下面的代码示例演示如何创建一个提交 <xref:System.Web.UI.WebControls.Button> 控件，以将网页内容回发到服务器。

 [!code-aspx-csharp[Classic Button Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic Button Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic Button Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic Button Example/VB/sourcevb.aspx#1)]

 下面的代码示例演示如何创建一个对列表进行排序 <xref:System.Web.UI.WebControls.Button> 控件。

 [!code-aspx-csharp[ButtonCommandNameArgument#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonCommandNameArgument/CS/buttoncommandnamecs.aspx#1)]
 [!code-aspx-vb[ButtonCommandNameArgument#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonCommandNameArgument/VB/buttoncommandnamevb.aspx#1)]

 ]]></format>
    </remarks>
    <altmember cref="P:System.Web.UI.WebControls.Button.CommandName" />
    <altmember cref="P:System.Web.UI.WebControls.Button.CommandArgument" />
    <altmember cref="E:System.Web.UI.WebControls.Button.Click" />
    <altmember cref="E:System.Web.UI.WebControls.Button.Command" />
    <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/t41dh257(v=vs.100)">按钮 Web 服务器控件</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Button ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Button.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Button();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Web.UI.WebControls.Button" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 使用此构造函数创建并初始化 <xref:System.Web.UI.WebControls.Button> 类的新实例。



## Examples
 下面的代码示例演示如何创建和初始化 <xref:System.Web.UI.WebControls.Button> 类的新实例。

 [!code-aspx-csharp[ButtonCtor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonCtor/CS/buttonctorcs.aspx#1)]
 [!code-aspx-vb[ButtonCtor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonCtor/VB/buttonctorvb.aspx#1)]

 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/t41dh257(v=vs.100)">按钮 Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="AddAttributesToRender">
      <MemberSignature Language="C#" Value="protected override void AddAttributesToRender (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void AddAttributesToRender(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Button.AddAttributesToRender(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub AddAttributesToRender (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void AddAttributesToRender(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.AddAttributesToRender : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="button.AddAttributesToRender writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">一个 <see cref="T:System.Web.UI.HtmlTextWriter" />，其中包含要在客户端上呈现内容的输出流。</param>
        <summary>将 <see cref="T:System.Web.UI.WebControls.Button" /> 控件的特性添加到输出流用以在客户端上呈现内容。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Examples
 下面的代码示例演示如何重写自定义服务器控件中的 <xref:System.Web.UI.WebControls.Button.AddAttributesToRender%2A> 方法，以便 <xref:System.Web.UI.WebControls.Button> 文本始终显示为红色。

 [!code-aspx-csharp[CustomButtonAddAttributesToRender#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomButtonAddAttributesToRender/CS/custombuttonaddattributestorendercs.aspx#1)]
 [!code-aspx-vb[CustomButtonAddAttributesToRender#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomButtonAddAttributesToRender/VB/custombuttonaddattributestorendervb.aspx#1)]
[!code-csharp[CustomButtonAddAttributesToRender#2](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomButtonAddAttributesToRender/CS/custombuttonaddattributestorender.cs#2)]
[!code-vb[CustomButtonAddAttributesToRender#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomButtonAddAttributesToRender/VB/custombuttonaddattributestorender.vb#2)]

 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/t41dh257(v=vs.100)">按钮 Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="CausesValidation">
      <MemberSignature Language="C#" Value="public bool CausesValidation { get; set; }" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CausesValidation" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Button.CausesValidation" />
      <MemberSignature Language="VB.NET" Value="Public Property CausesValidation As Boolean" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CausesValidation { bool get(); void set(bool value); };" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="F#" Value="member this.CausesValidation : bool with get, set" Usage="System.Web.UI.WebControls.Button.CausesValidation" />
      <MemberSignature Language="C#" Value="public virtual bool CausesValidation { get; set; }" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CausesValidation As Boolean" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CausesValidation { bool get(); void set(bool value); };" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IButtonControl.CausesValidation</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Bindable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示在单击 <see cref="T:System.Web.UI.WebControls.Button" /> 控件时是否执行验证。</summary>
        <value>如果在单击 <see cref="T:System.Web.UI.WebControls.Button" /> 控件后执行验证，则为 <see langword="true" />；否则为 <see langword="false" />。 默认值是 <see langword="true" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 默认情况下，单击 <xref:System.Web.UI.WebControls.Button> 控件时，将执行页验证。 页验证确定与页上的验证控件关联的输入控件是否全部通过验证控件指定的验证规则。

 使用 <xref:System.Web.UI.WebControls.Button.CausesValidation%2A> 属性单击 <xref:System.Web.UI.WebControls.Button> 控件时，可以指定或确定是否在客户端和服务器上执行验证。 若要防止执行验证，请将 <xref:System.Web.UI.WebControls.Button.CausesValidation%2A> 属性设置为 `false`。

> [!NOTE]
>  使用 <xref:System.Web.UI.WebControls.Button.PostBackUrl%2A> 属性回发到其他页面时，应将 <xref:System.Web.UI.WebControls.Button.CausesValidation%2A> 属性设置为 `false`。 向其他页面回发时，应显式检查验证。 有关示例，请参见 <xref:System.Web.UI.WebControls.Button.PostBackUrl%2A> 属性的 "备注" 部分。

 此属性通常设置为 "`false`" `reset` "或" `clear` "按钮，以防止在单击按钮时执行验证。

 当 <xref:System.Web.UI.WebControls.Button.CausesValidation%2A> 属性的值设置为 `true`时，还可以使用 <xref:System.Web.UI.WebControls.Button.ValidationGroup%2A> 属性来指定 <xref:System.Web.UI.WebControls.Button> 控件对其进行验证的验证组的名称。

 无法通过主题或样式表主题设置此属性。 有关详细信息，请参阅 <xref:System.Web.UI.ThemeableAttribute> 和[ASP.NET 主题和外观](https://docs.microsoft.com/previous-versions/aspnet/ykzx33wh(v=vs.100))。



## Examples
 下面的代码示例演示如何使用 <xref:System.Web.UI.WebControls.Button.CausesValidation%2A> 属性阻止页验证发生。 请注意，<xref:System.Web.UI.WebControls.BaseValidator.Validate%2A> 方法独立激活每个验证控件。

> [!IMPORTANT]
>  此示例具有一个接受用户输入的文本框，这是一个潜在的安全威胁。 默认情况下，ASP.NET 网页验证用户输入是否不包含脚本或 HTML 元素。 有关详细信息，请参阅[脚本侵入概述](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100))。

 [!code-aspx-csharp[ButtonControlCausesValidation#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonControlCausesValidation/CS/buttoncausesvalidationcs.aspx#1)]
 [!code-aspx-vb[ButtonControlCausesValidation#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonControlCausesValidation/VB/buttoncausesvalidationvb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Page.Validate" />
        <altmember cref="P:System.Web.UI.WebControls.Button.ValidationGroup" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/t41dh257(v=vs.100)">按钮 Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="Click">
      <MemberSignature Language="C#" Value="public event EventHandler Click;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Click" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.Button.Click" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Click As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Click;" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="F#" Value="member this.Click : EventHandler " Usage="member this.Click : System.EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event EventHandler ^ Click;" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Web.UI.WebControls.IButtonControl.Click</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>在单击 <see cref="T:System.Web.UI.WebControls.Button" /> 控件时发生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 当单击 <xref:System.Web.UI.WebControls.Button> 控件时，将引发 <xref:System.Web.UI.WebControls.Button.Click> 事件。 当没有与 <xref:System.Web.UI.WebControls.Button> 控件关联的命令名（例如，使用 "提交" 按钮）时，通常会使用此事件。

 有关处理事件的详细信息，请参阅[处理和引发事件](/dotnet/standard/events/)。



## Examples
 下面的代码示例演示如何指定和编写 <xref:System.Web.UI.WebControls.Button.Click> 事件的事件处理程序，以便在单击 <xref:System.Web.UI.WebControls.Button> 控件时在网页上显示一条消息。

 [!code-aspx-csharp[ButtonClickText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonClickText/cs/ButtonClickCS.aspx#1)]
 [!code-aspx-vb[ButtonClickText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonClickText/vb/ButtonClickVB.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.Button.OnClick(System.EventArgs)" />
        <altmember cref="T:System.Web.UI.WebControls.CommandEventHandler" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/t41dh257(v=vs.100)">按钮 Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="Command">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.CommandEventHandler Command;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.CommandEventHandler Command" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.Button.Command" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Command As CommandEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::CommandEventHandler ^ Command;" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="F#" Value="member this.Command : System.Web.UI.WebControls.CommandEventHandler " Usage="member this.Command : System.Web.UI.WebControls.CommandEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Web::UI::WebControls::CommandEventHandler ^ Command;" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Web.UI.WebControls.IButtonControl.Command</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.CommandEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>在单击 <see cref="T:System.Web.UI.WebControls.Button" /> 控件时发生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 当单击 <xref:System.Web.UI.WebControls.Button> 控件时，将引发 <xref:System.Web.UI.WebControls.Button.Command> 事件。 当命令名称（如 `Sort`）与 <xref:System.Web.UI.WebControls.Button> 控件相关联时，通常使用此事件。 这样，便可以在网页上创建多个 <xref:System.Web.UI.WebControls.Button> 控件，并以编程方式确定单击的 <xref:System.Web.UI.WebControls.Button> 控件。

> [!NOTE]
>  <xref:System.Web.UI.WebControls.Button.Command> 事件通过控件层次结构以 `BubbleEvent`的形式引发。

 有关如何处理事件的详细信息，请参阅[处理和引发事件](/dotnet/standard/events/)。



## Examples
 下面的代码示例演示如何指定和编写 <xref:System.Web.UI.WebControls.Button.Command> 事件的事件处理程序，以便在单击 <xref:System.Web.UI.WebControls.Button> 控件时对列表进行排序。 此示例使用 <xref:System.Web.UI.WebControls.Button> 控件的 <xref:System.Web.UI.WebControls.Button.OnClick%2A> 属性以声明方式指定事件处理程序。

 [!code-aspx-csharp[ButtonCommandNameArgument#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonCommandNameArgument/CS/buttoncommandnamecs.aspx#1)]
 [!code-aspx-vb[ButtonCommandNameArgument#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonCommandNameArgument/VB/buttoncommandnamevb.aspx#1)]

 下面的代码示例演示如何指定事件处理程序，并以编程方式将其添加到 `Page_Load` 方法中的事件。

 [!code-aspx-csharp[ButtonCommand#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonCommand/CS/buttoncommandcs.aspx#1)]
 [!code-aspx-vb[ButtonCommand#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonCommand/VB/buttoncommandvb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.Button.OnCommand(System.Web.UI.WebControls.CommandEventArgs)" />
        <altmember cref="T:System.Web.UI.WebControls.CommandEventHandler" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/t41dh257(v=vs.100)">按钮 Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="CommandArgument">
      <MemberSignature Language="C#" Value="public string CommandArgument { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CommandArgument" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Button.CommandArgument" />
      <MemberSignature Language="VB.NET" Value="Public Property CommandArgument As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CommandArgument { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CommandArgument : string with get, set" Usage="System.Web.UI.WebControls.Button.CommandArgument" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IButtonControl.CommandArgument</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置可选参数，该参数与关联的 <see cref="E:System.Web.UI.WebControls.Button.Command" /> 一起被传递到 <see cref="P:System.Web.UI.WebControls.Button.CommandName" /> 事件。</summary>
        <value>与关联的 <see cref="E:System.Web.UI.WebControls.Button.Command" /> 一起被传递到 <see cref="P:System.Web.UI.WebControls.Button.CommandName" /> 事件的可选参数。 默认值是 <see cref="F:System.String.Empty" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 使用 <xref:System.Web.UI.WebControls.Button.CommandArgument%2A> 属性指定补充 <xref:System.Web.UI.WebControls.Button.CommandName%2A> 属性的参数。

> [!NOTE]
>  虽然你可以自行设置 <xref:System.Web.UI.WebControls.Button.CommandArgument%2A> 属性，但通常仅在同时设置了 <xref:System.Web.UI.WebControls.Button.CommandName%2A> 属性时使用。

 通过允许提供有关要执行的命令的附加信息，<xref:System.Web.UI.WebControls.Button.CommandArgument%2A> 属性可对 <xref:System.Web.UI.WebControls.Button.CommandName%2A> 属性进行补充。 例如，如果将 <xref:System.Web.UI.WebControls.Button.CommandName%2A> 属性设置为 `Sort` 并将 <xref:System.Web.UI.WebControls.Button.CommandArgument%2A> 属性设置为 `Ascending`，则可以指定要按升序排序的命令。

 无法通过主题或样式表主题设置此属性。 有关详细信息，请参阅 <xref:System.Web.UI.ThemeableAttribute> 和[ASP.NET 主题和外观](https://docs.microsoft.com/previous-versions/aspnet/ykzx33wh(v=vs.100))。



## Examples
 下面的代码示例演示如何使用 <xref:System.Web.UI.WebControls.Button.CommandArgument%2A> 属性创建一个按升序对列表进行排序的 <xref:System.Web.UI.WebControls.Button> 控件。

 [!code-aspx-csharp[ButtonCommandNameArgument#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonCommandNameArgument/CS/buttoncommandnamecs.aspx#1)]
 [!code-aspx-vb[ButtonCommandNameArgument#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonCommandNameArgument/VB/buttoncommandnamevb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.Button.Command" />
        <altmember cref="M:System.Web.UI.WebControls.Button.OnCommand(System.Web.UI.WebControls.CommandEventArgs)" />
        <altmember cref="P:System.Web.UI.WebControls.Button.CommandName" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/t41dh257(v=vs.100)">按钮 Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="CommandName">
      <MemberSignature Language="C#" Value="public string CommandName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CommandName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Button.CommandName" />
      <MemberSignature Language="VB.NET" Value="Public Property CommandName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CommandName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CommandName : string with get, set" Usage="System.Web.UI.WebControls.Button.CommandName" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IButtonControl.CommandName</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置命令名，该命令名与传递给 <see cref="T:System.Web.UI.WebControls.Button" /> 事件的 <see cref="E:System.Web.UI.WebControls.Button.Command" /> 控件相关联。</summary>
        <value><see cref="T:System.Web.UI.WebControls.Button" /> 控件的命令名。 默认值是 <see cref="F:System.String.Empty" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 如果网页上有多个 <xref:System.Web.UI.WebControls.Button> 控件，请使用 <xref:System.Web.UI.WebControls.Button.CommandName%2A> 属性来指定或确定与每个 <xref:System.Web.UI.WebControls.Button> 控件关联的命令名。 可以将 <xref:System.Web.UI.WebControls.Button.CommandName%2A> 属性设置为任何标识要执行的命令的字符串。 然后，你可以通过编程方式确定 <xref:System.Web.UI.WebControls.Button> 控件的命令名称并执行适当的操作。

 可以通过使用 <xref:System.Web.UI.WebControls.Button.CommandArgument%2A> 属性指定有关命令的其他信息，如 `Ascending`。

 无法通过主题或样式表主题设置此属性。 有关详细信息，请参阅 <xref:System.Web.UI.ThemeableAttribute> 和[ASP.NET 主题和外观](https://docs.microsoft.com/previous-versions/aspnet/ykzx33wh(v=vs.100))。



## Examples
 下面的代码示例演示如何使用 <xref:System.Web.UI.WebControls.Button.CommandName%2A> 属性创建对列表进行排序的 <xref:System.Web.UI.WebControls.Button> 控件。

 [!code-aspx-csharp[ButtonCommandNameArgument#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonCommandNameArgument/CS/buttoncommandnamecs.aspx#1)]
 [!code-aspx-vb[ButtonCommandNameArgument#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonCommandNameArgument/VB/buttoncommandnamevb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.Button.Command" />
        <altmember cref="M:System.Web.UI.WebControls.Button.OnCommand(System.Web.UI.WebControls.CommandEventArgs)" />
        <altmember cref="P:System.Web.UI.WebControls.Button.CommandArgument" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/t41dh257(v=vs.100)">按钮 Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="GetPostBackOptions">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.PostBackOptions GetPostBackOptions ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.UI.PostBackOptions GetPostBackOptions() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Button.GetPostBackOptions" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetPostBackOptions () As PostBackOptions" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Web::UI::PostBackOptions ^ GetPostBackOptions();" />
      <MemberSignature Language="F#" Value="abstract member GetPostBackOptions : unit -&gt; System.Web.UI.PostBackOptions&#xA;override this.GetPostBackOptions : unit -&gt; System.Web.UI.PostBackOptions" Usage="button.GetPostBackOptions " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.PostBackOptions</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>创建表示 <see cref="T:System.Web.UI.PostBackOptions" /> 控件的回发行为的 <see cref="T:System.Web.UI.WebControls.Button" /> 对象。</summary>
        <returns>一个表示 <see cref="T:System.Web.UI.PostBackOptions" /> 控件的回发行为的 <see cref="T:System.Web.UI.WebControls.Button" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.Button.GetPostBackOptions%2A> 方法创建一个表示 <xref:System.Web.UI.WebControls.Button> 控件的回发行为的 <xref:System.Web.UI.PostBackOptions> 对象。 然后，<xref:System.Web.UI.PostBackOptions> 对象通常会传递到 <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%28System.Web.UI.PostBackOptions%29?displayProperty=nameWithType> 方法，该方法用于获取对客户端脚本函数的引用，在调用该函数时，会导致服务器回发到页面。

 此方法主要由控件开发人员在扩展 <xref:System.Web.UI.WebControls.Button> 类时使用。

 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>可以在派生类中重写 <see cref="M:System.Web.UI.WebControls.Button.GetPostBackOptions" /> 方法，以修改按钮控件的回发选项，或在单击按钮时调用客户端脚本。 请确保调用基类的 <see cref="M:System.Web.UI.WebControls.Button.GetPostBackOptions" /> 方法，以便设置标准回发选项。</para></block>
        <altmember cref="T:System.Web.UI.PostBackOptions" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/t41dh257(v=vs.100)">按钮 Web 服务器控件</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/3hc29e2a(v=vs.100)">ASP.NET 网页中的客户端脚本</related>
      </Docs>
    </Member>
    <Member MemberName="OnClick">
      <MemberSignature Language="C#" Value="protected virtual void OnClick (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnClick(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Button.OnClick(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnClick (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnClick(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnClick : EventArgs -&gt; unit&#xA;override this.OnClick : EventArgs -&gt; unit" Usage="button.OnClick e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">事件数据。</param>
        <summary>引发 <see cref="T:System.Web.UI.WebControls.Button" /> 控件的 <see cref="E:System.Web.UI.WebControls.Button.Click" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 当单击 <xref:System.Web.UI.WebControls.Button> 控件时，将引发 <xref:System.Web.UI.WebControls.Button.Click> 事件。 当没有与 <xref:System.Web.UI.WebControls.Button> 控件关联的命令名（例如，使用 "提交" 按钮）时，通常会使用此事件。

 引发事件时，将通过委托调用事件处理程序。 有关详细信息，请参阅[处理和引发事件](/dotnet/standard/events/)。

 <xref:System.Web.UI.WebControls.Button.OnClick%2A> 方法还允许派生类对事件进行处理而不必附加委托。 这是在派生类中处理事件的首选技术。



## Examples
 下面的代码示例演示如何为 <xref:System.Web.UI.WebControls.Button.Click> 事件指定和编写事件处理程序，以便在网页上显示简单消息。

 [!code-aspx-csharp[ButtonClickText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonClickText/cs/ButtonClickCS.aspx#1)]
 [!code-aspx-vb[ButtonClickText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonClickText/vb/ButtonClickVB.aspx#1)]

 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>在派生类中重写 <see cref="M:System.Web.UI.WebControls.Button.OnClick(System.EventArgs)" /> 时，一定要调用基类的 <see cref="M:System.Web.UI.WebControls.Button.OnClick(System.EventArgs)" /> 方法，以便已注册的委托对事件进行接收。</para></block>
        <altmember cref="E:System.Web.UI.WebControls.Button.Click" />
        <altmember cref="T:System.EventArgs" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/t41dh257(v=vs.100)">按钮 Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="OnClientClick">
      <MemberSignature Language="C#" Value="public virtual string OnClientClick { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OnClientClick" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Button.OnClientClick" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property OnClientClick As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ OnClientClick { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.OnClientClick : string with get, set" Usage="System.Web.UI.WebControls.Button.OnClientClick" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置在引发某个 <see cref="T:System.Web.UI.WebControls.Button" /> 控件的 <see cref="E:System.Web.UI.WebControls.Button.Click" /> 事件时所执行的客户端脚本。</summary>
        <value>在引发某个 <see cref="T:System.Web.UI.WebControls.Button" /> 控件的 <see cref="E:System.Web.UI.WebControls.Button.Click" /> 事件时所执行的客户端脚本。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 使用 <xref:System.Web.UI.WebControls.Button.OnClientClick%2A> 属性指定在引发 <xref:System.Web.UI.WebControls.Button> 控件的 <xref:System.Web.UI.WebControls.Button.Click> 事件时执行的其他客户端脚本。 为此属性指定的脚本将呈现在 <xref:System.Web.UI.WebControls.Button> 控件的 `OnClick` 属性中，以及控件的预定义客户端脚本。

 无法通过主题或样式表主题设置此属性。 有关详细信息，请参阅 <xref:System.Web.UI.ThemeableAttribute> 和[ASP.NET 主题和外观](https://docs.microsoft.com/previous-versions/aspnet/ykzx33wh(v=vs.100))。



## Examples
 本主题提供了包含源代码的 Visual Studio 网站项目：[下载](https://go.microsoft.com/fwlink/?LinkId=192871)。

 下面的代码示例演示如何使用 <xref:System.Web.UI.WebControls.Button.OnClientClick%2A> 属性指定在单击 <xref:System.Web.UI.WebControls.Button> 控件时执行的其他客户端脚本。

 [!code-aspx-csharp[Button.OnClientClick#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Button.OnClientClick/cs/button.onclientclickcs.aspx#1)]
 [!code-aspx-vb[Button.OnClientClick#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Button.OnClientClick/vb/button.onclientclickvb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.Button.Click" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/t41dh257(v=vs.100)">按钮 Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="OnCommand">
      <MemberSignature Language="C#" Value="protected virtual void OnCommand (System.Web.UI.WebControls.CommandEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCommand(class System.Web.UI.WebControls.CommandEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Button.OnCommand(System.Web.UI.WebControls.CommandEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCommand (e As CommandEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCommand(System::Web::UI::WebControls::CommandEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnCommand : System.Web.UI.WebControls.CommandEventArgs -&gt; unit&#xA;override this.OnCommand : System.Web.UI.WebControls.CommandEventArgs -&gt; unit" Usage="button.OnCommand e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.CommandEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">事件数据。</param>
        <summary>引发 <see cref="T:System.Web.UI.WebControls.Button" /> 控件的 <see cref="E:System.Web.UI.WebControls.Button.Command" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 当单击 <xref:System.Web.UI.WebControls.Button> 控件时，将引发 <xref:System.Web.UI.WebControls.Button.Command> 事件。 当命令名称（如 `Sort`）与 <xref:System.Web.UI.WebControls.Button> 控件相关联时，通常使用此事件。 这样，便可以在网页上创建多个 <xref:System.Web.UI.WebControls.Button> 控件，并以编程方式确定单击的 <xref:System.Web.UI.WebControls.Button> 控件。

> [!NOTE]
>  <xref:System.Web.UI.WebControls.Button.Command> 事件通过控件层次结构以 `BubbleEvent`的形式引发。

 引发事件时，将通过委托调用事件处理程序。 有关详细信息，请参阅[处理和引发事件](/dotnet/standard/events/)。

 <xref:System.Web.UI.WebControls.Button.OnCommand%2A> 方法还允许派生类对事件进行处理而不必附加委托。 这是在派生类中处理事件的首选技术。



## Examples
 下面的代码示例演示如何指定和编写 <xref:System.Web.UI.WebControls.Button.Command> 事件的事件处理程序，以便在单击 <xref:System.Web.UI.WebControls.Button> 控件时对列表进行排序。 此示例使用 <xref:System.Web.UI.WebControls.Button> 控件的 <xref:System.Web.UI.WebControls.Button.OnClick%2A> 属性以声明方式指定事件处理程序。

 [!code-aspx-csharp[ButtonCommandNameArgument#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonCommandNameArgument/CS/buttoncommandnamecs.aspx#1)]
 [!code-aspx-vb[ButtonCommandNameArgument#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonCommandNameArgument/VB/buttoncommandnamevb.aspx#1)]

 下面的代码示例演示如何指定事件处理程序，并以编程方式将其添加到 `Page_Load` 方法中的事件。

 [!code-aspx-csharp[ButtonCommand#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonCommand/CS/buttoncommandcs.aspx#1)]
 [!code-aspx-vb[ButtonCommand#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonCommand/VB/buttoncommandvb.aspx#1)]

 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>在派生类中重写 <see cref="M:System.Web.UI.WebControls.Button.OnCommand(System.Web.UI.WebControls.CommandEventArgs)" /> 时，一定要调用基类的 <see cref="M:System.Web.UI.WebControls.Button.OnCommand(System.Web.UI.WebControls.CommandEventArgs)" /> 方法，以便已注册的委托对事件进行接收。</para></block>
        <altmember cref="E:System.Web.UI.WebControls.Button.Command" />
        <altmember cref="T:System.Web.UI.WebControls.CommandEventArgs" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/t41dh257(v=vs.100)">按钮 Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="OnPreRender">
      <MemberSignature Language="C#" Value="protected internal override void OnPreRender (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnPreRender(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Button.OnPreRender(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnPreRender (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnPreRender(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnPreRender : EventArgs -&gt; unit" Usage="button.OnPreRender e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e">事件数据。</param>
        <summary>确定按钮在客户端上呈现之前是否已被单击。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 当从 <xref:System.Web.UI.WebControls.Button> 控件派生自定义类时，<xref:System.Web.UI.WebControls.Button.OnPreRender%2A> 方法主要由控件开发人员使用。

 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/t41dh257(v=vs.100)">按钮 Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="PostBackUrl">
      <MemberSignature Language="C#" Value="public virtual string PostBackUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PostBackUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Button.PostBackUrl" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property PostBackUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ PostBackUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PostBackUrl : string with get, set" Usage="System.Web.UI.WebControls.Button.PostBackUrl" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IButtonControl.PostBackUrl</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.UrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.UI.UrlProperty("*.aspx")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.UrlEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置单击 <see cref="T:System.Web.UI.WebControls.Button" /> 控件时从当前页发送到的网页的 URL。</summary>
        <value>单击 <see cref="T:System.Web.UI.WebControls.Button" /> 控件时从当前页发送到的网页的 URL。 默认值为空字符串 ("")，表示将页回发到自身。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.Button.PostBackUrl%2A> 属性允许您使用 <xref:System.Web.UI.WebControls.Button> 控件执行跨页面发布。

> [!NOTE]
>  只有正确指定的路径才能使用此属性。 例如，相对路径（`Test/default.aspx`）、绝对路径（`https://localhost/WebApp/default.aspx`）和虚拟（`~\Test\default.aspx`）都能正常工作。 格式不正确的路径（例如 "/Test/default.aspx" 或 "\Test\default.aspx"）不起作用。 有关创建正确路径的讨论，请参阅[ASP.NET Web 项目路径](https://docs.microsoft.com/previous-versions/aspnet/ms178116(v=vs.100))。

 当单击 <xref:System.Web.UI.WebControls.Button> 控件时，将 <xref:System.Web.UI.WebControls.Button.PostBackUrl%2A> 属性设置为要发布到的网页的 URL。 例如，指定 `Page2.aspx` 会导致包含 <xref:System.Web.UI.WebControls.Button> 控件的页面发布到 `Page2.aspx`。 如果没有为 <xref:System.Web.UI.WebControls.Button.PostBackUrl%2A> 属性指定值，则页面回发到自身。

> [!IMPORTANT]
>  使用带有服务器端验证的控件执行跨页面回发时，在处理回发之前，应检查是否 `true` 该页的 <xref:System.Web.UI.Page.IsValid%2A> 属性。 对于跨页面回发，要检查的页面是 <xref:System.Web.UI.Page.PreviousPage%2A>。 以下 VB 代码演示了如何执行此操作：

```
Sub Page_Load(ByVal sender As Object, ByVal e As System.EventArgs) Handles Me.Load
        If Page.PreviousPage.IsValid Then
            ' Handle the post back
        Else
            Response.Write("Invalid")
        End If
End Sub
```

 有关跨页面发布技术的详细信息，请参阅[ASP.NET Web Forms 中的跨页面发布](https://docs.microsoft.com/previous-versions/aspnet/ms178139(v=vs.100))。

 无法通过主题或样式表主题设置此属性。 有关详细信息，请参阅 <xref:System.Web.UI.ThemeableAttribute> 和[ASP.NET 主题和外观](https://docs.microsoft.com/previous-versions/aspnet/ykzx33wh(v=vs.100))。



## Examples
 下面的代码示例演示如何使用 <xref:System.Web.UI.WebControls.Button.PostBackUrl%2A> 属性来执行跨页面的 post。 当用户单击 <xref:System.Web.UI.WebControls.Button> 控件时，此页将在文本框中输入的值发送到 <xref:System.Web.UI.WebControls.Button.PostBackUrl%2A> 属性指定的目标页。 若要运行此示例，还必须在与此代码示例相同的目录中为目标页创建一个文件。 目标页的代码在下一个示例中提供。

 [!code-aspx-csharp[Button.PostBackUrlProperty#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Button.PostBackUrlProperty/CS/button.postbackurlpropertycs.aspx#1)]
 [!code-aspx-vb[Button.PostBackUrlProperty#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Button.PostBackUrlProperty/VB/button.postbackurlpropertyvb.aspx#1)]

 下面的代码示例演示如何使用 <xref:System.Web.UI.Page.PreviousPage%2A?displayProperty=nameWithType> 属性访问使用 <xref:System.Web.UI.WebControls.Button.PostBackUrl%2A> 属性从另一页发送的值。 此页获取从上一页发送的字符串，并将其显示给用户。 如果尝试直接运行此代码示例，将会出现错误，因为 "`text`" 字段的值将 `null`。 相反，请使用此代码创建一个目标页，并将该文件放在与上一个示例的代码相同的目录中。 该文件的名称必须与上一示例中为 <xref:System.Web.UI.WebControls.Button.PostBackUrl%2A> 属性指定的值相对应。 运行上一示例中的代码时，此页将在出现跨页面 post 时自动执行。

> [!IMPORTANT]
>  此示例具有一个接受用户输入的文本框，这是一个潜在的安全威胁。 默认情况下，ASP.NET 网页验证用户输入是否不包含脚本或 HTML 元素。 有关详细信息，请参阅[脚本侵入概述](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100))。

 [!code-aspx-csharp[Button.PostBackUrlPage2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Button.PostBackUrlPage2/CS/button.postbackurlpage2cs.aspx#1)]
 [!code-aspx-vb[Button.PostBackUrlPage2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Button.PostBackUrlPage2/VB/button.postbackurlpage2vb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Page.PreviousPage" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms178139(v=vs.100)">ASP.NET 网页中的跨页面发送</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/t41dh257(v=vs.100)">按钮 Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="RaisePostBackEvent">
      <MemberSignature Language="C#" Value="protected virtual void RaisePostBackEvent (string eventArgument);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void RaisePostBackEvent(string eventArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Button.RaisePostBackEvent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub RaisePostBackEvent (eventArgument As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void RaisePostBackEvent(System::String ^ eventArgument);" />
      <MemberSignature Language="F#" Value="abstract member RaisePostBackEvent : string -&gt; unit&#xA;override this.RaisePostBackEvent : string -&gt; unit" Usage="button.RaisePostBackEvent eventArgument" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgument" Type="System.String" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="eventArgument">该事件的参数。</param>
        <summary>当 <see cref="T:System.Web.UI.WebControls.Button" /> 控件回发到服务器时引发此控件的事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 当单击该事件时，此事件由 <xref:System.Web.UI.WebControls.Button> 控件在内部使用，以引发 <xref:System.Web.UI.WebControls.Button.Click> 事件，并在定义 <xref:System.Web.UI.WebControls.Button.Command> 事件时引发。

 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.Button.Click" />
        <altmember cref="E:System.Web.UI.WebControls.Button.Command" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/t41dh257(v=vs.100)">按钮 Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="RenderContents">
      <MemberSignature Language="C#" Value="protected override void RenderContents (System.Web.UI.HtmlTextWriter writer);" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void RenderContents(class System.Web.UI.HtmlTextWriter writer) cil managed" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Button.RenderContents(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub RenderContents (writer As HtmlTextWriter)" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void RenderContents(System::Web::UI::HtmlTextWriter ^ writer);" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="F#" Value="override this.RenderContents : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="button.RenderContents writer" />
      <MemberSignature Language="C#" Value="protected internal override void RenderContents (System.Web.UI.HtmlTextWriter writer);" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void RenderContents(class System.Web.UI.HtmlTextWriter writer) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub RenderContents (writer As HtmlTextWriter)" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void RenderContents(System::Web::UI::HtmlTextWriter ^ writer);" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer"><see cref="T:System.Web.UI.HtmlTextWriter" /> 对象，表示要在客户端呈现 HTML 内容的输出流。</param>
        <summary>将控件的内容呈现到指定的编写器中。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Examples
 下面的代码示例演示如何重写自定义服务器控件中的 <xref:System.Web.UI.WebControls.Button.RenderContents%2A> 方法，以便它始终在自定义 <xref:System.Web.UI.WebControls.Button> 服务器控件后显示文本。

 [!code-aspx-csharp[CustomButtonRenderContents#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomButtonRenderContents/CS/custombuttonrendercontentscs.aspx#1)]
 [!code-aspx-vb[CustomButtonRenderContents#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomButtonRenderContents/VB/custombuttonrendercontentsvb.aspx#1)]
[!code-csharp[CustomButtonRenderContents#2](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomButtonRenderContents/CS/custombuttonrendercontents.cs#2)]
[!code-vb[CustomButtonRenderContents#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomButtonRenderContents/VB/custombuttonrendercontents.vb#2)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.HtmlTextWriter" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/t41dh257(v=vs.100)">按钮 Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IPostBackEventHandler.RaisePostBackEvent">
      <MemberSignature Language="C#" Value="void IPostBackEventHandler.RaisePostBackEvent (string eventArgument);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(string eventArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Button.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Sub RaisePostBackEvent (eventArgument As String) Implements IPostBackEventHandler.RaisePostBackEvent" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System::String ^ eventArgument) = System::Web::UI::IPostBackEventHandler::RaisePostBackEvent;" />
      <MemberSignature Language="F#" Value="abstract member System.Web.UI.IPostBackEventHandler.RaisePostBackEvent : string -&gt; unit&#xA;override this.System.Web.UI.IPostBackEventHandler.RaisePostBackEvent : string -&gt; unit" Usage="button.System.Web.UI.IPostBackEventHandler.RaisePostBackEvent eventArgument" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventArgument">该事件的参数。</param>
        <summary>当 <see cref="T:System.Web.UI.WebControls.Button" /> 控件回发到服务器时引发此控件的事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 当单击该事件时，此事件由 <xref:System.Web.UI.WebControls.Button> 控件在内部使用，以引发 <xref:System.Web.UI.WebControls.Button.Click> 事件，并在定义 <xref:System.Web.UI.WebControls.Button.Command> 事件时引发。



## Examples
 下面的代码示例演示如何重写 <xref:System.Web.UI.WebControls.Button.System%23Web%23UI%23IPostBackEventHandler%23RaisePostBackEvent%2A> 方法，以便它始终在自定义 <xref:System.Web.UI.WebControls.Button> 控件中引发 <xref:System.Web.UI.WebControls.Button.OnClick%2A> 事件。

 [!code-csharp[CustomButtonRaisePostBackEvent#2](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomButtonRaisePostBackEvent/CS/custombuttonraisepostbackevent.cs#2)]
 [!code-vb[CustomButtonRaisePostBackEvent#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomButtonRaisePostBackEvent/VB/custombuttonraisepostbackevent.vb#2)]

 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.Button.Click" />
        <altmember cref="E:System.Web.UI.WebControls.Button.Command" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/t41dh257(v=vs.100)">按钮 Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public string Text { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Button.Text" />
      <MemberSignature Language="VB.NET" Value="Public Property Text As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Text { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Text : string with get, set" Usage="System.Web.UI.WebControls.Button.Text" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IButtonControl.Text</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置在 <see cref="T:System.Web.UI.WebControls.Button" /> 控件中显示的文本标题。</summary>
        <value>在 <see cref="T:System.Web.UI.WebControls.Button" /> 控件中显示的文本标题。 默认值是 <see cref="F:System.String.Empty" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 使用 <xref:System.Web.UI.WebControls.Button.Text%2A> 属性指定或确定要在 <xref:System.Web.UI.WebControls.Button> 控件中显示的标题。

 设置此属性后，可以使用设计器工具自动将此属性的值保存到资源文件中。 有关详细信息，请参阅 <xref:System.ComponentModel.LocalizableAttribute> 和[全球化和本地化](https://docs.microsoft.com/previous-versions/aspnet/c6zyy3s9(v=vs.100))。



## Examples
 下面的代码示例演示如何使用 <xref:System.Web.UI.WebControls.Button.Text%2A> 属性指定在 <xref:System.Web.UI.WebControls.Button> 控件中显示的标题。

 [!code-aspx-csharp[ButtonClickText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonClickText/cs/ButtonClickCS.aspx#1)]
 [!code-aspx-vb[ButtonClickText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonClickText/vb/ButtonClickVB.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="F:System.String.Empty" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/t41dh257(v=vs.100)">按钮 Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="UseSubmitBehavior">
      <MemberSignature Language="C#" Value="public virtual bool UseSubmitBehavior { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseSubmitBehavior" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Button.UseSubmitBehavior" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property UseSubmitBehavior As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool UseSubmitBehavior { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseSubmitBehavior : bool with get, set" Usage="System.Web.UI.WebControls.Button.UseSubmitBehavior" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个布尔值，该值指示 <see cref="T:System.Web.UI.WebControls.Button" /> 控件使用客户端浏览器的提交机制还是 ASP.NET 回发机制。</summary>
        <value>如果该控件使用了客户端浏览器的提交机制，则为 <see langword="true" />；否则为 <see langword="false" />。 默认为 <see langword="true" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 使用 <xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A> 属性来指定 <xref:System.Web.UI.WebControls.Button> 控件是使用客户端浏览器的提交机制还是 ASP.NET 回发机制。 默认情况下，此属性的值为 `true`，导致 <xref:System.Web.UI.WebControls.Button> 控件使用浏览器的提交机制。 如果指定 `false`，ASP.NET 页框架会将客户端脚本添加到页面，以将窗体发布到服务器。

 当 `false`<xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A> 属性时，控件开发人员可以使用 <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> 方法返回 <xref:System.Web.UI.WebControls.Button>的客户端回发事件。 <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> 方法返回的字符串包含客户端函数调用的文本，并且可以插入到客户端事件处理程序中。

 无法通过主题或样式表主题设置此属性。 有关详细信息，请参阅 <xref:System.Web.UI.ThemeableAttribute> 和[ASP.NET 主题和外观](https://docs.microsoft.com/previous-versions/aspnet/ykzx33wh(v=vs.100))。



## Examples
 下面的代码示例演示如何使用 <xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A> 属性指定 <xref:System.Web.UI.WebControls.Button> 控件回发到服务器时所使用的提交机制。 <xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A> 属性设置为 `false`，导致按钮使用 ASP.NET 回发机制。 如果你使用浏览器的 "查看源" 命令查看呈现的页面的源代码，你将看到 ASP.NET 页框架添加了客户端脚本，以便将窗体发布到服务器。

 [!code-aspx-csharp[Button.UseSubmitBehavior#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Button.UseSubmitBehavior/CS/button.usesubmitbehaviorcs.aspx#1)]
 [!code-aspx-vb[Button.UseSubmitBehavior#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Button.UseSubmitBehavior/VB/button.usesubmitbehaviorvb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Web.UI.ClientScriptManager.GetPostBackEventReference" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/t41dh257(v=vs.100)">按钮 Web 服务器控件</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/3hc29e2a(v=vs.100)">ASP.NET 网页中的客户端脚本</related>
      </Docs>
    </Member>
    <Member MemberName="ValidationGroup">
      <MemberSignature Language="C#" Value="public virtual string ValidationGroup { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ValidationGroup" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Button.ValidationGroup" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ValidationGroup As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ValidationGroup { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ValidationGroup : string with get, set" Usage="System.Web.UI.WebControls.Button.ValidationGroup" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IButtonControl.ValidationGroup</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置在 <see cref="T:System.Web.UI.WebControls.Button" /> 控件回发到服务器时导致验证的控件组。</summary>
        <value>在 <see cref="T:System.Web.UI.WebControls.Button" /> 控件回发到服务器时导致验证的控件组。 默认值为空字符串 ("")。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 使用验证组可以将页上的验证控件分配给特定类别。 每个验证组都可以独立于页面上的其他验证组进行验证。 使用 <xref:System.Web.UI.WebControls.Button.ValidationGroup%2A> 属性可指定 <xref:System.Web.UI.WebControls.Button> 控件回发到服务器时所导致验证的验证组的名称。

 仅当 <xref:System.Web.UI.WebControls.Button.CausesValidation%2A> 属性的值设置为 `true`时，此属性才有效。 如果为 <xref:System.Web.UI.WebControls.Button.ValidationGroup%2A> 属性指定值，则当 <xref:System.Web.UI.WebControls.Button> 控件回发到服务器时，只会验证属于指定组的验证控件。 如果未指定此属性的值，并且 <xref:System.Web.UI.WebControls.Button.CausesValidation%2A> 属性设置为 `true`，则当控件回发到服务器时，将验证该页上未分配给验证组的所有验证控件。

 无法通过主题或样式表主题设置此属性。 有关详细信息，请参阅 <xref:System.Web.UI.ThemeableAttribute> 和[ASP.NET 主题和外观](https://docs.microsoft.com/previous-versions/aspnet/ykzx33wh(v=vs.100))。



## Examples
 下面的代码示例演示如何使用 <xref:System.Web.UI.WebControls.Button.ValidationGroup%2A> 属性指定 <xref:System.Web.UI.WebControls.Button> 控件回发到服务器时要验证的控件。 此页包含三个文本框，用于捕获用户的数据和三个 <xref:System.Web.UI.WebControls.RequiredFieldValidator> 控件，以确保用户不会将文本框留空。 前两个文本框的 <xref:System.Web.UI.WebControls.RequiredFieldValidator> 控件位于 `PersonalInfoGroup` 验证组中，第三个文本框的 <xref:System.Web.UI.WebControls.RequiredFieldValidator> 控件位于 `LocationInfoGroup` 验证组中。 单击 `Button1` 时，只会验证验证组 `PersonalInfoGroup` 中的控件。 单击 `Button2` 后，只验证验证组 `LocationInfoGroup` 中的控件。

> [!IMPORTANT]
>  此示例具有一个接受用户输入的文本框，这是一个潜在的安全威胁。 默认情况下，ASP.NET 网页验证用户输入是否不包含脚本或 HTML 元素。 有关详细信息，请参阅[脚本侵入概述](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100))。

 [!code-aspx-csharp[Button.ValidationGroup#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Button.ValidationGroup/CS/button.validationgroupcs.aspx#1)]
 [!code-aspx-vb[Button.ValidationGroup#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Button.ValidationGroup/VB/button.validationgroupvb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Button.CausesValidation" />
        <altmember cref="T:System.Web.UI.WebControls.RequiredFieldValidator" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/t41dh257(v=vs.100)">按钮 Web 服务器控件</related>
      </Docs>
    </Member>
  </Members>
</Type>
