<Type Name="GridViewCommandEventArgs" FullName="System.Web.UI.WebControls.GridViewCommandEventArgs">
  <Metadata><Meta Name="ms.openlocfilehash" Value="681f8cf6d38de67de5c46c2f997e6ec2b187a062" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89679617" /></Metadata><TypeSignature Language="C#" Value="public class GridViewCommandEventArgs : System.Web.UI.WebControls.CommandEventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit GridViewCommandEventArgs extends System.Web.UI.WebControls.CommandEventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.GridViewCommandEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class GridViewCommandEventArgs&#xA;Inherits CommandEventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class GridViewCommandEventArgs : System::Web::UI::WebControls::CommandEventArgs" />
  <TypeSignature Language="F#" Value="type GridViewCommandEventArgs = class&#xA;    inherit CommandEventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.CommandEventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>为 <see cref="E:System.Web.UI.WebControls.GridView.RowCommand" /> 事件提供数据。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.GridView.RowCommand>单击控件中的按钮时，将引发事件 <xref:System.Web.UI.WebControls.GridView> 。 这使你可以提供一种事件处理方法，该方法可在每次发生此事件时执行自定义例程。  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.GridView>当单击某些按钮时，该控件还会引发其他专用事件 (`CommandName` 属性设置为 "Delete"、"Update" 和 "Page" 的按钮，例如) 。 使用其中一个按钮时，应考虑处理控件提供的专用事件之一 (例如 <xref:System.Web.UI.WebControls.GridView.RowDeleted> 或 <xref:System.Web.UI.WebControls.GridView.RowDeleting>) 。  
  
 <xref:System.Web.UI.WebControls.GridViewCommandEventArgs>对象传递给事件处理方法，该方法允许您确定所单击按钮的命令名和命令参数。 若要确定命令名称和命令参数，请 <xref:System.Web.UI.WebControls.CommandEventArgs.CommandName%2A> 分别使用和 <xref:System.Web.UI.WebControls.CommandEventArgs.CommandArgument%2A> 属性。 还可以通过使用属性访问引发事件的按钮控件 <xref:System.Web.UI.WebControls.GridViewCommandEventArgs.CommandSource%2A> 。  
  
 有关如何处理事件的详细信息，请参阅 [处理和引发事件](/dotnet/standard/events/)。  
  
 有关实例的初始属性值的列表 <xref:System.Web.UI.WebControls.GridViewCommandEventArgs> ，请参见 <xref:System.Web.UI.WebControls.GridViewCommandEventArgs.%23ctor%2A> 构造函数。  
  
   
  
## Examples  
 下面的示例演示如何使用 <xref:System.Web.UI.WebControls.GridViewCommandEventArgs> 传递给事件处理方法的对象来确定引发事件的按钮的命令名。  
  
 [!code-aspx-csharp[GridViewRowCommmand#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewRowCommmand/CS/gridviewrowcommandcs.aspx#1)]
 [!code-aspx-vb[GridViewRowCommmand#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewRowCommmand/VB/gridviewrowcommandvb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.GridView" />
    <altmember cref="T:System.Web.UI.WebControls.GridViewCommandEventHandler" />
    <altmember cref="T:System.Web.UI.WebControls.ButtonField" />
    <altmember cref="T:System.Web.UI.WebControls.TemplateField" />
    <altmember cref="T:System.Web.UI.WebControls.CommandEventArgs" />
    <altmember cref="P:System.Web.UI.WebControls.CommandEventArgs.CommandArgument" />
    <altmember cref="E:System.Web.UI.WebControls.GridView.RowCommand" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>初始化 <see cref="T:System.Web.UI.WebControls.GridViewCommandEventArgs" /> 类的新实例。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GridViewCommandEventArgs (object commandSource, System.Web.UI.WebControls.CommandEventArgs originalArgs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object commandSource, class System.Web.UI.WebControls.CommandEventArgs originalArgs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.GridViewCommandEventArgs.#ctor(System.Object,System.Web.UI.WebControls.CommandEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (commandSource As Object, originalArgs As CommandEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GridViewCommandEventArgs(System::Object ^ commandSource, System::Web::UI::WebControls::CommandEventArgs ^ originalArgs);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.GridViewCommandEventArgs : obj * System.Web.UI.WebControls.CommandEventArgs -&gt; System.Web.UI.WebControls.GridViewCommandEventArgs" Usage="new System.Web.UI.WebControls.GridViewCommandEventArgs (commandSource, originalArgs)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="commandSource" Type="System.Object" />
        <Parameter Name="originalArgs" Type="System.Web.UI.WebControls.CommandEventArgs" />
      </Parameters>
      <Docs>
        <param name="commandSource">命令源。</param>
        <param name="originalArgs">包含事件数据的 <see cref="T:System.Web.UI.WebControls.CommandEventArgs" /> 对象。</param>
        <summary>使用指定的命令源和事件参数初始化 <see cref="T:System.Web.UI.WebControls.GridViewCommandEventArgs" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用此构造函数初始化类的新实例 <xref:System.Web.UI.WebControls.GridViewCommandEventArgs> 。  
  
 下表显示了 <xref:System.Web.UI.WebControls.GridViewCommandEventArgs> 实例的初始属性值。  
  
|properties|初始值|  
|--------------|-------------------|  
|<xref:System.Web.UI.WebControls.CommandEventArgs.CommandArgument%2A>|<xref:System.Web.UI.WebControls.CommandEventArgs.CommandArgument%2A> <xref:System.Web.UI.WebControls.CommandEventArgs> 参数中包含的对象的属性值 `originalArgs` 。|  
|<xref:System.Web.UI.WebControls.CommandEventArgs.CommandName%2A>|<xref:System.Web.UI.WebControls.CommandEventArgs.CommandName%2A> <xref:System.Web.UI.WebControls.CommandEventArgs> 参数中包含的对象的属性值 `originalArgs` 。|  
|<xref:System.Web.UI.WebControls.GridViewCommandEventArgs.CommandSource%2A>|参数中包含的对象 `commandSource` 。|  
  
> [!NOTE]
>  此构造函数主要由控件开发人员在引发事件时使用。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.CommandEventArgs" />
        <altmember cref="P:System.Web.UI.WebControls.CommandEventArgs.CommandArgument" />
        <altmember cref="P:System.Web.UI.WebControls.CommandEventArgs.CommandName" />
        <altmember cref="P:System.Web.UI.WebControls.GridViewCommandEventArgs.CommandSource" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GridViewCommandEventArgs (System.Web.UI.WebControls.GridViewRow row, object commandSource, System.Web.UI.WebControls.CommandEventArgs originalArgs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Web.UI.WebControls.GridViewRow row, object commandSource, class System.Web.UI.WebControls.CommandEventArgs originalArgs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.GridViewCommandEventArgs.#ctor(System.Web.UI.WebControls.GridViewRow,System.Object,System.Web.UI.WebControls.CommandEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (row As GridViewRow, commandSource As Object, originalArgs As CommandEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GridViewCommandEventArgs(System::Web::UI::WebControls::GridViewRow ^ row, System::Object ^ commandSource, System::Web::UI::WebControls::CommandEventArgs ^ originalArgs);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.GridViewCommandEventArgs : System.Web.UI.WebControls.GridViewRow * obj * System.Web.UI.WebControls.CommandEventArgs -&gt; System.Web.UI.WebControls.GridViewCommandEventArgs" Usage="new System.Web.UI.WebControls.GridViewCommandEventArgs (row, commandSource, originalArgs)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="row" Type="System.Web.UI.WebControls.GridViewRow" />
        <Parameter Name="commandSource" Type="System.Object" />
        <Parameter Name="originalArgs" Type="System.Web.UI.WebControls.CommandEventArgs" />
      </Parameters>
      <Docs>
        <param name="row"><see cref="T:System.Web.UI.WebControls.GridViewRow" /> 对象，它表示包含按钮的行。</param>
        <param name="commandSource">命令源。</param>
        <param name="originalArgs">包含事件数据的 <see cref="T:System.Web.UI.WebControls.CommandEventArgs" /> 对象。</param>
        <summary>使用指定的行、命令源和事件参数初始化 <see cref="T:System.Web.UI.WebControls.GridViewCommandEventArgs" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用此构造函数初始化类的新实例 <xref:System.Web.UI.WebControls.GridViewCommandEventArgs> 。  
  
 下表显示了 <xref:System.Web.UI.WebControls.GridViewCommandEventArgs> 实例的初始属性值。  
  
|properties|初始值|  
|--------------|-------------------|  
|<xref:System.Web.UI.WebControls.CommandEventArgs.CommandArgument%2A>|<xref:System.Web.UI.WebControls.CommandEventArgs.CommandArgument%2A> <xref:System.Web.UI.WebControls.CommandEventArgs> 参数中包含的对象的属性值 `originalArgs` 。|  
|<xref:System.Web.UI.WebControls.CommandEventArgs.CommandName%2A>|<xref:System.Web.UI.WebControls.CommandEventArgs.CommandName%2A> <xref:System.Web.UI.WebControls.CommandEventArgs> 参数中包含的对象的属性值 `originalArgs` 。|  
|<xref:System.Web.UI.WebControls.GridViewCommandEventArgs.CommandSource%2A>|参数中包含的对象 `commandSource` 。|  
  
> [!NOTE]
>  此构造函数主要由控件开发人员在引发事件时使用。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.CommandEventArgs" />
        <altmember cref="P:System.Web.UI.WebControls.CommandEventArgs.CommandArgument" />
        <altmember cref="P:System.Web.UI.WebControls.CommandEventArgs.CommandName" />
        <altmember cref="P:System.Web.UI.WebControls.GridViewCommandEventArgs.CommandSource" />
      </Docs>
    </Member>
    <Member MemberName="CommandSource">
      <MemberSignature Language="C#" Value="public object CommandSource { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object CommandSource" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridViewCommandEventArgs.CommandSource" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CommandSource As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ CommandSource { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CommandSource : obj" Usage="System.Web.UI.WebControls.GridViewCommandEventArgs.CommandSource" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取命令源。</summary>
        <value><see cref="T:System.Object" /> 类的一个实例，它表示命令源。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用 <xref:System.Web.UI.WebControls.GridViewCommandEventArgs.CommandSource%2A> 属性访问表示命令源的对象的属性。 对于 <xref:System.Web.UI.WebControls.GridViewCommandEventArgs> 对象，命令的源是 <xref:System.Web.UI.WebControls.GridView> 包含用户单击的按钮的控件。  
  
   
  
## Examples  
 下面的示例演示如何使用 <xref:System.Web.UI.WebControls.GridViewCommandEventArgs.CommandSource%2A> 属性访问 <xref:System.Web.UI.WebControls.GridView> 控件，该控件包含用户单击的按钮。  
  
 [!code-aspx-csharp[GridViewCommandEventArgs2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewCommandEventArgs2/CS/gridviewcommandeventargs2cs.aspx#1)]
 [!code-aspx-vb[GridViewCommandEventArgs2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewCommandEventArgs2/VB/gridviewcommandeventargs2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Object" />
        <altmember cref="T:System.Web.UI.WebControls.GridView" />
      </Docs>
    </Member>
    <Member MemberName="Handled">
      <MemberSignature Language="C#" Value="public bool Handled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Handled" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridViewCommandEventArgs.Handled" />
      <MemberSignature Language="VB.NET" Value="Public Property Handled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Handled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Handled : bool with get, set" Usage="System.Web.UI.WebControls.GridViewCommandEventArgs.Handled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置指示控件是否已处理事件的值。</summary>
        <value>如果数据绑定事件代码跳过或已完成，则为 <see langword="true" />；否则为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 在事件处理程序中将此属性设置为， `true` 以指定 <xref:System.Web.UI.WebControls.GridView> 控件不应处理事件，因为您在代码中对其进行处理。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
