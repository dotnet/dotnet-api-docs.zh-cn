<Type Name="TemplateField" FullName="System.Web.UI.WebControls.TemplateField">
  <Metadata><Meta Name="ms.openlocfilehash" Value="2d9b1bdc87976bab135fdc350d6e01d3ead29e87" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86657395" /></Metadata><TypeSignature Language="C#" Value="public class TemplateField : System.Web.UI.WebControls.DataControlField" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TemplateField extends System.Web.UI.WebControls.DataControlField" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.TemplateField" />
  <TypeSignature Language="VB.NET" Value="Public Class TemplateField&#xA;Inherits DataControlField" />
  <TypeSignature Language="C++ CLI" Value="public ref class TemplateField : System::Web::UI::WebControls::DataControlField" />
  <TypeSignature Language="F#" Value="type TemplateField = class&#xA;    inherit DataControlField" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.DataControlField</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>表示在数据绑定控件中显示自定义内容的字段。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.TemplateField>数据绑定控件使用类 (例如 <xref:System.Web.UI.WebControls.GridView> 和 <xref:System.Web.UI.WebControls.DetailsView>) 来显示每个显示的记录的自定义内容。 当你需要在未由预定义的数据控件字段（如) ）提供的数据绑定控件中显示内容时 <xref:System.Web.UI.WebControls.BoundField> ，请使用 <xref:System.Web.UI.WebControls.TemplateField> 类 ( (UI) 创建自定义用户界面。 <xref:System.Web.UI.WebControls.TemplateField>对象的显示方式取决于使用它的数据绑定控件。 例如，控件将 <xref:System.Web.UI.WebControls.GridView> <xref:System.Web.UI.WebControls.TemplateField> 对象显示为一列，并且 <xref:System.Web.UI.WebControls.DetailsView> 控件将其显示为一行。  
  
 您可以 <xref:System.Web.UI.WebControls.TemplateField> 使用下表中列出的模板为对象的不同部分定义自定义模板。  
  
|模板|说明|  
|--------------|-----------------|  
|<xref:System.Web.UI.WebControls.TemplateField.AlternatingItemTemplate%2A>|指定要为对象中的交替项显示的内容 <xref:System.Web.UI.WebControls.TemplateField> 。|  
|<xref:System.Web.UI.WebControls.TemplateField.EditItemTemplate%2A>|指定要为对象中的编辑模式的项显示的内容 <xref:System.Web.UI.WebControls.TemplateField> 。|  
|<xref:System.Web.UI.WebControls.TemplateField.FooterTemplate%2A>|为对象的脚注部分指定要显示的内容 <xref:System.Web.UI.WebControls.TemplateField> 。|  
|<xref:System.Web.UI.WebControls.TemplateField.HeaderTemplate%2A>|为对象的标头部分指定要显示的内容 <xref:System.Web.UI.WebControls.TemplateField> 。|  
|<xref:System.Web.UI.WebControls.TemplateField.InsertItemTemplate%2A>|指定为对象中的插入模式项显示的内容 <xref:System.Web.UI.WebControls.TemplateField> 。 此模板仅受 <xref:System.Web.UI.WebControls.DetailsView> 控件支持。|  
|<xref:System.Web.UI.WebControls.TemplateField.ItemTemplate%2A>|指定要为对象中的项显示的内容 <xref:System.Web.UI.WebControls.TemplateField> 。|  
  
 可以 <xref:System.Web.UI.WebControls.TemplateField> 通过将属性设置为来隐藏数据绑定控件中的对象 <xref:System.Web.UI.WebControls.DataControlField.Visible%2A> `false` 。  
  
 作为定义自定义或模板的替代方法 <xref:System.Web.UI.WebControls.TemplateField.HeaderTemplate%2A> <xref:System.Web.UI.WebControls.TemplateField.FooterTemplate%2A> ，您可以 <xref:System.Web.UI.WebControls.TemplateField> 通过设置对象的其他属性自定义对象的页眉和页脚部分 <xref:System.Web.UI.WebControls.TemplateField> 。 若要在页眉或页脚部分显示标题，请分别设置 <xref:System.Web.UI.WebControls.DataControlField.HeaderText%2A> 或 <xref:System.Web.UI.WebControls.DataControlField.FooterText%2A> 属性。 您可以通过设置属性来显示图像，而不是在页眉节中显示文本 <xref:System.Web.UI.WebControls.DataControlField.HeaderImageUrl%2A> 。 <xref:System.Web.UI.WebControls.TemplateField>通过将属性设置为，可以在对象中隐藏标头部分 <xref:System.Web.UI.WebControls.DataControlField.ShowHeader%2A> `false` 。  
  
> [!NOTE]
>  某些数据绑定控件 (例如 <xref:System.Web.UI.WebControls.GridView> 控件) 可以仅显示或隐藏控件的整个标题部分。 这些数据绑定控件不支持 <xref:System.Web.UI.WebControls.DataControlField.ShowHeader%2A> 单个绑定字段的属性。 若要显示或隐藏数据绑定控件的整个标头部分，请使用控件的 `ShowHeader` 属性 (如有) 。  
  
 还可以 <xref:System.Web.UI.WebControls.TemplateField> 通过设置字段的不同部分的样式属性，自定义对象的外观 (字体颜色、背景色等) 。 下表列出了不同的样式属性。  
  
|Style 属性|说明|  
|--------------------|-----------------|  
|<xref:System.Web.UI.WebControls.DataControlField.ControlStyle%2A>|对象的子 Web 服务器控件的样式设置 <xref:System.Web.UI.WebControls.TemplateField> 。|  
|<xref:System.Web.UI.WebControls.DataControlField.FooterStyle%2A>|对象的脚注部分的样式设置 <xref:System.Web.UI.WebControls.TemplateField> 。|  
|<xref:System.Web.UI.WebControls.DataControlField.HeaderStyle%2A>|对象的标头部分的样式设置 <xref:System.Web.UI.WebControls.TemplateField> 。|  
|<xref:System.Web.UI.WebControls.DataControlField.ItemStyle%2A>|对象中数据项的样式设置 <xref:System.Web.UI.WebControls.TemplateField> 。|  
  
   
  
## Examples  
 下面的代码示例演示如何创建一个自定义 <xref:System.Web.UI.WebControls.TemplateField> 对象，该对象在同一单元格中显示两个字段。 "名字" 和 "姓氏" 字段合并为同一 <xref:System.Web.UI.WebControls.TemplateField> 对象。  
  
 [!code-aspx-csharp[TemplateField#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TemplateField/CS/templatefieldcs.aspx#1)]
 [!code-aspx-vb[TemplateField#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TemplateField/VB/templatefieldvb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.GridView" />
    <altmember cref="P:System.Web.UI.WebControls.GridView.Columns" />
    <altmember cref="T:System.Web.UI.WebControls.DetailsView" />
    <altmember cref="P:System.Web.UI.WebControls.DetailsView.Fields" />
    <altmember cref="T:System.Web.UI.WebControls.BoundField" />
    <altmember cref="T:System.Web.UI.WebControls.ButtonField" />
    <altmember cref="T:System.Web.UI.WebControls.CheckBoxField" />
    <altmember cref="T:System.Web.UI.WebControls.CommandField" />
    <altmember cref="T:System.Web.UI.WebControls.DataControlField" />
    <altmember cref="T:System.Web.UI.WebControls.HyperLinkField" />
    <altmember cref="P:System.Web.UI.WebControls.TemplateField.AlternatingItemTemplate" />
    <altmember cref="P:System.Web.UI.WebControls.TemplateField.EditItemTemplate" />
    <altmember cref="P:System.Web.UI.WebControls.TemplateField.FooterTemplate" />
    <altmember cref="P:System.Web.UI.WebControls.TemplateField.HeaderTemplate" />
    <altmember cref="P:System.Web.UI.WebControls.TemplateField.InsertItemTemplate" />
    <altmember cref="P:System.Web.UI.WebControls.TemplateField.ItemTemplate" />
    <altmember cref="P:System.Web.UI.WebControls.DataControlField.Visible" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TemplateField ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TemplateField.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TemplateField();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Web.UI.WebControls.TemplateField" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用此构造函数初始化类的新实例 <xref:System.Web.UI.WebControls.TemplateField> 。 当向动态创建的数据绑定控件添加字段时，通常使用此构造函数。  
  
 若要将对象动态添加 <xref:System.Web.UI.WebControls.TemplateField> 到数据绑定控件，请创建一个新的 <xref:System.Web.UI.WebControls.TemplateField> 对象，定义适当的模板，然后将其添加到数据绑定控件的字段集合中。 例如，如果使用 <xref:System.Web.UI.WebControls.GridView> 控件，请将 <xref:System.Web.UI.WebControls.TemplateField> 对象添加到 <xref:System.Web.UI.WebControls.GridView.Columns%2A> 集合中。  
  
> [!NOTE]
>  虽然可将字段动态添加到数据绑定控件，但强烈建议根据需要静态声明字段，然后将其显示或隐藏。 静态声明所有字段可减小父数据绑定控件的视图状态的大小。  
  
   
  
## Examples  
 下面的代码示例演示如何使用构造函数将字段列动态添加 <xref:System.Web.UI.WebControls.TemplateField> 到 <xref:System.Web.UI.WebControls.GridView> 控件。  
  
 [!code-aspx-csharp[TemplateFieldCtor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TemplateFieldCtor/CS/templatefieldctorcs.aspx#1)]
 [!code-aspx-vb[TemplateFieldCtor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TemplateFieldCtor/VB/templatefieldctorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.GridView" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.Columns" />
        <altmember cref="T:System.Web.UI.WebControls.DetailsView" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.Fields" />
      </Docs>
    </Member>
    <Member MemberName="AlternatingItemTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate AlternatingItemTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate AlternatingItemTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TemplateField.AlternatingItemTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property AlternatingItemTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ AlternatingItemTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AlternatingItemTemplate : System.Web.UI.ITemplate with get, set" Usage="System.Web.UI.WebControls.TemplateField.AlternatingItemTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(null)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(null)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.TemplateContainer(typeof(System.Web.UI.IDataItemContainer), System.ComponentModel.BindingDirection.TwoWay)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.TemplateContainer(typeof(System.Web.UI.IDataItemContainer), System.ComponentModel.BindingDirection.TwoWay)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置用于显示 <see cref="T:System.Web.UI.WebControls.TemplateField" /> 对象中交替项的模板。</summary>
        <value>一个实现了 <see cref="T:System.Web.UI.ITemplate" /> 的对象，该对象包含用于显示 <see cref="T:System.Web.UI.WebControls.TemplateField" /> 中交替项的模板。 默认值为 <see langword="null" />，指示未设置此属性。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用 <xref:System.Web.UI.WebControls.TemplateField.AlternatingItemTemplate%2A> 属性指定为对象中的交替项显示的自定义内容 <xref:System.Web.UI.WebControls.TemplateField> 。 通过创建指定如何呈现交替项的模板来定义内容。  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.TemplateField.AlternatingItemTemplate%2A>属性通常与属性结合使用 <xref:System.Web.UI.WebControls.TemplateField.ItemTemplate%2A> ，为数据绑定控件中的每个其他项创建不同的外观。  
  
 若要指定模板，请先在 `<AlternatingItemTemplate>` 元素的开始标记和结束标记之间放置开始标记和结束标记 `<TemplateField>` 。 接下来，在开始标记和结束标记之间添加自定义内容 `<AlternatingItemTemplate>` 。 内容可以与纯文本或更复杂 (嵌入模板中的其他控件一样简单，例如) 。  
  
 若要以编程方式访问在模板中定义的控件，首先要确定 <xref:System.Web.UI.WebControls.TableCell> 数据绑定控件中包含控件的对象。 接下来，使用 <xref:System.Web.UI.Control.Controls%2A> 对象的集合 <xref:System.Web.UI.WebControls.TableCell> 访问该控件。 <xref:System.Web.UI.Control.FindControl%2A> <xref:System.Web.UI.WebControls.TableCell> 如果控件具有指定的属性，则还可以使用对象的方法来查找控件 <xref:System.Web.UI.Control.ID%2A> 。  
  
   
  
## Examples  
 下面的代码示例演示如何使用 <xref:System.Web.UI.WebControls.TemplateField.AlternatingItemTemplate%2A> 属性为控件的字段列中的交替项创建自定义模板 <xref:System.Web.UI.WebControls.TemplateField> <xref:System.Web.UI.WebControls.GridView> 。 模板是由属性指定的模板的变体 <xref:System.Web.UI.WebControls.TemplateField.ItemTemplate%2A> ，其中图像显示在单元的另一侧。  
  
 [!code-aspx-csharp[TemplateFieldAlternatingItemTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TemplateFieldAlternatingItemTemplate/CS/templatefieldalternatingitemtemplatecs.aspx#1)]
 [!code-aspx-vb[TemplateFieldAlternatingItemTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TemplateFieldAlternatingItemTemplate/VB/templatefieldalternatingitemtemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.TemplateField.EditItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.TemplateField.FooterTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.TemplateField.HeaderTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.TemplateField.InsertItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.TemplateField.ItemTemplate" />
      </Docs>
    </Member>
    <Member MemberName="ConvertEmptyStringToNull">
      <MemberSignature Language="C#" Value="public virtual bool ConvertEmptyStringToNull { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ConvertEmptyStringToNull" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TemplateField.ConvertEmptyStringToNull" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ConvertEmptyStringToNull As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool ConvertEmptyStringToNull { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ConvertEmptyStringToNull : bool with get, set" Usage="System.Web.UI.WebControls.TemplateField.ConvertEmptyStringToNull" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示在 <see cref="T:System.Web.UI.WebControls.TemplateField" /> 对象绑定到的值为 <see cref="F:System.String.Empty" /> 时是否应将其转换为 <see langword="null" />。</summary>
        <value>如果在 <see cref="T:System.Web.UI.WebControls.TemplateField" /> 绑定到的值为 <see cref="F:System.String.Empty" /> 时应将其转换为 <see langword="true" />，则为 <see langword="null" />；否则为 <see langword="false" />。 默认值为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此属性适用于在模板中进行的双向数据绑定语句。 在从双向绑定模板提取值后，以及在将值传递到用于更新或插入操作的数据源之前，将执行转换。  
  
 例如，用户可能会在更新或插入记录时为字段值输入空字符串 ( "" ) 。 使用 <xref:System.Web.UI.WebControls.TemplateField.ConvertEmptyStringToNull%2A> 属性可以指定在 `null` 数据源中更新数据字段时是否将空字符串值自动转换为。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TemplateField" />
        <altmember cref="T:System.Web.UI.WebControls.GridView" />
        <altmember cref="T:System.Web.UI.WebControls.DetailsView" />
      </Docs>
    </Member>
    <Member MemberName="CopyProperties">
      <MemberSignature Language="C#" Value="protected override void CopyProperties (System.Web.UI.WebControls.DataControlField newField);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void CopyProperties(class System.Web.UI.WebControls.DataControlField newField) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TemplateField.CopyProperties(System.Web.UI.WebControls.DataControlField)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub CopyProperties (newField As DataControlField)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void CopyProperties(System::Web::UI::WebControls::DataControlField ^ newField);" />
      <MemberSignature Language="F#" Value="override this.CopyProperties : System.Web.UI.WebControls.DataControlField -&gt; unit" Usage="templateField.CopyProperties newField" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newField" Type="System.Web.UI.WebControls.DataControlField" />
      </Parameters>
      <Docs>
        <param name="newField">当前 <see cref="T:System.Web.UI.WebControls.DataControlField" /> 的属性将复制到的 <see cref="T:System.Web.UI.WebControls.TemplateField" />。</param>
        <summary>将当前 <see cref="T:System.Web.UI.WebControls.TemplateField" /> 派生对象的属性复制到指定的 <see cref="T:System.Web.UI.WebControls.DataControlField" /> 对象。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.TemplateField.CopyProperties%2A>方法是一个帮助器方法，用于将当前派生对象的属性复制 <xref:System.Web.UI.WebControls.TemplateField> 到 <xref:System.Web.UI.WebControls.DataControlField> 该方法创建的对象。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>当 <see cref="M:System.Web.UI.WebControls.TemplateField.CopyProperties(System.Web.UI.WebControls.DataControlField)" /> 在派生类中重写时，请确保调用基类的 <see cref="M:System.Web.UI.WebControls.DataControlField.CopyProperties(System.Web.UI.WebControls.DataControlField)" /> 方法。</para></block>
        <altmember cref="T:System.Web.UI.WebControls.TemplateField" />
        <altmember cref="T:System.Web.UI.WebControls.GridView" />
        <altmember cref="T:System.Web.UI.WebControls.DetailsView" />
      </Docs>
    </Member>
    <Member MemberName="CreateField">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.WebControls.DataControlField CreateField ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.WebControls.DataControlField CreateField() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TemplateField.CreateField" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateField () As DataControlField" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Web::UI::WebControls::DataControlField ^ CreateField();" />
      <MemberSignature Language="F#" Value="override this.CreateField : unit -&gt; System.Web.UI.WebControls.DataControlField" Usage="templateField.CreateField " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataControlField</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>创建一个新的 <see cref="T:System.Web.UI.WebControls.TemplateField" /> 对象。</summary>
        <returns>始终返回新的 <see cref="T:System.Web.UI.WebControls.TemplateField" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.TemplateField.CreateField%2A>方法重写基方法以返回 <xref:System.Web.UI.WebControls.TemplateField> 对象。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>当 <see cref="M:System.Web.UI.WebControls.TemplateField.CreateField" /> 在派生类中重写时，请确保创建类型的新实例，而不调用基方法。</para></block>
        <altmember cref="T:System.Web.UI.WebControls.TemplateField" />
        <altmember cref="T:System.Web.UI.WebControls.GridView" />
        <altmember cref="T:System.Web.UI.WebControls.DetailsView" />
      </Docs>
    </Member>
    <Member MemberName="EditItemTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate EditItemTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate EditItemTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TemplateField.EditItemTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property EditItemTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ EditItemTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberSignature Language="F#" Value="member this.EditItemTemplate : System.Web.UI.ITemplate with get, set" Usage="System.Web.UI.WebControls.TemplateField.EditItemTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(null)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(null)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.TemplateContainer(typeof(System.Web.UI.IDataItemContainer), System.ComponentModel.BindingDirection.TwoWay)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.TemplateContainer(typeof(System.Web.UI.IDataItemContainer), System.ComponentModel.BindingDirection.TwoWay)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置模板，该模板用于显示 <see cref="T:System.Web.UI.WebControls.TemplateField" /> 对象中处于编辑模式中的项。</summary>
        <value>一个实现了 <see cref="T:System.Web.UI.ITemplate" /> 的对象，该对象包含用于显示 <see cref="T:System.Web.UI.WebControls.TemplateField" /> 中处于编辑模式的项的模板。 默认值为 <see langword="null" />，指示未设置此属性。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用 <xref:System.Web.UI.WebControls.TemplateField.EditItemTemplate%2A> 属性指定为对象中处于编辑模式的项显示的自定义内容 <xref:System.Web.UI.WebControls.TemplateField> 。 通过创建指定如何呈现处于编辑模式的项的模板来定义内容。 <xref:System.Web.UI.WebControls.TemplateField.EditItemTemplate%2A>属性通常包含输入控件，用户可通过这些控件修改数据源中的值。  
  
 若要指定模板，请先在 `<EditItemTemplate>` 元素的开始标记和结束标记之间放置开始标记和结束标记 `<TemplateField>` 。 接下来，在开始标记和结束标记之间添加自定义内容 `<EditItemTemplate>` 。 内容可以与纯文本或更复杂 (嵌入模板中的其他控件一样简单，例如) 。  
  
 若要以编程方式访问在模板中定义的控件，首先要确定 <xref:System.Web.UI.WebControls.TableCell> 数据绑定控件中包含控件的对象。 接下来，使用 <xref:System.Web.UI.Control.Controls%2A> 对象的集合 <xref:System.Web.UI.WebControls.TableCell> 访问该控件。 <xref:System.Web.UI.Control.FindControl%2A> <xref:System.Web.UI.WebControls.TableCell> 如果控件具有指定的属性，则还可以使用对象的方法来查找控件 <xref:System.Web.UI.Control.ID%2A> 。  
  
   
  
## Examples  
 下面的代码示例演示如何使用 <xref:System.Web.UI.WebControls.TemplateField.EditItemTemplate%2A> 属性为控件的字段列中处于编辑模式的项创建自定义模板 <xref:System.Web.UI.WebControls.TemplateField> <xref:System.Web.UI.WebControls.GridView> 。 模板包含验证服务器控件，以防止用户将值字段留空。  
  
 [!code-aspx-csharp[TemplateFieldEditItemTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TemplateFieldEditItemTemplate/CS/templatefieldedititemtemplatecs.aspx#1)]
 [!code-aspx-vb[TemplateFieldEditItemTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TemplateFieldEditItemTemplate/VB/templatefieldedititemtemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.TemplateField.AlternatingItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.TemplateField.FooterTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.TemplateField.HeaderTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.TemplateField.InsertItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.TemplateField.ItemTemplate" />
      </Docs>
    </Member>
    <Member MemberName="ExtractValuesFromCell">
      <MemberSignature Language="C#" Value="public override void ExtractValuesFromCell (System.Collections.Specialized.IOrderedDictionary dictionary, System.Web.UI.WebControls.DataControlFieldCell cell, System.Web.UI.WebControls.DataControlRowState rowState, bool includeReadOnly);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ExtractValuesFromCell(class System.Collections.Specialized.IOrderedDictionary dictionary, class System.Web.UI.WebControls.DataControlFieldCell cell, valuetype System.Web.UI.WebControls.DataControlRowState rowState, bool includeReadOnly) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TemplateField.ExtractValuesFromCell(System.Collections.Specialized.IOrderedDictionary,System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlRowState,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub ExtractValuesFromCell (dictionary As IOrderedDictionary, cell As DataControlFieldCell, rowState As DataControlRowState, includeReadOnly As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void ExtractValuesFromCell(System::Collections::Specialized::IOrderedDictionary ^ dictionary, System::Web::UI::WebControls::DataControlFieldCell ^ cell, System::Web::UI::WebControls::DataControlRowState rowState, bool includeReadOnly);" />
      <MemberSignature Language="F#" Value="override this.ExtractValuesFromCell : System.Collections.Specialized.IOrderedDictionary * System.Web.UI.WebControls.DataControlFieldCell * System.Web.UI.WebControls.DataControlRowState * bool -&gt; unit" Usage="templateField.ExtractValuesFromCell (dictionary, cell, rowState, includeReadOnly)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dictionary" Type="System.Collections.Specialized.IOrderedDictionary" />
        <Parameter Name="cell" Type="System.Web.UI.WebControls.DataControlFieldCell" />
        <Parameter Name="rowState" Type="System.Web.UI.WebControls.DataControlRowState" />
        <Parameter Name="includeReadOnly" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="dictionary"><see cref="T:System.Collections.Specialized.IOrderedDictionary" />。</param>
        <param name="cell">一个 <see cref="T:System.Web.UI.WebControls.DataControlFieldCell" />，包含 <see cref="T:System.Web.UI.WebControls.TemplateField" /> 的文本或控件。</param>
        <param name="rowState"><see cref="T:System.Web.UI.WebControls.DataControlRowState" /> 值之一。</param>
        <param name="includeReadOnly">如果要指示只读字段的值包括在 <paramref name="dictionary" /> 集合中，则为 <see langword="true" />；否则为 <see langword="false" />。</param>
        <summary>从当前表单元格提取由一个或多个双向绑定语句 (<see langword="DataBind" />) 指定的数据控件字段的值，并将这些值添加到指定的 <see cref="T:System.Collections.Specialized.IOrderedDictionary" /> 集合。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.TemplateField.ExtractValuesFromCell%2A>方法由派生自的类型实现 <xref:System.Web.UI.WebControls.DataControlField> ，如 <xref:System.Web.UI.WebControls.TemplateField> 。 调用此方法可在模板中提取双向数据绑定字段的值，以便为更新、插入或删除操作填充要传递到数据源的字典。 字段/值对存储在传递给方法的字典集合中。 <xref:System.Web.UI.WebControls.TemplateField.ExtractValuesFromCell%2A>方法由 `ExtractRowValues` 数据控件（如和）的方法调用 <xref:System.Web.UI.WebControls.DetailsView> <xref:System.Web.UI.WebControls.GridView> 。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.DataControlField.ExtractValuesFromCell(System.Collections.Specialized.IOrderedDictionary,System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlRowState,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="FooterTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate FooterTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate FooterTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TemplateField.FooterTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property FooterTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ FooterTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberSignature Language="F#" Value="member this.FooterTemplate : System.Web.UI.ITemplate with get, set" Usage="System.Web.UI.WebControls.TemplateField.FooterTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(null)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(null)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.TemplateContainer(typeof(System.Web.UI.IDataItemContainer))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.TemplateContainer(typeof(System.Web.UI.IDataItemContainer))&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置用于显示 <see cref="T:System.Web.UI.WebControls.TemplateField" /> 对象的脚注部分的模板。</summary>
        <value>一个实现了 <see cref="T:System.Web.UI.ITemplate" /> 的对象，该对象包含用于显示 <see cref="T:System.Web.UI.WebControls.TemplateField" /> 的脚注部分的模板。 默认值为 <see langword="null" />，指示未设置此属性。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用 <xref:System.Web.UI.WebControls.TemplateField.FooterTemplate%2A> 属性来指定在对象的页脚部分中显示的自定义内容 <xref:System.Web.UI.WebControls.TemplateField> 。 通过创建指定如何呈现脚注部分的模板来定义内容。  
  
 若要指定模板，请先在 `<FooterTemplate>` 元素的开始标记和结束标记之间放置开始标记和结束标记 `<TemplateField>` 。 接下来，在开始标记和结束标记之间添加自定义内容 `<FooterTemplate>` 。 内容可以与纯文本或更复杂 (嵌入模板中的其他控件一样简单，例如) 。  
  
 若要以编程方式访问在模板中定义的控件，首先要确定 <xref:System.Web.UI.WebControls.TableCell> 数据绑定控件中包含控件的对象。 接下来，使用 <xref:System.Web.UI.Control.Controls%2A> 对象的集合 <xref:System.Web.UI.WebControls.TableCell> 访问该控件。 <xref:System.Web.UI.Control.FindControl%2A> <xref:System.Web.UI.WebControls.TableCell> 如果控件具有指定的属性，则还可以使用对象的方法来查找控件 <xref:System.Web.UI.Control.ID%2A> 。  
  
   
  
## Examples  
 下面的代码示例演示如何使用 <xref:System.Web.UI.WebControls.TemplateField.FooterTemplate%2A> 属性为控件中的字段列的脚注部分创建自定义模板 <xref:System.Web.UI.WebControls.TemplateField> <xref:System.Web.UI.WebControls.GridView> 。 该模板显示 "字段" 列中的值的总和 <xref:System.Web.UI.WebControls.TemplateField> 。  
  
 [!code-aspx-csharp[TemplateFieldFooterTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TemplateFieldFooterTemplate/CS/templatefieldfootertemplatecs.aspx#1)]
 [!code-aspx-vb[TemplateFieldFooterTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TemplateFieldFooterTemplate/VB/templatefieldfootertemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.TemplateField.AlternatingItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.TemplateField.EditItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.TemplateField.HeaderTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.TemplateField.InsertItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.TemplateField.ItemTemplate" />
      </Docs>
    </Member>
    <Member MemberName="HeaderTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate HeaderTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate HeaderTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TemplateField.HeaderTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property HeaderTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ HeaderTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberSignature Language="F#" Value="member this.HeaderTemplate : System.Web.UI.ITemplate with get, set" Usage="System.Web.UI.WebControls.TemplateField.HeaderTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(null)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(null)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.TemplateContainer(typeof(System.Web.UI.IDataItemContainer))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.TemplateContainer(typeof(System.Web.UI.IDataItemContainer))&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置用于显示 <see cref="T:System.Web.UI.WebControls.TemplateField" /> 对象的标头部分的模板。</summary>
        <value>一个实现了 <see cref="T:System.Web.UI.ITemplate" /> 的对象，该对象包含用于显示数据绑定控件中 <see cref="T:System.Web.UI.WebControls.TemplateField" /> 的标头部分的模板。 默认值为 <see langword="null" />，指示未设置此属性。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用 <xref:System.Web.UI.WebControls.TemplateField.HeaderTemplate%2A> 属性指定为对象的标头部分显示的自定义内容 <xref:System.Web.UI.WebControls.TemplateField> 。 通过创建指定如何呈现标头部分的模板来定义内容。  
  
 若要指定模板，请先在 `<HeaderTemplate>` 元素的开始标记和结束标记之间放置开始标记和结束标记 `<TemplateField>` 。 接下来，在开始标记和结束标记之间添加自定义内容 `<HeaderTemplate>` 。 内容可以与纯文本或更复杂 (嵌入模板中的其他控件一样简单，例如) 。  
  
 若要以编程方式访问在模板中定义的控件，首先要确定 <xref:System.Web.UI.WebControls.TableCell> 数据绑定控件中包含控件的对象。 接下来，使用 <xref:System.Web.UI.Control.Controls%2A> 对象的集合 <xref:System.Web.UI.WebControls.TableCell> 访问该控件。 <xref:System.Web.UI.Control.FindControl%2A> <xref:System.Web.UI.WebControls.TableCell> 如果控件具有指定的属性，则还可以使用对象的方法来查找控件 <xref:System.Web.UI.Control.ID%2A> 。  
  
   
  
## Examples  
 下面的代码示例演示如何使用 <xref:System.Web.UI.WebControls.TemplateField.HeaderTemplate%2A> 属性为控件中的字段列的标头部分创建自定义模板 <xref:System.Web.UI.WebControls.TemplateField> <xref:System.Web.UI.WebControls.GridView> 。 该模板将显示一个复选框，允许用户显示或隐藏控件的行 <xref:System.Web.UI.WebControls.GridView> 。  
  
 [!code-aspx-csharp[TemplateFieldHeaderTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TemplateFieldHeaderTemplate/CS/templatefieldheadertemplatecs.aspx#1)]
 [!code-aspx-vb[TemplateFieldHeaderTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TemplateFieldHeaderTemplate/VB/templatefieldheadertemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.TemplateField.AlternatingItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.TemplateField.EditItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.TemplateField.FooterTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.TemplateField.InsertItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.TemplateField.ItemTemplate" />
      </Docs>
    </Member>
    <Member MemberName="InitializeCell">
      <MemberSignature Language="C#" Value="public override void InitializeCell (System.Web.UI.WebControls.DataControlFieldCell cell, System.Web.UI.WebControls.DataControlCellType cellType, System.Web.UI.WebControls.DataControlRowState rowState, int rowIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void InitializeCell(class System.Web.UI.WebControls.DataControlFieldCell cell, valuetype System.Web.UI.WebControls.DataControlCellType cellType, valuetype System.Web.UI.WebControls.DataControlRowState rowState, int32 rowIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TemplateField.InitializeCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlCellType,System.Web.UI.WebControls.DataControlRowState,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub InitializeCell (cell As DataControlFieldCell, cellType As DataControlCellType, rowState As DataControlRowState, rowIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void InitializeCell(System::Web::UI::WebControls::DataControlFieldCell ^ cell, System::Web::UI::WebControls::DataControlCellType cellType, System::Web::UI::WebControls::DataControlRowState rowState, int rowIndex);" />
      <MemberSignature Language="F#" Value="override this.InitializeCell : System.Web.UI.WebControls.DataControlFieldCell * System.Web.UI.WebControls.DataControlCellType * System.Web.UI.WebControls.DataControlRowState * int -&gt; unit" Usage="templateField.InitializeCell (cell, cellType, rowState, rowIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cell" Type="System.Web.UI.WebControls.DataControlFieldCell" />
        <Parameter Name="cellType" Type="System.Web.UI.WebControls.DataControlCellType" />
        <Parameter Name="rowState" Type="System.Web.UI.WebControls.DataControlRowState" />
        <Parameter Name="rowIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="cell">一个 <see cref="T:System.Web.UI.WebControls.DataControlFieldCell" />，包含 <see cref="T:System.Web.UI.WebControls.DataControlField" /> 的文本或控件。</param>
        <param name="cellType"><see cref="T:System.Web.UI.WebControls.DataControlCellType" /> 值之一。</param>
        <param name="rowState"><see cref="T:System.Web.UI.WebControls.DataControlRowState" /> 值之一，指定包含 <see cref="T:System.Web.UI.WebControls.DataControlFieldCell" /> 的行的状态。</param>
        <param name="rowIndex">包含 <see cref="T:System.Web.UI.WebControls.DataControlFieldCell" /> 的行的索引。</param>
        <summary>将文本或控件添加到单元格的控件集合中。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 当创建一个自定义数据绑定控件时，请调用此方法，该控件使用 <xref:System.Web.UI.WebControls.DataControlFieldCell> 对象初始化包含数据或控件的表结构的单元格。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TemplateField" />
        <altmember cref="T:System.Web.UI.WebControls.GridView" />
        <altmember cref="T:System.Web.UI.WebControls.DetailsView" />
      </Docs>
    </Member>
    <Member MemberName="InsertItemTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate InsertItemTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate InsertItemTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TemplateField.InsertItemTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property InsertItemTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ InsertItemTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberSignature Language="F#" Value="member this.InsertItemTemplate : System.Web.UI.ITemplate with get, set" Usage="System.Web.UI.WebControls.TemplateField.InsertItemTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(null)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(null)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.TemplateContainer(typeof(System.Web.UI.IDataItemContainer), System.ComponentModel.BindingDirection.TwoWay)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.TemplateContainer(typeof(System.Web.UI.IDataItemContainer), System.ComponentModel.BindingDirection.TwoWay)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置模板，该模板用于显示 <see cref="T:System.Web.UI.WebControls.TemplateField" /> 对象中处于插入模式中的项。</summary>
        <value>一个实现了 <see cref="T:System.Web.UI.ITemplate" /> 的对象，该对象包含用于显示 <see cref="T:System.Web.UI.WebControls.TemplateField" /> 中处于插入模式的项的模板。 默认值为 <see langword="null" />，指示未设置此属性。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用 " <xref:System.Web.UI.WebControls.TemplateField.InsertItemTemplate%2A> 属性" 指定为对象中的 "插入" 模式下的项显示的自定义内容 <xref:System.Web.UI.WebControls.TemplateField> 。 通过创建一个模板来定义内容，该模板指定如何呈现处于插入模式的项。  
  
 若要指定模板，请先在 `<InsertItemTemplate>` 元素的开始标记和结束标记之间放置开始标记和结束标记 `<TemplateField>` 。 接下来，在开始标记和结束标记之间添加自定义内容 `<InsertItemTemplate>` 。 内容可以与纯文本或更复杂 (嵌入模板中的其他控件一样简单，例如) 。  
  
 若要以编程方式访问在模板中定义的控件，首先要确定 <xref:System.Web.UI.WebControls.TableCell> 数据绑定控件中包含控件的对象。 接下来，使用 <xref:System.Web.UI.Control.Controls%2A> 对象的集合 <xref:System.Web.UI.WebControls.TableCell> 访问该控件。 <xref:System.Web.UI.Control.FindControl%2A> <xref:System.Web.UI.WebControls.TableCell> 如果控件具有指定的属性，则还可以使用对象的方法来查找控件 <xref:System.Web.UI.Control.ID%2A> 。  
  
> [!NOTE]
>  并非所有数据绑定控件都支持此模板仅允许插入记录的数据绑定控件（如控件）支持此模板 <xref:System.Web.UI.WebControls.DetailsView> 。  
  
   
  
## Examples  
 下面的代码示例演示如何使用 <xref:System.Web.UI.WebControls.TemplateField.InsertItemTemplate%2A> 属性为控件中的字段行中的 "插入" 模式下的项创建自定义模板 <xref:System.Web.UI.WebControls.TemplateField> <xref:System.Web.UI.WebControls.DetailsView> 。 该模板显示一个 <xref:System.Web.UI.WebControls.DropDownList> 控件，该控件允许用户从预定义列表中选择值。  
  
 [!code-aspx-csharp[TemplateFieldInsertItemTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TemplateFieldInsertItemTemplate/CS/templatefieldinsertitemtemplatecs.aspx#1)]
 [!code-aspx-vb[TemplateFieldInsertItemTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TemplateFieldInsertItemTemplate/VB/templatefieldinsertitemtemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.TemplateField.AlternatingItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.TemplateField.EditItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.TemplateField.FooterTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.TemplateField.HeaderTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.TemplateField.ItemTemplate" />
      </Docs>
    </Member>
    <Member MemberName="ItemTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate ItemTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate ItemTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TemplateField.ItemTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ItemTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ ItemTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ItemTemplate : System.Web.UI.ITemplate with get, set" Usage="System.Web.UI.WebControls.TemplateField.ItemTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(null)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(null)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.TemplateContainer(typeof(System.Web.UI.IDataItemContainer), System.ComponentModel.BindingDirection.TwoWay)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.TemplateContainer(typeof(System.Web.UI.IDataItemContainer), System.ComponentModel.BindingDirection.TwoWay)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置用于显示数据绑定控件中的项的模板。</summary>
        <value>一个实现了 <see cref="T:System.Web.UI.ITemplate" /> 的对象，该对象包含用于显示 <see cref="T:System.Web.UI.WebControls.TemplateField" /> 中的项的模板。 默认值为 <see langword="null" />，指示未设置此属性。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用 <xref:System.Web.UI.WebControls.TemplateField.ItemTemplate%2A> 属性指定为对象中的项显示的自定义内容 <xref:System.Web.UI.WebControls.TemplateField> 。 通过创建指定如何呈现项的模板来定义内容。  
  
> [!NOTE]
>  您可以选择将 <xref:System.Web.UI.WebControls.TemplateField.AlternatingItemTemplate%2A> 属性与属性结合使用 <xref:System.Web.UI.WebControls.TemplateField.ItemTemplate%2A> ，为数据绑定控件中的每个其他项创建不同的外观。  
  
 若要指定模板，请先在 `<ItemTemplate>` 元素的开始标记和结束标记之间放置开始标记和结束标记 `<TemplateField>` 。 接下来，在开始标记和结束标记之间添加自定义内容 `<ItemTemplate>` 。 内容可以与纯文本或更复杂 (嵌入模板中的其他控件一样简单，例如) 。  
  
 若要以编程方式访问在模板中定义的控件，首先要确定 <xref:System.Web.UI.WebControls.TableCell> 数据绑定控件中包含控件的对象。 接下来，使用 <xref:System.Web.UI.Control.Controls%2A> 对象的集合 <xref:System.Web.UI.WebControls.TableCell> 访问该控件。 <xref:System.Web.UI.Control.FindControl%2A> <xref:System.Web.UI.WebControls.TableCell> 如果控件具有指定的属性，则还可以使用对象的方法来查找控件 <xref:System.Web.UI.Control.ID%2A> 。  
  
   
  
## Examples  
 下面的代码示例演示如何使用 <xref:System.Web.UI.WebControls.TemplateField.ItemTemplate%2A> 属性为控件中的字段项创建自定义模板 <xref:System.Web.UI.WebControls.TemplateField> <xref:System.Web.UI.WebControls.GridView> 。 模板在控件中显示字段的值 <xref:System.Web.UI.WebControls.RadioButtonList> 。  
  
 [!code-aspx-csharp[TemplateFieldItemTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TemplateFieldItemTemplate/CS/templatefielditemtemplatecs.aspx#1)]
 [!code-aspx-vb[TemplateFieldItemTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TemplateFieldItemTemplate/VB/templatefielditemtemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.TemplateField.AlternatingItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.TemplateField.EditItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.TemplateField.FooterTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.TemplateField.HeaderTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.TemplateField.InsertItemTemplate" />
      </Docs>
    </Member>
    <Member MemberName="ValidateRequestMode">
      <MemberSignature Language="C#" Value="public System.Web.UI.ValidateRequestMode ValidateRequestMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.ValidateRequestMode ValidateRequestMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TemplateField.ValidateRequestMode" />
      <MemberSignature Language="VB.NET" Value="Public Property ValidateRequestMode As ValidateRequestMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::ValidateRequestMode ValidateRequestMode { System::Web::UI::ValidateRequestMode get(); void set(System::Web::UI::ValidateRequestMode value); };" />
      <MemberSignature Language="F#" Value="member this.ValidateRequestMode : System.Web.UI.ValidateRequestMode with get, set" Usage="System.Web.UI.WebControls.TemplateField.ValidateRequestMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ValidateRequestMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指定该控件是否验证客户端输入。</summary>
        <value>如果控件验证客户端输入，则为 <see langword="true" />；否则为 <see langword="false" />。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidateSupportsCallback">
      <MemberSignature Language="C#" Value="public override void ValidateSupportsCallback ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ValidateSupportsCallback() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TemplateField.ValidateSupportsCallback" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub ValidateSupportsCallback ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void ValidateSupportsCallback();" />
      <MemberSignature Language="F#" Value="override this.ValidateSupportsCallback : unit -&gt; unit" Usage="templateField.ValidateSupportsCallback " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>确定包含在 <see cref="T:System.Web.UI.WebControls.TemplateField" /> 对象中的控件是否支持页面回调。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.TemplateField.ValidateSupportsCallback%2A>此类不支持此方法，始终引发 <xref:System.NotSupportedException> 异常。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">调用该方法的默认实现。</exception>
        <block subset="none" type="overrides"><para>从类派生的类 <see cref="T:System.Web.UI.WebControls.TemplateField" /> 可以重写此方法，以指示字段包含的控件是否支持回调。 若要指示支持回调，请将此方法实现为空方法，该方法不会引发异常;否则，将引发异常，并提供有用的消息，说明不支持回调的原因。</para></block>
        <altmember cref="T:System.Web.UI.WebControls.TemplateField" />
        <altmember cref="T:System.Web.UI.WebControls.GridView" />
        <altmember cref="T:System.Web.UI.WebControls.DetailsView" />
      </Docs>
    </Member>
  </Members>
</Type>
