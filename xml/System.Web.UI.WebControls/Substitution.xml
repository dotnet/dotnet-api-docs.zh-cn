<Type Name="Substitution" FullName="System.Web.UI.WebControls.Substitution">
  <Metadata><Meta Name="ms.openlocfilehash" Value="578038f01d66faa85af3dab8102e36e1413ccb30" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89908159" /></Metadata><TypeSignature Language="C#" Value="public class Substitution : System.Web.UI.Control" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Substitution extends System.Web.UI.Control" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.Substitution" />
  <TypeSignature Language="VB.NET" Value="Public Class Substitution&#xA;Inherits Control" />
  <TypeSignature Language="C++ CLI" Value="public ref class Substitution : System::Web::UI::Control" />
  <TypeSignature Language="F#" Value="type Substitution = class&#xA;    inherit Control" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.Control</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.ComponentModel.DefaultProperty("MethodName")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultProperty("MethodName")&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName Language="C#">[System.ComponentModel.Designer("System.Web.UI.Design.WebControls.SubstitutionDesigner, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.ComponentModel.Designer("System.Web.UI.Design.WebControls.SubstitutionDesigner, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Web.UI.ParseChildren(true)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Web.UI.ParseChildren(true)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Web.UI.PersistChildren(false)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Web.UI.PersistChildren(false)&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName Language="C#">[System.ComponentModel.Designer("System.Web.UI.Design.WebControls.SubstitutionDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.ComponentModel.Designer("System.Web.UI.Design.WebControls.SubstitutionDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>指定缓存输出的网页上的一个部分，该网页不受缓存限制。 在此位置为 <see cref="T:System.Web.UI.WebControls.Substitution" /> 控件检索和替换动态内容。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 本主题内容：  
  
-   [介绍](#introduction)  
  
-   [声明性语法](#declarative_syntax)  
  
<a name="introduction"></a>   
## <a name="introduction"></a>介绍  
 使用 <xref:System.Web.UI.WebControls.Substitution> 控件可以指定输出缓存的网页上的一个部分，该网页需要用来替换控件的动态内容。 <xref:System.Web.UI.WebControls.Substitution>对于大部分内容缓存的页面，控件都为部分页面缓存提供简化的解决方案。 您可以输出缓存整个页面，然后使用 <xref:System.Web.UI.WebControls.Substitution> 控件指定不受缓存控制的页面部分。 缓存区域只执行一次，并从缓存中重播，直到缓存项过期或被清除为止。 每次请求页面时，都会执行动态区域。 此缓存模型简化了主要为静态的页的代码，因为无需将节封装到 Web 用户控件中。 例如，此缓存模型对于包含静态内容（如新闻报道）和显示广告的控件的页面非常有用 <xref:System.Web.UI.WebControls.AdRotator> 。 新闻故事不会更改，这意味着可以对其进行缓存。 但是，用户每次请求页面时，都要显示新的广告。 <xref:System.Web.UI.WebControls.AdRotator>控件直接支持缓存后替换，并在每次回发页面时呈现新广告，无论页面是否已缓存。  
  
> [!NOTE]
>  可以将控件放置 <xref:System.Web.UI.WebControls.Substitution> 在包含在缓存页中的用户控件中。 但是，不能将 <xref:System.Web.UI.WebControls.Substitution> 控件放置在输出缓存的用户控件中。  
  
 当 <xref:System.Web.UI.WebControls.Substitution> 控件执行时，它会调用返回字符串的方法。 此方法返回的字符串是要在控件位置的页面上显示的内容 <xref:System.Web.UI.WebControls.Substitution> 。 使用 <xref:System.Web.UI.WebControls.Substitution.MethodName%2A> 属性指定在执行控件时要调用的回调方法的名称 <xref:System.Web.UI.WebControls.Substitution> 。 指定的回调方法必须是包含该控件的页或用户控件上的静态方法 <xref:System.Web.UI.WebControls.Substitution> 。 回调方法的签名必须与 <xref:System.Web.HttpResponseSubstitutionCallback> 采用 <xref:System.Web.HttpContext> 参数并返回字符串的委托的签名匹配。  
  
 若要为页面操作输出缓存，可以使用 [@ OutputCache](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/hdxfb6cy(v=vs.100)) 指令、 <xref:System.Web.HttpCachePolicy> 类或 <xref:System.Web.HttpResponse.Cache%2A> 属性。 有关缓存页面的详细信息，请参阅 [缓存 ASP.NET 页面](https://docs.microsoft.com/previous-versions/aspnet/06bh14hk(v=vs.100)) 和 [缓存 ASP.NET 页面的部分](https://docs.microsoft.com/previous-versions/aspnet/h30h475z(v=vs.100))。  
  
 作为使用控件的替代方法 <xref:System.Web.UI.WebControls.Substitution> ，还可以使用委托获取替换缓存行为 <xref:System.Web.HttpResponseSubstitutionCallback> 。 此外，还可以获取 <xref:System.Web.UI.WebControls.AdRotator> 直接支持此功能的控件（如控件）的替换缓存行为。 有关详细信息，请参阅 [动态更新部分缓存页](https://docs.microsoft.com/previous-versions/aspnet/ms227429(v=vs.100))。  
  
<a name="declarative_syntax"></a>   
## <a name="declarative-syntax"></a>声明性语法  
  
```  
<asp:Substitution  
    EnableTheming="True|False"  
    EnableViewState="True|False"  
    ID="string"  
    MethodName="string"  
    OnDataBinding="DataBinding event handler"  
    OnDisposed="Disposed event handler"  
    OnInit="Init event handler"  
    OnLoad="Load event handler"  
    OnPreRender="PreRender event handler"  
    OnUnload="Unload event handler"  
    runat="server"  
    SkinID="string"  
    Visible="True|False"  
/>  
```  
  
   
  
## Examples  
 下面的代码示例演示如何以 <xref:System.Web.UI.WebControls.Substitution> 声明方式将控件添加到输出缓存的网页中。 加载页面时，将在标签中向用户显示当前日期和时间。 页面的此部分缓存并仅每60秒更新一次。 当 <xref:System.Web.UI.WebControls.Substitution> 控件执行时，它将调用 `GetCurrentDateTime` 方法。 返回的字符串 `GetCurrentDateTime` 将显示给用户。 页面的此部分不会缓存，并在每次刷新页面时更新。  
  
 [!code-aspx-csharp[SubstitutionsClass1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/SubstitutionsClass1/CS/substitutionclass1cs.aspx#1)]
 [!code-aspx-vb[SubstitutionsClass1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/SubstitutionsClass1/VB/substitutionclass1vb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.Web.UI.WebControls.Substitution.MethodName" />
    <altmember cref="T:System.Web.HttpResponseSubstitutionCallback" />
    <altmember cref="T:System.Web.HttpContext" />
    <altmember cref="T:System.Web.HttpCachePolicy" />
    <altmember cref="P:System.Web.HttpResponse.Cache" />
    <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms228212(v=vs.100)">替换 Web 服务器控件</related>
    <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/xsbfdd8c(v=vs.100)">ASP.NET Caching</related>
    <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/06bh14hk(v=vs.100)">缓存 ASP.NET 页</related>
    <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/h30h475z(v=vs.100)">缓存 ASP.NET 页面的部分</related>
    <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms227429(v=vs.100)">动态更新缓存页面的部分</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Substitution ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Substitution.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Substitution();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Web.UI.WebControls.Substitution" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用 <xref:System.Web.UI.WebControls.Substitution.%23ctor%2A> 构造函数来创建和初始化类的新实例 <xref:System.Web.UI.WebControls.Substitution> 。  
  
   
  
## Examples  
 下面的代码示例演示如何以 <xref:System.Web.UI.WebControls.Substitution> 编程方式将控件添加到输出缓存的网页中。 加载页面时，将在标签中向用户显示当前日期和时间。 页面的此部分缓存并仅每60秒更新一次。 当 <xref:System.Web.UI.WebControls.Substitution> 控件执行时，它将调用 `GetCurrentDateTime` 方法。 返回的字符串 `GetCurrentDateTime` 将显示给用户。 页面的此部分不会缓存，并在每次刷新页面时更新。  
  
 [!code-aspx-csharp[SubstitutionCstr#1](~/samples/snippets/csharp/VS_Snippets_WebNet/SubstitutionCstr/CS/substitutioncstrcs.aspx#1)]
 [!code-aspx-vb[SubstitutionCstr#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/SubstitutionCstr/VB/substitutioncstrvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms228212(v=vs.100)">替换 Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="CreateControlCollection">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.ControlCollection CreateControlCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.ControlCollection CreateControlCollection() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Substitution.CreateControlCollection" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateControlCollection () As ControlCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Web::UI::ControlCollection ^ CreateControlCollection();" />
      <MemberSignature Language="F#" Value="override this.CreateControlCollection : unit -&gt; System.Web.UI.ControlCollection" Usage="substitution.CreateControlCollection " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.ControlCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>返回一个 <see cref="T:System.Web.UI.EmptyControlCollection" /> 对象，该对象指示 <see cref="T:System.Web.UI.WebControls.Substitution" /> 控件不支持子控件。</summary>
        <returns><see cref="T:System.Web.UI.EmptyControlCollection" />，指示该控件不支持子控件。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Substitution.CreateControlCollection%2A>方法通常用于创建 <xref:System.Web.UI.ControlCollection> 用于存储控件的子控件的对象。 控件的方法的实现 <xref:System.Web.UI.WebControls.Substitution.CreateControlCollection%2A> <xref:System.Web.UI.WebControls.Substitution> 始终返回 <xref:System.Web.UI.EmptyControlCollection> 对象，以指示该 <xref:System.Web.UI.WebControls.Substitution> 控件不支持子控件。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>扩展控件时 <see cref="T:System.Web.UI.WebControls.Substitution" /> ，可以 <see cref="M:System.Web.UI.WebControls.Substitution.CreateControlCollection" /> 在派生类中重写方法，以支持子控件。</para></block>
        <altmember cref="T:System.Web.UI.EmptyControlCollection" />
        <altmember cref="T:System.Web.UI.ControlCollection" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms228212(v=vs.100)">替换 Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="MethodName">
      <MemberSignature Language="C#" Value="public virtual string MethodName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MethodName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Substitution.MethodName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property MethodName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ MethodName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.MethodName : string with get, set" Usage="System.Web.UI.WebControls.Substitution.MethodName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue("")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue("")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置要在 <see cref="T:System.Web.UI.WebControls.Substitution" /> 控件执行时调用的回调方法的名称。</summary>
        <value>字符串，表示要在 <see cref="T:System.Web.UI.WebControls.Substitution" /> 控件执行时调用的方法的名称。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用 <xref:System.Web.UI.WebControls.Substitution.MethodName%2A> 属性指定在执行控件时要调用的回调方法的名称 <xref:System.Web.UI.WebControls.Substitution> 。 指定的回调方法必须是包含该控件的页或用户控件上的静态方法 <xref:System.Web.UI.WebControls.Substitution> 。 回调方法的签名必须与 <xref:System.Web.HttpResponseSubstitutionCallback> 采用 <xref:System.Web.HttpContext> 参数并返回字符串的委托的签名匹配。 回调方法返回的字符串是要在控件位置的页面上显示的内容 <xref:System.Web.UI.WebControls.Substitution> 。  
  
 <xref:System.Web.HttpContext>参数封装有关单个 http 请求的所有 http 特定的信息。 你可以使用它来访问会话变量、授权信息和个性化设置详细信息。 有关详细信息，请参阅 <xref:System.Web.HttpResponseSubstitutionCallback>。  
  
   
  
## Examples  
 下面的代码示例演示如何以 <xref:System.Web.UI.WebControls.Substitution> 声明方式将控件添加到输出缓存的网页中。 加载页面时，将向用户显示静态项目符号列表。 页面的此部分缓存并仅每60秒更新一次。 当 <xref:System.Web.UI.WebControls.Substitution> 控件执行时，它会调用 `GetUser` 方法，该方法将返回表示当前用户的字符串。 此字符串显示在 <xref:System.Web.UI.WebControls.Substitution> 页面上的控件位置。 页面的此部分不会缓存，并在每次刷新页面时更新。  
  
 [!code-aspx-csharp[Substitution.MethodName#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Substitution.MethodName/CS/substitution.methodnamecs.aspx#1)]
 [!code-aspx-vb[Substitution.MethodName#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Substitution.MethodName/VB/substitution.methodnamevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.HttpResponseSubstitutionCallback" />
        <altmember cref="T:System.Web.HttpContext" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms228212(v=vs.100)">替换 Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="OnPreRender">
      <MemberSignature Language="C#" Value="protected internal override void OnPreRender (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnPreRender(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Substitution.OnPreRender(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnPreRender (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnPreRender(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnPreRender : EventArgs -&gt; unit" Usage="substitution.OnPreRender e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件数据的 <see cref="T:System.EventArgs" /> 对象。</param>
        <summary>引发 <see cref="E:System.Web.UI.Control.PreRender" /> 事件。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Web.HttpException">对父控件或母版页进行了缓存。</exception>
        <altmember cref="M:System.Web.UI.Control.OnPreRender(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="protected internal override void Render (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Render(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Substitution.Render(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub Render (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void Render(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.Render : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="substitution.Render writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">用于接收服务器控件内容的 <see cref="T:System.Web.UI.HtmlTextWriter" /> 对象。</param>
        <summary>将服务器控件内容发送到给定的 <see cref="T:System.Web.UI.HtmlTextWriter" /> 对象，该对象可编写将在客户端呈现的内容。</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.UI.Control.Render(System.Web.UI.HtmlTextWriter)" />
      </Docs>
    </Member>
  </Members>
</Type>
