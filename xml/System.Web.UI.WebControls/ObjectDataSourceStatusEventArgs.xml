<Type Name="ObjectDataSourceStatusEventArgs" FullName="System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs">
  <Metadata><Meta Name="ms.openlocfilehash" Value="3318aa8836cb05682ec76be4e4ebeb6083a0aa91" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86625844" /></Metadata><TypeSignature Language="C#" Value="public class ObjectDataSourceStatusEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ObjectDataSourceStatusEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class ObjectDataSourceStatusEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class ObjectDataSourceStatusEventArgs : EventArgs" />
  <TypeSignature Language="F#" Value="type ObjectDataSourceStatusEventArgs = class&#xA;    inherit EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>为 <see cref="E:System.Web.UI.WebControls.ObjectDataSource.Selected" /> 控件的 <see cref="E:System.Web.UI.WebControls.ObjectDataSource.Inserted" />、<see cref="E:System.Web.UI.WebControls.ObjectDataSource.Updated" />、<see cref="E:System.Web.UI.WebControls.ObjectDataSource.Deleted" /> 和 <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> 事件提供数据。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>类在 <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnSelected%2A> 、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnUpdated%2A> 、和方法中使用， <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnInserted%2A> <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnDeleted%2A> 以提供对由控件调用的方法所引发的输出参数、返回值和异常的访问 <xref:System.Web.UI.WebControls.ObjectDataSource> 。 它们 <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.OutputParameters%2A> 分别由、 <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.ReturnValue%2A> 和 <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.Exception%2A> 属性访问。 通过添加委托来处理 <xref:System.Web.UI.WebControls.ObjectDataSource.Selected> 、 <xref:System.Web.UI.WebControls.ObjectDataSource.Updated> 、 <xref:System.Web.UI.WebControls.ObjectDataSource.Inserted> 或 <xref:System.Web.UI.WebControls.ObjectDataSource.Deleted> 事件，可以检查此数据并执行所需的任何其他 post 处理。  
  
 <xref:System.Web.UI.WebControls.ObjectDataSource>控件公开了许多事件，您可以处理这些事件，以便在其生命周期中的不同时间使用基础业务对象。 下表列出了事件以及关联的 <xref:System.EventArgs> 类和事件处理程序委托。  
  
|事件|EventArgs|EventHandler|  
|-----------|---------------|------------------|  
|<xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating>.<br /><br /> 在创建业务对象的实例之前立即发生。|<xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs>|<xref:System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler>|  
|<xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated>.<br /><br /> 在创建业务对象的实例之后立即发生。|<xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs>|<xref:System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler>|  
|<xref:System.Web.UI.WebControls.ObjectDataSource.Selecting>.<br /><br /> 在检索数据之前发生。|<xref:System.Web.UI.WebControls.ObjectDataSourceSelectingEventArgs>|<xref:System.Web.UI.WebControls.ObjectDataSourceSelectingEventHandler>|  
|<xref:System.Web.UI.WebControls.ObjectDataSource.Inserting>、 <xref:System.Web.UI.WebControls.ObjectDataSource.Updating>和 <xref:System.Web.UI.WebControls.ObjectDataSource.Deleting>。<br /><br /> 在执行插入、更新或删除操作之前发生。|<xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs>|<xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler>|  
|<xref:System.Web.UI.WebControls.ObjectDataSource.Selected>.<br /><br /> 在检索数据后发生。|<xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>|<xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler>|  
|<xref:System.Web.UI.WebControls.ObjectDataSource.Inserted>、 <xref:System.Web.UI.WebControls.ObjectDataSource.Updated>和 <xref:System.Web.UI.WebControls.ObjectDataSource.Deleted>。<br /><br /> 完成插入、更新或删除操作后发生。|<xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>|<xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler>|  
|<xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing>.<br /><br /> 在销毁业务对象之前发生。|<xref:System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs>|<xref:System.Web.UI.WebControls.ObjectDataSourceDisposingEventHandler>|  
  
   
  
## Examples  
 本部分包含两个代码示例。 第一个代码示例演示如何将 <xref:System.Web.UI.WebControls.ObjectDataSource> 控件与业务对象和控件结合使用 <xref:System.Web.UI.WebControls.GridView> 来删除数据。 第二个代码示例提供了第一个代码示例使用的中间层业务对象示例。  
  
 下面的代码示例演示如何将 <xref:System.Web.UI.WebControls.ObjectDataSource> 控件与业务对象和控件结合使用 <xref:System.Web.UI.WebControls.GridView> 来删除数据。 <xref:System.Web.UI.WebControls.GridView>最初使用由属性指定的方法 <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> 从对象中检索数据，从而显示一组所有雇员 `EmployeeLogic` 。 由于 <xref:System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton%2A> 属性设置为，因此 `true` 该 <xref:System.Web.UI.WebControls.GridView> 控件会自动显示 " **删除** " 按钮。  
  
 如果单击 " **删除** " 按钮，则将 <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> 使用属性指定的方法 <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> 和集合中指定的任何参数执行该操作 <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A> 。 在此代码示例中，在 <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A> 与员工 ID 相对应的集合中指定一个参数。 这是因为，虽然该 ID <xref:System.Windows.Forms.DataGridView.Columns%2A> 作为对象包含在集合中 <xref:System.Web.UI.WebControls.BoundField> ，但它将以字符串的形式传递到 <xref:System.Web.UI.WebControls.ObjectDataSource> 控件。 通过将其显式添加到 <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A> 集合，并将 <xref:System.Web.UI.WebControls.Parameter.Type%2A> 属性设置为 <xref:System.TypeCode.Int32> 值，它将 <xref:System.Web.UI.WebControls.ObjectDataSource> 以整数形式（而不是字符串）将传递给方法。  
  
 在此代码示例中，还执行了一些预处理和后处理步骤。 在 `NorthwindEmployeeDeleting` 执行操作之前调用委托来处理 <xref:System.Web.UI.WebControls.ObjectDataSource.Deleting> 事件 <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> ，并在 `NorthwindEmployeeDeleted` 操作完成后调用委托来处理 <xref:System.Web.UI.WebControls.ObjectDataSource.Deleted> 事件 <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> ，以处理可能已发生的任何异常。 `NorthwindEmployeeDeleted`委托访问正在使用对象的业务对象引发的可能异常 <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs> 。 在此示例中，如果 `NorthwindDataException` 引发了，则由该委托处理。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_10#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/CS/objds10cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_10#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/VB/objds10vb.aspx#1)]  
  
 下面的代码示例提供了前面的代码示例使用的中间层业务对象示例。 下面的列表描述了代码示例中定义的两个主要类：  
  
-   `EmployeeLogic`类是不维护状态并封装业务逻辑的类。  
  
-   `NorthwindEmployee`类是一个模型类，其中只包含从数据层加载和保存数据所需的基本功能。  
  
 此外，还提供了一个 `NorthwindDataException` 方便的类。  
  
 这组示例类使用 Northwind 商贸数据库，这是一个可用于 Microsoft SQL Server 和 Microsoft Access 的示例数据库。 对于完整的工作示例，你必须将此代码编译为库，然后从 ASP 页中使用这些类。 在前面的示例中提供的 ASP 页配置为使用此类库。  `UpdateEmployeeInfo`方法未完全实现，因此当您试验此示例时，不会将数据插入 Northwind 商贸数据库中。  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_10#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/CS/northwindemployee10.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_10#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/VB/northwindemployee10.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.ObjectDataSource" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>初始化 <see cref="T:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs" /> 类的新实例。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ObjectDataSourceStatusEventArgs (object returnValue, System.Collections.IDictionary outputParameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object returnValue, class System.Collections.IDictionary outputParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.#ctor(System.Object,System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (returnValue As Object, outputParameters As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ObjectDataSourceStatusEventArgs(System::Object ^ returnValue, System::Collections::IDictionary ^ outputParameters);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs : obj * System.Collections.IDictionary -&gt; System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs" Usage="new System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs (returnValue, outputParameters)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="returnValue" Type="System.Object" />
        <Parameter Name="outputParameters" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="returnValue">一个表示已完成的数据库操作的返回值的对象。</param>
        <param name="outputParameters">Parameter 对象的名称/值对的 <see cref="T:System.Collections.IDictionary" />。</param>
        <summary>使用指定的输出参数和返回值初始化 <see cref="T:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `returnValue`参数可以是通过调用业务对象数据方法返回的任何对象。 `outputParameters`参数是 <xref:System.Collections.IDictionary> 名称/值对的集合，这些名称/值对与方法签名中的匹配，并按引用传递。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.OutputParameters" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.ReturnValue" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ObjectDataSourceStatusEventArgs (object returnValue, System.Collections.IDictionary outputParameters, Exception exception);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object returnValue, class System.Collections.IDictionary outputParameters, class System.Exception exception) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.#ctor(System.Object,System.Collections.IDictionary,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (returnValue As Object, outputParameters As IDictionary, exception As Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ObjectDataSourceStatusEventArgs(System::Object ^ returnValue, System::Collections::IDictionary ^ outputParameters, Exception ^ exception);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs : obj * System.Collections.IDictionary * Exception -&gt; System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs" Usage="new System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs (returnValue, outputParameters, exception)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="returnValue" Type="System.Object" />
        <Parameter Name="outputParameters" Type="System.Collections.IDictionary" />
        <Parameter Name="exception" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="returnValue">一个表示已完成的数据库操作的返回值的对象。</param>
        <param name="outputParameters">Parameter 对象的名称/值对的 <see cref="T:System.Collections.IDictionary" />。</param>
        <param name="exception">一个 <see cref="T:System.Exception" />，包装在方法调用期间引发的任何内部异常。</param>
        <summary>使用指定的输出参数、返回值和异常初始化 <see cref="T:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `returnValue`参数可以是通过调用业务对象数据方法返回的任何对象。 `outputParameters`参数是 <xref:System.Collections.IDictionary> 名称/值对的集合，这些名称/值对与方法签名中的匹配，并按引用传递。 `exception`参数是一个 <xref:System.Exception> 异常，该异常包装在 <xref:System.Web.UI.WebControls.ObjectDataSource> 数据操作过程中由控件调用的方法所引发的任何异常。 如果异常不是由 <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnSelected%2A> 、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnUpdated%2A> 、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnInserted%2A> 或方法处理的，则它在 <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnDeleted%2A> <xref:System.Web.UI.WebControls.ObjectDataSource> 数据操作返回后由控件引发。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.OutputParameters" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.ReturnValue" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.Exception" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.ExceptionHandled" />
      </Docs>
    </Member>
    <Member MemberName="AffectedRows">
      <MemberSignature Language="C#" Value="public int AffectedRows { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 AffectedRows" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.AffectedRows" />
      <MemberSignature Language="VB.NET" Value="Public Property AffectedRows As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int AffectedRows { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.AffectedRows : int with get, set" Usage="System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.AffectedRows" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置受数据操作影响的行的数目。</summary>
        <value>受数据操作影响的行的数目。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用 <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.AffectedRows%2A> 值验证预计的行数是否受影响。  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.Selected" />
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.Inserted" />
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.Updated" />
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.Deleted" />
      </Docs>
    </Member>
    <Member MemberName="Exception">
      <MemberSignature Language="C#" Value="public Exception Exception { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Exception Exception" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.Exception" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Exception As Exception" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Exception ^ Exception { Exception ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Exception : Exception" Usage="System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.Exception" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取在数据操作期间由 <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> 控件调用的方法所引发的任何异常的包装。</summary>
        <value>一个 <see cref="T:System.Exception" />，将业务对象引发的任何异常包装到其 <see cref="P:System.Exception.InnerException" /> 内。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此 <xref:System.Exception> 异常不表示业务对象数据方法引发的实际异常。 您可以使用 <xref:System.Exception.InnerException%2A> 属性来访问引发的异常。  
  
   
  
## Examples  
 下面的代码示例演示如何将 <xref:System.Web.UI.WebControls.ObjectDataSource> 控件与业务对象和控件结合使用 <xref:System.Web.UI.WebControls.GridView> 来删除数据。 <xref:System.Web.UI.WebControls.GridView>最初使用由属性指定的方法 <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> 从对象中检索数据，从而显示一组所有雇员 `EmployeeLogic` 。 由于 <xref:System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton%2A> 属性设置为，因此 `true` 该 <xref:System.Web.UI.WebControls.GridView> 控件会自动显示 " **删除** " 按钮。  
  
 如果单击 " **删除** " 按钮，则将 <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> 使用属性指定的方法 <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> 和集合中指定的任何参数执行该操作 <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A> 。  
  
 在此代码示例中，还执行了一些预处理和后处理步骤。 在 `NorthwindEmployeeDeleting` 执行操作之前调用委托来处理 <xref:System.Web.UI.WebControls.ObjectDataSource.Deleting> 事件 <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> ，并在 `NorthwindEmployeeDeleted` 操作完成后调用委托来处理 <xref:System.Web.UI.WebControls.ObjectDataSource.Deleted> 事件 <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> ，以便执行任何异常处理。 在此示例中，如果 `NorthwindDataException` 引发了，则由委托进行处理 `NorthwindEmployeeDeleted` 。  
  
 若要检查 `EmployeeLogic` 此代码示例使用的中间层业务对象的实现，请参阅中的类概述 <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs> 。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_10#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/CS/objds10cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_10#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/VB/objds10vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.ExceptionHandled" />
      </Docs>
    </Member>
    <Member MemberName="ExceptionHandled">
      <MemberSignature Language="C#" Value="public bool ExceptionHandled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ExceptionHandled" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.ExceptionHandled" />
      <MemberSignature Language="VB.NET" Value="Public Property ExceptionHandled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ExceptionHandled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ExceptionHandled : bool with get, set" Usage="System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.ExceptionHandled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示业务对象引发的异常是否已得到处理。</summary>
        <value>如果业务对象引发的异常已得到处理并且不应由 <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> 引发，则为 <see langword="true" />；否则为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果业务对象引发异常，则将 <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.ExceptionHandled%2A> 属性设置为 `false` ，并且该异常由 <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.Exception%2A> 属性包装。 如果使用 <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler> 对象，则可以检查 <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.Exception%2A> 属性并处理异常。 如果处理异常，请将属性设置 <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.ExceptionHandled%2A> 为， `true` 否则 <xref:System.Web.UI.WebControls.ObjectDataSource> 控件将引发异常。  
  
   
  
## Examples  
 下面的代码示例演示如何将 <xref:System.Web.UI.WebControls.ObjectDataSource> 控件与业务对象和控件结合使用 <xref:System.Web.UI.WebControls.GridView> 来删除数据。 <xref:System.Web.UI.WebControls.GridView>最初使用由属性指定的方法 <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> 从对象中检索数据，从而显示一组所有雇员 `EmployeeLogic` 。 由于 <xref:System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton%2A> 属性设置为，因此 `true` 该 <xref:System.Web.UI.WebControls.GridView> 控件会自动显示 " **删除** " 按钮。  
  
 如果单击 " **删除** " 按钮，则将 <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> 使用属性指定的方法 <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> 和集合中指定的任何参数执行该操作 <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A> 。 在此代码示例中，还执行了一些预处理和后处理步骤。 在 `NorthwindEmployeeDeleting` 执行操作之前调用委托来处理 <xref:System.Web.UI.WebControls.ObjectDataSource.Deleting> 事件 <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> ，并在 `NorthwindEmployeeDeleted` 操作完成后调用委托来处理 <xref:System.Web.UI.WebControls.ObjectDataSource.Deleted> 事件 <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> ，以处理可能已发生的任何异常。 在此示例中，如果 `NorthwindDataException` 引发了，则由委托进行处理 `NorthwindEmployeeDeleted` 。  
  
 若要检查 `EmployeeLogic` 此代码示例使用的中间层业务对象的实现，请参阅中的类概述 <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs> 。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_10#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/CS/objds10cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_10#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/VB/objds10vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.Exception" />
      </Docs>
    </Member>
    <Member MemberName="OutputParameters">
      <MemberSignature Language="C#" Value="public System.Collections.IDictionary OutputParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IDictionary OutputParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.OutputParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OutputParameters As IDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::IDictionary ^ OutputParameters { System::Collections::IDictionary ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.OutputParameters : System.Collections.IDictionary" Usage="System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.OutputParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取包含业务对象方法参数及其值的集合。</summary>
        <value>表示业务对象方法参数及其相应值的名称/值对的 <see cref="T:System.Collections.IDictionary" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 通过引用传递给业务对象方法的任何参数都将在集合中返回 <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.OutputParameters%2A> 。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReturnValue">
      <MemberSignature Language="C#" Value="public object ReturnValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ReturnValue" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.ReturnValue" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ReturnValue As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ ReturnValue { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ReturnValue : obj" Usage="System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.ReturnValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取由业务对象方法（如果有）作为对象返回的返回值。</summary>
        <value>一个对象，表示由业务对象方法返回的返回值；否则为 <see langword="null" />（如果该业务对象不返回值）。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 在 <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.ReturnValue%2A> 构造函数中设置属性 <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs> 。 该值设置为使用反射调用的业务对象方法调用的返回值。 如果业务方法未返回任何值 (例如，当业务对象方法返回 `void`) 时， <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.ReturnValue%2A> 属性的计算结果为 `null` 。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
