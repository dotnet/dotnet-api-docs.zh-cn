<Type Name="LinqDataSourceContextEventArgs" FullName="System.Web.UI.WebControls.LinqDataSourceContextEventArgs">
  <Metadata><Meta Name="ms.openlocfilehash" Value="12c0d2aea599d066cc1dde324e6b5d3dc5108ca1" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86626958" /></Metadata><TypeSignature Language="C#" Value="public class LinqDataSourceContextEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit LinqDataSourceContextEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.LinqDataSourceContextEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class LinqDataSourceContextEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class LinqDataSourceContextEventArgs : EventArgs" />
  <TypeSignature Language="F#" Value="type LinqDataSourceContextEventArgs = class&#xA;    inherit EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>为 <see cref="E:System.Web.UI.WebControls.LinqDataSource.ContextCreating" /> 事件提供数据。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 默认情况下，该 <xref:System.Web.UI.WebControls.LinqDataSource> 控件创建在属性中指定的类型的实例 <xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A> 。 <xref:System.Web.UI.WebControls.LinqDataSource>控件调用数据上下文对象的无参数构造函数来创建对象的实例。  
  
 可以通过处理事件来手动创建数据上下文对象 <xref:System.Web.UI.WebControls.LinqDataSource.ContextCreating> 。 如果要使用非参数构造函数，请执行此操作。  
  
 <xref:System.Web.UI.WebControls.LinqDataSource.ContextCreating>如果要创建的数据上下文对象不同于在属性中指定的对象，也可以处理该事件 <xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A> 。 在这种情况下，将 <xref:System.Web.UI.WebControls.LinqDataSourceContextEventArgs.ObjectInstance%2A> 属性设置为创建的对象。 <xref:System.Web.UI.WebControls.LinqDataSource>控件将使用您为选择数据而创建的对象。 在更新、插入或删除数据时，必须将 <xref:System.Web.UI.WebControls.LinqDataSourceContextEventArgs.ObjectInstance%2A> 属性设置为从类派生的对象 <xref:System.Data.Linq.DataContext> 。  
  
   
  
## Examples  
 下面的示例演示如何通过在事件的事件处理程序中调用非参数构造函数来创建数据上下文对象 <xref:System.Web.UI.WebControls.LinqDataSource.ContextCreating> 。 该代码将自定义对象分配给 <xref:System.Web.UI.WebControls.LinqDataSourceContextEventArgs.ObjectInstance%2A> 属性。  
  
 [!code-csharp[System.Web.UI.WebControls.LinqDataSource.ContextCreating#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource.ContextCreating/cs/Default.aspx.cs#1)]
 [!code-vb[System.Web.UI.WebControls.LinqDataSource.ContextCreating#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource.ContextCreating/vb/Default.aspx.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>初始化 <see cref="T:System.Web.UI.WebControls.LinqDataSourceContextEventArgs" /> 类的新实例。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LinqDataSourceContextEventArgs ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LinqDataSourceContextEventArgs.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LinqDataSourceContextEventArgs();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Web.UI.WebControls.LinqDataSourceContextEventArgs" /> 类的新实例。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LinqDataSourceContextEventArgs (System.Web.UI.DataSourceOperation operation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Web.UI.DataSourceOperation operation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LinqDataSourceContextEventArgs.#ctor(System.Web.UI.DataSourceOperation)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (operation As DataSourceOperation)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LinqDataSourceContextEventArgs(System::Web::UI::DataSourceOperation operation);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.LinqDataSourceContextEventArgs : System.Web.UI.DataSourceOperation -&gt; System.Web.UI.WebControls.LinqDataSourceContextEventArgs" Usage="new System.Web.UI.WebControls.LinqDataSourceContextEventArgs operation" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="operation" Type="System.Web.UI.DataSourceOperation" />
      </Parameters>
      <Docs>
        <param name="operation">正在执行的数据操作。</param>
        <summary>为指定的数据操作初始化 <see cref="T:System.Web.UI.WebControls.LinqDataSourceContextEventArgs" /> 类的新实例。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ObjectInstance">
      <MemberSignature Language="C#" Value="public object ObjectInstance { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ObjectInstance" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSourceContextEventArgs.ObjectInstance" />
      <MemberSignature Language="VB.NET" Value="Public Property ObjectInstance As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ ObjectInstance { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ObjectInstance : obj with get, set" Usage="System.Web.UI.WebControls.LinqDataSourceContextEventArgs.ObjectInstance" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置要创建的数据上下文对象。</summary>
        <value>已设置为 <see cref="P:System.Web.UI.WebControls.LinqDataSourceContextEventArgs.ObjectInstance" /> 属性的数据上下文对象；否则为 <see langword="null" />。 默认为 <see langword="null" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 默认情况下，该 <xref:System.Web.UI.WebControls.LinqDataSource> 控件创建在属性中指定的类的实例 <xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A> 。 它通过调用该类的无参数构造函数来实现此功能。  
  
 可以通过处理 <xref:System.Web.UI.WebControls.LinqDataSource.ContextCreating> 事件并将 <xref:System.Web.UI.WebControls.LinqDataSourceContextEventArgs.ObjectInstance%2A> 属性设置为已创建的对象，手动为数据操作创建对象。  
  
 如果要使用非参数构造函数，或者要创建的对象不同于在属性中指定的对象，则可以手动创建该对象 <xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A> 。  
  
 <xref:System.Web.UI.WebControls.LinqDataSourceContextEventArgs.ObjectInstance%2A>属性不包含属性中指定的类型的实例 <xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A> ，因为该实例是在事件之后创建的 <xref:System.Web.UI.WebControls.LinqDataSource.ContextCreating> 。 此 <xref:System.Web.UI.WebControls.LinqDataSourceContextEventArgs.ObjectInstance%2A> 属性仅在事件期间手动创建数据上下文对象时使用 <xref:System.Web.UI.WebControls.LinqDataSource.ContextCreating> 。 在更新、插入或删除数据时，必须将 <xref:System.Web.UI.WebControls.LinqDataSourceContextEventArgs.ObjectInstance%2A> 属性设置为从类派生的对象 <xref:System.Data.Linq.DataContext> 。  
  
   
  
## Examples  
 下面的示例演示如何通过在事件的事件处理程序中调用非参数构造函数来创建数据上下文对象 <xref:System.Web.UI.WebControls.LinqDataSource.ContextCreating> 。 该代码将自定义对象分配给 <xref:System.Web.UI.WebControls.LinqDataSourceContextEventArgs.ObjectInstance%2A> 属性。  
  
 [!code-csharp[System.Web.UI.WebControls.LinqDataSource.ContextCreating#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource.ContextCreating/cs/Default.aspx.cs#1)]
 [!code-vb[System.Web.UI.WebControls.LinqDataSource.ContextCreating#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource.ContextCreating/vb/Default.aspx.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Operation">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataSourceOperation Operation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.DataSourceOperation Operation" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSourceContextEventArgs.Operation" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Operation As DataSourceOperation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::DataSourceOperation Operation { System::Web::UI::DataSourceOperation get(); };" />
      <MemberSignature Language="F#" Value="member this.Operation : System.Web.UI.DataSourceOperation" Usage="System.Web.UI.WebControls.LinqDataSourceContextEventArgs.Operation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataSourceOperation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取正在执行的数据操作。</summary>
        <value>一个表示正在执行的数据操作类型的值。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
