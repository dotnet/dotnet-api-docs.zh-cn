<Type Name="BoundField" FullName="System.Web.UI.WebControls.BoundField">
  <Metadata><Meta Name="ms.openlocfilehash" Value="9bce966617ac769b21bca34bc08c20cb6dd5d13f" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86672956" /></Metadata><TypeSignature Language="C#" Value="public class BoundField : System.Web.UI.WebControls.DataControlField" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit BoundField extends System.Web.UI.WebControls.DataControlField" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.BoundField" />
  <TypeSignature Language="VB.NET" Value="Public Class BoundField&#xA;Inherits DataControlField" />
  <TypeSignature Language="C++ CLI" Value="public ref class BoundField : System::Web::UI::WebControls::DataControlField" />
  <TypeSignature Language="F#" Value="type BoundField = class&#xA;    inherit DataControlField" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.DataControlField</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>表示数据绑定控件中以文本形式显示的字段。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.BoundField>数据绑定控件使用类 (例如 <xref:System.Web.UI.WebControls.GridView> 和 <xref:System.Web.UI.WebControls.DetailsView>) 将字段的值显示为文本。 <xref:System.Web.UI.WebControls.BoundField>对象的显示方式取决于使用它的数据绑定控件。 例如， <xref:System.Web.UI.WebControls.GridView> 控件 <xref:System.Web.UI.WebControls.BoundField> 以列的形式显示对象，而控件则将 <xref:System.Web.UI.WebControls.DetailsView> 其显示为一行。  
  
 若要指定要在对象中显示的字段 <xref:System.Web.UI.WebControls.BoundField> ，请将 <xref:System.Web.UI.WebControls.BoundField.DataField%2A> 属性设置为字段的名称。 通过将属性设置为，可以在显示字段的值之前对其进行 HTML 编码 <xref:System.Web.UI.WebControls.BoundField.HtmlEncode%2A> `true` 。 可以通过设置属性，将自定义格式设置字符串应用于字段的值 <xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A> 。 当 <xref:System.Web.UI.WebControls.BoundField.HtmlEncode%2A> 属性为时 `true` ，将在自定义格式字符串中使用字段的已编码字符串值。 默认情况下，仅当数据绑定控件处于只读模式时，才将格式设置字符串应用于字段值。 若要将格式设置字符串应用于数据绑定控件处于编辑模式时显示的值，请将 <xref:System.Web.UI.WebControls.BoundField.ApplyFormatInEditMode%2A> 属性设置为 `true` 。 如果字段值为 null，则可以通过设置属性来显示自定义标题 <xref:System.Web.UI.WebControls.BoundField.NullDisplayText%2A> 。 <xref:System.Web.UI.WebControls.BoundField>对象还可以通过将属性设置为，自动将空字符串 ( "" ) 字段值转换为 null 值 <xref:System.Web.UI.WebControls.BoundField.ConvertEmptyStringToNull%2A> `true` 。  
  
 可以 <xref:System.Web.UI.WebControls.BoundField> 通过将属性设置为来隐藏数据绑定控件中的对象 <xref:System.Web.UI.WebControls.DataControlField.Visible%2A> `false` 。 若要防止在编辑模式下修改字段的值，请将属性设置 <xref:System.Web.UI.WebControls.BoundField.ReadOnly%2A> 为 `true` 。 在支持 (例如控件) 插入记录的数据绑定控件中 <xref:System.Web.UI.WebControls.DetailsView> ，可以 <xref:System.Web.UI.WebControls.BoundField> 通过将 <xref:System.Web.UI.WebControls.DataControlField.InsertVisible%2A> 属性设置为来隐藏对象 `false` 。 当您希望在插入模式下隐藏自动生成的键字段时，通常会执行此操作。  
  
 您可以自定义对象的页眉和页脚部分 <xref:System.Web.UI.WebControls.BoundField> 。 若要在页眉或页脚部分显示标题，请分别设置 <xref:System.Web.UI.WebControls.DataControlField.HeaderText%2A> 或 <xref:System.Web.UI.WebControls.DataControlField.FooterText%2A> 属性。 您可以通过设置属性来显示图像，而不是在页眉节中显示文本 <xref:System.Web.UI.WebControls.DataControlField.HeaderImageUrl%2A> 。 <xref:System.Web.UI.WebControls.BoundField>通过将属性设置为，可以在对象中隐藏标头部分 <xref:System.Web.UI.WebControls.DataControlField.ShowHeader%2A> `false` 。  
  
> [!NOTE]
>  某些数据绑定控件 (例如 <xref:System.Web.UI.WebControls.GridView> 控件) 可以仅显示或隐藏控件的整个标题部分。 这些数据绑定控件不支持 <xref:System.Web.UI.WebControls.DataControlField.ShowHeader%2A> 单个绑定字段的属性。 若要显示或隐藏数据绑定控件的整个标题节 (如有) ，请使用控件的 `ShowHeader` 属性。  
  
 还可以 <xref:System.Web.UI.WebControls.BoundField> 通过设置字段的不同部分的样式属性，自定义对象的外观 (字体颜色、背景色等) 。 下表列出了不同的样式属性。  
  
|Style 属性|说明|  
|--------------------|-----------------|  
|<xref:System.Web.UI.WebControls.DataControlField.ControlStyle%2A>|对象的子 Web 服务器控件的样式设置 <xref:System.Web.UI.WebControls.BoundField> 。|  
|<xref:System.Web.UI.WebControls.DataControlField.FooterStyle%2A>|对象的脚注部分的样式设置 <xref:System.Web.UI.WebControls.BoundField> 。|  
|<xref:System.Web.UI.WebControls.DataControlField.HeaderStyle%2A>|对象的标头部分的样式设置 <xref:System.Web.UI.WebControls.BoundField> 。|  
|<xref:System.Web.UI.WebControls.DataControlField.ItemStyle%2A>|对象中数据项的样式设置 <xref:System.Web.UI.WebControls.BoundField> 。|  
  
   
  
## Examples  
 下面的代码示例演示如何使用 <xref:System.Web.UI.WebControls.BoundField> 对象在控件中显示字段的值 <xref:System.Web.UI.WebControls.GridView> 。  
  
 [!code-aspx-csharp[BoundField#1](~/samples/snippets/csharp/VS_Snippets_WebNet/BoundField/CS/boundfieldcs.aspx#1)]
 [!code-aspx-vb[BoundField#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/BoundField/VB/boundfieldvb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.GridView" />
    <altmember cref="P:System.Web.UI.WebControls.GridView.Columns" />
    <altmember cref="T:System.Web.UI.WebControls.DetailsView" />
    <altmember cref="P:System.Web.UI.WebControls.DetailsView.Fields" />
    <altmember cref="T:System.Web.UI.WebControls.ButtonField" />
    <altmember cref="T:System.Web.UI.WebControls.CheckBoxField" />
    <altmember cref="T:System.Web.UI.WebControls.CommandField" />
    <altmember cref="T:System.Web.UI.WebControls.DataControlField" />
    <altmember cref="T:System.Web.UI.WebControls.HyperLinkField" />
    <altmember cref="T:System.Web.UI.WebControls.TemplateField" />
    <altmember cref="P:System.Web.UI.WebControls.BoundField.ApplyFormatInEditMode" />
    <altmember cref="P:System.Web.UI.WebControls.BoundField.DataField" />
    <altmember cref="P:System.Web.UI.WebControls.BoundField.DataFormatString" />
    <altmember cref="P:System.Web.UI.WebControls.DataControlField.InsertVisible" />
    <altmember cref="P:System.Web.UI.WebControls.BoundField.NullDisplayText" />
    <altmember cref="P:System.Web.UI.WebControls.BoundField.ReadOnly" />
    <altmember cref="P:System.Web.UI.WebControls.CheckBoxField.Text" />
    <altmember cref="P:System.Web.UI.WebControls.BoundField.ConvertEmptyStringToNull" />
    <altmember cref="P:System.Web.UI.WebControls.DataControlField.Visible" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BoundField ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BoundField.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BoundField();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Web.UI.WebControls.BoundField" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用此构造函数初始化类的新实例 <xref:System.Web.UI.WebControls.BoundField> 。 当向动态创建的数据绑定控件添加字段时，通常使用此构造函数。  
  
 若要将对象动态添加 <xref:System.Web.UI.WebControls.BoundField> 到数据绑定控件，请创建一个新的 <xref:System.Web.UI.WebControls.BoundField> 对象，设置其属性，然后将其添加到数据绑定控件的字段集合。 例如，如果使用 <xref:System.Web.UI.WebControls.GridView> 控件，请将 <xref:System.Web.UI.WebControls.BoundField> 对象添加到 <xref:System.Web.UI.WebControls.GridView.Columns%2A> 集合中。  
  
> [!NOTE]
>  虽然可将字段动态添加到数据绑定控件，但强烈建议根据需要静态声明字段，然后将其显示或隐藏。 静态声明所有字段可减小父数据绑定控件的视图状态的大小。  
  
   
  
## Examples  
 下面的代码示例演示如何使用构造函数将对象动态添加 <xref:System.Web.UI.WebControls.BoundField> 到 <xref:System.Web.UI.WebControls.GridView> 控件。  
  
 [!code-aspx-csharp[BoundFieldCtor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/BoundFieldCtor/CS/boundfieldctorcs.aspx#1)]
 [!code-aspx-vb[BoundFieldCtor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/BoundFieldCtor/VB/boundfieldctorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.GridView" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.Columns" />
      </Docs>
    </Member>
    <Member MemberName="ApplyFormatInEditMode">
      <MemberSignature Language="C#" Value="public virtual bool ApplyFormatInEditMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ApplyFormatInEditMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BoundField.ApplyFormatInEditMode" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ApplyFormatInEditMode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool ApplyFormatInEditMode { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ApplyFormatInEditMode : bool with get, set" Usage="System.Web.UI.WebControls.BoundField.ApplyFormatInEditMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示包含 <see cref="P:System.Web.UI.WebControls.BoundField.DataFormatString" /> 对象的数据绑定控件处于编辑模式时，<see cref="T:System.Web.UI.WebControls.BoundField" /> 属性指定的格式化字符串是否应用到字段值。</summary>
        <value>若要在编辑模式中将格式化字符串应用到字段值，则为 <see langword="true" />；否则为 <see langword="false" />。 默认为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 数据绑定控件 (如 <xref:System.Web.UI.WebControls.DetailsView> 、 <xref:System.Web.UI.WebControls.FormView> 和 <xref:System.Web.UI.WebControls.GridView>) 具有不同的显示模式，使用户能够读取、编辑或插入记录。 默认情况下， <xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A> 仅当数据绑定控件处于只读模式时，属性指定的格式设置字符串才应用于字段值。 若要将格式设置字符串应用于数据绑定控件处于编辑模式时显示的值，请将 <xref:System.Web.UI.WebControls.BoundField.ApplyFormatInEditMode%2A> 属性设置为 `true` 。  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.BoundField>当数据源中的字段被更新时，对象不会自动删除该格式。 如果不希望格式设置为存储的值的一部分，则需要以编程方式删除格式设置。  
  
   
  
## Examples  
 下面的代码示例演示如何使用 <xref:System.Web.UI.WebControls.BoundField.ApplyFormatInEditMode%2A> 属性 <xref:System.Web.UI.WebControls.GridView> 在控件处于编辑模式时将格式设置字符串应用于字段值。 然后，在数据源中更新值之前以编程方式删除格式设置。  
  
 [!code-aspx-csharp[BoundFieldApplyFormatInEditMode#1](~/samples/snippets/csharp/VS_Snippets_WebNet/boundfieldapplyformatineditmode/CS/boundfieldapplyformatineditmodecs.aspx#1)]
 [!code-aspx-vb[BoundFieldApplyFormatInEditMode#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/boundfieldapplyformatineditmode/VB/boundfieldapplyformatineditmodevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.BoundField.DataFormatString" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.RowUpdating" />
        <altmember cref="E:System.Web.UI.WebControls.DetailsView.ItemUpdating" />
      </Docs>
    </Member>
    <Member MemberName="ConvertEmptyStringToNull">
      <MemberSignature Language="C#" Value="public virtual bool ConvertEmptyStringToNull { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ConvertEmptyStringToNull" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BoundField.ConvertEmptyStringToNull" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ConvertEmptyStringToNull As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool ConvertEmptyStringToNull { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ConvertEmptyStringToNull : bool with get, set" Usage="System.Web.UI.WebControls.BoundField.ConvertEmptyStringToNull" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示在数据源中更新数据字段时是否将空字符串值 ("") 自动转换为 null 值。</summary>
        <value>若要将空字符串值自动转换为 null 值，则为 <see langword="true" />；否则为 <see langword="false" />。 默认为 <see langword="true" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 有时，用户在更新或插入记录时可能会输入空字符串作为字段值。 使用 <xref:System.Web.UI.WebControls.BoundField.ConvertEmptyStringToNull%2A> 属性可以指定在数据源中更新数据字段时是否将空字符串值自动转换为 null。  
  
> [!NOTE]
>  默认情况下， <xref:System.Web.UI.WebControls.BoundField> 对象将空值显示为空字符串。 若要显示不同的值，请设置 <xref:System.Web.UI.WebControls.BoundField.NullDisplayText%2A> 属性。  
  
   
  
## Examples  
 下面的代码示例演示如何使用 <xref:System.Web.UI.WebControls.BoundField.ConvertEmptyStringToNull%2A> 属性指定 ( "" ) 字段值应自动转换为 null 的空字符串。  
  
 [!code-aspx-csharp[BoundFieldConvertEmptyStringToNull#1](~/samples/snippets/csharp/VS_Snippets_WebNet/boundfieldconvertemptystringtonull/CS/boundfieldconvertemptystingtonullcs.aspx#1)]
 [!code-aspx-vb[BoundFieldConvertEmptyStringToNull#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/boundfieldconvertemptystringtonull/VB/boundfieldconvertemptystingtonullvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.BoundField.DataField" />
        <altmember cref="P:System.Web.UI.WebControls.BoundField.DataFormatString" />
        <altmember cref="P:System.Web.UI.WebControls.BoundField.NullDisplayText" />
      </Docs>
    </Member>
    <Member MemberName="CopyProperties">
      <MemberSignature Language="C#" Value="protected override void CopyProperties (System.Web.UI.WebControls.DataControlField newField);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void CopyProperties(class System.Web.UI.WebControls.DataControlField newField) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BoundField.CopyProperties(System.Web.UI.WebControls.DataControlField)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub CopyProperties (newField As DataControlField)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void CopyProperties(System::Web::UI::WebControls::DataControlField ^ newField);" />
      <MemberSignature Language="F#" Value="override this.CopyProperties : System.Web.UI.WebControls.DataControlField -&gt; unit" Usage="boundField.CopyProperties newField" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newField" Type="System.Web.UI.WebControls.DataControlField" />
      </Parameters>
      <Docs>
        <param name="newField">当前 <see cref="T:System.Web.UI.WebControls.DataControlField" /> 的属性将复制到的 <see cref="T:System.Web.UI.WebControls.BoundField" />。</param>
        <summary>将当前 <see cref="T:System.Web.UI.WebControls.BoundField" /> 对象的属性复制到指定的 <see cref="T:System.Web.UI.WebControls.DataControlField" /> 对象。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.BoundField.CopyProperties%2A>方法是方法使用的帮助器方法 <xref:System.Web.UI.WebControls.DataControlField.CloneField%2A?displayProperty=nameWithType> ，将当前对象的属性复制 <xref:System.Web.UI.WebControls.BoundField> 到方法所创建的 <xref:System.Web.UI.WebControls.DataControlField> 对象。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.DataControlField.CloneField" />
        <altmember cref="M:System.Web.UI.WebControls.BoundField.CreateField" />
      </Docs>
    </Member>
    <Member MemberName="CreateField">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.WebControls.DataControlField CreateField ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.WebControls.DataControlField CreateField() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BoundField.CreateField" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateField () As DataControlField" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Web::UI::WebControls::DataControlField ^ CreateField();" />
      <MemberSignature Language="F#" Value="override this.CreateField : unit -&gt; System.Web.UI.WebControls.DataControlField" Usage="boundField.CreateField " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataControlField</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>创建一个空的 <see cref="T:System.Web.UI.WebControls.BoundField" /> 对象。</summary>
        <returns>一个空 <see cref="T:System.Web.UI.WebControls.BoundField" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.BoundField.CreateField%2A>方法是一个帮助器方法，该方法由 <xref:System.Web.UI.WebControls.DataControlField.CloneField%2A?displayProperty=nameWithType> 方法用来创建一个空 <xref:System.Web.UI.WebControls.BoundField> 对象，以将当前对象的属性复制 <xref:System.Web.UI.WebControls.BoundField> 到。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.DataControlField.CloneField" />
        <altmember cref="M:System.Web.UI.WebControls.BoundField.CopyProperties(System.Web.UI.WebControls.DataControlField)" />
      </Docs>
    </Member>
    <Member MemberName="DataField">
      <MemberSignature Language="C#" Value="public virtual string DataField { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataField" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BoundField.DataField" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property DataField As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ DataField { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataField : string with get, set" Usage="System.Web.UI.WebControls.BoundField.DataField" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue("")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue("")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName Language="C#">[System.ComponentModel.TypeConverter("System.Web.UI.Design.DataSourceViewSchemaConverter, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.TypeConverter("System.Web.UI.Design.DataSourceViewSchemaConverter, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.TypeConverter("System.Web.UI.Design.DataSourceViewSchemaConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.TypeConverter("System.Web.UI.Design.DataSourceViewSchemaConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置要绑定到 <see cref="T:System.Web.UI.WebControls.BoundField" /> 对象的数据字段的名称。</summary>
        <value>要绑定到 <see cref="T:System.Web.UI.WebControls.BoundField" /> 的数据字段的名称。 默认值为空字符串 ("")，表示尚未设置此属性。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用 <xref:System.Web.UI.WebControls.BoundField.DataField%2A> 属性指定要绑定到对象的数据字段的名称 <xref:System.Web.UI.WebControls.BoundField> 。 指定字段的值在对象中显示 <xref:System.Web.UI.WebControls.BoundField> 为文本。 还可以通过设置属性来设置显示的文本的格式 <xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A> 。  
  
> [!NOTE]
>  如果字段值为 null，则默认情况下将为该值显示空字符串 ( "" ) 。 若要指定备用标题，请设置 <xref:System.Web.UI.WebControls.BoundField.NullDisplayText%2A> 属性。  
  
   
  
## Examples  
 下面的代码示例演示如何使用 <xref:System.Web.UI.WebControls.BoundField.DataField%2A> 属性指定要在控件的字段列中显示的字段 <xref:System.Web.UI.WebControls.BoundField> <xref:System.Web.UI.WebControls.GridView> 。  
  
 [!code-aspx-csharp[BoundField#1](~/samples/snippets/csharp/VS_Snippets_WebNet/BoundField/CS/boundfieldcs.aspx#1)]
 [!code-aspx-vb[BoundField#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/BoundField/VB/boundfieldvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.BoundField.DataFormatString" />
        <altmember cref="P:System.Web.UI.WebControls.BoundField.NullDisplayText" />
      </Docs>
    </Member>
    <Member MemberName="DataFormatString">
      <MemberSignature Language="C#" Value="public virtual string DataFormatString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataFormatString" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BoundField.DataFormatString" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property DataFormatString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ DataFormatString { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataFormatString : string with get, set" Usage="System.Web.UI.WebControls.BoundField.DataFormatString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue("")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue("")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置字符串，该字符串指定字段值的显示格式。</summary>
        <value>指定字段值的显示格式的格式化字符串。 默认值为空字符串 ("")，表示尚无特殊格式设置应用于该字段值。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用 <xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A> 属性为对象中显示的值指定自定义的显示格式 <xref:System.Web.UI.WebControls.BoundField> 。 如果 <xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A> 未设置该属性，则将显示字段的值而不进行任何特殊格式设置。  
  
> [!NOTE]
>  对于早于3.5 的 ASP.NET 版本，必须将属性设置 <xref:System.Web.UI.WebControls.BoundField.HtmlEncode%2A> 为，以便 `false` 对不是字符串数据类型的字段进行格式设置。 否则，在应用存储在属性中的格式字符串之前，字段值将按默认转换方法转换为字符串 <xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A> 。  
  
 默认情况下，仅当包含对象的数据绑定控件处于只读模式时，才将格式设置字符串应用于字段值 <xref:System.Web.UI.WebControls.BoundField> 。 若要在编辑模式下将格式设置字符串应用于字段值，请将 <xref:System.Web.UI.WebControls.BoundField.ApplyFormatInEditMode%2A> 属性设置为 `true` 。  
  
 格式字符串可以是任何文本字符串，并且通常包含字段值的占位符。 例如，在格式字符串中 `Item Value: {0}` ， {0} 当字符串显示在对象中时，字段的值将替换占位符 <xref:System.Web.UI.WebControls.BoundField> 。 格式字符串的其余部分显示为文本文本。  
  
 如果格式设置字符串不包含占位符，则在最终显示文本中仅包含格式字符串本身 (数据源中的字段值不包含在) 中。 如果占位符是 0 (零) 括在大括号中（如前面的示例所示），则字段值通过默认方法转换为字符串。 您可以将一个字符串追加到零，该字符串指定如何设置字段值的格式。 例如， `{0:C}` 数值字段的占位符指定字段的值应转换为货币格式。  
  
 使用方法应用格式设置 <xref:System.String.Format%2A> 。 左大括号后面的数字是该方法使用的语法的一部分，指示占位符应使用哪一系列值中的一个。 由于每个单元格中只有一个字段值，因此，左大括号后面的数字只能设置为0。  
  
 下表列出了用于数值字段的标准格式字符。 这些格式字符不区分大小写，但除外 `X` ，这会在指定的情况下显示十六进制字符。 您可以向大多数格式字符追加一个数字，以便指定要显示的有效位数或小数位数。  
  
> [!NOTE]
>  在大多数情况下，格式设置取决于服务器的区域性设置。 这些示例适用于的区域性设置 `en-US` 。  
  
|格式字符|说明|示例|  
|----------------------|-----------------|-------------|  
|`C` 或 `c`|以货币格式显示数值。 可以指定小数位数。|格式：`{0:C}`<br /><br /> 123.456 -> $123.46<br /><br /> 格式：`{0:C3}`<br /><br /> 123.456  -> $123.456|  
|`D` 或 `d`|以十进制格式显示整数值。 可以指定数字的位数。  (尽管类型称为 "decimal"，但数字的格式设置为整数。 ) |格式：`{0:D}`<br /><br /> 1234 -> 1234<br /><br /> 格式：`{0:D6}`<br /><br /> 1234  -> 001234|  
|`E` 或 `e`|以科学 (指数) 格式显示数值。 可以指定小数位数。|格式：`{0:E}`<br /><br /> 1052.0329112756-> 1.052033 E + 003<br /><br /> 格式：`{0:E2}`<br /><br /> -1052.0329112756-> 1.05 e + 003|  
|`F` 或 `f`|以固定格式显示数值。 可以指定小数位数。|格式：`{0:F}`<br /><br /> 1234.567 -> 1234.57<br /><br /> 格式：`{0:F3}`<br /><br /> 1234.567 -> 1234.567|  
|`G` 或 `g`|以常规格式显示数值 (最紧凑的定点表示法或科学记数) 。 可以指定有效位数。|格式：`{0:G}`<br /><br /> -123.456 -> -123.456<br /><br /> 格式：`{0:G2}`<br /><br /> -123.456 -> -120|  
|`N` 或 `n`| (包含组分隔符和可选的负号) ，以数字格式显示数值。 可以指定小数位数。|格式：`{0:N}`<br /><br /> 1234.567 -> 1,234.57<br /><br /> 格式：`{0:N4}`<br /><br /> 1234.567 -> 1,234.5670|  
|`P` 或 `p`|以百分比格式显示数值。 可以指定小数位数。|格式：`{0:P}`<br /><br /> 1 -> 100.00%<br /><br /> 格式：`{0:P1}`<br /><br /> .5 -> 50.0%|  
|`R` 或 `r`|<xref:System.Single> <xref:System.Double> `BigInteger` 以往返格式显示、或值。|格式：`{0:R}`<br /><br /> 123456789.12345678 -> 123456789.12345678|  
|`X` 或 `x`|以十六进制格式显示整数值。 可以指定数字的位数。|格式：`{0:X}`<br /><br /> 255-> FF<br /><br /> 格式：`{0:x4}`<br /><br /> 255-> 00ff|  
  
 有关显示其他区域性值格式的详细信息和示例，请参阅 [标准数字格式字符串](/dotnet/standard/base-types/standard-numeric-format-strings)。 您还可以创建自定义数字格式字符串。 有关更多信息，请参见[自定义数字格式字符串](/dotnet/standard/base-types/custom-numeric-format-strings)。  
  
 下表列出了字段的格式字符 <xref:System.DateTime> 。 其中的大多数格式设置规范会导致不同的输出，具体取决于区域性设置。 这些示例的值为 <xref:System.DateTime> 6/15/2009 1:45:30 PM，其区域性设置为 `en-US` 。  
  
|格式字符|说明|示例|  
|----------------------|-----------------|-------------|  
|`d`|短日期模式。|格式：`{0:d}`<br /><br /> 6/15/2009 1:45:30 PM-> 6/15/2009|  
|`D`|长日期模式。|格式：`{0:D}`<br /><br /> 6/15/2009 1:45:30 PM->星期一，年6月 15 2009 日|  
|`f`|完整日期/时间模式（短时间）。|格式：`{0:f}`<br /><br /> 6/15/2009 1:45:30 PM-> 星期一、6月15日，2009 1:45 PM|  
|`F`|完整日期/时间模式（长时间）。|格式：`{0:F}`<br /><br /> 6/15/2009 1:45:30 PM-> 星期一、6月15日，2009 1:45:30 PM|  
|`g`|常规日期/时间模式（短时间）。|格式：`{0:g}`<br /><br /> 6/15/2009 1:45:30 PM-> 6/15/2009 1:45 PM|  
|`G`|常规日期/时间模式（长时间）。|格式：`{0:G}`<br /><br /> 6/15/2009 1:45:30 PM-> 6/15/2009 1:45:30 PM|  
|`M` 或 `m`|月/日模式。|格式：`{0:M}`<br /><br /> 6/15/2009 1:45:30 PM-> 6 月15日|  
|`O` 或 `o`|往返日期/时间模式。|格式：`{0:o}`<br /><br /> 6/15/2009 1:45:30 PM -> 2009-06-15T13:45:30.0900000|  
|`R` 或 `r`|RFC1123 模式 (的信息，请参阅 <xref:System.Globalization.DateTimeFormatInfo.RFC1123Pattern%2A?displayProperty=nameWithType>) 。|格式：`{0:R}`<br /><br /> 6/15/2009 1:45:30 PM -> Mon, 15 Jun 2009 20:45:30 GMT|  
|`s`|可排序日期/时间模式。|格式：`{0:s}`<br /><br /> 6/15/2009 1:45:30 PM -> 2009-06-15T13:45:30|  
|`t`|短时间模式。|格式：`{0:t}`<br /><br /> 6/15/2009 1:45:30 PM-> 1:45 PM|  
|`T`|长时间模式。|格式：`{0:T}`<br /><br /> 6/15/2009 1:45:30 PM-> 1:45:30 PM|  
|`u`|通用可排序日期/时间模式。|格式：`{0:u}`<br /><br /> 6/15/2009 1:45:30 PM -> 2009-06-15 20:45:30Z|  
|`U`|通用完整日期/时间模式。|格式：`{0:U}`<br /><br /> 6/15/2009 1:45:30 PM-> 星期一、6月15日，2009 8:45:30 PM|  
|`Y` 或 `y`|年月模式。|格式：`{0:Y}`<br /><br /> 6/15/2009 1:45:30 PM-> 六月，2009|  
  
 有关显示其他区域性值格式的详细信息和示例，请参阅 [标准日期和时间格式字符串](/dotnet/standard/base-types/standard-date-and-time-format-strings)。 还可以创建自定义日期和时间格式字符串。 有关详细信息，请参阅 [自定义日期和时间格式字符串](/dotnet/standard/base-types/custom-date-and-time-format-strings)。  
  
   
  
## Examples  
 本主题提供了包含源代码的 Visual Studio 网站项目： [下载](https://go.microsoft.com/fwlink/?LinkId=191889)。  
  
 下面的示例演示如何使用 <xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A> 属性为字段值指定自定义的显示格式。  
  
  
  
 下面的示例显示一个由本示例生成的输出行。  
  
|ProductID|名称|ProductNumber|ListPrice|重量|ModifiedDate|  
|---------------|----------|-------------------|---------------|------------|------------------|  
|`000680`|`HL Road Frame - Black, 58`|`#FR-R92B-58`|`$1,431.50`|`1016.040`|`3/11/2004`|  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.BoundField.DataField" />
        <altmember cref="P:System.Web.UI.WebControls.BoundField.ApplyFormatInEditMode" />
        <related type="Article" href="/dotnet/standard/base-types/formatting-types">设置 .NET 中类型的格式</related>
      </Docs>
    </Member>
    <Member MemberName="ExtractValuesFromCell">
      <MemberSignature Language="C#" Value="public override void ExtractValuesFromCell (System.Collections.Specialized.IOrderedDictionary dictionary, System.Web.UI.WebControls.DataControlFieldCell cell, System.Web.UI.WebControls.DataControlRowState rowState, bool includeReadOnly);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ExtractValuesFromCell(class System.Collections.Specialized.IOrderedDictionary dictionary, class System.Web.UI.WebControls.DataControlFieldCell cell, valuetype System.Web.UI.WebControls.DataControlRowState rowState, bool includeReadOnly) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BoundField.ExtractValuesFromCell(System.Collections.Specialized.IOrderedDictionary,System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlRowState,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub ExtractValuesFromCell (dictionary As IOrderedDictionary, cell As DataControlFieldCell, rowState As DataControlRowState, includeReadOnly As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void ExtractValuesFromCell(System::Collections::Specialized::IOrderedDictionary ^ dictionary, System::Web::UI::WebControls::DataControlFieldCell ^ cell, System::Web::UI::WebControls::DataControlRowState rowState, bool includeReadOnly);" />
      <MemberSignature Language="F#" Value="override this.ExtractValuesFromCell : System.Collections.Specialized.IOrderedDictionary * System.Web.UI.WebControls.DataControlFieldCell * System.Web.UI.WebControls.DataControlRowState * bool -&gt; unit" Usage="boundField.ExtractValuesFromCell (dictionary, cell, rowState, includeReadOnly)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dictionary" Type="System.Collections.Specialized.IOrderedDictionary" />
        <Parameter Name="cell" Type="System.Web.UI.WebControls.DataControlFieldCell" />
        <Parameter Name="rowState" Type="System.Web.UI.WebControls.DataControlRowState" />
        <Parameter Name="includeReadOnly" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="dictionary">用于存储指定单元格的值的 <see cref="T:System.Collections.IDictionary" />。</param>
        <param name="cell">包含要检索的值的 <see cref="T:System.Web.UI.WebControls.TableCell" />。</param>
        <param name="rowState"><see cref="T:System.Web.UI.WebControls.DataControlRowState" /> 值之一。</param>
        <param name="includeReadOnly">若要包括只读字段的值，则为 <see langword="true" />；否则为 <see langword="false" />。</param>
        <summary>使用指定的 <see cref="T:System.Collections.IDictionary" /> 对象中的值填充指定的 <see cref="T:System.Web.UI.WebControls.TableCell" /> 对象。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.BoundField.ExtractValuesFromCell%2A>提供此方法是一种简便的方法，用于从对象中的指定对象检索字段的值 <xref:System.Web.UI.WebControls.TableCell> <xref:System.Web.UI.WebControls.BoundField> 。  
  
> [!NOTE]
>  此方法主要由控件开发人员使用。  
  
 该方法没有返回值。 相反，字段值通过 <xref:System.Collections.IDictionary?displayProperty=nameWithType> 为参数传入的对象的引用返回 `dictionary` 。 调用方法后，循环访问 <xref:System.Collections.IDictionary?displayProperty=nameWithType> 对象以访问字段值。  
  
> [!NOTE]
>  如果 <xref:System.Web.UI.WebControls.TableCell> 对象包含只读字段值，则必须传入 `true` 以便 `includeReadOnly` 参数包含这些值。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IDictionary" />
        <altmember cref="T:System.Web.UI.WebControls.TableCell" />
      </Docs>
    </Member>
    <Member MemberName="FormatDataValue">
      <MemberSignature Language="C#" Value="protected virtual string FormatDataValue (object dataValue, bool encode);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string FormatDataValue(object dataValue, bool encode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BoundField.FormatDataValue(System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function FormatDataValue (dataValue As Object, encode As Boolean) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ FormatDataValue(System::Object ^ dataValue, bool encode);" />
      <MemberSignature Language="F#" Value="abstract member FormatDataValue : obj * bool -&gt; string&#xA;override this.FormatDataValue : obj * bool -&gt; string" Usage="boundField.FormatDataValue (dataValue, encode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataValue" Type="System.Object" />
        <Parameter Name="encode" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="dataValue">要格式化的字段值。</param>
        <param name="encode">若对该值进行编码，则为 <see langword="true" />；否则，为 <see langword="false" />。</param>
        <summary>设定 <see cref="T:System.Web.UI.WebControls.BoundField" /> 对象内的单元格中的指定字段值。</summary>
        <returns>已转换为 <see cref="P:System.Web.UI.WebControls.BoundField.DataFormatString" /> 所指定格式的字段值。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.BoundField.FormatDataValue%2A>方法是一个帮助器方法，用于将字段值转换为属性指定的格式 <xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A> 。 如果字段值为 null，则返回属性的值 <xref:System.Web.UI.WebControls.BoundField.NullDisplayText%2A> 。  
  
> [!NOTE]
>  此方法主要由控件开发人员使用。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>扩展类时 <see cref="T:System.Web.UI.WebControls.BoundField" /> ，可以重写此方法以执行自定义格式设置例程。</para></block>
      </Docs>
    </Member>
    <Member MemberName="GetDesignTimeValue">
      <MemberSignature Language="C#" Value="protected virtual object GetDesignTimeValue ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance object GetDesignTimeValue() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BoundField.GetDesignTimeValue" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetDesignTimeValue () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Object ^ GetDesignTimeValue();" />
      <MemberSignature Language="F#" Value="abstract member GetDesignTimeValue : unit -&gt; obj&#xA;override this.GetDesignTimeValue : unit -&gt; obj" Usage="boundField.GetDesignTimeValue " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>在设计器中呈现 <see cref="T:System.Web.UI.WebControls.BoundField" /> 对象时，检索用作字段值的值。</summary>
        <returns>要在设计器中作为字段值显示的值。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.BoundField.GetDesignTimeValue%2A>方法是一个帮助器方法，用于在 <xref:System.Web.UI.WebControls.BoundField> 设计器中呈现对象时确定要为字段显示的值。 如果在设计时无法从数据源中检索真实数据，则改为显示此方法返回的值。  
  
> [!NOTE]
>  此方法主要由控件开发人员使用。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>扩展类时 <see cref="T:System.Web.UI.WebControls.BoundField" /> ，可以重写此方法，以便为设计器中的字段返回不同的值。</para></block>
        <altmember cref="M:System.Web.UI.WebControls.BoundField.GetValue(System.Web.UI.Control)" />
      </Docs>
    </Member>
    <Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="protected virtual object GetValue (System.Web.UI.Control controlContainer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance object GetValue(class System.Web.UI.Control controlContainer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BoundField.GetValue(System.Web.UI.Control)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetValue (controlContainer As Control) As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Object ^ GetValue(System::Web::UI::Control ^ controlContainer);" />
      <MemberSignature Language="F#" Value="abstract member GetValue : System.Web.UI.Control -&gt; obj&#xA;override this.GetValue : System.Web.UI.Control -&gt; obj" Usage="boundField.GetValue controlContainer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="controlContainer" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="controlContainer">字段值的容器。</param>
        <summary>检索绑定到 <see cref="T:System.Web.UI.WebControls.BoundField" /> 对象的字段值。</summary>
        <returns>绑定到 <see cref="T:System.Web.UI.WebControls.BoundField" /> 的字段值。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.BoundField.GetValue%2A>方法是一个帮助器方法，用于确定字段的值。 如果在设计 <xref:System.Web.UI.WebControls.BoundField> 器中显示该对象，并且不能在设计时确定该字段的值，则将返回从方法返回的值， <xref:System.Web.UI.WebControls.BoundField.GetDesignTimeValue%2A> 而不是实际的字段值。  
  
> [!NOTE]
>  此方法主要由控件开发人员使用。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">由 <paramref name="controlContainer" /> 参数指定的容器为 <see langword="null" />。  
  
- 或 - 
<paramref name="controlContainer" /> 参数指定的容器没有数据项。  
  
- 或 - 
找不到该数据字段。</exception>
        <block subset="none" type="overrides"><para>扩展类时 <see cref="T:System.Web.UI.WebControls.BoundField" /> ，可以重写此方法以提供自定义例程来确定字段的值。</para></block>
        <altmember cref="M:System.Web.UI.WebControls.BoundField.GetDesignTimeValue" />
      </Docs>
    </Member>
    <Member MemberName="HeaderText">
      <MemberSignature Language="C#" Value="public override string HeaderText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HeaderText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BoundField.HeaderText" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property HeaderText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ HeaderText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.HeaderText : string with get, set" Usage="System.Web.UI.WebControls.BoundField.HeaderText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置显示在数据控件标头中的文本。</summary>
        <value>显示在数据控件标头中的文本。 默认值为空字符串 ("")。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用 <xref:System.Web.UI.WebControls.BoundField.HeaderText%2A> 属性可在数据控件中使用友好名称标识字段。 最常见的 <xref:System.Web.UI.WebControls.BoundField.HeaderText%2A> 属性应用是为或控件中的数据绑定字段提供有意义的列名称 <xref:System.Web.UI.WebControls.GridView> <xref:System.Web.UI.WebControls.DetailsView> 。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.BoundField.DataField" />
      </Docs>
    </Member>
    <Member MemberName="HtmlEncode">
      <MemberSignature Language="C#" Value="public virtual bool HtmlEncode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HtmlEncode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BoundField.HtmlEncode" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property HtmlEncode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool HtmlEncode { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.HtmlEncode : bool with get, set" Usage="System.Web.UI.WebControls.BoundField.HtmlEncode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示在 <see cref="T:System.Web.UI.WebControls.BoundField" /> 对象中显示字段值之前，是否对这些字段值进行 HTML 编码。</summary>
        <value>如果在 <see cref="T:System.Web.UI.WebControls.BoundField" /> 对象中显示字段值之前，对这些字段值进行 HTML 编码，则为 <see langword="true" />；否则为 <see langword="false" />。 默认为 <see langword="true" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用 <xref:System.Web.UI.WebControls.BoundField.HtmlEncode%2A> 属性来指定在对象中显示字段值之前，这些字段值是否为其各自的字符串表示形式 <xref:System.Web.UI.WebControls.BoundField> 。 例如，如果此属性为 `true` ，则字符串值 "" 将 \<script> 呈现为 " &lt; script &gt; "。 如果此属性为 `false` ，则字符串将呈现原样。  
  
> [!NOTE]
>  HTML 编码字段值有助于防止显示跨站点脚本攻击和恶意内容。 应尽可能启用此属性。  
  
   
  
## Examples  
 下面的代码示例演示如何在 <xref:System.Web.UI.WebControls.BoundField.HtmlEncode%2A> 对象中显示字段值之前，如何使用属性来防止字段值进行 HTML 编码 <xref:System.Web.UI.WebControls.BoundField> 。  
  
 [!code-aspx-csharp[BoundFieldHtmlEncode#1](~/samples/snippets/csharp/VS_Snippets_WebNet/BoundFieldHtmlEncode/CS/BoundFieldHtmlEncodecs.aspx#1)]
 [!code-aspx-vb[BoundFieldHtmlEncode#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/BoundFieldHtmlEncode/VB/BoundFieldHtmlEncodevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Web.HttpServerUtility.HtmlEncode" />
        <altmember cref="P:System.Web.UI.WebControls.BoundField.SupportsHtmlEncode" />
      </Docs>
    </Member>
    <Member MemberName="HtmlEncodeFormatString">
      <MemberSignature Language="C#" Value="public virtual bool HtmlEncodeFormatString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HtmlEncodeFormatString" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BoundField.HtmlEncodeFormatString" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property HtmlEncodeFormatString As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool HtmlEncodeFormatString { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.HtmlEncodeFormatString : bool with get, set" Usage="System.Web.UI.WebControls.BoundField.HtmlEncodeFormatString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示通过将 <see cref="P:System.Web.UI.WebControls.BoundField.DataFormatString" /> 属性应用于 <see cref="T:System.Web.UI.WebControls.BoundField" /> 值而创建的文本在显示时是否应经过 HTML 编码。</summary>
        <value>如果文本应经过 HTML 编码，则为 <see langword="true" />；否则为 <see langword="false" />。 默认为 <see langword="true" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 HTML 编码值可帮助防止显示跨站点脚本攻击和恶意内容。 如果要在浏览器中显示 HTML 代码（如显示字符串 " \<br/> "，而不是在页面中插入换行符 (元素) ，则 HTML 编码也很有用 `<br/>` 。  
  
> [!NOTE]
>  此属性是 ASP.NET 3.5 中的新增属性。 如果设置此属性，则将 `false` 还原 <xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A> 版本 ASP.NET 早于3.5 的属性的默认行为。 有关更多信息，请参见 <xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A> 属性。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.BoundField.HtmlEncode" />
        <altmember cref="P:System.Web.UI.WebControls.BoundField.DataFormatString" />
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public override bool Initialize (bool enableSorting, System.Web.UI.Control control);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Initialize(bool enableSorting, class System.Web.UI.Control control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BoundField.Initialize(System.Boolean,System.Web.UI.Control)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Initialize (enableSorting As Boolean, control As Control) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Initialize(bool enableSorting, System::Web::UI::Control ^ control);" />
      <MemberSignature Language="F#" Value="override this.Initialize : bool * System.Web.UI.Control -&gt; bool" Usage="boundField.Initialize (enableSorting, control)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enableSorting" Type="System.Boolean" />
        <Parameter Name="control" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="enableSorting">如果支持排序，则为 <see langword="true" />；否则为 <see langword="false" />。</param>
        <param name="control">拥有 <see cref="T:System.Web.UI.WebControls.BoundField" /> 的数据控件。</param>
        <summary>初始化 <see cref="T:System.Web.UI.WebControls.BoundField" /> 对象。</summary>
        <returns>在所有情况下均为 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此 <xref:System.Web.UI.WebControls.BoundField.Initialize%2A> 方法由与对象关联的数据控件调用 <xref:System.Web.UI.WebControls.BoundField> ，以便为该字段的实例执行基本对象初始化，然后将该字段添加到行集合中。 数据控件（例如 <xref:System.Web.UI.WebControls.DetailsView> ） <xref:System.Web.UI.WebControls.GridView> <xref:System.Web.UI.WebControls.DataControlField.Initialize%2A> 在 `CreateChildControls` 调用其他方法（如） `CreateRow` 创建包含数据的特定行之前，在其方法中调用方法。  
  
 在编写使用 <xref:System.Web.UI.WebControls.TableCell> 对象来执行对象的基本初始化的自定义数据绑定控件时，请调用此方法 <xref:System.Web.UI.WebControls.BoundField> 。 如果 <xref:System.Web.UI.WebControls.BoundField> 派生的类型在 <xref:System.Web.UI.WebControls.TableCell> 用方法中的数据或控件填充对象之前需要初始化对象，则实现此方法 <xref:System.Web.UI.WebControls.BoundField.InitializeCell%2A> 。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TableCell" />
        <altmember cref="M:System.Web.UI.WebControls.DataControlField.Initialize(System.Boolean,System.Web.UI.Control)" />
        <altmember cref="M:System.Web.UI.WebControls.BoundField.InitializeCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlCellType,System.Web.UI.WebControls.DataControlRowState,System.Int32)" />
        <altmember cref="M:System.Web.UI.WebControls.BoundField.InitializeDataCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlRowState)" />
      </Docs>
    </Member>
    <Member MemberName="InitializeCell">
      <MemberSignature Language="C#" Value="public override void InitializeCell (System.Web.UI.WebControls.DataControlFieldCell cell, System.Web.UI.WebControls.DataControlCellType cellType, System.Web.UI.WebControls.DataControlRowState rowState, int rowIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void InitializeCell(class System.Web.UI.WebControls.DataControlFieldCell cell, valuetype System.Web.UI.WebControls.DataControlCellType cellType, valuetype System.Web.UI.WebControls.DataControlRowState rowState, int32 rowIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BoundField.InitializeCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlCellType,System.Web.UI.WebControls.DataControlRowState,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub InitializeCell (cell As DataControlFieldCell, cellType As DataControlCellType, rowState As DataControlRowState, rowIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void InitializeCell(System::Web::UI::WebControls::DataControlFieldCell ^ cell, System::Web::UI::WebControls::DataControlCellType cellType, System::Web::UI::WebControls::DataControlRowState rowState, int rowIndex);" />
      <MemberSignature Language="F#" Value="override this.InitializeCell : System.Web.UI.WebControls.DataControlFieldCell * System.Web.UI.WebControls.DataControlCellType * System.Web.UI.WebControls.DataControlRowState * int -&gt; unit" Usage="boundField.InitializeCell (cell, cellType, rowState, rowIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cell" Type="System.Web.UI.WebControls.DataControlFieldCell" />
        <Parameter Name="cellType" Type="System.Web.UI.WebControls.DataControlCellType" />
        <Parameter Name="rowState" Type="System.Web.UI.WebControls.DataControlRowState" />
        <Parameter Name="rowIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="cell">要初始化的 <see cref="T:System.Web.UI.WebControls.TableCell" />。</param>
        <param name="cellType"><see cref="T:System.Web.UI.WebControls.DataControlCellType" /> 值之一。</param>
        <param name="rowState"><see cref="T:System.Web.UI.WebControls.DataControlRowState" /> 值之一。</param>
        <param name="rowIndex">行的索引（索引从零开始）。</param>
        <summary>将指定的 <see cref="T:System.Web.UI.WebControls.TableCell" /> 对象初始化为指定的行状态。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.BoundField.InitializeCell%2A>方法由 <xref:System.Web.UI.WebControls.BoundField> 派生类型实现，以将文本和控件添加到 <xref:System.Web.UI.WebControls.TableCell> 数据控件的对象，该对象使用表显示用户界面 (UI) 。 调用控件的方法时，这些数据控件逐行创建完整的表结构 `CreateChildControls` 。 <xref:System.Web.UI.WebControls.BoundField.InitializeCell%2A>方法由 `InitializeRow` 数据控件（如和）的方法调用 <xref:System.Web.UI.WebControls.DetailsView> <xref:System.Web.UI.WebControls.GridView> 。  
  
 编写自定义数据绑定控件时，请调用此方法，该控件使用 <xref:System.Web.UI.WebControls.TableCell> 对象初始化包含数据或控件的表结构的单元格。 在编写派生类时实现此方法 <xref:System.Web.UI.WebControls.BoundField> 。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.BoundField.Initialize(System.Boolean,System.Web.UI.Control)" />
        <altmember cref="M:System.Web.UI.WebControls.BoundField.InitializeDataCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlRowState)" />
      </Docs>
    </Member>
    <Member MemberName="InitializeDataCell">
      <MemberSignature Language="C#" Value="protected virtual void InitializeDataCell (System.Web.UI.WebControls.DataControlFieldCell cell, System.Web.UI.WebControls.DataControlRowState rowState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void InitializeDataCell(class System.Web.UI.WebControls.DataControlFieldCell cell, valuetype System.Web.UI.WebControls.DataControlRowState rowState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BoundField.InitializeDataCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlRowState)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub InitializeDataCell (cell As DataControlFieldCell, rowState As DataControlRowState)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void InitializeDataCell(System::Web::UI::WebControls::DataControlFieldCell ^ cell, System::Web::UI::WebControls::DataControlRowState rowState);" />
      <MemberSignature Language="F#" Value="abstract member InitializeDataCell : System.Web.UI.WebControls.DataControlFieldCell * System.Web.UI.WebControls.DataControlRowState -&gt; unit&#xA;override this.InitializeDataCell : System.Web.UI.WebControls.DataControlFieldCell * System.Web.UI.WebControls.DataControlRowState -&gt; unit" Usage="boundField.InitializeDataCell (cell, rowState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cell" Type="System.Web.UI.WebControls.DataControlFieldCell" />
        <Parameter Name="rowState" Type="System.Web.UI.WebControls.DataControlRowState" />
      </Parameters>
      <Docs>
        <param name="cell">要初始化的 <see cref="T:System.Web.UI.WebControls.TableCell" />。</param>
        <param name="rowState"><see cref="T:System.Web.UI.WebControls.DataControlRowState" /> 值之一。</param>
        <summary>将指定的 <see cref="T:System.Web.UI.WebControls.TableCell" /> 对象初始化为指定的行状态。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.BoundField.InitializeDataCell%2A>方法是用于初始化对象中的单元格的帮助器方法 <xref:System.Web.UI.WebControls.BoundField> 。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>扩展类时 <see cref="T:System.Web.UI.WebControls.BoundField" /> ，可以重写此方法以执行自定义的初始化例程。</para></block>
        <altmember cref="M:System.Web.UI.WebControls.BoundField.Initialize(System.Boolean,System.Web.UI.Control)" />
        <altmember cref="M:System.Web.UI.WebControls.BoundField.InitializeCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlCellType,System.Web.UI.WebControls.DataControlRowState,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="LoadViewState">
      <MemberSignature Language="C#" Value="protected override void LoadViewState (object state);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void LoadViewState(object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BoundField.LoadViewState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub LoadViewState (state As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void LoadViewState(System::Object ^ state);" />
      <MemberSignature Language="F#" Value="override this.LoadViewState : obj -&gt; unit" Usage="boundField.LoadViewState state" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="state">表示要还原的控件状态。</param>
        <summary>还原以前为此字段存储的视图状态信息。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NullDisplayText">
      <MemberSignature Language="C#" Value="public virtual string NullDisplayText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NullDisplayText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BoundField.NullDisplayText" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property NullDisplayText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ NullDisplayText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.NullDisplayText : string with get, set" Usage="System.Web.UI.WebControls.BoundField.NullDisplayText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue("")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue("")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置当字段值为 null 时为字段显示的标题。</summary>
        <value>字段值为 null 时为字段显示的标题。 默认值为空字符串 ("")，表示尚未设置此属性。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 有时字段的值在数据源中存储为 null。 通过设置属性，可以为具有 null 值的字段指定要显示的自定义标题 <xref:System.Web.UI.WebControls.BoundField.NullDisplayText%2A> 。 如果未设置此属性，则 null 字段值显示为空字符串 ( "" ) 。 当在数据绑定控件中更新或插入记录时，如果用户输入此属性指定的值 (数据绑定控件中的字段的空字符串) ，则该值在数据源中自动转换为 null。  
  
> [!NOTE]
>  若要将空字符串字段值转换为 null 值，请将 <xref:System.Web.UI.WebControls.BoundField.ConvertEmptyStringToNull%2A> 属性设置为 `true` 。  
  
   
  
## Examples  
 下面的代码示例演示如何使用 <xref:System.Web.UI.WebControls.BoundField.NullDisplayText%2A> 属性指定要为 null 字段值显示的自定义标题。  
  
 [!code-aspx-csharp[BoundFieldNullDisplayText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/BoundFieldNullDisplayText/CS/boundfieldnulldisplaytextcs.aspx#1)]
 [!code-aspx-vb[BoundFieldNullDisplayText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/BoundFieldNullDisplayText/VB/boundfieldnulldisplaytextvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.BoundField.DataField" />
        <altmember cref="P:System.Web.UI.WebControls.BoundField.DataFormatString" />
        <altmember cref="P:System.Web.UI.WebControls.BoundField.ConvertEmptyStringToNull" />
      </Docs>
    </Member>
    <Member MemberName="OnDataBindField">
      <MemberSignature Language="C#" Value="protected virtual void OnDataBindField (object sender, EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDataBindField(object sender, class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BoundField.OnDataBindField(System.Object,System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDataBindField (sender As Object, e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDataBindField(System::Object ^ sender, EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDataBindField : obj * EventArgs -&gt; unit&#xA;override this.OnDataBindField : obj * EventArgs -&gt; unit" Usage="boundField.OnDataBindField (sender, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="sender">事件源。</param>
        <param name="e">包含事件数据的 <see cref="T:System.EventArgs" />。</param>
        <summary>将字段值绑定到 <see cref="T:System.Web.UI.WebControls.BoundField" /> 对象。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.CheckBoxField.OnDataBindField%2A>方法是一个帮助器方法，用于将数据源中的字段的值绑定到该对象中的相应单元 <xref:System.Web.UI.WebControls.BoundField> 。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">字段值绑定到的控件不是 <see cref="T:System.Web.UI.WebControls.TextBox" /> 或 <see cref="T:System.Web.UI.WebControls.TableCell" />。</exception>
        <block subset="none" type="overrides"><para>扩展类时 <see cref="T:System.Web.UI.WebControls.BoundField" /> ，可以重写此方法以执行自定义绑定例程。</para></block>
        <altmember cref="T:System.EventArgs" />
        <altmember cref="T:System.Web.HttpException" />
      </Docs>
    </Member>
    <Member MemberName="ReadOnly">
      <MemberSignature Language="C#" Value="public virtual bool ReadOnly { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BoundField.ReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool ReadOnly { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ReadOnly : bool with get, set" Usage="System.Web.UI.WebControls.BoundField.ReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示是否可以在编辑模式中修改字段的值。</summary>
        <value>若要防止字段的值在编辑模式中被修改，则为 <see langword="true" />；否则为 <see langword="false" />。 默认为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用 <xref:System.Web.UI.WebControls.BoundField.ReadOnly%2A> 属性可防止修改对象中显示的值 <xref:System.Web.UI.WebControls.BoundField> 。 当数据绑定控件处于编辑模式时，只读字段将显示为纯文本，而无需任何编辑控件。  
  
> [!NOTE]
>  此 <xref:System.Web.UI.WebControls.BoundField.ReadOnly%2A> 属性仅适用于编辑模式。 若要防止字段在插入模式中显示，请使用 <xref:System.Web.UI.WebControls.DataControlField.InsertVisible%2A> 属性。  
  
   
  
## Examples  
 下面的代码示例演示如何使用 <xref:System.Web.UI.WebControls.BoundField.ReadOnly%2A> 属性来防止 <xref:System.Web.UI.WebControls.BoundField> 在编辑模式下修改对象中显示的键字段的值。  
  
 [!code-aspx-csharp[BoundField#1](~/samples/snippets/csharp/VS_Snippets_WebNet/BoundField/CS/boundfieldcs.aspx#1)]
 [!code-aspx-vb[BoundField#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/BoundField/VB/boundfieldvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.AutoGenerateEditButton" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.AutoGenerateEditButton" />
      </Docs>
    </Member>
    <Member MemberName="SupportsHtmlEncode">
      <MemberSignature Language="C#" Value="protected virtual bool SupportsHtmlEncode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsHtmlEncode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BoundField.SupportsHtmlEncode" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property SupportsHtmlEncode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property bool SupportsHtmlEncode { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsHtmlEncode : bool" Usage="System.Web.UI.WebControls.BoundField.SupportsHtmlEncode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个值，该值指示 <see cref="T:System.Web.UI.WebControls.BoundField" /> 对象是否支持 HTML 编码。</summary>
        <value>始终返回 <see langword="true" />，以指示 <see cref="T:System.Web.UI.WebControls.BoundField" /> 支持 HTML 编码。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.BoundField.SupportsHtmlEncode%2A>属性是类和派生类使用的帮助器属性，用 <xref:System.Web.UI.WebControls.BoundField> 来确定类是否支持 HTML 编码。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>从类派生时 <see cref="T:System.Web.UI.WebControls.BoundField" /> ，可以重写此属性，以指示类是否支持 HTML 编码。</para></block>
        <altmember cref="P:System.Web.UI.WebControls.BoundField.HtmlEncode" />
        <altmember cref="Overload:System.Web.HttpServerUtility.HtmlEncode" />
      </Docs>
    </Member>
    <Member MemberName="ThisExpression">
      <MemberSignature Language="C#" Value="public static readonly string ThisExpression;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string ThisExpression" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.BoundField.ThisExpression" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ThisExpression As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ ThisExpression;" />
      <MemberSignature Language="F#" Value=" staticval mutable ThisExpression : string" Usage="System.Web.UI.WebControls.BoundField.ThisExpression" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>表示“this”表达式。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此字段用于指示 <xref:System.Web.UI.WebControls.BoundField> 应将对象绑定到数据源本身，而不是数据源的字段。 在这种情况下，该对象的 `ToString` 值将显示在字段中。  
  
 此字段主要由控件开发人员使用。  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ValidateRequestMode">
      <MemberSignature Language="C#" Value="public System.Web.UI.ValidateRequestMode ValidateRequestMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.ValidateRequestMode ValidateRequestMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BoundField.ValidateRequestMode" />
      <MemberSignature Language="VB.NET" Value="Public Property ValidateRequestMode As ValidateRequestMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::ValidateRequestMode ValidateRequestMode { System::Web::UI::ValidateRequestMode get(); void set(System::Web::UI::ValidateRequestMode value); };" />
      <MemberSignature Language="F#" Value="member this.ValidateRequestMode : System.Web.UI.ValidateRequestMode with get, set" Usage="System.Web.UI.WebControls.BoundField.ValidateRequestMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ValidateRequestMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置确定控件是否验证客户端输入的值。</summary>
        <value>确定控制器是否验证客户输入的值。 默认为 <see cref="F:System.Web.UI.ValidateRequestMode.Inherit" />。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidateSupportsCallback">
      <MemberSignature Language="C#" Value="public override void ValidateSupportsCallback ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ValidateSupportsCallback() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BoundField.ValidateSupportsCallback" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub ValidateSupportsCallback ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void ValidateSupportsCallback();" />
      <MemberSignature Language="F#" Value="override this.ValidateSupportsCallback : unit -&gt; unit" Usage="boundField.ValidateSupportsCallback " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>确定包含在 <see cref="T:System.Web.UI.WebControls.BoundField" /> 对象中的控件是否支持回调。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.BoundField.ValidateSupportsCallback%2A>方法是一个帮助器方法，用于确定包含在对象中的控件是否 <xref:System.Web.UI.WebControls.BoundField> 支持回调。 此方法已实现为空方法 (一个方法，该方法不包含任何代码) 以指示支持回调。  
  
> [!NOTE]
>  此方法主要由控件开发人员使用。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>从类派生的类 <see cref="T:System.Web.UI.WebControls.BoundField" /> 可以重写此方法，以指示字段包含的控件是否支持回调。 若要指示支持回调，请将此方法实现为空方法，该方法不会引发异常;否则，将引发异常，并提供有用的消息，说明不支持回调的原因。</para></block>
        <altmember cref="M:System.Web.UI.WebControls.DataControlField.ValidateSupportsCallback" />
      </Docs>
    </Member>
  </Members>
</Type>
