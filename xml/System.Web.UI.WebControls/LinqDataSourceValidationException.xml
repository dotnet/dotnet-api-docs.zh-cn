<Type Name="LinqDataSourceValidationException" FullName="System.Web.UI.WebControls.LinqDataSourceValidationException">
  <Metadata><Meta Name="ms.openlocfilehash" Value="121c1fd981e0d2c4883fdbf789d7a3d85043b998" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86626947" /></Metadata><TypeSignature Language="C#" Value="public class LinqDataSourceValidationException : Exception, System.Web.DynamicData.IDynamicValidatorException" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit LinqDataSourceValidationException extends System.Exception implements class System.Runtime.Serialization.ISerializable, class System.Web.DynamicData.IDynamicValidatorException" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.LinqDataSourceValidationException" />
  <TypeSignature Language="VB.NET" Value="Public Class LinqDataSourceValidationException&#xA;Inherits Exception&#xA;Implements IDynamicValidatorException" />
  <TypeSignature Language="C++ CLI" Value="public ref class LinqDataSourceValidationException : Exception, System::Web::DynamicData::IDynamicValidatorException" />
  <TypeSignature Language="F#" Value="type LinqDataSourceValidationException = class&#xA;    inherit Exception&#xA;    interface IDynamicValidatorException&#xA;    interface ISerializable" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Exception</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.ISerializable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.DynamicData.IDynamicValidatorException</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.Serializable]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Serializable&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="68743-101">描述在 <see cref="T:System.Web.UI.WebControls.LinqDataSource" /> 控件插入、更新或删除值之前验证新值或修改后的值期间发生的异常。</span><span class="sxs-lookup"><span data-stu-id="68743-101">Describes an exception that occurred during validation of new or modified values before values are inserted, updated, or deleted by a <see cref="T:System.Web.UI.WebControls.LinqDataSource" /> control.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68743-102"><xref:System.Web.UI.WebControls.LinqDataSourceValidationException>类包含类型转换和属性 setter 异常。</span><span class="sxs-lookup"><span data-stu-id="68743-102">The <xref:System.Web.UI.WebControls.LinqDataSourceValidationException> class contains type conversion and property setter exceptions.</span></span> <span data-ttu-id="68743-103">在验证过程中引发的所有异常都包含在集合中 <xref:System.Web.UI.WebControls.LinqDataSourceValidationException.InnerExceptions%2A> 。</span><span class="sxs-lookup"><span data-stu-id="68743-103">All of the exceptions that are thrown during validation are contained in the <xref:System.Web.UI.WebControls.LinqDataSourceValidationException.InnerExceptions%2A> collection.</span></span> <span data-ttu-id="68743-104">可以通过循环访问集合来检索每个验证异常 <xref:System.Web.UI.WebControls.LinqDataSourceValidationException.InnerExceptions%2A> 。</span><span class="sxs-lookup"><span data-stu-id="68743-104">You can retrieve each validation exception by iterating through the <xref:System.Web.UI.WebControls.LinqDataSourceValidationException.InnerExceptions%2A> collection.</span></span>  
  
 <span data-ttu-id="68743-105">通常会在 <xref:System.Web.UI.WebControls.LinqDataSource.Updating> 、 <xref:System.Web.UI.WebControls.LinqDataSource.Deleting> 和事件中处理异常 <xref:System.Web.UI.WebControls.LinqDataSource.Inserting> 。</span><span class="sxs-lookup"><span data-stu-id="68743-105">You typically handle exceptions in the <xref:System.Web.UI.WebControls.LinqDataSource.Updating>, <xref:System.Web.UI.WebControls.LinqDataSource.Deleting>, and <xref:System.Web.UI.WebControls.LinqDataSource.Inserting> events.</span></span> <span data-ttu-id="68743-106">如果引发验证异常， `Exception` 则 <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs> 、或对象的属性将 <xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs> <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs> 包含一个 <xref:System.Web.UI.WebControls.LinqDataSourceValidationException> 对象。</span><span class="sxs-lookup"><span data-stu-id="68743-106">If a validation exception is thrown, the `Exception` property of the <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs>, <xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs>, or <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs> object contains a <xref:System.Web.UI.WebControls.LinqDataSourceValidationException> object.</span></span> <span data-ttu-id="68743-107">如果未引发异常，则 `Exception` 属性将包含 `null` 。</span><span class="sxs-lookup"><span data-stu-id="68743-107">If no exception is thrown, the `Exception` property contains `null`.</span></span>  
  
 <span data-ttu-id="68743-108">若要处理验证异常，请为 <xref:System.Web.UI.WebControls.LinqDataSource.Updating> 、或事件创建处理程序 <xref:System.Web.UI.WebControls.LinqDataSource.Deleting> <xref:System.Web.UI.WebControls.LinqDataSource.Inserting> 。</span><span class="sxs-lookup"><span data-stu-id="68743-108">To handle validation exceptions, create a handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Updating>, <xref:System.Web.UI.WebControls.LinqDataSource.Deleting>, or <xref:System.Web.UI.WebControls.LinqDataSource.Inserting> event.</span></span> <span data-ttu-id="68743-109">在事件处理程序中，检查 `Exception` 事件参数类的属性是否包含以外的值 `null` 。</span><span class="sxs-lookup"><span data-stu-id="68743-109">In the event handler, check whether the `Exception` property of the event argument class contains a value other than `null`.</span></span> <span data-ttu-id="68743-110">如果 `Exception` 属性不为 null，则引发一个或多个验证异常，你可以在属性中检索每个验证异常 <xref:System.Web.UI.WebControls.LinqDataSourceValidationException.InnerExceptions%2A> 。</span><span class="sxs-lookup"><span data-stu-id="68743-110">If the `Exception` property is not null, one or more validation exceptions were thrown and you can retrieve each validation exception in the <xref:System.Web.UI.WebControls.LinqDataSourceValidationException.InnerExceptions%2A> property.</span></span>  
  
 <span data-ttu-id="68743-111">如果值与属性的类型不匹配，则会发生验证异常。</span><span class="sxs-lookup"><span data-stu-id="68743-111">A validation exception can occur if a value does not match the type of the property.</span></span> <span data-ttu-id="68743-112">例如，尝试使用非数字字符更新整数属性会导致验证异常。</span><span class="sxs-lookup"><span data-stu-id="68743-112">For example, trying to update an integer property by using non-numeric characters causes a validation exception.</span></span> <span data-ttu-id="68743-113">LINQ to SQL 类还可以包含自定义验证条件，这些条件可确保属性包含的值在预期范围或模式内。</span><span class="sxs-lookup"><span data-stu-id="68743-113">A LINQ to SQL class can also contain customized validation criteria that make sure that the property contains a value that is within an expected range or pattern.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="68743-114">下面的示例演示事件的事件处理程序 <xref:System.Web.UI.WebControls.LinqDataSource.Updating> 。</span><span class="sxs-lookup"><span data-stu-id="68743-114">The following example shows an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Updating> event.</span></span> <span data-ttu-id="68743-115">它通过使用控件显示任何验证异常消息 <xref:System.Web.UI.WebControls.Label> 。</span><span class="sxs-lookup"><span data-stu-id="68743-115">It displays any validation exception messages by using a <xref:System.Web.UI.WebControls.Label> control.</span></span>  
  
```vb  
Protected Sub LinqDataSource_Updating(ByVal sender As Object, _  
        ByVal e As LinqDataSourceUpdateEventArgs)  
    If (e.Exception IsNot Nothing) Then  
        For Each innerException As KeyValuePair(Of String, Exception) _  
               In e.Exception.InnerExceptions  
            Label1.Text &= innerException.Key & ": " & _  
                innerException.Value.Message & "<br />"  
        Next  
        e.ExceptionHandled = True  
    End If  
End Sub  
```  
  
```csharp  
protected void LinqDataSource_Updating(object sender,   
        LinqDataSourceUpdateEventArgs e)  
{  
    if (e.Exception != null)  
    {  
        foreach (KeyValuePair<string, Exception> innerException in   
             e.Exception.InnerExceptions)  
        {  
        Label1.Text += innerException.Key + ": " +   
            innerException.Value.Message + "<br />";  
        }  
        e.ExceptionHandled = true;  
    }  
}  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="68743-116">初始化 <see cref="T:System.Web.UI.WebControls.LinqDataSourceValidationException" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="68743-116">Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.LinqDataSourceValidationException" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LinqDataSourceValidationException ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LinqDataSourceValidationException.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LinqDataSourceValidationException();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="68743-117">使用说明错误的系统提供的消息初始化 <see cref="T:System.Web.UI.WebControls.LinqDataSourceValidationException" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="68743-117">Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.LinqDataSourceValidationException" /> class with a system-supplied message that describes the error.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68743-118">系统提供的描述错误的消息将考虑当前系统区域性。</span><span class="sxs-lookup"><span data-stu-id="68743-118">The system-supplied message that describes the error takes into account the current system culture.</span></span>  
  
 <span data-ttu-id="68743-119">下表显示 <xref:System.Web.UI.WebControls.LinqDataSourceValidationException> 类的实例的初始属性值。</span><span class="sxs-lookup"><span data-stu-id="68743-119">The following table shows the initial property values for an instance of the <xref:System.Web.UI.WebControls.LinqDataSourceValidationException> class.</span></span>  
  
|<span data-ttu-id="68743-120">properties</span><span class="sxs-lookup"><span data-stu-id="68743-120">Property</span></span>|<span data-ttu-id="68743-121">“值”</span><span class="sxs-lookup"><span data-stu-id="68743-121">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|<span data-ttu-id="68743-122">`null`.</span><span class="sxs-lookup"><span data-stu-id="68743-122">`null`.</span></span>|  
|<xref:System.Exception.Message%2A>|<span data-ttu-id="68743-123">系统提供的本地化说明。</span><span class="sxs-lookup"><span data-stu-id="68743-123">A system-supplied localized description.</span></span>|  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/standard/exceptions/"><span data-ttu-id="68743-124">处理和引发异常</span><span class="sxs-lookup"><span data-stu-id="68743-124">Handling and Throwing Exceptions</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LinqDataSourceValidationException (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LinqDataSourceValidationException.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LinqDataSourceValidationException(System::String ^ message);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.LinqDataSourceValidationException : string -&gt; System.Web.UI.WebControls.LinqDataSourceValidationException" Usage="new System.Web.UI.WebControls.LinqDataSourceValidationException message" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="68743-125">描述错误的消息。</span><span class="sxs-lookup"><span data-stu-id="68743-125">The message that describes the error.</span></span></param>
        <summary><span data-ttu-id="68743-126">使用说明错误的指定消息初始化 <see cref="T:System.Web.UI.WebControls.LinqDataSourceValidationException" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="68743-126">Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.LinqDataSourceValidationException" /> class with a specified message that describes the error.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68743-127">下表显示 <xref:System.Web.UI.WebControls.LinqDataSourceValidationException> 类的实例的初始属性值。</span><span class="sxs-lookup"><span data-stu-id="68743-127">The following table shows the initial property values for an instance of the <xref:System.Web.UI.WebControls.LinqDataSourceValidationException> class.</span></span>  
  
|<span data-ttu-id="68743-128">properties</span><span class="sxs-lookup"><span data-stu-id="68743-128">Property</span></span>|<span data-ttu-id="68743-129">“值”</span><span class="sxs-lookup"><span data-stu-id="68743-129">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|<span data-ttu-id="68743-130">`null`.</span><span class="sxs-lookup"><span data-stu-id="68743-130">`null`.</span></span>|  
|<xref:System.Exception.Message%2A>|<span data-ttu-id="68743-131">`message` 中指定的错误消息字符串。</span><span class="sxs-lookup"><span data-stu-id="68743-131">The error message string specified in `message`.</span></span>|  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/standard/exceptions/"><span data-ttu-id="68743-132">处理和引发异常</span><span class="sxs-lookup"><span data-stu-id="68743-132">Handling and Throwing Exceptions</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected LinqDataSourceValidationException (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LinqDataSourceValidationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; LinqDataSourceValidationException(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.LinqDataSourceValidationException : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; System.Web.UI.WebControls.LinqDataSourceValidationException" Usage="new System.Web.UI.WebControls.LinqDataSourceValidationException (info, context)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info"><span data-ttu-id="68743-133">承载序列化对象数据的对象。</span><span class="sxs-lookup"><span data-stu-id="68743-133">The object that holds the serialized object data.</span></span></param>
        <param name="context"><span data-ttu-id="68743-134">有关源或目标的上下文信息。</span><span class="sxs-lookup"><span data-stu-id="68743-134">Context information about the source or destination.</span></span></param>
        <summary><span data-ttu-id="68743-135">用序列化数据初始化 <see cref="T:System.Web.UI.WebControls.LinqDataSourceValidationException" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="68743-135">Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.LinqDataSourceValidationException" /> class with serialized data.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68743-136">在反序列化过程中调用此构造函数来重建通过流传输的异常对象。</span><span class="sxs-lookup"><span data-stu-id="68743-136">This constructor is called during deserialization to reconstitute the exception object that is transmitted over a stream.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LinqDataSourceValidationException (string message, System.Collections.Generic.IDictionary&lt;string,Exception&gt; innerExceptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message, class System.Collections.Generic.IDictionary`2&lt;string, class System.Exception&gt; innerExceptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LinqDataSourceValidationException.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.Exception})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String, innerExceptions As IDictionary(Of String, Exception))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LinqDataSourceValidationException(System::String ^ message, System::Collections::Generic::IDictionary&lt;System::String ^, Exception ^&gt; ^ innerExceptions);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.LinqDataSourceValidationException : string * System.Collections.Generic.IDictionary&lt;string, Exception&gt; -&gt; System.Web.UI.WebControls.LinqDataSourceValidationException" Usage="new System.Web.UI.WebControls.LinqDataSourceValidationException (message, innerExceptions)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="innerExceptions" Type="System.Collections.Generic.IDictionary&lt;System.String,System.Exception&gt;" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="68743-137">描述错误的消息。</span><span class="sxs-lookup"><span data-stu-id="68743-137">The message that describes the error.</span></span></param>
        <param name="innerExceptions"><span data-ttu-id="68743-138">验证异常的集合。</span><span class="sxs-lookup"><span data-stu-id="68743-138">The collection of validation exceptions.</span></span></param>
        <summary><span data-ttu-id="68743-139">使用描述错误的指定消息和对内部异常的引用集合来初始化 <see cref="T:System.Web.UI.WebControls.LinqDataSourceValidationException" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="68743-139">Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.LinqDataSourceValidationException" /> class with a specified message that describes the error, and a collection of references to inner exceptions.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LinqDataSourceValidationException (string message, Exception innerException);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message, class System.Exception innerException) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LinqDataSourceValidationException.#ctor(System.String,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String, innerException As Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LinqDataSourceValidationException(System::String ^ message, Exception ^ innerException);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.LinqDataSourceValidationException : string * Exception -&gt; System.Web.UI.WebControls.LinqDataSourceValidationException" Usage="new System.Web.UI.WebControls.LinqDataSourceValidationException (message, innerException)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="innerException" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="68743-140">描述错误的消息。</span><span class="sxs-lookup"><span data-stu-id="68743-140">The message that describes the error.</span></span></param>
        <param name="innerException"><span data-ttu-id="68743-141">导致当前异常的异常。</span><span class="sxs-lookup"><span data-stu-id="68743-141">The exception that is the cause of the current exception.</span></span></param>
        <summary><span data-ttu-id="68743-142">使用指定的错误消息和对内部异常的引用初始化 <see cref="T:System.Web.UI.WebControls.LinqDataSourceValidationException" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="68743-142">Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.LinqDataSourceValidationException" /> class with a specified error message and a reference to the inner exception.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68743-143">通常不会使用此构造函数，因为验证异常存储在 <xref:System.Web.UI.WebControls.LinqDataSourceValidationException.InnerExceptions%2A> 属性中，而不是 <xref:System.Exception.InnerException%2A> 属性中。</span><span class="sxs-lookup"><span data-stu-id="68743-143">You typically will not use this constructor because validation exceptions are stored in the <xref:System.Web.UI.WebControls.LinqDataSourceValidationException.InnerExceptions%2A> property, not the <xref:System.Exception.InnerException%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/standard/exceptions/"><span data-ttu-id="68743-144">处理和引发异常</span><span class="sxs-lookup"><span data-stu-id="68743-144">Handling and Throwing Exceptions</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetObjectData">
      <MemberSignature Language="C#" Value="public override void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LinqDataSourceValidationException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub GetObjectData (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="override this.GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit" Usage="linqDataSourceValidationException.GetObjectData (info, context)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Security.SecurityCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecurityCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info"><span data-ttu-id="68743-145">一个对象，保存有关所引发异常的序列化对象数据。</span><span class="sxs-lookup"><span data-stu-id="68743-145">The object that holds the serialized object data for the exception that is being thrown.</span></span></param>
        <param name="context"><span data-ttu-id="68743-146">有关源或目标的上下文信息。</span><span class="sxs-lookup"><span data-stu-id="68743-146">Context information about the source or destination.</span></span></param>
        <summary><span data-ttu-id="68743-147">获取关于异常的信息并将其添加到 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="68743-147">Gets information about the exception and adds it to the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68743-148"><xref:System.Web.UI.WebControls.LinqDataSourceValidationException.GetObjectData%2A>方法将有关异常的信息添加到 <xref:System.Runtime.Serialization.SerializationInfo> 作为序列化目标的对象。</span><span class="sxs-lookup"><span data-stu-id="68743-148">The <xref:System.Web.UI.WebControls.LinqDataSourceValidationException.GetObjectData%2A> method adds information about the exception to the <xref:System.Runtime.Serialization.SerializationInfo> object that is targeted for serialization.</span></span> <span data-ttu-id="68743-149">在反序列化期间，将从通过流传输的重新构造异常 <xref:System.Runtime.Serialization.SerializationInfo> 。</span><span class="sxs-lookup"><span data-stu-id="68743-149">During deserialization, the exception is reconstituted from the <xref:System.Runtime.Serialization.SerializationInfo> that is transmitted over the stream.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InnerExceptions">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;string,Exception&gt; InnerExceptions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;string, class System.Exception&gt; InnerExceptions" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSourceValidationException.InnerExceptions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InnerExceptions As IDictionary(Of String, Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IDictionary&lt;System::String ^, Exception ^&gt; ^ InnerExceptions { System::Collections::Generic::IDictionary&lt;System::String ^, Exception ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InnerExceptions : System.Collections.Generic.IDictionary&lt;string, Exception&gt;" Usage="System.Web.UI.WebControls.LinqDataSourceValidationException.InnerExceptions" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IDynamicValidatorException.InnerExceptions</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.Exception&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="68743-150">获取在验证新值或修改后的值期间发生的一个或多个异常。</span><span class="sxs-lookup"><span data-stu-id="68743-150">Gets one or more exceptions that occurred when new or modified data was being validated.</span></span></summary>
        <value><span data-ttu-id="68743-151">一个包含异常的集合。</span><span class="sxs-lookup"><span data-stu-id="68743-151">A collection that contains the exceptions.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68743-152"><xref:System.Web.UI.WebControls.LinqDataSourceValidationException.InnerExceptions%2A>集合包含在更新、插入或删除操作之前在数据验证期间引发的所有验证异常。</span><span class="sxs-lookup"><span data-stu-id="68743-152">The <xref:System.Web.UI.WebControls.LinqDataSourceValidationException.InnerExceptions%2A> collection contains all the validation exceptions that were thrown during data validation before an update, insert, or delete operation.</span></span> <span data-ttu-id="68743-153">如果值与属性的类型不匹配，则会发生验证异常。</span><span class="sxs-lookup"><span data-stu-id="68743-153">A validation exception can occur if a value does not match the type of the property.</span></span> <span data-ttu-id="68743-154">例如，如果你尝试使用非数字字符更新整数属性，则会引发验证异常。</span><span class="sxs-lookup"><span data-stu-id="68743-154">For example, if you try to update an integer property by using non-numeric characters, a validation exception is thrown.</span></span> <span data-ttu-id="68743-155">LINQ to SQL 类还可以包含自定义验证条件，这些条件可确保属性包含的值在预期范围或模式内。</span><span class="sxs-lookup"><span data-stu-id="68743-155">A LINQ to SQL class can also contain customized validation criteria that make sure that the property contains a value that is within an expected range or pattern.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="68743-156">下面的示例演示事件的事件处理程序 <xref:System.Web.UI.WebControls.LinqDataSource.Updating> 。</span><span class="sxs-lookup"><span data-stu-id="68743-156">The following example shows an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Updating> event.</span></span> <span data-ttu-id="68743-157">它通过使用控件显示任何验证异常消息 <xref:System.Web.UI.WebControls.Label> 。</span><span class="sxs-lookup"><span data-stu-id="68743-157">It displays any validation exception messages by using a <xref:System.Web.UI.WebControls.Label> control.</span></span>  
  
```vb  
Protected Sub LinqDataSource_Updating(ByVal sender As Object, _  
        ByVal e As LinqDataSourceUpdateEventArgs)  
    If (e.Exception IsNot Nothing) Then  
        For Each innerException As KeyValuePair(Of String, Exception) _  
                In e.Exception.InnerExceptions  
          Label1.Text &= innerException.Key & ": " & _   
                  innerException.Value.Message & "<br />"  
        Next  
        e.ExceptionHandled = True  
    End If  
End Sub  
```  
  
```csharp  
protected void LinqDataSource_Updating(object sender,   
        LinqDataSourceUpdateEventArgs e)   
{  
    if (e.Exception != null)  
    {  
        foreach (KeyValuePair<string, Exception> innerException in   
            e.Exception.InnerExceptions)  
        {  
            Label1.Text += innerException.Key + ": " +   
                innerException.Message + "<br />";  
        }  
        e.ExceptionHandled = true;  
    }  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
