<Type Name="BaseValidator" FullName="System.Web.UI.WebControls.BaseValidator">
  <Metadata><Meta Name="ms.openlocfilehash" Value="adff7cdf70972c037a39899703dcdc290850ce11" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89948175" /></Metadata><TypeSignature Language="C#" Value="public abstract class BaseValidator : System.Web.UI.WebControls.Label, System.Web.UI.IValidator" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit BaseValidator extends System.Web.UI.WebControls.Label implements class System.Web.UI.IValidator" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.BaseValidator" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class BaseValidator&#xA;Inherits Label&#xA;Implements IValidator" />
  <TypeSignature Language="C++ CLI" Value="public ref class BaseValidator abstract : System::Web::UI::WebControls::Label, System::Web::UI::IValidator" />
  <TypeSignature Language="F#" Value="type BaseValidator = class&#xA;    inherit Label&#xA;    interface IValidator" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.Label</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.UI.IValidator</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.ComponentModel.DefaultProperty("ErrorMessage")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultProperty("ErrorMessage")&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1">
      <AttributeName Language="C#">[System.ComponentModel.Designer("System.Web.UI.Design.WebControls.BaseValidatorDesigner, System.Design, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.ComponentModel.Designer("System.Web.UI.Design.WebControls.BaseValidatorDesigner, System.Design, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName Language="C#">[System.ComponentModel.Designer("System.Web.UI.Design.WebControls.BaseValidatorDesigner, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.ComponentModel.Designer("System.Web.UI.Design.WebControls.BaseValidatorDesigner, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName Language="C#">[System.ComponentModel.Designer("System.Web.UI.Design.WebControls.BaseValidatorDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.ComponentModel.Designer("System.Web.UI.Design.WebControls.BaseValidatorDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>用作验证控件的抽象基类。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.BaseValidator>类为所有验证控件提供核心实现。 验证控件用于验证关联的输入控件中的用户输入。 当用户输入的值未通过验证时，验证控件将显示错误消息。 因为验证控件与输入控件分离，所以可以将错误消息放置在页面上相对于输入控件的任何位置。 ASP.NET 提供多个执行特定类型的验证的验证控件。 下表介绍了这些控件。

|验证控件|说明|
|------------------------|-----------------|
|<xref:System.Web.UI.WebControls.CompareValidator>|通过将属性设置为，对输入到其他输入控件中的值、常数值或正确的数据类型验证值 <xref:System.Web.UI.WebControls.CompareValidator.Operator%2A?displayProperty=nameWithType> <xref:System.Web.UI.WebControls.ValidationCompareOperator.DataTypeCheck?displayProperty=nameWithType> 。|
|<xref:System.Web.UI.WebControls.CustomValidator>|使用用户提供的自定义验证例程来验证值。|
|<xref:System.Web.UI.WebControls.RangeValidator>|验证值是否在值的范围内。|
|<xref:System.Web.UI.WebControls.RegularExpressionValidator>|使用正则表达式验证值。|
|<xref:System.Web.UI.WebControls.RequiredFieldValidator>|验证是否已在必填字段中输入值。|

 验证控件始终验证服务器上关联的输入控件。 验证控件还具有完整的客户端实现，该实现允许启用脚本的浏览器 (例如 Microsoft Internet Explorer 版本4.0 和更高版本) 在客户端上执行验证。 客户端验证通过在将用户输入发送到服务器之前检查用户输入来增强验证过程。 这允许在提交窗体前在客户端上检测到错误，从而避免服务器端验证所需的信息往返。

 多个验证控件可以与单个输入控件一起用于验证不同的条件。 例如，可以对控件应用多个验证控件 <xref:System.Web.UI.WebControls.TextBox> 。 您可以使用 <xref:System.Web.UI.WebControls.RangeValidator> 控件来确保在控件中输入的值 <xref:System.Web.UI.WebControls.TextBox> 位于集范围内，并使用 <xref:System.Web.UI.WebControls.RequiredFieldValidator> 控件确保用户输入值。

 ASP.NET 提供了许多可以回发到服务器的控件。 当其中一个控件的 `CausesValidation` 属性设置为时 `true` ，将在控件回发到服务器时执行验证。 以下控件能够回发到服务器：

-   <xref:System.Web.UI.WebControls.BulletedList?displayProperty=nameWithType>

-   <xref:System.Web.UI.WebControls.Button?displayProperty=nameWithType>

-   <xref:System.Web.UI.WebControls.CheckBox?displayProperty=nameWithType>

-   <xref:System.Web.UI.WebControls.CheckBoxList?displayProperty=nameWithType>

-   <xref:System.Web.UI.WebControls.DropDownList?displayProperty=nameWithType>

-   <xref:System.Web.UI.HtmlControls.HtmlButton?displayProperty=nameWithType>

-   <xref:System.Web.UI.HtmlControls.HtmlInputButton?displayProperty=nameWithType>

-   <xref:System.Web.UI.HtmlControls.HtmlInputImage?displayProperty=nameWithType>

-   <xref:System.Web.UI.WebControls.ImageButton?displayProperty=nameWithType>

-   <xref:System.Web.UI.WebControls.LinkButton?displayProperty=nameWithType>

-   <xref:System.Web.UI.WebControls.ListBox?displayProperty=nameWithType>

-   <xref:System.Web.UI.WebControls.RadioButtonList?displayProperty=nameWithType>

-   <xref:System.Web.UI.WebControls.TextBox?displayProperty=nameWithType>

> [!NOTE]
>  其中某些控件只有在属性设置为时才会回发到服务器 `AutoPostBack` `true` 。

 每个控件都有一个 `ValidationGroup` 属性，设置此属性后，当控件触发回发到服务器时，只验证指定组中的验证控件。 若要对验证控件进行分组，请将 <xref:System.Web.UI.WebControls.BaseValidator.ValidationGroup%2A> 每个验证控件的属性设置为相同的值。

 若要将输入控件与验证控件关联，请使用 <xref:System.Web.UI.WebControls.BaseValidator.ControlToValidate%2A> 属性。 若要指定验证失败时要在验证控件中显示的文本，请使用 <xref:System.Web.UI.WebControls.BaseValidator.Text%2A> 属性。 还可以通过使用控件显示页中验证失败的所有控件的摘要 <xref:System.Web.UI.WebControls.ValidationSummary> 。 若要指定要在控件中显示的文本 <xref:System.Web.UI.WebControls.ValidationSummary> ，请使用 <xref:System.Web.UI.WebControls.BaseValidator.ErrorMessage%2A> 属性。

> [!NOTE]
>  如果在 <xref:System.Web.UI.WebControls.BaseValidator.ErrorMessage%2A> 未设置属性的情况下设置属性，则该 <xref:System.Web.UI.WebControls.BaseValidator.Text%2A> 属性的值 <xref:System.Web.UI.WebControls.BaseValidator.ErrorMessage%2A> 也会显示在验证控件中。

 使用验证程序控件时，应始终检查服务器端验证的结果，然后再执行任何处理。 在回发之后但在调用事件方法之前，页面调用验证程序控件并将其结果聚合到 <xref:System.Web.UI.Page.IsValid%2A?displayProperty=nameWithType> 属性中。  (你还可以使用方法显式调用验证程序控件 `Validate` 。 ) 在你自己的代码中，应检查属性是否在 <xref:System.Web.UI.Page.IsValid%2A?displayProperty=nameWithType> `true` 处理输入之前返回。 即使启用了脚本的浏览器可能会阻止在验证检查失败的情况下在客户端上发生回发，还应始终 <xref:System.Web.UI.Page.IsValid%2A?displayProperty=nameWithType> 在处理验证的数据之前签入服务器代码。

 您也可以手动执行验证。 若要验证页上的所有验证控件，请使用 <xref:System.Web.UI.Page.Validate%2A?displayProperty=nameWithType> 方法。 可以通过使用控件的方法来验证各个验证控件 <xref:System.Web.UI.WebControls.BaseValidator.Validate%2A> 。

> [!NOTE]
>  如果在 <xref:System.Web.UI.Page.IsValid%2A?displayProperty=nameWithType> 方法中使用属性 `Page_Load` ，则必须先显式调用 <xref:System.Web.UI.Page.Validate%2A?displayProperty=nameWithType> 方法。 由于验证发生在 <xref:System.Web.UI.Control.Load?displayProperty=nameWithType> 页的事件之后、或事件的事件处理程序之前，因此在 `Click` `Command` <xref:System.Web.UI.Page.IsValid%2A?displayProperty=nameWithType> 调用方法之前，不会更新属性 <xref:System.Web.UI.Page.Validate%2A?displayProperty=nameWithType> 。 作为替代方法，可以在或事件的事件处理程序 `Click` `Command` （而不是方法）中放置代码 `Page_Load` 。

 并非所有 Web 服务器控件都支持验证控件。 可使用验证控件验证的标准控件包括：

-   <xref:System.Web.UI.WebControls.DropDownList?displayProperty=nameWithType>

-   <xref:System.Web.UI.WebControls.FileUpload?displayProperty=nameWithType>

-   <xref:System.Web.UI.WebControls.ListBox?displayProperty=nameWithType>

-   <xref:System.Web.UI.WebControls.RadioButtonList?displayProperty=nameWithType>

-   <xref:System.Web.UI.WebControls.TextBox?displayProperty=nameWithType>

-   <xref:System.Web.UI.HtmlControls.HtmlInputFile?displayProperty=nameWithType>

-   <xref:System.Web.UI.HtmlControls.HtmlInputPassword?displayProperty=nameWithType>

-   <xref:System.Web.UI.HtmlControls.HtmlInputText?displayProperty=nameWithType>

-   <xref:System.Web.UI.HtmlControls.HtmlSelect?displayProperty=nameWithType>

-   <xref:System.Web.UI.HtmlControls.HtmlTextArea?displayProperty=nameWithType>

> [!NOTE]
>  对于要验证的输入控件，必须将 <xref:System.Web.UI.ValidationPropertyAttribute?displayProperty=nameWithType> 特性应用于控件。

> [!NOTE]
>  使用从控件内派生的验证程序控件时 <xref:System.Web.UI.WebControls.BaseValidator> <xref:System.Web.UI.UpdatePanel> ，请确保验证程序控件及其关联的控件位于同一面板中。 有关将 <xref:System.Web.UI.UpdatePanel> 控件用于部分页面更新的详细信息，请参阅 [部分页呈现概述](https://docs.microsoft.com/previous-versions/aspnet/bb386573(v=vs.100))。

 当验证失败时，您可以通过将属性设置为来在关联的输入控件上设置焦点 <xref:System.Web.UI.WebControls.BaseValidator.SetFocusOnError%2A> `true` 。

 有关实例的初始属性值的列表 <xref:System.Web.UI.WebControls.BaseValidator> ，请参见 <xref:System.Web.UI.WebControls.BaseValidator.%23ctor%2A> 构造函数。

## <a name="accessibility"></a>可访问性
 有关如何配置此控件以生成符合辅助功能标准的标记的信息，请参阅 [Visual Studio 中的辅助功能和 ASP.NET](https://docs.microsoft.com/previous-versions/ms228004(v=vs.140)) 和 [ASP.NET 控件和辅助功能](https://docs.microsoft.com/previous-versions/ms227996(v=vs.140))。



## Examples
 下面的代码示例演示如何使用多个验证控件来验证用户是否在控件中输入了有效值 <xref:System.Web.UI.WebControls.TextBox> 。

> [!IMPORTANT]
>  此示例具有一个接受用户输入的文本框，这是一个潜在的安全威胁。 默认情况下，ASP.NET 网页验证用户输入是否不包含脚本或 HTML 元素。 有关详细信息，请参阅[脚本侵入概述](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100))。

 [!code-aspx-csharp[Classic BaseValidator Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic BaseValidator Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic BaseValidator Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic BaseValidator Example/VB/sourcevb.aspx#1)]

 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para>从类继承时 <see cref="T:System.Web.UI.WebControls.BaseValidator" /> ，必须重写以下成员： <see cref="M:System.Web.UI.WebControls.BaseValidator.EvaluateIsValid" /> 。</para></block>
    <altmember cref="T:System.Web.UI.WebControls.CompareValidator" />
    <altmember cref="T:System.Web.UI.WebControls.CustomValidator" />
    <altmember cref="T:System.Web.UI.WebControls.RangeValidator" />
    <altmember cref="T:System.Web.UI.WebControls.RegularExpressionValidator" />
    <altmember cref="T:System.Web.UI.WebControls.RequiredFieldValidator" />
    <altmember cref="T:System.Web.UI.WebControls.ValidationSummary" />
    <altmember cref="P:System.Web.UI.WebControls.IButtonControl.CausesValidation" />
    <altmember cref="P:System.Web.UI.WebControls.BaseValidator.ErrorMessage" />
    <altmember cref="P:System.Web.UI.WebControls.BaseValidator.Text" />
    <altmember cref="P:System.Web.UI.WebControls.BaseValidator.ValidationGroup" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected BaseValidator ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BaseValidator.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; BaseValidator();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Web.UI.WebControls.BaseValidator" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 不直接调用此构造函数。 继承自此类的验证控件可以从其自己的构造函数调用此构造函数以初始化基属性。

 下表显示了实例的初始属性值 <xref:System.Web.UI.WebControls.BaseValidator> 。

|属性|初始值|
|--------------|-------------------|
|<xref:System.Web.UI.WebControls.BaseValidator.IsValid%2A>|`true`|
|<xref:System.Web.UI.WebControls.BaseValidator.ForeColor%2A>|<xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType>|
|<xref:System.Web.UI.WebControls.BaseValidator.PropertiesValid%2A>|`true`|
|<xref:System.Web.UI.WebControls.BaseValidator.RenderUplevel%2A>|`false`|

 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.CompareValidator.#ctor" />
        <altmember cref="M:System.Web.UI.WebControls.CustomValidator.#ctor" />
        <altmember cref="M:System.Web.UI.WebControls.RangeValidator.#ctor" />
        <altmember cref="M:System.Web.UI.WebControls.RegularExpressionValidator.#ctor" />
        <altmember cref="M:System.Web.UI.WebControls.RequiredFieldValidator.#ctor" />
      </Docs>
    </Member>
    <Member MemberName="AddAttributesToRender">
      <MemberSignature Language="C#" Value="protected override void AddAttributesToRender (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void AddAttributesToRender(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BaseValidator.AddAttributesToRender(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub AddAttributesToRender (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void AddAttributesToRender(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.AddAttributesToRender : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="baseValidator.AddAttributesToRender writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">表示在客户端上呈现 HTML 内容的输出流的 <see cref="T:System.Web.UI.HtmlTextWriter" />。</param>
        <summary>将需要为控件呈现的 HTML 特性和样式添加到指定的 <see cref="T:System.Web.UI.HtmlTextWriter" /> 对象。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.BaseValidator.AddAttributesToRender%2A>方法用于呈现控件的 HTML 标记中控件的特性。 此方法通常由派生类中的控件开发人员重写，以将适当的特性和样式插入 <xref:System.Web.UI.HtmlTextWriter> 控件的输出流中。

 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>重写 <see cref="M:System.Web.UI.WebControls.BaseValidator.AddAttributesToRender(System.Web.UI.HtmlTextWriter)" /> 方法时，请确保调用基类中的相应方法。 否则，将不会呈现基类中包含的属性。</para></block>
        <altmember cref="T:System.Web.UI.HtmlTextWriter" />
      </Docs>
    </Member>
    <Member MemberName="AssociatedControlID">
      <MemberSignature Language="C#" Value="public override string AssociatedControlID { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AssociatedControlID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BaseValidator.AssociatedControlID" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property AssociatedControlID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ AssociatedControlID { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AssociatedControlID : string with get, set" Usage="System.Web.UI.WebControls.BaseValidator.AssociatedControlID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>不支持此属性。</summary>
        <value>此属性不受支持，并且总是引发 <see cref="T:System.NotSupportedException" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 不支持此属性。 此属性仅在基类上受支持 <xref:System.Web.UI.WebControls.Label> 。

 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">已尝试设置此属性。</exception>
        <altmember cref="P:System.Web.UI.WebControls.Label.AssociatedControlID" />
      </Docs>
    </Member>
    <Member MemberName="CheckControlValidationProperty">
      <MemberSignature Language="C#" Value="protected void CheckControlValidationProperty (string name, string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void CheckControlValidationProperty(string name, string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BaseValidator.CheckControlValidationProperty(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub CheckControlValidationProperty (name As String, propertyName As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void CheckControlValidationProperty(System::String ^ name, System::String ^ propertyName);" />
      <MemberSignature Language="F#" Value="member this.CheckControlValidationProperty : string * string -&gt; unit" Usage="baseValidator.CheckControlValidationProperty (name, propertyName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">要验证的控件。</param>
        <param name="propertyName">用以描述异常来源的附加文本（如果因使用此方法而引发异常）。</param>
        <summary>验证指定的控件是否在页面上并且是否包含验证属性。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.BaseValidator.CheckControlValidationProperty%2A>方法是主要由方法使用的帮助器方法 <xref:System.Web.UI.WebControls.BaseValidator.ControlPropertiesValid%2A> ，用于验证指定的控件是否在页面上并包含验证属性。 此方法不返回值来报告结果。 相反，它会在验证失败时引发异常。

> [!NOTE]
>  此方法主要由控件开发人员使用。

 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">未找到指定的控件。

- 或 -

指定的控件没有与其关联的 <see cref="T:System.Web.UI.ValidationPropertyAttribute" /> 特性；因此无法使用验证控件对其进行验证。</exception>
        <altmember cref="M:System.Web.UI.WebControls.BaseValidator.ControlPropertiesValid" />
        <altmember cref="P:System.Web.UI.WebControls.BaseValidator.PropertiesValid" />
        <altmember cref="T:System.Web.UI.ValidationPropertyAttribute" />
      </Docs>
    </Member>
    <Member MemberName="ControlPropertiesValid">
      <MemberSignature Language="C#" Value="protected virtual bool ControlPropertiesValid ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool ControlPropertiesValid() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BaseValidator.ControlPropertiesValid" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function ControlPropertiesValid () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool ControlPropertiesValid();" />
      <MemberSignature Language="F#" Value="abstract member ControlPropertiesValid : unit -&gt; bool&#xA;override this.ControlPropertiesValid : unit -&gt; bool" Usage="baseValidator.ControlPropertiesValid " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>确定由 <see cref="P:System.Web.UI.WebControls.BaseValidator.ControlToValidate" /> 属性指定的控件是否为有效控件。</summary>
        <returns>如果由 <see cref="P:System.Web.UI.WebControls.BaseValidator.ControlToValidate" /> 指定的控件是有效控件，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.BaseValidator.ControlPropertiesValid%2A>方法是一个帮助器方法，主要由 <xref:System.Web.UI.WebControls.BaseValidator.PropertiesValid%2A> 属性用来确定属性是否 <xref:System.Web.UI.WebControls.BaseValidator.ControlToValidate%2A> 包含有效的输入控件。 若要成为有效的输入控件， <xref:System.Web.UI.WebControls.BaseValidator.ControlToValidate%2A> 必须将属性设置为某个值，并且该值必须是支持验证的页上的控件。

> [!NOTE]
>  此方法主要由控件开发人员使用。

 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">没有为 <see cref="P:System.Web.UI.WebControls.BaseValidator.ControlToValidate" /> 属性指定任何值。

- 或 -

在该页上未找到 <see cref="P:System.Web.UI.WebControls.BaseValidator.ControlToValidate" /> 属性指定的输入控件。

- 或 -

由 <see cref="P:System.Web.UI.WebControls.BaseValidator.ControlToValidate" /> 属性指定的输入控件没有与其关联的 <see cref="T:System.Web.UI.ValidationPropertyAttribute" /> 特性；因此无法使用验证控件对其进行验证。</exception>
        <altmember cref="T:System.Web.UI.ValidationPropertyAttribute" />
        <altmember cref="P:System.Web.UI.WebControls.BaseValidator.ControlToValidate" />
        <altmember cref="P:System.Web.UI.WebControls.BaseValidator.PropertiesValid" />
      </Docs>
    </Member>
    <Member MemberName="ControlToValidate">
      <MemberSignature Language="C#" Value="public string ControlToValidate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ControlToValidate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BaseValidator.ControlToValidate" />
      <MemberSignature Language="VB.NET" Value="Public Property ControlToValidate As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ControlToValidate { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ControlToValidate : string with get, set" Usage="System.Web.UI.WebControls.BaseValidator.ControlToValidate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue("")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue("")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.TypeConverter(typeof(System.Web.UI.WebControls.ValidatedControlConverter))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.TypeConverter(typeof(System.Web.UI.WebControls.ValidatedControlConverter))&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Web.UI.IDReferenceProperty]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.IDReferenceProperty&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Web.UI.Themeable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.Themeable(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置要验证的输入控件。</summary>
        <value>要验证的输入控件。 默认值为 <see cref="F:System.String.Empty" />，表示未设置此属性。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 使用 <xref:System.Web.UI.WebControls.BaseValidator.ControlToValidate%2A> 属性指定要验证的输入控件。 必须将此属性设置为除控件之外的所有验证控件的输入控件的 ID <xref:System.Web.UI.WebControls.CustomValidator> ，该控件可留空。 如果未指定有效的输入控件，则呈现页面时将引发异常。 ID 必须引用与验证控件位于同一容器中的控件。 它必须位于相同的页或用户控件中，或者必须位于模板化控件的同一模板中。

 可以验证的标准控件包括：

-   <xref:System.Web.UI.WebControls.DropDownList?displayProperty=nameWithType>

-   <xref:System.Web.UI.WebControls.FileUpload?displayProperty=nameWithType>

-   <xref:System.Web.UI.WebControls.ListBox?displayProperty=nameWithType>

-   <xref:System.Web.UI.WebControls.RadioButtonList?displayProperty=nameWithType>

-   <xref:System.Web.UI.WebControls.TextBox?displayProperty=nameWithType>

-   <xref:System.Web.UI.HtmlControls.HtmlInputFile?displayProperty=nameWithType>

-   <xref:System.Web.UI.HtmlControls.HtmlInputPassword?displayProperty=nameWithType>

-   <xref:System.Web.UI.HtmlControls.HtmlInputText?displayProperty=nameWithType>

-   <xref:System.Web.UI.HtmlControls.HtmlSelect?displayProperty=nameWithType>

-   <xref:System.Web.UI.HtmlControls.HtmlTextArea?displayProperty=nameWithType>

> [!NOTE]
>  对于要验证的输入控件，必须将 <xref:System.Web.UI.ValidationPropertyAttribute?displayProperty=nameWithType> 特性应用于控件。

 <xref:System.Web.UI.WebControls.RequiredFieldValidator>如果由属性指定的输入控件 <xref:System.Web.UI.WebControls.BaseValidator.ControlToValidate%2A> 不包含任何文本，则除控件外，所有验证控件都将通过验证。 如果使用的是 <xref:System.Web.UI.WebControls.CustomValidator> 控件，则不会调用客户端和服务器端验证函数。

 无法通过主题或样式表主题设置此属性。 有关详细信息，请参阅 <xref:System.Web.UI.ThemeableAttribute> 和 [ASP.NET 主题和外观](https://docs.microsoft.com/previous-versions/aspnet/ykzx33wh(v=vs.100))。



## Examples
 下面的代码示例演示如何使用 <xref:System.Web.UI.WebControls.BaseValidator.ControlToValidate%2A> 属性指定要验证的输入控件。

 [!code-aspx-csharp[Classic BaseValidator Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic BaseValidator Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic BaseValidator Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic BaseValidator Example/VB/sourcevb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="F:System.String.Empty" />
        <altmember cref="T:System.Web.UI.ValidationPropertyAttribute" />
        <altmember cref="T:System.Web.UI.WebControls.RequiredFieldValidator" />
        <altmember cref="T:System.Web.UI.WebControls.CustomValidator" />
      </Docs>
    </Member>
    <Member MemberName="DetermineRenderUplevel">
      <MemberSignature Language="C#" Value="protected virtual bool DetermineRenderUplevel ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool DetermineRenderUplevel() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BaseValidator.DetermineRenderUplevel" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function DetermineRenderUplevel () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool DetermineRenderUplevel();" />
      <MemberSignature Language="F#" Value="abstract member DetermineRenderUplevel : unit -&gt; bool&#xA;override this.DetermineRenderUplevel : unit -&gt; bool" Usage="baseValidator.DetermineRenderUplevel " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>确定验证控件是否可执行客户端验证。</summary>
        <returns>如果验证控件可执行客户端验证，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.BaseValidator.DetermineRenderUplevel%2A>方法是一个 helper 函数，主要由 <xref:System.Web.UI.WebControls.BaseValidator.RenderUplevel%2A> 属性用来确定客户端的浏览器是否支持客户端脚本。 若要返回此属性 `true` ，必须满足以下条件：

-   浏览器已启用客户端脚本。

-   <xref:System.Web.HttpBrowserCapabilitiesBase.W3CDomVersion%2A> <xref:System.Web.HttpBrowserCapabilitiesBase> 属性中存储的对象的属性 <xref:System.Web.HttpRequest.Browser%2A?displayProperty=nameWithType> 为1或更高。

-   <xref:System.Web.Configuration.HttpCapabilitiesBase.EcmaScriptVersion%2A> <xref:System.Web.HttpBrowserCapabilitiesBase> 属性中存储的对象的属性 <xref:System.Web.HttpRequest.Browser%2A?displayProperty=nameWithType> 为1.2 或更高版本。

    > [!NOTE]
    >  此方法主要由控件开发人员使用。

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.BaseValidator.RenderUplevel" />
      </Docs>
    </Member>
    <Member MemberName="Display">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ValidatorDisplay Display { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.ValidatorDisplay Display" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BaseValidator.Display" />
      <MemberSignature Language="VB.NET" Value="Public Property Display As ValidatorDisplay" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ValidatorDisplay Display { System::Web::UI::WebControls::ValidatorDisplay get(); void set(System::Web::UI::WebControls::ValidatorDisplay value); };" />
      <MemberSignature Language="F#" Value="member this.Display : System.Web.UI.WebControls.ValidatorDisplay with get, set" Usage="System.Web.UI.WebControls.BaseValidator.Display" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName Language="C#">[System.ComponentModel.Bindable(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Bindable(true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Web.UI.Themeable(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.Themeable(true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ValidatorDisplay</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置验证控件中错误消息的显示行为。</summary>
        <value><see cref="T:System.Web.UI.WebControls.ValidatorDisplay" /> 值之一。 默认值是 <see langword="Static" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 使用 <xref:System.Web.UI.WebControls.BaseValidator.Display%2A> 属性指定验证控件中的错误消息的显示行为。 下表列出了可以使用的不同值。

|显示行为|说明|
|----------------------|-----------------|
|`None`|验证消息从不以内联方式显示。|
|`Static`|用于验证消息的空间在页面布局中分配。|
|`Dynamic`|如果验证失败，则会将验证消息的空间动态添加到页面中。|

> [!NOTE]
>  显示行为取决于是否执行客户端验证。 如果客户端验证不处于活动状态 (由于浏览器不支持此功能，或者由于使用 <xref:System.Web.UI.Page.ClientTarget%2A?displayProperty=nameWithType> page 指令或属性) 禁用了该功能 <xref:System.Web.UI.WebControls.BaseValidator.EnableClientScript%2A> ， `ValidatorDisplay.Static` 并且其 `ValidatorDisplay.Dynamic` 行为方式相同：错误消息仅在显示时占用空间。 当消息未显示时，动态分配该消息的空间 (`ValidatorDisplay.Dynamic`) 仅适用于客户端验证。

 无法通过主题或样式表主题设置此属性。 有关详细信息，请参阅 <xref:System.Web.UI.ThemeableAttribute> 和 [ASP.NET 主题和外观](https://docs.microsoft.com/previous-versions/aspnet/ykzx33wh(v=vs.100))。



## Examples
 下面的代码示例演示如何使用 <xref:System.Web.UI.WebControls.BaseValidator.Display%2A> 属性来指定在验证失败时，将验证消息的空间动态添加到网页。

> [!IMPORTANT]
>  此示例具有一个接受用户输入的文本框，这是一个潜在的安全威胁。 默认情况下，ASP.NET 网页验证用户输入是否不包含脚本或 HTML 元素。 有关详细信息，请参阅[脚本侵入概述](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100))。

 [!code-aspx-csharp[Classic BaseValidator Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic BaseValidator Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic BaseValidator Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic BaseValidator Example/VB/sourcevb.aspx#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">指定的值不是 <see cref="T:System.Web.UI.WebControls.ValidatorDisplay" /> 值之一。</exception>
        <altmember cref="T:System.Web.UI.WebControls.ValidatorDisplay" />
      </Docs>
    </Member>
    <Member MemberName="EnableClientScript">
      <MemberSignature Language="C#" Value="public bool EnableClientScript { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableClientScript" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BaseValidator.EnableClientScript" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableClientScript As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableClientScript { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableClientScript : bool with get, set" Usage="System.Web.UI.WebControls.BaseValidator.EnableClientScript" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(true)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Web.UI.Themeable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.Themeable(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示是否启用客户端验证。</summary>
        <value>如果启用客户端验证，则为 <see langword="true" />；否则为 <see langword="false" />。 默认值是 <see langword="true" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 使用 <xref:System.Web.UI.WebControls.BaseValidator.EnableClientScript%2A> 属性来指定是否启用客户端验证。

 验证控件始终在服务器上执行验证。 它们还具有完整的客户端实现，该实现允许支持 DHTML 的浏览器 (例如 Microsoft Internet Explorer 4.0 和更高版本) 在客户端上执行验证。 客户端验证通过在将用户输入发送到服务器之前检查用户输入来增强验证过程。 这允许在提交窗体前在客户端上检测到错误，从而避免服务器端验证所需的信息往返。

 默认情况下，此值设置为 `true` ，如果浏览器支持，它将启用客户端验证。 您可以逐个控制地禁用客户端验证。 如果客户端上的动态更新创建了页面布局问题，或者你希望在进行验证之前执行一些服务器代码，这会很有用。

 无法通过主题或样式表主题设置此属性。 有关详细信息，请参阅 <xref:System.Web.UI.ThemeableAttribute> 和 [ASP.NET 主题和外观](https://docs.microsoft.com/previous-versions/aspnet/ykzx33wh(v=vs.100))。



## Examples
 下面的代码示例演示如何使用 <xref:System.Web.UI.WebControls.BaseValidator.EnableClientScript%2A> 属性禁用客户端验证，以便可以在服务器上生成随机数字。

> [!IMPORTANT]
>  此示例具有一个接受用户输入的文本框，这是一个潜在的安全威胁。 默认情况下，ASP.NET 网页验证用户输入是否不包含脚本或 HTML 元素。 有关详细信息，请参阅[脚本侵入概述](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100))。

 [!code-aspx-csharp[Classic BaseValidator Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic BaseValidator Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic BaseValidator Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic BaseValidator Example/VB/sourcevb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.BaseValidator.DetermineRenderUplevel" />
        <altmember cref="M:System.Web.UI.WebControls.BaseValidator.RegisterValidatorCommonScript" />
        <altmember cref="M:System.Web.UI.WebControls.BaseValidator.RegisterValidatorDeclaration" />
        <altmember cref="P:System.Web.UI.WebControls.BaseValidator.RenderUplevel" />
      </Docs>
    </Member>
    <Member MemberName="Enabled">
      <MemberSignature Language="C#" Value="public override bool Enabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Enabled" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BaseValidator.Enabled" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Enabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Enabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Enabled : bool with get, set" Usage="System.Web.UI.WebControls.BaseValidator.Enabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示是否启用验证控件。</summary>
        <value>如果启用验证控件，则为 <see langword="true" />；否则为 <see langword="false" />。 默认值为 <see langword="true" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 使用 <xref:System.Web.UI.WebControls.BaseValidator.Enabled%2A> 属性指定是否启用验证控件。 您可以通过将此属性设置为来禁用验证控件 `false` 。

 将 <xref:System.Web.UI.Control.Visible%2A?displayProperty=nameWithType> 或 <xref:System.Web.UI.WebControls.BaseValidator.Enabled%2A> 属性设置为 `false` 将阻止执行验证。 这会使 <xref:System.Web.UI.WebControls.BaseValidator.IsValid%2A> 属性的计算结果始终为 `true` 。

 <xref:System.Web.UI.WebControls.BaseValidator.Enabled%2A>属性与属性略有不同 <xref:System.Web.UI.Control.Visible%2A?displayProperty=nameWithType> 。 如果 <xref:System.Web.UI.Control.Visible%2A?displayProperty=nameWithType> 验证控件的属性设置为 `true` ，但 <xref:System.Web.UI.WebControls.BaseValidator.Enabled%2A> 属性设置为 `false` ，则仍会为客户端验证呈现验证控件，但处于禁用状态。 然后，可以使用 DHTML 脚本在客户端上重新启用验证控件。



## Examples
 下面的代码示例演示如何使用属性在网页 <xref:System.Web.UI.WebControls.BaseValidator.Enabled%2A> 上使用服务器端代码启用或禁用验证控件。

> [!IMPORTANT]
>  此示例具有一个接受用户输入的文本框，这是一个潜在的安全威胁。 默认情况下，ASP.NET 网页验证用户输入是否不包含脚本或 HTML 元素。 有关详细信息，请参阅[脚本侵入概述](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100))。

 [!code-aspx-csharp[Classic BaseValidator.Enabled Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic BaseValidator.Enabled Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic BaseValidator.Enabled Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic BaseValidator.Enabled Example/VB/sourcevb.aspx#1)]

 下面的代码示例演示如何使用属性在网页 <xref:System.Web.UI.WebControls.BaseValidator.Enabled%2A> 上使用客户端代码启用或禁用验证控件。

<!-- TODO: review snippet reference  [!CODE [Classic BaseValidator.Enabled Example2#1](Classic BaseValidator.Enabled Example2#1)]  -->

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ErrorMessage">
      <MemberSignature Language="C#" Value="public string ErrorMessage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ErrorMessage" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BaseValidator.ErrorMessage" />
      <MemberSignature Language="VB.NET" Value="Public Property ErrorMessage As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ErrorMessage { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ErrorMessage : string with get, set" Usage="System.Web.UI.WebControls.BaseValidator.ErrorMessage" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.IValidator.ErrorMessage</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName Language="C#">[System.ComponentModel.Bindable(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Bindable(true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue("")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue("")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.Localizable(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Localizable(true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置验证失败时 <see cref="T:System.Web.UI.WebControls.ValidationSummary" /> 控件中显示的错误消息的文本。</summary>
        <value>验证失败时 <see cref="T:System.Web.UI.WebControls.ValidationSummary" /> 控件中显示的错误消息。 默认值为空字符串 ("")，指示尚未设置此属性。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 使用控件时 <xref:System.Web.UI.WebControls.ValidationSummary> ，在 <xref:System.Web.UI.WebControls.BaseValidator.ErrorMessage%2A> <xref:System.Web.UI.WebControls.ValidationSummary> 当前验证控件的验证失败时，使用属性指定要在控件中显示的文本。 若要指定要在验证控件本身中显示的文本，请使用 <xref:System.Web.UI.WebControls.BaseValidator.Text%2A> 属性。

> [!NOTE]
>  如果在 <xref:System.Web.UI.WebControls.BaseValidator.ErrorMessage%2A> 未设置属性的情况下设置属性，则该 <xref:System.Web.UI.WebControls.BaseValidator.Text%2A> 属性的值 <xref:System.Web.UI.WebControls.BaseValidator.ErrorMessage%2A> 也会显示在验证控件中。

 设置此属性后，可以使用设计器工具自动将此属性的值保存到资源文件中。 有关详细信息，请参阅 <xref:System.ComponentModel.LocalizableAttribute> 和 [ASP.NET 全球化和本地化](https://docs.microsoft.com/previous-versions/aspnet/c6zyy3s9(v=vs.100))。



## Examples
 下面的代码示例演示如何使用 <xref:System.Web.UI.WebControls.BaseValidator.ErrorMessage%2A> 属性为 <xref:System.Web.UI.WebControls.ValidationSummary> 控件和和控件指定不同的消息 <xref:System.Web.UI.WebControls.RequiredFieldValidator> <xref:System.Web.UI.WebControls.CompareValidator> 。

> [!IMPORTANT]
>  此示例具有一个接受用户输入的文本框，这是一个潜在的安全威胁。 默认情况下，ASP.NET 网页验证用户输入是否不包含脚本或 HTML 元素。 有关详细信息，请参阅[脚本侵入概述](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100))。

 [!code-aspx-csharp[Classic BaseValidator Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic BaseValidator Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic BaseValidator Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic BaseValidator Example/VB/sourcevb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.ValidationSummary" />
        <altmember cref="P:System.Web.UI.WebControls.BaseValidator.Text" />
      </Docs>
    </Member>
    <Member MemberName="EvaluateIsValid">
      <MemberSignature Language="C#" Value="protected abstract bool EvaluateIsValid ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool EvaluateIsValid() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BaseValidator.EvaluateIsValid" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function EvaluateIsValid () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract bool EvaluateIsValid();" />
      <MemberSignature Language="F#" Value="abstract member EvaluateIsValid : unit -&gt; bool" Usage="baseValidator.EvaluateIsValid " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>当在派生类中重写时，此方法包含代码，以确定输入控件中的值是否有效。</summary>
        <returns>如果输入控件中的值有效，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 使用 <xref:System.Web.UI.WebControls.BaseValidator.EvaluateIsValid%2A> 方法可确定由属性指定的输入控件中的值是否 <xref:System.Web.UI.WebControls.BaseValidator.ControlToValidate%2A> 有效。

> [!NOTE]
>  此方法主要由控件开发人员使用。

 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>必须在派生类中实现此方法才能返回输入控件中的值是否有效。</para></block>
        <altmember cref="P:System.Web.UI.WebControls.BaseValidator.ControlToValidate" />
        <altmember cref="P:System.Web.UI.WebControls.BaseValidator.IsValid" />
        <altmember cref="M:System.Web.UI.WebControls.BaseValidator.Validate" />
      </Docs>
    </Member>
    <Member MemberName="ForeColor">
      <MemberSignature Language="C#" Value="public override System.Drawing.Color ForeColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color ForeColor" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BaseValidator.ForeColor" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ForeColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Color ForeColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.ForeColor : System.Drawing.Color with get, set" Usage="System.Web.UI.WebControls.BaseValidator.ForeColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(typeof(System.Drawing.Color), "Red")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(typeof(System.Drawing.Color), "Red")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置验证失败后显示的消息的颜色。</summary>
        <value>一个 <see cref="T:System.Drawing.Color" />，表示验证失败时显示的消息的颜色。 默认值为 <see cref="P:System.Drawing.Color.Red" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 使用 <xref:System.Web.UI.WebControls.BaseValidator.ForeColor%2A> 属性可为验证失败时验证控件中显示的消息指定自定义文本颜色。



## Examples
 下面的代码示例演示如何使用 <xref:System.Web.UI.WebControls.BaseValidator.ForeColor%2A> 属性以蓝色显示验证消息。

> [!IMPORTANT]
>  此示例具有一个接受用户输入的文本框，这是一个潜在的安全威胁。 默认情况下，ASP.NET 网页验证用户输入是否不包含脚本或 HTML 元素。 有关详细信息，请参阅[脚本侵入概述](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100))。

 [!code-aspx-csharp[Classic BaseValidator.ForeColor Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic BaseValidator.ForeColor Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic BaseValidator.ForeColor Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic BaseValidator.ForeColor Example/VB/sourcevb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Color" />
      </Docs>
    </Member>
    <Member MemberName="GetControlRenderID">
      <MemberSignature Language="C#" Value="protected string GetControlRenderID (string name);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance string GetControlRenderID(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BaseValidator.GetControlRenderID(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetControlRenderID (name As String) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::String ^ GetControlRenderID(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.GetControlRenderID : string -&gt; string" Usage="baseValidator.GetControlRenderID name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">从中获取客户端 ID 的控件的名称。</param>
        <summary>获取指定控件的客户端 ID。</summary>
        <returns>指定控件的客户端 ID。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 使用 <xref:System.Web.UI.WebControls.BaseValidator.GetControlRenderID%2A> 方法可获取指定控件的客户端 ID。 有关详细信息，请参阅 <xref:System.Web.UI.Control.ClientID%2A>。

> [!NOTE]
>  此方法主要由控件开发人员使用。

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.ClientID" />
      </Docs>
    </Member>
    <Member MemberName="GetControlValidationValue">
      <MemberSignature Language="C#" Value="protected string GetControlValidationValue (string name);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance string GetControlValidationValue(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BaseValidator.GetControlValidationValue(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetControlValidationValue (name As String) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::String ^ GetControlValidationValue(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.GetControlValidationValue : string -&gt; string" Usage="baseValidator.GetControlValidationValue name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">要从其获取值的输入控件的名称。</param>
        <summary>获取与指定输入控件关联的值。</summary>
        <returns>与指定输入控件关联的值。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 使用 <xref:System.Web.UI.WebControls.BaseValidator.GetControlValidationValue%2A> 方法可获取与指定输入控件关联的值，而与控件类型无关。 例如，你可以使用此方法来获取控件中的值 <xref:System.Web.UI.WebControls.TextBox> ，以及从控件中选择的项的值 <xref:System.Web.UI.WebControls.ListBox> 。 如果找不到指定的控件， `null` 则返回。

> [!NOTE]
>  此方法主要由控件开发人员使用。

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.BaseValidator.ControlToValidate" />
        <altmember cref="M:System.Web.UI.WebControls.BaseValidator.GetValidationProperty(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="GetValidationProperty">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.PropertyDescriptor GetValidationProperty (object component);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.PropertyDescriptor GetValidationProperty(object component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BaseValidator.GetValidationProperty(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetValidationProperty (component As Object) As PropertyDescriptor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::PropertyDescriptor ^ GetValidationProperty(System::Object ^ component);" />
      <MemberSignature Language="F#" Value="static member GetValidationProperty : obj -&gt; System.ComponentModel.PropertyDescriptor" Usage="System.Web.UI.WebControls.BaseValidator.GetValidationProperty component" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="component">一个 <see cref="T:System.Object" />，表示要获取其验证属性的控件。</param>
        <summary>确定控件（如果存在）的验证属性。</summary>
        <returns>包含控件的验证属性的 <see cref="T:System.ComponentModel.PropertyDescriptor" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.BaseValidator.GetValidationProperty%2A>方法是一个帮助器函数，用于获取指定输入控件的验证属性。

> [!NOTE]
>  此方法主要由控件开发人员使用。

 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
      </Docs>
    </Member>
    <Member MemberName="IsUnobtrusive">
      <MemberSignature Language="C#" Value="protected bool IsUnobtrusive { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsUnobtrusive" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BaseValidator.IsUnobtrusive" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property IsUnobtrusive As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool IsUnobtrusive { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsUnobtrusive : bool" Usage="System.Web.UI.WebControls.BaseValidator.IsUnobtrusive" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个值，该值指示控件是否生成非介入式 JavaScript。</summary>
        <value>如果该控件生成非介入式 JavaScript，则为 <see langword="true" />；否则为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 `false`如果 <xref:System.Web.UI.Page.UnobtrusiveValidationMode%2A> 属性值为，则此属性返回 <xref:System.Web.UI.UnobtrusiveValidationMode.None> ; 否则此属性返回 `true` 。

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsValid">
      <MemberSignature Language="C#" Value="public bool IsValid { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsValid" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BaseValidator.IsValid" />
      <MemberSignature Language="VB.NET" Value="Public Property IsValid As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsValid { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsValid : bool with get, set" Usage="System.Web.UI.WebControls.BaseValidator.IsValid" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.IValidator.IsValid</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Web.UI.Themeable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.Themeable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示关联的输入控件是否通过验证。</summary>
        <value>如果关联的输入控件通过验证，则为 <see langword="true" />；否则为 <see langword="false" />。 默认值是 <see langword="true" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 使用 <xref:System.Web.UI.WebControls.BaseValidator.IsValid%2A> 属性来确定关联的输入控件是否通过验证。

> [!CAUTION]
>  由于此属性的默认值为 `true` ，因此， `true` 如果在执行验证之前查询此属性，它将返回。 例如，如果您尝试在页的事件中使用此属性，则可能会发生这种情况 <xref:System.Web.UI.Control.Load?displayProperty=nameWithType> 。

 <xref:System.Web.UI.WebControls.BaseValidator.IsValid%2A>仅在调用方法时才计算属性 <xref:System.Web.UI.WebControls.BaseValidator.Validate%2A> 。 您可以 <xref:System.Web.UI.WebControls.BaseValidator.Validate%2A> 分别为该页上的每个验证控件调用方法，也可以使用方法一次调用所有这些验证控件 <xref:System.Web.UI.Page.Validate%2A?displayProperty=nameWithType> 。 其 `CausesValidation` 属性设置为的按钮控件 `true` 也将调用 <xref:System.Web.UI.Page.Validate%2A?displayProperty=nameWithType> 方法。

> [!NOTE]
>  在发生验证后，可以手动更改此属性的值。 这允许您根据需要替代验证结果。

 <xref:System.Web.UI.Page.IsValid%2A?displayProperty=nameWithType> `true` 仅当 <xref:System.Web.UI.WebControls.BaseValidator.IsValid%2A> 页面上每个验证控件的属性都设置为时，才将页面的属性设置为 `true` 。

 无法通过主题或样式表主题设置此属性。 有关详细信息，请参阅 <xref:System.Web.UI.ThemeableAttribute> 和 [ASP.NET 主题和外观](https://docs.microsoft.com/previous-versions/aspnet/ykzx33wh(v=vs.100))。



## Examples
 下面的代码示例演示如何使用 <xref:System.Web.UI.WebControls.BaseValidator.IsValid%2A> 属性来确定关联的输入控件是否通过验证。

> [!IMPORTANT]
>  此示例具有一个接受用户输入的文本框，这是一个潜在的安全威胁。 默认情况下，ASP.NET 网页验证用户输入是否不包含脚本或 HTML 元素。 有关详细信息，请参阅[脚本侵入概述](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100))。

 [!code-aspx-csharp[BaseValidatorIsValid#1](~/samples/snippets/csharp/VS_Snippets_WebNet/BaseValidatorIsValid/CS/basevalidatorisvalidcs.aspx#1)]
 [!code-aspx-vb[BaseValidatorIsValid#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/BaseValidatorIsValid/VB/basevalidatorisvalidvb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.BaseValidator.ControlToValidate" />
        <altmember cref="E:System.Web.UI.Control.Load" />
        <altmember cref="M:System.Web.UI.WebControls.BaseValidator.Validate" />
        <altmember cref="M:System.Web.UI.Page.Validate" />
        <altmember cref="P:System.Web.UI.WebControls.BaseValidator.IsValid" />
        <altmember cref="P:System.Web.UI.Page.IsValid" />
      </Docs>
    </Member>
    <Member MemberName="OnInit">
      <MemberSignature Language="C#" Value="protected override void OnInit (EventArgs e);" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnInit(class System.EventArgs e) cil managed" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BaseValidator.OnInit(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnInit (e As EventArgs)" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnInit(EventArgs ^ e);" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="F#" Value="override this.OnInit : EventArgs -&gt; unit" Usage="baseValidator.OnInit e" />
      <MemberSignature Language="C#" Value="protected internal override void OnInit (EventArgs e);" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnInit(class System.EventArgs e) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnInit (e As EventArgs)" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnInit(EventArgs ^ e);" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件数据的 <see cref="T:System.EventArgs" />。</param>
        <summary>引发 <see cref="E:System.Web.UI.Control.Init" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 此方法在调用基控件的 <xref:System.Web.UI.Control.OnInit%2A> 方法之后， <xref:System.Web.UI.WebControls.WebControl.ForeColor%2A> <xref:System.Drawing.Color.Red%2A> 如果满足以下条件，则将属性设置为：

-   <xref:System.Web.UI.WebControls.WebControl.ForeColor%2A>尚未设置属性。

-   <xref:System.Web.UI.Control.RenderingCompatibility%2A>属性表示早于的 ASP.NET 版本 `4.0` 。 默认情况下，ASP.NET 4 和更高版本中的验证器控件不会以红色显示错误。 有关如何控制验证程序控件的视觉外观的信息，请参阅 [在 ASP.NET 网页中验证用户输入](https://docs.microsoft.com/previous-versions/aspnet/7kh55542(v=vs.100))。

 此方法还会在页面上注册验证控件。

 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>在派生类中重写 <see cref="M:System.Web.UI.WebControls.BaseValidator.OnInit(System.EventArgs)" /> 时，一定要调用基类的 <see cref="M:System.Web.UI.WebControls.BaseValidator.OnInit(System.EventArgs)" /> 方法，以便已注册的委托对事件进行接收。</para></block>
        <altmember cref="E:System.Web.UI.Control.Init" />
        <altmember cref="M:System.Web.UI.Control.OnInit(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnPreRender">
      <MemberSignature Language="C#" Value="protected override void OnPreRender (EventArgs e);" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnPreRender(class System.EventArgs e) cil managed" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BaseValidator.OnPreRender(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnPreRender (e As EventArgs)" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnPreRender(EventArgs ^ e);" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="F#" Value="override this.OnPreRender : EventArgs -&gt; unit" Usage="baseValidator.OnPreRender e" />
      <MemberSignature Language="C#" Value="protected internal override void OnPreRender (EventArgs e);" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnPreRender(class System.EventArgs e) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnPreRender (e As EventArgs)" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnPreRender(EventArgs ^ e);" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件数据的 <see cref="T:System.EventArgs" />。</param>
        <summary>引发 <see cref="E:System.Web.UI.Control.PreRender" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 此方法已被重写，以检查客户端浏览器，并在呈现之前配置验证控件的兼容性。

 引发事件时，将通过委托调用事件处理程序。 有关详细信息，请参阅 [处理和引发事件](/dotnet/standard/events/)。

 <xref:System.Web.UI.WebControls.BaseValidator.OnPreRender%2A> 方法还允许派生类对事件进行处理而不必附加委托。 这是在派生类中处理事件的首选技术。

 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>在派生类中重写 <see cref="M:System.Web.UI.WebControls.BaseValidator.OnPreRender(System.EventArgs)" /> 时，一定要调用基类的 <see cref="M:System.Web.UI.WebControls.BaseValidator.OnPreRender(System.EventArgs)" /> 方法，以便已注册的委托对事件进行接收。</para></block>
        <altmember cref="E:System.Web.UI.Control.PreRender" />
        <altmember cref="M:System.Web.UI.Control.OnPreRender(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnUnload">
      <MemberSignature Language="C#" Value="protected override void OnUnload (EventArgs e);" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnUnload(class System.EventArgs e) cil managed" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BaseValidator.OnUnload(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnUnload (e As EventArgs)" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnUnload(EventArgs ^ e);" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="F#" Value="override this.OnUnload : EventArgs -&gt; unit" Usage="baseValidator.OnUnload e" />
      <MemberSignature Language="C#" Value="protected internal override void OnUnload (EventArgs e);" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnUnload(class System.EventArgs e) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnUnload (e As EventArgs)" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnUnload(EventArgs ^ e);" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件数据的 <see cref="T:System.EventArgs" />。</param>
        <summary>引发 <see cref="E:System.Web.UI.Control.Unload" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 此方法已被重写，以便取消注册页面上的验证控件。

 引发事件时，将通过委托调用事件处理程序。 有关详细信息，请参阅 [处理和引发事件](/dotnet/standard/events/)。

 <xref:System.Web.UI.WebControls.BaseValidator.OnUnload%2A> 方法还允许派生类对事件进行处理而不必附加委托。 这是在派生类中处理事件的首选技术。

 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>在派生类中重写 <see cref="M:System.Web.UI.WebControls.BaseValidator.OnUnload(System.EventArgs)" /> 时，一定要调用基类的 <see cref="M:System.Web.UI.WebControls.BaseValidator.OnUnload(System.EventArgs)" /> 方法，以便已注册的委托对事件进行接收。</para></block>
        <altmember cref="E:System.Web.UI.Control.Unload" />
        <altmember cref="M:System.Web.UI.Control.OnUnload(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="PropertiesValid">
      <MemberSignature Language="C#" Value="protected bool PropertiesValid { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PropertiesValid" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BaseValidator.PropertiesValid" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property PropertiesValid As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool PropertiesValid { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.PropertiesValid : bool" Usage="System.Web.UI.WebControls.BaseValidator.PropertiesValid" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个值，该值指示由 <see cref="P:System.Web.UI.WebControls.BaseValidator.ControlToValidate" /> 属性指定的控件是否是有效的控件。</summary>
        <value>如果由 <see cref="P:System.Web.UI.WebControls.BaseValidator.ControlToValidate" /> 指定的控件是有效控件，则为 <see langword="true" />；否则为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 使用 <xref:System.Web.UI.WebControls.BaseValidator.PropertiesValid%2A> 属性来确定 <xref:System.Web.UI.WebControls.BaseValidator.ControlToValidate%2A> 属性是否包含有效的输入控件。 若要成为有效的输入控件， <xref:System.Web.UI.WebControls.BaseValidator.ControlToValidate%2A> 必须将属性设置为页上的控件。

> [!NOTE]
>  此属性主要由控件开发人员使用。

 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">在 <see cref="P:System.Web.UI.WebControls.BaseValidator.ControlToValidate" /> 属性中没有指定任何值。

- 或 -

在该页上未找到 <see cref="P:System.Web.UI.WebControls.BaseValidator.ControlToValidate" /> 属性指定的输入控件。</exception>
        <altmember cref="M:System.Web.UI.WebControls.BaseValidator.ControlPropertiesValid" />
        <altmember cref="M:System.Web.UI.WebControls.BaseValidator.CheckControlValidationProperty(System.String,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="RegisterValidatorCommonScript">
      <MemberSignature Language="C#" Value="protected void RegisterValidatorCommonScript ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void RegisterValidatorCommonScript() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BaseValidator.RegisterValidatorCommonScript" />
      <MemberSignature Language="VB.NET" Value="Protected Sub RegisterValidatorCommonScript ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void RegisterValidatorCommonScript();" />
      <MemberSignature Language="F#" Value="member this.RegisterValidatorCommonScript : unit -&gt; unit" Usage="baseValidator.RegisterValidatorCommonScript " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>在页面上注册用于客户端验证的代码。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 使用 <xref:System.Web.UI.WebControls.BaseValidator.RegisterValidatorCommonScript%2A> 方法在页面上注册代码以执行客户端验证。

> [!NOTE]
>  此方法主要由控件开发人员使用。

 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>在 <see cref="E:System.Web.UI.Control.PreRender" /> 派生类的事件处理程序中调用此方法，以注册执行客户端验证的代码。</para></block>
        <altmember cref="E:System.Web.UI.Control.PreRender" />
      </Docs>
    </Member>
    <Member MemberName="RegisterValidatorDeclaration">
      <MemberSignature Language="C#" Value="protected virtual void RegisterValidatorDeclaration ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void RegisterValidatorDeclaration() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BaseValidator.RegisterValidatorDeclaration" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub RegisterValidatorDeclaration ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void RegisterValidatorDeclaration();" />
      <MemberSignature Language="F#" Value="abstract member RegisterValidatorDeclaration : unit -&gt; unit&#xA;override this.RegisterValidatorDeclaration : unit -&gt; unit" Usage="baseValidator.RegisterValidatorDeclaration " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>使用数组名 <see langword="Page_Validators" /> 注册 ECMAScript 数组声明。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 使用 <xref:System.Web.UI.WebControls.BaseValidator.RegisterValidatorDeclaration%2A> 方法可使用数组名称注册 ECMAScript 数组声明 `Page_Validators` 。

> [!NOTE]
>  此方法主要由控件开发人员使用。

 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Page.RegisterArrayDeclaration(System.String,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="protected override void Render (System.Web.UI.HtmlTextWriter writer);" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Render(class System.Web.UI.HtmlTextWriter writer) cil managed" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BaseValidator.Render(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Render (writer As HtmlTextWriter)" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Render(System::Web::UI::HtmlTextWriter ^ writer);" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="F#" Value="override this.Render : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="baseValidator.Render writer" />
      <MemberSignature Language="C#" Value="protected internal override void Render (System.Web.UI.HtmlTextWriter writer);" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Render(class System.Web.UI.HtmlTextWriter writer) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub Render (writer As HtmlTextWriter)" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void Render(System::Web::UI::HtmlTextWriter ^ writer);" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">包含用于在客户端上进行呈现的输出流的 <see cref="T:System.Web.UI.HtmlTextWriter" />。</param>
        <summary>在客户端上显示控件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.BaseValidator.Render%2A>方法用于为验证控件生成 HTML 标记。

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.HtmlTextWriter" />
        <altmember cref="M:System.Web.UI.Control.Render(System.Web.UI.HtmlTextWriter)" />
      </Docs>
    </Member>
    <Member MemberName="RenderUplevel">
      <MemberSignature Language="C#" Value="protected bool RenderUplevel { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RenderUplevel" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BaseValidator.RenderUplevel" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property RenderUplevel As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool RenderUplevel { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.RenderUplevel : bool" Usage="System.Web.UI.WebControls.BaseValidator.RenderUplevel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个值，该值指示客户端的浏览器是否支持“上一级”呈现。</summary>
        <value>如果浏览器支持“上一级”呈现，则为 <see langword="true" />；否则为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 使用 <xref:System.Web.UI.WebControls.BaseValidator.RenderUplevel%2A> 属性可确定客户端的浏览器是否支持 "上级" 呈现。 为了使浏览器支持 "上级" 呈现，该浏览器必须支持文档对象模型 (DOM) 版本4或更高版本以及 ECMAScript 版本1.2 或更高版本的 Microsoft Internet Explorer。

> [!NOTE]
>  此属性主要由控件开发人员使用。

 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.BaseValidator.DetermineRenderUplevel" />
      </Docs>
    </Member>
    <Member MemberName="SetFocusOnError">
      <MemberSignature Language="C#" Value="public bool SetFocusOnError { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SetFocusOnError" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BaseValidator.SetFocusOnError" />
      <MemberSignature Language="VB.NET" Value="Public Property SetFocusOnError As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SetFocusOnError { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.SetFocusOnError : bool with get, set" Usage="System.Web.UI.WebControls.BaseValidator.SetFocusOnError" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Web.UI.Themeable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.Themeable(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示在验证失败时是否将焦点设置到 <see cref="P:System.Web.UI.WebControls.BaseValidator.ControlToValidate" /> 属性指定的控件上。</summary>
        <value>如果在验证失败时将焦点设置到 <see cref="P:System.Web.UI.WebControls.BaseValidator.ControlToValidate" /> 指定的控件上，则为 <see langword="true" />；否则为 <see langword="false" />。 默认值为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 使用 <xref:System.Web.UI.WebControls.BaseValidator.SetFocusOnError%2A> 属性指定 <xref:System.Web.UI.WebControls.BaseValidator.ControlToValidate%2A> 当此验证控件失败时焦点是否自动设置为属性指定的控件。 这样，用户就可以快速更新相应的控件。

 如果多个验证控件失败并且此属性设置为 `true` ，则 <xref:System.Web.UI.WebControls.BaseValidator.ControlToValidate%2A> 第一个验证控件在属性中指定的控件接收焦点。

 无法通过主题或样式表主题设置此属性。 有关详细信息，请参阅 <xref:System.Web.UI.ThemeableAttribute> 和 [ASP.NET 主题和外观](https://docs.microsoft.com/previous-versions/aspnet/ykzx33wh(v=vs.100))。

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.BaseValidator.ControlToValidate" />
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public override string Text { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BaseValidator.Text" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Text As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Text { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Text : string with get, set" Usage="System.Web.UI.WebControls.BaseValidator.Text" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue("")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue("")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerDefaultProperty)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerDefaultProperty)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置验证失败时验证控件中显示的文本。</summary>
        <value>验证失败时验证控件中显示的文本。 默认值为空字符串 ("")，表示尚未设置此属性。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.BaseValidator.Text%2A>当验证失败时，使用属性指定要在验证控件中显示的文本。 还可以通过使用控件显示页中验证失败的所有控件的摘要 <xref:System.Web.UI.WebControls.ValidationSummary> 。 若要指定要在控件中显示的文本 <xref:System.Web.UI.WebControls.ValidationSummary> ，请使用 <xref:System.Web.UI.WebControls.BaseValidator.ErrorMessage%2A> 属性。

> [!NOTE]
>  如果在 <xref:System.Web.UI.WebControls.BaseValidator.ErrorMessage%2A> 未设置属性的情况下设置属性，则该 <xref:System.Web.UI.WebControls.BaseValidator.Text%2A> 属性的值 <xref:System.Web.UI.WebControls.BaseValidator.ErrorMessage%2A> 也会显示在验证控件中。

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.ValidationSummary" />
        <altmember cref="P:System.Web.UI.WebControls.BaseValidator.ErrorMessage" />
      </Docs>
    </Member>
    <Member MemberName="Validate">
      <MemberSignature Language="C#" Value="public void Validate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Validate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BaseValidator.Validate" />
      <MemberSignature Language="VB.NET" Value="Public Sub Validate ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Validate();" />
      <MemberSignature Language="F#" Value="abstract member Validate : unit -&gt; unit&#xA;override this.Validate : unit -&gt; unit" Usage="baseValidator.Validate " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IValidator.Validate</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>对关联的输入控件执行验证并更新 <see cref="P:System.Web.UI.WebControls.BaseValidator.IsValid" /> 属性。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 使用 <xref:System.Web.UI.WebControls.BaseValidator.Validate%2A> 方法对关联的输入控件执行验证。 此方法允许你以编程方式对输入控件执行验证。 <xref:System.Web.UI.WebControls.BaseValidator.IsValid%2A>属性会自动更新为验证结果。



## Examples
 有关 <xref:System.Web.UI.WebControls.BaseValidator.Validate%2A> 派生类中使用的方法的示例，请参阅 <xref:System.Web.UI.WebControls.CompareValidator> 类概述。

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.BaseValidator.IsValid" />
        <altmember cref="P:System.Web.UI.WebControls.BaseValidator.ValidationGroup" />
        <altmember cref="M:System.Web.UI.WebControls.BaseValidator.EvaluateIsValid" />
      </Docs>
    </Member>
    <Member MemberName="ValidationGroup">
      <MemberSignature Language="C#" Value="public virtual string ValidationGroup { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ValidationGroup" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BaseValidator.ValidationGroup" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ValidationGroup As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ValidationGroup { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ValidationGroup : string with get, set" Usage="System.Web.UI.WebControls.BaseValidator.ValidationGroup" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue("")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue("")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Web.UI.Themeable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.Themeable(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置此验证控件所属的验证组的名称。</summary>
        <value>此验证控件所属的验证组的名称。 默认值为空字符串 ("")，表示尚未设置此属性。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 ASP.NET 提供了许多可以回发到服务器的控件。 当其中一个控件的 `CausesValidation` 属性设置为时 `true` ，将在控件回发到服务器时执行验证。 以下控件能够回发到服务器：

-   <xref:System.Web.UI.WebControls.BulletedList?displayProperty=nameWithType>

-   <xref:System.Web.UI.WebControls.Button?displayProperty=nameWithType>

-   <xref:System.Web.UI.WebControls.CheckBox?displayProperty=nameWithType>

-   <xref:System.Web.UI.WebControls.CheckBoxList?displayProperty=nameWithType>

-   <xref:System.Web.UI.WebControls.DropDownList?displayProperty=nameWithType>

-   <xref:System.Web.UI.HtmlControls.HtmlButton?displayProperty=nameWithType>

-   <xref:System.Web.UI.HtmlControls.HtmlInputButton?displayProperty=nameWithType>

-   <xref:System.Web.UI.HtmlControls.HtmlInputImage?displayProperty=nameWithType>

-   <xref:System.Web.UI.WebControls.ImageButton?displayProperty=nameWithType>

-   <xref:System.Web.UI.WebControls.LinkButton?displayProperty=nameWithType>

-   <xref:System.Web.UI.WebControls.ListBox?displayProperty=nameWithType>

-   <xref:System.Web.UI.WebControls.RadioButtonList?displayProperty=nameWithType>

-   <xref:System.Web.UI.WebControls.TextBox?displayProperty=nameWithType>

> [!NOTE]
>  其中某些控件只有在属性设置为时才会回发到服务器 `AutoPostBack` `true` 。

 每个控件都有一个 `ValidationGroup` 属性，设置此属性后，当控件触发回发到服务器时，只验证指定组中的验证控件。 使用 <xref:System.Web.UI.WebControls.BaseValidator.ValidationGroup%2A> 属性将验证控件分配给验证组。 <xref:System.Web.UI.Page>类还公开了一个 <xref:System.Web.UI.Page.GetValidators%2A> 方法和 <xref:System.Web.UI.Page.Validate%2A> 接受输入参数的方法 <xref:System.Web.UI.WebControls.BaseValidator.ValidationGroup%2A> 。

 无法通过主题或样式表主题设置此属性。 有关详细信息，请参阅 <xref:System.Web.UI.ThemeableAttribute> 和 [ASP.NET 主题和外观](https://docs.microsoft.com/previous-versions/aspnet/ykzx33wh(v=vs.100))。



## Examples
 下面的代码示例演示如何使用 <xref:System.Web.UI.WebControls.BaseValidator.ValidationGroup%2A> 属性将验证控件分配给组。

> [!IMPORTANT]
>  此示例具有一个接受用户输入的文本框，这是一个潜在的安全威胁。 默认情况下，ASP.NET 网页验证用户输入是否不包含脚本或 HTML 元素。 有关详细信息，请参阅[脚本侵入概述](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100))。

 [!code-aspx-csharp[BaseValidatorValidationGroup#1](~/samples/snippets/csharp/VS_Snippets_WebNet/BaseValidatorValidationGroup/CS/BaseValidatorValidationGroupcs.aspx#1)]
 [!code-aspx-vb[BaseValidatorValidationGroup#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/BaseValidatorValidationGroup/VB/BaseValidatorValidationGroupvb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.IButtonControl.CausesValidation" />
        <altmember cref="P:System.Web.UI.WebControls.IButtonControl.ValidationGroup" />
        <altmember cref="M:System.Web.UI.Page.Validate" />
        <altmember cref="M:System.Web.UI.Page.GetValidators(System.String)" />
      </Docs>
    </Member>
  </Members>
</Type>
