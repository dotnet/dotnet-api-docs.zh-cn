<Type Name="MenuItem" FullName="System.Web.UI.WebControls.MenuItem">
  <Metadata><Meta Name="ms.openlocfilehash" Value="ec1a5ad1976e3b38300835de5305e6caa90dfc3d" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86626441" /></Metadata><TypeSignature Language="C#" Value="public sealed class MenuItem : ICloneable, System.Web.UI.IStateManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit MenuItem extends System.Object implements class System.ICloneable, class System.Web.UI.IStateManager" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.MenuItem" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class MenuItem&#xA;Implements ICloneable, IStateManager" />
  <TypeSignature Language="C++ CLI" Value="public ref class MenuItem sealed : ICloneable, System::Web::UI::IStateManager" />
  <TypeSignature Language="F#" Value="type MenuItem = class&#xA;    interface IStateManager&#xA;    interface ICloneable" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.IStateManager</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.Web.UI.ParseChildren(true, "ChildItems")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Web.UI.ParseChildren(true, "ChildItems")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>表示 <see cref="T:System.Web.UI.WebControls.Menu" /> 控件中显示的菜单项。 此类不能被继承。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Menu>控件由对象表示的菜单项的层次结构组成 <xref:System.Web.UI.WebControls.MenuItem> 。 每个菜单项都具有一个只读 <xref:System.Web.UI.WebControls.MenuItem.Depth%2A> 属性，该属性指定菜单项在控件中的显示级别 <xref:System.Web.UI.WebControls.Menu> 。 不具有父菜单项的顶层 (级别 0) 的菜单项称为根菜单项。 具有父菜单项的菜单项称为子菜单项。 所有根菜单项都存储在 <xref:System.Web.UI.WebControls.Menu.Items%2A> 集合中。 子菜单项存储在父菜单项的 <xref:System.Web.UI.WebControls.MenuItem.ChildItems%2A> 集合中。 您可以使用属性访问菜单项的父菜单项 <xref:System.Web.UI.WebControls.MenuItem.Parent%2A> 。  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.Menu.Items%2A>和 <xref:System.Web.UI.WebControls.MenuItem.ChildItems%2A> 集合仅包含下一级别的菜单项。 若要在菜单树的下方访问菜单项，请使用 <xref:System.Web.UI.WebControls.MenuItem.ChildItems%2A> 后续菜单项的属性。  
  
 若要为控件创建菜单项 <xref:System.Web.UI.WebControls.Menu> ，请使用以下方法之一：  
  
 使用声明性语法创建静态菜单项。  
  
 使用构造函数动态创建类的新实例 <xref:System.Web.UI.WebControls.MenuItem> 。 <xref:System.Web.UI.WebControls.MenuItem>然后，可以将这些对象添加到 <xref:System.Web.UI.WebControls.Menu.Items%2A> 或 <xref:System.Web.UI.WebControls.MenuItem.ChildItems%2A> 集合。  
  
 将 <xref:System.Web.UI.WebControls.Menu> 控件绑定到数据源。 当 <xref:System.Web.UI.WebControls.Menu> 控件绑定到 <xref:System.Web.UI.WebControls.SiteMapDataSource> 控件时， <xref:System.Web.UI.WebControls.MenuItem> 将自动创建对应于数据源中的项的对象。 对于其他数据源， <xref:System.Web.UI.WebControls.MenuItem> 还会自动创建与数据源的层次结构相匹配的对象; 但是，还必须使用 <xref:System.Web.UI.WebControls.Menu.DataBindings%2A> 集合来定义菜单项绑定，这些绑定指定菜单项和其对应数据项之间的绑定关系。  
  
 菜单项显示在静态菜单或动态菜单中，具体取决于其级别。 静态菜单始终显示在 <xref:System.Web.UI.WebControls.Menu> 控件中。 默认情况下，位于顶层 (级别 0) 的菜单项显示在静态菜单中。 通过设置属性，可以在静态菜单)  (静态子菜单中显示其他菜单级别 <xref:System.Web.UI.WebControls.Menu.StaticDisplayLevels%2A> 。 菜单项 (如果具有高于属性指定的值的任何) <xref:System.Web.UI.WebControls.Menu.StaticDisplayLevels%2A> 在动态子菜单中显示，则为。 仅当用户将鼠标指针置于包含动态子菜单的父菜单项上时，才会显示动态子菜单。  
  
 当用户单击菜单项时， <xref:System.Web.UI.WebControls.Menu> 控件可以导航到链接的网页，或只是回发到服务器。 如果 <xref:System.Web.UI.WebControls.MenuItem.NavigateUrl%2A> 设置了菜单项的属性，则控件将 <xref:System.Web.UI.WebControls.Menu> 导航到链接页; 否则，它会将该页回发到服务器以进行处理。 默认情况下，链接页显示在与控件相同的窗口或框架中 <xref:System.Web.UI.WebControls.Menu> 。 若要在不同的窗口或框架中显示链接的内容，请使用 <xref:System.Web.UI.WebControls.Menu.Target%2A> 控件的属性 <xref:System.Web.UI.WebControls.Menu> 。  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.Menu.Target%2A?displayProperty=nameWithType>属性会影响控件中的每个菜单项。 若要为单个菜单项指定窗口或框架，请直接设置该 <xref:System.Web.UI.WebControls.MenuItem.Target%2A> 对象的属性 <xref:System.Web.UI.WebControls.MenuItem> 。  
  
 每个菜单项都具有 <xref:System.Web.UI.WebControls.MenuItem.Text%2A> 和 <xref:System.Web.UI.WebControls.MenuItem.Value%2A> 属性。 属性的值 <xref:System.Web.UI.WebControls.MenuItem.Text%2A> 显示在 <xref:System.Web.UI.WebControls.Menu> 控件中，而 <xref:System.Web.UI.WebControls.MenuItem.Value%2A> 属性用于存储有关菜单项的任何其他数据，如传递到与菜单项关联的回发事件的数据。 如果设置 <xref:System.Web.UI.WebControls.MenuItem.Text%2A> 属性，但不设置属性 <xref:System.Web.UI.WebControls.MenuItem.Value%2A> ，则 <xref:System.Web.UI.WebControls.MenuItem.Value%2A> 会自动设置属性，其值与属性相同 <xref:System.Web.UI.WebControls.MenuItem.Text%2A> 。 反之亦然。 如果设置 <xref:System.Web.UI.WebControls.MenuItem.Value%2A> 属性，但不设置 <xref:System.Web.UI.WebControls.MenuItem.Text%2A> 属性，则属性会 <xref:System.Web.UI.WebControls.MenuItem.Text%2A> 自动设置为与属性相同的值 <xref:System.Web.UI.WebControls.MenuItem.Value%2A> 。  
  
> [!NOTE]
>  相同菜单级别上的菜单项必须都具有唯一的 <xref:System.Web.UI.WebControls.MenuItem.Value%2A> 属性值; <xref:System.Web.UI.WebControls.Menu> 控件不能区分同一级别上具有相同值的不同菜单项。 在这种情况下，如果用户单击的菜单项具有重复的值，则会选择菜单中第一个出现的菜单项。  
  
 若要在用户将鼠标指针放在菜单项上时显示工具提示，请设置该项的 <xref:System.Web.UI.WebControls.MenuItem.ToolTip%2A> 属性。  
  
 <xref:System.Web.UI.WebControls.Menu>控件具有几种不同类型的菜单项。 您可以使用下表中的属性控制样式 (例如，不同菜单项类型的字号和颜色) 。  
  
|菜单项样式属性|说明|  
|------------------------------|-----------------|  
|<xref:System.Web.UI.WebControls.Menu.DynamicHoverStyle%2A>|当鼠标指针置于动态菜单项上时，动态菜单项的样式设置。|  
|<xref:System.Web.UI.WebControls.Menu.DynamicMenuItemStyle%2A>|单个动态菜单项的样式设置。|  
|<xref:System.Web.UI.WebControls.Menu.DynamicMenuStyle%2A>|动态菜单的样式设置。|  
|<xref:System.Web.UI.WebControls.Menu.DynamicSelectedStyle%2A>|当前选定动态菜单项的样式设置。|  
|<xref:System.Web.UI.WebControls.Menu.StaticHoverStyle%2A>|当鼠标指针置于静态菜单项上时该菜单项的样式设置。|  
|<xref:System.Web.UI.WebControls.Menu.StaticMenuItemStyle%2A>|单个静态菜单项的样式设置。|  
|<xref:System.Web.UI.WebControls.Menu.StaticMenuStyle%2A>|静态菜单的样式设置。|  
|<xref:System.Web.UI.WebControls.Menu.StaticSelectedStyle%2A>|当前选定的静态菜单项的样式设置。|  
  
 您可以使用下表中显示的样式集合来指定基于菜单项级别应用于菜单项的样式，而不是设置各个样式的属性。  
  
|级别样式集合|说明|  
|-----------------------------|-----------------|  
|<xref:System.Web.UI.WebControls.Menu.LevelMenuItemStyles%2A>|对象的集合 <xref:System.Web.UI.WebControls.MenuItemStyle> ，这些对象根据菜单项的级别来控制其样式。|  
|<xref:System.Web.UI.WebControls.Menu.LevelSelectedStyles%2A>|对象的集合 <xref:System.Web.UI.WebControls.MenuItemStyle> ，这些对象根据所选菜单项的级别来控制其样式。|  
|<xref:System.Web.UI.WebControls.Menu.LevelSubMenuStyles%2A>|<xref:System.Web.UI.WebControls.MenuItemStyle>对象的集合，这些对象基于子菜单项的级别来控制其样式。|  
  
 集合中的第一种样式对应于菜单树中第一个深度级别的菜单项样式。 集合中的第二个样式对应于菜单树中第二个深度级别的菜单项的样式，依此类推。 这通常用于生成目录样式的导航菜单，其中特定深度的菜单项应具有相同外观，无论它们是否具有子菜单。  
  
> [!NOTE]
>  如果使用上表中列出的任何级别样式集合来定义控件的样式 <xref:System.Web.UI.WebControls.Menu> ，则这些样式设置将覆盖各个菜单项的样式属性。  
  
 除了自定义菜单项样式以外，还可以自定义菜单项的外观。 您可以通过设置下表中的属性，为菜单项的不同部分指定自定义图像。  
  
|Image 属性|说明|  
|--------------------|-----------------|  
|<xref:System.Web.UI.WebControls.MenuItem.ImageUrl%2A>|显示在菜单项文本旁边的可选图像。|  
|<xref:System.Web.UI.WebControls.MenuItem.PopOutImageUrl%2A>|显示在菜单项中的可选图像，用于指示菜单项具有动态子菜单。|  
|<xref:System.Web.UI.WebControls.MenuItem.SeparatorImageUrl%2A>|显示在菜单项底部的可选图像，用于将其与其他菜单项隔开。|  
  
 若要确定控件中当前是否已选定菜单项 <xref:System.Web.UI.WebControls.Menu> ，请使用 <xref:System.Web.UI.WebControls.MenuItem.Selected%2A> 属性。 还可以通过使用属性来确定是否已将菜单项绑定到数据 <xref:System.Web.UI.WebControls.MenuItem.DataBound%2A> 。 如果菜单项绑定到数据，则可以使用 <xref:System.Web.UI.WebControls.MenuItem.DataItem%2A> 属性来访问绑定到菜单项的数据项的值。  
  
 有关 <xref:System.Web.UI.WebControls.MenuItem> 类的实例的初始属性值列表，请参见 <xref:System.Web.UI.WebControls.MenuItem.%23ctor%2A> 构造函数。  
  
   
  
## Examples  
 下面的示例演示如何 <xref:System.Web.UI.WebControls.Menu> 使用声明性语法在控件中填充静态 <xref:System.Web.UI.WebControls.MenuItem> 对象。  
  
 [!code-aspx-csharp[MenuItem#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuItem/CS/menuitemcs.aspx#1)]
 [!code-aspx-vb[MenuItem#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuItem/VB/menuitemvb.aspx#1)]  
  
 下面的示例演示如何将控件绑定 <xref:System.Web.UI.WebControls.Menu> 到 <xref:System.Web.UI.WebControls.SiteMapDataSource> 控件。 绑定到数据源时， <xref:System.Web.UI.WebControls.Menu> 控件会自动创建 <xref:System.Web.UI.WebControls.MenuItem> 对象。 要使此示例正常工作，您必须将下面的示例站点地图数据复制到名为 web.sitemap 的文件中。  
  
 [!code-aspx-csharp[MenuDataBind#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuDataBind/CS/menudatabindcs.aspx#1)]
 [!code-aspx-vb[MenuDataBind#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuDataBind/VB/menudatabindvb.aspx#1)]  
  
 下面是前面示例的示例站点地图数据。  
  
 `<siteMap>`  
  
 `<siteMapNode url="~\Home.aspx"`  
  
 `title="Home"`  
  
 `description="Home">`  
  
 `<siteMapNode url="~\Music.aspx"`  
  
 `title="Music"`  
  
 `description="Music">`  
  
 `<siteMapNode url="~\Classical.aspx"`  
  
 `title="Classical"`  
  
 `description="Classical"/>`  
  
 `<siteMapNode url="~\Rock.aspx"`  
  
 `title="Rock"`  
  
 `description="Rock"/>`  
  
 `<siteMapNode url="~\Jazz.aspx"`  
  
 `title="Jazz"`  
  
 `description="Jazz"/>`  
  
 `</siteMapNode>`  
  
 `<siteMapNode url="~\Movies.aspx"`  
  
 `title="Movies"`  
  
 `description="Movies">`  
  
 `<siteMapNode url="~\Action.aspx"`  
  
 `title="Action"`  
  
 `description="Action"/>`  
  
 `<siteMapNode url="~\Drama.aspx"`  
  
 `title="Drama"`  
  
 `description="Drama"/>`  
  
 `<siteMapNode url="~\Musical.aspx"`  
  
 `title="Musical"`  
  
 `description="Musical"/>`  
  
 `</siteMapNode>`  
  
 `</siteMapNode>`  
  
 `</siteMap>`  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.Menu" />
    <altmember cref="T:System.Web.UI.WebControls.MenuItemBinding" />
    <altmember cref="T:System.Web.UI.WebControls.MenuItemCollection" />
    <altmember cref="T:System.Web.UI.WebControls.MenuItemStyle" />
    <altmember cref="P:System.Web.UI.WebControls.MenuItem.ChildItems" />
    <altmember cref="P:System.Web.UI.WebControls.MenuItem.ImageUrl" />
    <altmember cref="P:System.Web.UI.WebControls.Menu.Items" />
    <altmember cref="P:System.Web.UI.WebControls.MenuItem.NavigateUrl" />
    <altmember cref="P:System.Web.UI.WebControls.MenuItem.PopOutImageUrl" />
    <altmember cref="P:System.Web.UI.WebControls.MenuItem.SeparatorImageUrl" />
    <altmember cref="P:System.Web.UI.WebControls.Menu.Target" />
    <altmember cref="P:System.Web.UI.WebControls.MenuItem.Target" />
    <altmember cref="P:System.Web.UI.WebControls.MenuItem.Text" />
    <altmember cref="P:System.Web.UI.WebControls.MenuItem.ToolTip" />
    <altmember cref="P:System.Web.UI.WebControls.MenuItem.Value" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>初始化 <see cref="T:System.Web.UI.WebControls.MenuItem" /> 类的新实例。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MenuItem ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.MenuItem.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MenuItem();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化没有菜单文本和值的 <see cref="T:System.Web.UI.WebControls.MenuItem" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用此构造函数可以创建类的新实例， <xref:System.Web.UI.WebControls.MenuItem> 而无需使用菜单文本或值。  
  
> [!NOTE]
>  使用此构造函数时，该对象中的所有属性 <xref:System.Web.UI.WebControls.MenuItem> 都将设置为其默认值。 创建对象后，请确保根据需要设置属性。  
  
 此构造函数通常在动态填充控件的 <xref:System.Web.UI.WebControls.Menu.Items%2A> 集合 <xref:System.Web.UI.WebControls.Menu> 或对象的集合时使用 <xref:System.Web.UI.WebControls.MenuItem.ChildItems%2A> <xref:System.Web.UI.WebControls.MenuItem> 。  
  
   
  
## Examples  
 下面的示例演示如何使用此构造函数创建类的新实例 <xref:System.Web.UI.WebControls.MenuItem> 。 <xref:System.Web.UI.WebControls.MenuItem>然后，使用该对象动态填充控件中的菜单项 <xref:System.Web.UI.WebControls.Menu> 。  
  
 [!code-aspx-csharp[MenuItemCtorDefault#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuItemCtorDefault/CS/menuitemctordefaultcs.aspx#1)]
 [!code-aspx-vb[MenuItemCtorDefault#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuItemCtorDefault/VB/menuitemctordefaultvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Menu" />
        <altmember cref="T:System.Web.UI.WebControls.MenuItemCollection" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.Items" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.ChildItems" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MenuItem (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.MenuItem.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (text As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MenuItem(System::String ^ text);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.MenuItem : string -&gt; System.Web.UI.WebControls.MenuItem" Usage="new System.Web.UI.WebControls.MenuItem text" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text"><see cref="T:System.Web.UI.WebControls.Menu" /> 控件中为菜单项显示的文本。</param>
        <summary>使用指定的菜单文本初始化 <see cref="T:System.Web.UI.WebControls.MenuItem" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用此构造函数，通过 <xref:System.Web.UI.WebControls.MenuItem> 参数指定的菜单文本创建类的新实例 `text` 。  
  
 下表显示了类的实例的初始属性值 <xref:System.Web.UI.WebControls.MenuItem> 。  
  
|properties|初始值|  
|--------------|-------------------|  
|<xref:System.Web.UI.WebControls.MenuItem.Text%2A>|Text 参数的值。|  
  
 此构造函数通常在动态填充控件的 <xref:System.Web.UI.WebControls.Menu.Items%2A> 集合 <xref:System.Web.UI.WebControls.Menu> 或对象的集合时使用 <xref:System.Web.UI.WebControls.MenuItem.ChildItems%2A> <xref:System.Web.UI.WebControls.MenuItem> 。  
  
   
  
## Examples  
 下面的示例演示如何使用此构造函数创建类的新实例 <xref:System.Web.UI.WebControls.MenuItem> 。 <xref:System.Web.UI.WebControls.MenuItem>然后，使用该对象动态填充控件中的菜单项 <xref:System.Web.UI.WebControls.Menu> 。  
  
 [!code-aspx-csharp[MenuItemCtor1Param#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuItemCtor1Param/CS/menuitemctor1paramcs.aspx#1)]
 [!code-aspx-vb[MenuItemCtor1Param#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuItemCtor1Param/VB/menuitemctor1paramvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Menu" />
        <altmember cref="T:System.Web.UI.WebControls.MenuItemCollection" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.Items" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.ChildItems" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MenuItem (string text, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string text, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.MenuItem.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (text As String, value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MenuItem(System::String ^ text, System::String ^ value);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.MenuItem : string * string -&gt; System.Web.UI.WebControls.MenuItem" Usage="new System.Web.UI.WebControls.MenuItem (text, value)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text"><see cref="T:System.Web.UI.WebControls.Menu" /> 控件中为菜单项显示的文本。</param>
        <param name="value">与菜单项关联的补充数据，如用于处理回发事件的数据。</param>
        <summary>使用指定的菜单文本和值初始化 <see cref="T:System.Web.UI.WebControls.MenuItem" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用此构造函数可 <xref:System.Web.UI.WebControls.MenuItem> 分别使用和参数指定的菜单文本和值创建类的新实例 `text` `value` 。  
  
 下表显示了 <xref:System.Web.UI.WebControls.MenuItem> 类的某个实例的初始属性值。  
  
|properties|初始值|  
|--------------|-------------------|  
|<xref:System.Web.UI.WebControls.MenuItem.Text%2A>|`text` 参数的值。|  
|<xref:System.Web.UI.WebControls.MenuItem.Value%2A>|`value` 参数的值。|  
  
 此构造函数通常在动态填充控件的 <xref:System.Web.UI.WebControls.Menu.Items%2A> 集合 <xref:System.Web.UI.WebControls.Menu> 或对象的集合时使用 <xref:System.Web.UI.WebControls.MenuItem.ChildItems%2A> <xref:System.Web.UI.WebControls.MenuItem> 。  
  
   
  
## Examples  
 下面的示例演示如何使用此构造函数创建类的新实例 <xref:System.Web.UI.WebControls.MenuItem> 。 <xref:System.Web.UI.WebControls.MenuItem>然后，使用该对象动态填充控件中的菜单项 <xref:System.Web.UI.WebControls.Menu> 。  
  
 [!code-aspx-csharp[MenuItemCtor2Param#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuItemCtor2Param/CS/menuitemctor2paramcs.aspx#1)]
 [!code-aspx-vb[MenuItemCtor2Param#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuItemCtor2Param/VB/menuitemctor2paramvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Menu" />
        <altmember cref="T:System.Web.UI.WebControls.MenuItemCollection" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.Items" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.ChildItems" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MenuItem (string text, string value, string imageUrl);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string text, string value, string imageUrl) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.MenuItem.#ctor(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (text As String, value As String, imageUrl As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MenuItem(System::String ^ text, System::String ^ value, System::String ^ imageUrl);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.MenuItem : string * string * string -&gt; System.Web.UI.WebControls.MenuItem" Usage="new System.Web.UI.WebControls.MenuItem (text, value, imageUrl)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="imageUrl" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text"><see cref="T:System.Web.UI.WebControls.Menu" /> 控件中为菜单项显示的文本。</param>
        <param name="value">与菜单项关联的补充数据，如用于处理回发事件的数据。</param>
        <param name="imageUrl">显示在菜单项中的文本旁边的图像的 URL。</param>
        <summary>使用指定的菜单文本、值和图像的 URL 初始化 <see cref="T:System.Web.UI.WebControls.MenuItem" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用此构造函数，通过 <xref:System.Web.UI.WebControls.MenuItem> `text` 分别使用、 `value` 和参数指定的菜单文本、值和图像 URL 来创建类的新实例 `imageUrl` 。  
  
 下表显示了 <xref:System.Web.UI.WebControls.MenuItem> 类的某个实例的初始属性值。  
  
|properties|初始值|  
|--------------|-------------------|  
|<xref:System.Web.UI.WebControls.MenuItem.Text%2A>|`text` 参数的值。|  
|<xref:System.Web.UI.WebControls.MenuItem.Value%2A>|`value` 参数的值。|  
|<xref:System.Web.UI.WebControls.MenuItem.ImageUrl%2A>|`imageUrl` 参数的值。|  
  
 此构造函数通常在动态填充控件的 <xref:System.Web.UI.WebControls.Menu.Items%2A> 集合 <xref:System.Web.UI.WebControls.Menu> 或对象的集合时使用 <xref:System.Web.UI.WebControls.MenuItem.ChildItems%2A> <xref:System.Web.UI.WebControls.MenuItem> 。  
  
   
  
## Examples  
 下面的示例演示如何使用此构造函数创建类的新实例 <xref:System.Web.UI.WebControls.MenuItem> 。 <xref:System.Web.UI.WebControls.MenuItem>然后，使用该对象动态填充控件中的菜单项 <xref:System.Web.UI.WebControls.Menu> 。  
  
 [!code-aspx-csharp[MenuItemCtor3Param#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuItemCtor3Param/CS/menuitemctor3paramcs.aspx#1)]
 [!code-aspx-vb[MenuItemCtor3Param#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuItemCtor3Param/VB/menuitemctor3paramvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Menu" />
        <altmember cref="T:System.Web.UI.WebControls.MenuItemCollection" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.Items" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.ChildItems" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MenuItem (string text, string value, string imageUrl, string navigateUrl);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string text, string value, string imageUrl, string navigateUrl) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.MenuItem.#ctor(System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (text As String, value As String, imageUrl As String, navigateUrl As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MenuItem(System::String ^ text, System::String ^ value, System::String ^ imageUrl, System::String ^ navigateUrl);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.MenuItem : string * string * string * string -&gt; System.Web.UI.WebControls.MenuItem" Usage="new System.Web.UI.WebControls.MenuItem (text, value, imageUrl, navigateUrl)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="imageUrl" Type="System.String" />
        <Parameter Name="navigateUrl" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text"><see cref="T:System.Web.UI.WebControls.Menu" /> 控件中为菜单项显示的文本。</param>
        <param name="value">与菜单项关联的补充数据，如用于处理回发事件的数据。</param>
        <param name="imageUrl">显示在菜单项中的文本旁边的图像的 URL。</param>
        <param name="navigateUrl">单击菜单项时链接到的 URL。</param>
        <summary>使用指定的菜单文本、值、图像 URL 和导航 URL 初始化 <see cref="T:System.Web.UI.WebControls.MenuItem" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用此构造函数，可以 <xref:System.Web.UI.WebControls.MenuItem> `text` 分别使用、 `value` 、 `imageUrl` 和参数指定的菜单文本、值、图像 url 和导航 URL 来创建类的新实例 `navigateUrl` 。  
  
 下表显示了 <xref:System.Web.UI.WebControls.MenuItem> 类的某个实例的初始属性值。  
  
|properties|初始值|  
|--------------|-------------------|  
|<xref:System.Web.UI.WebControls.MenuItem.Text%2A>|`text` 参数的值。|  
|<xref:System.Web.UI.WebControls.MenuItem.Value%2A>|`value` 参数的值。|  
|<xref:System.Web.UI.WebControls.MenuItem.ImageUrl%2A>|`imageUrl` 参数的值。|  
|<xref:System.Web.UI.WebControls.MenuItem.NavigateUrl%2A>|`navigateUrl` 参数的值。|  
  
 此构造函数通常在动态填充控件的 <xref:System.Web.UI.WebControls.Menu.Items%2A> 集合 <xref:System.Web.UI.WebControls.Menu> 或对象的集合时使用 <xref:System.Web.UI.WebControls.MenuItem.ChildItems%2A> <xref:System.Web.UI.WebControls.MenuItem> 。  
  
   
  
## Examples  
 下面的示例演示如何使用此构造函数创建类的新实例 <xref:System.Web.UI.WebControls.MenuItem> 。 <xref:System.Web.UI.WebControls.MenuItem>然后，使用该对象动态填充控件中的菜单项 <xref:System.Web.UI.WebControls.Menu> 。  
  
 [!code-aspx-csharp[MenuItemCtor4Param#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuItemCtor4Param/CS/menuitemctor4paramcs.aspx#1)]
 [!code-aspx-vb[MenuItemCtor4Param#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuItemCtor4Param/VB/menuitemctor4paramvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Menu" />
        <altmember cref="T:System.Web.UI.WebControls.MenuItemCollection" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.Items" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.ChildItems" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MenuItem (string text, string value, string imageUrl, string navigateUrl, string target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string text, string value, string imageUrl, string navigateUrl, string target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.MenuItem.#ctor(System.String,System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (text As String, value As String, imageUrl As String, navigateUrl As String, target As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MenuItem(System::String ^ text, System::String ^ value, System::String ^ imageUrl, System::String ^ navigateUrl, System::String ^ target);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.MenuItem : string * string * string * string * string -&gt; System.Web.UI.WebControls.MenuItem" Usage="new System.Web.UI.WebControls.MenuItem (text, value, imageUrl, navigateUrl, target)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="imageUrl" Type="System.String" />
        <Parameter Name="navigateUrl" Type="System.String" />
        <Parameter Name="target" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text"><see cref="T:System.Web.UI.WebControls.Menu" /> 控件中为菜单项显示的文本。</param>
        <param name="value">与菜单项关联的补充数据，如用于处理回发事件的数据。</param>
        <param name="imageUrl">显示在菜单项中的文本旁边的图像的 URL。</param>
        <param name="navigateUrl">单击菜单项时链接到的 URL。</param>
        <param name="target">单击菜单项时，显示菜单项所链接到的网页内容的目标窗口或框架。</param>
        <summary>使用指定的菜单文本、值、图像 URL、导航 URL 和目标初始化 <see cref="T:System.Web.UI.WebControls.MenuItem" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用此构造函数创建类的新实例， <xref:System.Web.UI.WebControls.MenuItem> 使用菜单文本、值、图像 URL、导航 URL 以及、、、 `text` `value` `imageUrl` `navigateUrl` 和 `target` 参数指定的目标。  
  
 下表显示了 <xref:System.Web.UI.WebControls.MenuItem> 类的某个实例的初始属性值。  
  
|properties|初始值|  
|--------------|-------------------|  
|<xref:System.Web.UI.WebControls.MenuItem.Text%2A>|`text` 参数的值。|  
|<xref:System.Web.UI.WebControls.MenuItem.Value%2A>|`value` 参数的值。|  
|<xref:System.Web.UI.WebControls.MenuItem.ImageUrl%2A>|`imageUrl` 参数的值。|  
|<xref:System.Web.UI.WebControls.MenuItem.NavigateUrl%2A>|`navigateUrl` 参数的值。|  
|<xref:System.Web.UI.WebControls.MenuItem.Target%2A>|`target` 参数的值。|  
  
 此构造函数通常在动态填充控件的 <xref:System.Web.UI.WebControls.Menu.Items%2A> 集合 <xref:System.Web.UI.WebControls.Menu> 或对象的集合时使用 <xref:System.Web.UI.WebControls.MenuItem.ChildItems%2A> <xref:System.Web.UI.WebControls.MenuItem> 。  
  
   
  
## Examples  
 下面的示例演示如何使用此构造函数创建类的新实例 <xref:System.Web.UI.WebControls.MenuItem> 。 <xref:System.Web.UI.WebControls.MenuItem>然后，使用该对象动态填充控件中的菜单项 <xref:System.Web.UI.WebControls.Menu> 。  
  
 [!code-aspx-csharp[MenuItemCtor5Param#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuItemCtor5Param/CS/menuitemctor5paramcs.aspx#1)]
 [!code-aspx-vb[MenuItemCtor5Param#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuItemCtor5Param/VB/menuitemctor5paramvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Menu" />
        <altmember cref="T:System.Web.UI.WebControls.MenuItemCollection" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.Items" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.ChildItems" />
      </Docs>
    </Member>
    <Member MemberName="ChildItems">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.MenuItemCollection ChildItems { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.MenuItemCollection ChildItems" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.MenuItem.ChildItems" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ChildItems As MenuItemCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::MenuItemCollection ^ ChildItems { System::Web::UI::WebControls::MenuItemCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ChildItems : System.Web.UI.WebControls.MenuItemCollection" Usage="System.Web.UI.WebControls.MenuItem.ChildItems" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.MergableProperty(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.MergableProperty(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerDefaultProperty)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerDefaultProperty)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.MenuItemCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个 <see cref="T:System.Web.UI.WebControls.MenuItemCollection" /> 对象，该对象包含当前菜单项的子菜单项。</summary>
        <value><see cref="T:System.Web.UI.WebControls.MenuItemCollection" /> 对象，包含当前菜单项的子菜单项。 默认值是 <see langword="null" />，指示菜单项不包含任何子菜单项。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用 <xref:System.Web.UI.WebControls.MenuItem.ChildItems%2A> 属性 (集合) 访问当前菜单项的子菜单项（如果有）。 此集合仅包含下一级别的菜单项。 若要在菜单树的下方访问菜单项，请使用 <xref:System.Web.UI.WebControls.MenuItem.ChildItems%2A> 后续菜单项的属性。 如果 <xref:System.Web.UI.WebControls.MenuItem.ChildItems%2A> 属性为 `null` ，则当前菜单不包含任何子菜单项。  
  
 <xref:System.Web.UI.WebControls.MenuItem.ChildItems%2A>属性还可用于以编程方式管理当前菜单项的子菜单项。 可以添加、插入、删除、检索和修改 <xref:System.Web.UI.WebControls.MenuItem> 集合中的对象。 下一次刷新页面时，对集合的任何更新都会自动反映在 <xref:System.Web.UI.WebControls.Menu> 控件中。  
  
   
  
## Examples  
 下面的示例演示如何使用 <xref:System.Web.UI.WebControls.MenuItem.ChildItems%2A> 属性遍历控件中的菜单项 <xref:System.Web.UI.WebControls.Menu> 。  
  
 [!code-aspx-csharp[MenuItems#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuItems/CS/menuitemscs.aspx#1)]
 [!code-aspx-vb[MenuItems#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuItems/VB/menuitemsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Menu" />
        <altmember cref="T:System.Web.UI.WebControls.MenuItemCollection" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.Items" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.Parent" />
      </Docs>
    </Member>
    <Member MemberName="DataBound">
      <MemberSignature Language="C#" Value="public bool DataBound { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DataBound" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.MenuItem.DataBound" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DataBound As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DataBound { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.DataBound : bool" Usage="System.Web.UI.WebControls.MenuItem.DataBound" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个值，该值指示菜单项是否是通过数据绑定创建的。</summary>
        <value>如果菜单项是通过数据绑定创建的，则为 <see langword="true" />；否则为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.MenuItem.DataBound%2A>属性用于以编程方式确定菜单项是否是通过数据绑定创建的。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Menu" />
        <altmember cref="P:System.Web.UI.WebControls.BaseDataBoundControl.DataSource" />
        <altmember cref="P:System.Web.UI.WebControls.HierarchicalDataBoundControl.DataSourceID" />
        <altmember cref="M:System.Web.UI.WebControls.BaseDataBoundControl.DataBind" />
      </Docs>
    </Member>
    <Member MemberName="DataItem">
      <MemberSignature Language="C#" Value="public object DataItem { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object DataItem" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.MenuItem.DataItem" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DataItem As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ DataItem { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DataItem : obj" Usage="System.Web.UI.WebControls.MenuItem.DataItem" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(null)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(null)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取绑定到菜单项的数据项。</summary>
        <value><see cref="T:System.Object" />，表示绑定到菜单项的数据项。 默认值为 <see langword="null" />，指示菜单项未绑定到任何数据项。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 当 <xref:System.Web.UI.WebControls.Menu> 控件绑定到数据源（如 <xref:System.Web.UI.WebControls.XmlDataSource> 对象）时，此属性将设置为绑定到此特定菜单项的数据项。 此属性通常用于访问数据项的值。  
  
> [!NOTE]
>  此属性仅在数据绑定发生之后才可用。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Menu" />
        <altmember cref="T:System.Web.UI.WebControls.XmlDataSource" />
      </Docs>
    </Member>
    <Member MemberName="DataPath">
      <MemberSignature Language="C#" Value="public string DataPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataPath" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.MenuItem.DataPath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DataPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DataPath { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DataPath : string" Usage="System.Web.UI.WebControls.MenuItem.DataPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue("")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue("")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取绑定到菜单项的数据的路径。</summary>
        <value>绑定到节点的数据的路径。 此值来自 <see cref="T:System.Web.UI.WebControls.Menu" /> 控件绑定到的分层数据源控件。 默认值为空字符串 ("")。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.MenuItem.DataPath%2A>属性值通常在调用方法时使用， <xref:System.Web.UI.IHierarchicalDataSource.GetHierarchicalView%2A?displayProperty=nameWithType> 以提供绑定到当前菜单项的数据的路径。 然后，此方法返回一个 <xref:System.Web.UI.HierarchicalDataSourceView?displayProperty=nameWithType> 对象，该对象包含指定路径处的数据。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Menu" />
        <altmember cref="T:System.Web.UI.HierarchicalDataSourceView" />
        <altmember cref="M:System.Web.UI.IHierarchicalDataSource.GetHierarchicalView(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Depth">
      <MemberSignature Language="C#" Value="public int Depth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Depth" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.MenuItem.Depth" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Depth As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Depth { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Depth : int" Usage="System.Web.UI.WebControls.MenuItem.Depth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取菜单项的显示级别。</summary>
        <value>菜单项的显示级别。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用 <xref:System.Web.UI.WebControls.MenuItem.Depth%2A> 属性可确定菜单项的深度。 深度指示菜单项的显示级别，并表示当前菜单项和根菜单项之间的层次结构的级别数。 例如，根菜单项的深度为0。 根菜单项的子菜单项的深度为1，依此类推。  
  
   
  
## Examples  
 下面的示例演示如何使用 <xref:System.Web.UI.WebControls.MenuItem.Depth%2A> 属性来确定菜单项的深度。  
  
 [!code-aspx-csharp[MenuItemDepth#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuItemDepth/CS/menuitemdepthcs.aspx#1)]
 [!code-aspx-vb[MenuItemDepth#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuItemDepth/VB/menuitemdepthvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Menu" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.MaximumDynamicDisplayLevels" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticDisplayLevels" />
      </Docs>
    </Member>
    <Member MemberName="Enabled">
      <MemberSignature Language="C#" Value="public bool Enabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Enabled" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.MenuItem.Enabled" />
      <MemberSignature Language="VB.NET" Value="Public Property Enabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Enabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Enabled : bool with get, set" Usage="System.Web.UI.WebControls.MenuItem.Enabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Browsable(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示 <see cref="T:System.Web.UI.WebControls.MenuItem" /> 对象是否已启用，如果启用，则该项可以显示弹出图像和所有子菜单项。</summary>
        <value>如果启用菜单项，则为 <see langword="true" />；否则为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果将此属性设置为 `false` ，则会禁用菜单项，并且不会显示指示子项目的弹出图像。 将菜单项的此属性设置为， `false` 实际上会使菜单项成为该节点的末尾，而不会在该节点上显示更多级别。 默认值为 `true`。  
  
 如果希望菜单项显示任何子项，但不是 "可单击的" 本身，请使用属性， <xref:System.Web.UI.WebControls.MenuItem.Selectable%2A> 并将其设置为 `false` 。  
  
   
  
## Examples  
 下面的示例演示如何 <xref:System.Web.UI.WebControls.MenuItem.Enabled%2A> 将属性设置为 `false` 在菜单中显示的菜单项和函数。  
  
 [!code-aspx-csharp[MenuSelectableEnabled#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuSelectableEnabled/CS/menuselectableenabledcs.aspx#1)]
 [!code-aspx-vb[MenuSelectableEnabled#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuSelectableEnabled/VB/menuselectableenabledvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.Selectable" />
      </Docs>
    </Member>
    <Member MemberName="ImageUrl">
      <MemberSignature Language="C#" Value="public string ImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ImageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.MenuItem.ImageUrl" />
      <MemberSignature Language="VB.NET" Value="Public Property ImageUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ImageUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ImageUrl : string with get, set" Usage="System.Web.UI.WebControls.MenuItem.ImageUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue("")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue("")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName Language="C#">[System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.UrlProperty]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.UrlProperty&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置显示在菜单项文本旁边的图像的 URL。</summary>
        <value>显示在菜单项文本旁边的自定义图像的 URL。 默认值为空字符串 ("")，指示尚未设置此属性。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用 <xref:System.Web.UI.WebControls.MenuItem.ImageUrl%2A> 属性可为控件中的当前菜单项指定自定义图像 <xref:System.Web.UI.WebControls.Menu> 。 此图像显示在菜单项文本的旁边，可以采用任何文件格式 ( .jpg、.gif、.bmp 等) ，只要客户端的浏览器支持该格式即可。  
  
   
  
## Examples  
 下面的示例演示如何使用 <xref:System.Web.UI.WebControls.MenuItem.ImageUrl%2A> 属性来显示菜单项文本旁边的自定义图像。  
  
 [!code-aspx-csharp[MenuItem#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuItem/CS/menuitemcs.aspx#1)]
 [!code-aspx-vb[MenuItem#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuItem/VB/menuitemvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Menu" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.NavigateUrl" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.PopOutImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.SeparatorImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.Target" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.Text" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.ToolTip" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.Value" />
      </Docs>
    </Member>
    <Member MemberName="NavigateUrl">
      <MemberSignature Language="C#" Value="public string NavigateUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NavigateUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.MenuItem.NavigateUrl" />
      <MemberSignature Language="VB.NET" Value="Public Property NavigateUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ NavigateUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.NavigateUrl : string with get, set" Usage="System.Web.UI.WebControls.MenuItem.NavigateUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue("")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue("")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName Language="C#">[System.ComponentModel.Editor("System.Web.UI.Design.UrlEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Editor("System.Web.UI.Design.UrlEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.UrlProperty]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.UrlProperty&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.Editor("System.Web.UI.Design.UrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Editor("System.Web.UI.Design.UrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置单击菜单项时要导航到的 URL。</summary>
        <value>单击菜单项时要导航到的 URL。 默认值为空字符串 ("")，指示尚未设置此属性。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 菜单项可以处于以下两种模式之一：选择模式或导航模式。 默认情况下，菜单项处于选择模式。 若要使菜单项进入导航模式，请将菜单项的 <xref:System.Web.UI.WebControls.MenuItem.NavigateUrl%2A> 属性设置为空字符串以外的值 ( "" ) 。  
  
 当菜单项处于导航模式时，将禁用该菜单项的所有选择事件。 单击导航模式下的菜单项会将用户转到指定的 URL。 您可以选择将 <xref:System.Web.UI.WebControls.MenuItem.Target%2A> 属性设置为指定要在其中显示链接内容的窗口或框架。  
  
   
  
## Examples  
 下面的示例演示如何使用 <xref:System.Web.UI.WebControls.MenuItem.NavigateUrl%2A> 属性指定用户单击菜单项时要导航到的 URL。  
  
 [!code-aspx-csharp[MenuItem#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuItem/CS/menuitemcs.aspx#1)]
 [!code-aspx-vb[MenuItem#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuItem/VB/menuitemvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Menu" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.ImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.PopOutImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.SeparatorImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.Target" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.Text" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.ToolTip" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.Value" />
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.MenuItem Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.MenuItem Parent" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.MenuItem.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As MenuItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::MenuItem ^ Parent { System::Web::UI::WebControls::MenuItem ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Parent : System.Web.UI.WebControls.MenuItem" Usage="System.Web.UI.WebControls.MenuItem.Parent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.MenuItem</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取当前菜单项的父菜单项。</summary>
        <value><see cref="T:System.Web.UI.WebControls.MenuItem" />，表示当前菜单项的父菜单项。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用 <xref:System.Web.UI.WebControls.MenuItem.Parent%2A> 属性可确定父菜单项或访问其属性。  
  
> [!NOTE]
>  根菜单项没有父菜单项。  
  
 若要访问当前菜单项的子菜单项，请使用 <xref:System.Web.UI.WebControls.MenuItem.ChildItems%2A> 属性。  
  
   
  
## Examples  
 下面的示例演示如何使用 <xref:System.Web.UI.WebControls.MenuItem.Parent%2A> 属性访问子菜单项的父菜单项。  
  
 [!code-aspx-csharp[MenuItemParent#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuItemParent/CS/menuitemparentcs.aspx#1)]
 [!code-aspx-vb[MenuItemParent#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuItemParent/VB/menuitemparentvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.Items" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.ChildItems" />
      </Docs>
    </Member>
    <Member MemberName="PopOutImageUrl">
      <MemberSignature Language="C#" Value="public string PopOutImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PopOutImageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.MenuItem.PopOutImageUrl" />
      <MemberSignature Language="VB.NET" Value="Public Property PopOutImageUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PopOutImageUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PopOutImageUrl : string with get, set" Usage="System.Web.UI.WebControls.MenuItem.PopOutImageUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue("")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue("")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName Language="C#">[System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.UrlProperty]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.UrlProperty&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置显示在菜单项中的图像的 URL，用于指示菜单项具有动态子菜单。</summary>
        <value>显示在菜单项中的图像的 URL，用于指示菜单项具有动态子菜单。 默认值为空字符串 ("")，表示尚未设置此属性。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果 <xref:System.Web.UI.WebControls.MenuRenderingMode?displayProperty=nameWithType> 设置为，或者如果将设置为， `List` <xref:System.Web.UI.WebControls.MenuRenderingMode?displayProperty=nameWithType> `Default` 并且 <xref:System.Web.Configuration.PagesSection.ControlRenderingCompatibilityVersion%2A?displayProperty=nameWithType> 设置为 `4.0` 或更高版本，则此属性不起作用。 请使用 <xref:System.Web.UI.WebControls.Menu.DynamicEnableDefaultPopOutImage%2A?displayProperty=nameWithType> 属性或 <xref:System.Web.UI.WebControls.Menu.StaticEnableDefaultPopOutImage%2A?displayProperty=nameWithType> 属性，而不是使用此属性。  
  
 如果 <xref:System.Web.UI.WebControls.MenuRenderingMode?displayProperty=nameWithType> 设置为 `Table` ，或者如果将设置为并将设置为，则 <xref:System.Web.UI.WebControls.MenuRenderingMode?displayProperty=nameWithType> `Default` <xref:System.Web.Configuration.PagesSection.ControlRenderingCompatibilityVersion%2A?displayProperty=nameWithType> `3.5` 使用此属性来指定显示在菜单项中的自定义图像，以指示菜单项具有动态子菜单。 只要客户端的浏览器支持该格式，此图像可以是任意文件格式 ( .jpg、.gif、.bmp 等) 上。  
  
> [!NOTE]
>  设置此属性将重写和属性指定的图像 <xref:System.Web.UI.WebControls.Menu.DynamicPopOutImageUrl%2A?displayProperty=nameWithType> <xref:System.Web.UI.WebControls.Menu.StaticPopOutImageUrl%2A?displayProperty=nameWithType> 。  
  
 还可以通过将此属性设置为空字符串，并将属性设置为，在静态菜单中禁用此图像 <xref:System.Web.UI.WebControls.Menu.StaticEnableDefaultPopOutImage%2A> `false` 。 同样，可以通过将此属性设置为空字符串，并将属性设置为，在动态菜单中禁用此图像 <xref:System.Web.UI.WebControls.Menu.DynamicEnableDefaultPopOutImage%2A> `false` 。  
  
   
  
## Examples  
 下面的示例演示如何使用 <xref:System.Web.UI.WebControls.MenuItem.PopOutImageUrl%2A> 属性指定当菜单项具有动态子菜单时要在菜单项中显示的自定义图像。  
  
 [!code-aspx-csharp[MenuItem#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuItem/CS/menuitemcs.aspx#1)]
 [!code-aspx-vb[MenuItem#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuItem/VB/menuitemvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Menu" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicEnableDefaultPopOutImage" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicPopOutImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticEnableDefaultPopOutImage" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticPopOutImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.ImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.NavigateUrl" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.SeparatorImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.Target" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.Text" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.ToolTip" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.Value" />
      </Docs>
    </Member>
    <Member MemberName="Selectable">
      <MemberSignature Language="C#" Value="public bool Selectable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Selectable" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.MenuItem.Selectable" />
      <MemberSignature Language="VB.NET" Value="Public Property Selectable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Selectable { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Selectable : bool with get, set" Usage="System.Web.UI.WebControls.MenuItem.Selectable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Browsable(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示 <see cref="T:System.Web.UI.WebControls.MenuItem" /> 对象是否可选或“可单击”。</summary>
        <value>如果菜单项可选，则为 <see langword="true" />；否则为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果菜单项上的此属性设置为，则在 `false` (选定) 单击菜单项时，不会执行任何操作。 指示菜单项的子菜单项（如果存在）的弹出图像仍显示并且可用。  
  
 如果您不希望为菜单项显示任何子菜单项，请将 <xref:System.Web.UI.WebControls.MenuItem.Enabled%2A> 属性设置为 `false` 。  
  
 <xref:System.Web.UI.WebControls.MenuItem.Selectable%2A> 仅适用于可选择的菜单项，在这种情况下，单击菜单项会回发，并将该项设置为选中状态。 请注意，不能选择的菜单项仍设置为链接格式。 这是出于辅助功能的原因，因此菜单项可能会导致操作发生。 而且，即使无法选择菜单项，也可能具有可选择或需要显示的子菜单项。  
  
 如果要阻止用户单击菜单项，请执行以下操作之一：  
  
-   请勿设置 <xref:System.Web.UI.WebControls.MenuItemBinding.NavigateUrl%2A> 并将设置 <xref:System.Web.UI.WebControls.MenuItem.Selectable%2A> 为 `false` 。  
  
-   将菜单项的 <xref:System.Web.UI.WebControls.MenuItem.Enabled%2A> 属性设置为 `false` 。  
  
   
  
## Examples  
 下面的示例演示如何 <xref:System.Web.UI.WebControls.MenuItem.Selectable%2A> 将属性设置为 `false` 在菜单中显示的菜单项和函数。  
  
 [!code-aspx-csharp[MenuSelectableEnabled#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuSelectableEnabled/CS/menuselectableenabledcs.aspx#1)]
 [!code-aspx-vb[MenuSelectableEnabled#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuSelectableEnabled/VB/menuselectableenabledvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.Enabled" />
      </Docs>
    </Member>
    <Member MemberName="Selected">
      <MemberSignature Language="C#" Value="public bool Selected { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Selected" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.MenuItem.Selected" />
      <MemberSignature Language="VB.NET" Value="Public Property Selected As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Selected { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Selected : bool with get, set" Usage="System.Web.UI.WebControls.MenuItem.Selected" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Browsable(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示 <see cref="T:System.Web.UI.WebControls.Menu" /> 控件的当前菜单项是否已被选中。</summary>
        <value>如果 <see cref="T:System.Web.UI.WebControls.Menu" /> 控件的当前菜单项已选中，则为 <see langword="true" />；否则为 <see langword="false" />。 默认值为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用 <xref:System.Web.UI.WebControls.MenuItem.Selected%2A> 属性来指定或确定当前菜单项是否处于选中状态。  
  
> [!NOTE]
>  尽管属性可用于确定是否选择了菜单项，但更常见的方法是使用 <xref:System.Web.UI.WebControls.Menu.SelectedItem%2A> 属性。  
  
 在控件中一次只能选择一个菜单项 <xref:System.Web.UI.WebControls.Menu> 。  
  
   
  
## Examples  
 下面的示例演示如何使用属性在 <xref:System.Web.UI.WebControls.MenuItem.Selected%2A> <xref:System.Web.UI.WebControls.Menu> 第一次加载页面时选择控件中的特定菜单项。 要使此示例正常工作，您必须将下面的示例站点地图数据复制到名为 web.sitemap 的文件中。  
  
 [!code-aspx-csharp[MenuItemSelected#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuItemSelected/CS/menuitemselectedcs.aspx#1)]
 [!code-aspx-vb[MenuItemSelected#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuItemSelected/VB/menuitemselectedvb.aspx#1)]  
  
 下面是前面示例的示例站点地图数据。  
  
 `<siteMap>`  
  
 `<siteMapNode url="~\Home.aspx"`  
  
 `title="Home"`  
  
 `description="Home">`  
  
 `<siteMapNode url="~\Music.aspx"`  
  
 `title="Music"`  
  
 `description="Music">`  
  
 `<siteMapNode url="~\Classical.aspx"`  
  
 `title="Classical"`  
  
 `description="Classical"/>`  
  
 `<siteMapNode url="~\Rock.aspx"`  
  
 `title="Rock"`  
  
 `description="Rock"/>`  
  
 `<siteMapNode url="~\Jazz.aspx"`  
  
 `title="Jazz"`  
  
 `description="Jazz"/>`  
  
 `</siteMapNode>`  
  
 `<siteMapNode url="~\Movies.aspx"`  
  
 `title="Movies"`  
  
 `description="Movies">`  
  
 `<siteMapNode url="~\Action.aspx"`  
  
 `title="Action"`  
  
 `description="Action"/>`  
  
 `<siteMapNode url="~\Drama.aspx"`  
  
 `title="Drama"`  
  
 `description="Drama"/>`  
  
 `<siteMapNode url="~\Musical.aspx"`  
  
 `title="Musical"`  
  
 `description="Musical"/>`  
  
 `</siteMapNode>`  
  
 `</siteMapNode>`  
  
 `</siteMap>`  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.SelectedItem" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.SelectedValue" />
      </Docs>
    </Member>
    <Member MemberName="SeparatorImageUrl">
      <MemberSignature Language="C#" Value="public string SeparatorImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SeparatorImageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.MenuItem.SeparatorImageUrl" />
      <MemberSignature Language="VB.NET" Value="Public Property SeparatorImageUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SeparatorImageUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SeparatorImageUrl : string with get, set" Usage="System.Web.UI.WebControls.MenuItem.SeparatorImageUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue("")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue("")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName Language="C#">[System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.UrlProperty]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.UrlProperty&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置图像的 URL，该图像显示在菜单项底部，将菜单项与其他菜单项隔开。</summary>
        <value>图像的 URL，该图像用于将当前菜单项与其他菜单项隔开。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用 <xref:System.Web.UI.WebControls.MenuItem.SeparatorImageUrl%2A> 属性指定自定义图像 (通常是在菜单项底部显示的行) ，以将其与其他菜单项隔开。 只要客户端的浏览器支持该格式，此图像可以是任意文件格式 ( .jpg、.gif、.bmp 等) 上。  
  
   
  
## Examples  
 下面的示例演示如何使用 <xref:System.Web.UI.WebControls.MenuItem.SeparatorImageUrl%2A> 属性指定要在菜单项底部显示的自定义图像，以便将其与控件中的其他菜单项隔开 <xref:System.Web.UI.WebControls.Menu> 。  
  
 [!code-aspx-csharp[MenuItem#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuItem/CS/menuitemcs.aspx#1)]
 [!code-aspx-vb[MenuItem#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuItem/VB/menuitemvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Menu" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicBottomSeparatorImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicTopSeparatorImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.ImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.NavigateUrl" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.PopOutImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticBottomSeparatorImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticTopSeparatorImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.Text" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.ToolTip" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.Target" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.Value" />
      </Docs>
    </Member>
    <Member MemberName="System.ICloneable.Clone">
      <MemberSignature Language="C#" Value="object ICloneable.Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.ICloneable.Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.MenuItem.System#ICloneable#Clone" />
      <MemberSignature Language="VB.NET" Value="Function Clone () As Object Implements ICloneable.Clone" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.ICloneable.Clone() = ICloneable::Clone;" />
      <MemberSignature Language="F#" Value="abstract member System.ICloneable.Clone : unit -&gt; obj&#xA;override this.System.ICloneable.Clone : unit -&gt; obj" Usage="menuItem.System.ICloneable.Clone " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>创建当前 <see cref="T:System.Web.UI.WebControls.MenuItem" /> 对象的副本。</summary>
        <returns><see cref="T:System.Object" />，表示 <see cref="T:System.Web.UI.WebControls.MenuItem" /> 的副本。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.MenuItem.System%23ICloneable%23Clone%2A>类使用方法 <xref:System.Web.UI.WebControls.MenuItem> 来创建其自身的副本。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ICloneable.Clone" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IStateManager.IsTrackingViewState">
      <MemberSignature Language="C#" Value="bool System.Web.UI.IStateManager.IsTrackingViewState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Web.UI.IStateManager.IsTrackingViewState" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.MenuItem.System#Web#UI#IStateManager#IsTrackingViewState" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsTrackingViewState As Boolean Implements IStateManager.IsTrackingViewState" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Web::UI::IStateManager::IsTrackingViewState { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.System.Web.UI.IStateManager.IsTrackingViewState : bool" Usage="System.Web.UI.IStateManager.IsTrackingViewState" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.IStateManager.IsTrackingViewState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个值，该值指示 <see cref="T:System.Web.UI.WebControls.MenuItem" /> 对象是否正将更改保存到其视图状态。</summary>
        <value>如果控件标记为保存其状态，则为 <see langword="true" />；否则为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 通常，应使用 <xref:System.Web.UI.WebControls.MenuItem.System%23Web%23UI%23IStateManager%23IsTrackingViewState%2A> 成员确定 <xref:System.Web.UI.WebControls.MenuItem> 对象是否正在跟踪视图状态更改。  
  
 <xref:System.Web.UI.WebControls.MenuItem.System%23Web%23UI%23IStateManager%23IsTrackingViewState%2A>成员是显式接口成员实现。 它只能在 <xref:System.Web.UI.WebControls.MenuItem> 实例被强制转换为接口时使用 <xref:System.Web.UI.IStateManager> 。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.ViewState" />
        <altmember cref="M:System.Web.UI.Control.LoadViewState(System.Object)" />
        <altmember cref="M:System.Web.UI.Control.SaveViewState" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IStateManager.LoadViewState">
      <MemberSignature Language="C#" Value="void IStateManager.LoadViewState (object state);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IStateManager.LoadViewState(object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.MenuItem.System#Web#UI#IStateManager#LoadViewState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub LoadViewState (state As Object) Implements IStateManager.LoadViewState" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IStateManager.LoadViewState(System::Object ^ state) = System::Web::UI::IStateManager::LoadViewState;" />
      <MemberSignature Language="F#" Value="abstract member System.Web.UI.IStateManager.LoadViewState : obj -&gt; unit&#xA;override this.System.Web.UI.IStateManager.LoadViewState : obj -&gt; unit" Usage="menuItem.System.Web.UI.IStateManager.LoadViewState state" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IStateManager.LoadViewState(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="state"><see cref="T:System.Object" />，包含保存的视图状态值。</param>
        <summary>加载菜单项先前保存的视图状态。</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.UI.StateBag" />
        <altmember cref="T:System.Web.UI.StateItem" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/75x4ha6s(v=vs.100)">ASP.NET 状态管理概述</related>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IStateManager.SaveViewState">
      <MemberSignature Language="C#" Value="object IStateManager.SaveViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.Web.UI.IStateManager.SaveViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.MenuItem.System#Web#UI#IStateManager#SaveViewState" />
      <MemberSignature Language="VB.NET" Value="Function SaveViewState () As Object Implements IStateManager.SaveViewState" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.Web.UI.IStateManager.SaveViewState() = System::Web::UI::IStateManager::SaveViewState;" />
      <MemberSignature Language="F#" Value="abstract member System.Web.UI.IStateManager.SaveViewState : unit -&gt; obj&#xA;override this.System.Web.UI.IStateManager.SaveViewState : unit -&gt; obj" Usage="menuItem.System.Web.UI.IStateManager.SaveViewState " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IStateManager.SaveViewState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>将视图状态更改保存到 <see cref="T:System.Object" />。</summary>
        <returns>包含视图状态更改的 <see cref="T:System.Object" />。</returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.UI.StateBag" />
        <altmember cref="T:System.Web.UI.StateItem" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/75x4ha6s(v=vs.100)">ASP.NET 状态管理概述</related>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IStateManager.TrackViewState">
      <MemberSignature Language="C#" Value="void IStateManager.TrackViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IStateManager.TrackViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.MenuItem.System#Web#UI#IStateManager#TrackViewState" />
      <MemberSignature Language="VB.NET" Value="Sub TrackViewState () Implements IStateManager.TrackViewState" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IStateManager.TrackViewState() = System::Web::UI::IStateManager::TrackViewState;" />
      <MemberSignature Language="F#" Value="abstract member System.Web.UI.IStateManager.TrackViewState : unit -&gt; unit&#xA;override this.System.Web.UI.IStateManager.TrackViewState : unit -&gt; unit" Usage="menuItem.System.Web.UI.IStateManager.TrackViewState " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IStateManager.TrackViewState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>指示 <see cref="T:System.Web.UI.WebControls.MenuItem" /> 对象跟踪对其视图状态的更改。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 在服务器控件上调用了此方法之后，该 <xref:System.Web.UI.Control.IsTrackingViewState%2A> 属性将返回 `true` 。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.StateBag" />
        <altmember cref="T:System.Web.UI.StateItem" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/75x4ha6s(v=vs.100)">ASP.NET 状态管理概述</related>
      </Docs>
    </Member>
    <Member MemberName="Target">
      <MemberSignature Language="C#" Value="public string Target { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Target" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.MenuItem.Target" />
      <MemberSignature Language="VB.NET" Value="Public Property Target As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Target { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Target : string with get, set" Usage="System.Web.UI.WebControls.MenuItem.Target" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue("")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue("")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置用来显示菜单项的关联网页内容的目标窗口或框架。</summary>
        <value>显示所链接的网页内容的目标窗口或框架。 默认值为空字符串 ("")，该值刷新具有焦点的窗口或框架。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用 " <xref:System.Web.UI.WebControls.MenuItem.Target%2A> 属性" 指定在单击菜单项时要在其中显示其链接到菜单项的 Web 内容的窗口或框架。 值必须以 A 到 Z 范围内的字母（不区分大小写）打头，但某些以下划线打头的特殊值除外，如下表所示： 请注意，设置此属性将覆盖 <xref:System.Web.UI.WebControls.Menu.Target%2A> <xref:System.Web.UI.WebControls.Menu> 此菜单项的控件的属性。  
  
|目标值|说明|  
|------------------|-----------------|  
|`_blank`|将内容呈现在一个没有框架的新窗口中。|  
|`_parent`|将内容呈现在上一个框架集父级中。|  
|`_search`|在搜索窗格中呈现内容。|  
|`_self`|将内容呈现在含焦点的框架中。|  
|`_top`|将内容呈现在没有框架的全窗口中。|  
  
> [!NOTE]
>  请查看浏览器文档，确定是否支持 `_search` 值。 例如，Microsoft Internet Explorer 5.0 及更高版本支持 `_search` 目标值。  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.MenuItem.Target%2A>属性呈现为 `target` 属性。 `target`不允许在 XHTML 1.1 strict 文档类型定义中使用定位点元素上的属性。 <xref:System.Web.UI.WebControls.MenuItem.Target%2A>如果的呈现输出 <xref:System.Web.UI.WebControls.HyperLink> 必须符合 XHTML 1.1，请不要设置属性。 有关详细信息，请参阅 [Visual Studio 中的 XHTML 标准和 ASP.NET](https://docs.microsoft.com/previous-versions/aspnet/exc57y7e(v=vs.100))。  
>   
>  创建可访问的网页时，强烈建议你避免使用 <xref:System.Web.UI.WebControls.MenuItem.Target%2A> 属性来面向其他窗口。 有关详细信息，请参阅 [Visual Studio 和 ASP.NET 中的辅助功能](https://docs.microsoft.com/previous-versions/ms228004(v=vs.140))。  
  
   
  
## Examples  
 下面的示例演示如何使用 <xref:System.Web.UI.WebControls.MenuItem.Target%2A> 属性指定窗口或框架，在单击菜单项时，将在其中显示链接到菜单项的 Web 内容。  
  
 [!code-aspx-csharp[MenuItemTarget#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuItemTarget/CS/menuitemtargetcs.aspx#1)]
 [!code-aspx-vb[MenuItemTarget#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuItemTarget/VB/menuitemtargetvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Menu" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.ImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.NavigateUrl" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.PopOutImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.SeparatorImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.Target" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.Text" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.ToolTip" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.Value" />
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public string Text { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.MenuItem.Text" />
      <MemberSignature Language="VB.NET" Value="Public Property Text As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Text { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Text : string with get, set" Usage="System.Web.UI.WebControls.MenuItem.Text" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue("")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue("")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Localizable(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Localizable(true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置 <see cref="T:System.Web.UI.WebControls.Menu" /> 控件中显示的菜单项文本。</summary>
        <value><see cref="T:System.Web.UI.WebControls.Menu" /> 控件中的菜单项的显示文本。 默认值为空字符串("")。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用 <xref:System.Web.UI.WebControls.MenuItem.Text%2A> 属性来指定或确定为控件中的菜单项显示的文本 <xref:System.Web.UI.WebControls.Menu> 。  
  
> [!NOTE]
>  如果 <xref:System.Web.UI.WebControls.MenuItem.Text%2A> 属性包含 `null` ，则 `get` 访问器返回属性的值 <xref:System.Web.UI.WebControls.MenuItem.Value%2A> 。 如果 <xref:System.Web.UI.WebControls.MenuItem.Value%2A> 属性又包含 `null` ， <xref:System.String.Empty> 则返回。  
  
 设置此属性后，可以使用设计器工具自动将此属性的值保存到资源文件中。 有关详细信息，请参阅 <xref:System.ComponentModel.LocalizableAttribute> 和 [全球化和本地化](https://docs.microsoft.com/previous-versions/aspnet/c6zyy3s9(v=vs.100))。  
  
   
  
## Examples  
 下面的示例演示如何使用 <xref:System.Web.UI.WebControls.MenuItem.Text%2A> 属性指定要在控件中的每个菜单项中显示的文本 <xref:System.Web.UI.WebControls.Menu> 。  
  
 [!code-aspx-csharp[MenuItem#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuItem/CS/menuitemcs.aspx#1)]
 [!code-aspx-vb[MenuItem#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuItem/VB/menuitemvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Menu" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.ImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.NavigateUrl" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.PopOutImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.SeparatorImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.Target" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.ToolTip" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.Value" />
      </Docs>
    </Member>
    <Member MemberName="ToolTip">
      <MemberSignature Language="C#" Value="public string ToolTip { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ToolTip" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.MenuItem.ToolTip" />
      <MemberSignature Language="VB.NET" Value="Public Property ToolTip As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ToolTip { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ToolTip : string with get, set" Usage="System.Web.UI.WebControls.MenuItem.ToolTip" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue("")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue("")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Localizable(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Localizable(true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置菜单项的工具提示文本。</summary>
        <value>菜单项的工具提示文本。 默认值为空字符串("")。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用 <xref:System.Web.UI.WebControls.MenuItem.ToolTip%2A> 属性指定菜单项的工具提示文本。 当鼠标指针位于菜单项上时，将显示工具提示文本。  
  
 设置此属性后，可以使用设计器工具自动将此属性的值保存到资源文件中。 有关详细信息，请参阅 <xref:System.ComponentModel.LocalizableAttribute> 和 [全球化和本地化](https://docs.microsoft.com/previous-versions/aspnet/c6zyy3s9(v=vs.100))。  
  
   
  
## Examples  
 下面的示例演示如何使用 <xref:System.Web.UI.WebControls.MenuItem.ToolTip%2A> 属性为控件中的每个菜单项指定工具提示 <xref:System.Web.UI.WebControls.Menu> 。  
  
 [!code-aspx-csharp[MenuItem#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuItem/CS/menuitemcs.aspx#1)]
 [!code-aspx-vb[MenuItem#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuItem/VB/menuitemvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Menu" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.ImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.NavigateUrl" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.PopOutImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.SeparatorImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.Target" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.Text" />
        <altmember cref="P:System.Web.UI.WebControls.WebControl.ToolTip" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.Value" />
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public string Value { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Value" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.MenuItem.Value" />
      <MemberSignature Language="VB.NET" Value="Public Property Value As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Value { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Value : string with get, set" Usage="System.Web.UI.WebControls.MenuItem.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue("")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue("")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Localizable(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Localizable(true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个非显示值，该值用于存储菜单项的任何其他数据，如用于处理回发事件的数据。</summary>
        <value>菜单项的补充数据（不会显示在屏幕上）。 默认值为空字符串 ("")。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.MenuItem.Value%2A>属性用于 <xref:System.Web.UI.WebControls.MenuItem.Text%2A> 通过存储与菜单项关联的任何附加数据来补充属性。 此值不会显示在控件中，通常用于存储用于处理回发事件的数据。  
  
> [!NOTE]
>  如果 <xref:System.Web.UI.WebControls.MenuItem.Value%2A> 属性包含 `null` ，则 `get` 访问器返回属性的值 <xref:System.Web.UI.WebControls.MenuItem.Text%2A> 。 如果 <xref:System.Web.UI.WebControls.MenuItem.Text%2A> 属性又包含 `null` ， <xref:System.String.Empty> 则返回。  
  
 <xref:System.Web.UI.WebControls.MenuItem.Value%2A>当在属性中指定的值路径生成时，也会使用该属性的值 <xref:System.Web.UI.WebControls.MenuItem.ValuePath%2A> 。 值路径是由分隔符分隔的菜单项值的列表，它们构成了从根菜单项到当前菜单项的路径。 值路径用于指示菜单项在控件中的位置 <xref:System.Web.UI.WebControls.Menu> 。  
  
> [!NOTE]
>  相同菜单级别上的菜单项必须都具有唯一的 <xref:System.Web.UI.WebControls.MenuItem.Value%2A> 属性值; <xref:System.Web.UI.WebControls.Menu> 控件不能区分同一级别上具有相同值的不同菜单项。  
  
 设置此属性后，可以使用设计器工具自动将此属性的值保存到资源文件中。 有关详细信息，请参阅 <xref:System.ComponentModel.LocalizableAttribute> 和 [全球化和本地化](https://docs.microsoft.com/previous-versions/aspnet/c6zyy3s9(v=vs.100))。  
  
   
  
## Examples  
 下面的示例演示如何 <xref:System.Web.UI.WebControls.MenuItem.Value%2A> 在用户选择菜单项时显示菜单项及其父项的。  
  
 [!code-aspx-csharp[MenuItemValue#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuItemValue/CS/menuitemvaluecs.aspx#1)]
 [!code-aspx-vb[MenuItemValue#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuItemValue/VB/menuitemvaluevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Menu" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.ImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.NavigateUrl" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.PopOutImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.SeparatorImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.Target" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.Text" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.ToolTip" />
      </Docs>
    </Member>
    <Member MemberName="ValuePath">
      <MemberSignature Language="C#" Value="public string ValuePath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ValuePath" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.MenuItem.ValuePath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ValuePath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ValuePath { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ValuePath : string" Usage="System.Web.UI.WebControls.MenuItem.ValuePath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取从根菜单项到当前菜单项的路径。</summary>
        <value>由分隔符分隔的菜单项值的列表，它构成了从根菜单项到当前菜单项的路径。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.MenuItem.ValuePath%2A>属性包含以分隔符分隔的菜单项值列表，这些值构成从根菜单项到当前菜单项的路径。 值路径用于指示菜单项在控件中的位置 <xref:System.Web.UI.WebControls.Menu> 。 您可以使用属性指定用来分隔菜单项值的分隔符字符 <xref:System.Web.UI.WebControls.Menu.PathSeparator%2A> 。 此值通常在分析各个值的列表时使用，或者作为参数传递给 <xref:System.Web.UI.WebControls.Menu.FindItem%2A> 类的方法 <xref:System.Web.UI.WebControls.TreeView> 。 根据控件中显示的值 <xref:System.Web.UI.WebControls.Menu> ，分隔符字符可能需要更改以防止任何冲突。 例如，如果将分隔符字符设置为逗号，则显示的值不应包含任何逗号;否则，将无法准确分析 <xref:System.Web.UI.WebControls.MenuItem.ValuePath%2A> 属性。  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.MenuItem.Value%2A>从根菜单项到当前菜单项的每个菜单项的属性值用于生成值路径。 相同菜单级别上的菜单项必须都具有唯一的 <xref:System.Web.UI.WebControls.MenuItem.Value%2A> 属性值; <xref:System.Web.UI.WebControls.Menu> 控件不能区分同一级别上具有相同值的不同菜单项。  
  
   
  
## Examples  
 下面的示例演示如何将值解析为 <xref:System.Web.UI.WebControls.MenuItem.ValuePath%2A> 单个菜单项值的属性。  
  
 [!code-aspx-csharp[MenuItemValuePath#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuItemValuePath/CS/menuitemvaluepathcs.aspx#1)]
 [!code-aspx-vb[MenuItemValuePath#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuItemValuePath/VB/menuitemvaluepathvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.PathSeparator" />
        <altmember cref="M:System.Web.UI.WebControls.Menu.FindItem(System.String)" />
      </Docs>
    </Member>
  </Members>
</Type>
