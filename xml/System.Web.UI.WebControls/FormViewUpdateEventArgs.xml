<Type Name="FormViewUpdateEventArgs" FullName="System.Web.UI.WebControls.FormViewUpdateEventArgs">
  <Metadata><Meta Name="ms.openlocfilehash" Value="881e1130e5cdde54e694868f532b6600c1f6fd94" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89679707" /></Metadata><TypeSignature Language="C#" Value="public class FormViewUpdateEventArgs : System.ComponentModel.CancelEventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit FormViewUpdateEventArgs extends System.ComponentModel.CancelEventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.FormViewUpdateEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class FormViewUpdateEventArgs&#xA;Inherits CancelEventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class FormViewUpdateEventArgs : System::ComponentModel::CancelEventArgs" />
  <TypeSignature Language="F#" Value="type FormViewUpdateEventArgs = class&#xA;    inherit CancelEventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.CancelEventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>为 <see cref="E:System.Web.UI.WebControls.FormView.ItemUpdating" /> 事件提供数据。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormView> <xref:System.Web.UI.WebControls.FormView.ItemUpdating> 当 `CommandName` 单击控件中的 "更新" 按钮 (其属性设置为 "Update" ) 的按钮时，但在控件更新记录之前，控件引发事件 <xref:System.Web.UI.WebControls.FormView> 。 这使您可以在每次发生此事件时，提供一种事件处理方法来执行自定义例程，如 HTML 编码或验证记录的值，然后在数据源中更新记录。  
  
 <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs>对象传递到事件处理方法，该方法允许您确定发送到控件的可选命令参数的值 <xref:System.Web.UI.WebControls.FormView> ，并指示是否应取消更新操作。 若要确定 command 参数的值，请使用 <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.CommandArgument%2A> 属性。 若要取消更新操作，请将 <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> 属性设置为 `true` 。 如果需要访问要更新的记录的原始键字段值，请使用 <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.Keys%2A> 属性。 使用属性可以访问原始的非键字段值 <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.OldValues%2A> 。 更新的值 (包括更新的密钥字段值，如果你允许用户编辑关键字字段) 可使用 <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.NewValues%2A> 属性访问。  
  
 有关如何处理事件的详细信息，请参阅 [处理和引发事件](/dotnet/standard/events/)。  
  
 有关 <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs> 类的实例的初始属性值列表，请参见 <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.%23ctor%2A> 构造函数。  
  
   
  
## Examples  
 下面的示例演示如何使用 <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs> 传递给事件处理方法的对象来 <xref:System.Web.UI.WebControls.FormView.ItemUpdating> 验证用户输入的值。  
  
 [!code-aspx-csharp[FormViewUpdateEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewUpdateEventArgs/CS/formviewupdateeventargscs.aspx#1)]
 [!code-aspx-vb[FormViewUpdateEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewUpdateEventArgs/VB/formviewupdateeventargsvb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.FormView" />
    <altmember cref="T:System.Web.UI.WebControls.FormViewUpdateEventHandler" />
    <altmember cref="T:System.ComponentModel.CancelEventArgs" />
    <altmember cref="E:System.Web.UI.WebControls.FormView.ItemUpdating" />
    <altmember cref="P:System.ComponentModel.CancelEventArgs.Cancel" />
    <altmember cref="P:System.Web.UI.WebControls.FormViewUpdateEventArgs.CommandArgument" />
    <altmember cref="P:System.Web.UI.WebControls.FormViewUpdateEventArgs.Keys" />
    <altmember cref="P:System.Web.UI.WebControls.FormViewUpdateEventArgs.NewValues" />
    <altmember cref="P:System.Web.UI.WebControls.FormViewUpdateEventArgs.OldValues" />
    <altmember cref="M:System.Web.UI.WebControls.FormView.OnItemUpdating(System.Web.UI.WebControls.FormViewUpdateEventArgs)" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FormViewUpdateEventArgs (object commandArgument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object commandArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormViewUpdateEventArgs.#ctor(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (commandArgument As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FormViewUpdateEventArgs(System::Object ^ commandArgument);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.FormViewUpdateEventArgs : obj -&gt; System.Web.UI.WebControls.FormViewUpdateEventArgs" Usage="new System.Web.UI.WebControls.FormViewUpdateEventArgs commandArgument" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="commandArgument" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="commandArgument">传递给 <see cref="T:System.Web.UI.WebControls.FormView" /> 控件的可选命令参数。</param>
        <summary>初始化 <see cref="T:System.Web.UI.WebControls.FormViewUpdateEventArgs" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用此构造函数初始化类的新实例 <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs> 。  
  
 下表显示了类的实例的初始属性值 <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs> 。  
  
|properties|初始值|  
|--------------|-------------------|  
|<xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.CommandArgument%2A>|`commandArgument` 参数的值。|  
  
> [!NOTE]
>  此构造函数主要由控件开发人员在引发事件时使用。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormView" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewUpdateEventHandler" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemUpdating" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewUpdateEventArgs.CommandArgument" />
      </Docs>
    </Member>
    <Member MemberName="CommandArgument">
      <MemberSignature Language="C#" Value="public object CommandArgument { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object CommandArgument" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormViewUpdateEventArgs.CommandArgument" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CommandArgument As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ CommandArgument { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CommandArgument : obj" Usage="System.Web.UI.WebControls.FormViewUpdateEventArgs.CommandArgument" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取传递给 <see cref="T:System.Web.UI.WebControls.FormView" /> 控件的更新操作命令参数。</summary>
        <value>传递给 <see cref="T:System.Web.UI.WebControls.FormView" /> 控件的更新操作命令参数。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 为控件中的一个模板创建 "更新" 按钮时 <xref:System.Web.UI.WebControls.FormView> ，可以选择使用属性为该按钮指定命令参数 <xref:System.Web.UI.WebControls.IButtonControl.CommandArgument%2A?displayProperty=nameWithType> 。 命令参数通常包含需要更新命令的所有可选信息，如键字段的值。 <xref:System.Web.UI.WebControls.FormViewInsertEventArgs.CommandArgument%2A>提供此属性是一种用于确定 "更新" 按钮的命令参数值的便捷方法。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormView" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewInsertEventHandler" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemInserting" />
        <altmember cref="P:System.Web.UI.WebControls.IButtonControl.CommandArgument" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewInsertEventArgs.Values" />
      </Docs>
    </Member>
    <Member MemberName="Keys">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.IOrderedDictionary Keys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.IOrderedDictionary Keys" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormViewUpdateEventArgs.Keys" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Keys As IOrderedDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Specialized::IOrderedDictionary ^ Keys { System::Collections::Specialized::IOrderedDictionary ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Keys : System.Collections.Specialized.IOrderedDictionary" Usage="System.Web.UI.WebControls.FormViewUpdateEventArgs.Keys" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.IOrderedDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个字典，其中包含要更新的记录的原始键字段名/值对。</summary>
        <value><see cref="T:System.Collections.Specialized.IOrderedDictionary" />，它包含一个字典，其中包含要更新的记录的原始键字段名/值对。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.Keys%2A>属性包含控件的属性中列出的键字段的原始值 <xref:System.Web.UI.WebControls.FormView.DataKeyNames%2A> <xref:System.Web.UI.WebControls.FormView> 。 使用 <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.Keys%2A> 属性可访问要更新的记录的键字段的原始值。 例如，你可以使用这些值来记录已更新的记录。  
  
> [!NOTE]
>  如果允许用户更新键字段的值，则 <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.Keys%2A> 属性将包含原始键字段值。 更新的值存储在属性中 <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.NewValues%2A> 。  
  
 <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.Keys%2A>属性返回 <xref:System.Collections.Specialized.OrderedDictionary> 实现接口的对象 <xref:System.Collections.Specialized.IOrderedDictionary?displayProperty=nameWithType> 。 <xref:System.Collections.Specialized.OrderedDictionary>对象包含 <xref:System.Collections.DictionaryEntry?displayProperty=nameWithType> 表示已更新记录的字段的对象。 若要访问字段名称，请使用 <xref:System.Collections.Specialized.OrderedDictionary.Keys%2A> 对象的属性 <xref:System.Collections.Specialized.OrderedDictionary> 。 同样，可以使用属性访问字段值 <xref:System.Collections.Specialized.OrderedDictionary.Values%2A> 。  
  
> [!NOTE]
>  作为一种快捷方式，还可以使用对象的索引器 <xref:System.Collections.Specialized.OrderedDictionary> 直接访问字段值。 依赖于字段顺序的数据源控件 (如 <xref:System.Web.UI.WebControls.AccessDataSource>) 只能通过索引访问字段值。  
  
   
  
## Examples  
 下面的示例演示如何使用 <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.Keys%2A> 属性来访问要更新的记录的键字段的值。  
  
 [!code-aspx-csharp[FormViewUpdateEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewUpdateEventArgs/CS/formviewupdateeventargscs.aspx#1)]
 [!code-aspx-vb[FormViewUpdateEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewUpdateEventArgs/VB/formviewupdateeventargsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormView" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewUpdateEventHandler" />
        <altmember cref="T:System.Collections.Specialized.IOrderedDictionary" />
        <altmember cref="T:System.Collections.Specialized.OrderedDictionary" />
        <altmember cref="T:System.Collections.DictionaryEntry" />
        <altmember cref="P:System.Collections.Specialized.OrderedDictionary.Keys" />
        <altmember cref="P:System.Collections.Specialized.OrderedDictionary.Values" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewUpdateEventArgs.NewValues" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewUpdateEventArgs.OldValues" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemUpdating" />
      </Docs>
    </Member>
    <Member MemberName="NewValues">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.IOrderedDictionary NewValues { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.IOrderedDictionary NewValues" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormViewUpdateEventArgs.NewValues" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NewValues As IOrderedDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Specialized::IOrderedDictionary ^ NewValues { System::Collections::Specialized::IOrderedDictionary ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.NewValues : System.Collections.Specialized.IOrderedDictionary" Usage="System.Web.UI.WebControls.FormViewUpdateEventArgs.NewValues" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.IOrderedDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取包含要插入的记录所对应的字段名/值对的字典。</summary>
        <value>一个 <see cref="T:System.Collections.Specialized.IOrderedDictionary" />，它包含要更新的记录的新字段名称/值对的字典。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用 <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.NewValues%2A> 属性可访问要更新的记录的新字段值。 例如，你可以使用这些值来记录已更新的记录。  
  
> [!NOTE]
>  如果允许用户更新键字段的值，则 <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.Keys%2A> 属性将包含原始键字段值。 更新的值存储在属性中 <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.NewValues%2A> 。  
  
 <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.NewValues%2A>属性返回 <xref:System.Collections.Specialized.OrderedDictionary> 实现接口的对象 <xref:System.Collections.Specialized.IOrderedDictionary?displayProperty=nameWithType> 。 <xref:System.Collections.Specialized.OrderedDictionary>对象包含 <xref:System.Collections.DictionaryEntry?displayProperty=nameWithType> 表示已更新记录的字段的对象。 若要访问字段名称，请使用 <xref:System.Collections.Specialized.OrderedDictionary.Keys%2A> 对象的属性 <xref:System.Collections.Specialized.OrderedDictionary> 。 同样，可以使用属性访问字段值 <xref:System.Collections.Specialized.OrderedDictionary.Values%2A> 。  
  
> [!NOTE]
>  作为一种快捷方式，还可以使用对象的索引器 <xref:System.Collections.Specialized.OrderedDictionary> 直接访问字段值。 依赖于字段顺序的数据源控件 (如 <xref:System.Web.UI.WebControls.AccessDataSource>) 只能通过索引访问字段值。  
  
   
  
## Examples  
 下面的示例演示如何使用 <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.NewValues%2A> 属性访问用户为要更新的记录的非键字段输入的新值。  
  
 [!code-aspx-csharp[FormViewUpdatedEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewUpdatedEventArgs/CS/formviewupdatedeventargscs.aspx#1)]
 [!code-aspx-vb[FormViewUpdatedEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewUpdatedEventArgs/VB/formviewupdatedeventargsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormView" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewInsertEventHandler" />
        <altmember cref="T:System.Collections.Specialized.IOrderedDictionary" />
        <altmember cref="T:System.Collections.Specialized.OrderedDictionary" />
        <altmember cref="T:System.Collections.DictionaryEntry" />
        <altmember cref="P:System.Collections.Specialized.OrderedDictionary.Keys" />
        <altmember cref="P:System.Collections.Specialized.OrderedDictionary.Values" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewUpdateEventArgs.Keys" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewUpdateEventArgs.NewValues" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemUpdating" />
      </Docs>
    </Member>
    <Member MemberName="OldValues">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.IOrderedDictionary OldValues { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.IOrderedDictionary OldValues" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormViewUpdateEventArgs.OldValues" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OldValues As IOrderedDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Specialized::IOrderedDictionary ^ OldValues { System::Collections::Specialized::IOrderedDictionary ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.OldValues : System.Collections.Specialized.IOrderedDictionary" Usage="System.Web.UI.WebControls.FormViewUpdateEventArgs.OldValues" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.IOrderedDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个字典，其中包含要更新的记录的原始非键字段名/值对。</summary>
        <value><see cref="T:System.Collections.Specialized.IOrderedDictionary" />，它包含一个字典，其中包含要更新的记录的原始非键字段名/值对。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用 <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.OldValues%2A> 属性可访问已更新记录的原始非键字段值。 例如，你可以使用这些值来记录已更新的记录。 某些数据源控件（如 <xref:System.Web.UI.WebControls.SqlDataSource> 和 <xref:System.Web.UI.WebControls.ObjectDataSource> 控件）支持冲突检测 (乐观并发检查) 。 将其中 <xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection%2A> 一个控件的属性设置为时，将在 `ConflictOptions.CompareAllValues` 执行更新操作之前，将记录的原始值与数据源中的值进行比较。 如果记录已由其他用户同时修改，则不会更新该记录。  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.OldValues%2A>属性不包含键字段。 如果允许用户更新键字段的值，则原始键字段值将存储在 <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.Keys%2A> 属性中。 更新的值存储在属性中 <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.NewValues%2A> 。  
  
 <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.NewValues%2A>属性返回 <xref:System.Collections.Specialized.OrderedDictionary> 实现接口的对象 <xref:System.Collections.Specialized.IOrderedDictionary?displayProperty=nameWithType> 。 <xref:System.Collections.Specialized.OrderedDictionary>对象包含 <xref:System.Collections.DictionaryEntry?displayProperty=nameWithType> 表示已更新记录的字段的对象。 若要访问字段名称，请使用 <xref:System.Collections.Specialized.OrderedDictionary.Keys%2A> 对象的属性 <xref:System.Collections.Specialized.OrderedDictionary> 。 同样，可以使用属性访问字段值 <xref:System.Collections.Specialized.OrderedDictionary.Values%2A> 。  
  
> [!NOTE]
>  作为一种快捷方式，还可以使用对象的索引器 <xref:System.Collections.Specialized.OrderedDictionary> 直接访问字段值。 依赖于字段顺序的数据源控件 (如 <xref:System.Web.UI.WebControls.AccessDataSource>) 只能通过索引访问字段值。  
  
   
  
## Examples  
 下面的示例演示如何使用 <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.OldValues%2A> 属性来访问要更新的记录的非键字段的原始值。  
  
 [!code-aspx-csharp[FormViewUpdateEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewUpdateEventArgs/CS/formviewupdateeventargscs.aspx#1)]
 [!code-aspx-vb[FormViewUpdateEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewUpdateEventArgs/VB/formviewupdateeventargsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormView" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewUpdateEventHandler" />
        <altmember cref="T:System.Collections.Specialized.IOrderedDictionary" />
        <altmember cref="T:System.Collections.Specialized.OrderedDictionary" />
        <altmember cref="T:System.Collections.DictionaryEntry" />
        <altmember cref="P:System.Collections.Specialized.OrderedDictionary.Keys" />
        <altmember cref="P:System.Collections.Specialized.OrderedDictionary.Values" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewUpdateEventArgs.Keys" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewUpdateEventArgs.OldValues" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemUpdating" />
      </Docs>
    </Member>
  </Members>
</Type>
