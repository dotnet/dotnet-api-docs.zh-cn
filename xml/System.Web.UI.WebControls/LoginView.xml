<Type Name="LoginView" FullName="System.Web.UI.WebControls.LoginView">
  <Metadata><Meta Name="ms.openlocfilehash" Value="a1745ed050ecc51d19750ff52df4f0e6a2c5ba1c" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86626479" /></Metadata><TypeSignature Language="C#" Value="public class LoginView : System.Web.UI.Control, System.Web.UI.INamingContainer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit LoginView extends System.Web.UI.Control implements class System.Web.UI.INamingContainer" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.LoginView" />
  <TypeSignature Language="VB.NET" Value="Public Class LoginView&#xA;Inherits Control&#xA;Implements INamingContainer" />
  <TypeSignature Language="C++ CLI" Value="public ref class LoginView : System::Web::UI::Control, System::Web::UI::INamingContainer" />
  <TypeSignature Language="F#" Value="type LoginView = class&#xA;    inherit Control&#xA;    interface INamingContainer" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.Control</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.UI.INamingContainer</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.ComponentModel.Bindable(false)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.ComponentModel.Bindable(false)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.ComponentModel.DefaultEvent("ViewChanged")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultEvent("ViewChanged")&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.ComponentModel.DefaultProperty("CurrentView")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultProperty("CurrentView")&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName Language="C#">[System.ComponentModel.Designer("System.Web.UI.Design.WebControls.LoginViewDesigner,System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.ComponentModel.Designer("System.Web.UI.Design.WebControls.LoginViewDesigner,System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Web.UI.ParseChildren(true)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Web.UI.ParseChildren(true)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Web.UI.PersistChildren(false)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Web.UI.PersistChildren(false)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Web.UI.Themeable(true)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Web.UI.Themeable(true)&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName Language="C#">[System.ComponentModel.Designer("System.Web.UI.Design.WebControls.LoginViewDesigner,System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.ComponentModel.Designer("System.Web.UI.Design.WebControls.LoginViewDesigner,System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>依据给定用户的身份验证状态和角色成员资格为该用户显示相应的内容模板。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 本主题内容：  
  
-   [介绍](#introduction)  
  
-   [声明性语法](#declarative_syntax)  
  
<a name="introduction"></a>   
## <a name="introduction"></a>介绍  
 <xref:System.Web.UI.WebControls.LoginView>控件根据用户是否已经过身份验证，为不同的用户显示不同的网站内容模板 (或 "视图" ) ，如果是，则显示其所属的网站角色。  
  
> [!NOTE]
>  如果你不熟悉 ASP.NET 中提供的登录控件集，请参阅 [ASP.NET Login Controls 概述](https://docs.microsoft.com/previous-versions/aspnet/ms178329(v=vs.100)) ，然后继续。 有关与登录控件和成员资格相关的其他主题的列表，请参阅 [使用成员身份管理用户](https://docs.microsoft.com/previous-versions/aspnet/tw292whz(v=vs.100))。  
  
 存储在属性中的模板 <xref:System.Web.UI.WebControls.LoginView.AnonymousTemplate%2A> 会显示给尚未登录到网站的任何访问者。 用户登录后，该站点将显示与属性中的某个用户角色关联的模板 <xref:System.Web.UI.WebControls.LoginView.RoleGroups%2A> 或属性中指定的默认模板 <xref:System.Web.UI.WebControls.LoginView.LoggedInTemplate%2A> 。  
  
 <xref:System.Web.UI.WebControls.LoginView>将模板分配给类的三个模板属性中的任意一个后，控件将管理各种模板之间的切换 <xref:System.Web.UI.WebControls.LoginView> ：  
  
-   <xref:System.Web.UI.WebControls.LoginView.AnonymousTemplate%2A> -指定为未登录到网站的用户显示的模板。 登录的用户将看不到此模板。  
  
-   <xref:System.Web.UI.WebControls.LoginView.LoggedInTemplate%2A> -指定要向登录到网站但不属于具有定义的模板的任何角色组的用户显示的默认模板。  
  
-   <xref:System.Web.UI.WebControls.LoginView.RoleGroups%2A> -指定要显示给作为角色成员并且已定义角色组模板的已登录用户的模板。 内容模板与实例中的特定角色集相关联 <xref:System.Web.UI.WebControls.RoleGroup> 。  
  
 按角色组模板在源中的定义顺序进行搜索。 将向用户显示第一个匹配的角色组模板。 如果用户是多个角色的成员，则将使用与用户角色匹配的第一个角色组模板。 如果有多个模板与单个角色关联，则只使用第一个已定义的模板。  
  
 下表描述了 <xref:System.Web.UI.WebControls.LoginView> 使用模板的各种组合时控件的行为。  
  
|LoggedIn 模板属性|匿名模板属性|RoleGroups 属性|登录视图行为|  
|--------------------------------|---------------------------------|-------------------------|------------------------|  
|未设置|未设置|未设置|不显示任何内容。|  
|设置|未设置|未设置|仅当用户登录时显示内容。|  
|未设置|设置|未设置|仅在用户未登录时显示内容。|  
|未设置|未设置|设置|显示 <xref:System.Web.UI.WebControls.LoginView.RoleGroups%2A> 集合中与用户角色之一匹配的第一个模板。 如果未找到匹配项，则不显示任何内容。|  
|设置|设置|未设置|如果用户已登录，则显示属性中指定的模板 <xref:System.Web.UI.WebControls.LoginView.LoggedInTemplate%2A> 。 如果用户未登录，则显示属性中指定的模板 <xref:System.Web.UI.WebControls.LoginView.AnonymousTemplate%2A> 。|  
|设置|设置|设置|如果用户已登录，则显示 <xref:System.Web.UI.WebControls.LoginView.RoleGroups%2A> 集合中与用户角色之一匹配的第一个模板。 如果未找到匹配项，则显示属性中指定的模板 <xref:System.Web.UI.WebControls.LoginView.LoggedInTemplate%2A> 。 如果用户未登录，则显示属性中指定的模板 <xref:System.Web.UI.WebControls.LoginView.AnonymousTemplate%2A> 。|  
|设置|未设置|设置|如果用户已登录，则显示 <xref:System.Web.UI.WebControls.LoginView.RoleGroups%2A> 集合中与用户角色之一匹配的第一个模板。 如果未找到匹配项，则显示属性中指定的模板 <xref:System.Web.UI.WebControls.LoginView.LoggedInTemplate%2A> 。 如果用户未登录，则不会显示任何内容。|  
|未设置|设置|设置|如果用户已登录，则显示 <xref:System.Web.UI.WebControls.LoginView.RoleGroups%2A> 集合中与用户角色之一匹配的第一个模板。 如果未找到匹配项，则不会显示任何内容。 如果用户未登录，则显示属性中指定的模板 <xref:System.Web.UI.WebControls.LoginView.AnonymousTemplate%2A> 。|  
  
 <xref:System.Web.UI.WebControls.LoginView.AnonymousTemplate%2A>和 <xref:System.Web.UI.WebControls.LoginView.LoggedInTemplate%2A> 可用于任何设置 <xref:System.Security.Principal.IIdentity.Name%2A> 对象属性的属性的身份验证方案 <xref:System.Web.UI.Page> <xref:System.Web.UI.Page.User%2A> 。 你必须配置角色管理，以使用 <xref:System.Web.UI.WebControls.LoginView.RoleGroups%2A> 属性基于用户在网站上的角色定义模板。 有关详细信息，请参阅 [了解角色管理](https://docs.microsoft.com/previous-versions/aspnet/5k850zwb(v=vs.100))。  
  
 <xref:System.Web.UI.Control.Focus%2A>方法不会将网页的初始焦点设置到 <xref:System.Web.UI.WebControls.LoginView> 控件或其任何子控件。 控件中包含的控件 <xref:System.Web.UI.WebControls.LoginView> 将在事件之后创建 <xref:System.Web.UI.Control.PreRender> 。 若要将焦点设置到包含的子控件 <xref:System.Web.UI.WebControls.LoginView> ，请处理 `On_PreRender` 并调用其 <xref:System.Web.UI.Control.Focus%2A> 方法。  你还可以使用 <xref:System.Web.UI.WebControls.LoginView.ViewChanging> 和 <xref:System.Web.UI.WebControls.LoginView.ViewChanged> 事件以编程方式访问控件模板中的控件 <xref:System.Web.UI.WebControls.LoginView> 。  
  
<a name="declarative_syntax"></a>   
## <a name="declarative-syntax"></a>声明性语法  
  
```  
<asp:LoginView  
    EnableTheming="True|False"  
    EnableViewState="True|False"  
    ID="string"  
    OnDataBinding="DataBinding event handler"  
    OnDisposed="Disposed event handler"  
    OnInit="Init event handler"  
    OnLoad="Load event handler"  
    OnPreRender="PreRender event handler"  
    OnUnload="Unload event handler"  
    OnViewChanged="ViewChanged event handler"  
    OnViewChanging="ViewChanging event handler"  
    runat="server"  
    SkinID="string"  
    Visible="True|False"  
>  
        <AnonymousTemplate>  
            <!-- child controls -->  
        </AnonymousTemplate>  
        <LoggedInTemplate>  
            <!-- child controls -->  
        </LoggedInTemplate>  
        <RoleGroups>  
                <asp:RoleGroup  
                    Roles="string"  
                >  
                        <ContentTemplate>  
                            <!-- child controls -->  
                        </ContentTemplate>  
                </asp:RoleGroup>  
        </RoleGroups>  
</asp:LoginView>  
```  
  
   
  
## Examples  
 下面的代码示例演示如何为控件支持的三种模板类型中的每种设置模板 <xref:System.Web.UI.WebControls.LoginView> 。  
  
 [!code-aspx-csharp[LoginViewClass#1](~/samples/snippets/csharp/VS_Snippets_WebNet/LoginViewClass/CS/loginviewclasscs.aspx#1)]
 [!code-aspx-vb[LoginViewClass#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/LoginViewClass/VB/loginviewclassvb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Security.Roles" />
    <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms178329(v=vs.100)">ASP.NET 登录控件概述</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LoginView ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LoginView.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LoginView();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Web.UI.WebControls.LoginView" /> 控件的新实例。</summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms178329(v=vs.100)">ASP.NET 登录控件概述</related>
      </Docs>
    </Member>
    <Member MemberName="AnonymousTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate AnonymousTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate AnonymousTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LoginView.AnonymousTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property AnonymousTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ AnonymousTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AnonymousTemplate : System.Web.UI.ITemplate with get, set" Usage="System.Web.UI.WebControls.LoginView.AnonymousTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(null)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(null)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.LoginView))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.LoginView))&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置向未登录到网站的用户显示的模板。</summary>
        <value>要显示的 <see cref="T:System.Web.UI.ITemplate" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.LoginView.AnonymousTemplate%2A>属性指定当网站用户未登录到网站时向其显示的内容模板。 当属性的属性为时，将显示此模板 <xref:System.Security.Principal.IIdentity.Name%2A> <xref:System.Web.UI.Page> <xref:System.Web.UI.Page.User%2A> `null` 。  
  
 <xref:System.Web.UI.WebControls.LoginView.AnonymousTemplate%2A>模板绝不会向经过身份验证的用户显示。 如果该 <xref:System.Web.UI.WebControls.LoginView.AnonymousTemplate%2A> 属性为空，则不会向未登录的用户显示任何内容。  
  
   
  
## Examples  
 下面的代码示例使用模板中指定的模板 <xref:System.Web.UI.WebControls.LoginView.AnonymousTemplate%2A> 来显示注册个性化服务的邀请。  
  
 [!code-aspx-csharp[LoginViewAnonymousTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/LoginViewAnonymousTemplate/CS/loginviewanonymoustemplatecs.aspx#1)]
 [!code-aspx-vb[LoginViewAnonymousTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/LoginViewAnonymousTemplate/VB/loginviewanonymoustemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms178329(v=vs.100)">ASP.NET 登录控件概述</related>
      </Docs>
    </Member>
    <Member MemberName="Controls">
      <MemberSignature Language="C#" Value="public override System.Web.UI.ControlCollection Controls { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ControlCollection Controls" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LoginView.Controls" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Controls As ControlCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ControlCollection ^ Controls { System::Web::UI::ControlCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Controls : System.Web.UI.ControlCollection" Usage="System.Web.UI.WebControls.LoginView.Controls" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.ControlCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取包含 <see cref="T:System.Web.UI.ControlCollection" /> 控件的子控件的 <see cref="T:System.Web.UI.WebControls.LoginView" /> 对象。</summary>
        <value><see cref="T:System.Web.UI.WebControls.LoginView" /> 控件的子控件集合。</value>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms178329(v=vs.100)">ASP.NET 登录控件概述</related>
      </Docs>
    </Member>
    <Member MemberName="CreateChildControls">
      <MemberSignature Language="C#" Value="protected internal override void CreateChildControls ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void CreateChildControls() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LoginView.CreateChildControls" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub CreateChildControls ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void CreateChildControls();" />
      <MemberSignature Language="F#" Value="override this.CreateChildControls : unit -&gt; unit" Usage="loginView.CreateChildControls " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>创建构成 <see cref="T:System.Web.UI.WebControls.LoginView" /> 控件的子控件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.LoginView.CreateChildControls%2A>方法创建组成控件的各个控件 <xref:System.Web.UI.WebControls.LoginView> 。 根据为用户显示的内容模板，创建的控件集会有所不同。 例如，当用户没有登录到网站时，只会创建在属性中指定的模板中包含的控件 <xref:System.Web.UI.WebControls.LoginView.AnonymousTemplate%2A> 。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms178329(v=vs.100)">ASP.NET 登录控件概述</related>
      </Docs>
    </Member>
    <Member MemberName="DataBind">
      <MemberSignature Language="C#" Value="public override void DataBind ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void DataBind() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LoginView.DataBind" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub DataBind ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void DataBind();" />
      <MemberSignature Language="F#" Value="override this.DataBind : unit -&gt; unit" Usage="loginView.DataBind " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>将数据源绑定到 <see cref="T:System.Web.UI.WebControls.LoginView" /> 及其所有子控件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用 <xref:System.Web.UI.WebControls.LoginView.DataBind%2A> 方法可将数据从源绑定到 <xref:System.Web.UI.WebControls.LoginView> 控件及其子控件。 此方法解析控件中的所有数据绑定表达式 <xref:System.Web.UI.WebControls.LoginView> 和活动模板中的任何子控件。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableTheming">
      <MemberSignature Language="C#" Value="public override bool EnableTheming { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableTheming" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LoginView.EnableTheming" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property EnableTheming As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool EnableTheming { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableTheming : bool with get, set" Usage="System.Web.UI.WebControls.LoginView.EnableTheming" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Browsable(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示是否能对 <see cref="T:System.Web.UI.WebControls.LoginView" /> 控件应用主题。</summary>
        <value>如果使用主题，则为 <see langword="true" />；否则为 <see langword="false" />。 默认值为 <see langword="true" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.LoginView.EnableTheming%2A>属性指示是否为控件启用主题 <xref:System.Web.UI.WebControls.LoginView> 。 <xref:System.Web.UI.WebControls.LoginView.EnableTheming%2A>属性还会影响是否为其集合中包含的控件启用主题 <xref:System.Web.UI.WebControls.LoginView.Controls%2A> 。 当 <xref:System.Web.UI.WebControls.LoginView.EnableTheming%2A> 属性为时 `true` ，将在应用程序的主题目录中搜索要应用的控件外观。 如果主题目录中不存在特定控件的外观，则不会应用外观。 当 <xref:System.Web.UI.WebControls.LoginView.EnableTheming%2A> 属性为时 `false` ，不会搜索主题目录，也 <xref:System.Web.UI.WebControls.LoginView.SkinID%2A> 不会使用属性的内容。  
  
 控件可以重写 <xref:System.Web.UI.WebControls.LoginView.EnableTheming%2A> 其父控件或包含页设置的值。 例如，如果父控件的 <xref:System.Web.UI.WebControls.LoginView.EnableTheming%2A> 设置为 `false` ，则可以通过 <xref:System.Web.UI.WebControls.LoginView.EnableTheming%2A> `true` 在各个子控件上将属性设置为，来有选择地将主题应用到父控件中包含的子控件。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.LoginView.SkinID" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms178329(v=vs.100)">ASP.NET 登录控件概述</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ykzx33wh(v=vs.100)">ASP.NET 主题和外观</related>
      </Docs>
    </Member>
    <Member MemberName="Focus">
      <MemberSignature Language="C#" Value="public override void Focus ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Focus() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LoginView.Focus" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Focus ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Focus();" />
      <MemberSignature Language="F#" Value="override this.Focus : unit -&gt; unit" Usage="loginView.Focus " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>为控件设置输入焦点。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.LoginView.Focus%2A>方法不会将网页的初始焦点设置到 <xref:System.Web.UI.WebControls.LoginView> 控件或其任何子控件。 控件中包含的控件 <xref:System.Web.UI.WebControls.LoginView> 将在事件之后创建 <xref:System.Web.UI.Control.PreRender> 。 若要将焦点设置到包含的子控件 <xref:System.Web.UI.WebControls.LoginView> ，请处理 `On_PreRender` 并调用其 <xref:System.Web.UI.Control.Focus%2A> 方法。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">调用 <see cref="M:System.Web.UI.WebControls.LoginView.Focus" /> 方法。</exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms178329(v=vs.100)">ASP.NET 登录控件概述</related>
      </Docs>
    </Member>
    <Member MemberName="LoadControlState">
      <MemberSignature Language="C#" Value="protected internal override void LoadControlState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void LoadControlState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LoginView.LoadControlState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub LoadControlState (savedState As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void LoadControlState(System::Object ^ savedState);" />
      <MemberSignature Language="F#" Value="override this.LoadControlState : obj -&gt; unit" Usage="loginView.LoadControlState savedState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState">表示要还原的控件状态的 <see cref="T:System.Object" />。</param>
        <summary>此方法实现 <see cref="M:System.Web.UI.Control.LoadControlState(System.Object)" />。</summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms178329(v=vs.100)">ASP.NET 登录控件概述</related>
      </Docs>
    </Member>
    <Member MemberName="LoggedInTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate LoggedInTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate LoggedInTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LoginView.LoggedInTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property LoggedInTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ LoggedInTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberSignature Language="F#" Value="member this.LoggedInTemplate : System.Web.UI.ITemplate with get, set" Usage="System.Web.UI.WebControls.LoginView.LoggedInTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(null)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(null)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.LoginView))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.LoginView))&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置向已登录网站但不属于 <see cref="P:System.Web.UI.WebControls.LoginView.RoleGroups" /> 属性中指定的任何角色组的网站用户显示的模板。</summary>
        <value>要显示的 <see cref="T:System.Web.UI.ITemplate" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.LoginView.LoggedInTemplate%2A>当同时满足以下两个条件时，将向网站用户显示属性：  
  
-   <xref:System.Security.Principal.IIdentity.Name%2A>属性的属性 <xref:System.Web.UI.Page> <xref:System.Web.UI.Page.User%2A> 不是`null`  
  
-   用户不属于属性中定义的角色组 <xref:System.Web.UI.WebControls.LoginView.RoleGroups%2A> 。  
  
 <xref:System.Web.UI.WebControls.LoginView.LoggedInTemplate%2A>属性为经过身份验证的网站用户指定默认模板。 如果尚未配置角色管理，则 <xref:System.Web.UI.WebControls.LoginView.LoggedInTemplate%2A> 是唯一可用于经过身份验证的用户的模板。 有关配置角色管理的详细信息，请参阅 [了解角色管理](https://docs.microsoft.com/previous-versions/aspnet/5k850zwb(v=vs.100))。  
  
   
  
## Examples  
 下面的代码示例使用 <xref:System.Web.UI.WebControls.LoginView.LoggedInTemplate%2A> 模板显示已登录用户的个性化信息的链接。  
  
 [!code-aspx-csharp[LoginViewAnonymousTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/LoginViewAnonymousTemplate/CS/loginviewanonymoustemplatecs.aspx#1)]
 [!code-aspx-vb[LoginViewAnonymousTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/LoginViewAnonymousTemplate/VB/loginviewanonymoustemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Security.Roles" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms178329(v=vs.100)">ASP.NET 登录控件概述</related>
      </Docs>
    </Member>
    <Member MemberName="OnInit">
      <MemberSignature Language="C#" Value="protected internal override void OnInit (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnInit(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LoginView.OnInit(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnInit (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnInit(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnInit : EventArgs -&gt; unit" Usage="loginView.OnInit e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件数据的 <see cref="T:System.EventArgs" /> 对象。</param>
        <summary>引发 <see cref="E:System.Web.UI.Control.Init" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.LoginView.OnInit%2A>方法执行控件的初始化 <xref:System.Web.UI.WebControls.LoginView> 。  
  
 引发事件时，将通过委托调用事件处理程序。 有关详细信息，请参阅 [处理和引发事件](/dotnet/standard/events/)。  
  
 <xref:System.Web.UI.WebControls.LoginView.OnInit%2A> 方法还允许派生类对事件进行处理而不必附加委托。 这是在派生类中处理事件的首选技术。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>在派生类中重写 <see cref="M:System.Web.UI.WebControls.LoginView.OnInit(System.EventArgs)" /> 时，一定要调用基类的 <see cref="M:System.Web.UI.WebControls.LoginView.OnInit(System.EventArgs)" /> 方法，以便已注册的委托对事件进行接收。</para></block>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms178329(v=vs.100)">ASP.NET 登录控件概述</related>
      </Docs>
    </Member>
    <Member MemberName="OnPreRender">
      <MemberSignature Language="C#" Value="protected internal override void OnPreRender (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnPreRender(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LoginView.OnPreRender(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnPreRender (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnPreRender(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnPreRender : EventArgs -&gt; unit" Usage="loginView.OnPreRender e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件数据的 <see cref="T:System.EventArgs" /> 对象。</param>
        <summary>根据登录用户的角色确定显示哪个角色组模板。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 在 <xref:System.Web.UI.WebControls.LoginView.OnPreRender%2A> 事件中调用方法 <xref:System.Web.UI.Control.PreRender> ，以确定要向用户显示的内容模板。 如果 <xref:System.Security.Principal.IIdentity.Name%2A> 属性的属性 <xref:System.Web.UI.Page> <xref:System.Web.UI.Page.User%2A> 为，则将 `null` 显示在属性中指定的模板 <xref:System.Web.UI.WebControls.LoginView.AnonymousTemplate%2A> ; 否则，将显示与用户角色关联的模板。 如果用户不属于已定义的角色组，或未配置角色管理，则该 <xref:System.Web.UI.WebControls.LoginView> 控件将显示在属性中指定的模板 <xref:System.Web.UI.WebControls.LoginView.LoggedInTemplate%2A> 。 有关配置角色管理的详细信息，请参阅 [角色管理提供程序](https://msdn.microsoft.com/library/71ddd651-5f91-471b-ad9f-61249b0bf0d5)。  
  
 引发事件时，将通过委托调用事件处理程序。 有关详细信息，请参阅 [处理和引发事件](/dotnet/standard/events/)。  
  
 <xref:System.Web.UI.WebControls.LoginView.OnPreRender%2A> 方法还允许派生类对事件进行处理而不必附加委托。 这是在派生类中处理事件的首选技术。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>在派生类中重写 <see cref="M:System.Web.UI.WebControls.LoginView.OnPreRender(System.EventArgs)" /> 时，一定要调用基类的 <see cref="M:System.Web.UI.WebControls.LoginView.OnPreRender(System.EventArgs)" /> 方法，以便已注册的委托对事件进行接收。</para></block>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms178329(v=vs.100)">ASP.NET 登录控件概述</related>
      </Docs>
    </Member>
    <Member MemberName="OnViewChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnViewChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnViewChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LoginView.OnViewChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnViewChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnViewChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnViewChanged : EventArgs -&gt; unit&#xA;override this.OnViewChanged : EventArgs -&gt; unit" Usage="loginView.OnViewChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件数据的 <see cref="T:System.EventArgs" /> 对象。</param>
        <summary>在 <see cref="E:System.Web.UI.WebControls.LoginView.ViewChanged" /> 控件切换视图之后引发 <see cref="T:System.Web.UI.WebControls.LoginView" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 当 <xref:System.Web.UI.WebControls.LoginView> 控件切换视图时，它将从上一个模板中删除控件，并从新模板创建新的子控件。 在 <xref:System.Web.UI.WebControls.LoginView.OnViewChanged%2A> 创建新的子控件后调用方法。  
  
 使用 <xref:System.Web.UI.WebControls.LoginView.OnViewChanged%2A> 方法可执行在新视图上初始化控件所需的任何处理，如数据绑定。  
  
 引发事件时，将通过委托调用事件处理程序。 有关详细信息，请参阅 [处理和引发事件](/dotnet/standard/events/)。  
  
 <xref:System.Web.UI.WebControls.LoginView.OnViewChanged%2A> 方法还允许派生类对事件进行处理而不必附加委托。 这是在派生类中处理事件的首选技术。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>当 <see cref="M:System.Web.UI.WebControls.LoginView.OnViewChanged(System.EventArgs)" /> 在派生类中重写时，请确保调用基类的 <see cref="M:System.Web.UI.WebControls.LoginView.OnViewChanged(System.EventArgs)" /> 方法，以便注册的委托接收事件。</para></block>
        <altmember cref="E:System.Web.UI.WebControls.LoginView.ViewChanged" />
        <altmember cref="M:System.Web.UI.WebControls.LoginView.OnViewChanging(System.EventArgs)" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms178329(v=vs.100)">ASP.NET 登录控件概述</related>
      </Docs>
    </Member>
    <Member MemberName="OnViewChanging">
      <MemberSignature Language="C#" Value="protected virtual void OnViewChanging (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnViewChanging(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LoginView.OnViewChanging(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnViewChanging (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnViewChanging(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnViewChanging : EventArgs -&gt; unit&#xA;override this.OnViewChanging : EventArgs -&gt; unit" Usage="loginView.OnViewChanging e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件数据的 <see cref="T:System.EventArgs" /> 对象。</param>
        <summary>在 <see cref="E:System.Web.UI.WebControls.LoginView.ViewChanging" /> 控件切换视图之前引发 <see cref="T:System.Web.UI.WebControls.LoginView" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 当 <xref:System.Web.UI.WebControls.LoginView> 控件切换视图时，它将从上一个模板中删除控件，并从新模板创建新的子控件。 在 <xref:System.Web.UI.WebControls.LoginView.OnViewChanging%2A> 移除之前的控件之前调用方法。  
  
 在 <xref:System.Web.UI.WebControls.LoginView.OnViewChanging%2A> 移除控件之前，使用方法执行任何必要的处理，如保存控件信息。  
  
 引发事件时，将通过委托调用事件处理程序。 有关详细信息，请参阅 [处理和引发事件](/dotnet/standard/events/)。  
  
 <xref:System.Web.UI.WebControls.LoginView.OnViewChanging%2A> 方法还允许派生类对事件进行处理而不必附加委托。 这是在派生类中处理事件的首选技术。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>当 <see cref="M:System.Web.UI.WebControls.LoginView.OnViewChanging(System.EventArgs)" /> 在派生类中重写时，请确保调用基类的 <see cref="M:System.Web.UI.WebControls.LoginView.OnViewChanging(System.EventArgs)" /> 方法，以便注册的委托接收事件。</para></block>
        <altmember cref="E:System.Web.UI.WebControls.LoginView.ViewChanging" />
        <altmember cref="M:System.Web.UI.WebControls.LoginView.OnViewChanged(System.EventArgs)" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms178329(v=vs.100)">ASP.NET 登录控件概述</related>
      </Docs>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="protected internal override void Render (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Render(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LoginView.Render(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub Render (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void Render(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.Render : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="loginView.Render writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer"><see cref="T:System.Web.UI.HtmlTextWriter" />，用于在客户端浏览器上呈现服务器控件内容。</param>
        <summary>使用指定的 <see cref="T:System.Web.UI.HtmlTextWriter" /> 对象将 Web 服务器控件内容呈现给客户端浏览器。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.LoginView.Render%2A>方法用于使用指定的对象将服务器控件内容呈现到客户端的浏览器 <xref:System.Web.UI.HtmlTextWriter?displayProperty=nameWithType> 。  
  
 **注意** 此方法主要由控件开发人员用来扩展 <xref:System.Web.UI.WebControls.LoginView> 控件。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.HtmlTextWriter" />
      </Docs>
    </Member>
    <Member MemberName="RoleGroups">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.RoleGroupCollection RoleGroups { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.RoleGroupCollection RoleGroups" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LoginView.RoleGroups" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RoleGroups As RoleGroupCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::RoleGroupCollection ^ RoleGroups { System::Web::UI::WebControls::RoleGroupCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RoleGroups : System.Web.UI.WebControls.RoleGroupCollection" Usage="System.Web.UI.WebControls.LoginView.RoleGroups" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.MergableProperty(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.MergableProperty(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.Filterable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.Filterable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.Themeable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.Themeable(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.RoleGroupCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取将内容模板与特定角色相关联的角色组集合。</summary>
        <value>一个包含已定义角色组模板的 <see cref="T:System.Web.UI.WebControls.RoleGroupCollection" /> 对象。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.LoginView.RoleGroups%2A>属性包含与网站上的各种角色关联的内容模板。 将 <xref:System.Web.UI.WebControls.LoginView.RoleGroups%2A> 按照在源中定义模板的顺序搜索属性中的集合。 将向用户显示第一个匹配的角色组模板。 如果用户是多个角色的成员，则将使用与用户角色匹配的第一个角色组模板。 如果有多个模板与单个角色关联，则仅使用第一个已定义的模板。  
  
 如果登录的用户不属于角色组集合中包含的任何角色，则该站点将显示属性中指定的内容模板 <xref:System.Web.UI.WebControls.LoginView.LoggedInTemplate%2A> 。 匿名用户永远不会显示集合中包含的任何模板 <xref:System.Web.UI.WebControls.LoginView.RoleGroups%2A> 。  
  
 你必须配置角色管理，以使用 <xref:System.Web.UI.WebControls.LoginView.RoleGroups%2A> 属性基于网站上用户的角色来定义模板。 有关详细信息，请参阅 [了解角色管理](https://docs.microsoft.com/previous-versions/aspnet/5k850zwb(v=vs.100))。  
  
 无法通过主题或样式表主题设置此属性。 有关详细信息，请参阅 <xref:System.Web.UI.ThemeableAttribute> 和 [ASP.NET 主题和外观](https://docs.microsoft.com/previous-versions/aspnet/ykzx33wh(v=vs.100))。  
  
   
  
## Examples  
 下面的代码示例演示如何使用 <xref:System.Web.UI.WebControls.LoginView.RoleGroups%2A> 集合。 由于 <xref:System.Web.UI.WebControls.LoginView.AnonymousTemplate%2A> <xref:System.Web.UI.WebControls.LoginView.LoggedInTemplate%2A> 未设置和属性，因此仅向属于具有定义的内容模板的角色的用户显示内容。  
  
 [!code-aspx-csharp[LoginViewRoleGroups#1](~/samples/snippets/csharp/VS_Snippets_WebNet/LoginViewRoleGroups/CS/loginviewrolegroupscs.aspx#1)]
 [!code-aspx-vb[LoginViewRoleGroups#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/LoginViewRoleGroups/VB/loginviewrolegroupsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Security.Roles" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms178329(v=vs.100)">ASP.NET 登录控件概述</related>
      </Docs>
    </Member>
    <Member MemberName="SaveControlState">
      <MemberSignature Language="C#" Value="protected internal override object SaveControlState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance object SaveControlState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LoginView.SaveControlState" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function SaveControlState () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override System::Object ^ SaveControlState();" />
      <MemberSignature Language="F#" Value="override this.SaveControlState : unit -&gt; obj" Usage="loginView.SaveControlState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>保存将页面回发到服务器之后发生的所有服务器控件状态更改。</summary>
        <returns>返回服务器控件的当前状态。 如果没有与该控件关联的状态，则此方法返回 <see langword="null" />。</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.UI.Control.SaveControlState" />
      </Docs>
    </Member>
    <Member MemberName="SetDesignModeState">
      <MemberSignature Language="C#" Value="protected override void SetDesignModeState (System.Collections.IDictionary data);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void SetDesignModeState(class System.Collections.IDictionary data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LoginView.SetDesignModeState(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub SetDesignModeState (data As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void SetDesignModeState(System::Collections::IDictionary ^ data);" />
      <MemberSignature Language="F#" Value="override this.SetDesignModeState : System.Collections.IDictionary -&gt; unit" Usage="loginView.SetDesignModeState data" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="data">包含控件的设计时数据的 <see cref="T:System.Collections.IDictionary" />。</param>
        <summary>为控件设置设计时数据。</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.UI.Control.SetDesignModeState(System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="SkinID">
      <MemberSignature Language="C#" Value="public override string SkinID { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SkinID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LoginView.SkinID" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property SkinID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ SkinID { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SkinID : string with get, set" Usage="System.Web.UI.WebControls.LoginView.SkinID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Browsable(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置应用于 <see cref="T:System.Web.UI.WebControls.LoginView" /> 控件的外观。</summary>
        <value>应用于 <see cref="T:System.Web.UI.WebControls.LoginView" /> 控件的外观的名称。 默认值为空字符串 ("")。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 控件的可用外观包含在主题目录中的一个或多个外观文件中。 <xref:System.Web.UI.WebControls.LoginView.SkinID%2A>属性指定要应用于控件的外观。 外观特定于特定控件;不能在不同类型的控件之间共享外观设置。  
  
 如果未设置 <xref:System.Web.UI.WebControls.LoginView.SkinID%2A> 属性，控件将使用默认外观（如果已定义）。 例如，如果为控件定义了没有 ID 的外观 <xref:System.Web.UI.WebControls.Image> ，则该外观适用于 <xref:System.Web.UI.WebControls.Image> 未按 ID 显式引用外观且未设置为禁用主题的所有控件。 如果为控件定义了具有 ID 的外观 <xref:System.Web.UI.WebControls.Image> ，则该外观仅适用于 <xref:System.Web.UI.WebControls.Image> <xref:System.Web.UI.WebControls.WebControl.SkinID%2A> 设置为该 id 的控件。  
  
 如果主题目录中的外观文件不包含具有指定的外观 <xref:System.Web.UI.WebControls.LoginView.SkinID%2A> ，则 <xref:System.ArgumentException> 在运行时将引发异常。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">主题中不存在 <see cref="P:System.Web.UI.WebControls.LoginView.SkinID" /> 属性中指定的外观。</exception>
        <altmember cref="P:System.Web.UI.WebControls.LoginView.EnableTheming" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms178329(v=vs.100)">ASP.NET 登录控件概述</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ykzx33wh(v=vs.100)">ASP.NET 主题和外观</related>
      </Docs>
    </Member>
    <Member MemberName="ViewChanged">
      <MemberSignature Language="C#" Value="public event EventHandler ViewChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ViewChanged" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.LoginView.ViewChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ViewChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ ViewChanged;" />
      <MemberSignature Language="F#" Value="member this.ViewChanged : EventHandler " Usage="member this.ViewChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>在视图更改后发生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 当 <xref:System.Web.UI.WebControls.LoginView> 控件切换视图时，它将从上一个模板中删除控件，并从新模板创建新的子控件。 <xref:System.Web.UI.WebControls.LoginView.ViewChanged>创建新的子控件后引发事件。  
  
 使用 <xref:System.Web.UI.WebControls.LoginView.ViewChanged> 事件可执行在新视图上初始化控件所需的任何处理，如数据绑定。  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.LoginView.ViewChanged>仅当用户的登录状态在回发到页面时才会引发事件。 <xref:System.Web.UI.WebControls.LoginView.ViewChanged>如果用户使用 <xref:System.Web.UI.WebControls.Login> 控件登录，或如果用户使用控件注销，则不会引发事件 <xref:System.Web.UI.WebControls.LoginStatus> 。 <xref:System.Web.UI.WebControls.LoginView.ViewChanged>如果用户登录或注销后接重定向，也不会发生该事件。 事件发生的一个示例 <xref:System.Web.UI.WebControls.LoginView.ViewChanged> 是当用户通过调用 <xref:System.Web.Security.FormsAuthentication.SignOut%2A> 方法注销而不被重定向到另一个页面时。 在下一次回发到页面时， <xref:System.Web.UI.WebControls.LoginView> 控件将检测用户的登录状态更改，然后引发 <xref:System.Web.UI.WebControls.LoginView.ViewChanged> 事件。  
  
 有关处理事件的详细信息，请参阅 [处理和引发事件](/dotnet/standard/events/)。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.LoginView.OnViewChanged(System.EventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.LoginView.ViewChanging" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms178329(v=vs.100)">ASP.NET 登录控件概述</related>
      </Docs>
    </Member>
    <Member MemberName="ViewChanging">
      <MemberSignature Language="C#" Value="public event EventHandler ViewChanging;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ViewChanging" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.LoginView.ViewChanging" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ViewChanging As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ ViewChanging;" />
      <MemberSignature Language="F#" Value="member this.ViewChanging : EventHandler " Usage="member this.ViewChanging : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>在视图更改前发生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 当 <xref:System.Web.UI.WebControls.LoginView> 控件切换视图时，它将从上一个模板中删除控件，并从新模板创建新的子控件。 在 <xref:System.Web.UI.WebControls.LoginView.ViewChanging> 移除之前的控件之前引发该事件。  
  
 使用 <xref:System.Web.UI.WebControls.LoginView.ViewChanging> 事件执行任何处理，如在删除控件之前需要保存控件信息。  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.LoginView.ViewChanging>仅当用户的登录状态在回发到页面时才会引发事件。 <xref:System.Web.UI.WebControls.LoginView.ViewChanging>如果用户使用 <xref:System.Web.UI.WebControls.Login> 控件登录，或如果用户使用控件注销，则不会引发事件 <xref:System.Web.UI.WebControls.LoginStatus> 。 <xref:System.Web.UI.WebControls.LoginView.ViewChanging>如果用户登录或注销后接重定向，也不会发生该事件。 事件发生的一个示例 <xref:System.Web.UI.WebControls.LoginView.ViewChanging> 是当用户通过调用 <xref:System.Web.Security.FormsAuthentication.SignOut%2A> 方法注销而不被重定向到另一个页面时。 在下一次回发到页面时， <xref:System.Web.UI.WebControls.LoginView> 控件将检测用户的登录状态更改，然后引发 <xref:System.Web.UI.WebControls.LoginView.ViewChanging> 事件。  
  
 有关处理事件的详细信息，请参阅 [处理和引发事件](/dotnet/standard/events/)。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.LoginView.OnViewChanging(System.EventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.LoginView.ViewChanged" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms178329(v=vs.100)">ASP.NET 登录控件概述</related>
      </Docs>
    </Member>
  </Members>
</Type>
