<Type Name="ControlParameter" FullName="System.Web.UI.WebControls.ControlParameter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d286ffa1a8ef4c01a5bc65c18d8555a0b313ad16" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89935624" /></Metadata><TypeSignature Language="C#" Value="public class ControlParameter : System.Web.UI.WebControls.Parameter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ControlParameter extends System.Web.UI.WebControls.Parameter" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.ControlParameter" />
  <TypeSignature Language="VB.NET" Value="Public Class ControlParameter&#xA;Inherits Parameter" />
  <TypeSignature Language="C++ CLI" Value="public ref class ControlParameter : System::Web::UI::WebControls::Parameter" />
  <TypeSignature Language="F#" Value="type ControlParameter = class&#xA;    inherit Parameter" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.Parameter</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.ComponentModel.DefaultProperty("ControlID")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultProperty("ControlID")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>将 <see cref="T:System.Web.UI.Control" /> 的属性值绑定到参数对象。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 您可以使用 <xref:System.Web.UI.WebControls.ControlParameter> 类将属性的值（ <xref:System.Web.UI.Control> 如 <xref:System.Web.UI.WebControls.ListControl.SelectedValue%2A> 或）绑定 <xref:System.Web.UI.WebControls.ListControl.SelectedIndex%2A> 到在参数化 SQL 查询、业务对象方法或筛选表达式中使用的参数。  
  
 <xref:System.Web.UI.WebControls.ControlParameter>除了从类继承的属性以外，类还提供两个属性 <xref:System.Web.UI.WebControls.Parameter> ： <xref:System.Web.UI.WebControls.ControlParameter.ControlID%2A> 和 <xref:System.Web.UI.WebControls.ControlParameter.PropertyName%2A> 。 <xref:System.Web.UI.WebControls.ControlParameter.ControlID%2A>属性标识要 <xref:System.Web.UI.Control> 绑定到的实例， <xref:System.Web.UI.WebControls.ControlParameter.PropertyName%2A> 属性标识 <xref:System.Web.UI.Control> 类从中检索值的的公共属性 <xref:System.Web.UI.WebControls.ControlParameter> 。  
  
   
  
## Examples  
 下面的代码示例演示如何使用对象将 <xref:System.Web.UI.WebControls.ControlParameter> 控件中显示的数据绑定 <xref:System.Web.UI.WebControls.ListBox> 到 <xref:System.Web.UI.WebControls.DropDownList> 声明性方案中的控件的所选值。 <xref:System.Web.UI.WebControls.ControlParameter>对象将添加到 <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A> <xref:System.Web.UI.WebControls.SqlDataSource> 窗体上的控件的集合，并对应于属性中的 " @Title " 占位符文本 <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> 。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_2sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_2sql/CS/sql2cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_2sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_2sql/VB/sql2vb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.CookieParameter" />
    <altmember cref="T:System.Web.UI.WebControls.FormParameter" />
    <altmember cref="T:System.Web.UI.WebControls.QueryStringParameter" />
    <altmember cref="T:System.Web.UI.WebControls.ProfileParameter" />
    <altmember cref="T:System.Web.UI.WebControls.SessionParameter" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>初始化 <see cref="T:System.Web.UI.WebControls.ControlParameter" /> 类的新实例。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ControlParameter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ControlParameter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ControlParameter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Web.UI.WebControls.ControlParameter" /> 类的未命名新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ControlParameter>使用构造函数创建的对象 <xref:System.Web.UI.WebControls.ControlParameter.%23ctor%2A> 将用其所有属性的默认值初始化。 <xref:System.Web.UI.WebControls.ControlParameter.ControlID%2A>和 <xref:System.Web.UI.WebControls.ControlParameter.PropertyName%2A> 属性将初始化为 <xref:System.String.Empty?displayProperty=nameWithType> 。 此外，将属性初始化为，将属性初始化为，将属性初始化为 <xref:System.Web.UI.WebControls.Parameter.Name%2A> <xref:System.String.Empty?displayProperty=nameWithType> <xref:System.Web.UI.WebControls.Parameter.Type%2A> <xref:System.TypeCode.Object?displayProperty=nameWithType> <xref:System.Web.UI.WebControls.Parameter.Direction%2A> <xref:System.Data.ParameterDirection.Input> ，并将 <xref:System.Web.UI.WebControls.Parameter.DefaultValue%2A> 属性初始化为 `null` 。  
  
   
  
## Examples  
 下面的代码演示如何 <xref:System.Web.UI.WebControls.ControlParameter> 使用 <xref:System.Web.UI.WebControls.ControlParameter.%23ctor%2A> 构造函数创建对象。 <xref:System.Web.UI.WebControls.ControlParameter>对象将控件的 <xref:System.Web.UI.WebControls.ListControl.SelectedValue%2A> 属性绑定 <xref:System.Web.UI.WebControls.DropDownList> 到参数化的 SQL 查询，该查询检索控件中显示的数据 <xref:System.Web.UI.WebControls.DataGrid> 。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.Parameter_3#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.Parameter_3/CS/param1acs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.Parameter_3#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.Parameter_3/VB/param1avb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ControlParameter (System.Web.UI.WebControls.ControlParameter original);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Web.UI.WebControls.ControlParameter original) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ControlParameter.#ctor(System.Web.UI.WebControls.ControlParameter)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (original As ControlParameter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ControlParameter(System::Web::UI::WebControls::ControlParameter ^ original);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.ControlParameter : System.Web.UI.WebControls.ControlParameter -&gt; System.Web.UI.WebControls.ControlParameter" Usage="new System.Web.UI.WebControls.ControlParameter original" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="original" Type="System.Web.UI.WebControls.ControlParameter" />
      </Parameters>
      <Docs>
        <param name="original">一个 <see cref="T:System.Web.UI.WebControls.ControlParameter" /> 实例，将从该实例初始化当前实例。</param>
        <summary>使用指定实例中的值初始化 <see cref="T:System.Web.UI.WebControls.ControlParameter" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ControlParameter.%23ctor%2A>构造函数是一个受保护的复制构造函数，用于克隆 <xref:System.Web.UI.WebControls.ControlParameter> 实例。 对象的值 <xref:System.Web.UI.WebControls.ControlParameter> （包括 <xref:System.Web.UI.WebControls.ControlParameter.ControlID%2A> 、 <xref:System.Web.UI.WebControls.ControlParameter.PropertyName%2A> 、 <xref:System.Web.UI.WebControls.Parameter.Name%2A> 和 <xref:System.Web.UI.WebControls.Parameter.Type%2A> 属性）全部传输到新的实例。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.ControlParameter.Clone" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ControlParameter (string name, string controlID);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, string controlID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ControlParameter.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, controlID As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ControlParameter(System::String ^ name, System::String ^ controlID);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.ControlParameter : string * string -&gt; System.Web.UI.WebControls.ControlParameter" Usage="new System.Web.UI.WebControls.ControlParameter (name, controlID)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="controlID" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">参数的名称。</param>
        <param name="controlID">参数绑定到的控件名称。 默认值为 <see cref="F:System.String.Empty" />。</param>
        <summary>使用指定的控件名称（此名称标识要绑定到哪一个控件）初始化 <see cref="T:System.Web.UI.WebControls.ControlParameter" /> 类的新的命名实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ControlParameter>使用构造函数创建的对象 <xref:System.Web.UI.WebControls.ControlParameter.%23ctor%2A> 使用指定的参数名称和名称进行初始化，该参数名称和 <xref:System.Web.UI.Control> 名称标识 <xref:System.Web.UI.Control> 参数绑定到的。 其他属性，包括 <xref:System.Web.UI.WebControls.ControlParameter.PropertyName%2A> 、 <xref:System.Web.UI.WebControls.Parameter.Type%2A> 和 <xref:System.Web.UI.WebControls.Parameter.Direction%2A> ，它们都用默认值初始化。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Parameter.Name" />
        <altmember cref="P:System.Web.UI.WebControls.ControlParameter.ControlID" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ControlParameter (string name, string controlID, string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, string controlID, string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ControlParameter.#ctor(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, controlID As String, propertyName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ControlParameter(System::String ^ name, System::String ^ controlID, System::String ^ propertyName);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.ControlParameter : string * string * string -&gt; System.Web.UI.WebControls.ControlParameter" Usage="new System.Web.UI.WebControls.ControlParameter (name, controlID, propertyName)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="controlID" Type="System.String" />
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">参数的名称。</param>
        <param name="controlID">参数绑定到的控件名称。 默认值为 <see cref="F:System.String.Empty" />。</param>
        <param name="propertyName">参数绑定到的控件上的属性名称。 默认值为 <see cref="F:System.String.Empty" />。</param>
        <summary>使用指定的属性名和控件名称（此名称标识要绑定到哪一个控件）初始化 <see cref="T:System.Web.UI.WebControls.ControlParameter" /> 类的新的命名实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ControlParameter>使用构造函数创建的对象 <xref:System.Web.UI.WebControls.ControlParameter.%23ctor%2A> 使用指定的参数名称、 <xref:System.Web.UI.Control> 名称和属性进行初始化 <xref:System.Web.UI.WebControls.ControlParameter.PropertyName%2A> ，后者标识 <xref:System.Web.UI.Control> 参数绑定到的。 其他属性，包括 <xref:System.Web.UI.WebControls.Parameter.Type%2A> 、 <xref:System.Web.UI.WebControls.Parameter.Direction%2A> 和 <xref:System.Web.UI.WebControls.Parameter.ConvertEmptyStringToNull%2A> ，它们都用默认值初始化。  
  
   
  
## Examples  
 下面的代码演示如何 <xref:System.Web.UI.WebControls.ControlParameter> 使用 <xref:System.Web.UI.WebControls.ControlParameter.%23ctor%2A> 构造函数创建对象。 参数绑定到的值 <xref:System.Web.UI.WebControls.TextBox> 和控件， <xref:System.Web.UI.WebControls.DropDownList> 以便在 Web 窗体页中输入数据库中的数据。  
  
 [!code-csharp[System.Web.UI.WebControls.AccessDataSource_3#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.AccessDataSource_3/CS/webform5cs.aspx#2)]
 [!code-vb[System.Web.UI.WebControls.AccessDataSource_3#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.AccessDataSource_3/VB/webform5vb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Parameter.Name" />
        <altmember cref="P:System.Web.UI.WebControls.ControlParameter.ControlID" />
        <altmember cref="P:System.Web.UI.WebControls.ControlParameter.PropertyName" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ControlParameter (string name, System.Data.DbType dbType, string controlID, string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, valuetype System.Data.DbType dbType, string controlID, string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ControlParameter.#ctor(System.String,System.Data.DbType,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, dbType As DbType, controlID As String, propertyName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ControlParameter(System::String ^ name, System::Data::DbType dbType, System::String ^ controlID, System::String ^ propertyName);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.ControlParameter : string * System.Data.DbType * string * string -&gt; System.Web.UI.WebControls.ControlParameter" Usage="new System.Web.UI.WebControls.ControlParameter (name, dbType, controlID, propertyName)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="dbType" Type="System.Data.DbType" />
        <Parameter Name="controlID" Type="System.String" />
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">参数的名称。</param>
        <param name="dbType">参数的数据类型。</param>
        <param name="controlID">参数绑定到的控件名称。 默认值为 <see cref="F:System.String.Empty" />。</param>
        <param name="propertyName">参数绑定到的控件的属性名称。 默认值为 <see cref="F:System.String.Empty" />。</param>
        <summary>使用指定的参数名称、数据库类型、控件 ID 以及属性名称初始化 <see cref="T:System.Web.UI.WebControls.ControlParameter" /> 类的新实例。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ControlParameter (string name, TypeCode type, string controlID, string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, valuetype System.TypeCode type, string controlID, string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ControlParameter.#ctor(System.String,System.TypeCode,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, type As TypeCode, controlID As String, propertyName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ControlParameter(System::String ^ name, TypeCode type, System::String ^ controlID, System::String ^ propertyName);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.ControlParameter : string * TypeCode * string * string -&gt; System.Web.UI.WebControls.ControlParameter" Usage="new System.Web.UI.WebControls.ControlParameter (name, type, controlID, propertyName)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="type" Type="System.TypeCode" />
        <Parameter Name="controlID" Type="System.String" />
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">参数的名称。</param>
        <param name="type">该参数所表示的类型。 默认值为 <see cref="F:System.TypeCode.Object" />。</param>
        <param name="controlID">参数绑定到的控件名称。 默认值为 <see cref="F:System.String.Empty" />。</param>
        <param name="propertyName">参数绑定到的控件的属性名称。 默认值为 <see cref="F:System.String.Empty" />。</param>
        <summary>使用指定的属性名和控件名称（此名称标识绑定到哪一个控件）初始化 <see cref="T:System.Web.UI.WebControls.ControlParameter" /> 类的新命名的、强类型的实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ControlParameter>使用构造函数创建的对象 <xref:System.Web.UI.WebControls.ControlParameter.%23ctor%2A> 使用指定的参数名称、 <xref:System.Web.UI.WebControls.Parameter.Type%2A> 、 <xref:System.Web.UI.Control> 名称和属性进行初始化 <xref:System.Web.UI.WebControls.ControlParameter.PropertyName%2A> 。 仅 <xref:System.Web.UI.WebControls.Parameter.Direction%2A> <xref:System.Web.UI.WebControls.Parameter.ConvertEmptyStringToNull%2A> 用默认值初始化和属性。  
  
   
  
## Examples  
 下面的代码演示如何使用 <xref:System.Web.UI.WebControls.ControlParameter.%23ctor%2A> 构造函数创建两个 <xref:System.Web.UI.WebControls.ControlParameter> 对象，并将它们与控件相关联 <xref:System.Web.UI.WebControls.SqlDataSource> 。  
  
 [!code-csharp[System.Web.UI.WebControls.ControlParameter_3#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ControlParameter_3/CS/webform5cs.aspx#2)]
 [!code-vb[System.Web.UI.WebControls.ControlParameter_3#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ControlParameter_3/VB/webform5vb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Parameter.Name" />
        <altmember cref="P:System.Web.UI.WebControls.Parameter.Type" />
        <altmember cref="P:System.Web.UI.WebControls.ControlParameter.ControlID" />
        <altmember cref="P:System.Web.UI.WebControls.ControlParameter.PropertyName" />
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.WebControls.Parameter Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.WebControls.Parameter Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ControlParameter.Clone" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function Clone () As Parameter" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Web::UI::WebControls::Parameter ^ Clone();" />
      <MemberSignature Language="F#" Value="override this.Clone : unit -&gt; System.Web.UI.WebControls.Parameter" Usage="controlParameter.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Parameter</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>返回当前 <see cref="T:System.Web.UI.WebControls.ControlParameter" /> 实例的副本。</summary>
        <returns>与当前实例完全相同的 <see cref="T:System.Web.UI.WebControls.ControlParameter" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ControlParameter.Clone%2A>方法调用 <xref:System.Web.UI.WebControls.ControlParameter.%23ctor%2A> 复制构造函数以 <xref:System.Web.UI.WebControls.ControlParameter> 使用当前实例的值初始化类的新实例。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.ControlParameter.#ctor(System.Web.UI.WebControls.ControlParameter)" />
      </Docs>
    </Member>
    <Member MemberName="ControlID">
      <MemberSignature Language="C#" Value="public string ControlID { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ControlID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ControlParameter.ControlID" />
      <MemberSignature Language="VB.NET" Value="Public Property ControlID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ControlID { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ControlID : string with get, set" Usage="System.Web.UI.WebControls.ControlParameter.ControlID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue("")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue("")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.All)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.All)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.TypeConverter(typeof(System.Web.UI.WebControls.ControlIDConverter))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.TypeConverter(typeof(System.Web.UI.WebControls.ControlIDConverter))&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.IDReferenceProperty]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.IDReferenceProperty&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>指定 <see cref="T:System.Web.UI.WebControls.ControlParameter" /> 对象绑定到的控件名称。</summary>
        <value>表示 Web 服务器控件名称的 <see langword="string" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ControlParameter.ControlID%2A>属性是一个必需的属性，用于标识 <xref:System.Web.UI.Control> <xref:System.Web.UI.WebControls.ControlParameter> 对象在运行时绑定到的实例。  
  
 通常， <xref:System.Web.UI.WebControls.ControlParameter.ControlID%2A> 设置和 <xref:System.Web.UI.WebControls.ControlParameter.PropertyName%2A> 属性以使 <xref:System.Web.UI.WebControls.ControlParameter.Evaluate%2A> 方法正确绑定到控件。 如果未设置 <xref:System.Web.UI.WebControls.ControlParameter.ControlID%2A> 属性，则在 <xref:System.Web.UI.WebControls.ControlParameter.Evaluate%2A> 调用时，方法将引发 <xref:System.ArgumentException> 异常。  
  
   
  
## Examples  
 下面的代码示例演示如何使用对象将 <xref:System.Web.UI.WebControls.ControlParameter> 控件中显示的数据绑定 <xref:System.Web.UI.WebControls.ListBox> 到 <xref:System.Web.UI.WebControls.DropDownList> 声明性方案中的控件的所选值。 <xref:System.Web.UI.WebControls.ControlParameter>对象将添加到 <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A> <xref:System.Web.UI.WebControls.SqlDataSource> 窗体上的控件的集合，并对应于属性中的 " @Title " 占位符文本 <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> 。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_2sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_2sql/CS/sql2cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_2sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_2sql/VB/sql2vb.aspx#1)]  
  
 下面的代码示例演示如何设置 <xref:System.Web.UI.WebControls.ControlParameter.ControlID%2A> 和 <xref:System.Web.UI.WebControls.ControlParameter.PropertyName%2A> 属性以标识 <xref:System.Web.UI.WebControls.ControlParameter> 对象绑定到的控件。 该示例 <xref:System.Web.UI.WebControls.ListBox> 使用值填充控件。 <xref:System.Web.UI.WebControls.ListControl.SelectedValue%2A>控件的属性 <xref:System.Web.UI.WebControls.ListBox> 用于筛选由控件检索 <xref:System.Web.UI.WebControls.SqlDataSource> 并由控件显示的数据 <xref:System.Web.UI.WebControls.GridView> 。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ControlParameter_2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ControlParameter_2/CS/webform1cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ControlParameter_2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ControlParameter_2/VB/webform1vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ControlParameter.PropertyName" />
      </Docs>
    </Member>
    <Member MemberName="Evaluate">
      <MemberSignature Language="C#" Value="protected override object Evaluate (System.Web.HttpContext context, System.Web.UI.Control control);" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance object Evaluate(class System.Web.HttpContext context, class System.Web.UI.Control control) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ControlParameter.Evaluate(System.Web.HttpContext,System.Web.UI.Control)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function Evaluate (context As HttpContext, control As Control) As Object" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Object ^ Evaluate(System::Web::HttpContext ^ context, System::Web::UI::Control ^ control);" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5" />
      <MemberSignature Language="F#" Value="override this.Evaluate : System.Web.HttpContext * System.Web.UI.Control -&gt; obj" Usage="controlParameter.Evaluate (context, control)" />
      <MemberSignature Language="C#" Value="protected internal override object Evaluate (System.Web.HttpContext context, System.Web.UI.Control control);" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance object Evaluate(class System.Web.HttpContext context, class System.Web.UI.Control control) cil managed" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function Evaluate (context As HttpContext, control As Control) As Object" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override System::Object ^ Evaluate(System::Web::HttpContext ^ context, System::Web::UI::Control ^ control);" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
        <Parameter Name="control" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="context">请求的当前 <see cref="T:System.Web.HttpContext" />。</param>
        <param name="control">参数绑定到的 <see cref="T:System.Web.UI.Control" />。</param>
        <summary>更新并返回 <see cref="T:System.Web.UI.WebControls.ControlParameter" /> 对象的值。</summary>
        <returns>一个 <see cref="T:System.Object" />，表示参数的更新值和当前值。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ControlParameter>每次调用方法时，对象都会尝试绑定到 <xref:System.Web.UI.Control> 对象和属性 <xref:System.Web.UI.WebControls.ControlParameter.Evaluate%2A> 。 <xref:System.Web.UI.WebControls.ControlParameter.Evaluate%2A>方法返回控件的属性的值，该属性由和属性的组合标识 <xref:System.Web.UI.WebControls.ControlParameter.ControlID%2A> <xref:System.Web.UI.WebControls.ControlParameter.PropertyName%2A> 。  
  
 <xref:System.Web.UI.WebControls.ControlParameter> <xref:System.Web.UI.WebControls.Parameter.DefaultValue%2A> <xref:System.Web.UI.WebControls.Parameter> 绑定到控件的属性值时，类从不使用从继承的属性。  
  
> [!NOTE]
>  在此方法的实现中，将 `context` 忽略参数。 如果 `control` 参数为 `null`，则返回 `null`。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">未设置 <see cref="P:System.Web.UI.WebControls.ControlParameter.ControlID" /> 属性。  
  
- 或 - 
未设置 <see cref="P:System.Web.UI.WebControls.ControlParameter.PropertyName" /> 属性，并且由 <see cref="T:System.Web.UI.Control" /> 属性标识的 <see cref="P:System.Web.UI.WebControls.ControlParameter.ControlID" /> 未使用 <see cref="T:System.Web.UI.ControlValuePropertyAttribute" /> 特性修饰。</exception>
        <exception cref="T:System.InvalidOperationException"><see cref="M:System.Web.UI.Control.FindControl(System.String)" /> 不返回指定的控件。  
  
- 或 - 
<see cref="P:System.Web.UI.WebControls.ControlParameter.ControlID" /> 属性标识的控件不支持 <see cref="P:System.Web.UI.WebControls.ControlParameter.PropertyName" /> 命名的属性。</exception>
        <altmember cref="P:System.Web.UI.WebControls.ControlParameter.ControlID" />
        <altmember cref="P:System.Web.UI.WebControls.ControlParameter.PropertyName" />
      </Docs>
    </Member>
    <Member MemberName="PropertyName">
      <MemberSignature Language="C#" Value="public string PropertyName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PropertyName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ControlParameter.PropertyName" />
      <MemberSignature Language="VB.NET" Value="Public Property PropertyName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PropertyName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PropertyName : string with get, set" Usage="System.Web.UI.WebControls.ControlParameter.PropertyName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue("")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue("")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.TypeConverter(typeof(System.Web.UI.WebControls.ControlPropertyNameConverter))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.TypeConverter(typeof(System.Web.UI.WebControls.ControlPropertyNameConverter))&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置由 <see cref="P:System.Web.UI.WebControls.ControlParameter.ControlID" /> 对象绑定到的 <see cref="T:System.Web.UI.WebControls.ControlParameter" /> 属性标识的控件的属性名。</summary>
        <value>一个 <see langword="string" />，表示 <see cref="T:System.Web.UI.WebControls.ControlParameter" /> 绑定到的控件的属性名。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ControlParameter.PropertyName%2A>属性标识 <xref:System.Web.UI.Control> 由 <xref:System.Web.UI.WebControls.ControlParameter.ControlID%2A> <xref:System.Web.UI.WebControls.ControlParameter> 对象在运行时绑定到的属性标识的对象的公共属性。 <xref:System.Web.UI.WebControls.ControlParameter.PropertyName%2A> 可以设置为简单字符串（如 "SelectedValue"）或使用 <xref:System.Web.UI.DataBinder.Eval%2A> 语法标识复杂控件属性的表达式。  
  
 虽然 <xref:System.Web.UI.WebControls.ControlParameter.PropertyName%2A> 属性是可选的，但通常 <xref:System.Web.UI.WebControls.ControlParameter.ControlID%2A> <xref:System.Web.UI.WebControls.ControlParameter.PropertyName%2A> 会将和属性都设置为 <xref:System.Web.UI.WebControls.ControlParameter.Evaluate%2A> 正确绑定到控件。 如果设置 <xref:System.Web.UI.WebControls.ControlParameter.ControlID%2A> 属性，但不设置 <xref:System.Web.UI.WebControls.ControlParameter.PropertyName%2A> 属性，则 <xref:System.Web.UI.WebControls.ControlParameter.Evaluate%2A> 方法会尝试使用 <xref:System.Web.UI.ControlValuePropertyAttribute> 属性来标识默认 <xref:System.Web.UI.WebControls.ControlParameter.PropertyName%2A> 属性。  (控制作者负责指定此属性 ) 。如果此操作失败，则会 <xref:System.Web.UI.WebControls.ControlParameter.Evaluate%2A> 引发 <xref:System.ArgumentException> 异常。  
  
 下表标识了哪些 ASP.NET 控件修饰属性和 <xref:System.Web.UI.ControlValuePropertyAttribute> 属性。  
  
|控制|属性|  
|-------------|--------------|  
|<xref:System.Web.UI.WebControls.Calendar>|<xref:System.Web.UI.WebControls.Calendar.SelectedDate%2A>|  
|<xref:System.Web.UI.WebControls.CheckBox>|<xref:System.Web.UI.WebControls.CheckBox.Checked%2A>|  
|<xref:System.Web.UI.WebControls.DataList>|<xref:System.Web.UI.WebControls.DataList.SelectedValue%2A>|  
|<xref:System.Web.UI.WebControls.DetailsView>|<xref:System.Web.UI.WebControls.DetailsView.SelectedValue%2A>|  
|<xref:System.Web.UI.WebControls.FormView>|<xref:System.Web.UI.WebControls.FormView.SelectedValue%2A>|  
|<xref:System.Web.UI.WebControls.GridView>|<xref:System.Web.UI.WebControls.GridView.SelectedValue%2A>|  
|<xref:System.Web.UI.WebControls.Label>|<xref:System.Web.UI.WebControls.Label.Text%2A>|  
|<xref:System.Web.UI.WebControls.ListControl>|<xref:System.Web.UI.WebControls.ListControl.SelectedValue%2A>|  
|<xref:System.Web.UI.WebControls.Menu>|<xref:System.Web.UI.WebControls.Menu.SelectedValue%2A>|  
|<xref:System.Web.UI.WebControls.TextBox>|<xref:System.Web.UI.WebControls.TextBox.Text%2A>|  
|<xref:System.Web.UI.WebControls.TreeView>|<xref:System.Web.UI.WebControls.TreeView.SelectedValue%2A>|  
  
   
  
## Examples  
 下面的代码示例演示如何使用对象将 <xref:System.Web.UI.WebControls.ControlParameter> 控件中显示的数据绑定 <xref:System.Web.UI.WebControls.ListBox> 到 <xref:System.Web.UI.WebControls.DropDownList> 声明性方案中的控件的所选值。 <xref:System.Web.UI.WebControls.DropDownList>控件派生自 <xref:System.Web.UI.WebControls.ListControl> 控件。 <xref:System.Web.UI.WebControls.ControlParameter>对象将添加到 <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A> <xref:System.Web.UI.WebControls.SqlDataSource> 窗体上的控件的集合，并对应于属性中的 " @Title " 占位符文本 <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> 。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_2sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_2sql/CS/sql2cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_2sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_2sql/VB/sql2vb.aspx#1)]  
  
 下面的代码示例演示如何设置 <xref:System.Web.UI.WebControls.ControlParameter.ControlID%2A> 和 <xref:System.Web.UI.WebControls.ControlParameter.PropertyName%2A> 属性以标识 <xref:System.Web.UI.WebControls.ControlParameter> 对象绑定到的控件。 该示例 <xref:System.Web.UI.WebControls.ListBox> 使用值填充控件。 <xref:System.Web.UI.WebControls.ListControl.SelectedValue%2A>控件的属性 <xref:System.Web.UI.WebControls.ListBox> 用于筛选由控件检索 <xref:System.Web.UI.WebControls.SqlDataSource> 并由控件显示的数据 <xref:System.Web.UI.WebControls.GridView> 。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ControlParameter_2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ControlParameter_2/CS/webform1cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ControlParameter_2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ControlParameter_2/VB/webform1vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ControlParameter.ControlID" />
      </Docs>
    </Member>
  </Members>
</Type>
