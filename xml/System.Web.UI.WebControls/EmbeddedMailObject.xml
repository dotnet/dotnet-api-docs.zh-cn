<Type Name="EmbeddedMailObject" FullName="System.Web.UI.WebControls.EmbeddedMailObject">
  <Metadata><Meta Name="ms.openlocfilehash" Value="6a22879e822d732839e7ab6f8ed1e535ff5d1f4f" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89680452" /></Metadata><TypeSignature Language="C#" Value="public sealed class EmbeddedMailObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit EmbeddedMailObject extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.EmbeddedMailObject" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class EmbeddedMailObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class EmbeddedMailObject sealed" />
  <TypeSignature Language="F#" Value="type EmbeddedMailObject = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.ComponentModel.TypeConverter(typeof(System.Web.UI.WebControls.EmbeddedMailObject/EmbeddedMailObjectTypeConverter))]</AttributeName>
      <AttributeName Language="F#">[&lt;System.ComponentModel.TypeConverter(typeof(System.Web.UI.WebControls.EmbeddedMailObject/EmbeddedMailObjectTypeConverter))&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>表示要在使用 <see cref="T:System.Web.UI.WebControls.MailDefinition" /> 类构造的电子邮件中嵌入的项。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.EmbeddedMailObject>表示要嵌入邮件的项。 这些嵌入项可以是图像文件（如公司徽标）。 每个嵌入项由标识符和路径指定。  
  
 若要确保在电子邮件文件中正确显示嵌入的对象，必须满足以下条件：  
  
-   邮件采用 HTML 格式。  
  
-   该项是 ( .jpg、.gif、.bmp 等) 的图像文件。  
  
-   使用以下语法，在属性中指定的 HTML 格式的正文文件 <xref:System.Web.UI.WebControls.MailDefinition.BodyFileName%2A> 包含对映像文件的引用：  
  
    ```  
    <img src="cid:identifier" alt="Alternate Text" />.  
    ```  
  
 如果 <xref:System.Web.UI.WebControls.EmbeddedMailObject> 已将添加到邮件中，但未满足前面指定的所有要求，则很可能会在邮件中将其显示为附件。 如果某个项被邮件中的标识符引用，但不包含为嵌入项，则在查看邮件时，该标识符将显示为已损坏的附件。  
  
 <xref:System.Web.UI.WebControls.EmbeddedMailObjectsCollection>存储 <xref:System.Web.UI.WebControls.EmbeddedMailObject> 单个邮件的对象集合。 <xref:System.Web.UI.WebControls.EmbeddedMailObjectsCollection>由对象的属性用 <xref:System.Web.UI.WebControls.MailDefinition.EmbeddedObjects%2A> <xref:System.Web.UI.WebControls.MailDefinition> 来创建邮件。  
  
 允许嵌入对象的邮件可通过以声明方式设置其属性来在以下 Web 控件中进行配置 <xref:System.Web.UI.WebControls.MailDefinition> ：  
  
-   <xref:System.Web.UI.WebControls.CreateUserWizard>  
  
-   <xref:System.Web.UI.WebControls.ChangePassword>  
  
-   <xref:System.Web.UI.WebControls.PasswordRecovery>  
  
> [!NOTE]
>  和对象中的 <xref:System.Web.UI.WebControls.EmbeddedMailObject> 值 <xref:System.Web.UI.WebControls.EmbeddedMailObjectsCollection> 不会存储在视图状态中。 这可以防止恶意用户发现服务器的路径信息。  
  
   
  
## Examples  
 下面的代码示例演示了一个使用 Web 控件的 ASP.NET 页面 <xref:System.Web.UI.WebControls.ChangePassword> ，并包含名为的事件的事件处理程序 <xref:System.Web.UI.WebControls.ChangePassword.SendingMail> `SendingMail` 。 此代码示例假定已将 ASP.NET 网站配置为使用 ASP.NET 成员身份和窗体身份验证，并且已创建一个用户知道其名称和密码。 有关详细信息，请参阅 [如何：实现简单的窗体身份验证](https://docs.microsoft.com/previous-versions/aspnet/xdt4thhy(v=vs.100))。  
  
 如果密码更改成功， `SendingMail` 事件处理程序中的代码会尝试向用户发送一封电子邮件，以确认所做的更改。 为了使此代码示例正常运行，必须已在服务器上配置 SMTP。 有关如何配置 SMTP 服务器的信息，请参阅 [如何：在 IIS 6.0 中安装和配置 Smtp 虚拟服务器](https://docs.microsoft.com/previous-versions/aspnet/8b83ac7t(v=vs.100))。 出于本示例的目的，不需要配置 SMTP 服务器;该示例构造为测试发送电子邮件失败的情况。  
  
 如果邮件服务器配置不正确或发生其他错误，并且无法发送电子邮件，则 `SendMailError` 调用该函数。 向用户显示一条消息。 此外，将事件记录到 Windows 应用程序事件日志中，假定名为 MySamplesSite 的事件源已存在。 请参阅下面的代码示例，以创建指定的事件源。 有关创建事件源的详细信息，请参阅 [ASP.NET Web 窗体页中的服务器事件处理](https://docs.microsoft.com/previous-versions/aspnet/xax2hw3x(v=vs.100))。 <xref:System.Web.UI.WebControls.SendMailErrorEventArgs.Handled%2A>对象的属性 <xref:System.Web.UI.WebControls.SendMailErrorEventArgs> 设置为 `true` ，以指示已处理错误。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SendMailErrorEventHandler#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SendMailErrorEventHandler/CS/changepassword_cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SendMailErrorEventHandler#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SendMailErrorEventHandler/VB/changepassword_vb.aspx#1)]  
  
 如果需要以编程方式将名为 MySamplesSite 的事件源添加到应用程序日志，请使用以下代码示例。 要使第一个代码示例正常工作，必须存在此事件源。 下面的代码示例需要管理员权限。  
  
 [!code-csharp[System.Diagnostics.EventLog.CreateEventSource#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Diagnostics.EventLog.CreateEventSource/CS/createeventsource.cs#1)]
 [!code-vb[System.Diagnostics.EventLog.CreateEventSource#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Diagnostics.EventLog.CreateEventSource/VB/createeventsource.vb#1)]  
  
 下面的示例代码可用作前面的示例代码的 ChangePasswordMail.htm 文件。  
  
> [!IMPORTANT]
>  在电子邮件中发送用户帐户名或密码是潜在的安全威胁。 电子邮件通常以纯文本方式发送，可由特殊网络 "探查" 应用程序读取。  若要提高安全性，请使用 [保护登录控件](https://docs.microsoft.com/previous-versions/aspnet/ms178346(v=vs.100))中所述的缓解措施。  
  
```  
<html>  
<head><title></title></head>  
<body>  
<form>  
  
  <h1>Your password for the account named &quot;<%Username%>&quot; has changed.</h1>  
  
  <p>  
  If you did not initiate this change, please call 1-206-555-0100.  
  </p>  
  
  <p>  
  <a href="http://www.contoso.com/login.aspx">  
    <img src="cid:LoginGif" alt="Log In" />  
  </a>   
  </p>  
  
  <p>  
  Please read our attached Privacy Notice.  
  </p>  
  
</form>  
</body>  
</html>  
  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.Web.UI.WebControls.MailDefinition.EmbeddedObjects" />
    <altmember cref="T:System.Web.UI.WebControls.CreateUserWizard" />
    <altmember cref="P:System.Web.UI.WebControls.CreateUserWizard.MailDefinition" />
    <altmember cref="E:System.Web.UI.WebControls.CreateUserWizard.SendingMail" />
    <altmember cref="T:System.Web.UI.WebControls.ChangePassword" />
    <altmember cref="P:System.Web.UI.WebControls.ChangePassword.MailDefinition" />
    <altmember cref="E:System.Web.UI.WebControls.ChangePassword.SendingMail" />
    <altmember cref="T:System.Web.UI.WebControls.PasswordRecovery" />
    <altmember cref="P:System.Web.UI.WebControls.PasswordRecovery.MailDefinition" />
    <altmember cref="E:System.Web.UI.WebControls.PasswordRecovery.SendingMail" />
    <altmember cref="T:System.Net.Mail.MailMessage" />
    <related type="Article" href="https://msdn.microsoft.com/library/448f7802-0aa8-4304-abf7-82e138877dc8">网站管理工具应用程序选项卡</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>初始化 <see cref="T:System.Web.UI.WebControls.EmbeddedMailObject" /> 类的新实例。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EmbeddedMailObject ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.EmbeddedMailObject.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EmbeddedMailObject();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Web.UI.WebControls.EmbeddedMailObject" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 若要获取或设置嵌入项的标识符，请使用 <xref:System.Web.UI.WebControls.EmbeddedMailObject.Name%2A> 属性。 若要获取或设置嵌入项的路径，请使用 <xref:System.Web.UI.WebControls.EmbeddedMailObject.Path%2A> 属性。 这两个属性都必须设置为成功地将项嵌入到邮件中。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.MailDefinition.EmbeddedObjects" />
        <related type="Article" href="https://msdn.microsoft.com/library/448f7802-0aa8-4304-abf7-82e138877dc8">网站管理工具应用程序选项卡</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EmbeddedMailObject (string name, string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.EmbeddedMailObject.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, path As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EmbeddedMailObject(System::String ^ name, System::String ^ path);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.EmbeddedMailObject : string * string -&gt; System.Web.UI.WebControls.EmbeddedMailObject" Usage="new System.Web.UI.WebControls.EmbeddedMailObject (name, path)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">要嵌入邮件的项的标识符名称。 有关详细信息，请参阅 <see cref="P:System.Web.UI.WebControls.EmbeddedMailObject.Name" />。</param>
        <param name="path">要嵌入邮件的项的检索路径。 有关详细信息，请参阅 <see cref="P:System.Web.UI.WebControls.EmbeddedMailObject.Path" />。</param>
        <summary>初始化 <see cref="T:System.Web.UI.WebControls.EmbeddedMailObject" /> 类的新实例，使用指定的标识符名称和路径填充对象。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码示例演示了一个使用控件的 ASP.NET 页面的代码隐藏示例 <xref:System.Web.UI.WebControls.ChangePassword> ，并包含名为的事件的事件处理程序 <xref:System.Web.UI.WebControls.ChangePassword.SendingMail> `SendingMail` 。 此代码示例假定已将 ASP.NET 网站配置为使用 ASP.NET 成员身份和窗体身份验证，并且已创建一个用户知道其名称和密码。 有关详细信息，请参阅 [如何：实现简单的窗体身份验证](https://docs.microsoft.com/previous-versions/aspnet/xdt4thhy(v=vs.100))。  
  
 如果密码更改成功， `SendingMail` 事件处理程序中的代码会尝试向用户发送一封电子邮件，以确认所做的更改。 为了使此代码示例正常运行，必须已在服务器上配置 SMTP。 有关如何配置 SMTP 服务器的信息，请参阅 [如何：在 IIS 6.0 中安装和配置 Smtp 虚拟服务器](https://docs.microsoft.com/previous-versions/aspnet/8b83ac7t(v=vs.100))。 出于本示例的目的，不需要配置 SMTP 服务器;该示例构造为测试发送电子邮件失败的情况。  
  
 如果邮件服务器配置不正确或发生其他错误，并且无法发送电子邮件，则 `SendMailError` 调用该函数。 向用户显示一条消息。 此外，将事件记录到 Windows 应用程序事件日志中，假定名为 MySamplesSite 的事件源已存在。 请参阅下面的代码示例，以创建指定的事件源。 有关创建事件源的详细信息，请参阅 [ASP.NET Web 窗体页中的服务器事件处理](https://docs.microsoft.com/previous-versions/aspnet/xax2hw3x(v=vs.100))。 <xref:System.Web.UI.WebControls.SendMailErrorEventArgs.Handled%2A>对象的属性 <xref:System.Web.UI.WebControls.SendMailErrorEventArgs> 设置为 `true` ，以指示已处理错误。  
  
 下面的代码示例演示如何使用 .aspx 页。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ChangePassword#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ChangePassword/CS/changepassword_cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ChangePassword#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ChangePassword/VB/changepassword_vb.aspx#1)]  
  
 下面的代码示例演示如何使用代码隐藏文件。  
  
 [!code-csharp[System.Web.UI.WebControls.ChangePassword#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ChangePassword/CS/changepassword.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ChangePassword#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ChangePassword/VB/changepassword.vb#2)]  
  
 如果需要以编程方式将名为 MySamplesSite 的事件源添加到应用程序日志，请使用以下代码示例。 要使第一个代码示例正常工作，必须存在此事件源。 下面的代码示例需要管理员权限。  
  
 [!code-csharp[System.Diagnostics.EventLog.CreateEventSource#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Diagnostics.EventLog.CreateEventSource/CS/createeventsource.cs#1)]
 [!code-vb[System.Diagnostics.EventLog.CreateEventSource#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Diagnostics.EventLog.CreateEventSource/VB/createeventsource.vb#1)]  
  
 下面的示例代码可用作前面的示例代码的 ChangePasswordMail.htm 文件。  
  
> [!IMPORTANT]
>  在电子邮件中发送用户帐户名或密码是潜在的安全威胁。 电子邮件通常以纯文本方式发送，可由特殊网络 "探查" 应用程序读取。  若要提高安全性，请使用 [保护登录控件](https://docs.microsoft.com/previous-versions/aspnet/ms178346(v=vs.100))中所述的缓解措施。  
  
```  
<html>  
<head><title></title></head>  
<body>  
<form>  
  
  <h1>Your password for the account named &quot;<%Username%>&quot; has changed.</h1>  
  
  <p>  
  If you did not initiate this change, please call 1-206-555-0100.  
  </p>  
  
  <p>  
  <a href="http://www.contoso.com/login.aspx">  
    <img src="cid:LoginGif" alt="Log In" />  
  </a>   
  </p>  
  
  <p>  
  Please read our attached Privacy Notice.  
  </p>  
  
</form>  
</body>  
</html>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.MailDefinition.EmbeddedObjects" />
        <altmember cref="T:System.Web.Mail.SmtpMail" />
        <related type="Article" href="https://msdn.microsoft.com/library/448f7802-0aa8-4304-abf7-82e138877dc8">网站管理工具应用程序选项卡</related>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.EmbeddedMailObject.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Web.UI.WebControls.EmbeddedMailObject.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue("")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue("")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.NotifyParentProperty(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.NotifyParentProperty(true)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置作为邮件中嵌入项的标识符使用的名称，该邮件是使用 <see cref="T:System.Web.UI.WebControls.MailDefinition" /> 类构造的。</summary>
        <value>返回邮件中嵌入项的标识符。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.EmbeddedMailObject.Name%2A>属性指定要嵌入到用类以声明方式构造的邮件中的项的标识符 <xref:System.Web.UI.WebControls.MailDefinition> 。 标识符用于将属性中包含的项映射到在 <xref:System.Web.UI.WebControls.EmbeddedMailObject.Path%2A> 属性中指定的文件正文中的相应位置 <xref:System.Web.UI.WebControls.MailDefinition.BodyFileName%2A> ，并使用以下语法：  
  
```  
<img src="cid:identifier" alt="Alternate Text" />  
```  
  
 通常，该项是一个图像文件。 属性的默认值 <xref:System.Web.UI.WebControls.EmbeddedMailObject.Name%2A> 为空字符串。  
  
 这是一种最佳做法，即辅助功能设计，可在电子邮件中为任何嵌入图像设置 "替换文本" 属性。  
  
   
  
## Examples  
 下面的代码示例演示了一个使用 Web 控件的 ASP.NET 页面 <xref:System.Web.UI.WebControls.ChangePassword> ，并包含名为的事件的事件处理程序 <xref:System.Web.UI.WebControls.ChangePassword.SendingMail> `SendingMail` 。 此代码示例假定已将 ASP.NET 网站配置为使用 ASP.NET 成员身份和窗体身份验证，并且已创建一个用户知道其名称和密码。 有关详细信息，请参阅 [如何：实现简单的窗体身份验证](https://docs.microsoft.com/previous-versions/aspnet/xdt4thhy(v=vs.100))。  
  
 如果密码更改成功， `SendingMail` 事件处理程序中的代码会尝试向用户发送一封电子邮件，以确认所做的更改。 为了使此代码示例正常运行，必须已在服务器上配置 SMTP。 有关如何配置 SMTP 服务器的信息，请参阅 [如何：在 IIS 6.0 中安装和配置 Smtp 虚拟服务器](https://docs.microsoft.com/previous-versions/aspnet/8b83ac7t(v=vs.100))。 出于本示例的目的，不需要配置 SMTP 服务器;该示例构造为测试发送电子邮件失败的情况。  
  
 如果邮件服务器配置不正确或发生其他错误，并且无法发送电子邮件，则 `SendMailError` 调用该函数。 向用户显示一条消息。 此外，将事件记录到 Windows 应用程序事件日志中，假定名为 MySamplesSite 的事件源已存在。 请参阅下面的代码示例，以创建指定的事件源。 有关创建事件源的详细信息，请参阅 [ASP.NET Web 窗体页中的服务器事件处理](https://docs.microsoft.com/previous-versions/aspnet/xax2hw3x(v=vs.100))。 <xref:System.Web.UI.WebControls.SendMailErrorEventArgs.Handled%2A>对象的属性 <xref:System.Web.UI.WebControls.SendMailErrorEventArgs> 设置为 `true` ，以指示已处理错误。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SendMailErrorEventHandler#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SendMailErrorEventHandler/CS/changepassword_cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SendMailErrorEventHandler#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SendMailErrorEventHandler/VB/changepassword_vb.aspx#1)]  
  
 如果需要以编程方式将名为 MySamplesSite 的事件源添加到应用程序日志，请使用以下代码示例。 要使第一个代码示例正常工作，必须存在此事件源。 下面的代码示例需要管理员权限。  
  
 [!code-csharp[System.Diagnostics.EventLog.CreateEventSource#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Diagnostics.EventLog.CreateEventSource/CS/createeventsource.cs#1)]
 [!code-vb[System.Diagnostics.EventLog.CreateEventSource#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Diagnostics.EventLog.CreateEventSource/VB/createeventsource.vb#1)]  
  
 下面的示例代码可用作前面的示例代码的 ChangePasswordMail.htm 文件。  
  
> [!IMPORTANT]
>  在电子邮件中发送用户帐户名或密码是潜在的安全威胁。 电子邮件以纯文本方式发送，可由特殊网络 "探查" 应用程序读取。  若要提高安全性，请使用 [保护登录控件](https://docs.microsoft.com/previous-versions/aspnet/ms178346(v=vs.100))中所述的缓解措施。  
  
```  
<html>  
<head><title></title></head>  
<body>  
<form>  
  
  <h1>Your password for the account named &quot;<%Username%>&quot; has changed.</h1>  
  
  <p>  
  If you did not initiate this change, please call 1-206-555-0100.  
  </p>  
  
  <p>  
  <a href="http://www.contoso.com/login.aspx">  
    <img src="cid:LoginGif" alt="Log In" />  
  </a>   
  </p>  
  
  <p>  
  Please read our attached Privacy Notice.  
  </p>  
  
</form>  
</body>  
</html>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.MailDefinition.EmbeddedObjects" />
        <related type="Article" href="https://msdn.microsoft.com/library/448f7802-0aa8-4304-abf7-82e138877dc8">网站管理工具应用程序选项卡</related>
      </Docs>
    </Member>
    <Member MemberName="Path">
      <MemberSignature Language="C#" Value="public string Path { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Path" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.EmbeddedMailObject.Path" />
      <MemberSignature Language="VB.NET" Value="Public Property Path As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Path { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Path : string with get, set" Usage="System.Web.UI.WebControls.EmbeddedMailObject.Path" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue("")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue("")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName Language="C#">[System.ComponentModel.Editor("System.Web.UI.Design.MailFileEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Editor("System.Web.UI.Design.MailFileEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.NotifyParentProperty(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.NotifyParentProperty(true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.UrlProperty]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.UrlProperty&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.Editor("System.Web.UI.Design.MailFileEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Editor("System.Web.UI.Design.MailFileEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置用于检索邮件中嵌入项的路径，该邮件是使用 <see cref="T:System.Web.UI.WebControls.MailDefinition" /> 类构造的。</summary>
        <value>返回要嵌入邮件的项的路径。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.EmbeddedMailObject.Path%2A>属性指定要在邮件中嵌入的项的路径，该邮件以声明方式用对象进行构造 <xref:System.Web.UI.WebControls.MailDefinition> 。 中的文件路径 <xref:System.Web.UI.WebControls.EmbeddedMailObject.Path%2A> 必须是 C:\MyServer\Banner.gif 的路径。 通常，嵌入项是一个图像文件。 如果图像文件被其在邮件中的标识符引用，但未包含在邮件中，则在查看电子邮件时，该图像将显示为已损坏的附件。  
  
 这是一种最佳做法，即辅助功能设计，可在电子邮件中为任何嵌入图像设置 "替换文本" 属性。  
  
   
  
## Examples  
 下面的代码示例演示了一个使用 Web 控件的 ASP.NET 页面 <xref:System.Web.UI.WebControls.ChangePassword> ，并包含名为的事件的事件处理程序 <xref:System.Web.UI.WebControls.ChangePassword.SendingMail> `SendingMail` 。 此代码示例假定已将 ASP.NET 网站配置为使用 ASP.NET 成员身份和窗体身份验证，并且已创建一个用户知道其名称和密码。 有关详细信息，请参阅 [如何：实现简单的窗体身份验证](https://docs.microsoft.com/previous-versions/aspnet/xdt4thhy(v=vs.100))。  
  
 如果密码更改成功， `SendingMail` 事件处理程序中的代码会尝试向用户发送一封电子邮件，以确认所做的更改。 为了使此代码示例正常运行，必须已在服务器上配置 SMTP。 有关如何配置 SMTP 服务器的信息，请参阅 [如何：在 IIS 6.0 中安装和配置 Smtp 虚拟服务器](https://docs.microsoft.com/previous-versions/aspnet/8b83ac7t(v=vs.100))。 出于本示例的目的，不需要配置 SMTP 服务器;该示例构造为测试发送电子邮件失败的情况。  
  
 如果邮件服务器配置不正确或发生其他错误，并且无法发送电子邮件，则 `SendMailError` 调用该函数。 向用户显示一条消息。 此外，将事件记录到 Windows 应用程序事件日志中，假定名为 MySamplesSite 的事件源已存在。 请参阅下面的代码示例，以创建指定的事件源。 有关创建事件源的详细信息，请参阅 [ASP.NET Web 窗体页中的服务器事件处理](https://docs.microsoft.com/previous-versions/aspnet/xax2hw3x(v=vs.100))。 <xref:System.Web.UI.WebControls.SendMailErrorEventArgs.Handled%2A>对象的属性 <xref:System.Web.UI.WebControls.SendMailErrorEventArgs> 设置为 `true` ，以指示已处理错误。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SendMailErrorEventHandler#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SendMailErrorEventHandler/CS/changepassword_cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SendMailErrorEventHandler#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SendMailErrorEventHandler/VB/changepassword_vb.aspx#1)]  
  
 如果需要以编程方式将名为 MySamplesSite 的事件源添加到应用程序日志，请使用以下代码示例。 要使第一个代码示例正常工作，必须存在此事件源。 下面的代码示例需要管理员权限。  
  
 [!code-csharp[System.Diagnostics.EventLog.CreateEventSource#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Diagnostics.EventLog.CreateEventSource/CS/createeventsource.cs#1)]
 [!code-vb[System.Diagnostics.EventLog.CreateEventSource#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Diagnostics.EventLog.CreateEventSource/VB/createeventsource.vb#1)]  
  
 下面的示例代码可用作前面的示例代码的 ChangePasswordMail.htm 文件。  
  
> [!IMPORTANT]
>  在电子邮件中发送用户帐户名或密码是潜在的安全威胁。 电子邮件通常以纯文本方式发送，可由特殊网络 "探查" 应用程序读取。  若要提高安全性，请使用 [保护登录控件](https://docs.microsoft.com/previous-versions/aspnet/ms178346(v=vs.100))中所述的缓解措施。  
  
```  
<html>  
<head><title></title></head>  
<body>  
<form>  
  
  <h1>Your password for the account named &quot;<%Username%>&quot; has changed.</h1>  
  
  <p>  
  If you did not initiate this change, please call 1-206-555-0100.  
  </p>  
  
  <p>  
  <a href="http://www.contoso.com/login.aspx">  
    <img src="cid:LoginGif" alt="Log In" />  
  </a>   
  </p>  
  
  <p>  
  Please read our attached Privacy Notice.  
  </p>  
  
</form>  
</body>  
</html>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.MailDefinition.EmbeddedObjects" />
        <related type="Article" href="https://msdn.microsoft.com/library/448f7802-0aa8-4304-abf7-82e138877dc8">网站管理工具应用程序选项卡</related>
      </Docs>
    </Member>
  </Members>
</Type>
