<Type Name="ObjectDataSourceMethodEventArgs" FullName="System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs">
  <Metadata><Meta Name="ms.openlocfilehash" Value="2481be630f10330c50a3c42304f4845406f11fb2" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89947925" /></Metadata><TypeSignature Language="C#" Value="public class ObjectDataSourceMethodEventArgs : System.ComponentModel.CancelEventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ObjectDataSourceMethodEventArgs extends System.ComponentModel.CancelEventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class ObjectDataSourceMethodEventArgs&#xA;Inherits CancelEventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class ObjectDataSourceMethodEventArgs : System::ComponentModel::CancelEventArgs" />
  <TypeSignature Language="F#" Value="type ObjectDataSourceMethodEventArgs = class&#xA;    inherit CancelEventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.CancelEventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>为 <see cref="E:System.Web.UI.WebControls.ObjectDataSource.Inserting" /> 控件的 <see cref="E:System.Web.UI.WebControls.ObjectDataSource.Updating" />、<see cref="E:System.Web.UI.WebControls.ObjectDataSource.Deleting" /> 和 <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> 事件提供数据。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs>类在 <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnSelecting%2A> 、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnUpdating%2A> 、和方法中使用， <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnInserting%2A> <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnDeleting%2A> 以提供对传递给控件的、、 <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> <xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A> <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> 和 <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> 方法 <xref:System.Web.UI.WebControls.ObjectDataSource> 的输入参数的访问。 使用属性访问这些参数 <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters%2A> 。 通过添加委托来处理 <xref:System.Web.UI.WebControls.ObjectDataSource.Selecting> 、 <xref:System.Web.UI.WebControls.ObjectDataSource.Updating> 、 <xref:System.Web.UI.WebControls.ObjectDataSource.Inserting> 或 <xref:System.Web.UI.WebControls.ObjectDataSource.Deleting> 事件，可以检查和操作参数的值，并执行所需的任何其他预处理。 对此字典中的参数所做的任何更改都将影响为该操作调用的方法重载。 如果 <xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A> 设置了控件的属性 <xref:System.Web.UI.WebControls.ObjectDataSource> ，则只能修改此字典中项的数据对象属性，而不能添加或移除参数。 有关详细信息，请参阅 <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A>。  
  
 <xref:System.Web.UI.WebControls.ObjectDataSource>控件公开了许多事件，您可以处理这些事件，以便在其生命周期中的不同时间使用基础业务对象。 下表列出了事件和关联的 <xref:System.EventArgs> 类以及事件处理程序委托。  
  
|事件|`EventArgs` 类|EventHandler 委托|  
|-----------|-----------------------|---------------------------|  
|<xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating>.<br /><br /> 在创建业务对象的实例之前立即发生。|<xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs>|<xref:System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler>|  
|<xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated>.<br /><br /> 在创建业务对象的实例之后立即发生。|<xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs>|<xref:System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler>|  
|<xref:System.Web.UI.WebControls.ObjectDataSource.Selecting>.<br /><br /> 在检索数据之前发生。|<xref:System.Web.UI.WebControls.ObjectDataSourceSelectingEventArgs>|<xref:System.Web.UI.WebControls.ObjectDataSourceSelectingEventHandler>|  
|<xref:System.Web.UI.WebControls.ObjectDataSource.Inserting>、 <xref:System.Web.UI.WebControls.ObjectDataSource.Updating>和 <xref:System.Web.UI.WebControls.ObjectDataSource.Deleting>。<br /><br /> 在执行插入、更新或删除操作之前发生。|<xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs>|<xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler>|  
|<xref:System.Web.UI.WebControls.ObjectDataSource.Selected>.<br /><br /> 在检索数据后发生。|<xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>|<xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler>|  
|<xref:System.Web.UI.WebControls.ObjectDataSource.Inserted>、 <xref:System.Web.UI.WebControls.ObjectDataSource.Updated>和 <xref:System.Web.UI.WebControls.ObjectDataSource.Deleted>。<br /><br /> 完成插入、更新或删除操作后发生。|<xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>|<xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler>|  
|<xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing>.<br /><br /> 在销毁业务对象之前发生。|<xref:System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs>|<xref:System.Web.UI.WebControls.ObjectDataSourceDisposingEventHandler>|  
  
   
  
## Examples  
 本部分包含两个代码示例。 第一个代码示例演示如何将 <xref:System.Web.UI.WebControls.ObjectDataSource> 控件与业务对象和控件结合使用 <xref:System.Web.UI.WebControls.DetailsView> 来插入数据。 第二个代码示例提供了第一个代码示例使用的中间层业务对象示例。  
  
 下面的代码示例演示如何将 <xref:System.Web.UI.WebControls.ObjectDataSource> 控件与业务对象和控件结合使用 <xref:System.Web.UI.WebControls.DetailsView> 来插入数据。 <xref:System.Web.UI.WebControls.DetailsView>最初显示一个新 `NorthwindEmployee` 记录以及自动生成的 "**插入**" 按钮。 将数据输入到控件的字段中后 <xref:System.Web.UI.WebControls.DetailsView> ，单击 " **插入** " 按钮，该 <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> 属性将确定执行该操作的方法 <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> 。  
  
 在此示例中， `UpdateEmployeeInfo` 方法用于执行插入; 但是，它需要一个 `NorthwindEmployee` 参数来插入数据。 出于此原因，控件自动传递的字符串集合 <xref:System.Web.UI.WebControls.DetailsView> 是不够的。 `NorthwindEmployeeInserting`委托是 <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler> 处理 <xref:System.Web.UI.WebControls.ObjectDataSource.Inserting> 事件并使你能够在操作继续之前操作输入参数的对象 <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> 。 由于 `UpdateEmployeeInfo` 方法需要 `NorthwindEmployee` 对象作为参数，因此使用字符串集合创建一个对象，并将其添加到 <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters%2A> 集合中。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_4#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_4/CS/objds4cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_4#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_4/VB/objds4vb.aspx#1)]  
  
 下面的代码示例提供了前面的代码示例使用的中间层业务对象示例。 下面的列表描述了代码示例中定义的两个主要类：  
  
-   `EmployeeLogic`类，该类是封装业务逻辑的无状态类。  
  
-   `NorthwindEmployee`类，该类是一个模型类，其中只包含从数据层加载和保存数据所需的基本功能。  
  
 此外，还提供了一个 `NorthwindDataException` 方便的类。  
  
 这组示例类使用 Northwind 商贸数据库，这是一个可用于 Microsoft SQL Server 和 Microsoft Access 的示例数据库。 若要获取完整的工作示例，请使用这些类，方法是将它们放在应用程序根目录下的 App_Code 目录中，或者通过编译它们并将生成的 DLL 放入 Bin 目录中。 `UpdateEmployeeInfo`方法未完全实现，因此当您试验此示例时，不会将数据插入 Northwind 商贸数据库中。  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_4#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_4/CS/northwindemployee4.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_4#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_4/VB/northwindemployee4.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler" />
    <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.Inserting" />
    <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.Updating" />
    <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.Deleting" />
    <altmember cref="T:System.Web.UI.WebControls.ObjectDataSource" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ObjectDataSourceMethodEventArgs (System.Collections.Specialized.IOrderedDictionary inputParameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Specialized.IOrderedDictionary inputParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.#ctor(System.Collections.Specialized.IOrderedDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (inputParameters As IOrderedDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ObjectDataSourceMethodEventArgs(System::Collections::Specialized::IOrderedDictionary ^ inputParameters);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs : System.Collections.Specialized.IOrderedDictionary -&gt; System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs" Usage="new System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs inputParameters" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="inputParameters" Type="System.Collections.Specialized.IOrderedDictionary" />
      </Parameters>
      <Docs>
        <param name="inputParameters">表示业务对象方法参数名称及其相关值的 <see cref="T:System.Collections.Specialized.IOrderedDictionary" /> 对象的 <see cref="T:System.Web.UI.WebControls.Parameter" />。</param>
        <summary>使用指定的输入参数集合初始化 <see cref="T:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs" /> 类的新实例。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InputParameters">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.IOrderedDictionary InputParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.IOrderedDictionary InputParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InputParameters As IOrderedDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Specialized::IOrderedDictionary ^ InputParameters { System::Collections::Specialized::IOrderedDictionary ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InputParameters : System.Collections.Specialized.IOrderedDictionary" Usage="System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.IOrderedDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取包含业务对象方法参数及其值的集合。</summary>
        <value>表示业务对象方法参数及其相应值的名称/值对的 <see cref="T:System.Collections.IDictionary" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 可以通过引用或值将参数传递给业务对象方法。 如果使用 <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler> 对象来处理 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Selecting> 、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Updating> 、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Inserting> 或 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Deleting> 事件，则可以使用属性来访问和操作这些参数 <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters%2A> 。 对此字典中的参数所做的任何更改都将影响为该操作调用的方法重载。  如果 <xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A> 设置了控件的属性 <xref:System.Web.UI.WebControls.ObjectDataSource> ，则只能修改此字典中项的数据对象属性; 您不能添加或移除参数。 有关详细信息，请参阅 <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A>。  
  
 通过引用传递的参数在对象的属性中返回 <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.OutputParameters%2A> <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs> 。  
  
   
  
## Examples  
 下面的代码示例演示如何使用 <xref:System.Web.UI.WebControls.DropDownList> 控件、 <xref:System.Web.UI.WebControls.TextBox> 控件和多个 <xref:System.Web.UI.WebControls.ObjectDataSource> 控件来更新数据。 <xref:System.Web.UI.WebControls.DropDownList>显示 Northwind 雇员的姓名，而 <xref:System.Web.UI.WebControls.TextBox> 控件用于输入和更新地址信息。 由于 <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A> 属性包含一个对象，该 <xref:System.Web.UI.WebControls.ControlParameter> 对象绑定到控件的选定值 <xref:System.Web.UI.WebControls.DropDownList> ，因此 <xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A> 只有在选择了员工之后才会启用触发方法的按钮。  
  
 在此示例中，在 `NorthwindEmployeeUpdating` 方法之前调用方法， <xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A> 以将正确的参数和值添加到 <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters%2A> 集合。 您可以动态添加参数和值，如所示或以声明方式。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_13#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_13/CS/objds13cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_13#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_13/VB/objds13vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
