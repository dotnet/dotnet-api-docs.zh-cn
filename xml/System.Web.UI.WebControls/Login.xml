<Type Name="Login" FullName="System.Web.UI.WebControls.Login">
  <Metadata><Meta Name="ms.openlocfilehash" Value="27231f58a3e285ae523f446c9fb38c9a0208162c" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89908259" /></Metadata><TypeSignature Language="C#" Value="public class Login : System.Web.UI.WebControls.CompositeControl" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Login extends System.Web.UI.WebControls.CompositeControl" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.Login" />
  <TypeSignature Language="VB.NET" Value="Public Class Login&#xA;Inherits CompositeControl" />
  <TypeSignature Language="C++ CLI" Value="public ref class Login : System::Web::UI::WebControls::CompositeControl" />
  <TypeSignature Language="F#" Value="type Login = class&#xA;    inherit CompositeControl" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.CompositeControl</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.ComponentModel.Bindable(false)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.ComponentModel.Bindable(false)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.ComponentModel.DefaultEvent("Authenticate")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultEvent("Authenticate")&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName Language="C#">[System.ComponentModel.Designer("System.Web.UI.Design.WebControls.LoginDesigner, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.ComponentModel.Designer("System.Web.UI.Design.WebControls.LoginDesigner, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName Language="C#">[System.ComponentModel.Designer("System.Web.UI.Design.WebControls.LoginDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.ComponentModel.Designer("System.Web.UI.Design.WebControls.LoginDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>提供用户界面 (UI) 元素以便登录网站。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[

## Remarks
 本主题内容：

-   [介绍](#introduction)

-   [样式和模板](#styles_and_templates)

-   [验证分组](#validation_groupings)

-   [辅助功能](#accessibility)

-   [应用 CSS 样式](#applying_styles)

-   [声明性语法](#declarative_syntax)

<a name="introduction"></a>
## <a name="introduction"></a>介绍
 <xref:System.Web.UI.WebControls.Login>控件是一个复合控件，可提供对网站上的用户进行身份验证所需的所有常见 UI 元素。 所有登录方案都需要以下三个元素：

-   用于标识用户的唯一用户名。

-   用于验证用户标识的密码。

-   用于将登录信息发送到服务器的登录按钮。

 该 <xref:System.Web.UI.WebControls.Login> 控件还提供了以下支持其他函数的可选 UI 元素：

-   密码提示的链接。

-   "记住我" 复选框，用于在会话之间保留登录信息。

-   在登录时遇到问题的用户的帮助链接。

-   将用户重定向到注册页的 "注册新用户" 链接。

-   登录窗体上显示的说明文本。

-   当用户单击 "登录" 按钮时显示的自定义错误文本，不填充 "用户名" 或 "密码" 字段。

-   登录失败时显示的自定义错误文本。

-   登录成功后发生的自定义操作。

-   如果用户已登录到站点，则为隐藏登录控件的一种方法。

 有关显示必需的控件和可选的控件的表，请参见 <xref:System.Web.UI.WebControls.Login.LayoutTemplate%2A> 属性。

> [!NOTE]
>  如果你不熟悉 ASP.NET 中提供的登录控件集，请参阅 [ASP.NET Login Controls 概述](https://docs.microsoft.com/previous-versions/aspnet/ms178329(v=vs.100)) ，然后继续。 有关与登录控件和成员资格相关的其他主题的列表，请参阅 [使用成员身份管理用户](https://docs.microsoft.com/previous-versions/aspnet/tw292whz(v=vs.100))。

> [!IMPORTANT]
>  接受用户输入是潜在的安全威胁。 恶意用户可以发送旨在公开漏洞或运行尝试生成的密码的程序的数据。 若要在使用用户输入时提高安全性，应使用控件的验证功能并保护为控件配置的任何数据访问接口。 有关详细信息，请参阅 [保护登录控件](https://docs.microsoft.com/previous-versions/aspnet/ms178346(v=vs.100))、 [Web 应用程序的基本安全实践](https://docs.microsoft.com/previous-versions/aspnet/zdh19h94(v=vs.100))以及 [保护成员身份](https://docs.microsoft.com/previous-versions/aspnet/ms178398(v=vs.100))。

 <xref:System.Web.UI.WebControls.Login>控件使用成员资格提供程序来获取用户凭据。 除非另行指定，否则 <xref:System.Web.UI.WebControls.Login> 控件将使用 Web.config 文件中定义的默认成员资格提供程序。 若要指定其他提供程序，请将 <xref:System.Web.UI.WebControls.Login.MembershipProvider%2A> 属性设置为应用程序的 Web.config 文件中定义的成员资格提供程序名称之一。 有关详细信息，请参阅 [成员资格提供程序](https://docs.microsoft.com/previous-versions/aspnet/sx3h274z(v=vs.100))。

 如果要使用自定义身份验证服务，可以使用 <xref:System.Web.UI.WebControls.Login.OnAuthenticate%2A> 方法来调用服务。

<a name="styles_and_templates"></a>
## <a name="styles-and-templates"></a>样式和模板
 控件的外观可 <xref:System.Web.UI.WebControls.Login> 通过模板和样式设置完全自定义。 所有 UI 文本消息还可通过类的属性进行自定义 <xref:System.Web.UI.WebControls.Login> 。 默认的接口文本会根据服务器上的区域设置自动进行本地化。

 如果 <xref:System.Web.UI.WebControls.Login> 控件是用模板自定义的，则将 <xref:System.Web.UI.WebControls.WebControl.AccessKey%2A> 忽略属性和 <xref:System.Web.UI.WebControls.WebControl.TabIndex%2A> 属性。 在这种情况下，请 <xref:System.Web.UI.WebControls.WebControl.AccessKey%2A> 直接设置 <xref:System.Web.UI.WebControls.WebControl.TabIndex%2A> 每个模板子控件的属性和属性。

 <xref:System.Web.UI.WebControls.Login> 文本框（如和）表示的控件属性 <xref:System.Web.UI.WebControls.Login.UserName%2A> <xref:System.Web.UI.WebControls.Login.Password%2A> 可在页面生命周期的所有阶段中访问。 控件将通过文本框触发的事件选取最终用户所做的任何更改 <xref:System.Web.UI.WebControls.TextBox.TextChanged> 。

> [!NOTE]
>  如果在 <xref:System.Web.UI.WebControls.Login> 对象中嵌入控件，则在对 <xref:System.Web.UI.WebControls.WizardStep> <xref:System.Web.UI.WebControls.Wizard.ActiveStepIndex%2A> `Page_Load` 用户进行身份验证时，显式设置事件处理程序中的属性。 <xref:System.Web.UI.WebControls.Wizard>在此方案中，控件不会自动前进到下一个 <xref:System.Web.UI.WebControls.WizardStep> 对象。

 下表列出了 <xref:System.Web.UI.WebControls.Login> 控件样式属性，并说明了每个样式属性影响的 UI 元素。 有关每种样式应用于的属性的列表，请参阅各个样式属性的文档。

|Style 属性|受影响的 UI 元素|
|--------------------|-------------------------|
|<xref:System.Web.UI.WebControls.Login.BorderPadding%2A>|控件内容和控件的边框之间的空间。|
|<xref:System.Web.UI.WebControls.Login.CheckBoxStyle%2A>|"记住我" 复选框。|
|<xref:System.Web.UI.WebControls.Login.FailureTextStyle%2A>|登录失败文本。|
|<xref:System.Web.UI.WebControls.Login.InstructionTextStyle%2A>|页面上告知用户如何使用控件的说明文本。|
|<xref:System.Web.UI.WebControls.Login.LabelStyle%2A>|所有输入字段（如文本框）的标签。|
|<xref:System.Web.UI.WebControls.Login.TextBoxStyle%2A>|文本输入字段。|
|<xref:System.Web.UI.WebControls.Login.TitleTextStyle%2A>|标题文本。|
|<xref:System.Web.UI.WebControls.Login.ValidatorTextStyle%2A>|由于验证错误而导致登录尝试失败时向用户显示的文本。|
|<xref:System.Web.UI.WebControls.Login.HyperLinkStyle%2A>|指向其他页面的链接。|
|<xref:System.Web.UI.WebControls.Login.LoginButtonStyle%2A>|"登录" 按钮。|

<a name="validation_groupings"></a>
## <a name="validation-groupings"></a>验证分组
 <xref:System.Web.UI.WebControls.Login.UserName%2A>和 <xref:System.Web.UI.WebControls.Login.Password%2A> 属性具有 <xref:System.Web.UI.WebControls.RequiredFieldValidator> 与之关联的控件，以防止用户提交页面，而不提供所需的信息。

 <xref:System.Web.UI.WebControls.Login>控件使用验证组，以便可以单独验证同一页上的其他字段 <xref:System.Web.UI.WebControls.Login> 。 默认情况下， <xref:System.Web.UI.Control.ID%2A> 控件的属性用作 <xref:System.Web.UI.WebControls.Login> 验证组的名称。 例如，ID 为 <xref:System.Web.UI.WebControls.Login> "Login1" 的控件将使用验证组名称 "Login1"。 如果要设置该控件所属的验证组 <xref:System.Web.UI.WebControls.Login> ，则必须为该控件设置模板并更改验证组名称。

<a name="applying_styles"></a>
## <a name="applying-css-styles"></a>应用 CSS 样式
 <xref:System.Web.UI.WebControls.Login>控件使您可以在标记中指定 CSS 样式规则。 如果使用模板来自定义控件的外观 <xref:System.Web.UI.WebControls.Login> ，则可以在模板的标记中指定 CSS 样式。 在这种情况下，不需要额外的外部表。 您可以通过将属性设置为来阻止呈现该表 <xref:System.Web.UI.WebControls.Login.RenderOuterTable%2A> `false` 。

<a name="accessibility"></a>
## <a name="accessibility"></a>可访问性
 有关如何配置此控件以生成符合辅助功能标准的标记的信息，请参阅 [Visual Studio 中的辅助功能和 ASP.NET](https://docs.microsoft.com/previous-versions/ms228004(v=vs.140)) 和 [ASP.NET 控件和辅助功能](https://docs.microsoft.com/previous-versions/ms227996(v=vs.140))。

<a name="declarative_syntax"></a>
## <a name="declarative-syntax"></a>声明性语法

```
<asp:Login
    AccessKey="string"
    BackColor="color name|#dddddd"
    BorderColor="color name|#dddddd"
    BorderPadding="integer"
    BorderStyle="NotSet|None|Dotted|Dashed|Solid|Double|Groove|Ridge|
        Inset|Outset"
    BorderWidth="size"
    CreateUserIconUrl="uri"
    CreateUserText="string"
    CreateUserUrl="uri"
    CssClass="string"
    DestinationPageUrl="uri"
    DisplayRememberMe="True|False"
    Enabled="True|False"
    EnableTheming="True|False"
    EnableViewState="True|False"
    FailureAction="Refresh|RedirectToLoginPage"
    FailureText="string"
    Font-Bold="True|False"
    Font-Italic="True|False"
    Font-Names="string"
    Font-Overline="True|False"
    Font-Size="string|Smaller|Larger|XX-Small|X-Small|Small|Medium|
               Large|X-Large|XX-Large"
    Font-Strikeout="True|False"
    Font-Underline="True|False"
    ForeColor="color name|#dddddd"
    Height="size"
    HelpPageIconUrl="uri"
    HelpPageText="string"
    HelpPageUrl="uri"
    ID="string"
    InstructionText="string"
    LoginButtonImageUrl="uri"
    LoginButtonText="string"
    LoginButtonType="Button|Image|Link"
    MembershipProvider="string"
    OnAuthenticate="Authenticate event handler"
    OnDataBinding="DataBinding event handler"
    OnDisposed="Disposed event handler"
    OnInit="Init event handler"
    OnLoad="Load event handler"
    OnLoggedIn="LoggedIn event handler"
    OnLoggingIn="LoggingIn event handler"
    OnLoginError="LoginError event handler"
    OnPreRender="PreRender event handler"
    OnUnload="Unload event handler"
    Orientation="Horizontal|Vertical"
    PasswordLabelText="string"
    PasswordRecoveryIconUrl="uri"
    PasswordRecoveryText="string"
    PasswordRecoveryUrl="uri"
    PasswordRequiredErrorMessage="string"
    RememberMeSet="True|False"
    RememberMeText="string"
    runat="server"
    SkinID="string"
    Style="string"
    TabIndex="integer"
    TextLayout="TextOnLeft|TextOnTop"
    TitleText="string"
    ToolTip="string"
    UserName="string"
    UserNameLabelText="string"
    UserNameRequiredErrorMessage="string"
    Visible="True|False"
    VisibleWhenLoggedIn="True|False"
    Width="size"
>
        <CheckBoxStyle />
        <FailureTextStyle />
        <HyperLinkStyle />
        <InstructionTextStyle />
        <LabelStyle />
        <LayoutTemplate>
            <!-- child controls -->
        </LayoutTemplate>
        <LoginButtonStyle />
        <TextBoxStyle />
        <TitleTextStyle />
        <ValidatorTextStyle />
</asp:Login>
```



## Examples
 下面的代码示例使用 <xref:System.Web.UI.WebControls.Login> 控件提供用于登录到网站的 UI。

 [!code-aspx-csharp[LoginClass#1](~/samples/snippets/csharp/VS_Snippets_WebNet/LoginClass/CS/loginclasscs.aspx#1)]
 [!code-aspx-vb[LoginClass#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/LoginClass/VB/loginclassvb.aspx#1)]

 下面的代码示例演示如何扩展 <xref:System.Web.UI.WebControls.Login> 控件。 `CustomLogin`控件包含一个 <xref:System.Web.UI.WebControls.DropDownList> 控件，该控件使用户可以选择要使用其进行身份验证的成员资格提供程序。  (在 ) Web.config 中配置这些提供程序 <xref:System.Web.UI.WebControls.Login.OnLoggingIn%2A> ，则 <xref:System.Web.UI.WebControls.Login.MembershipProvider%2A> 属性设置为控件的选定值 <xref:System.Web.UI.WebControls.DropDownList> 。

> [!IMPORTANT]
>  此示例包含一个文本框，该文本框接受用户输入，这是一个潜在的安全威胁。 默认情况下，ASP.NET 网页验证用户输入是否不包含脚本或 HTML 元素。 有关详细信息，请参阅[脚本侵入概述](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100))。

 [!code-csharp[Samples.AspNet.Controls.CustomLogin#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Samples.AspNet.Controls.CustomLogin/CS/FarmasLogin.cs#1)]
 [!code-vb[Samples.AspNet.Controls.CustomLogin#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Samples.AspNet.Controls.CustomLogin/VB/FarmasLogin.vb#1)]

 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Security.Membership" />
    <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/yh26yfzy(v=vs.100)">成员资格简介</related>
    <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms178329(v=vs.100)">ASP.NET 登录控件概述</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Login ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Login.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Login();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>创建 <see cref="T:System.Web.UI.WebControls.Login" /> 控件的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.Login>构造函数创建控件的一个新实例 <xref:System.Web.UI.WebControls.Login> ，该实例可通过编程方式插入到网页中。

 下表显示的新实例的初始属性值 <xref:System.Web.UI.WebControls.Login> 。

|properties|初始值|
|--------------|-------------------|
|<xref:System.Web.UI.WebControls.Login.RememberMeSet%2A>|`true`|
|<xref:System.Web.UI.WebControls.Login.VisibleWhenLoggedIn%2A>|`true`|
|<xref:System.Web.UI.WebControls.Login.FailureAction%2A>|`true`|
|<xref:System.Web.UI.WebControls.Login.FailureText%2A>|"您的登录尝试失败。 请重试。”|
|<xref:System.Web.UI.WebControls.Login.MembershipProvider%2A>|缺省值|
|<xref:System.Web.UI.WebControls.Login.Orientation%2A>|<xref:System.Web.UI.WebControls.Orientation.Vertical>|
|<xref:System.Web.UI.WebControls.Login.PasswordLabelText%2A>|"Password："|
|<xref:System.Web.UI.WebControls.Login.PasswordRequiredErrorMessage%2A>|"密码"。|
|<xref:System.Web.UI.WebControls.Login.RememberMeSet%2A>|`false`|
|<xref:System.Web.UI.WebControls.Login.RememberMeText%2A>|"请记住我下一次。"|
|<xref:System.Web.UI.WebControls.Login.LoginButtonText%2A>|“Login”|
|<xref:System.Web.UI.WebControls.Login.TextLayout%2A>|<xref:System.Web.UI.WebControls.LoginTextLayout.TextOnLeft>|
|<xref:System.Web.UI.WebControls.Login.TitleText%2A>|“Login”|
|<xref:System.Web.UI.WebControls.Login.UserNameLabelText%2A>|"用户名："|
|<xref:System.Web.UI.WebControls.Login.UserNameRequiredErrorMessage%2A>|"用户名"。|



## Examples
 下面的代码示例使用 <xref:System.Web.UI.WebControls.Login.%23ctor%2A> 构造函数创建控件的新实例 <xref:System.Web.UI.WebControls.Login> ，并将该实例添加到控件的 <xref:System.Web.UI.Control.Controls%2A> 集合中 <xref:System.Web.UI.WebControls.PlaceHolder> 。

 [!code-aspx-csharp[LoginLogin#1](~/samples/snippets/csharp/VS_Snippets_WebNet/LoginLogin/CS/loginlogincs.aspx#1)]
 [!code-aspx-vb[LoginLogin#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/LoginLogin/VB/loginloginvb.aspx#1)]

 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms178329(v=vs.100)">ASP.NET 登录控件概述</related>
      </Docs>
    </Member>
    <Member MemberName="Authenticate">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.AuthenticateEventHandler Authenticate;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.AuthenticateEventHandler Authenticate" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.Login.Authenticate" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Authenticate As AuthenticateEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::AuthenticateEventHandler ^ Authenticate;" />
      <MemberSignature Language="F#" Value="member this.Authenticate : System.Web.UI.WebControls.AuthenticateEventHandler " Usage="member this.Authenticate : System.Web.UI.WebControls.AuthenticateEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.AuthenticateEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>验证用户的身份后出现。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.Login.Authenticate>当用户使用 <xref:System.Web.UI.WebControls.Login> 控件登录到网站时，将引发事件。 自定义身份验证方案可以使用 <xref:System.Web.UI.WebControls.Login.Authenticate> 事件对用户进行身份验证。

> [!NOTE]
>  当用户使用 <xref:System.Web.UI.WebControls.Login> 控件登录到网站时，视图状态和所有 post 数据中的所有数据都将丢失。 不要在依赖于视图状态的事件中执行操作 <xref:System.Web.UI.WebControls.Login.Authenticate> 。

 有关处理事件的详细信息，请参阅 [处理和引发事件](/dotnet/standard/events/)。



## Examples
 下面的代码示例使用 <xref:System.Web.UI.WebControls.Login.Authenticate> 事件来调用特定于站点的自定义身份验证代码。

 [!code-aspx-csharp[LoginAuthenticate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/LoginAuthenticate/CS/loginauthenticatecs.aspx#1)]
 [!code-aspx-vb[LoginAuthenticate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/LoginAuthenticate/VB/loginauthenticatevb.aspx#1)]

 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>自定义身份验证方案应将 <see cref="P:System.Web.UI.WebControls.AuthenticateEventArgs.Authenticated" /> 属性设置为，以指示已对 <see langword="true" /> 用户进行身份验证。

当用户提交其登录信息时， <see cref="T:System.Web.UI.WebControls.Login" /> 控件首先引发 <see cref="E:System.Web.UI.WebControls.Login.LoggingIn" /> 事件，然后引发事件 <see cref="E:System.Web.UI.WebControls.Login.Authenticate" /> ，最后引发 <see cref="E:System.Web.UI.WebControls.Login.LoggedIn" /> 事件。</para></block>
        <altmember cref="T:System.Web.UI.WebControls.AuthenticateEventHandler" />
        <altmember cref="T:System.Web.UI.WebControls.AuthenticateEventArgs" />
        <altmember cref="M:System.Web.UI.WebControls.Login.OnAuthenticate(System.Web.UI.WebControls.AuthenticateEventArgs)" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms178329(v=vs.100)">ASP.NET 登录控件概述</related>
      </Docs>
    </Member>
    <Member MemberName="BorderPadding">
      <MemberSignature Language="C#" Value="public virtual int BorderPadding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 BorderPadding" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Login.BorderPadding" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property BorderPadding As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int BorderPadding { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.BorderPadding : int with get, set" Usage="System.Web.UI.WebControls.Login.BorderPadding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置 <see cref="T:System.Web.UI.WebControls.Login" /> 控件边框内的填充量。</summary>
        <value><see cref="T:System.Web.UI.WebControls.Login" /> 控件的内容与 <see cref="T:System.Web.UI.WebControls.Login" /> 控件的边框之间的空间量（以像素为单位）。 默认值是 <see langword="1" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 属性的值 <xref:System.Web.UI.WebControls.Login.BorderPadding%2A> 存储在视图状态中。

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><see cref="P:System.Web.UI.WebControls.Login.BorderPadding" /> 属性被设置为小于 -1 的值。</exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms178329(v=vs.100)">ASP.NET 登录控件概述</related>
      </Docs>
    </Member>
    <Member MemberName="CheckBoxStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle CheckBoxStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle CheckBoxStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Login.CheckBoxStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CheckBoxStyle As TableItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TableItemStyle ^ CheckBoxStyle { System::Web::UI::WebControls::TableItemStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CheckBoxStyle : System.Web.UI.WebControls.TableItemStyle" Usage="System.Web.UI.WebControls.Login.CheckBoxStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(null)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(null)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.NotifyParentProperty(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.NotifyParentProperty(true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取对 <see cref="T:System.Web.UI.WebControls.Style" /> 对象的引用，它定义“记住我”复选框的设置。</summary>
        <value>对 <see cref="T:System.Web.UI.WebControls.Style" /> 的引用，它定义 <see cref="T:System.Web.UI.WebControls.Login" /> 控件的“记住我”复选框的样式设置。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.Login.CheckBoxStyle%2A>属性获取对 <xref:System.Web.UI.WebControls.Style> 对象的引用，您可以使用该对象更改 <xref:System.Web.UI.WebControls.Login> 控件的 "记住我" 复选框的外观。

 此属性是只读的;但是，您可以设置 <xref:System.Web.UI.WebControls.Style> 它返回的对象的属性。 可以在窗体中以声明方式设置这些属性 `Property-Subproperty` ，其中 `Subproperty` 表示类的属性 <xref:System.Web.UI.WebControls.Style> (例如 `CheckBoxStyle-ForeColor`) 。 可以通过编程方式设置属性 `Property.Subproperty` ， (例如 `CheckBoxStyle.ForeColor`) 。

 常见设置包括自定义背景色、文本颜色和字体属性。 <xref:System.Web.UI.WebControls.Login.CheckBoxStyle%2A>属性定义属性的外观 <xref:System.Web.UI.WebControls.Login.RememberMeText%2A> 。

 属性的样式设置 <xref:System.Web.UI.WebControls.Login.CheckBoxStyle%2A> 与控件的样式设置合并 <xref:System.Web.UI.WebControls.Login> 。 在属性中进行的任何设置都将 <xref:System.Web.UI.WebControls.Login.CheckBoxStyle%2A> 覆盖控件的属性中的相应设置 <xref:System.Web.UI.WebControls.Login> 。

 以下 <xref:System.Web.UI.WebControls.Login> 控件样式属性被设置重写 <xref:System.Web.UI.WebControls.Login.CheckBoxStyle%2A> ：

-   <xref:System.Web.UI.WebControls.WebControl.BackColor%2A>

-   <xref:System.Web.UI.WebControls.WebControl.BorderColor%2A>

-   <xref:System.Web.UI.WebControls.WebControl.BorderStyle%2A>

-   <xref:System.Web.UI.WebControls.WebControl.BorderWidth%2A>

-   <xref:System.Web.UI.WebControls.WebControl.Enabled%2A>

-   <xref:System.Web.UI.WebControls.WebControl.Font%2A>

-   <xref:System.Web.UI.WebControls.WebControl.ForeColor%2A>

-   <xref:System.Web.UI.WebControls.WebControl.Height%2A>

-   <xref:System.Web.UI.WebControls.WebControl.ToolTip%2A>

-   <xref:System.Web.UI.Control.Visible%2A>

-   <xref:System.Web.UI.WebControls.WebControl.Width%2A>

 使用模板定义控件的外观时 <xref:System.Web.UI.WebControls.Login> ， <xref:System.Web.UI.WebControls.Login.CheckBoxStyle%2A> 属性不起作用。



## Examples
 下面的代码示例通过设置属性所引用的对象的属性，将 "记住我" 复选框的文本颜色设置为蓝色，将字体样式设置为斜体 <xref:System.Web.UI.WebControls.Style> <xref:System.Web.UI.WebControls.Login.CheckBoxStyle%2A> 。

 [!code-aspx-csharp[LoginCheckBoxStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/LoginCheckBoxStyle/CS/logincheckboxstylecs.aspx#1)]
 [!code-aspx-vb[LoginCheckBoxStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/LoginCheckBoxStyle/VB/logincheckboxstylevb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Login.RememberMeSet" />
        <altmember cref="P:System.Web.UI.WebControls.Login.RememberMeText" />
        <altmember cref="T:System.Web.UI.WebControls.Style" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms178329(v=vs.100)">ASP.NET 登录控件概述</related>
      </Docs>
    </Member>
    <Member MemberName="CreateChildControls">
      <MemberSignature Language="C#" Value="protected internal override void CreateChildControls ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void CreateChildControls() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Login.CreateChildControls" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub CreateChildControls ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void CreateChildControls();" />
      <MemberSignature Language="F#" Value="override this.CreateChildControls : unit -&gt; unit" Usage="login.CreateChildControls " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>创建组成 <see cref="T:System.Web.UI.WebControls.Login" /> 控件的各个控件，并将事件处理程序与它们各自的事件相关联。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.Login.CreateChildControls%2A>方法创建组成控件的控件的实例 <xref:System.Web.UI.WebControls.Login> 。

 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms178329(v=vs.100)">ASP.NET 登录控件概述</related>
      </Docs>
    </Member>
    <Member MemberName="CreateUserIconUrl">
      <MemberSignature Language="C#" Value="public virtual string CreateUserIconUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CreateUserIconUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Login.CreateUserIconUrl" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CreateUserIconUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ CreateUserIconUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CreateUserIconUrl : string with get, set" Usage="System.Web.UI.WebControls.Login.CreateUserIconUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue("")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue("")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName Language="C#">[System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.UrlProperty]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.UrlProperty&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取显示在新用户的注册页链接旁边的图像的位置。</summary>
        <value>要显示的图像的 URL。 默认值为 <see cref="F:System.String.Empty" />。</value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.UI.WebControls.CreateUserWizard" />
        <altmember cref="P:System.Web.UI.WebControls.Login.CreateUserText" />
        <altmember cref="P:System.Web.UI.WebControls.Login.CreateUserUrl" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms178329(v=vs.100)">ASP.NET 登录控件概述</related>
      </Docs>
    </Member>
    <Member MemberName="CreateUserText">
      <MemberSignature Language="C#" Value="public virtual string CreateUserText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CreateUserText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Login.CreateUserText" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CreateUserText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ CreateUserText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CreateUserText : string with get, set" Usage="System.Web.UI.WebControls.Login.CreateUserText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue("")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue("")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Localizable(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Localizable(true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置新用户注册页的链接文本。</summary>
        <value>新用户注册页的链接文本。 默认值为 <see cref="F:System.String.Empty" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.Login.CreateUserText%2A>属性包含指向网站注册页的链接的文本。 注册页的 URL 在属性中指定 <xref:System.Web.UI.WebControls.Login.CreateUserUrl%2A> 。

 如果 <xref:System.Web.UI.WebControls.Login.CreateUserUrl%2A> 为空，则将 <xref:System.Web.UI.WebControls.Login.CreateUserText%2A> 向用户显示该属性中的文本，但不会将其格式化为链接。

 如果该 <xref:System.Web.UI.WebControls.Login.CreateUserText%2A> 属性为空，则用户无法使用注册页面的链接。

 设置此属性后，可以使用设计器工具自动将此属性的值保存到资源文件中。 有关详细信息，请参阅 <xref:System.ComponentModel.LocalizableAttribute> 和 [全球化和本地化](https://docs.microsoft.com/previous-versions/aspnet/c6zyy3s9(v=vs.100))。



## Examples
 下面的代码示例将 <xref:System.Web.UI.WebControls.Login.CreateUserText%2A> 属性设置为 "注册新用户 ..."

> [!IMPORTANT]
>  此示例包含一个文本框，该文本框接受用户输入，这是一个潜在的安全威胁。 默认情况下，ASP.NET 网页验证用户输入是否不包含脚本或 HTML 元素。 有关详细信息，请参阅[脚本侵入概述](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100))。

 [!code-aspx-csharp[LoginCreateUserText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/LoginCreateUserText/CS/logincreateusertextcs.aspx#1)]
 [!code-aspx-vb[LoginCreateUserText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/LoginCreateUserText/VB/logincreateusertextvb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.CreateUserWizard" />
        <altmember cref="P:System.Web.UI.WebControls.Login.CreateUserIconUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Login.CreateUserUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Login.HyperLinkStyle" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms178329(v=vs.100)">ASP.NET 登录控件概述</related>
      </Docs>
    </Member>
    <Member MemberName="CreateUserUrl">
      <MemberSignature Language="C#" Value="public virtual string CreateUserUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CreateUserUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Login.CreateUserUrl" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CreateUserUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ CreateUserUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CreateUserUrl : string with get, set" Usage="System.Web.UI.WebControls.Login.CreateUserUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue("")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue("")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName Language="C#">[System.ComponentModel.Editor("System.Web.UI.Design.UrlEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Editor("System.Web.UI.Design.UrlEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.UrlProperty]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.UrlProperty&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.Editor("System.Web.UI.Design.UrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Editor("System.Web.UI.Design.UrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置新用户注册页的 URL。</summary>
        <value>新用户注册页的 URL。 默认值为 <see cref="F:System.String.Empty" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.Login.CreateUserUrl%2A>属性包含网站的新用户注册页的 URL。 <xref:System.Web.UI.WebControls.Login.CreateUserText%2A>属性包含用于链接的文本。

 如果该 <xref:System.Web.UI.WebControls.Login.CreateUserText%2A> 属性为空，则用户无法访问注册页的链接。



## Examples
 下面的代码示例将 <xref:System.Web.UI.WebControls.Login.CreateUserUrl%2A> 属性设置为 "register"。

> [!IMPORTANT]
>  此示例包含一个文本框，该文本框接受用户输入，这是一个潜在的安全威胁。 默认情况下，ASP.NET 网页验证用户输入是否不包含脚本或 HTML 元素。 有关详细信息，请参阅[脚本侵入概述](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100))。

 [!code-aspx-csharp[LoginCreateUserText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/LoginCreateUserText/CS/logincreateusertextcs.aspx#1)]
 [!code-aspx-vb[LoginCreateUserText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/LoginCreateUserText/VB/logincreateusertextvb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.CreateUserWizard" />
        <altmember cref="P:System.Web.UI.WebControls.Login.CreateUserIconUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Login.CreateUserText" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms178329(v=vs.100)">ASP.NET 登录控件概述</related>
      </Docs>
    </Member>
    <Member MemberName="DestinationPageUrl">
      <MemberSignature Language="C#" Value="public virtual string DestinationPageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DestinationPageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Login.DestinationPageUrl" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property DestinationPageUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ DestinationPageUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DestinationPageUrl : string with get, set" Usage="System.Web.UI.WebControls.Login.DestinationPageUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue("")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue("")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName Language="C#">[System.ComponentModel.Editor("System.Web.UI.Design.UrlEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Editor("System.Web.UI.Design.UrlEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.Themeable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.Themeable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.UrlProperty]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.UrlProperty&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.Editor("System.Web.UI.Design.UrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Editor("System.Web.UI.Design.UrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置在登录尝试成功时向用户显示的页面的 URL。</summary>
        <value>登录尝试成功时用户被重定向到的页面的 URL。 默认值为 <see cref="F:System.String.Empty" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.Login.DestinationPageUrl%2A>属性指定登录尝试成功时显示的页面。

 控件的默认行为 <xref:System.Web.UI.WebControls.Login> 是将用户返回到引用页，或返回到 Web.config 文件中元素的属性中定义的页 `defaultUrl` 。

 <xref:System.Web.UI.WebControls.Login.DestinationPageUrl%2A>属性重写控件的默认行为 <xref:System.Web.UI.WebControls.Login> ，以及 `defaultUrl` 在配置文件中所做的设置。

 无法通过主题或样式表主题设置此属性。 有关详细信息，请参阅 <xref:System.Web.UI.ThemeableAttribute> 和 [ASP.NET 主题和外观](https://docs.microsoft.com/previous-versions/aspnet/ykzx33wh(v=vs.100))。



## Examples
 下面的代码示例设置 <xref:System.Web.UI.WebControls.Login.DestinationPageUrl%2A> 属性。 Page_Load 方法用于将引用页的 URL 附加到目标页的 URL，以便目标页可以根据需要将用户返回到原始页。

 [!code-aspx-csharp[LoginDestinationPageUrl#1](~/samples/snippets/csharp/VS_Snippets_WebNet/LoginDestinationPageUrl/CS/logindestinationpageurlcs.aspx#1)]
 [!code-aspx-vb[LoginDestinationPageUrl#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/LoginDestinationPageUrl/VB/logindestinationpageurlvb.aspx#1)]

 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms178329(v=vs.100)">ASP.NET 登录控件概述</related>
      </Docs>
    </Member>
    <Member MemberName="DisplayRememberMe">
      <MemberSignature Language="C#" Value="public virtual bool DisplayRememberMe { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayRememberMe" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Login.DisplayRememberMe" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property DisplayRememberMe As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool DisplayRememberMe { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.DisplayRememberMe : bool with get, set" Usage="System.Web.UI.WebControls.Login.DisplayRememberMe" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.Themeable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.Themeable(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示是否显示复选框以使用户可以控制是否向浏览器发送持久性 Cookie。</summary>
        <value>如果显示复选框，则为 <see langword="true" />；否则为 <see langword="false" />。 默认值为 <see langword="true" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 当 <xref:System.Web.UI.WebControls.Login.DisplayRememberMe%2A> 属性设置为时 `true` ，该属性中包含的文本 <xref:System.Web.UI.WebControls.Login.RememberMeText%2A> 会显示在页面上，同时还会显示 "记住我" 复选框。 当用户选中 "记住我" 复选框时，发送到其计算机的身份验证 cookie 会保持不变，以便在将来访问站点时自动对用户进行身份验证。 属性的值 <xref:System.Web.UI.WebControls.Login.RememberMeSet%2A> 由 "记住我" 复选框中的选择设置。

 如果 <xref:System.Web.UI.WebControls.Login.DisplayRememberMe%2A> 为 `false` ，则不会在页面上显示 "记住我" 复选框，并且用户无法控制是否保留身份验证 cookie。 你仍可以将 <xref:System.Web.UI.WebControls.Login.RememberMeSet%2A> 属性设置为，以将 `true` 永久身份验证 cookie 发送到用户的浏览器，而不显示复选框。

> [!NOTE]
>  在用户的浏览器上设置持久性身份验证 cookie 存在固有的安全风险。 你应确定你的站点是否可以接受这些安全风险。 如果将属性设置 <xref:System.Web.UI.WebControls.Login.RememberMeSet%2A> 为， `true` 并将 <xref:System.Web.UI.WebControls.Login.DisplayRememberMe%2A> 属性设置为 `false` ，则从公共浏览器访问你的网站的用户（例如在 Internet 咖啡馆中）可能会意外地保留持久性身份验证 cookie，并且浏览器的下一个用户将能够使用以前用户的凭据访问你的网站。

 无法通过主题或样式表主题设置此属性。 有关详细信息，请参阅 <xref:System.Web.UI.ThemeableAttribute> 和 [ASP.NET 主题和外观](https://docs.microsoft.com/previous-versions/aspnet/ykzx33wh(v=vs.100))。



## Examples
 下面的代码示例通过将属性设置为来禁用 "记住我" 复选框 <xref:System.Web.UI.WebControls.Login.DisplayRememberMe%2A> `false` 。

 [!code-aspx-csharp[LoginEnableRememberMe#1](~/samples/snippets/csharp/VS_Snippets_WebNet/LoginEnableRememberMe/CS/loginenableremembermecs.aspx#1)]
 [!code-aspx-vb[LoginEnableRememberMe#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/LoginEnableRememberMe/VB/loginenableremembermevb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Login.RememberMeSet" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms178329(v=vs.100)">ASP.NET 登录控件概述</related>
      </Docs>
    </Member>
    <Member MemberName="FailureAction">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.LoginFailureAction FailureAction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.LoginFailureAction FailureAction" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Login.FailureAction" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property FailureAction As LoginFailureAction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::LoginFailureAction FailureAction { System::Web::UI::WebControls::LoginFailureAction get(); void set(System::Web::UI::WebControls::LoginFailureAction value); };" />
      <MemberSignature Language="F#" Value="member this.FailureAction : System.Web.UI.WebControls.LoginFailureAction with get, set" Usage="System.Web.UI.WebControls.Login.FailureAction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.Themeable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.Themeable(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.LoginFailureAction</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置当登录尝试失败时发生的操作。</summary>
        <value><see cref="T:System.Web.UI.WebControls.LoginFailureAction" /> 枚举值之一。 默认值为 <see cref="F:System.Web.UI.WebControls.LoginFailureAction.Refresh" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.Login.FailureAction%2A> <xref:System.Web.UI.WebControls.Login> 当用户未成功登录到网站时，属性定义控件的行为。

 默认行为会重新加载页面，并显示属性的内容， <xref:System.Web.UI.WebControls.Login.FailureText%2A> 以提醒用户登录尝试失败。

 当 <xref:System.Web.UI.WebControls.Login.FailureAction%2A> 设置为时 <xref:System.Web.UI.WebControls.LoginFailureAction.RedirectToLoginPage> ，会将用户重定向到 Web.config 文件中定义的登录页。

 无法通过主题或样式表主题设置此属性。 有关详细信息，请参阅 <xref:System.Web.UI.ThemeableAttribute> 和 [ASP.NET 主题和外观](https://docs.microsoft.com/previous-versions/aspnet/ykzx33wh(v=vs.100))。



## Examples
 下面的代码示例演示如何 <xref:System.Web.UI.WebControls.Login.FailureAction%2A> 在代码中以声明方式设置属性。

 [!code-aspx-csharp[LoginLoginFailureAction#1](~/samples/snippets/csharp/VS_Snippets_WebNet/LoginLoginFailureAction/CS/loginloginfailureactioncs.aspx#1)]
 [!code-aspx-vb[LoginLoginFailureAction#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/LoginLoginFailureAction/VB/loginloginfailureactionvb.aspx#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">所选的值不是 <see cref="T:System.Web.UI.WebControls.LoginFailureAction" /> 枚举值之一。</exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms178329(v=vs.100)">ASP.NET 登录控件概述</related>
      </Docs>
    </Member>
    <Member MemberName="FailureText">
      <MemberSignature Language="C#" Value="public virtual string FailureText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FailureText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Login.FailureText" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property FailureText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ FailureText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.FailureText : string with get, set" Usage="System.Web.UI.WebControls.Login.FailureText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Localizable(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Localizable(true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置当登录尝试失败时显示的文本。</summary>
        <value>当登录尝试失败时向用户显示的文本。 默认值为“您的登录尝试失败。 请重试。”</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.Login.FailureText%2A>属性指定当登录尝试失败时显示的字符串。

 如果为控件定义模板 <xref:System.Web.UI.WebControls.Login> ，则可以 <xref:System.Web.UI.WebControls.Login.FailureText%2A> 通过使用 <xref:System.Web.UI.WebControls.Literal> 控件并为该控件提供 ID "FailureText" 来指示模板上显示该属性的位置。 使用模板时， <xref:System.Web.UI.WebControls.Login.FailureTextStyle%2A> 属性不会应用于在属性中指定的文本 <xref:System.Web.UI.WebControls.Login.FailureText%2A> 。

 属性的默认文本根据服务器当前的区域设置进行本地化。

> [!NOTE]
>  出于安全原因，登录失败文本不应包含失败的特定原因。 例如，错误消息（如 "用户的密码无效 \<username> "）会向潜在攻击者显示 \<username> 系统中的用户。 有关详细信息，请参阅 [如何：显示安全错误消息](https://docs.microsoft.com/previous-versions/aspnet/994a1482(v=vs.100))。

 设置此属性后，可以使用设计器工具自动将此属性的值保存到资源文件中。 有关详细信息，请参阅 <xref:System.ComponentModel.LocalizableAttribute> 和 [全球化和本地化](https://docs.microsoft.com/previous-versions/aspnet/c6zyy3s9(v=vs.100))。



## Examples
 下面的代码示例将 <xref:System.Web.UI.WebControls.Login.FailureText%2A> 属性设置为 "在登录时出错。 请重试。 "。

 [!code-aspx-csharp[LoginLoginFailureText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/LoginLoginFailureText/CS/loginloginfailuretextcs.aspx#1)]
 [!code-aspx-vb[LoginLoginFailureText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/LoginLoginFailureText/VB/loginloginfailuretextvb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Login.FailureTextStyle" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms178329(v=vs.100)">ASP.NET 登录控件概述</related>
      </Docs>
    </Member>
    <Member MemberName="FailureTextStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle FailureTextStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle FailureTextStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Login.FailureTextStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FailureTextStyle As TableItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TableItemStyle ^ FailureTextStyle { System::Web::UI::WebControls::TableItemStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FailureTextStyle : System.Web.UI.WebControls.TableItemStyle" Usage="System.Web.UI.WebControls.Login.FailureTextStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(null)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(null)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.NotifyParentProperty(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.NotifyParentProperty(true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取对属性集合的引用，这些属性定义 <see cref="T:System.Web.UI.WebControls.Login" /> 控件中错误文本的外观。</summary>
        <value>对包含定义错误文本外观的属性的 <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> 的引用。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.Login.FailureTextStyle%2A>属性获取对 <xref:System.Web.UI.WebControls.TableItemStyle> 对象的引用，使用该对象可以更改登录失败文本的外观。 默认值为以红色显示文本。

 此属性是只读的;但是，您可以设置 <xref:System.Web.UI.WebControls.TableItemStyle> 它返回的对象的属性。 可以在窗体中以声明方式设置这些属性 `Property-Subproperty` ，其中 `Subproperty` 表示类的属性 <xref:System.Web.UI.WebControls.TableItemStyle> (例如 `FailureTextStyle-ForeColor`) 。 可以通过编程方式设置属性 `Property.Subproperty` ， (例如 `FailureTextStyle.ForeColor`) 。

 常见设置包括自定义背景色、文本颜色和字体属性。 <xref:System.Web.UI.WebControls.Login.FailureTextStyle%2A>属性定义属性的外观 <xref:System.Web.UI.WebControls.Login.FailureText%2A> 。

 属性的样式设置 <xref:System.Web.UI.WebControls.Login.FailureTextStyle%2A> 与控件的样式设置合并 <xref:System.Web.UI.WebControls.Login> 。 在属性中进行的任何设置都将 <xref:System.Web.UI.WebControls.Login.FailureTextStyle%2A> 覆盖控件的属性中的相应设置 <xref:System.Web.UI.WebControls.Login> 。

 以下 <xref:System.Web.UI.WebControls.Login> 控件样式属性被设置重写 <xref:System.Web.UI.WebControls.Login.FailureTextStyle%2A> ：

-   <xref:System.Web.UI.WebControls.WebControl.BackColor%2A>

-   <xref:System.Web.UI.WebControls.WebControl.BorderColor%2A>

-   <xref:System.Web.UI.WebControls.WebControl.BorderStyle%2A>

-   <xref:System.Web.UI.WebControls.WebControl.BorderWidth%2A>

-   <xref:System.Web.UI.WebControls.WebControl.Enabled%2A>

-   <xref:System.Web.UI.WebControls.WebControl.Font%2A>

-   <xref:System.Web.UI.WebControls.WebControl.ForeColor%2A>

-   <xref:System.Web.UI.WebControls.WebControl.Height%2A>

-   <xref:System.Web.UI.WebControls.WebControl.ToolTip%2A>

-   <xref:System.Web.UI.Control.Visible%2A>

-   <xref:System.Web.UI.WebControls.WebControl.Width%2A>

 使用模板定义控件的外观时 <xref:System.Web.UI.WebControls.Login> ， <xref:System.Web.UI.WebControls.Login.FailureTextStyle%2A> 属性不起作用。



## Examples
 下面的代码示例通过设置属性中引用的对象的背景和文本颜色属性，来指定登录失败文本样式 <xref:System.Web.UI.WebControls.TableItemStyle> <xref:System.Web.UI.WebControls.Login.FailureTextStyle%2A> 。

 [!code-aspx-csharp[LoginLoginFailureText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/LoginLoginFailureText/CS/loginloginfailuretextcs.aspx#1)]
 [!code-aspx-vb[LoginLoginFailureText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/LoginLoginFailureText/VB/loginloginfailuretextvb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Login.FailureText" />
        <altmember cref="T:System.Web.UI.WebControls.TableItemStyle" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms178329(v=vs.100)">ASP.NET 登录控件概述</related>
      </Docs>
    </Member>
    <Member MemberName="HelpPageIconUrl">
      <MemberSignature Language="C#" Value="public virtual string HelpPageIconUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HelpPageIconUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Login.HelpPageIconUrl" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property HelpPageIconUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ HelpPageIconUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.HelpPageIconUrl : string with get, set" Usage="System.Web.UI.WebControls.Login.HelpPageIconUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue("")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue("")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName Language="C#">[System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.UrlProperty]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.UrlProperty&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取要在登录帮助页面的链接旁显示的图像的位置。</summary>
        <value>要显示的图像的 URL。 默认值为 <see cref="F:System.String.Empty" />。</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.UI.WebControls.Login.HelpPageText" />
        <altmember cref="P:System.Web.UI.WebControls.Login.HelpPageUrl" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms178329(v=vs.100)">ASP.NET 登录控件概述</related>
      </Docs>
    </Member>
    <Member MemberName="HelpPageText">
      <MemberSignature Language="C#" Value="public virtual string HelpPageText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HelpPageText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Login.HelpPageText" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property HelpPageText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ HelpPageText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.HelpPageText : string with get, set" Usage="System.Web.UI.WebControls.Login.HelpPageText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue("")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue("")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Localizable(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Localizable(true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置登录帮助页链接的文本。</summary>
        <value>登录帮助页链接的文本。 默认值为 <see cref="F:System.String.Empty" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.Login.HelpPageText%2A>属性包含站点的登录帮助页的链接文本。 登录帮助页的 URL 在属性中指定 <xref:System.Web.UI.WebControls.Login.HelpPageUrl%2A> 。

 如果 <xref:System.Web.UI.WebControls.Login.HelpPageUrl%2A> 为空，则会在 <xref:System.Web.UI.WebControls.Login.HelpPageText%2A> 页面上向用户显示该属性中的文本，但不会将其格式设置为链接。

 如果该 <xref:System.Web.UI.WebControls.Login.HelpPageText%2A> 属性为空，则用户无法使用登录帮助页面的链接。

 设置此属性后，可以使用设计器工具自动将此属性的值保存到资源文件中。 有关详细信息，请参阅 <xref:System.ComponentModel.LocalizableAttribute> 和 [全球化和本地化](https://docs.microsoft.com/previous-versions/aspnet/c6zyy3s9(v=vs.100))。



## Examples
 下面的代码示例使用 <xref:System.Web.UI.WebControls.Login.HelpPageText%2A> 属性指定指向站点的登录帮助页的链接的文本。

 [!code-aspx-csharp[LoginHelpPageText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/LoginHelpPageText/CS/loginhelppagetextcs.aspx#1)]
 [!code-aspx-vb[LoginHelpPageText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/LoginHelpPageText/VB/loginhelppagetextvb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Login.HelpPageIconUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Login.HelpPageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Login.HyperLinkStyle" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms178329(v=vs.100)">ASP.NET 登录控件概述</related>
      </Docs>
    </Member>
    <Member MemberName="HelpPageUrl">
      <MemberSignature Language="C#" Value="public virtual string HelpPageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HelpPageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Login.HelpPageUrl" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property HelpPageUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ HelpPageUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.HelpPageUrl : string with get, set" Usage="System.Web.UI.WebControls.Login.HelpPageUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue("")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue("")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName Language="C#">[System.ComponentModel.Editor("System.Web.UI.Design.UrlEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Editor("System.Web.UI.Design.UrlEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.UrlProperty]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.UrlProperty&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.Editor("System.Web.UI.Design.UrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Editor("System.Web.UI.Design.UrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置登录帮助页的 URL。</summary>
        <value>登录帮助页的 URL。 默认值为 <see cref="F:System.String.Empty" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.Login.HelpPageUrl%2A>属性包含网站的登录帮助页的 URL。 <xref:System.Web.UI.WebControls.Login.HelpPageText%2A>属性包含用于链接的文本。

 如果 <xref:System.Web.UI.WebControls.Login.HelpPageUrl%2A> 为空，则将 <xref:System.Web.UI.WebControls.Login.HelpPageText%2A> 向用户显示该属性中的文本，但不会将其格式化为链接。

 如果该 <xref:System.Web.UI.WebControls.Login.HelpPageText%2A> 属性为空，则用户无法使用登录帮助页面的链接。



## Examples
 下面的代码示例使用 <xref:System.Web.UI.WebControls.Login.HelpPageUrl%2A> 属性指定站点的登录帮助页的 URL。

 [!code-aspx-csharp[LoginHelpPageText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/LoginHelpPageText/CS/loginhelppagetextcs.aspx#1)]
 [!code-aspx-vb[LoginHelpPageText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/LoginHelpPageText/VB/loginhelppagetextvb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Login.HelpPageIconUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Login.HelpPageText" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms178329(v=vs.100)">ASP.NET 登录控件概述</related>
      </Docs>
    </Member>
    <Member MemberName="HyperLinkStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle HyperLinkStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle HyperLinkStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Login.HyperLinkStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HyperLinkStyle As TableItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TableItemStyle ^ HyperLinkStyle { System::Web::UI::WebControls::TableItemStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.HyperLinkStyle : System.Web.UI.WebControls.TableItemStyle" Usage="System.Web.UI.WebControls.Login.HyperLinkStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(null)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(null)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.NotifyParentProperty(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.NotifyParentProperty(true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取对属性集合的引用，这些属性定义 <see cref="T:System.Web.UI.WebControls.Login" /> 控件中超链接的外观。</summary>
        <value>对包含定义超链接外观的属性的 <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> 的引用。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.Login.HyperLinkStyle%2A>属性定义控件中的超链接的外观 <xref:System.Web.UI.WebControls.Login> 。 此属性是只读的;但是，您可以设置 <xref:System.Web.UI.WebControls.TableItemStyle> 它返回的对象的属性。 可以在窗体中以声明方式设置这些属性 `Property-Subproperty` ，其中 `Subproperty` 表示类的属性 <xref:System.Web.UI.WebControls.TableItemStyle> (例如 `HyperLinkStyle-ForeColor`) 。 可以通过编程方式设置属性 `Property.Subproperty` ， (例如 `HyperLinkStyle.ForeColor`) 。

 常见设置包括自定义背景色、文本颜色和字体属性。 <xref:System.Web.UI.WebControls.Login.HyperLinkStyle%2A>属性定义以下属性的外观：

-   <xref:System.Web.UI.WebControls.Login.CreateUserText%2A>

-   <xref:System.Web.UI.WebControls.Login.HelpPageText%2A>

-   <xref:System.Web.UI.WebControls.Login.PasswordRecoveryText%2A>

 属性的样式设置 <xref:System.Web.UI.WebControls.Login.HyperLinkStyle%2A> 与控件的样式设置合并 <xref:System.Web.UI.WebControls.Login> 。 在属性中进行的任何设置都将 <xref:System.Web.UI.WebControls.Login.HyperLinkStyle%2A> 覆盖控件的属性中的相应设置 <xref:System.Web.UI.WebControls.Login> 。

 以下 <xref:System.Web.UI.WebControls.Login> 样式属性被设置重写 <xref:System.Web.UI.WebControls.Login.HyperLinkStyle%2A> ：

-   <xref:System.Web.UI.WebControls.WebControl.BackColor%2A>

-   <xref:System.Web.UI.WebControls.WebControl.BorderColor%2A>

-   <xref:System.Web.UI.WebControls.WebControl.BorderStyle%2A>

-   <xref:System.Web.UI.WebControls.WebControl.BorderWidth%2A>

-   <xref:System.Web.UI.WebControls.WebControl.Enabled%2A>

-   <xref:System.Web.UI.WebControls.WebControl.Font%2A>

-   <xref:System.Web.UI.WebControls.WebControl.ForeColor%2A>

-   <xref:System.Web.UI.WebControls.WebControl.Height%2A>

-   <xref:System.Web.UI.WebControls.WebControl.ToolTip%2A>

-   <xref:System.Web.UI.Control.Visible%2A>

-   <xref:System.Web.UI.WebControls.WebControl.Width%2A>

 使用模板定义控件的外观时 <xref:System.Web.UI.WebControls.Login> ， <xref:System.Web.UI.WebControls.Login.HyperLinkStyle%2A> 属性不起作用。



## Examples
 下面的代码示例 <xref:System.Web.UI.WebControls.Login> 通过设置 <xref:System.Web.UI.WebControls.TableItemStyle> 属性所引用的对象的属性，将控件中的超链接设置为绿色斜体文本 <xref:System.Web.UI.WebControls.Login.HyperLinkStyle%2A> 。

 [!code-aspx-csharp[LoginHyperLinkStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/LoginHyperLinkStyle/CS/loginhyperlinkstylecs.aspx#1)]
 [!code-aspx-vb[LoginHyperLinkStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/LoginHyperLinkStyle/VB/loginhyperlinkstylevb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Login.CreateUserUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Login.HelpPageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Login.PasswordRecoveryUrl" />
        <altmember cref="T:System.Web.UI.WebControls.TableItemStyle" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms178329(v=vs.100)">ASP.NET 登录控件概述</related>
      </Docs>
    </Member>
    <Member MemberName="InstructionText">
      <MemberSignature Language="C#" Value="public virtual string InstructionText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string InstructionText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Login.InstructionText" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property InstructionText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ InstructionText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.InstructionText : string with get, set" Usage="System.Web.UI.WebControls.Login.InstructionText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue("")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue("")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Localizable(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Localizable(true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置用户的登录说明文本。</summary>
        <value>向用户显示的登录说明文本。 默认值为 <see cref="F:System.String.Empty" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.Login.InstructionText%2A>属性包含登录到网站的用户的说明。 此文本显示在控件中 <xref:System.Web.UI.WebControls.Login> 的标题之后。

 如果将 <xref:System.Web.UI.WebControls.Login.InstructionText%2A> 属性设置为 <xref:System.String.Empty> ，则不会向用户提供任何说明文本。

 设置此属性后，可以使用设计器工具自动将此属性的值保存到资源文件中。 有关详细信息，请参阅 <xref:System.ComponentModel.LocalizableAttribute> 和 [全球化和本地化](https://docs.microsoft.com/previous-versions/aspnet/c6zyy3s9(v=vs.100))。



## Examples
 下面的代码示例使用 <xref:System.Web.UI.WebControls.Login.InstructionText%2A> 属性在控件中插入说明文本 <xref:System.Web.UI.WebControls.Login> 。

 [!code-aspx-csharp[LoginInstructionText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/LoginInstructionText/CS/logininstructiontextcs.aspx#1)]
 [!code-aspx-vb[LoginInstructionText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/LoginInstructionText/VB/logininstructiontextvb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Login.InstructionTextStyle" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms178329(v=vs.100)">ASP.NET 登录控件概述</related>
      </Docs>
    </Member>
    <Member MemberName="InstructionTextStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle InstructionTextStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle InstructionTextStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Login.InstructionTextStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InstructionTextStyle As TableItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TableItemStyle ^ InstructionTextStyle { System::Web::UI::WebControls::TableItemStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InstructionTextStyle : System.Web.UI.WebControls.TableItemStyle" Usage="System.Web.UI.WebControls.Login.InstructionTextStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(null)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(null)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.NotifyParentProperty(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.NotifyParentProperty(true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取对 <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> 对象的引用，该对象定义 <see cref="T:System.Web.UI.WebControls.Login" /> 控件中的说明文本的设置。</summary>
        <value>对包含 <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> 控件说明文本的样式设置的 <see cref="T:System.Web.UI.WebControls.Login" /> 的引用。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.Login.InstructionTextStyle%2A>属性定义控件中说明文本的外观 <xref:System.Web.UI.WebControls.Login> 。 此属性是只读的;但是，您可以设置 <xref:System.Web.UI.WebControls.TableItemStyle> 它返回的对象的属性。 可以在窗体中以声明方式设置这些属性 `Property-Subproperty` ，其中 `Subproperty` 表示类的属性 <xref:System.Web.UI.WebControls.TableItemStyle> (例如 `InstructionTextStyle-ForeColor`) 。 可以通过编程方式设置属性 `Property.Subproperty` ， (例如 `InstructionTextStyle.ForeColor`) 。

 常见设置包括自定义背景色、文本颜色和字体属性。 <xref:System.Web.UI.WebControls.Login.InstructionTextStyle%2A>属性定义属性的外观 <xref:System.Web.UI.WebControls.Login.InstructionText%2A> 。

 属性的样式设置 <xref:System.Web.UI.WebControls.Login.InstructionTextStyle%2A> 与控件的样式设置合并 <xref:System.Web.UI.WebControls.Login> 。 在属性中进行的任何设置都将 <xref:System.Web.UI.WebControls.Login.InstructionTextStyle%2A> 覆盖控件的属性中的相应设置 <xref:System.Web.UI.WebControls.Login> 。

 以下 <xref:System.Web.UI.WebControls.Login> 样式属性被设置重写 <xref:System.Web.UI.WebControls.Login.InstructionTextStyle%2A> ：

-   <xref:System.Web.UI.WebControls.WebControl.BackColor%2A>

-   <xref:System.Web.UI.WebControls.WebControl.BorderColor%2A>

-   <xref:System.Web.UI.WebControls.WebControl.BorderStyle%2A>

-   <xref:System.Web.UI.WebControls.WebControl.BorderWidth%2A>

-   <xref:System.Web.UI.WebControls.WebControl.Enabled%2A>

-   <xref:System.Web.UI.WebControls.WebControl.Font%2A>

-   <xref:System.Web.UI.WebControls.WebControl.ForeColor%2A>

-   <xref:System.Web.UI.WebControls.WebControl.Height%2A>

-   <xref:System.Web.UI.WebControls.WebControl.ToolTip%2A>

-   <xref:System.Web.UI.Control.Visible%2A>

-   <xref:System.Web.UI.WebControls.WebControl.Width%2A>

 使用模板定义控件的外观时 <xref:System.Web.UI.WebControls.Login> ， <xref:System.Web.UI.WebControls.Login.InstructionTextStyle%2A> 属性不起作用。



## Examples
 下面的代码示例通过设置属性所引用的对象的属性来设置说明文本和说明文本的背景色 <xref:System.Web.UI.WebControls.TableItemStyle> <xref:System.Web.UI.WebControls.Login.InstructionTextStyle%2A> 。

 [!code-aspx-csharp[LoginInstructionText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/LoginInstructionText/CS/logininstructiontextcs.aspx#1)]
 [!code-aspx-vb[LoginInstructionText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/LoginInstructionText/VB/logininstructiontextvb.aspx#1)]

 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms178329(v=vs.100)">ASP.NET 登录控件概述</related>
      </Docs>
    </Member>
    <Member MemberName="LabelStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle LabelStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle LabelStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Login.LabelStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LabelStyle As TableItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TableItemStyle ^ LabelStyle { System::Web::UI::WebControls::TableItemStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LabelStyle : System.Web.UI.WebControls.TableItemStyle" Usage="System.Web.UI.WebControls.Login.LabelStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(null)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(null)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.NotifyParentProperty(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.NotifyParentProperty(true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取对 <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> 对象的引用，此对象定义 <see cref="T:System.Web.UI.WebControls.Login" /> 控件标签的设置。</summary>
        <value>对定义 <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> 控件标签的样式设置的 <see cref="T:System.Web.UI.WebControls.Login" /> 的引用。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.Login.LabelStyle%2A>属性定义控件中文本框标签的外观 <xref:System.Web.UI.WebControls.Login> 。 此属性是只读的;但是，您可以设置 <xref:System.Web.UI.WebControls.TableItemStyle> 它返回的对象的属性。 可以在窗体中以声明方式设置这些属性 `Property-Subproperty` ，其中 `Subproperty` 表示类的属性 <xref:System.Web.UI.WebControls.TableItemStyle> (例如 `LabelStyle-ForeColor`) 。 可以通过编程方式设置属性 `Property.Subproperty` ， (例如 `LabelStyle.ForeColor`) 。

 常见设置包括自定义背景色、文本颜色和字体属性。 <xref:System.Web.UI.WebControls.Login.LabelStyle%2A>属性定义以下属性的外观：

-   <xref:System.Web.UI.WebControls.Login.PasswordLabelText%2A>

-   <xref:System.Web.UI.WebControls.Login.UserNameLabelText%2A>

 属性的样式设置 <xref:System.Web.UI.WebControls.Login.LabelStyle%2A> 与控件的样式设置合并 <xref:System.Web.UI.WebControls.Login> 。 在属性中进行的任何设置都将 <xref:System.Web.UI.WebControls.Login.LabelStyle%2A> 覆盖控件的属性中的相应设置 <xref:System.Web.UI.WebControls.Login> 。

 以下 <xref:System.Web.UI.WebControls.Login> 样式属性被设置重写 <xref:System.Web.UI.WebControls.Login.LabelStyle%2A> ：

-   <xref:System.Web.UI.WebControls.WebControl.BackColor%2A>

-   <xref:System.Web.UI.WebControls.WebControl.BorderColor%2A>

-   <xref:System.Web.UI.WebControls.WebControl.BorderStyle%2A>

-   <xref:System.Web.UI.WebControls.WebControl.BorderWidth%2A>

-   <xref:System.Web.UI.WebControls.WebControl.Enabled%2A>

-   <xref:System.Web.UI.WebControls.WebControl.Font%2A>

-   <xref:System.Web.UI.WebControls.WebControl.ForeColor%2A>

-   <xref:System.Web.UI.WebControls.WebControl.Height%2A>

-   <xref:System.Web.UI.WebControls.WebControl.ToolTip%2A>

-   <xref:System.Web.UI.Control.Visible%2A>

-   <xref:System.Web.UI.WebControls.WebControl.Width%2A>

 使用模板定义控件的外观时 <xref:System.Web.UI.WebControls.Login> ， <xref:System.Web.UI.WebControls.Login.LabelStyle%2A> 属性不起作用。



## Examples
 下面的代码示例通过设置属性所引用的对象的属性，将文本框标签设置为蓝色斜体文本 <xref:System.Web.UI.WebControls.TableItemStyle> <xref:System.Web.UI.WebControls.Login.LabelStyle%2A> 。

 [!code-aspx-csharp[LoginLabelStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/LoginLabelStyle/CS/loginlabelstylecs.aspx#1)]
 [!code-aspx-vb[LoginLabelStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/LoginLabelStyle/VB/loginlabelstylevb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Login.PasswordLabelText" />
        <altmember cref="P:System.Web.UI.WebControls.Login.UserNameLabelText" />
        <altmember cref="T:System.Web.UI.WebControls.TableItemStyle" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms178329(v=vs.100)">ASP.NET 登录控件概述</related>
      </Docs>
    </Member>
    <Member MemberName="LayoutTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate LayoutTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate LayoutTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Login.LayoutTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property LayoutTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ LayoutTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberSignature Language="F#" Value="member this.LayoutTemplate : System.Web.UI.ITemplate with get, set" Usage="System.Web.UI.WebControls.Login.LayoutTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.Login))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.Login))&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置用于显示 <see cref="T:System.Web.UI.WebControls.Login" /> 控件的模板。</summary>
        <value><see cref="T:System.Web.UI.ITemplate" />，包含用于显示 <see cref="T:System.Web.UI.WebControls.Login" /> 控件的模板。 默认值是 <see langword="null" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.Login.LayoutTemplate%2A>属性包含定义 <xref:System.Web.UI.WebControls.Login> 控件如何向用户显示的模板。

 下表列出了控件模板中使用的必选和可选控件 <xref:System.Web.UI.WebControls.Login> 。

|ID 或命令名称|控件类型|必需/可选|
|------------------------|------------------|------------------------|
|`UserName`|任何实现 <xref:System.Web.UI.IEditableTextControl> 、包括 <xref:System.Web.UI.WebControls.TextBox> 或自定义或第三方控件的控件。|必需|
|`Password`|任何实现 <xref:System.Web.UI.IEditableTextControl> 、包括 <xref:System.Web.UI.WebControls.TextBox> 或自定义或第三方控件的控件。|必需|
|`RememberMe`|<xref:System.Web.UI.WebControls.CheckBox>|可选|
|`FailureText`|实现的任何控件 <xref:System.Web.UI.ITextControl> 。|可选|
|`Login`|导致事件冒泡的任何控件。|可选|

 <xref:System.Web.UI.WebControls.Login> <xref:System.Web.HttpException> 如果布局模板不包含所需的控件，则该控件引发异常。 如果将可选控件 ID 赋给错误类型的控件，则不会引发异常;不过，控件随后将忽略该控件 <xref:System.Web.UI.WebControls.Login> 。

 登录控件可以是导致事件冒泡的任何控件，如 <xref:System.Web.UI.WebControls.Button> 、 <xref:System.Web.UI.WebControls.LinkButton> 或 <xref:System.Web.UI.WebControls.ImageButton> 。 控件的命令名称属性必须设置为 "Login"。

 当模板用于 <xref:System.Web.UI.WebControls.Login> 控件时，只有以下属性会影响控件的行为：

-   从继承的所有属性 <xref:System.Web.UI.WebControls.WebControl> 。  (有关详细信息，请参阅 <xref:System.Web.UI.WebControls.Login> 控件成员表。 ) 

-   <xref:System.Web.UI.WebControls.Login.DestinationPageUrl%2A>.

-   <xref:System.Web.UI.WebControls.Login.VisibleWhenLoggedIn%2A>.

-   <xref:System.Web.UI.WebControls.Login.LayoutTemplate%2A>.

-   <xref:System.Web.UI.WebControls.Login.FailureAction%2A>.

-   <xref:System.Web.UI.WebControls.Login.MembershipProvider%2A>.

-   <xref:System.Web.UI.WebControls.Login.Password%2A>.

-   <xref:System.Web.UI.WebControls.Login.RememberMeSet%2A>.

-   <xref:System.Web.UI.WebControls.Login.UserName%2A>.

 如果为控件设置了模板，则所有其他属性都处于非活动状态 <xref:System.Web.UI.WebControls.Login> 。



## Examples
 下面的代码示例为控件创建一个模板 <xref:System.Web.UI.WebControls.Login> 。

> [!IMPORTANT]
>  此示例包含一个文本框，该文本框接受用户输入，这是一个潜在的安全威胁。 默认情况下，ASP.NET 网页验证用户输入是否不包含脚本或 HTML 元素。 有关详细信息，请参阅[脚本侵入概述](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100))。

 [!code-aspx-csharp[LoginLayoutTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/LoginLayoutTemplate/CS/loginlayouttemplatecs.aspx#1)]
 [!code-aspx-vb[LoginLayoutTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/LoginLayoutTemplate/VB/loginlayouttemplatevb.aspx#1)]

 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms178329(v=vs.100)">ASP.NET 登录控件概述</related>
      </Docs>
    </Member>
    <Member MemberName="LoadViewState">
      <MemberSignature Language="C#" Value="protected override void LoadViewState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void LoadViewState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Login.LoadViewState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub LoadViewState (savedState As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void LoadViewState(System::Object ^ savedState);" />
      <MemberSignature Language="F#" Value="override this.LoadViewState : obj -&gt; unit" Usage="login.LoadViewState savedState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState">一个表示要还原的控件状态的对象。</param>
        <summary>从使用 <see cref="M:System.Web.UI.WebControls.WebControl.SaveViewState" /> 方法保存的前一请求还原视图状态信息。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><paramref name="savedState" /> 不是有效的 <see cref="P:System.Web.UI.PageStatePersister.ViewState" />。</exception>
        <altmember cref="M:System.Web.UI.WebControls.WebControl.LoadViewState(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="LoggedIn">
      <MemberSignature Language="C#" Value="public event EventHandler LoggedIn;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler LoggedIn" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.Login.LoggedIn" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event LoggedIn As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ LoggedIn;" />
      <MemberSignature Language="F#" Value="member this.LoggedIn : EventHandler " Usage="member this.LoggedIn : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>在用户登录到网站并进行身份验证后出现。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.Login.LoggedIn>身份验证提供程序检查用户的凭据后，将引发事件，并在下一次响应中将身份验证 cookie 排队等候发送到浏览器。 在 <xref:System.Web.UI.WebControls.Login.LoggedIn> 对用户进行身份验证后，使用事件来提供其他处理，如访问每用户数据。

 当用户提交其登录信息时， <xref:System.Web.UI.WebControls.Login> 控件首先引发 <xref:System.Web.UI.WebControls.Login.LoggingIn> 事件，然后引发事件 <xref:System.Web.UI.WebControls.Login.Authenticate> ，最后引发 <xref:System.Web.UI.WebControls.Login.LoggedIn> 事件。

> [!NOTE]
>  当用户使用 <xref:System.Web.UI.WebControls.Login> 控件登录到网站时，视图状态和所有 post 数据中的所有数据都将丢失。 不要在依赖于视图状态的事件中执行操作 <xref:System.Web.UI.WebControls.Login.LoggedIn> 。

 有关处理事件的详细信息，请参阅 [处理和引发事件](/dotnet/standard/events/)。



## Examples
 下面的代码示例使用 <xref:System.Web.UI.WebControls.Login.LoggedIn> 事件调用保留用户登录记录的特定于站点的方法。

 [!code-aspx-csharp[LoginAfterLogin#1](~/samples/snippets/csharp/VS_Snippets_WebNet/LoginAfterLogin/CS/loginafterlogincs.aspx#1)]
 [!code-aspx-vb[LoginAfterLogin#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/LoginAfterLogin/VB/loginafterloginvb.aspx#1)]

 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms178329(v=vs.100)">ASP.NET 登录控件概述</related>
      </Docs>
    </Member>
    <Member MemberName="LoggingIn">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.LoginCancelEventHandler LoggingIn;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.LoginCancelEventHandler LoggingIn" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.Login.LoggingIn" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event LoggingIn As LoginCancelEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::LoginCancelEventHandler ^ LoggingIn;" />
      <MemberSignature Language="F#" Value="member this.LoggingIn : System.Web.UI.WebControls.LoginCancelEventHandler " Usage="member this.LoggingIn : System.Web.UI.WebControls.LoginCancelEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.LoginCancelEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>在用户未进行身份验证而提交登录信息时出现。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.Login.LoggingIn>当用户提交登录信息，但在网站上对用户进行身份验证之前，将引发事件。 在 <xref:System.Web.UI.WebControls.Login.LoggingIn> 对用户进行身份验证之前，使用事件设置所需的任何信息。

 您可以 <xref:System.Web.UI.WebControls.Login.LoggingIn> 通过将 <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> 对象的属性设置为来取消事件的登录尝试 <xref:System.ComponentModel.CancelEventArgs> `true` 。

 <xref:System.Web.UI.WebControls.Login.LoggingIn>引发事件后， <xref:System.Web.UI.WebControls.Login> 控件引发 <xref:System.Web.UI.WebControls.Login.Authenticate> 事件，然后引发 <xref:System.Web.UI.WebControls.Login.LoggedIn> 事件。

 有关处理事件的详细信息，请参阅 [处理和引发事件](/dotnet/standard/events/)。



## Examples
 下面的代码示例使用 <xref:System.Web.UI.WebControls.Login.LoggingIn> 事件确保用户在属性中输入了格式正确的电子邮件地址 <xref:System.Web.UI.WebControls.Login.UserName%2A> 。 否则，该 <xref:System.Web.UI.WebControls.Login.LoggingIn> 事件将取消登录尝试并使用属性显示错误消息 <xref:System.Web.UI.WebControls.Login.InstructionText%2A> 。

 [!code-aspx-csharp[LoginBeforeLogin#1](~/samples/snippets/csharp/VS_Snippets_WebNet/LoginBeforeLogin/CS/loginbeforelogincs.aspx#1)]
 [!code-aspx-vb[LoginBeforeLogin#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/LoginBeforeLogin/VB/loginbeforeloginvb.aspx#1)]

 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms178329(v=vs.100)">ASP.NET 登录控件概述</related>
      </Docs>
    </Member>
    <Member MemberName="LoginButtonCommandName">
      <MemberSignature Language="C#" Value="public static readonly string LoginButtonCommandName;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string LoginButtonCommandName" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.Login.LoginButtonCommandName" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LoginButtonCommandName As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ LoginButtonCommandName;" />
      <MemberSignature Language="F#" Value=" staticval mutable LoginButtonCommandName : string" Usage="System.Web.UI.WebControls.Login.LoginButtonCommandName" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>表示与登录按钮关联的命令名。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.Login.LoginButtonCommandName> 是一个只读字段，默认值为 "Login"。 此值将传递给 <xref:System.Web.UI.WebControls.Login.OnBubbleEvent%2A> ，如果该值为 "Login"，则控件会尝试登录到当前用户。

 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms178329(v=vs.100)">ASP.NET 登录控件概述</related>
      </Docs>
    </Member>
    <Member MemberName="LoginButtonImageUrl">
      <MemberSignature Language="C#" Value="public virtual string LoginButtonImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LoginButtonImageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Login.LoginButtonImageUrl" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property LoginButtonImageUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ LoginButtonImageUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.LoginButtonImageUrl : string with get, set" Usage="System.Web.UI.WebControls.Login.LoginButtonImageUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue("")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue("")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName Language="C#">[System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.UrlProperty]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.UrlProperty&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置登录按钮使用的图像的 URL。</summary>
        <value>登录按钮使用的图像的 URL。 默认值为 <see cref="F:System.String.Empty" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.Login.LoginButtonImageUrl%2A>属性包含在 <xref:System.Web.UI.WebControls.Login> 属性设置为时呈现为控件登录按钮的图像的 URL <xref:System.Web.UI.WebControls.Login.LoginButtonType%2A> <xref:System.Web.UI.WebControls.ButtonType.Image> 。

 <xref:System.Web.UI.WebControls.Login.LoginButtonText%2A>在不显示图像的浏览器中，属性用作图像的替代文本。



## Examples
 下面的代码示例将 <xref:System.Web.UI.WebControls.Login.LoginButtonImageUrl%2A> 属性设置为图像的 URL。

 [!code-aspx-csharp[LoginSubmitButtonImageUrl#1](~/samples/snippets/csharp/VS_Snippets_WebNet/LoginSubmitButtonImageUrl/CS/loginsubmitbuttonimageurlcs.aspx#1)]
 [!code-aspx-vb[LoginSubmitButtonImageUrl#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/LoginSubmitButtonImageUrl/VB/loginsubmitbuttonimageurlvb.aspx#1)]

 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms178329(v=vs.100)">ASP.NET 登录控件概述</related>
      </Docs>
    </Member>
    <Member MemberName="LoginButtonStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.Style LoginButtonStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.Style LoginButtonStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Login.LoginButtonStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LoginButtonStyle As Style" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::Style ^ LoginButtonStyle { System::Web::UI::WebControls::Style ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LoginButtonStyle : System.Web.UI.WebControls.Style" Usage="System.Web.UI.WebControls.Login.LoginButtonStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(null)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(null)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.NotifyParentProperty(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.NotifyParentProperty(true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Style</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取对 <see cref="T:System.Web.UI.WebControls.Style" /> 对象的引用，该对象允许您设置 <see cref="T:System.Web.UI.WebControls.Login" /> 控件中登录按钮的外观。</summary>
        <value>对表示登录按钮样式的 <see cref="T:System.Web.UI.WebControls.Style" /> 的引用。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 使用 <xref:System.Web.UI.WebControls.Login.LoginButtonStyle%2A> 属性控制控件中 "登录" 按钮的外观 <xref:System.Web.UI.WebControls.Login> 。 此属性是只读的;但是，您可以设置 <xref:System.Web.UI.WebControls.Style> 它返回的对象的属性。 可以在窗体中以声明方式设置这些属性 `Property-Subproperty` ，其中 `Subproperty` 表示类的属性 <xref:System.Web.UI.WebControls.Style> (例如 `LoginButtonStyle-ForeColor`) 。 可以通过编程方式设置属性 `Property.Subproperty` ， (例如 `LoginButtonStyle.ForeColor`) 。

 常见设置包括自定义背景色、文本颜色和字体属性。 <xref:System.Web.UI.WebControls.Login.LoginButtonStyle%2A>属性定义 "登录" 按钮的外观。

 属性的样式设置 <xref:System.Web.UI.WebControls.Login.LoginButtonStyle%2A> 与控件的样式设置合并 <xref:System.Web.UI.WebControls.Login> 。 在属性中进行的任何设置都将 <xref:System.Web.UI.WebControls.Login.LoginButtonStyle%2A> 覆盖控件的属性中的相应设置 <xref:System.Web.UI.WebControls.Login> 。

 以下 <xref:System.Web.UI.WebControls.Login> 样式属性被设置重写 <xref:System.Web.UI.WebControls.Login.LoginButtonStyle%2A> ：

-   <xref:System.Web.UI.WebControls.WebControl.BackColor%2A>

-   <xref:System.Web.UI.WebControls.WebControl.BorderColor%2A>

-   <xref:System.Web.UI.WebControls.WebControl.BorderStyle%2A>

-   <xref:System.Web.UI.WebControls.WebControl.BorderWidth%2A>

-   <xref:System.Web.UI.WebControls.WebControl.Enabled%2A>

-   <xref:System.Web.UI.WebControls.WebControl.Font%2A>

-   <xref:System.Web.UI.WebControls.WebControl.ForeColor%2A>

-   <xref:System.Web.UI.WebControls.WebControl.Height%2A>

-   <xref:System.Web.UI.WebControls.WebControl.ToolTip%2A>

-   <xref:System.Web.UI.Control.Visible%2A>

-   <xref:System.Web.UI.WebControls.WebControl.Width%2A>

 使用模板定义控件的外观时 <xref:System.Web.UI.WebControls.Login> ， <xref:System.Web.UI.WebControls.Login.LoginButtonStyle%2A> 属性不起作用。



## Examples
 下面的代码示例使用 <xref:System.Web.UI.WebControls.Login.LoginButtonStyle%2A> 属性定义 <xref:System.Web.UI.WebControls.Login> 控件登录按钮的外观。

 [!code-aspx-csharp[LoginButtonStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/LoginButtonStyle/CS/loginbuttonstylecs.aspx#1)]
 [!code-aspx-vb[LoginButtonStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/LoginButtonStyle/VB/loginbuttonstylevb.aspx#1)]

 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms178329(v=vs.100)">ASP.NET 登录控件概述</related>
      </Docs>
    </Member>
    <Member MemberName="LoginButtonText">
      <MemberSignature Language="C#" Value="public virtual string LoginButtonText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LoginButtonText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Login.LoginButtonText" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property LoginButtonText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ LoginButtonText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.LoginButtonText : string with get, set" Usage="System.Web.UI.WebControls.Login.LoginButtonText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Localizable(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Localizable(true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置 <see cref="T:System.Web.UI.WebControls.Login" /> 控件的登录按钮的文本。</summary>
        <value>用于 <see cref="T:System.Web.UI.WebControls.Login" /> 控件的登录按钮的文本。 默认值为“Login”。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.Login.LoginButtonText%2A>属性包含为 <xref:System.Web.UI.WebControls.Login> 控件的登录按钮显示的文本。 根据属性的值 <xref:System.Web.UI.WebControls.Login.LoginButtonType%2A> ， <xref:System.Web.UI.WebControls.Login.LoginButtonText%2A> 属性可以作为按钮上的文本出现，作为在不呈现图像的浏览器中显示为图像的替代文本，或显示为链接的文本。 下表描述不同 <xref:System.Web.UI.WebControls.Login.LoginButtonType%2A> 值如何影响 <xref:System.Web.UI.WebControls.Login.LoginButtonText%2A> 属性。

|<xref:System.Web.UI.WebControls.Login.LoginButtonType%2A> 设置|如何 <xref:System.Web.UI.WebControls.Login.LoginButtonText%2A> 使用属性。|
|----------------------------------------------------------------------------------------------------------------------------------------------------------------------|----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
|<xref:System.Web.UI.WebControls.ButtonType.Button>|作为按钮的 `Text` 属性。|
|<xref:System.Web.UI.WebControls.ButtonType.Image>|作为图像的替代文本。|
|<xref:System.Web.UI.WebControls.ButtonType.Link>|作为链接文本。|

 控件的默认文本根据服务器当前的区域设置进行本地化。

 设置此属性后，可以使用设计器工具自动将此属性的值保存到资源文件中。 有关详细信息，请参阅 <xref:System.ComponentModel.LocalizableAttribute> 和 [全球化和本地化](https://docs.microsoft.com/previous-versions/aspnet/c6zyy3s9(v=vs.100))。



## Examples
 下面的代码示例演示属性中的文本如何 <xref:System.Web.UI.WebControls.Login.LoginButtonText%2A> 受属性的值的影响 <xref:System.Web.UI.WebControls.Login.LoginButtonType%2A> 。

> [!IMPORTANT]
>  此示例包含一个文本框，该文本框接受用户输入，这是一个潜在的安全威胁。 默认情况下，ASP.NET 网页验证用户输入是否不包含脚本或 HTML 元素。 有关详细信息，请参阅[脚本侵入概述](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100))。

 [!code-aspx-csharp[LoginButtonType#1](~/samples/snippets/csharp/VS_Snippets_WebNet/LoginButtonType/CS/loginbuttontypecs.aspx#1)]
 [!code-aspx-vb[LoginButtonType#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/LoginButtonType/VB/loginbuttontypevb.aspx#1)]

 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms178329(v=vs.100)">ASP.NET 登录控件概述</related>
      </Docs>
    </Member>
    <Member MemberName="LoginButtonType">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.ButtonType LoginButtonType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.ButtonType LoginButtonType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Login.LoginButtonType" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property LoginButtonType As ButtonType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::ButtonType LoginButtonType { System::Web::UI::WebControls::ButtonType get(); void set(System::Web::UI::WebControls::ButtonType value); };" />
      <MemberSignature Language="F#" Value="member this.LoginButtonType : System.Web.UI.WebControls.ButtonType with get, set" Usage="System.Web.UI.WebControls.Login.LoginButtonType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ButtonType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置在呈现 <see cref="T:System.Web.UI.WebControls.Login" /> 按钮时使用的按钮类型。</summary>
        <value><see cref="T:System.Web.UI.WebControls.ButtonType" /> 枚举值之一。 默认值为 <see cref="F:System.Web.UI.WebControls.ButtonType.Button" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.Login.LoginButtonType%2A>属性确定要用于 <xref:System.Web.UI.WebControls.Login> 控件的登录按钮的按钮类型。 下表描述了不同的按钮类型。

|<xref:System.Web.UI.WebControls.Login.LoginButtonType%2A> 设置|呈现的按钮类型|
|----------------------------------------------------------------------------------------------------------------------------------------------------------------------|-----------------------------|
|<xref:System.Web.UI.WebControls.ButtonType.Button>|一个 HTML 按钮，其中包含属性中指定的文本 <xref:System.Web.UI.WebControls.Login.LoginButtonText%2A> 。|
|<xref:System.Web.UI.WebControls.ButtonType.Image>|图像。 图像的 URL 在属性中指定 <xref:System.Web.UI.WebControls.Login.LoginButtonImageUrl%2A> 。 属性中指定的字符串用作 <xref:System.Web.UI.WebControls.Login.LoginButtonText%2A> 图像的替代文本。|
|<xref:System.Web.UI.WebControls.ButtonType.Link>|具有属性中指定的文本的 HTML 链接 <xref:System.Web.UI.WebControls.Login.LoginButtonText%2A> 。|

 当 <xref:System.Web.UI.WebControls.Login.LoginButtonType%2A> 属性设置为或时 <xref:System.Web.UI.WebControls.ButtonType.Button> <xref:System.Web.UI.WebControls.ButtonType.Link> ，将忽略属性的内容 <xref:System.Web.UI.WebControls.Login.LoginButtonImageUrl%2A> 。



## Examples
 下面的代码示例演示可用于控件的登录按钮的不同类型 <xref:System.Web.UI.WebControls.Login> 。

> [!IMPORTANT]
>  此示例包含一个文本框，该文本框接受用户输入，这是一个潜在的安全威胁。 默认情况下，ASP.NET 网页验证用户输入是否不包含脚本或 HTML 元素。 有关详细信息，请参阅[脚本侵入概述](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100))。

 [!code-aspx-csharp[LoginButtonType#1](~/samples/snippets/csharp/VS_Snippets_WebNet/LoginButtonType/CS/loginbuttontypecs.aspx#1)]
 [!code-aspx-vb[LoginButtonType#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/LoginButtonType/VB/loginbuttontypevb.aspx#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">未将 <see cref="P:System.Web.UI.WebControls.Login.LoginButtonType" /> 属性设置为有效的 <see cref="T:System.Web.UI.WebControls.ButtonType" /> 枚举值。</exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms178329(v=vs.100)">ASP.NET 登录控件概述</related>
      </Docs>
    </Member>
    <Member MemberName="LoginError">
      <MemberSignature Language="C#" Value="public event EventHandler LoginError;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler LoginError" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.Login.LoginError" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event LoginError As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ LoginError;" />
      <MemberSignature Language="F#" Value="member this.LoginError : EventHandler " Usage="member this.LoginError : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>当检测到登录错误时出现。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.Login.LoginError>当用户输入的凭据无效时，将引发事件。 您可以使用 <xref:System.Web.UI.WebControls.Login.LoginError> 事件将用户重定向到自定义错误页、提供额外的帮助或记录失败的登录尝试。

 有关如何处理事件的详细信息，请参阅 [处理和引发事件](/dotnet/standard/events/)。



## Examples
 下面的代码示例使用 <xref:System.Web.UI.WebControls.Login.LoginError> 事件显示登录尝试失败时用户的帮助链接。

 [!code-aspx-csharp[LoginLoginError#1](~/samples/snippets/csharp/VS_Snippets_WebNet/LoginLoginError/CS/loginloginerrorcs.aspx#1)]
 [!code-aspx-vb[LoginLoginError#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/LoginLoginError/VB/loginloginerrorvb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.Login.OnLoginError(System.EventArgs)" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms178329(v=vs.100)">ASP.NET 登录控件概述</related>
      </Docs>
    </Member>
    <Member MemberName="MembershipProvider">
      <MemberSignature Language="C#" Value="public virtual string MembershipProvider { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MembershipProvider" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Login.MembershipProvider" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property MembershipProvider As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ MembershipProvider { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.MembershipProvider : string with get, set" Usage="System.Web.UI.WebControls.Login.MembershipProvider" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue("")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue("")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.Themeable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.Themeable(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置控件使用的成员资格数据提供程序的名称。</summary>
        <value>控件使用的成员资格数据提供程序的名称。 默认值为 <see cref="F:System.String.Empty" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.Login.MembershipProvider%2A>属性包含为控件提供身份验证信息的数据提供程序的名称 <xref:System.Web.UI.WebControls.Login> 。 有效的成员资格提供程序名称是在 `<membership>` 应用程序的 Machine.config 或 Web.config 文件中的元素中定义的。

 如果未设置 <xref:System.Web.UI.WebControls.Login.MembershipProvider%2A> 属性，它将始终返回 <xref:System.String.Empty> 。

 有关更多信息，请参见 <xref:System.Web.Security.Membership> 类。

 无法通过主题或样式表主题设置此属性。 有关详细信息，请参阅 <xref:System.Web.UI.ThemeableAttribute> 和 [ASP.NET 主题和外观](https://docs.microsoft.com/previous-versions/aspnet/ykzx33wh(v=vs.100))。

 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms178329(v=vs.100)">ASP.NET 登录控件概述</related>
      </Docs>
    </Member>
    <Member MemberName="OnAuthenticate">
      <MemberSignature Language="C#" Value="protected virtual void OnAuthenticate (System.Web.UI.WebControls.AuthenticateEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnAuthenticate(class System.Web.UI.WebControls.AuthenticateEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Login.OnAuthenticate(System.Web.UI.WebControls.AuthenticateEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnAuthenticate (e As AuthenticateEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnAuthenticate(System::Web::UI::WebControls::AuthenticateEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnAuthenticate : System.Web.UI.WebControls.AuthenticateEventArgs -&gt; unit&#xA;override this.OnAuthenticate : System.Web.UI.WebControls.AuthenticateEventArgs -&gt; unit" Usage="login.OnAuthenticate e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.AuthenticateEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件数据的 <see cref="T:System.Web.UI.WebControls.AuthenticateEventArgs" />。</param>
        <summary>引发 <see cref="E:System.Web.UI.WebControls.Login.Authenticate" /> 事件以验证用户身份。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.Login.OnAuthenticate%2A> 方法引发 <xref:System.Web.UI.WebControls.Login.Authenticate> 事件。 使用 <xref:System.Web.UI.WebControls.Login.Authenticate> 事件可实现自定义身份验证方案。

 引发事件时，将通过委托调用事件处理程序。 有关详细信息，请参阅 [处理和引发事件](/dotnet/standard/events/)。

 <xref:System.Web.UI.WebControls.Login.OnAuthenticate%2A> 方法还允许派生类对事件进行处理而不必附加委托。 这是在派生类中处理事件的首选技术。



## Examples
 下面的代码示例使用 <xref:System.Web.UI.WebControls.Login.Authenticate> 事件来调用特定于站点的自定义身份验证代码。

 [!code-aspx-csharp[LoginOnAuthenticate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/LoginOnAuthenticate/CS/loginonauthenticatecs.aspx#1)]
 [!code-aspx-vb[LoginOnAuthenticate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/LoginOnAuthenticate/VB/loginonauthenticatevb.aspx#1)]

 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>在派生类中重写 <see cref="M:System.Web.UI.WebControls.Login.OnAuthenticate(System.Web.UI.WebControls.AuthenticateEventArgs)" /> 时，一定要调用基类的 <see cref="M:System.Web.UI.WebControls.Login.OnAuthenticate(System.Web.UI.WebControls.AuthenticateEventArgs)" /> 方法，以便已注册的委托对事件进行接收。</para></block>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms178329(v=vs.100)">ASP.NET 登录控件概述</related>
      </Docs>
    </Member>
    <Member MemberName="OnBubbleEvent">
      <MemberSignature Language="C#" Value="protected override bool OnBubbleEvent (object source, EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool OnBubbleEvent(object source, class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Login.OnBubbleEvent(System.Object,System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function OnBubbleEvent (source As Object, e As EventArgs) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool OnBubbleEvent(System::Object ^ source, EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnBubbleEvent : obj * EventArgs -&gt; bool" Usage="login.OnBubbleEvent (source, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Object" />
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="source">事件源。</param>
        <param name="e">一个包含事件数据的 <see cref="T:System.EventArgs" />。</param>
        <summary>确定是否将事件沿页面的用户界面 (UI) 服务器控件层次结构向上传递。</summary>
        <returns>如果事件已被取消，则为 <see langword="true" />；否则为 <see langword="false" />。 默认值为 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.Login.OnBubbleEvent%2A>方法实现 <xref:System.Web.UI.Control.OnBubbleEvent%2A?displayProperty=nameWithType> 方法，以将事件从子控件传递到页层次结构。

 如果通过 "控件登录" 按钮发布当前事件 <xref:System.Web.UI.WebControls.Login> ，则 <xref:System.Web.UI.WebControls.Login> 控件将尝试登录到网站。 否则，该事件将向上传递页面控件层次结构。

 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>在派生类中重写 <see cref="M:System.Web.UI.WebControls.Login.OnBubbleEvent(System.Object,System.EventArgs)" /> 时，一定要调用基类的 <see cref="M:System.Web.UI.WebControls.Login.OnBubbleEvent(System.Object,System.EventArgs)" /> 方法，以便已注册的委托对事件进行接收。</para></block>
        <altmember cref="M:System.Web.UI.Control.OnBubbleEvent(System.Object,System.EventArgs)" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms178329(v=vs.100)">ASP.NET 登录控件概述</related>
      </Docs>
    </Member>
    <Member MemberName="OnLoggedIn">
      <MemberSignature Language="C#" Value="protected virtual void OnLoggedIn (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnLoggedIn(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Login.OnLoggedIn(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnLoggedIn (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnLoggedIn(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnLoggedIn : EventArgs -&gt; unit&#xA;override this.OnLoggedIn : EventArgs -&gt; unit" Usage="login.OnLoggedIn e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件数据的 <see cref="T:System.EventArgs" />。</param>
        <summary>在用户登录到网站并已进行身份验证后引发 <see cref="E:System.Web.UI.WebControls.Login.LoggedIn" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.Login.OnLoggedIn%2A> 方法引发 <xref:System.Web.UI.WebControls.Login.LoggedIn> 事件。 在 <xref:System.Web.UI.WebControls.Login.LoggedIn> 对用户进行身份验证后，使用事件来提供其他处理，如访问每用户数据。

 引发事件时，将通过委托调用事件处理程序。 有关详细信息，请参阅 [处理和引发事件](/dotnet/standard/events/)。

 <xref:System.Web.UI.WebControls.Login.OnLoggedIn%2A> 方法还允许派生类对事件进行处理而不必附加委托。 这是在派生类中处理事件的首选技术。



## Examples
 下面的代码示例使用 <xref:System.Web.UI.WebControls.Login.LoggedIn> 事件调用保留用户登录记录的特定于站点的方法。

 [!code-aspx-csharp[LoginOnAfterLogin#1](~/samples/snippets/csharp/VS_Snippets_WebNet/LoginOnAfterLogin/CS/loginonafterlogincs.aspx#1)]
 [!code-aspx-vb[LoginOnAfterLogin#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/LoginOnAfterLogin/VB/loginonafterloginvb.aspx#1)]

 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>在派生类中重写 <see cref="M:System.Web.UI.WebControls.Login.OnLoggedIn(System.EventArgs)" /> 时，一定要调用基类的 <see cref="M:System.Web.UI.WebControls.Login.OnLoggedIn(System.EventArgs)" /> 方法，以便已注册的委托对事件进行接收。</para></block>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms178329(v=vs.100)">ASP.NET 登录控件概述</related>
      </Docs>
    </Member>
    <Member MemberName="OnLoggingIn">
      <MemberSignature Language="C#" Value="protected virtual void OnLoggingIn (System.Web.UI.WebControls.LoginCancelEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnLoggingIn(class System.Web.UI.WebControls.LoginCancelEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Login.OnLoggingIn(System.Web.UI.WebControls.LoginCancelEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnLoggingIn (e As LoginCancelEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnLoggingIn(System::Web::UI::WebControls::LoginCancelEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnLoggingIn : System.Web.UI.WebControls.LoginCancelEventArgs -&gt; unit&#xA;override this.OnLoggingIn : System.Web.UI.WebControls.LoginCancelEventArgs -&gt; unit" Usage="login.OnLoggingIn e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.LoginCancelEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件数据的 <see cref="T:System.Web.UI.WebControls.LoginCancelEventArgs" />。</param>
        <summary>在用户提交登录信息但进行身份验证前引发 <see cref="E:System.Web.UI.WebControls.Login.LoggingIn" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.Login.OnLoggingIn%2A> 方法引发 <xref:System.Web.UI.WebControls.Login.LoggingIn> 事件。 在对 <xref:System.Web.UI.WebControls.Login.LoggingIn> 用户进行身份验证或执行自定义验证之前，可以使用事件来执行任何所需的处理。

 引发事件时，将通过委托调用事件处理程序。 有关详细信息，请参阅 [处理和引发事件](/dotnet/standard/events/)。

 <xref:System.Web.UI.WebControls.Login.OnLoggingIn%2A> 方法还允许派生类对事件进行处理而不必附加委托。 这是在派生类中处理事件的首选技术。



## Examples
 下面的代码示例使用 <xref:System.Web.UI.WebControls.Login.LoggingIn> 事件确保用户在属性中输入了格式正确的电子邮件地址 <xref:System.Web.UI.WebControls.Login.UserName%2A> 。 否则， <xref:System.Web.UI.WebControls.Login.LoggingIn> 事件处理程序将取消登录尝试并显示属性中指定的错误消息 <xref:System.Web.UI.WebControls.Login.InstructionText%2A> 。

 [!code-aspx-csharp[LoginOnBeforeLogin#1](~/samples/snippets/csharp/VS_Snippets_WebNet/LoginOnBeforeLogin/CS/loginonbeforelogincs.aspx#1)]
 [!code-aspx-vb[LoginOnBeforeLogin#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/LoginOnBeforeLogin/VB/loginonbeforeloginvb.aspx#1)]

 下面的代码示例演示如何扩展 <xref:System.Web.UI.WebControls.Login> 控件。 `CustomLogin`控件包含一个 <xref:System.Web.UI.WebControls.DropDownList> 控件，该控件使用户可以选择要使用其进行身份验证的成员资格提供程序。  (在 ) Web.config 中配置这些提供程序 <xref:System.Web.UI.WebControls.Login.OnLoggingIn%2A> ，则 <xref:System.Web.UI.WebControls.Login.MembershipProvider%2A> 属性设置为控件的选定值 <xref:System.Web.UI.WebControls.DropDownList> 。

> [!IMPORTANT]
>  此示例包含一个文本框，该文本框接受用户输入，这是一个潜在的安全威胁。 默认情况下，ASP.NET 网页验证用户输入是否不包含脚本或 HTML 元素。 有关详细信息，请参阅[脚本侵入概述](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100))。

 [!code-csharp[Samples.AspNet.Controls.CustomLogin#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Samples.AspNet.Controls.CustomLogin/CS/FarmasLogin.cs#1)]
 [!code-vb[Samples.AspNet.Controls.CustomLogin#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Samples.AspNet.Controls.CustomLogin/VB/FarmasLogin.vb#1)]

 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>在派生类中重写 <see cref="M:System.Web.UI.WebControls.Login.OnLoggingIn(System.Web.UI.WebControls.LoginCancelEventArgs)" /> 时，一定要调用基类的 <see cref="M:System.Web.UI.WebControls.Login.OnLoggingIn(System.Web.UI.WebControls.LoginCancelEventArgs)" /> 方法，以便已注册的委托对事件进行接收。</para></block>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms178329(v=vs.100)">ASP.NET 登录控件概述</related>
      </Docs>
    </Member>
    <Member MemberName="OnLoginError">
      <MemberSignature Language="C#" Value="protected virtual void OnLoginError (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnLoginError(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Login.OnLoginError(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnLoginError (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnLoginError(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnLoginError : EventArgs -&gt; unit&#xA;override this.OnLoginError : EventArgs -&gt; unit" Usage="login.OnLoginError e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件数据的 <see cref="T:System.EventArgs" />。</param>
        <summary>当登录尝试失败时引发 <see cref="E:System.Web.UI.WebControls.Login.LoginError" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.Login.OnLoginError%2A> 方法引发 <xref:System.Web.UI.WebControls.Login.LoginError> 事件。 <xref:System.Web.UI.WebControls.Login.LoginError>当用户的登录尝试失败时，可以使用事件来提供其他处理，如错误日志记录。

 引发事件时，将通过委托调用事件处理程序。 有关详细信息，请参阅 [处理和引发事件](/dotnet/standard/events/)。

 <xref:System.Web.UI.WebControls.Login.OnLoginError%2A> 方法还允许派生类对事件进行处理而不必附加委托。 这是在派生类中处理事件的首选技术。



## Examples
 下面的代码示例使用 <xref:System.Web.UI.WebControls.Login.LoginError> 事件显示登录尝试失败时用户的帮助链接。

 [!code-aspx-csharp[LoginOnLoginError#1](~/samples/snippets/csharp/VS_Snippets_WebNet/LoginOnLoginError/CS/loginonloginerrorcs.aspx#1)]
 [!code-aspx-vb[LoginOnLoginError#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/LoginOnLoginError/VB/loginonloginerrorvb.aspx#1)]

 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>在派生类中重写 <see cref="M:System.Web.UI.WebControls.Login.OnLoginError(System.EventArgs)" /> 时，一定要调用基类的 <see cref="M:System.Web.UI.WebControls.Login.OnLoginError(System.EventArgs)" /> 方法，以便已注册的委托对事件进行接收。</para></block>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms178329(v=vs.100)">ASP.NET 登录控件概述</related>
      </Docs>
    </Member>
    <Member MemberName="OnPreRender">
      <MemberSignature Language="C#" Value="protected internal override void OnPreRender (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnPreRender(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Login.OnPreRender(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnPreRender (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnPreRender(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnPreRender : EventArgs -&gt; unit" Usage="login.OnPreRender e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件数据的 <see cref="T:System.EventArgs" />。</param>
        <summary>实现基 <see cref="M:System.Web.UI.Control.OnPreRender(System.EventArgs)" /> 方法。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.Login.OnPreRender%2A>方法实现 <xref:System.Web.UI.Control.OnPreRender%2A?displayProperty=nameWithType> 方法，以通知 <xref:System.Web.UI.WebControls.Login> 控件在保存视图状态和呈现内容之前执行任何必需的预呈现步骤。

 引发事件时，将通过委托调用事件处理程序。 有关详细信息，请参阅 [处理和引发事件](/dotnet/standard/events/)。

 <xref:System.Web.UI.WebControls.Login.OnPreRender%2A> 方法还允许派生类对事件进行处理而不必附加委托。 这是在派生类中处理事件的首选技术。

 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>在派生类中重写 <see cref="M:System.Web.UI.WebControls.Login.OnPreRender(System.EventArgs)" /> 时，一定要调用基类的 <see cref="M:System.Web.UI.WebControls.Login.OnPreRender(System.EventArgs)" /> 方法，以便已注册的委托对事件进行接收。</para></block>
        <altmember cref="M:System.Web.UI.Control.OnPreRender(System.EventArgs)" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms178329(v=vs.100)">ASP.NET 登录控件概述</related>
      </Docs>
    </Member>
    <Member MemberName="Orientation">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.Orientation Orientation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.Orientation Orientation" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Login.Orientation" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Orientation As Orientation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::Orientation Orientation { System::Web::UI::WebControls::Orientation get(); void set(System::Web::UI::WebControls::Orientation value); };" />
      <MemberSignature Language="F#" Value="member this.Orientation : System.Web.UI.WebControls.Orientation with get, set" Usage="System.Web.UI.WebControls.Login.Orientation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Orientation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指定页面上 <see cref="T:System.Web.UI.WebControls.Login" /> 控件的元素的位置。</summary>
        <value><see cref="T:System.Web.UI.WebControls.Orientation" /> 枚举值之一。 默认值为 <see cref="F:System.Web.UI.WebControls.Orientation.Vertical" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.Login.Orientation%2A>属性确定是以 <xref:System.Web.UI.WebControls.Login> 垂直格式显示控件、在文本输入字段上方显示 <xref:System.Web.UI.WebControls.Login.UserName%2A> 文本输入字段还是以水平格式显示控件，以及文本输入字段 <xref:System.Web.UI.WebControls.Login.Password%2A> <xref:System.Web.UI.WebControls.Login.UserName%2A> 旁边的文本 <xref:System.Web.UI.WebControls.Login.Password%2A> 输入字段。



## Examples
 下面的代码示例演示更改属性的效果 <xref:System.Web.UI.WebControls.Login.Orientation%2A> 。

 [!code-aspx-csharp[LoginLoginLayout#1](~/samples/snippets/csharp/VS_Snippets_WebNet/LoginLoginLayout/CS/loginloginlayoutcs.aspx#1)]
 [!code-aspx-vb[LoginLoginLayout#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/LoginLoginLayout/VB/loginloginlayoutvb.aspx#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">未将 <see cref="P:System.Web.UI.WebControls.Login.Orientation" /> 属性设置为有效的 <see cref="T:System.Web.UI.WebControls.Orientation" /> 枚举值。</exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms178329(v=vs.100)">ASP.NET 登录控件概述</related>
      </Docs>
    </Member>
    <Member MemberName="Password">
      <MemberSignature Language="C#" Value="public virtual string Password { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Password" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Login.Password" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Password As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Password { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Password : string" Usage="System.Web.UI.WebControls.Login.Password" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取用户输入的密码。</summary>
        <value>用户输入的密码。 默认值为 <see langword="null" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.Login.Password%2A>属性包含用户输入的密码。 密码为明文形式。 有关详细信息，请参阅 [Web 应用程序的基本安全实践](https://docs.microsoft.com/previous-versions/aspnet/zdh19h94(v=vs.100))。

> [!NOTE]
>  如果 <xref:System.Web.UI.WebControls.Login.UserName%2A> <xref:System.Web.UI.WebControls.Login.Password%2A> 以编程方式操作或属性，则必须在页生命周期的正确时间执行此操作。 和的值 <xref:System.Web.UI.WebControls.Login.UserName%2A> 在 <xref:System.Web.UI.WebControls.Login.Password%2A> 阶段中不可用，但在阶段中是不可用的 `Page_Load` `Pre_Render` 。

 <xref:System.Web.UI.WebControls.Login> 文本框（如和）表示的控件属性 <xref:System.Web.UI.WebControls.Login.UserName%2A> <xref:System.Web.UI.WebControls.Login.Password%2A> 可在页面生命周期的所有阶段中访问。 控件将通过文本框触发的事件选取最终用户所做的任何更改 <xref:System.Web.UI.WebControls.TextBox.TextChanged> 。



## Examples
 下面的代码示例将 <xref:System.Web.UI.WebControls.Login.Password%2A> 属性传递给自定义身份验证方法。

 [!code-aspx-csharp[LoginAuthenticate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/LoginAuthenticate/CS/loginauthenticatecs.aspx#1)]
 [!code-aspx-vb[LoginAuthenticate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/LoginAuthenticate/VB/loginauthenticatevb.aspx#1)]

 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms178329(v=vs.100)">ASP.NET 登录控件概述</related>
      </Docs>
    </Member>
    <Member MemberName="PasswordLabelText">
      <MemberSignature Language="C#" Value="public virtual string PasswordLabelText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PasswordLabelText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Login.PasswordLabelText" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property PasswordLabelText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ PasswordLabelText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PasswordLabelText : string with get, set" Usage="System.Web.UI.WebControls.Login.PasswordLabelText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Localizable(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Localizable(true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置 <see cref="P:System.Web.UI.WebControls.Login.Password" /> 文本框的标签文本。</summary>
        <value><see cref="P:System.Web.UI.WebControls.Login.Password" /> 文本框的标签文本。 默认值为“Password:”。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.Login.PasswordLabelText%2A>属性包含文本框的标签文本 <xref:System.Web.UI.WebControls.Login.Password%2A> 。

 <xref:System.Web.UI.WebControls.Login.TextLayout%2A>属性定义字段标签的位置。

 控件的默认文本根据服务器当前的区域设置进行本地化。

 设置此属性后，可以使用设计器工具自动将此属性的值保存到资源文件中。 有关详细信息，请参阅 <xref:System.ComponentModel.LocalizableAttribute> 和 [全球化和本地化](https://docs.microsoft.com/previous-versions/aspnet/c6zyy3s9(v=vs.100))。



## Examples
 下面的代码示例将 <xref:System.Web.UI.WebControls.Login.PasswordLabelText%2A> 属性设置为 "User Password："。

 [!code-aspx-csharp[LoginLabelText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/LoginLabelText/CS/loginlabeltextcs.aspx#1)]
 [!code-aspx-vb[LoginLabelText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/LoginLabelText/VB/loginlabeltextvb.aspx#1)]

 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms178329(v=vs.100)">ASP.NET 登录控件概述</related>
      </Docs>
    </Member>
    <Member MemberName="PasswordRecoveryIconUrl">
      <MemberSignature Language="C#" Value="public virtual string PasswordRecoveryIconUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PasswordRecoveryIconUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Login.PasswordRecoveryIconUrl" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property PasswordRecoveryIconUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ PasswordRecoveryIconUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PasswordRecoveryIconUrl : string with get, set" Usage="System.Web.UI.WebControls.Login.PasswordRecoveryIconUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue("")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue("")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName Language="C#">[System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.UrlProperty]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.UrlProperty&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取显示在密码恢复页链接旁边的图像的位置。</summary>
        <value>要显示的图像的 URL。 默认值为 <see cref="F:System.String.Empty" />。</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.UI.WebControls.Login.PasswordRecoveryIconUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Login.PasswordRecoveryText" />
        <altmember cref="P:System.Web.UI.WebControls.Login.PasswordRecoveryUrl" />
        <altmember cref="T:System.Web.UI.WebControls.PasswordRecovery" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms178329(v=vs.100)">ASP.NET 登录控件概述</related>
      </Docs>
    </Member>
    <Member MemberName="PasswordRecoveryText">
      <MemberSignature Language="C#" Value="public virtual string PasswordRecoveryText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PasswordRecoveryText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Login.PasswordRecoveryText" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property PasswordRecoveryText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ PasswordRecoveryText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PasswordRecoveryText : string with get, set" Usage="System.Web.UI.WebControls.Login.PasswordRecoveryText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue("")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue("")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Localizable(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Localizable(true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置密码恢复页链接的文本。</summary>
        <value>密码恢复页链接的文本。 默认值为 <see cref="F:System.String.Empty" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.Login.PasswordRecoveryText%2A>属性包含指向站点的密码恢复页的链接的文本。 密码恢复页的 URL 在属性中指定 <xref:System.Web.UI.WebControls.Login.PasswordRecoveryUrl%2A> 。

 如果 <xref:System.Web.UI.WebControls.Login.PasswordRecoveryUrl%2A> 为空，则将 <xref:System.Web.UI.WebControls.Login.PasswordRecoveryText%2A> 向用户显示该属性中的文本，但不会将其格式化为链接。

 如果该 <xref:System.Web.UI.WebControls.Login.PasswordRecoveryText%2A> 属性为空，则用户无法使用 "密码恢复" 页的链接。

 设置此属性后，可以使用设计器工具自动将此属性的值保存到资源文件中。 有关详细信息，请参阅 <xref:System.ComponentModel.LocalizableAttribute> 和 [全球化和本地化](https://docs.microsoft.com/previous-versions/aspnet/c6zyy3s9(v=vs.100))。



## Examples
 下面的代码示例将 <xref:System.Web.UI.WebControls.Login.PasswordRecoveryText%2A> 属性设置为指定指向网站密码恢复页的链接的文本。 该示例显示一个登录窗体，并设置 <xref:System.Web.UI.WebControls.Login.PasswordRecoveryUrl%2A> 和 <xref:System.Web.UI.WebControls.Login.PasswordRecoveryText%2A> 属性。 如果用户单击 "忘记了密码"，则将显示 getPass 页。

 [!code-aspx-csharp[LoginPasswordRecoveryText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/LoginPasswordRecoveryText/CS/loginpasswordrecoverytextcs.aspx#1)]
 [!code-aspx-vb[LoginPasswordRecoveryText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/LoginPasswordRecoveryText/VB/loginpasswordrecoverytextvb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Login.PasswordRecoveryIconUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Login.PasswordRecoveryText" />
        <altmember cref="P:System.Web.UI.WebControls.Login.PasswordRecoveryUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Login.HyperLinkStyle" />
        <altmember cref="T:System.Web.UI.WebControls.PasswordRecovery" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms178329(v=vs.100)">ASP.NET 登录控件概述</related>
      </Docs>
    </Member>
    <Member MemberName="PasswordRecoveryUrl">
      <MemberSignature Language="C#" Value="public virtual string PasswordRecoveryUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PasswordRecoveryUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Login.PasswordRecoveryUrl" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property PasswordRecoveryUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ PasswordRecoveryUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PasswordRecoveryUrl : string with get, set" Usage="System.Web.UI.WebControls.Login.PasswordRecoveryUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue("")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue("")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName Language="C#">[System.ComponentModel.Editor("System.Web.UI.Design.UrlEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Editor("System.Web.UI.Design.UrlEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.UrlProperty]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.UrlProperty&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.Editor("System.Web.UI.Design.UrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Editor("System.Web.UI.Design.UrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置密码恢复页的 URL。</summary>
        <value>密码恢复页的 URL。 默认值为 <see cref="F:System.String.Empty" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.Login.PasswordRecoveryUrl%2A>属性包含网站的密码恢复页的 URL。 <xref:System.Web.UI.WebControls.Login.PasswordRecoveryText%2A>属性包含用于链接的文本。

 如果该 <xref:System.Web.UI.WebControls.Login.PasswordRecoveryText%2A> 属性为空，则用户无法使用 "密码恢复" 页的链接。



## Examples
 下面的示例代码使用 <xref:System.Web.UI.WebControls.Login.PasswordRecoveryUrl%2A> 属性指定网站的密码恢复页的 URL。 该示例显示一个登录窗体，并设置 <xref:System.Web.UI.WebControls.Login.PasswordRecoveryUrl%2A> 和 <xref:System.Web.UI.WebControls.Login.PasswordRecoveryText%2A> 属性。 如果用户单击 "忘记了密码"，则将显示 getPass 页。

 [!code-aspx-csharp[LoginPasswordRecoveryText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/LoginPasswordRecoveryText/CS/loginpasswordrecoverytextcs.aspx#1)]
 [!code-aspx-vb[LoginPasswordRecoveryText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/LoginPasswordRecoveryText/VB/loginpasswordrecoverytextvb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Login.PasswordRecoveryIconUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Login.PasswordRecoveryText" />
        <altmember cref="P:System.Web.UI.WebControls.Login.PasswordRecoveryUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Login.HyperLinkStyle" />
        <altmember cref="T:System.Web.UI.WebControls.PasswordRecovery" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms178329(v=vs.100)">ASP.NET 登录控件概述</related>
      </Docs>
    </Member>
    <Member MemberName="PasswordRequiredErrorMessage">
      <MemberSignature Language="C#" Value="public virtual string PasswordRequiredErrorMessage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PasswordRequiredErrorMessage" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Login.PasswordRequiredErrorMessage" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property PasswordRequiredErrorMessage As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ PasswordRequiredErrorMessage { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PasswordRequiredErrorMessage : string with get, set" Usage="System.Web.UI.WebControls.Login.PasswordRequiredErrorMessage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Localizable(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Localizable(true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置当密码字段为空时在 <see cref="T:System.Web.UI.WebControls.ValidationSummary" /> 控件中显示的错误消息。</summary>
        <value>当密码字段为空时，在 <see cref="T:System.Web.UI.WebControls.ValidationSummary" /> 控件中显示的错误消息。 默认值为“密码”。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.Login.PasswordRequiredErrorMessage%2A>属性包含在登录页上的控件中显示的错误消息 <xref:System.Web.UI.WebControls.ValidationSummary> 。

 <xref:System.Web.UI.WebControls.Login.PasswordRequiredErrorMessage%2A>仅当以下两个条件都为 true 时，才显示属性值：

-   <xref:System.Web.UI.WebControls.ValidationSummary>页面上有一个控件。

-   用户将 "密码" 文本框留空。

 属性的默认文本根据服务器当前的区域设置进行本地化。

 设置此属性后，可以使用设计器工具自动将此属性的值保存到资源文件中。 有关详细信息，请参阅 <xref:System.ComponentModel.LocalizableAttribute> 和 [全球化和本地化](https://docs.microsoft.com/previous-versions/aspnet/c6zyy3s9(v=vs.100))。

 <xref:System.Web.UI.WebControls.Login.PasswordRequiredErrorMessage%2A>和 <xref:System.Web.UI.WebControls.Login.UserNameRequiredErrorMessage%2A> 值都包装在控件内的验证组中 <xref:System.Web.UI.WebControls.Login> 。 若要显示这些值， <xref:System.Web.UI.WebControls.ValidationSummary.ValidationGroup%2A> 必须将控件的属性 <xref:System.Web.UI.WebControls.ValidationSummary> 设置为 <xref:System.Web.UI.Control.ID%2A> 控件的属性 <xref:System.Web.UI.WebControls.Login> 。



## Examples
 下面的代码示例使用 <xref:System.Web.UI.WebControls.ValidationSummary> 控件显示在属性中指定的错误消息 <xref:System.Web.UI.WebControls.Login.PasswordRequiredErrorMessage%2A> 。

 [!code-aspx-csharp[LoginRequiredErrorMessage#1](~/samples/snippets/csharp/VS_Snippets_WebNet/LoginRequiredErrorMessage/CS/loginrequirederrormessagecs.aspx#1)]
 [!code-aspx-vb[LoginRequiredErrorMessage#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/LoginRequiredErrorMessage/VB/loginrequirederrormessagevb.aspx#1)]

 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms178329(v=vs.100)">ASP.NET 登录控件概述</related>
      </Docs>
    </Member>
    <Member MemberName="RememberMeSet">
      <MemberSignature Language="C#" Value="public virtual bool RememberMeSet { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RememberMeSet" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Login.RememberMeSet" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property RememberMeSet As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool RememberMeSet { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.RememberMeSet : bool with get, set" Usage="System.Web.UI.WebControls.Login.RememberMeSet" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.Themeable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.Themeable(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示是否将持久性身份验证 Cookie 发送到用户的浏览器。</summary>
        <value>如果发送持久性身份验证 Cookie，则为 <see langword="true" />；否则为 <see langword="false" />。 默认值是 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 当 <xref:System.Web.UI.WebControls.Login.RememberMeSet%2A> 属性为时 `true` ，发送给用户计算机的身份验证 cookie 设置为在50年后过期，使其成为在用户下一次访问网站时使用的永久性 cookie。 由于身份验证 cookie 会出现在用户的计算机上，因此，用户将被视为已通过身份验证，并且无需再次登录到网站。

 当 <xref:System.Web.UI.WebControls.Login.DisplayRememberMe%2A> 属性为时 `true` ， <xref:System.Web.UI.WebControls.Login.RememberMeSet%2A> 属性将设置为向用户显示的复选框的值。

 如果 <xref:System.Web.UI.WebControls.Login.DisplayRememberMe%2A> 属性为 `false` ，则不会在页面上显示 "记住我" 复选框，并且用户无法控制身份验证 cookie 是否为持久性 cookie。 如果 <xref:System.Web.UI.WebControls.Login.RememberMeSet%2A> 属性为 `true` ，则发送到用户浏览器的身份验证 cookie 将为持久性 cookie。

 如果用户使用控件从网站注销 <xref:System.Web.UI.WebControls.LoginStatus> ，则会从用户的计算机中清除永久性 cookie，用户在下次访问时必须登录到站点。

> [!NOTE]
>  在用户的浏览器上设置持久性身份验证 cookie 存在固有的安全风险。 你应确定你的站点是否可以接受这些安全风险。 如果将属性设置 <xref:System.Web.UI.WebControls.Login.RememberMeSet%2A> 为， `true` 并将 <xref:System.Web.UI.WebControls.Login.DisplayRememberMe%2A> 属性设置为 `false` ，则从公共浏览器访问你的网站的用户（例如在 Internet 咖啡馆中）可能会意外地保留持久性身份验证 cookie，并且浏览器的下一个用户将能够使用以前用户的凭据访问你的网站。

 无法通过主题或样式表主题设置此属性。 有关详细信息，请参阅 <xref:System.Web.UI.ThemeableAttribute> 和 [ASP.NET 主题和外观](https://docs.microsoft.com/previous-versions/aspnet/ykzx33wh(v=vs.100))。

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Login.DisplayRememberMe" />
        <altmember cref="P:System.Web.UI.WebControls.Login.RememberMeText" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms178329(v=vs.100)">ASP.NET 登录控件概述</related>
      </Docs>
    </Member>
    <Member MemberName="RememberMeText">
      <MemberSignature Language="C#" Value="public virtual string RememberMeText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RememberMeText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Login.RememberMeText" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property RememberMeText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ RememberMeText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.RememberMeText : string with get, set" Usage="System.Web.UI.WebControls.Login.RememberMeText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Localizable(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Localizable(true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置“记住我”复选框的标签文本。</summary>
        <value>“记住我”复选框的标签文本。 默认值为“下次记住我。”</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.Login.RememberMeText%2A>属性包含 "记住我" 控件的标签文本 <xref:System.Web.UI.WebControls.CheckBox> 。

 属性的默认文本根据服务器当前的区域设置进行本地化。

 设置此属性后，可以使用设计器工具自动将此属性的值保存到资源文件中。 有关详细信息，请参阅 <xref:System.ComponentModel.LocalizableAttribute> 和 [全球化和本地化](https://docs.microsoft.com/previous-versions/aspnet/c6zyy3s9(v=vs.100))。

 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms178329(v=vs.100)">ASP.NET 登录控件概述</related>
      </Docs>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="protected internal override void Render (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Render(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Login.Render(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub Render (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void Render(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.Render : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="login.Render writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">HTML 编写器。</param>
        <summary>使用指定的 HTML 编写器呈现登录窗体。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RenderOuterTable">
      <MemberSignature Language="C#" Value="public virtual bool RenderOuterTable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RenderOuterTable" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Login.RenderOuterTable" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property RenderOuterTable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool RenderOuterTable { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.RenderOuterTable : bool with get, set" Usage="System.Web.UI.WebControls.Login.RenderOuterTable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示控件是否将呈现的 HTML 包含在 <see langword="table" /> 元素中，以便应用内联样式。</summary>
        <value>如果控件将呈现的 HTML 包含在 <see langword="true" /> 元素中，则为 <see langword="table" />；否则为 <see langword="false" />。 默认值为 <see langword="true" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 为了使内联样式属性（如）应用于为 <xref:System.Web.UI.WebControls.WebControl.ForeColor%2A> 控件呈现的所有 html，ASP.NET 将呈现的 html 包含在 `table` 元素中。 如果你不希望 `table` 呈现外部元素，请将此属性设置为 `false` 。 在这种情况下，如果尝试设置适用于整个控件的内联样式属性，则会引发异常。

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveViewState">
      <MemberSignature Language="C#" Value="protected override object SaveViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance object SaveViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Login.SaveViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function SaveViewState () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Object ^ SaveViewState();" />
      <MemberSignature Language="F#" Value="override this.SaveViewState : unit -&gt; obj" Usage="login.SaveViewState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>保存调用 <see cref="M:System.Web.UI.WebControls.Style.TrackViewState" /> 方法后修改的任何状态。</summary>
        <returns>一个包含该控件的当前视图状态的对象；如果没有与该控件关联的视图状态，则为 <see langword="null" />。</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebControl.SaveViewState" />
      </Docs>
    </Member>
    <Member MemberName="SetDesignModeState">
      <MemberSignature Language="C#" Value="protected override void SetDesignModeState (System.Collections.IDictionary data);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void SetDesignModeState(class System.Collections.IDictionary data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Login.SetDesignModeState(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub SetDesignModeState (data As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void SetDesignModeState(System::Collections::IDictionary ^ data);" />
      <MemberSignature Language="F#" Value="override this.SetDesignModeState : System.Collections.IDictionary -&gt; unit" Usage="login.SetDesignModeState data" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="data">包含控件的设计时数据的 <see cref="T:System.Collections.IDictionary" />。</param>
        <summary>为控件设置设计时数据。</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.UI.Control.SetDesignModeState(System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="TagKey">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.HtmlTextWriterTag TagKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.HtmlTextWriterTag TagKey" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Login.TagKey" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property TagKey As HtmlTextWriterTag" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Web::UI::HtmlTextWriterTag TagKey { System::Web::UI::HtmlTextWriterTag get(); };" />
      <MemberSignature Language="F#" Value="member this.TagKey : System.Web.UI.HtmlTextWriterTag" Usage="System.Web.UI.WebControls.Login.TagKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.HtmlTextWriterTag</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取对应于 <see cref="T:System.Web.UI.HtmlTextWriterTag" /> 控件的 <see cref="T:System.Web.UI.WebControls.Login" /> 值。 此属性主要由控件开发人员使用。</summary>
        <value>始终返回 <see cref="F:System.Web.UI.HtmlTextWriterTag.Table" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 使用 <xref:System.Web.UI.WebControls.Login.TagKey%2A> 属性可确定 <xref:System.Web.UI.HtmlTextWriterTag> 与控件相关联的值 <xref:System.Web.UI.WebControls.Login> 。 此属性主要由控件开发人员使用。

 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms178329(v=vs.100)">ASP.NET 登录控件概述</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms178339(v=vs.100)">自定义 ASP.NET 登录控件的外观和行为</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/h59db326(v=vs.100)">ASP.NET Web 服务器控件模板</related>
      </Docs>
    </Member>
    <Member MemberName="TextBoxStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.Style TextBoxStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.Style TextBoxStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Login.TextBoxStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TextBoxStyle As Style" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::Style ^ TextBoxStyle { System::Web::UI::WebControls::Style ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TextBoxStyle : System.Web.UI.WebControls.Style" Usage="System.Web.UI.WebControls.Login.TextBoxStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(null)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(null)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.NotifyParentProperty(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.NotifyParentProperty(true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Style</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取对属性集合的引用，这些属性定义 <see cref="T:System.Web.UI.WebControls.Login" /> 控件中文本框的外观。</summary>
        <value>对 <see cref="T:System.Web.UI.WebControls.Style" /> 的引用，它包含定义文本框外观的属性。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.Login.TextBoxStyle%2A>属性定义控件中 "用户名" 和 "密码" <xref:System.Web.UI.WebControls.TextBox> 控件的外观 <xref:System.Web.UI.WebControls.Login> 。 此属性是只读的;但是，您可以设置 <xref:System.Web.UI.WebControls.Style> 它返回的对象的属性。 可以在窗体中以声明方式设置这些属性 `Property-Subproperty` ，其中 `Subproperty` 表示类的属性 <xref:System.Web.UI.WebControls.Style> (例如 `TextBoxStyle-ForeColor`) 。 可以通过编程方式设置属性 `Property.Subproperty` ， (例如 `TextBoxStyle.ForeColor`) 。

 常见设置包括自定义背景色、文本颜色和字体属性。 <xref:System.Web.UI.WebControls.Login.TextBoxStyle%2A>属性定义 "用户名" 和 "密码" 文本框的外观。

 属性的样式设置 <xref:System.Web.UI.WebControls.Login.TextBoxStyle%2A> 与控件的样式设置合并 <xref:System.Web.UI.WebControls.Login> 。 在属性中进行的任何设置都将 <xref:System.Web.UI.WebControls.Login.TextBoxStyle%2A> 覆盖控件的属性中的相应设置 <xref:System.Web.UI.WebControls.Login> 。

 以下 <xref:System.Web.UI.WebControls.Login> 样式属性被设置重写 <xref:System.Web.UI.WebControls.Login.TextBoxStyle%2A> ：

-   <xref:System.Web.UI.WebControls.WebControl.BackColor%2A>

-   <xref:System.Web.UI.WebControls.WebControl.BorderColor%2A>

-   <xref:System.Web.UI.WebControls.WebControl.BorderStyle%2A>

-   <xref:System.Web.UI.WebControls.WebControl.BorderWidth%2A>

-   <xref:System.Web.UI.WebControls.WebControl.Enabled%2A>

-   <xref:System.Web.UI.WebControls.WebControl.Font%2A>

-   <xref:System.Web.UI.WebControls.WebControl.ForeColor%2A>

-   <xref:System.Web.UI.WebControls.WebControl.Height%2A>

-   <xref:System.Web.UI.WebControls.WebControl.ToolTip%2A>

-   <xref:System.Web.UI.Control.Visible%2A>

-   <xref:System.Web.UI.WebControls.WebControl.Width%2A>

 使用模板定义控件的外观时 <xref:System.Web.UI.WebControls.Login> ， <xref:System.Web.UI.WebControls.Login.TextBoxStyle%2A> 属性不起作用。



## Examples
 下面的代码示例 <xref:System.Web.UI.WebControls.TextBox> 通过设置 <xref:System.Web.UI.WebControls.Style> 属性所引用的对象的属性，设置用户名和密码控件的背景和文本颜色 <xref:System.Web.UI.WebControls.Login.TextBoxStyle%2A> 。

> [!IMPORTANT]
>  此示例包含一个文本框，该文本框接受用户输入，这是一个潜在的安全威胁。 默认情况下，ASP.NET 网页验证用户输入是否不包含脚本或 HTML 元素。 有关详细信息，请参阅[脚本侵入概述](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100))。

 [!code-aspx-csharp[LoginTextBoxStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/LoginTextBoxStyle/CS/logintextboxstylecs.aspx#1)]
 [!code-aspx-vb[LoginTextBoxStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/LoginTextBoxStyle/VB/logintextboxstylevb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Login.Password" />
        <altmember cref="P:System.Web.UI.WebControls.Login.UserName" />
        <altmember cref="T:System.Web.UI.WebControls.Style" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms178329(v=vs.100)">ASP.NET 登录控件概述</related>
      </Docs>
    </Member>
    <Member MemberName="TextLayout">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.LoginTextLayout TextLayout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.LoginTextLayout TextLayout" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Login.TextLayout" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property TextLayout As LoginTextLayout" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::LoginTextLayout TextLayout { System::Web::UI::WebControls::LoginTextLayout get(); void set(System::Web::UI::WebControls::LoginTextLayout value); };" />
      <MemberSignature Language="F#" Value="member this.TextLayout : System.Web.UI.WebControls.LoginTextLayout with get, set" Usage="System.Web.UI.WebControls.Login.TextLayout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.LoginTextLayout</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>指定 <see cref="T:System.Web.UI.WebControls.Login" /> 控件的每个标签相对于其关联文本框的位置。</summary>
        <value><see cref="T:System.Web.UI.WebControls.LoginTextLayout" /> 枚举值之一。 默认值为 <see cref="F:System.Web.UI.WebControls.LoginTextLayout.TextOnLeft" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 您可以使用 <xref:System.Web.UI.WebControls.Login.TextLayout%2A> 属性来指定标签相对于控件的关联文本框的位置 <xref:System.Web.UI.WebControls.Login> 。 使用枚举值之一设置此属性 <xref:System.Web.UI.WebControls.LoginTextLayout> 。 下表列出了可能的值。

|LoginTextLayout 值|说明|
|---------------------------|-----------------|
|<xref:System.Web.UI.WebControls.LoginTextLayout.TextOnLeft>|将标签放到关联的文本输入字段的左侧。|
|<xref:System.Web.UI.WebControls.LoginTextLayout.TextOnTop>|将标签放到关联的文本输入字段的上方。|



## Examples
 下面的代码示例演示如何使用 <xref:System.Web.UI.WebControls.LoginTextLayout> 枚举设置控件的 <xref:System.Web.UI.WebControls.Login.TextLayout%2A> 属性 <xref:System.Web.UI.WebControls.Login> 。

 [!code-aspx-csharp[System.Web.UI.WebControls.LoginTextLayout#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LoginTextLayout/CS/logintextlayoutcs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.LoginTextLayout#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LoginTextLayout/VB/logintextlayoutvb.aspx#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">所选的值不是 <see cref="T:System.Web.UI.WebControls.LoginTextLayout" /> 枚举值之一。</exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms178329(v=vs.100)">ASP.NET 登录控件概述</related>
      </Docs>
    </Member>
    <Member MemberName="TitleText">
      <MemberSignature Language="C#" Value="public virtual string TitleText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TitleText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Login.TitleText" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property TitleText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ TitleText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TitleText : string with get, set" Usage="System.Web.UI.WebControls.Login.TitleText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Localizable(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Localizable(true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置 <see cref="T:System.Web.UI.WebControls.Login" /> 控件的标题。</summary>
        <value><see cref="T:System.Web.UI.WebControls.Login" /> 控件的标题。 默认值为“Login”。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.Login.TitleText%2A>属性指定在控件顶部显示的标题 <xref:System.Web.UI.WebControls.Login> 。

 控件的默认文本根据服务器当前的区域设置进行本地化。

 设置此属性后，可以使用设计器工具自动将此属性的值保存到资源文件中。 有关详细信息，请参阅 <xref:System.ComponentModel.LocalizableAttribute> 和 [全球化和本地化](https://docs.microsoft.com/previous-versions/aspnet/c6zyy3s9(v=vs.100))。



## Examples
 下面的代码示例设置 <xref:System.Web.UI.WebControls.Login.TitleText%2A> 属性。

> [!IMPORTANT]
>  此示例包含一个文本框，该文本框接受用户输入，这是一个潜在的安全威胁。 默认情况下，ASP.NET 网页验证用户输入是否不包含脚本或 HTML 元素。 有关详细信息，请参阅[脚本侵入概述](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100))。

 [!code-aspx-csharp[LoginTitleText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/LoginTitleText/CS/logintitletextcs.aspx#1)]
 [!code-aspx-vb[LoginTitleText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/LoginTitleText/VB/logintitletextvb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Login.TitleTextStyle" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms178329(v=vs.100)">ASP.NET 登录控件概述</related>
      </Docs>
    </Member>
    <Member MemberName="TitleTextStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle TitleTextStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle TitleTextStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Login.TitleTextStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TitleTextStyle As TableItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TableItemStyle ^ TitleTextStyle { System::Web::UI::WebControls::TableItemStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TitleTextStyle : System.Web.UI.WebControls.TableItemStyle" Usage="System.Web.UI.WebControls.Login.TitleTextStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(null)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(null)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.NotifyParentProperty(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.NotifyParentProperty(true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取对属性集合的引用，这些属性定义 <see cref="T:System.Web.UI.WebControls.Login" /> 控件中标题文本的外观。</summary>
        <value>对包含定义标题文本外观的属性的 <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> 的引用。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.Login.TitleTextStyle%2A>属性获取对 <xref:System.Web.UI.WebControls.TableItemStyle> 对象的引用，该对象用于更改属性中包含的标题的外观 <xref:System.Web.UI.WebControls.Login.TitleText%2A> 。

 <xref:System.Web.UI.WebControls.Login.TitleTextStyle%2A>属性定义控件中标题的外观 <xref:System.Web.UI.WebControls.Login> 。 此属性是只读的;但是，您可以设置 <xref:System.Web.UI.WebControls.TableItemStyle> 它返回的对象的属性。 可以在窗体中以声明方式设置这些属性 `Property-Subproperty` ，其中 `Subproperty` 表示类的属性 <xref:System.Web.UI.WebControls.TableItemStyle> (例如 `TitleStyle-ForeColor`) 。 可以通过编程方式设置属性 `Property.Subproperty` ， (例如 `TitleStyle.ForeColor`) 。

 常见设置包括自定义背景色、文本颜色和字体属性。 <xref:System.Web.UI.WebControls.Login.TitleTextStyle%2A>属性定义属性的外观 <xref:System.Web.UI.WebControls.Login.TitleText%2A> 。

 属性的样式设置 <xref:System.Web.UI.WebControls.Login.TitleTextStyle%2A> 与控件的样式设置合并 <xref:System.Web.UI.WebControls.Login> 。 在属性中进行的任何设置都将 <xref:System.Web.UI.WebControls.Login.TitleTextStyle%2A> 覆盖控件的属性中的相应设置 <xref:System.Web.UI.WebControls.Login> 。

 以下 <xref:System.Web.UI.WebControls.Login> 样式属性被设置重写 <xref:System.Web.UI.WebControls.Login.TitleTextStyle%2A> ：

-   <xref:System.Web.UI.WebControls.WebControl.BackColor%2A>

-   <xref:System.Web.UI.WebControls.WebControl.BorderColor%2A>

-   <xref:System.Web.UI.WebControls.WebControl.BorderStyle%2A>

-   <xref:System.Web.UI.WebControls.WebControl.BorderWidth%2A>

-   <xref:System.Web.UI.WebControls.WebControl.Enabled%2A>

-   <xref:System.Web.UI.WebControls.WebControl.Font%2A>

-   <xref:System.Web.UI.WebControls.WebControl.ForeColor%2A>

-   <xref:System.Web.UI.WebControls.WebControl.Height%2A>

-   <xref:System.Web.UI.WebControls.WebControl.ToolTip%2A>

-   <xref:System.Web.UI.Control.Visible%2A>

-   <xref:System.Web.UI.WebControls.WebControl.Width%2A>

 使用模板定义控件的外观时 <xref:System.Web.UI.WebControls.Login> ， <xref:System.Web.UI.WebControls.Login.TitleTextStyle%2A> 属性不起作用。



## Examples
 下面的代码示例通过设置属性所引用的对象的属性来设置标题的文本颜色、背景色和字体粗细 <xref:System.Web.UI.WebControls.TableItemStyle> <xref:System.Web.UI.WebControls.Login.TitleTextStyle%2A> 。

> [!IMPORTANT]
>  此示例包含一个文本框，该文本框接受用户输入，这是一个潜在的安全威胁。 默认情况下，ASP.NET 网页验证用户输入是否不包含脚本或 HTML 元素。 有关详细信息，请参阅[脚本侵入概述](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100))。

 [!code-aspx-csharp[LoginTitleText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/LoginTitleText/CS/logintitletextcs.aspx#1)]
 [!code-aspx-vb[LoginTitleText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/LoginTitleText/VB/logintitletextvb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Login.TitleText" />
        <altmember cref="T:System.Web.UI.WebControls.TableItemStyle" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms178329(v=vs.100)">ASP.NET 登录控件概述</related>
      </Docs>
    </Member>
    <Member MemberName="TrackViewState">
      <MemberSignature Language="C#" Value="protected override void TrackViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void TrackViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Login.TrackViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub TrackViewState ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void TrackViewState();" />
      <MemberSignature Language="F#" Value="override this.TrackViewState : unit -&gt; unit" Usage="login.TrackViewState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>重写基 <see cref="M:System.Web.UI.Control.TrackViewState" /> 方法。</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.UI.WebControls.Login.LoadViewState(System.Object)" />
        <altmember cref="M:System.Web.UI.WebControls.Login.SaveViewState" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms178329(v=vs.100)">ASP.NET 登录控件概述</related>
      </Docs>
    </Member>
    <Member MemberName="UserName">
      <MemberSignature Language="C#" Value="public virtual string UserName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UserName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Login.UserName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property UserName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ UserName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.UserName : string with get, set" Usage="System.Web.UI.WebControls.Login.UserName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue("")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue("")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取用户输入的用户名。</summary>
        <value>用户输入的用户名。 默认值为 <see cref="F:System.String.Empty" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.Login.UserName%2A>属性包含用户输入的用户名。 <xref:System.Web.UI.WebControls.Login> 文本框（如和）表示的控件属性 <xref:System.Web.UI.WebControls.Login.UserName%2A> <xref:System.Web.UI.WebControls.Login.Password%2A> 可在页面生命周期的所有阶段中访问。 控件将通过文本框触发的事件选取最终用户所做的任何更改 <xref:System.Web.UI.WebControls.TextBox.TextChanged> 。



## Examples
 下面的代码示例将 <xref:System.Web.UI.WebControls.Login.UserName%2A> 属性传递给自定义身份验证方法。

 [!code-aspx-csharp[LoginAuthenticate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/LoginAuthenticate/CS/loginauthenticatecs.aspx#1)]
 [!code-aspx-vb[LoginAuthenticate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/LoginAuthenticate/VB/loginauthenticatevb.aspx#1)]

 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms178329(v=vs.100)">ASP.NET 登录控件概述</related>
      </Docs>
    </Member>
    <Member MemberName="UserNameLabelText">
      <MemberSignature Language="C#" Value="public virtual string UserNameLabelText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UserNameLabelText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Login.UserNameLabelText" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property UserNameLabelText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ UserNameLabelText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.UserNameLabelText : string with get, set" Usage="System.Web.UI.WebControls.Login.UserNameLabelText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Localizable(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Localizable(true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置 <see cref="P:System.Web.UI.WebControls.Login.UserName" /> 文本框的标签文本。</summary>
        <value><see cref="P:System.Web.UI.WebControls.Login.UserName" /> 文本框的标签文本。 默认值为“用户名:”。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.Login.UserNameLabelText%2A>属性包含文本框的标签文本 <xref:System.Web.UI.WebControls.Login.UserName%2A> 。

 <xref:System.Web.UI.WebControls.Login.TextLayout%2A>属性定义字段标签的位置。

 控件的默认文本根据服务器当前的区域设置进行本地化。

 设置此属性后，可以使用设计器工具自动将此属性的值保存到资源文件中。 有关详细信息，请参阅 <xref:System.ComponentModel.LocalizableAttribute> 和 [全球化和本地化](https://docs.microsoft.com/previous-versions/aspnet/c6zyy3s9(v=vs.100))。



## Examples
 下面的代码示例演示如何设置 <xref:System.Web.UI.WebControls.Login.UserNameLabelText%2A> 属性。

 [!code-aspx-csharp[LoginLabelText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/LoginLabelText/CS/loginlabeltextcs.aspx#1)]
 [!code-aspx-vb[LoginLabelText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/LoginLabelText/VB/loginlabeltextvb.aspx#1)]

 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms178329(v=vs.100)">ASP.NET 登录控件概述</related>
      </Docs>
    </Member>
    <Member MemberName="UserNameRequiredErrorMessage">
      <MemberSignature Language="C#" Value="public virtual string UserNameRequiredErrorMessage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UserNameRequiredErrorMessage" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Login.UserNameRequiredErrorMessage" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property UserNameRequiredErrorMessage As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ UserNameRequiredErrorMessage { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.UserNameRequiredErrorMessage : string with get, set" Usage="System.Web.UI.WebControls.Login.UserNameRequiredErrorMessage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Localizable(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Localizable(true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置当用户名字段为空时在 <see cref="T:System.Web.UI.WebControls.ValidationSummary" /> 控件中显示的错误消息。</summary>
        <value>当用户名字段为空时在 <see cref="T:System.Web.UI.WebControls.ValidationSummary" /> 控件中显示的错误消息。 默认值为“用户名。”</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.Login.UserNameRequiredErrorMessage%2A>属性包含在登录页上的控件中显示的错误消息 <xref:System.Web.UI.WebControls.ValidationSummary> 。

 <xref:System.Web.UI.WebControls.Login.UserNameRequiredErrorMessage%2A>仅当以下两个条件都为 true 时，才显示属性值：

-   <xref:System.Web.UI.WebControls.ValidationSummary>页面上有一个控件。

-   用户的 "用户名" 文本框留空。

 控件的默认文本根据服务器当前的区域设置进行本地化。

 设置此属性后，可以使用设计器工具自动将此属性的值保存到资源文件中。 有关详细信息，请参阅 <xref:System.ComponentModel.LocalizableAttribute> 和 [全球化和本地化](https://docs.microsoft.com/previous-versions/aspnet/c6zyy3s9(v=vs.100))。

 <xref:System.Web.UI.WebControls.Login.PasswordRequiredErrorMessage%2A>和 <xref:System.Web.UI.WebControls.Login.UserNameRequiredErrorMessage%2A> 值都包装在控件内的验证组中 <xref:System.Web.UI.WebControls.Login> 。 若要显示这些值， <xref:System.Web.UI.WebControls.ValidationSummary.ValidationGroup%2A> 必须将控件的属性 <xref:System.Web.UI.WebControls.ValidationSummary> 设置为 <xref:System.Web.UI.Control.ID%2A> 控件的属性 <xref:System.Web.UI.WebControls.Login> 。



## Examples
 下面的代码示例演示如何使用 <xref:System.Web.UI.WebControls.ValidationSummary> 控件显示在属性中指定的错误消息 <xref:System.Web.UI.WebControls.Login.UserNameRequiredErrorMessage%2A> 。

 [!code-aspx-csharp[LoginRequiredErrorMessage#1](~/samples/snippets/csharp/VS_Snippets_WebNet/LoginRequiredErrorMessage/CS/loginrequirederrormessagecs.aspx#1)]
 [!code-aspx-vb[LoginRequiredErrorMessage#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/LoginRequiredErrorMessage/VB/loginrequirederrormessagevb.aspx#1)]

 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms178329(v=vs.100)">ASP.NET 登录控件概述</related>
      </Docs>
    </Member>
    <Member MemberName="ValidatorTextStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.Style ValidatorTextStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.Style ValidatorTextStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Login.ValidatorTextStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ValidatorTextStyle As Style" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::Style ^ ValidatorTextStyle { System::Web::UI::WebControls::Style ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ValidatorTextStyle : System.Web.UI.WebControls.Style" Usage="System.Web.UI.WebControls.Login.ValidatorTextStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(null)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(null)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.NotifyParentProperty(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.NotifyParentProperty(true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Style</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取对 <see cref="T:System.Web.UI.WebControls.Style" /> 属性集合的引用，这些属性定义与 <see cref="T:System.Web.UI.WebControls.Login" /> 控件使用的验证程序关联的错误消息的外观。</summary>
        <value>包含样式设置的 <see cref="T:System.Web.UI.WebControls.Style" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 下表列出了可用于自定义属性的样式设置 <xref:System.Web.UI.WebControls.Login.ValidatorTextStyle%2A> 。

|设置|说明|
|-------------|-----------------|
|`BackColor`|错误消息后面的颜色。 颜色可以是任何 <xref:System.Drawing.Color> 属性。|
|`BorderColor`|错误消息周围边框的颜色。 颜色可以是任何 <xref:System.Drawing.Color> 属性。|
|`BorderStyle`|错误消息周围边框的样式。 样式可以是 "None"、"虚线"、"虚线"、"实线"、"Double"、"沟"、"凸"、"内陷" 或 "外嵌"。 默认值为 "NotSet"。 如果值大于2，则某些样式不会清晰显示 `BorderWidth` 。|
|`BorderWidth`|错误消息周围边框的宽度。|
|`CssClass`|用于呈现错误消息 (CSS) 类的级联样式表。 如果指定了其他设置，则它们将重写样式表设置。|
|`Font-Bold`|`true` 为，则以粗体显示错误消息文本。|
|`Font-Italic`|`true` 为，则以斜体类型显示错误消息文本。|
|`Font-Names`|字体的名称。|
|`Font-Overline`|`true` 如果为，则在错误消息文本上方显示一行。|
|`Font-Size`|作为对象的错误消息中的文本大小 <xref:System.Web.UI.WebControls.FontUnit> 。|
|`Font-Strikeout`|`true` 如果为，则显示超出的错误消息文本。|
|`Font-Underline`|`true` 如果为，则显示带下划线的错误消息文本。|
|`ForeColor`|错误消息中的文本颜色。 颜色可以是任何 <xref:System.Drawing.Color> 属性。|
|`Height`|一个 <xref:System.Web.UI.WebControls.Unit> 对象，表示错误消息的高度。|
|`Width`|一个 <xref:System.Web.UI.WebControls.Unit> 对象，该对象表示错误消息的宽度。|

 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms178329(v=vs.100)">ASP.NET 登录控件概述</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms178339(v=vs.100)">自定义 ASP.NET 登录控件的外观和行为</related>
      </Docs>
    </Member>
    <Member MemberName="VisibleWhenLoggedIn">
      <MemberSignature Language="C#" Value="public virtual bool VisibleWhenLoggedIn { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool VisibleWhenLoggedIn" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Login.VisibleWhenLoggedIn" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property VisibleWhenLoggedIn As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool VisibleWhenLoggedIn { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.VisibleWhenLoggedIn : bool with get, set" Usage="System.Web.UI.WebControls.Login.VisibleWhenLoggedIn" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.Themeable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.Themeable(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示在验证用户身份后是否显示 <see cref="T:System.Web.UI.WebControls.Login" /> 控件。</summary>
        <value>如果在验证用户身份后隐藏 <see cref="T:System.Web.UI.WebControls.Login" /> 控件，则为 <see langword="false" />；否则为 <see langword="true" />。 默认值为 <see langword="true" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.Login.VisibleWhenLoggedIn%2A>属性指定是否 <xref:System.Web.UI.WebControls.Login> 向经过身份验证的用户显示控件。 当属性为时 `false` ， <xref:System.Web.UI.WebControls.Login> 当经过身份验证的用户访问站点时，控件不会显示在页面上。 这适用于在 <xref:System.Web.UI.WebControls.Login> 用户身份验证后作为登录页和信息页用于隐藏控件的网页。

 <xref:System.Web.UI.WebControls.Login.VisibleWhenLoggedIn%2A>属性对 <xref:System.Web.UI.WebControls.Login> 在 Web.config 中或应用程序的配置文件中定义的默认登录页上显示的控件不起作用。

 无法通过主题或样式表主题设置此属性。 有关详细信息，请参阅 <xref:System.Web.UI.ThemeableAttribute> 和 [ASP.NET 主题和外观](https://docs.microsoft.com/previous-versions/aspnet/ykzx33wh(v=vs.100))。



## Examples
 下面的代码示例将 <xref:System.Web.UI.WebControls.Login.VisibleWhenLoggedIn%2A> 属性设置为， `true` 以指定 <xref:System.Web.UI.WebControls.Login> 无论用户是否经过身份验证，控件都不会隐藏并且始终显示在页面上。

 [!code-aspx-csharp[LoginHideWhenLoggedIn#1](~/samples/snippets/csharp/VS_Snippets_WebNet/LoginHideWhenLoggedIn/CS/loginhidewhenloggedincs.aspx#1)]
 [!code-aspx-vb[LoginHideWhenLoggedIn#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/LoginHideWhenLoggedIn/VB/loginhidewhenloggedinvb.aspx#1)]

 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms178329(v=vs.100)">ASP.NET 登录控件概述</related>
      </Docs>
    </Member>
  </Members>
</Type>
