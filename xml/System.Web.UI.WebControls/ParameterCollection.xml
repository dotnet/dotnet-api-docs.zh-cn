<Type Name="ParameterCollection" FullName="System.Web.UI.WebControls.ParameterCollection">
  <Metadata><Meta Name="ms.openlocfilehash" Value="b7225ad025dd9b74f316667258e85e5570c12051" /><Meta Name="ms.sourcegitcommit" Value="11d168140aa8fade0768c2a9dde3e3bcacfdfb7d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="05/27/2020" /><Meta Name="ms.locfileid" Value="83966850" /></Metadata><TypeSignature Language="C#" Value="public class ParameterCollection : System.Web.UI.StateManagedCollection" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ParameterCollection extends System.Web.UI.StateManagedCollection" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.ParameterCollection" />
  <TypeSignature Language="VB.NET" Value="Public Class ParameterCollection&#xA;Inherits StateManagedCollection" />
  <TypeSignature Language="C++ CLI" Value="public ref class ParameterCollection : System::Web::UI::StateManagedCollection" />
  <TypeSignature Language="F#" Value="type ParameterCollection = class&#xA;    inherit StateManagedCollection" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.StateManagedCollection</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>表示由高级数据绑定方案中的数据源控件使用的 <see cref="T:System.Web.UI.WebControls.Parameter" /> 和 <see cref="T:System.Web.UI.WebControls.Parameter" /> 派生的对象的集合。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.ParameterCollection> 类表示在具有数据源控件的高级数据绑定方案中使用的 <xref:System.Web.UI.WebControls.Parameter> 对象的集合。 <xref:System.Web.UI.WebControls.Parameter> 对象用于在检索、更新、删除和插入数据时将本地 <xref:System.Web.UI.Page> 变量、HTTP cookie、会话变量和其他控件的值所包含的值绑定到数据源控件。

 使用 <xref:System.Web.UI.WebControls.ParameterCollection> 类以编程方式管理一组 <xref:System.Web.UI.WebControls.Parameter> 对象。 您可以使用 <xref:System.Web.UI.WebControls.ParameterCollection> 类的适当方法添加、插入和移除 <xref:System.Web.UI.WebControls.Parameter> 对象。 若要以编程方式从集合中检索 <xref:System.Web.UI.WebControls.Parameter> 对象，请使用以下方法之一：

-   使用索引器按名称或使用数组表示法获取集合中的单个 <xref:System.Web.UI.WebControls.Parameter> 对象。

-   使用 <xref:System.Collections.IEnumerable.GetEnumerator%2A> 方法创建一个已实现 <xref:System.Collections.IEnumerator?displayProperty=nameWithType>的对象，然后可以使用该对象从集合中获取项。

 <xref:System.Web.UI.StateManagedCollection.Count%2A> 属性指定集合中的总项数，并用于确定集合的上限。 您可以使用 <xref:System.Web.UI.WebControls.ParameterCollection.Add%2A>、<xref:System.Web.UI.WebControls.ParameterCollection.Insert%2A>、<xref:System.Web.UI.WebControls.ParameterCollection.Remove%2A>和 <xref:System.Web.UI.WebControls.ParameterCollection.RemoveAt%2A> 方法，在集合中添加和移除项。

 根据特定数据源控件的实现和语义，参数在 <xref:System.Web.UI.WebControls.ParameterCollection> 集合中的存储顺序可能非常重要。 例如，使用 <xref:System.Web.UI.WebControls.SqlDataSource> 控件作为 ODBC 数据源时，<xref:System.Web.UI.WebControls.ParameterCollection> 集合中 <xref:System.Web.UI.WebControls.Parameter> 对象的顺序必须与你使用的参数化 SQL 查询中参数的顺序相同。 但是，将 <xref:System.Web.UI.WebControls.SqlDataSource> 控件与 Microsoft SQL Server 结合使用时，<xref:System.Web.UI.WebControls.Parameter> 对象的顺序并不重要。

> [!IMPORTANT]
>  使用数据源控件时，无需验证即可将值插入命令参数，这是一个潜在的安全威胁。 在执行命令前，使用数据源控件中的事件验证参数值。 有关详细信息，请参阅[脚本侵入概述](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100))。

 下表列出了不同的参数类及其使用方式。

|参数类|说明|
|---------------------|-----------------|
|<xref:System.Web.UI.WebControls.Parameter>|基参数类。 使用它可以绑定到本地变量或使用 <xref:System.Web.UI.WebControls.Parameter.DefaultValue%2A> 属性的任何静态字符串。|
|<xref:System.Web.UI.WebControls.ControlParameter>|可用于绑定到控件的属性或方法返回值的参数。|
|<xref:System.Web.UI.WebControls.CookieParameter>|可用于绑定到 cookie 值的参数。|
|<xref:System.Web.UI.WebControls.FormParameter>|一个参数，该参数可用于绑定到当前 Web 窗体页的特性。|
|<xref:System.Web.UI.WebControls.QueryStringParameter>|一个参数，该参数可用于绑定到传递到查询字符串上的 Web 窗体页的值。|
|<xref:System.Web.UI.WebControls.SessionParameter>|可用于绑定到会话变量的值的参数。|
|<xref:System.Web.UI.WebControls.ProfileParameter>|一个参数，该参数可用于绑定到 ASP.NET 配置文件属性的值。|



## Examples
 下面的代码示例演示如何使用 <xref:System.Web.UI.WebControls.AccessDataSource> 控件和 <xref:System.Web.UI.WebControls.FormParameter> 在 <xref:System.Web.UI.WebControls.GridView> 控件中显示 Microsoft Access 数据库的信息。 使用 <xref:System.Web.UI.WebControls.ParameterCollection.Add%2A> 方法将 <xref:System.Web.UI.WebControls.FormParameter> 对象添加到 <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A> 集合。

> [!IMPORTANT]
>  此示例具有一个接受用户输入的文本框，这是一个潜在的安全威胁。 默认情况下，ASP.NET 网页验证用户输入是否不包含脚本或 HTML 元素。 有关详细信息，请参阅[脚本侵入概述](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100))。

 [!code-aspx-csharp[System.Web.UI.WebControls.FormParameter_2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.FormParameter_2/CS/fp2cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.FormParameter_2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.FormParameter_2/VB/fp2vb.aspx#1)]

 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.Parameter" />
    <altmember cref="T:System.Web.UI.WebControls.SqlDataSource" />
    <altmember cref="T:System.Web.UI.WebControls.ObjectDataSource" />
    <altmember cref="T:System.Web.UI.WebControls.XmlDataSource" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ParameterCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ParameterCollection.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ParameterCollection();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>初始化该类供继承的类实例使用。 此构造函数只能由继承的类调用。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Add">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>将 <see cref="T:System.Web.UI.WebControls.Parameter" /> 对象添加到集合。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public int Add (System.Web.UI.WebControls.Parameter parameter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Add(class System.Web.UI.WebControls.Parameter parameter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ParameterCollection.Add(System.Web.UI.WebControls.Parameter)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (parameter As Parameter) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Add(System::Web::UI::WebControls::Parameter ^ parameter);" />
      <MemberSignature Language="F#" Value="member this.Add : System.Web.UI.WebControls.Parameter -&gt; int" Usage="parameterCollection.Add parameter" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameter" Type="System.Web.UI.WebControls.Parameter" />
      </Parameters>
      <Docs>
        <param name="parameter">追加到集合末尾的 <see cref="T:System.Web.UI.WebControls.Parameter" />。</param>
        <summary>将指定的 <see cref="T:System.Web.UI.WebControls.Parameter" /> 对象追加到集合末尾。</summary>
        <returns>所添加项的索引值。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 使用 <xref:System.Web.UI.WebControls.ParameterCollection.Add%28System.Web.UI.WebControls.Parameter%29> 方法将 <xref:System.Web.UI.WebControls.Parameter> 对象追加到集合的末尾。 此方法实现采用 `param` 参数指定的 <xref:System.Web.UI.WebControls.Parameter> 对象，并将其追加到集合。



## Examples
 下面的代码示例演示如何使用 <xref:System.Web.UI.WebControls.AccessDataSource> 控件和 <xref:System.Web.UI.WebControls.FormParameter> 对象在 <xref:System.Web.UI.WebControls.GridView> 控件中显示 Microsoft Access 数据库的信息。 使用 <xref:System.Web.UI.WebControls.ParameterCollection.Add%28System.Web.UI.WebControls.Parameter%29> 方法将 <xref:System.Web.UI.WebControls.FormParameter> 对象添加到 <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A> 集合。

> [!IMPORTANT]
>  此示例具有一个接受用户输入的文本框，这是一个潜在的安全威胁。 默认情况下，ASP.NET 网页验证用户输入是否不包含脚本或 HTML 元素。 有关详细信息，请参阅[脚本侵入概述](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100))。

 [!code-aspx-csharp[System.Web.UI.WebControls.FormParameter_2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.FormParameter_2/CS/fp2cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.FormParameter_2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.FormParameter_2/VB/fp2vb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.ParameterCollection.Insert(System.Int32,System.Web.UI.WebControls.Parameter)" />
        <altmember cref="M:System.Web.UI.WebControls.ParameterCollection.Remove(System.Web.UI.WebControls.Parameter)" />
        <altmember cref="M:System.Web.UI.WebControls.ParameterCollection.RemoveAt(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public int Add (string name, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Add(string name, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ParameterCollection.Add(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (name As String, value As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Add(System::String ^ name, System::String ^ value);" />
      <MemberSignature Language="F#" Value="member this.Add : string * string -&gt; int" Usage="parameterCollection.Add (name, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">参数的名称。</param>
        <param name="value">用作该参数的默认值的字符串。</param>
        <summary>用指定的名称和默认值创建 <see cref="T:System.Web.UI.WebControls.Parameter" /> 对象，并将它追加到集合末尾。</summary>
        <returns>所添加项的索引值。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 使用 <xref:System.Web.UI.WebControls.ParameterCollection.Add%28System.String%2CSystem.String%29> 方法创建具有默认值的 <xref:System.Web.UI.WebControls.Parameter> 对象并将其追加到集合的末尾。 此方法的实现使用 `name` 和 `value` 参数分别指定的名称和默认值创建 <xref:System.Web.UI.WebControls.Parameter> 对象，并将其追加到集合中。



## Examples
 下面的代码示例演示如何使用 <xref:System.Web.UI.WebControls.ParameterCollection.Add%28System.String%2CSystem.String%29> 方法通过提供 `name` 和 `value` 参数向 <xref:System.Web.UI.WebControls.ParameterCollection> 集合添加新的 <xref:System.Web.UI.WebControls.Parameter> 对象。 在此示例中，<xref:System.Web.UI.WebControls.Parameter> 对象添加到访问数据源控件的更新命令，该命令绑定到 <xref:System.Web.UI.WebControls.TextBox> 控件的值。

> [!IMPORTANT]
>  此示例具有一个接受用户输入的文本框，这是一个潜在的安全威胁。 默认情况下，ASP.NET 网页验证用户输入是否不包含脚本或 HTML 元素。 有关详细信息，请参阅[脚本侵入概述](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100))。

 [!code-aspx-csharp[System.Web.UI.WebControls.ParameterCollection_2#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ParameterCollection_2/CS/paramcoll2cs.aspx#2)]
 [!code-aspx-vb[System.Web.UI.WebControls.ParameterCollection_2#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ParameterCollection_2/VB/paramcoll2vb.aspx#2)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Parameter" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public int Add (string name, System.Data.DbType dbType, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Add(string name, valuetype System.Data.DbType dbType, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ParameterCollection.Add(System.String,System.Data.DbType,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (name As String, dbType As DbType, value As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Add(System::String ^ name, System::Data::DbType dbType, System::String ^ value);" />
      <MemberSignature Language="F#" Value="member this.Add : string * System.Data.DbType * string -&gt; int" Usage="parameterCollection.Add (name, dbType, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="dbType" Type="System.Data.DbType" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">参数的名称。</param>
        <param name="dbType">参数的数据库类型。</param>
        <param name="value">参数的默认值。</param>
        <summary>用指定的名称、数据库类型和默认值创建 <see cref="T:System.Web.UI.WebControls.Parameter" /> 对象，并将它添加到集合末尾。</summary>
        <returns>所添加项的索引值。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 此方法适用于数据库类型。 为 CLR 类型使用 <xref:System.Web.UI.WebControls.ParameterCollection.Add%28System.String%2CSystem.TypeCode%2CSystem.String%29> 方法。

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public int Add (string name, TypeCode type, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Add(string name, valuetype System.TypeCode type, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ParameterCollection.Add(System.String,System.TypeCode,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (name As String, type As TypeCode, value As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Add(System::String ^ name, TypeCode type, System::String ^ value);" />
      <MemberSignature Language="F#" Value="member this.Add : string * TypeCode * string -&gt; int" Usage="parameterCollection.Add (name, type, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="type" Type="System.TypeCode" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">参数的名称。</param>
        <param name="type">参数的类型。</param>
        <param name="value">参数的默认值。</param>
        <summary>用指定的名称、<see cref="T:System.Web.UI.WebControls.Parameter" /> 和默认值创建 <see cref="T:System.TypeCode" /> 对象，并将它追加到集合末尾。</summary>
        <returns>所添加项的索引值。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 使用 <xref:System.Web.UI.WebControls.ParameterCollection.Add%28System.String%2CSystem.TypeCode%2CSystem.String%29> 方法创建具有默认值的强类型 <xref:System.Web.UI.WebControls.Parameter> 对象并将其追加到集合的末尾。 此方法的实现使用 `name`、`type` 和 `value` 参数指定的名称、类型和值创建 <xref:System.Web.UI.WebControls.Parameter> 对象，并将其追加到集合中。



## Examples
 下面的代码示例演示如何使用 <xref:System.Web.UI.WebControls.ParameterCollection.Add%28System.String%2CSystem.TypeCode%2CSystem.String%29> 方法通过提供 `name`、`value`和 `type` 参数向 <xref:System.Web.UI.WebControls.ParameterCollection> 集合添加新的 <xref:System.Web.UI.WebControls.Parameter> 对象。 在此示例中，将向提供当前系统时间值的 Access 数据源控件的更新命令添加 <xref:System.Web.UI.WebControls.Parameter> 对象。 参数与 <xref:System.DateTime>的 <xref:System.TypeCode> 一起添加。

 [!code-aspx-csharp[System.Web.UI.WebControls.ParameterCollection_2#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ParameterCollection_2/CS/paramcoll2cs.aspx#2)]
 [!code-aspx-vb[System.Web.UI.WebControls.ParameterCollection_2#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ParameterCollection_2/VB/paramcoll2vb.aspx#2)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Parameter" />
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (System.Web.UI.WebControls.Parameter parameter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(class System.Web.UI.WebControls.Parameter parameter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ParameterCollection.Contains(System.Web.UI.WebControls.Parameter)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (parameter As Parameter) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(System::Web::UI::WebControls::Parameter ^ parameter);" />
      <MemberSignature Language="F#" Value="member this.Contains : System.Web.UI.WebControls.Parameter -&gt; bool" Usage="parameterCollection.Contains parameter" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameter" Type="System.Web.UI.WebControls.Parameter" />
      </Parameters>
      <Docs>
        <param name="parameter">要在 <see cref="T:System.Web.UI.WebControls.Parameter" /> 中查找的 <see cref="T:System.Web.UI.WebControls.ParameterCollection" />。</param>
        <summary>确定 <see cref="T:System.Web.UI.WebControls.ParameterCollection" /> 集合中是否包含特定值。</summary>
        <returns>如果在 <see cref="T:System.Web.UI.WebControls.ParameterCollection" /> 中找到对象，则为 <see langword="true" />；否则为 <see langword="false" />。 如果为 <paramref name="value" /> 参数传递 <see langword="null" />，则返回 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 使用此方法可确定指定 <xref:System.Web.UI.WebControls.Parameter> 对象是否在 <xref:System.Web.UI.WebControls.ParameterCollection> 集合中。

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (System.Web.UI.WebControls.Parameter[] parameterArray, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(class System.Web.UI.WebControls.Parameter[] parameterArray, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ParameterCollection.CopyTo(System.Web.UI.WebControls.Parameter[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (parameterArray As Parameter(), index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyTo(cli::array &lt;System::Web::UI::WebControls::Parameter ^&gt; ^ parameterArray, int index);" />
      <MemberSignature Language="F#" Value="override this.CopyTo : System.Web.UI.WebControls.Parameter[] * int -&gt; unit" Usage="parameterCollection.CopyTo (parameterArray, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameterArray" Type="System.Web.UI.WebControls.Parameter[]" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="parameterArray">要从中复制位于指定索引处的值的参数数组。</param>
        <param name="index">要复制的 <paramref name="parameterArray" /> 项的 <see langword="integer" /> 索引。</param>
        <summary>将指定的参数数组索引复制到参数集合中。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateKnownType">
      <MemberSignature Language="C#" Value="protected override object CreateKnownType (int index);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance object CreateKnownType(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ParameterCollection.CreateKnownType(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateKnownType (index As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Object ^ CreateKnownType(int index);" />
      <MemberSignature Language="F#" Value="override this.CreateKnownType : int -&gt; obj" Usage="parameterCollection.CreateKnownType index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">用 <see cref="T:System.Web.UI.WebControls.Parameter" /> 返回的排序类型列表创建的 <see cref="M:System.Web.UI.WebControls.ParameterCollection.GetKnownTypes" /> 的类型索引。</param>
        <summary>创建默认 <see cref="T:System.Web.UI.WebControls.Parameter" /> 对象的实例。</summary>
        <returns><see cref="T:System.Web.UI.WebControls.Parameter" /> 的默认实例。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.ParameterCollection.CreateKnownType%2A> 方法根据 <xref:System.Web.UI.WebControls.ParameterCollection.GetKnownTypes%2A> 方法返回的 <xref:System.Type> 的索引创建 <xref:System.Web.UI.WebControls.Parameter> 对象的实例。 索引值对应于下表中显示的类型。

|Index|参数类型|
|-----------|--------------------|
|0|<xref:System.Web.UI.WebControls.ControlParameter>|
|1|<xref:System.Web.UI.WebControls.CookieParameter>|
|2|<xref:System.Web.UI.WebControls.FormParameter>|
|3|<xref:System.Web.UI.WebControls.Parameter>|
|4|<xref:System.Web.UI.WebControls.QueryStringParameter>|
|5|<xref:System.Web.UI.WebControls.SessionParameter>|
|6|<xref:System.Web.UI.WebControls.ProfileParameter>|

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">指定的索引不在可识别的范围内。</exception>
        <altmember cref="M:System.Web.UI.WebControls.ParameterCollection.GetKnownTypes" />
      </Docs>
    </Member>
    <Member MemberName="GetKnownTypes">
      <MemberSignature Language="C#" Value="protected override Type[] GetKnownTypes ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Type[] GetKnownTypes() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ParameterCollection.GetKnownTypes" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetKnownTypes () As Type()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override cli::array &lt;Type ^&gt; ^ GetKnownTypes();" />
      <MemberSignature Language="F#" Value="override this.GetKnownTypes : unit -&gt; Type[]" Usage="parameterCollection.GetKnownTypes " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>获取 <see cref="T:System.Web.UI.WebControls.Parameter" /> 集合可以包含的 <see cref="T:System.Web.UI.WebControls.ParameterCollection" /> 类型的数组。</summary>
        <returns><see cref="T:System.Type" /> 对象的排序数组，标识集合可以包含的 <see cref="T:System.Web.UI.WebControls.Parameter" /> 对象的类型。</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.UI.WebControls.ParameterCollection.CreateKnownType(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetValues">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.IOrderedDictionary GetValues (System.Web.HttpContext context, System.Web.UI.Control control);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Specialized.IOrderedDictionary GetValues(class System.Web.HttpContext context, class System.Web.UI.Control control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ParameterCollection.GetValues(System.Web.HttpContext,System.Web.UI.Control)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetValues (context As HttpContext, control As Control) As IOrderedDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Specialized::IOrderedDictionary ^ GetValues(System::Web::HttpContext ^ context, System::Web::UI::Control ^ control);" />
      <MemberSignature Language="F#" Value="member this.GetValues : System.Web.HttpContext * System.Web.UI.Control -&gt; System.Collections.Specialized.IOrderedDictionary" Usage="parameterCollection.GetValues (context, control)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.IOrderedDictionary</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
        <Parameter Name="control" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="context"><see cref="T:System.Web.HttpRequest" /> 绑定到的当前 <see cref="T:System.Web.UI.WebControls.Parameter" />。</param>
        <param name="control">传递给每个参数的 <see cref="T:System.Web.UI.Control" /> 方法的 <see cref="M:System.Web.UI.WebControls.ControlParameter.Evaluate(System.Web.HttpContext,System.Web.UI.Control)" /> 实例。</param>
        <summary>获取集合当前包含的 <see cref="T:System.Web.UI.WebControls.Parameter" /> 对象名称及其相应值的排序集合。</summary>
        <returns>名称/值对的 <see cref="T:System.Collections.Specialized.IOrderedDictionary" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 `control` 参数由集合中包含的 <xref:System.Web.UI.WebControls.Parameter> 对象使用，以检索 <xref:System.Web.UI.WebControls.Parameter> 对象绑定到的 <xref:System.Web.UI.Page> 和当前 <xref:System.Web.HttpRequest> 对象。

 由于 <xref:System.Collections.Specialized.IOrderedDictionary> 对象必须具有唯一命名项，但 <xref:System.Web.UI.WebControls.ParameterCollection> 集合不需要或保证唯一的 <xref:System.Web.UI.WebControls.Parameter> 对象名称，因此此方法的实现将向每个 <xref:System.Web.UI.WebControls.Parameter.Name%2A> 属性的末尾追加一个数字，以确保返回的集合中的唯一性。

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (System.Web.UI.WebControls.Parameter parameter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOf(class System.Web.UI.WebControls.Parameter parameter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ParameterCollection.IndexOf(System.Web.UI.WebControls.Parameter)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOf (parameter As Parameter) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOf(System::Web::UI::WebControls::Parameter ^ parameter);" />
      <MemberSignature Language="F#" Value="member this.IndexOf : System.Web.UI.WebControls.Parameter -&gt; int" Usage="parameterCollection.IndexOf parameter" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameter" Type="System.Web.UI.WebControls.Parameter" />
      </Parameters>
      <Docs>
        <param name="parameter">要在 <see cref="T:System.Web.UI.WebControls.Parameter" /> 中查找的 <see cref="T:System.Web.UI.WebControls.ParameterCollection" />。</param>
        <summary>确定 <see cref="T:System.Web.UI.WebControls.Parameter" /> 集合中的指定 <see cref="T:System.Web.UI.WebControls.ParameterCollection" /> 对象的索引。</summary>
        <returns>如果 <paramref name="parameter" /> 在集合中，则为它的索引，否则为 -1。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 使用此方法可以确定 <xref:System.Web.UI.WebControls.ParameterCollection> 集合中的参数的索引。

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public void Insert (int index, System.Web.UI.WebControls.Parameter parameter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Insert(int32 index, class System.Web.UI.WebControls.Parameter parameter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ParameterCollection.Insert(System.Int32,System.Web.UI.WebControls.Parameter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Insert (index As Integer, parameter As Parameter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Insert(int index, System::Web::UI::WebControls::Parameter ^ parameter);" />
      <MemberSignature Language="F#" Value="member this.Insert : int * System.Web.UI.WebControls.Parameter -&gt; unit" Usage="parameterCollection.Insert (index, parameter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="parameter" Type="System.Web.UI.WebControls.Parameter" />
      </Parameters>
      <Docs>
        <param name="index">插入 <see cref="T:System.Web.UI.WebControls.Parameter" /> 时所在的从零开始的索引。</param>
        <param name="parameter">要插入的 <see cref="T:System.Web.UI.WebControls.Parameter" />。</param>
        <summary>将指定的 <see cref="T:System.Web.UI.WebControls.Parameter" /> 对象插入到 <see cref="T:System.Web.UI.WebControls.ParameterCollection" /> 集合中的指定索引位置。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Examples
 下面的代码示例演示如何使用 <xref:System.Web.UI.WebControls.ParameterCollection.Insert%2A> 方法将 <xref:System.Web.UI.WebControls.Parameter> 对象添加到 <xref:System.Web.UI.WebControls.ParameterCollection> 集合中的特定位置。 在此示例中，多个 <xref:System.Web.UI.WebControls.QueryStringParameter> 对象将添加到 <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A> 集合，一个 <xref:System.Web.UI.WebControls.QueryStringParameter> 插入到集合中，并在加载页面时打印集合的顺序。

 [!code-aspx-csharp[System.Web.UI.WebControls.QueryStringParameter_7#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.QueryStringParameter_7/CS/qsp7acs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.QueryStringParameter_7#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.QueryStringParameter_7/VB/qsp7avb.aspx#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="index" /> 小于零。

- 或 -

 <paramref name="index" /> 大于 <see langword="Count" />。</exception>
        <altmember cref="M:System.Web.UI.StateManagedCollection.System#Collections#IList#IndexOf(System.Object)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Item">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>获取或设置集合中的 <see cref="T:System.Web.UI.WebControls.Parameter" /> 对象。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.Parameter this[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.Parameter Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ParameterCollection.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(index As Integer) As Parameter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::Parameter ^ default[int] { System::Web::UI::WebControls::Parameter ^ get(int index); void set(int index, System::Web::UI::WebControls::Parameter ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : System.Web.UI.WebControls.Parameter with get, set" Usage="System.Web.UI.WebControls.ParameterCollection.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Parameter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">从集合中检索的 <see cref="T:System.Web.UI.WebControls.Parameter" /> 的索引。</param>
        <summary>获取或设置集合中指定索引处的 <see cref="T:System.Web.UI.WebControls.Parameter" /> 对象。</summary>
        <value>位于集合中指定索引处的 <see cref="T:System.Web.UI.WebControls.Parameter" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 使用此索引器可按 <xref:System.Web.UI.WebControls.Parameter> 对象在 <xref:System.Web.UI.WebControls.ParameterCollection> 集合中的位置获取该对象。

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Parameter" />
        <altmember cref="T:System.Web.UI.WebControls.ControlParameter" />
        <altmember cref="T:System.Web.UI.WebControls.FormParameter" />
        <altmember cref="T:System.Web.UI.WebControls.QueryStringParameter" />
        <altmember cref="T:System.Web.UI.WebControls.SessionParameter" />
        <altmember cref="T:System.Web.UI.WebControls.ProfileParameter" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.Parameter this[string name] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.Parameter Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ParameterCollection.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(name As String) As Parameter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::Parameter ^ default[System::String ^] { System::Web::UI::WebControls::Parameter ^ get(System::String ^ name); void set(System::String ^ name, System::Web::UI::WebControls::Parameter ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Item(string) : System.Web.UI.WebControls.Parameter with get, set" Usage="System.Web.UI.WebControls.ParameterCollection.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Parameter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">要从集合中检索的 <see cref="T:System.Web.UI.WebControls.Parameter" /> 的 <see cref="P:System.Web.UI.WebControls.Parameter.Name" />。</param>
        <summary>获取或设置集合中具有指定名称的 <see cref="T:System.Web.UI.WebControls.Parameter" /> 对象。</summary>
        <value>集合中具有指定名称的 <see cref="T:System.Web.UI.WebControls.Parameter" />。 如果在集合中没找到 <see cref="T:System.Web.UI.WebControls.Parameter" />，则索引器返回 <see langword="null" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 使用数组表示法，使用此索引器按名称从 <xref:System.Web.UI.WebControls.ParameterCollection> 集合获取 <xref:System.Web.UI.WebControls.Parameter> 对象。



## Examples
 下面的代码示例演示如何使用 <xref:System.Web.UI.WebControls.ParameterCollection.Remove%2A> 方法和 <xref:System.Web.UI.WebControls.ParameterCollection.Item%2A> 索引器从 <xref:System.Web.UI.WebControls.ParameterCollection> 集合中删除 <xref:System.Web.UI.WebControls.Parameter> 对象。 在此示例中，有几个 <xref:System.Web.UI.WebControls.QueryStringParameter> 对象添加到了一个 <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A> 集合，其中一个 <xref:System.Web.UI.WebControls.QueryStringParameter> 被从集合中删除，并且在加载页面时将打印集合的顺序。

 [!code-aspx-csharp[System.Web.UI.WebControls.QueryStringParameter_6#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.QueryStringParameter_6/CS/qsp6cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.QueryStringParameter_6#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.QueryStringParameter_6/VB/qsp6vb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Parameter" />
        <altmember cref="T:System.Web.UI.WebControls.ControlParameter" />
        <altmember cref="T:System.Web.UI.WebControls.FormParameter" />
        <altmember cref="T:System.Web.UI.WebControls.QueryStringParameter" />
        <altmember cref="T:System.Web.UI.WebControls.SessionParameter" />
        <altmember cref="T:System.Web.UI.WebControls.ProfileParameter" />
      </Docs>
    </Member>
    <Member MemberName="OnClearComplete">
      <MemberSignature Language="C#" Value="protected override void OnClearComplete ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnClearComplete() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ParameterCollection.OnClearComplete" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnClearComplete ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnClearComplete();" />
      <MemberSignature Language="F#" Value="override this.OnClearComplete : unit -&gt; unit" Usage="parameterCollection.OnClearComplete " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>在清除此集合内容之后执行其他自定义进程。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 调用 <xref:System.Web.UI.WebControls.ParameterCollection.OnClearComplete%2A> 方法，以便在 <xref:System.Web.UI.StateManagedCollection.Clear%2A> 方法完成后执行其他处理。 它调用 <xref:System.Web.UI.WebControls.ParameterCollection.OnParametersChanged%2A> 方法。

 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>此方法允许实现者定义从基础集合中删除所有元素后必须执行的进程。 通过定义此方法，实施者可以向继承的方法添加功能，而无需重写所有其他方法。

 <see cref="M:System.Web.UI.StateManagedCollection.OnClear" /> 在标准 <see langword="Clear" /> 行为之前调用，而 <see cref="M:System.Web.UI.WebControls.ParameterCollection.OnClearComplete" /> 在标准 <see langword="Clear" /> 行为之后调用。</para></block>
        <altmember cref="M:System.Web.UI.WebControls.ParameterCollection.OnParametersChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnInsert">
      <MemberSignature Language="C#" Value="protected override void OnInsert (int index, object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnInsert(int32 index, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ParameterCollection.OnInsert(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnInsert (index As Integer, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnInsert(int index, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="override this.OnInsert : int * obj -&gt; unit" Usage="parameterCollection.OnInsert (index, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">集合中插入 <see cref="T:System.Web.UI.WebControls.Parameter" /> 的索引。</param>
        <param name="value">插入到 <see cref="T:System.Web.UI.WebControls.Parameter" /> 中的 <see cref="T:System.Web.UI.WebControls.ParameterCollection" />。</param>
        <summary>在调用 <see cref="M:System.Web.UI.WebControls.ParameterCollection.Insert(System.Int32,System.Web.UI.WebControls.Parameter)" /> 方法前发生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 调用 <xref:System.Web.UI.WebControls.ParameterCollection.OnInsert%2A> 方法，以便在调用 <xref:System.Web.UI.WebControls.ParameterCollection.Insert%2A> 方法之前执行其他处理。

 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>此方法允许实现者定义在将元素插入基础集合之前必须执行的进程。 通过定义此方法，实施者可以向继承的方法添加功能，而无需重写所有其他方法。</para></block>
        <altmember cref="M:System.Web.UI.WebControls.ParameterCollection.Insert(System.Int32,System.Web.UI.WebControls.Parameter)" />
      </Docs>
    </Member>
    <Member MemberName="OnInsertComplete">
      <MemberSignature Language="C#" Value="protected override void OnInsertComplete (int index, object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnInsertComplete(int32 index, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ParameterCollection.OnInsertComplete(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnInsertComplete (index As Integer, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnInsertComplete(int index, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="override this.OnInsertComplete : int * obj -&gt; unit" Usage="parameterCollection.OnInsertComplete (index, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">集合中插入 <see cref="T:System.Web.UI.WebControls.Parameter" /> 的索引。</param>
        <param name="value">插入到 <see cref="T:System.Web.UI.WebControls.Parameter" /> 中的 <see cref="T:System.Web.UI.WebControls.ParameterCollection" />。</param>
        <summary>在 <see cref="M:System.Web.UI.WebControls.ParameterCollection.Insert(System.Int32,System.Web.UI.WebControls.Parameter)" /> 方法完成后发生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 调用 <xref:System.Web.UI.WebControls.ParameterCollection.OnInsertComplete%2A> 方法，以便在 <xref:System.Web.UI.WebControls.ParameterCollection.Insert%2A> 方法完成后执行其他处理。 它调用 <xref:System.Web.UI.WebControls.ParameterCollection.OnParametersChanged%2A> 方法。

 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>此方法允许实现者定义在将元素插入到基础集合中后必须执行的进程。 通过定义此方法，实施者可以向继承的方法添加功能，而无需重写所有其他方法。</para></block>
        <altmember cref="M:System.Web.UI.WebControls.ParameterCollection.Insert(System.Int32,System.Web.UI.WebControls.Parameter)" />
      </Docs>
    </Member>
    <Member MemberName="OnParametersChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnParametersChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnParametersChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ParameterCollection.OnParametersChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnParametersChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnParametersChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnParametersChanged : EventArgs -&gt; unit&#xA;override this.OnParametersChanged : EventArgs -&gt; unit" Usage="parameterCollection.OnParametersChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件数据的 <see cref="T:System.EventArgs" />。</param>
        <summary>引发 <see cref="E:System.Web.UI.WebControls.ParameterCollection.ParametersChanged" /> 事件。</summary>
        <remarks>To be added.</remarks>
        <altmember cref="E:System.Web.UI.WebControls.ParameterCollection.ParametersChanged" />
        <altmember cref="M:System.Web.UI.WebControls.Parameter.OnParameterChanged" />
      </Docs>
    </Member>
    <Member MemberName="OnRemoveComplete">
      <MemberSignature Language="C#" Value="protected override void OnRemoveComplete (int index, object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnRemoveComplete(int32 index, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ParameterCollection.OnRemoveComplete(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnRemoveComplete (index As Integer, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnRemoveComplete(int index, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="override this.OnRemoveComplete : int * obj -&gt; unit" Usage="parameterCollection.OnRemoveComplete (index, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">集合中移除 <see cref="T:System.Web.UI.WebControls.Parameter" /> 的索引。</param>
        <param name="value">从 <see cref="T:System.Web.UI.WebControls.Parameter" /> 中移除的 <see cref="T:System.Web.UI.WebControls.ParameterCollection" />。</param>
        <summary>在 <see cref="M:System.Web.UI.WebControls.ParameterCollection.Remove(System.Web.UI.WebControls.Parameter)" /> 方法完成后发生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 调用 <xref:System.Web.UI.WebControls.ParameterCollection.OnRemoveComplete%2A> 方法，以便在 <xref:System.Web.UI.WebControls.ParameterCollection.Remove%2A> 方法完成后执行其他处理。 它调用 <xref:System.Web.UI.WebControls.ParameterCollection.OnParametersChanged%2A> 方法。

 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>此方法允许实现者定义从基础集合中删除元素后必须执行的进程。 通过定义此方法，实施者可以向继承的方法添加功能，而无需重写所有其他方法。</para></block>
        <altmember cref="M:System.Web.UI.WebControls.ParameterCollection.Remove(System.Web.UI.WebControls.Parameter)" />
        <altmember cref="M:System.Web.UI.WebControls.ParameterCollection.RemoveAt(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="OnValidate">
      <MemberSignature Language="C#" Value="protected override void OnValidate (object o);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnValidate(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ParameterCollection.OnValidate(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnValidate (o As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnValidate(System::Object ^ o);" />
      <MemberSignature Language="F#" Value="override this.OnValidate : obj -&gt; unit" Usage="parameterCollection.OnValidate o" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o">正被验证的 <see langword="object" />。</param>
        <summary>当验证值时执行其他自定义进程。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.ParameterCollection.OnValidate%2A> 方法确定 `o` 参数中指定的对象是否为 <xref:System.Web.UI.WebControls.Parameter> 的实例。 如果不是，则会引发 <xref:System.ArgumentException> 异常。

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">对象不是 <see cref="T:System.Web.UI.WebControls.Parameter" /> 类或其派生类的实例。</exception>
        <exception cref="T:System.ArgumentNullException">对象为 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="ParametersChanged">
      <MemberSignature Language="C#" Value="public event EventHandler ParametersChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ParametersChanged" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ParameterCollection.ParametersChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ParametersChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ ParametersChanged;" />
      <MemberSignature Language="F#" Value="member this.ParametersChanged : EventHandler " Usage="member this.ParametersChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>当集合包含的一个或多个 <see cref="T:System.Web.UI.WebControls.Parameter" /> 对象的状态改变时发生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 如果 <xref:System.Web.UI.WebControls.ParameterCollection> 集合包含在数据源控件中，则 <xref:System.Web.UI.WebControls.ParameterCollection.ParametersChanged> 事件将引发数据源控件的 `DataSourceChanged` 事件，从而导致任何数据绑定控件重新绑定。

 引发事件时，将通过委托调用事件处理程序。 有关详细信息，请参阅[处理和引发事件](/dotnet/standard/events/)。

 <xref:System.Web.UI.WebControls.Parameter.OnParameterChanged%2A> 方法还允许派生类对事件进行处理而不必附加委托。 这是在派生类中处理事件的首选技术。

 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>在派生类中重写 <see cref="M:System.Web.UI.WebControls.Parameter.OnParameterChanged" /> 时，一定要调用基类的 <see cref="M:System.Web.UI.WebControls.Parameter.OnParameterChanged" /> 方法，以便已注册的委托对事件进行接收。</para></block>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (System.Web.UI.WebControls.Parameter parameter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(class System.Web.UI.WebControls.Parameter parameter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ParameterCollection.Remove(System.Web.UI.WebControls.Parameter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (parameter As Parameter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove(System::Web::UI::WebControls::Parameter ^ parameter);" />
      <MemberSignature Language="F#" Value="member this.Remove : System.Web.UI.WebControls.Parameter -&gt; unit" Usage="parameterCollection.Remove parameter" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameter" Type="System.Web.UI.WebControls.Parameter" />
      </Parameters>
      <Docs>
        <param name="parameter">要从 <see cref="T:System.Web.UI.WebControls.Parameter" /> 中删除的 <see cref="T:System.Web.UI.WebControls.ParameterCollection" />。</param>
        <summary>从 <see cref="T:System.Web.UI.WebControls.Parameter" /> 集合中移除指定的 <see cref="T:System.Web.UI.WebControls.ParameterCollection" /> 对象。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 使用此方法从 <xref:System.Web.UI.WebControls.ParameterCollection> 集合中删除指定的 <xref:System.Web.UI.WebControls.Parameter> 对象。



## Examples
 下面的代码示例演示如何使用 <xref:System.Web.UI.WebControls.ParameterCollection.Remove%2A> 方法和 <xref:System.Web.UI.WebControls.ParameterCollection.Item%2A> 索引器从 <xref:System.Web.UI.WebControls.ParameterCollection> 集合中删除 <xref:System.Web.UI.WebControls.Parameter> 对象。 在此示例中，将多个 <xref:System.Web.UI.WebControls.QueryStringParameter> 对象添加到一个 <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A> 集合，从集合中删除一个 <xref:System.Web.UI.WebControls.QueryStringParameter> 对象，并在加载页面时打印集合的顺序。

 [!code-aspx-csharp[System.Web.UI.WebControls.QueryStringParameter_6#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.QueryStringParameter_6/CS/qsp6cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.QueryStringParameter_6#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.QueryStringParameter_6/VB/qsp6vb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Parameter" />
        <altmember cref="M:System.Web.UI.WebControls.ParameterCollection.Add(System.Web.UI.WebControls.Parameter)" />
        <altmember cref="M:System.Web.UI.WebControls.ParameterCollection.RemoveAt(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ParameterCollection.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAt(int index);" />
      <MemberSignature Language="F#" Value="member this.RemoveAt : int -&gt; unit" Usage="parameterCollection.RemoveAt index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">要移除的 <see cref="T:System.Web.UI.WebControls.Parameter" /> 的索引。</param>
        <summary>移除 <see cref="T:System.Web.UI.WebControls.Parameter" /> 集合中指定索引处的 <see cref="T:System.Web.UI.WebControls.ParameterCollection" /> 对象。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 使用 <xref:System.Web.UI.WebControls.ParameterCollection.RemoveAt%2A> 方法从集合中移除位于指定索引处的 <xref:System.Web.UI.WebControls.Parameter> 对象。



## Examples
 下面的代码示例演示如何使用 <xref:System.Web.UI.WebControls.ParameterCollection.RemoveAt%2A> 方法从位于特定位置的 <xref:System.Web.UI.WebControls.ParameterCollection> 集合中移除 <xref:System.Web.UI.WebControls.Parameter> 对象。 在此示例中，将多个 <xref:System.Web.UI.WebControls.QueryStringParameter> 对象添加到一个 <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A> 集合，从集合中删除一个 <xref:System.Web.UI.WebControls.QueryStringParameter> 对象，并在加载页面时打印集合的顺序。

 [!code-aspx-csharp[System.Web.UI.WebControls.QueryStringParameter_5#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.QueryStringParameter_5/CS/qsp5cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.QueryStringParameter_5#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.QueryStringParameter_5/VB/qsp5vb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Parameter" />
        <altmember cref="M:System.Web.UI.WebControls.ParameterCollection.Add(System.Web.UI.WebControls.Parameter)" />
        <altmember cref="M:System.Web.UI.WebControls.ParameterCollection.RemoveAt(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="SetDirtyObject">
      <MemberSignature Language="C#" Value="protected override void SetDirtyObject (object o);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void SetDirtyObject(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ParameterCollection.SetDirtyObject(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub SetDirtyObject (o As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void SetDirtyObject(System::Object ^ o);" />
      <MemberSignature Language="F#" Value="override this.SetDirtyObject : obj -&gt; unit" Usage="parameterCollection.SetDirtyObject o" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o">被标记为自上次从视图状态加载或保存后已发生更改的 <see cref="T:System.Web.UI.WebControls.Parameter" />。</param>
        <summary>将指定的 <see cref="T:System.Web.UI.WebControls.Parameter" /> 对象标记为自上次从视图状态加载或保存后已发生更改。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.ParameterCollection.SetDirtyObject%2A> 方法是一个帮助器函数，用于将 <xref:System.Web.UI.WebControls.Parameter> 对象标记为自上次从视图状态加载或保存后已发生更改。

> [!NOTE]
>  此方法仅由控件开发人员使用。

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateValues">
      <MemberSignature Language="C#" Value="public void UpdateValues (System.Web.HttpContext context, System.Web.UI.Control control);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UpdateValues(class System.Web.HttpContext context, class System.Web.UI.Control control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ParameterCollection.UpdateValues(System.Web.HttpContext,System.Web.UI.Control)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UpdateValues (context As HttpContext, control As Control)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UpdateValues(System::Web::HttpContext ^ context, System::Web::UI::Control ^ control);" />
      <MemberSignature Language="F#" Value="member this.UpdateValues : System.Web.HttpContext * System.Web.UI.Control -&gt; unit" Usage="parameterCollection.UpdateValues (context, control)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
        <Parameter Name="control" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="context"><see cref="T:System.Web.HttpRequest" /> 绑定到的当前 <see cref="T:System.Web.UI.WebControls.Parameter" />。</param>
        <param name="control">传递给每个参数的 <see cref="T:System.Web.UI.Control" /> 方法的 <see cref="M:System.Web.UI.WebControls.ControlParameter.Evaluate(System.Web.HttpContext,System.Web.UI.Control)" /> 实例。</param>
        <summary>遍历集合包含的 <see cref="T:System.Web.UI.WebControls.Parameter" /> 对象，并对每个对象调用 <see langword="Evaluate" /> 方法。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 `control` 参数由集合中包含的 <xref:System.Web.UI.WebControls.Parameter> 对象使用，以检索 <xref:System.Web.UI.WebControls.Parameter> 对象绑定到的 <xref:System.Web.UI.Page> 和当前 <xref:System.Web.HttpRequest> 对象。

 如果 <xref:System.Web.UI.WebControls.Parameter> 对象的当前值与视图状态中缓存的值不同，则调用 <xref:System.Web.UI.WebControls.Parameter.OnParameterChanged%2A> 方法。

 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.ParameterCollection.GetValues(System.Web.HttpContext,System.Web.UI.Control)" />
      </Docs>
    </Member>
  </Members>
</Type>
