<Type Name="DetailsView" FullName="System.Web.UI.WebControls.DetailsView">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e73fa2880d32455b2b81c39dc0a5470fd151bd3d" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86613306" /></Metadata><TypeSignature Language="C#" Value="public class DetailsView : System.Web.UI.WebControls.CompositeDataBoundControl, System.Web.UI.ICallbackEventHandler, System.Web.UI.IDataItemContainer, System.Web.UI.IPostBackEventHandler, System.Web.UI.WebControls.ICallbackContainer, System.Web.UI.WebControls.IPostBackContainer" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DetailsView extends System.Web.UI.WebControls.CompositeDataBoundControl implements class System.Web.UI.ICallbackEventHandler, class System.Web.UI.IDataItemContainer, class System.Web.UI.INamingContainer, class System.Web.UI.IPostBackEventHandler, class System.Web.UI.WebControls.ICallbackContainer, class System.Web.UI.WebControls.IPostBackContainer" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.DetailsView" />
  <TypeSignature Language="VB.NET" Value="Public Class DetailsView&#xA;Inherits CompositeDataBoundControl&#xA;Implements ICallbackContainer, ICallbackEventHandler, IDataItemContainer, IPostBackContainer, IPostBackEventHandler" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5" />
  <TypeSignature Language="C++ CLI" Value="public ref class DetailsView : System::Web::UI::WebControls::CompositeDataBoundControl, System::Web::UI::ICallbackEventHandler, System::Web::UI::IDataItemContainer, System::Web::UI::IPostBackEventHandler, System::Web::UI::WebControls::ICallbackContainer, System::Web::UI::WebControls::IPostBackContainer" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5" />
  <TypeSignature Language="F#" Value="type DetailsView = class&#xA;    inherit CompositeDataBoundControl&#xA;    interface IDataItemContainer&#xA;    interface INamingContainer&#xA;    interface ICallbackContainer&#xA;    interface ICallbackEventHandler&#xA;    interface IPostBackEventHandler&#xA;    interface IPostBackContainer" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5" />
  <TypeSignature Language="C#" Value="public class DetailsView : System.Web.UI.WebControls.CompositeDataBoundControl, System.Web.UI.ICallbackEventHandler, System.Web.UI.IDataItemContainer, System.Web.UI.IPostBackEventHandler, System.Web.UI.WebControls.ICallbackContainer, System.Web.UI.WebControls.IDataBoundItemControl, System.Web.UI.WebControls.IFieldControl, System.Web.UI.WebControls.IPostBackContainer" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DetailsView extends System.Web.UI.WebControls.CompositeDataBoundControl implements class System.Web.UI.ICallbackEventHandler, class System.Web.UI.IDataItemContainer, class System.Web.UI.INamingContainer, class System.Web.UI.IPostBackEventHandler, class System.Web.UI.WebControls.ICallbackContainer, class System.Web.UI.WebControls.IDataBoundControl, class System.Web.UI.WebControls.IDataBoundItemControl, class System.Web.UI.WebControls.IFieldControl, class System.Web.UI.WebControls.IPostBackContainer" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <TypeSignature Language="VB.NET" Value="Public Class DetailsView&#xA;Inherits CompositeDataBoundControl&#xA;Implements ICallbackContainer, ICallbackEventHandler, IDataBoundItemControl, IDataItemContainer, IFieldControl, IPostBackContainer, IPostBackEventHandler" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <TypeSignature Language="C++ CLI" Value="public ref class DetailsView : System::Web::UI::WebControls::CompositeDataBoundControl, System::Web::UI::ICallbackEventHandler, System::Web::UI::IDataItemContainer, System::Web::UI::IPostBackEventHandler, System::Web::UI::WebControls::ICallbackContainer, System::Web::UI::WebControls::IDataBoundItemControl, System::Web::UI::WebControls::IFieldControl, System::Web::UI::WebControls::IPostBackContainer" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <TypeSignature Language="F#" Value="type DetailsView = class&#xA;    inherit CompositeDataBoundControl&#xA;    interface IDataItemContainer&#xA;    interface INamingContainer&#xA;    interface ICallbackContainer&#xA;    interface ICallbackEventHandler&#xA;    interface IPostBackEventHandler&#xA;    interface IPostBackContainer&#xA;    interface IDataBoundItemControl&#xA;    interface IDataBoundControl&#xA;    interface IFieldControl" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.CompositeDataBoundControl</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.UI.ICallbackEventHandler</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.IDataItemContainer</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.INamingContainer</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.IPostBackEventHandler</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.WebControls.ICallbackContainer</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.WebControls.IPostBackContainer</InterfaceName>
    </Interface>
    <Interface FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <InterfaceName>System.Web.UI.WebControls.IDataBoundControl</InterfaceName>
    </Interface>
    <Interface FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <InterfaceName>System.Web.UI.WebControls.IDataBoundItemControl</InterfaceName>
    </Interface>
    <Interface FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <InterfaceName>System.Web.UI.WebControls.IFieldControl</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.ComponentModel.DefaultEvent("PageIndexChanging")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultEvent("PageIndexChanging")&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName Language="C#">[System.ComponentModel.Designer("System.Web.UI.Design.WebControls.DetailsViewDesigner, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.ComponentModel.Designer("System.Web.UI.Design.WebControls.DetailsViewDesigner, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Web.UI.ControlValueProperty("SelectedValue")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Web.UI.ControlValueProperty("SelectedValue")&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Web.UI.SupportsEventValidation]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Web.UI.SupportsEventValidation&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Web.UI.ToolboxData("&lt;{0}:DetailsView runat="server" Width="125px" Height="50px"&gt;&lt;/{0}:DetailsView&gt;")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Web.UI.ToolboxData("&lt;{0}:DetailsView runat="server" Width="125px" Height="50px"&gt;&lt;/{0}:DetailsView&gt;")&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName Language="C#">[System.ComponentModel.Designer("System.Web.UI.Design.WebControls.DetailsViewDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.ComponentModel.Designer("System.Web.UI.Design.WebControls.DetailsViewDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName Language="C#">[System.Web.UI.DataKeyProperty("DataKey")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Web.UI.DataKeyProperty("DataKey")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>在表中显示来自数据源的单个记录的值，其中每个数据行表示一个记录字段。 <see cref="T:System.Web.UI.WebControls.DetailsView" /> 控件可用于编辑、删除和插入记录。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[

## Remarks
 本主题内容：

-   [介绍](#introduction)

-   [行字段](#row_fields)

-   [绑定到数据](#binding_to_data)

-   [安全](#security)

-   [数据操作](#data_operations)

-   [自定义用户界面](#customizing_the_user_interface)

-   [事件](#events)

-   [辅助功能](#Accessibility)

-   [声明性语法](#DeclarativeSyntax)

<a name="introduction"></a>
## <a name="introduction"></a>介绍
 <xref:System.Web.UI.WebControls.DetailsView>控件用于在表中显示数据源中的单个记录，其中记录的每个字段都显示在表的一行中。 它可与控件一起用于 <xref:System.Web.UI.WebControls.GridView> 主-从方案。 <xref:System.Web.UI.WebControls.DetailsView>控件支持以下功能：

-   绑定到数据源控件，如 <xref:System.Web.UI.WebControls.SqlDataSource> 。

-   内置插入功能。

-   内置的更新和删除功能。

-   内置的分页功能。

-   以编程方式访问 <xref:System.Web.UI.WebControls.DetailsView> 对象模型，以动态设置属性、处理事件等。

-   通过主题和样式自定义外观。

<a name="row_fields"></a>
## <a name="row-fields"></a>行字段
 控件中的每个数据行 <xref:System.Web.UI.WebControls.DetailsView> 都是通过声明字段控件创建的。 不同的行字段类型确定控件中行的行为。 字段控件派生自 <xref:System.Web.UI.WebControls.DataControlField> 。 下表列出了可以使用的不同行字段类型。

|列字段类型|说明|
|-----------------------|-----------------|
|<xref:System.Web.UI.WebControls.BoundField>|以文本形式显示数据源中字段的值。|
|<xref:System.Web.UI.WebControls.ButtonField>|在控件中显示命令按钮 <xref:System.Web.UI.WebControls.DetailsView> 。 这允许您显示具有自定义按钮控件的行，如 "添加" 或 "移除" 按钮。|
|<xref:System.Web.UI.WebControls.CheckBoxField>|在控件中显示复选框 <xref:System.Web.UI.WebControls.DetailsView> 。 此行字段类型通常用于显示具有布尔值的字段。|
|<xref:System.Web.UI.WebControls.CommandField>|显示内置命令按钮，用于在控件中执行编辑、插入或删除操作 <xref:System.Web.UI.WebControls.DetailsView> 。|
|<xref:System.Web.UI.WebControls.HyperLinkField>|将数据源中的字段值显示为超链接。 此行字段类型允许您将第二个字段绑定到超链接的 URL。|
|<xref:System.Web.UI.WebControls.ImageField>|在控件中显示图像 <xref:System.Web.UI.WebControls.DetailsView> 。|
|<xref:System.Web.UI.WebControls.TemplateField>|根据指定的模板，在控件中显示行的用户定义内容 <xref:System.Web.UI.WebControls.DetailsView> 。 此行字段类型允许您创建自定义行字段。|

 默认情况下， <xref:System.Web.UI.WebControls.DetailsView.AutoGenerateRows%2A> 属性设置为 `true` ，这将为数据源中的可绑定类型的每个字段自动生成一个绑定行字段对象。 有效的可绑定类型为、、、 <xref:System.String> <xref:System.DateTime> <xref:System.Decimal> <xref:System.Guid> 和基元类型集。 然后，每个字段在行中显示为文本，并按照每个字段在数据源中的显示顺序显示。

 自动生成行可提供一种快速简单的方法来显示记录中的每个字段。 但是，若要使用 <xref:System.Web.UI.WebControls.DetailsView> 控件的高级功能，必须显式声明要包含在控件中的行字段 <xref:System.Web.UI.WebControls.DetailsView> 。 若要声明行字段，请首先将 <xref:System.Web.UI.WebControls.DetailsView.AutoGenerateRows%2A> 属性设置为 `false` 。 接下来， `<Fields>` 在控件的开始标记和结束标记之间添加开始标记和结束标记 <xref:System.Web.UI.WebControls.DetailsView> 。 最后，列出要在开始标记和结束标记之间包括的行字段 `<Fields>` 。 指定的行字段将 <xref:System.Web.UI.WebControls.DetailsView.Fields%2A> 按所列顺序添加到集合中。 <xref:System.Web.UI.WebControls.DetailsView.Fields%2A>集合允许您以编程方式管理控件中的行字段 <xref:System.Web.UI.WebControls.DetailsView> 。

> [!NOTE]
>  自动生成的行字段不会添加到 <xref:System.Web.UI.WebControls.DetailsView.Fields%2A> 集合中。

> [!NOTE]
>  显式声明的行字段可与自动生成的行字段一起显示。 如果同时使用这两种方法，将首先呈现显式声明的行字段，然后呈现自动生成的行字段。

<a name="binding_to_data"></a>
## <a name="binding-to-data"></a>绑定到数据
 <xref:System.Web.UI.WebControls.DetailsView>控件可以绑定到数据源控件 (例如 <xref:System.Web.UI.WebControls.SqlDataSource> 控件或 <xref:System.Web.UI.WebControls.ObjectDataSource> 控件) 或实现接口的任何数据源集合 <xref:System.Collections.IEnumerable?displayProperty=nameWithType> ，如 <xref:System.Data.DataView?displayProperty=nameWithType> 、 <xref:System.Collections.ArrayList?displayProperty=nameWithType> 、 <xref:System.Collections.Generic.List%601?displayProperty=nameWithType> 或其他集合类型。 使用以下方法之一将 <xref:System.Web.UI.WebControls.DetailsView> 控件绑定到相应的数据源类型：

-   若要绑定到数据源控件，请将 <xref:System.Web.UI.WebControls.DataBoundControl.DataSourceID%2A> 控件的属性设置 <xref:System.Web.UI.WebControls.DetailsView> 为 <xref:System.Web.UI.Control.ID%2A> 数据源控件的值。 <xref:System.Web.UI.WebControls.DetailsView>控件将自动绑定到指定的数据源控件。 这是绑定到数据的首选方法。

-   若要绑定到实现接口的数据源 <xref:System.Collections.IEnumerable?displayProperty=nameWithType> ，请以编程方式将 <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataSource%2A> 控件的属性设置 <xref:System.Web.UI.WebControls.DetailsView> 为数据源，然后调用 <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> 方法。

 有关数据绑定的详细信息，请参阅 [绑定到数据库](https://docs.microsoft.com/previous-versions/aspnet/ms178361(v=vs.100))。

<a name="security"></a>
## <a name="security"></a>安全性
 此控件可用于显示用户输入，其中可能包括恶意客户端脚本。 在应用程序中显示可执行脚本、SQL 语句或其他代码之前，请检查从该客户端发送的任何信息。 ASP.NET 提供输入请求验证功能来阻止用户输入中的脚本和 HTML。 有关详细信息，请参阅[脚本侵入概述](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100))。 还提供验证服务器控件以评估用户输入。 有关详细信息，请参阅 [验证服务器控制语法](https://msdn.microsoft.com/library/96d2c59e-693c-4079-9b53-b3ff0d9e9133)。

<a name="data_operations"></a>
## <a name="data-operations"></a>数据操作
 <xref:System.Web.UI.WebControls.DetailsView>控件提供内置功能，使用户可以对控件中的项进行更新、删除、插入和分页。 当 <xref:System.Web.UI.WebControls.DetailsView> 控件绑定到数据源控件时， <xref:System.Web.UI.WebControls.DetailsView> 控件可以利用数据源控件的功能，并提供自动更新、删除、插入和分页功能。

> [!NOTE]
>  <xref:System.Web.UI.WebControls.DetailsView>控件可以为与其他类型的数据源的更新、删除、插入和分页操作提供支持; 但是，必须在相应的事件处理程序中提供这些操作的实现。 有关详细信息，请参阅<xref:System.Web.UI.WebControls.DetailsView.ItemDeleting>、<xref:System.Web.UI.WebControls.DetailsView.ItemInserting>和<xref:System.Web.UI.WebControls.DetailsView.ItemUpdating>。

 <xref:System.Web.UI.WebControls.DetailsView>控件可以将 <xref:System.Web.UI.WebControls.CommandField> <xref:System.Web.UI.WebControls.DetailsView.AutoGenerateEditButton%2A> 、 <xref:System.Web.UI.WebControls.DetailsView.AutoGenerateDeleteButton%2A> 或 <xref:System.Web.UI.WebControls.DetailsView.AutoGenerateInsertButton%2A> 属性分别设置为，从而自动添加具有 "编辑"、"删除" 或 "新建" 按钮的行字段 `true` 。 与 "删除" 按钮 (会立即删除选定的记录) 在单击 "编辑" 或 "新建" 按钮时， <xref:System.Web.UI.WebControls.DetailsView> 控件将分别进入 "编辑" 或 "插入" 模式。 在编辑模式下，"编辑" 按钮将替换为更新和 "取消" 按钮。 适用于字段的数据类型的输入控件 (例如， <xref:System.Web.UI.WebControls.TextBox> 或 <xref:System.Web.UI.WebControls.CheckBox> 控件) 显示，其中包含字段值供用户修改。 单击 "更新" 按钮将更新数据源中的记录，而单击 "取消" 按钮将放弃所有更改。 同样，在插入模式下，"新建" 按钮将被替换为 "插入" 和 "取消" 按钮，并为用户显示空输入控件以输入新记录的值。

> [!NOTE]
>  您还可以在 <xref:System.Web.UI.WebControls.ButtonField> 、 <xref:System.Web.UI.WebControls.CommandField> 或行字段中手动定义更新、删除和插入命令按钮 <xref:System.Web.UI.WebControls.TemplateField> 。 <xref:System.Web.UI.WebControls.DetailsView>控件识别 <xref:System.Web.UI.WebControls.Button.CommandName%2A> 属性设置为 "编辑"、"更新"、"删除"、"新建"、"插入" 或 "取消" 的按钮; 但是，您仍然必须自行提供此功能。 有关详细信息，请参阅<xref:System.Web.UI.WebControls.DetailsView.ItemDeleting>、<xref:System.Web.UI.WebControls.DetailsView.ItemInserting>和<xref:System.Web.UI.WebControls.DetailsView.ItemUpdating>。

 <xref:System.Web.UI.WebControls.DetailsView>控件提供分页功能，该功能允许用户导航到数据源中的其他记录。 启用后，页面导航控件将显示在页导航行中。 若要启用分页，请将 <xref:System.Web.UI.WebControls.DetailsView.AllowPaging%2A> 属性设置为 `true` 。 使用和属性可以自定义页导航 <xref:System.Web.UI.WebControls.DetailsView.PagerStyle%2A> 行 <xref:System.Web.UI.WebControls.DetailsView.PagerSettings%2A> 。

<a name="customizing_the_user_interface"></a>
## <a name="customizing-the-user-interface"></a>自定义用户界面
 您可以 <xref:System.Web.UI.WebControls.DetailsView> 通过设置控件的不同部分的样式属性来自定义控件的外观。 下表列出了可以设置的样式属性。

|Style 属性|说明|
|--------------------|-----------------|
|<xref:System.Web.UI.WebControls.DetailsView.AlternatingRowStyle%2A>|控件中的交替数据行的样式设置 <xref:System.Web.UI.WebControls.DetailsView> 。 设置此属性时，数据行将以带区显示，在 <xref:System.Web.UI.WebControls.DetailsView.RowStyle%2A> 设置和设置之间交替 <xref:System.Web.UI.WebControls.DetailsView.AlternatingRowStyle%2A> 。|
|<xref:System.Web.UI.WebControls.DetailsView.CommandRowStyle%2A>|包含内置命令按钮的行的样式设置。|
|<xref:System.Web.UI.WebControls.DetailsView.EditRowStyle%2A>|控件处于编辑模式时数据行的样式设置 <xref:System.Web.UI.WebControls.DetailsView> 。|
|<xref:System.Web.UI.WebControls.DetailsView.EmptyDataRowStyle%2A>|<xref:System.Web.UI.WebControls.DetailsView>当数据源不包含任何记录时，控件中显示的空数据行的样式设置。|
|<xref:System.Web.UI.WebControls.DetailsView.FooterStyle%2A>|脚注行的样式设置。|
|<xref:System.Web.UI.WebControls.DetailsView.HeaderStyle%2A>|标题行的样式设置。|
|<xref:System.Web.UI.WebControls.DetailsView.InsertRowStyle%2A>|控件处于插入模式时数据行的样式设置 <xref:System.Web.UI.WebControls.DetailsView> 。|
|<xref:System.Web.UI.WebControls.DetailsView.PagerStyle%2A>|页导航行的样式设置。|
|<xref:System.Web.UI.WebControls.DetailsView.RowStyle%2A>|控件中的数据行的样式设置 <xref:System.Web.UI.WebControls.DetailsView> 。 如果 <xref:System.Web.UI.WebControls.DetailsView.AlternatingRowStyle%2A> 同时设置了属性，则会在 <xref:System.Web.UI.WebControls.DetailsView.RowStyle%2A> 设置和设置之间交替显示数据行 <xref:System.Web.UI.WebControls.DetailsView.AlternatingRowStyle%2A> 。|
|<xref:System.Web.UI.WebControls.DetailsView.FieldHeaderStyle%2A>|标题列的样式设置。|

<a name="events"></a>
## <a name="events"></a>事件
 <xref:System.Web.UI.WebControls.DetailsView>控件提供了几个可对其进行编程的事件。 这使您可以在每次发生事件时运行自定义例程。 下表列出了控件支持的事件 <xref:System.Web.UI.WebControls.DetailsView> 。 该 <xref:System.Web.UI.WebControls.DetailsView> 控件还从其基类继承这些事件： <xref:System.Web.UI.Control.DataBinding> 、 <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBound> 、、、、 <xref:System.Web.UI.Control.Disposed> <xref:System.Web.UI.Control.Init> <xref:System.Web.UI.Control.Load> <xref:System.Web.UI.Control.PreRender> 和 <xref:System.Web.UI.Control.Render%2A> 。

|事件|说明|
|-----------|-----------------|
|<xref:System.Web.UI.WebControls.DetailsView.ItemCommand>|在 <xref:System.Web.UI.WebControls.DetailsView> 控件中单击某个按钮时发生。|
|<xref:System.Web.UI.WebControls.DetailsView.ItemCreated>|<xref:System.Web.UI.WebControls.DetailsViewRow>在控件中创建所有对象之后发生 <xref:System.Web.UI.WebControls.DetailsView> 。 此事件通常用于在记录显示之前修改记录的值。|
|<xref:System.Web.UI.WebControls.DetailsView.ItemDeleted>|在单击 "删除" 按钮时，但在 <xref:System.Web.UI.WebControls.DetailsView> 控件从数据源中删除记录之后发生。 此事件通常用于检查删除操作的结果。|
|<xref:System.Web.UI.WebControls.DetailsView.ItemDeleting>|在单击 "删除" 按钮时，但在 <xref:System.Web.UI.WebControls.DetailsView> 控件从数据源中删除记录之前发生。 此事件通常用于取消删除操作。|
|<xref:System.Web.UI.WebControls.DetailsView.ItemInserted>|单击 "插入" 按钮时，但在 <xref:System.Web.UI.WebControls.DetailsView> 控件插入记录后发生。 此事件通常用于检查插入操作的结果。|
|<xref:System.Web.UI.WebControls.DetailsView.ItemInserting>|当单击 "插入" 按钮时，但在 <xref:System.Web.UI.WebControls.DetailsView> 控件插入记录之前发生。 此事件通常用于取消插入操作。|
|<xref:System.Web.UI.WebControls.DetailsView.ItemUpdated>|当单击 "更新" 按钮时，但在 <xref:System.Web.UI.WebControls.DetailsView> 控件更新行后发生。 此事件通常用于检查更新操作的结果。|
|<xref:System.Web.UI.WebControls.DetailsView.ItemUpdating>|当单击 "更新" 按钮时，但在 <xref:System.Web.UI.WebControls.DetailsView> 控件更新记录之前发生。 此事件通常用于取消更新操作。|
|<xref:System.Web.UI.WebControls.DetailsView.ModeChanged>|在 <xref:System.Web.UI.WebControls.DetailsView> 控件 (编辑、插入或只读模式) 更改模式之后发生。 此事件通常用于在控件更改模式时执行任务 <xref:System.Web.UI.WebControls.DetailsView> 。|
|<xref:System.Web.UI.WebControls.DetailsView.ModeChanging>|在 <xref:System.Web.UI.WebControls.DetailsView> 控件更改模式之前发生 (编辑、插入或只读模式) 。 此事件通常用于取消模式更改。|
|<xref:System.Web.UI.WebControls.DetailsView.PageIndexChanged>|在单击某一页导航按钮时，但在 <xref:System.Web.UI.WebControls.DetailsView> 控件处理分页操作之后发生。 此事件通常在用户导航至控件中的其他记录后需要执行任务时使用。|
|<xref:System.Web.UI.WebControls.DetailsView.PageIndexChanging>|在单击某一页导航按钮时，但在 <xref:System.Web.UI.WebControls.DetailsView> 控件处理分页操作之前发生。 此事件通常用于取消分页操作。|

<a name="Accessibility"></a>
## <a name="accessibility"></a>可访问性
 有关如何配置此控件以生成符合辅助功能标准的标记的信息，请参阅 [Visual Studio 中的辅助功能和 ASP.NET](https://docs.microsoft.com/previous-versions/ms228004(v=vs.140)) 和 [ASP.NET 控件和辅助功能](https://docs.microsoft.com/previous-versions/ms227996(v=vs.140))。

<a name="DeclarativeSyntax"></a>
## <a name="declarative-syntax"></a>声明性语法

```
<asp:DetailsView
    AccessKey="string"
    AllowPaging="True|False"
    AutoGenerateDeleteButton="True|False"
    AutoGenerateEditButton="True|False"
    AutoGenerateInsertButton="True|False"
    AutoGenerateRows="True|False"
    BackColor="color name|#dddddd"
    BackImageUrl="uri"
    BorderColor="color name|#dddddd"
    BorderStyle="NotSet|None|Dotted|Dashed|Solid|Double|Groove|Ridge|
        Inset|Outset"
    BorderWidth="size"
    Caption="string"
    CaptionAlign="NotSet|Top|Bottom|Left|Right"
    CellPadding="integer"
    CellSpacing="integer"
    CssClass="string"
    DataKeyNames="string"
    DataMember="string"
    DataSource="string"
    DataSourceID="string"
    DefaultMode="ReadOnly|Edit|Insert"
    EmptyDataText="string"
    Enabled="True|False"
    EnablePagingCallbacks="True|False"
    EnableTheming="True|False"
    EnableViewState="True|False"
    Font-Bold="True|False"
    Font-Italic="True|False"
    Font-Names="string"
    Font-Overline="True|False"
    Font-Size="string|Smaller|Larger|XX-Small|X-Small|Small|Medium|
        Large|X-Large|XX-Large"
    Font-Strikeout="True|False"
    Font-Underline="True|False"
    FooterText="string"
    ForeColor="color name|#dddddd"
    GridLines="None|Horizontal|Vertical|Both"
    HeaderText="string"
    Height="size"
    HorizontalAlign="NotSet|Left|Center|Right|Justify"
    ID="string"
    OnDataBinding="DataBinding event handler"
    OnDataBound="DataBound event handler"
    OnDisposed="Disposed event handler"
    OnInit="Init event handler"
    OnItemCommand="ItemCommand event handler"
    OnItemCreated="ItemCreated event handler"
    OnItemDeleted="ItemDeleted event handler"
    OnItemDeleting="ItemDeleting event handler"
    OnItemInserted="ItemInserted event handler"
    OnItemInserting="ItemInserting event handler"
    OnItemUpdated="ItemUpdated event handler"
    OnItemUpdating="ItemUpdating event handler"
    OnLoad="Load event handler"
    OnModeChanged="ModeChanged event handler"
    OnModeChanging="ModeChanging event handler"
    OnPageIndexChanged="PageIndexChanged event handler"
    OnPageIndexChanging="PageIndexChanging event handler"
    OnPreRender="PreRender event handler"
    OnUnload="Unload event handler"
    PageIndex="integer"
    PagerSettings-FirstPageImageUrl="uri"
    PagerSettings-FirstPageText="string"
    PagerSettings-LastPageImageUrl="uri"
    PagerSettings-LastPageText="string"
    PagerSettings-Mode="NextPrevious|Numeric|NextPreviousFirstLast|NumericFirstLast"
    PagerSettings-NextPageImageUrl="uri"
    PagerSettings-NextPageText="string"
    PagerSettings-PageButtonCount="integer"
    PagerSettings-Position="Bottom|Top|TopAndBottom"
    PagerSettings-PreviousPageImageUrl="uri"
    PagerSettings-PreviousPageText="string"
    PagerSettings-Visible="True|False"
    runat="server"
    SkinID="string"
    Style="string"
    TabIndex="integer"
    ToolTip="string"
    Visible="True|False"
    Width="size"
>
        <AlternatingRowStyle />
        <CommandRowStyle />
        <EditRowStyle />
        <EmptyDataRowStyle />
        <EmptyDataTemplate>
            <!-- child controls -->
        </EmptyDataTemplate>
        <FieldHeaderStyle />
        <Fields>
                <asp:BoundField
                    AccessibleHeaderText="string"
                    ApplyFormatInEditMode="True|False"
                    ConvertEmptyStringToNull="True|False"
                    DataField="string"
                    DataFormatString="string"
                    FooterText="string"
                    HeaderImageUrl="uri"
                    HeaderText="string"
                    HtmlEncode="True|False"
                    InsertVisible="True|False"
                    NullDisplayText="string"
                    ReadOnly="True|False"
                    ShowHeader="True|False"
                    SortExpression="string"
                    Visible="True|False"
>
                        <ControlStyle />
                        <FooterStyle />
                        <HeaderStyle />
                        <ItemStyle />
                </asp:BoundField>
                <asp:ButtonField
                    AccessibleHeaderText="string"
                    ButtonType="Button|Image|Link"
                    CausesValidation="True|False"
                    CommandName="string"
                    DataTextField="string"
                    DataTextFormatString="string"
                    FooterText="string"
                    HeaderImageUrl="uri"
                    HeaderText="string"
                    ImageUrl="uri"
                    InsertVisible="True|False"
                    ShowHeader="True|False"
                    SortExpression="string"
                    Text="string"
                    ValidationGroup="string"
                    Visible="True|False"
>
                        <ControlStyle />
                        <FooterStyle />
                        <HeaderStyle />
                        <ItemStyle />
                </asp:ButtonField>
                <asp:CheckBoxField
                    AccessibleHeaderText="string"
                    DataField="string"
                    FooterText="string"
                    HeaderImageUrl="uri"
                    HeaderText="string"
                    InsertVisible="True|False"
                    ReadOnly="True|False"
                    ShowHeader="True|False"
                    SortExpression="string"
                    Text="string"
                    Visible="True|False"
>
                        <ControlStyle />
                        <FooterStyle />
                        <HeaderStyle />
                        <ItemStyle />
                </asp:CheckBoxField>
                <asp:CommandField
                    AccessibleHeaderText="string"
                    ButtonType="Button|Image|Link"
                    CancelImageUrl="uri"
                    CancelText="string"
                    CausesValidation="True|False"
                    DeleteImageUrl="uri"
                    DeleteText="string"
                    EditImageUrl="uri"
                    EditText="string"
                    FooterText="string"
                    HeaderImageUrl="uri"
                    HeaderText="string"
                    InsertImageUrl="uri"
                    InsertText="string"
                    InsertVisible="True|False"
                    NewImageUrl="uri"
                    NewText="string"
                    SelectImageUrl="uri"
                    SelectText="string"
                    ShowCancelButton="True|False"
                    ShowDeleteButton="True|False"
                    ShowEditButton="True|False"
                    ShowHeader="True|False"
                    ShowInsertButton="True|False"
                    ShowSelectButton="True|False"
                    SortExpression="string"
                    UpdateImageUrl="uri"
                    UpdateText="string"
                    ValidationGroup="string"
                    Visible="True|False"
>
                        <ControlStyle />
                        <FooterStyle />
                        <HeaderStyle />
                        <ItemStyle />
                </asp:CommandField>
                <asp:DynamicField
                    AccessibleHeaderText="string"
                    ApplyFormatInEditMode="True|False"
                    ConvertEmptyStringToNull="True|False"
                    DataField="string"
                    DataFormatString="string"
                    FooterText="string"
                    HeaderImageUrl="uri"
                    HeaderText="string"
                    HtmlEncode="True|False"
                    InsertVisible="True|False"
                    NullDisplayText="string"
                    ShowHeader="True|False"
                    UIHint="string"
                    Visible="True|False"
>
                        <ControlStyle />
                        <FooterStyle />
                        <HeaderStyle />
                        <ItemStyle />
                </asp:DynamicField>
                <asp:HyperLinkField
                    AccessibleHeaderText="string"
                    DataNavigateUrlFields="string"
                    DataNavigateUrlFormatString="string"
                    DataTextField="string"
                    DataTextFormatString="string"
                    FooterText="string"
                    HeaderImageUrl="uri"
                    HeaderText="string"
                    InsertVisible="True|False"
                    NavigateUrl="uri"
                    ShowHeader="True|False"
                    SortExpression="string"
                    Target="string|_blank|_parent|_search|_self|_top"
                    Text="string"
                    Visible="True|False"
>
                        <ControlStyle />
                        <FooterStyle />
                        <HeaderStyle />
                        <ItemStyle />
                </asp:HyperLinkField>
                <asp:ImageField
                    AccessibleHeaderText="string"
                    AlternateText="string"
                    ConvertEmptyStringToNull="True|False"
                    DataAlternateTextField="string"
                    DataAlternateTextFormatString="string"
                    DataImageUrlField="string"
                    DataImageUrlFormatString="string"
                    FooterText="string"
                    HeaderImageUrl="uri"
                    HeaderText="string"
                    InsertVisible="True|False"
                    NullDisplayText="string"
                    NullImageUrl="uri"
                    ReadOnly="True|False"
                    ShowHeader="True|False"
                    SortExpression="string"
                    Visible="True|False"
>
                        <ControlStyle />
                        <FooterStyle />
                        <HeaderStyle />
                        <ItemStyle />
                </asp:ImageField>
                <asp:TemplateField
                    AccessibleHeaderText="string"
                    ConvertEmptyStringToNull="True|False"
                    FooterText="string"
                    HeaderImageUrl="uri"
                    HeaderText="string"
                    InsertVisible="True|False"
                    ShowHeader="True|False"
                    SortExpression="string"
                    Visible="True|False"
>
                            <ControlStyle />
                            <FooterStyle />
                            <HeaderStyle />
                            <ItemStyle />
                        <AlternatingItemTemplate>
                            <!-- child controls -->
                        </AlternatingItemTemplate>
                        <EditItemTemplate>
                            <!-- child controls -->
                        </EditItemTemplate>
                        <FooterTemplate>
                            <!-- child controls -->
                        </FooterTemplate>
                        <HeaderTemplate>
                            <!-- child controls -->
                        </HeaderTemplate>
                        <InsertItemTemplate>
                            <!-- child controls -->
                        </InsertItemTemplate>
                        <ItemTemplate>
                            <!-- child controls -->
                        </ItemTemplate>
                </asp:TemplateField>
        </Fields>
        <FooterStyle />
        <FooterTemplate>
            <!-- child controls -->
        </FooterTemplate>
        <HeaderStyle />
        <HeaderTemplate>
            <!-- child controls -->
        </HeaderTemplate>
        <InsertRowStyle />
        <PagerSettings
            FirstPageImageUrl="uri"
            FirstPageText="string"
            LastPageImageUrl="uri"
            LastPageText="string"
            Mode="NextPrevious|Numeric|NextPreviousFirstLast|
                NumericFirstLast"
            NextPageImageUrl="uri"
            NextPageText="string"
            OnPropertyChanged="PropertyChanged event handler"
            PageButtonCount="integer"
            Position="Bottom|Top|TopAndBottom"
            PreviousPageImageUrl="uri"
            PreviousPageText="string"
            Visible="True|False"
        />
        <PagerStyle />
        <PagerTemplate>
            <!-- child controls -->
        </PagerTemplate>
        <RowStyle        />
</asp:DetailsView>
```



## Examples
 下面的代码示例演示如何使用将 <xref:System.Web.UI.WebControls.DetailsView> 控件与控件一起用于 <xref:System.Web.UI.WebControls.GridView> 简单的主-从方案。 它显示在控件中选定的项的详细信息 <xref:System.Web.UI.WebControls.GridView> 。

 [!code-aspx-csharp[DetailsViewSimple#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DetailsViewSimple/CS/detailsviewsimplecs.aspx#1)]
 [!code-aspx-vb[DetailsViewSimple#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DetailsViewSimple/VB/detailsviewsimplevb.aspx#1)]

 下面的代码示例演示如何使用 <xref:System.Web.UI.WebControls.DetailsView> 控件添加、删除和编辑记录。

 [!code-aspx-csharp[DetailsViewComplex#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DetailsViewComplex/CS/detailsviewcomplexcs.aspx#1)]
 [!code-aspx-vb[DetailsViewComplex#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DetailsViewComplex/VB/detailsviewcomplexvb.aspx#1)]

 下面的代码示例演示如何以声明方式向控件添加行字段 <xref:System.Web.UI.WebControls.DetailsView> 。

 [!code-aspx-csharp[DetailsViewRowField#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DetailsViewRowField/CS/detailsviewrowfieldscs.aspx#1)]
 [!code-aspx-vb[DetailsViewRowField#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DetailsViewRowField/VB/detailsviewrowfieldsvb.aspx#1)]

 ]]></format>
    </remarks>
    <altmember cref="P:System.Type.IsPrimitive" />
    <altmember cref="T:System.Web.UI.WebControls.AccessDataSource" />
    <altmember cref="P:System.Web.UI.WebControls.DetailsView.AllowPaging" />
    <altmember cref="P:System.Web.UI.WebControls.DetailsView.AutoGenerateRows" />
    <altmember cref="P:System.Web.UI.WebControls.DetailsView.AutoGenerateDeleteButton" />
    <altmember cref="P:System.Web.UI.WebControls.DetailsView.AutoGenerateEditButton" />
    <altmember cref="P:System.Web.UI.WebControls.DetailsView.AutoGenerateInsertButton" />
    <altmember cref="P:System.Web.UI.WebControls.DetailsView.Fields" />
    <altmember cref="P:System.Web.UI.WebControls.DetailsView.Rows" />
    <altmember cref="T:System.Web.UI.WebControls.BoundField" />
    <altmember cref="T:System.Web.UI.WebControls.ButtonField" />
    <altmember cref="T:System.Web.UI.WebControls.CommandField" />
    <altmember cref="T:System.Web.UI.WebControls.CheckBoxField" />
    <altmember cref="T:System.Web.UI.WebControls.GridView" />
    <altmember cref="T:System.Web.UI.WebControls.HyperLinkField" />
    <altmember cref="T:System.Web.UI.WebControls.SqlDataSource" />
    <altmember cref="T:System.Web.UI.WebControls.TemplateField" />
    <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/xt50s8kz(v=vs.100)">对数据源控件使用参数</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DetailsView ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DetailsView.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DetailsView();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Web.UI.WebControls.DetailsView" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 使用此构造函数初始化类的新实例 <xref:System.Web.UI.WebControls.DetailsView> 。 若要将控件动态添加 <xref:System.Web.UI.WebControls.DetailsView> 到页面，请创建新的 <xref:System.Web.UI.WebControls.DetailsView> 对象，设置其属性，然后将其添加到 <xref:System.Web.UI.Control.Controls%2A?displayProperty=nameWithType> 容器控件的集合，如 <xref:System.Web.UI.WebControls.PlaceHolder> 。



## Examples
 下面的代码示例演示如何使用构造函数将控件动态添加 <xref:System.Web.UI.WebControls.DetailsView> 到页中。

 [!code-aspx-csharp[DetailsViewCtor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DetailsViewCtor/CS/detailsviewctorcs.aspx#1)]
 [!code-aspx-vb[DetailsViewCtor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DetailsViewCtor/VB/detailsviewctorvb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.Controls" />
        <altmember cref="T:System.Web.UI.WebControls.PlaceHolder" />
      </Docs>
    </Member>
    <Member MemberName="AllowPaging">
      <MemberSignature Language="C#" Value="public virtual bool AllowPaging { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowPaging" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DetailsView.AllowPaging" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property AllowPaging As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool AllowPaging { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowPaging : bool with get, set" Usage="System.Web.UI.WebControls.DetailsView.AllowPaging" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示是否启用分页功能。</summary>
        <value>如果启用分页功能，则为 <see langword="true" />；否则为 <see langword="false" />。 默认值为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.DetailsView>控件具有内置分页功能，使用户可以导航到数据源中的其他记录。

 <xref:System.Web.UI.WebControls.DetailsView>控件可以同时执行用户界面 (UI) 和数据源分页。 UI 分页功能可用于支持接口的任何数据源对象 <xref:System.Collections.ICollection?displayProperty=nameWithType> 。 对于每个分页操作， <xref:System.Web.UI.WebControls.DetailsView> 控件会在数据源中查询整个数据集合，并选择要显示的行，实质上是放弃剩余的数据。

 如果数据源实现 <xref:System.Web.UI.DataSourceView> 并且 <xref:System.Web.UI.DataSourceView.CanPage%2A> 属性返回，则 `true` 该 <xref:System.Web.UI.WebControls.DetailsView> 控件将使用数据源分页而不是 UI 分页。 在这种情况下，该 <xref:System.Web.UI.WebControls.DetailsView> 控件将仅查询每个分页操作所需的行。 因此，数据源分页比 UI 分页更有效。 仅 <xref:System.Web.UI.WebControls.ObjectDataSourceView> 对象不支持修改数据源分页。

 若要启用分页功能，请将 <xref:System.Web.UI.WebControls.DetailsView.AllowPaging%2A> 属性设置为 `true` 。 可以通过使用属性来确定基础数据源中的总项数 <xref:System.Web.UI.WebControls.DetailsView.PageCount%2A> 。 若要确定当前显示项的索引，请使用 <xref:System.Web.UI.WebControls.DetailsView.PageIndex%2A> 属性。

 启用分页时，会自动在控件中显示一个名为 "页导航行" 的附加行 <xref:System.Web.UI.WebControls.DetailsView> 。 页导航行包含页面导航控件，可以显示在控件的顶部和底部，或者同时显示在控件的顶部和底部。 页导航行有两个内置的页导航显示模式：编号页和下一页链接和上一页链接 (默认) 。 页码页面模式显示各个页面的链接，使用户可以导航到特定页面。 "下一步" 和 "上一链接" 模式显示允许用户导航到下一页或上一页的控件。

> [!NOTE]
>  <xref:System.Web.UI.WebControls.DetailsView>当数据源包含的记录少于两条时，控件将自动隐藏页导航行。

 您可以通过使用属性来控制页导航行 (如页导航显示模式、一次显示的页链接的数量，以及页导航控件的文本标签) <xref:System.Web.UI.WebControls.DetailsView.PagerSettings%2A> 。 若要控制页导航行的外观 (包括其背景色、字体颜色和位置) ，请使用 <xref:System.Web.UI.WebControls.DetailsView.PagerStyle%2A> 属性。 <xref:System.Web.UI.WebControls.DetailsView>控件还允许您为页导航行定义自定义模板。 有关创建自定义页导航行模板的详细信息，请参阅 <xref:System.Web.UI.WebControls.DetailsView.PagerTemplate%2A> 。

 <xref:System.Web.UI.WebControls.DetailsView>控件提供若干事件，可用于在进行分页时执行自定义操作。 下表列出了可用的事件。

|事件|说明|
|-----------|-----------------|
|<xref:System.Web.UI.WebControls.DetailsView.PageIndexChanged>|在单击某一页导航按钮时，但在 <xref:System.Web.UI.WebControls.DetailsView> 控件处理分页操作之后发生。 此事件通常在用户导航至控件中的其他记录后需要执行任务时使用。|
|<xref:System.Web.UI.WebControls.DetailsView.PageIndexChanging>|在单击某一页导航按钮时，但在 <xref:System.Web.UI.WebControls.DetailsView> 控件处理分页操作之前发生。 此事件通常用于取消分页操作。|

 的值 <xref:System.Web.UI.WebControls.DetailsView.AllowPaging%2A> 存储在视图状态中。



## Examples
 下面的代码示例演示如何使用 <xref:System.Web.UI.WebControls.DetailsView.AllowPaging%2A> 属性启用控件的分页功能 <xref:System.Web.UI.WebControls.DetailsView> 。

 [!code-aspx-csharp[DetailsViewAllowPaging#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DetailsViewAllowPaging/CS/detailsviewallowpagingcs.aspx#1)]
 [!code-aspx-vb[DetailsViewAllowPaging#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DetailsViewAllowPaging/VB/detailsviewallowpagingvb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.BottomPagerRow" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.PageCount" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.PageIndex" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.PagerSettings" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.PagerStyle" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.TopPagerRow" />
        <altmember cref="E:System.Web.UI.WebControls.DetailsView.PageIndexChanged" />
        <altmember cref="E:System.Web.UI.WebControls.DetailsView.PageIndexChanging" />
      </Docs>
    </Member>
    <Member MemberName="AlternatingRowStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle AlternatingRowStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle AlternatingRowStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DetailsView.AlternatingRowStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AlternatingRowStyle As TableItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TableItemStyle ^ AlternatingRowStyle { System::Web::UI::WebControls::TableItemStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AlternatingRowStyle : System.Web.UI.WebControls.TableItemStyle" Usage="System.Web.UI.WebControls.DetailsView.AlternatingRowStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(null)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(null)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.NotifyParentProperty(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.NotifyParentProperty(true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取对 <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> 对象的引用，该对象允许您设置 <see cref="T:System.Web.UI.WebControls.DetailsView" /> 控件中的交替数据行的外观。</summary>
        <value>对 <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> 的引用，该对象表示 <see cref="T:System.Web.UI.WebControls.DetailsView" /> 控件中交替数据行的样式。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 使用 <xref:System.Web.UI.WebControls.DetailsView.AlternatingRowStyle%2A> 属性可控制控件中交替数据行的外观 <xref:System.Web.UI.WebControls.DetailsView> 。 如果设置此属性，则在设置和设置之间交替显示数据行 <xref:System.Web.UI.WebControls.DetailsView.RowStyle%2A> <xref:System.Web.UI.WebControls.DetailsView.AlternatingRowStyle%2A> 。 此属性是只读的;但是，您可以设置 <xref:System.Web.UI.WebControls.TableItemStyle> 它返回的对象的属性。 可以在窗体中以声明方式设置这些属性 `Property-Subproperty` ，其中 `Subproperty` 是对象的属性 <xref:System.Web.UI.WebControls.TableItemStyle> (例如 `AlternatingRowStyle-ForeColor`) 。 还可以以编程方式设置属性 `Property.Subproperty` ， (例如 `AlternatingRowStyle.ForeColor`) 。 常见设置通常包括自定义背景色、前景色和字体属性。



## Examples
 下面的代码示例演示如何使用 <xref:System.Web.UI.WebControls.DetailsView.AlternatingRowStyle%2A> 属性指定控件中的交替数据行的字体和样式设置 <xref:System.Web.UI.WebControls.DetailsView> 。

 [!code-aspx-csharp[DetailsViewRowStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DetailsViewRowStyle/CS/detailsviewrowstylecs.aspx#1)]
 [!code-aspx-vb[DetailsViewRowStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DetailsViewRowStyle/VB/detailsviewrowstylevb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TableItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.CommandRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.EditRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.EmptyDataRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.FooterStyle" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.FieldHeaderStyle" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.HeaderStyle" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.InsertRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.RowStyle" />
      </Docs>
    </Member>
    <Member MemberName="AutoGenerateDeleteButton">
      <MemberSignature Language="C#" Value="public virtual bool AutoGenerateDeleteButton { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoGenerateDeleteButton" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DetailsView.AutoGenerateDeleteButton" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property AutoGenerateDeleteButton As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool AutoGenerateDeleteButton { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AutoGenerateDeleteButton : bool with get, set" Usage="System.Web.UI.WebControls.DetailsView.AutoGenerateDeleteButton" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示用来删除当前记录的内置控件是否在 <see cref="T:System.Web.UI.WebControls.DetailsView" /> 控件中显示。</summary>
        <value><see langword="true" /> 表示显示用来删除当前记录的内置控件；否则为 <see langword="false" />。 默认值为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 当 <xref:System.Web.UI.WebControls.DetailsView> 控件绑定到从继承的对象 <xref:System.Web.UI.DataSourceView> 并 <xref:System.Web.UI.DataSourceView.CanDelete%2A> 返回属性时 `true` ， <xref:System.Web.UI.WebControls.DetailsView> 控件可以利用数据源控件的功能并提供自动删除功能。

> [!NOTE]
>  对于 <xref:System.Web.UI.WebControls.SqlDataSourceView> 要删除数据的对象， <xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A?displayProperty=nameWithType> <xref:System.Web.UI.WebControls.SqlDataSource> 必须使用 delete 查询语句设置基础对象的属性。

 当 <xref:System.Web.UI.WebControls.DetailsView.AutoGenerateDeleteButton%2A> 属性设置为时 `true` ，将在 <xref:System.Web.UI.WebControls.CommandField> 控件中自动显示带有 "删除" 按钮的行字段 <xref:System.Web.UI.WebControls.DetailsView> 。 单击 "删除" 按钮将从数据源中永久删除该记录。

> [!NOTE]
>  还必须将 <xref:System.Web.UI.WebControls.DetailsView.DataKeyNames%2A> "自动删除" 功能的属性设置为 "工作"。

 <xref:System.Web.UI.WebControls.DetailsView>控件提供若干事件，可用于在删除记录时执行自定义操作。 下表列出了可用的事件。

|事件|说明|
|-----------|-----------------|
|<xref:System.Web.UI.WebControls.DetailsView.ItemDeleted>|在单击 "删除" 按钮时，但在 <xref:System.Web.UI.WebControls.DetailsView> 控件从数据源中删除记录之后发生。 此事件通常用于检查删除操作的结果。|
|<xref:System.Web.UI.WebControls.DetailsView.ItemDeleting>|在单击 "删除" 按钮时，但在 <xref:System.Web.UI.WebControls.DetailsView> 控件从数据源中删除记录之前发生。 此事件通常用于取消删除操作。|

 的值 <xref:System.Web.UI.WebControls.DetailsView.AutoGenerateDeleteButton%2A> 存储在视图状态中。



## Examples
 下面的代码示例演示如何使用 <xref:System.Web.UI.WebControls.DetailsView.AutoGenerateDeleteButton%2A> 属性来显示用于删除当前记录的内置控件。

 [!code-aspx-csharp[DetailsViewAutoGenerateDeleteButton#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DetailsViewAutoGenerateDeleteButton/CS/detailsviewautogeneratedeletebuttoncs.aspx#1)]
 [!code-aspx-vb[DetailsViewAutoGenerateDeleteButton#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DetailsViewAutoGenerateDeleteButton/VB/detailsviewautogeneratedeletebuttonvb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.CommandField" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.AutoGenerateEditButton" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.AutoGenerateInsertButton" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.DataKeyNames" />
        <altmember cref="E:System.Web.UI.WebControls.DetailsView.ItemDeleted" />
        <altmember cref="E:System.Web.UI.WebControls.DetailsView.ItemDeleting" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.DeleteCommand" />
      </Docs>
    </Member>
    <Member MemberName="AutoGenerateEditButton">
      <MemberSignature Language="C#" Value="public virtual bool AutoGenerateEditButton { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoGenerateEditButton" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DetailsView.AutoGenerateEditButton" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property AutoGenerateEditButton As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool AutoGenerateEditButton { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AutoGenerateEditButton : bool with get, set" Usage="System.Web.UI.WebControls.DetailsView.AutoGenerateEditButton" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示用来编辑当前记录的内置控件是否在 <see cref="T:System.Web.UI.WebControls.DetailsView" /> 控件中显示。</summary>
        <value><see langword="true" /> 表示显示用来编辑当前记录的内置控件；否则为 <see langword="false" />。 默认值为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 当支持更新的数据源控件绑定到 <xref:System.Web.UI.WebControls.DetailsView> 控件时，该 <xref:System.Web.UI.WebControls.DetailsView> 控件可以利用数据源控件的功能并提供自动更新功能。

> [!NOTE]
>  对于用于更新数据的数据源控件， <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A?displayProperty=nameWithType> 必须使用 update 查询语句设置其属性。

 当 <xref:System.Web.UI.WebControls.DetailsView.AutoGenerateEditButton%2A> 属性设置为时 `true` ，将在 <xref:System.Web.UI.WebControls.CommandField> 控件中自动显示带有 "编辑" 按钮的行字段 <xref:System.Web.UI.WebControls.DetailsView> 。 单击 "编辑" 按钮会将该 <xref:System.Web.UI.WebControls.DetailsView> 控件置于编辑模式。 处于编辑模式时，控件中不是只读的每个绑定字段都会显示相应的输入控件（如 <xref:System.Web.UI.WebControls.TextBox> 控件）作为字段的数据类型。 这允许用户修改字段的值。

 单击 "编辑" 按钮后，还会将其替换为 "更新" 按钮和 "取消" 按钮。 单击 "更新" 按钮可使用任何值更改更新数据源中的记录，并将该控件返回到由属性指定的模式 <xref:System.Web.UI.WebControls.DetailsView.DefaultMode%2A> 。 单击 "取消" 按钮将放弃任何值更改，并将控件返回到默认模式。

> [!NOTE]
>  若要以 <xref:System.Web.UI.WebControls.DetailsView> 编程方式将控件置于编辑模式，请使用 <xref:System.Web.UI.WebControls.DetailsView.ChangeMode%2A> 方法。

 当 <xref:System.Web.UI.WebControls.DetailsView.AutoGenerateRows%2A> 属性设置为时 `true` ， <xref:System.Web.UI.WebControls.DetailsView> 控件将自动确保在属性中指定的一个或多个字段 <xref:System.Web.UI.WebControls.DetailsView.DataKeyNames%2A> 是只读的。

> [!NOTE]
>  除非您实现自己的更新功能，否则必须将 <xref:System.Web.UI.WebControls.DetailsView.DataKeyNames%2A> 自动更新功能的属性设置为 "工作"。

 当 <xref:System.Web.UI.WebControls.DetailsView> 控件处于编辑模式时，可以使用属性控制数据行的外观 <xref:System.Web.UI.WebControls.DetailsView.EditRowStyle%2A> 。 常见设置通常包括自定义背景色、前景色和字体属性。

 <xref:System.Web.UI.WebControls.DetailsView>控件提供若干事件，可用于在更新记录时执行自定义操作。 下表列出了可用的事件。

|事件|说明|
|-----------|-----------------|
|<xref:System.Web.UI.WebControls.DetailsView.ItemUpdated>|在单击 "更新" 按钮时，但在 <xref:System.Web.UI.WebControls.DetailsView> 控件更新记录后发生。 此事件通常用于检查更新操作的结果。|
|<xref:System.Web.UI.WebControls.DetailsView.ItemUpdating>|在单击 "更新" 按钮时，但在 <xref:System.Web.UI.WebControls.DetailsView> 控件更新记录之前发生。 此事件通常用于取消更新操作。|
|<xref:System.Web.UI.WebControls.DetailsView.ModeChanged>|在 <xref:System.Web.UI.WebControls.DetailsView> 控件更改模式之后发生。|
|<xref:System.Web.UI.WebControls.DetailsView.ModeChanging>|在 <xref:System.Web.UI.WebControls.DetailsView> 控件更改模式之前发生。 此事件通常用于取消模式更改。|

 的值 <xref:System.Web.UI.WebControls.DetailsView.AutoGenerateEditButton%2A> 存储在视图状态中。



## Examples
 下面的代码示例演示如何使用 <xref:System.Web.UI.WebControls.DetailsView.AutoGenerateEditButton%2A> 属性来显示用于编辑当前记录的内置控件。

 [!code-aspx-csharp[DetailsViewAutoGenerateEditButton#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DetailsViewAutoGenerateEditButton/CS/detailsviewautogenerateeditbuttoncs.aspx#1)]
 [!code-aspx-vb[DetailsViewAutoGenerateEditButton#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DetailsViewAutoGenerateEditButton/VB/detailsviewautogenerateeditbuttonvb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.CommandField" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.AutoGenerateDeleteButton" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.AutoGenerateInsertButton" />
        <altmember cref="M:System.Web.UI.WebControls.DetailsView.ChangeMode(System.Web.UI.WebControls.DetailsViewMode)" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.DataKey" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.DataKeyNames" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.DefaultMode" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.EditRowStyle" />
        <altmember cref="E:System.Web.UI.WebControls.DetailsView.ItemUpdated" />
        <altmember cref="E:System.Web.UI.WebControls.DetailsView.ItemUpdating" />
        <altmember cref="E:System.Web.UI.WebControls.DetailsView.ModeChanged" />
        <altmember cref="E:System.Web.UI.WebControls.DetailsView.ModeChanging" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.UpdateCommand" />
      </Docs>
    </Member>
    <Member MemberName="AutoGenerateInsertButton">
      <MemberSignature Language="C#" Value="public virtual bool AutoGenerateInsertButton { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoGenerateInsertButton" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DetailsView.AutoGenerateInsertButton" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property AutoGenerateInsertButton As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool AutoGenerateInsertButton { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AutoGenerateInsertButton : bool with get, set" Usage="System.Web.UI.WebControls.DetailsView.AutoGenerateInsertButton" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示用来插入新记录的内置控件是否在 <see cref="T:System.Web.UI.WebControls.DetailsView" /> 控件中显示。</summary>
        <value><see langword="true" /> 表示显示用来插入新记录的内置控件；否则为 <see langword="false" />。 默认值为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 当支持插入的数据源控件绑定到 <xref:System.Web.UI.WebControls.DetailsView> 控件时，该 <xref:System.Web.UI.WebControls.DetailsView> 控件可以利用数据源控件的功能并提供自动插入功能。

> [!NOTE]
>  对于要插入数据的数据源控件， <xref:System.Web.UI.WebControls.SqlDataSource.InsertCommand%2A?displayProperty=nameWithType> 必须使用 insert 查询语句设置其属性。

 当 <xref:System.Web.UI.WebControls.DetailsView.AutoGenerateInsertButton%2A> 属性设置为时 `true` ，将在 <xref:System.Web.UI.WebControls.CommandField> 控件中自动显示带有 "新建" 按钮的行字段 <xref:System.Web.UI.WebControls.DetailsView> 。 单击 "新建" 按钮会将该 <xref:System.Web.UI.WebControls.DetailsView> 控件置于插入模式下。 处于插入模式时，控件中不是只读的每个绑定字段都会显示适当的输入控件（如 <xref:System.Web.UI.WebControls.TextBox> 控件）作为字段的数据类型。 这允许用户为新记录输入字段的值。

 单击 "新建" 按钮时，还会将其替换为 "插入" 按钮和 "取消" 按钮。 单击 "插入" 按钮会在数据源中插入新记录，并将该控件返回到由属性指定的模式 <xref:System.Web.UI.WebControls.DetailsView.DefaultMode%2A> 。 单击 "取消" 按钮将放弃插入操作，并将控件返回到默认模式。

> [!NOTE]
>  若要以编程方式将一行置于插入模式，请使用 <xref:System.Web.UI.WebControls.DetailsView.ChangeMode%2A> 方法。

 您可以使用属性控制处于插入模式的记录的外观 <xref:System.Web.UI.WebControls.DetailsView.InsertRowStyle%2A> 。 常见设置通常包括自定义背景色、前景色和字体属性。

 <xref:System.Web.UI.WebControls.DetailsView>控件提供若干事件，可用于在插入新记录时执行自定义操作。 下表列出了可用的事件。

|事件|说明|
|-----------|-----------------|
|<xref:System.Web.UI.WebControls.DetailsView.ItemInserted>|单击 "插入" 按钮时，但在 <xref:System.Web.UI.WebControls.DetailsView> 控件插入记录后发生。 此事件通常用于检查插入操作的结果。|
|<xref:System.Web.UI.WebControls.DetailsView.ItemInserting>|在单击 "插入" 按钮时，但在 <xref:System.Web.UI.WebControls.DetailsView> 控件插入记录之前发生。 此事件通常用于取消插入操作。|
|<xref:System.Web.UI.WebControls.DetailsView.ModeChanged>|在 <xref:System.Web.UI.WebControls.DetailsView> 控件更改模式之后发生。|
|<xref:System.Web.UI.WebControls.DetailsView.ModeChanging>|在 <xref:System.Web.UI.WebControls.DetailsView> 控件更改模式之前发生。 此事件通常用于取消模式更改。|

 的值 <xref:System.Web.UI.WebControls.DetailsView.AutoGenerateInsertButton%2A> 存储在视图状态中。



## Examples
 下面的代码示例演示如何使用 <xref:System.Web.UI.WebControls.DetailsView.AutoGenerateInsertButton%2A> 属性来显示内置控件，以便在控件中插入新记录 <xref:System.Web.UI.WebControls.DetailsView> 。

 [!code-aspx-csharp[DetailsViewAutoGenerateInsertButton#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DetailsViewAutoGenerateInsertButton/CS/detailsviewautogenerateinsertbuttoncs.aspx#1)]
 [!code-aspx-vb[DetailsViewAutoGenerateInsertButton#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DetailsViewAutoGenerateInsertButton/VB/detailsviewautogenerateinsertbuttonvb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.CommandField" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.AutoGenerateDeleteButton" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.AutoGenerateEditButton" />
        <altmember cref="M:System.Web.UI.WebControls.DetailsView.ChangeMode(System.Web.UI.WebControls.DetailsViewMode)" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.DataKey" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.DataKeyNames" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.DefaultMode" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.InsertRowStyle" />
        <altmember cref="E:System.Web.UI.WebControls.DetailsView.ItemInserted" />
        <altmember cref="E:System.Web.UI.WebControls.DetailsView.ItemInserting" />
        <altmember cref="E:System.Web.UI.WebControls.DetailsView.ModeChanged" />
        <altmember cref="E:System.Web.UI.WebControls.DetailsView.ModeChanging" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.UpdateCommand" />
      </Docs>
    </Member>
    <Member MemberName="AutoGenerateRows">
      <MemberSignature Language="C#" Value="public virtual bool AutoGenerateRows { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoGenerateRows" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DetailsView.AutoGenerateRows" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property AutoGenerateRows As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool AutoGenerateRows { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AutoGenerateRows : bool with get, set" Usage="System.Web.UI.WebControls.DetailsView.AutoGenerateRows" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示对应于数据源中每个字段的行字段是否自动生成并在 <see cref="T:System.Web.UI.WebControls.DetailsView" /> 控件中显示。</summary>
        <value><see langword="true" /> 表示显示对应于数据源中每个字段的自动生成的绑定行字段；否则为 <see langword="false" />。 默认值为 <see langword="true" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 控件中的每个数据行 <xref:System.Web.UI.WebControls.DetailsView> 都用行字段表示。 当 <xref:System.Web.UI.WebControls.DetailsView.AutoGenerateRows%2A> 属性设置为时 `true` ，将为数据源中的每个字段创建自动生成的绑定行字段。 然后，每个字段在行中显示为文本，并按照每个字段在数据源中的显示顺序显示。

> [!NOTE]
>  自动生成的绑定行字段不会添加到 <xref:System.Web.UI.WebControls.DetailsView.Fields%2A> 集合中。

 自动生成行可提供一种快速简单的方法来显示记录中的每个字段。 但是，若要使用 <xref:System.Web.UI.WebControls.DetailsView> 控件的高级功能，必须显式声明要包含在控件中的行字段 <xref:System.Web.UI.WebControls.DetailsView> 。 有关详细信息，请参阅 <xref:System.Web.UI.WebControls.DetailsView.Fields%2A>。

> [!NOTE]
>  显式声明的行字段可与自动生成的行字段结合使用。 如果同时使用这两种方法，将首先呈现显式声明的行字段，然后呈现自动生成的行字段。

 的值 <xref:System.Web.UI.WebControls.DetailsView.AutoGenerateRows%2A> 存储在视图状态中。



## Examples
 下面的代码示例演示如何使用 <xref:System.Web.UI.WebControls.DetailsView.AutoGenerateRows%2A> 属性为数据源中的每个字段自动创建绑定行字段。

 [!code-aspx-csharp[DetailsViewAutoGenerateRows#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DetailsViewAutoGenerateRows/CS/detailsviewautogeneraterowscs.aspx#1)]
 [!code-aspx-vb[DetailsViewAutoGenerateRows#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DetailsViewAutoGenerateRows/VB/detailsviewautogeneraterowsvb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.AutoGeneratedField" />
        <altmember cref="T:System.Web.UI.WebControls.BoundField" />
        <altmember cref="T:System.Web.UI.WebControls.ButtonField" />
        <altmember cref="T:System.Web.UI.WebControls.CommandField" />
        <altmember cref="T:System.Web.UI.WebControls.CheckBoxField" />
        <altmember cref="T:System.Web.UI.WebControls.HyperLinkField" />
        <altmember cref="T:System.Web.UI.WebControls.TemplateField" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.Fields" />
      </Docs>
    </Member>
    <Member MemberName="BackImageUrl">
      <MemberSignature Language="C#" Value="public virtual string BackImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string BackImageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DetailsView.BackImageUrl" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property BackImageUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ BackImageUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.BackImageUrl : string with get, set" Usage="System.Web.UI.WebControls.DetailsView.BackImageUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue("")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue("")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName Language="C#">[System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.UrlProperty]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.UrlProperty&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置要在 <see cref="T:System.Web.UI.WebControls.DetailsView" /> 控件的背景中显示的图像的 URL。</summary>
        <value>要在 <see cref="T:System.Web.UI.WebControls.DetailsView" /> 控件的背景中显示的图像的 URL。 默认值为空字符串 ("")，表示尚未设置此属性。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 使用 <xref:System.Web.UI.WebControls.DetailsView.BackImageUrl%2A> 属性指定要在控件的背景中显示的图像的 URL <xref:System.Web.UI.WebControls.DetailsView> 。

> [!NOTE]
>  如果指定的图像小于 <xref:System.Web.UI.WebControls.DetailsView> 控件，图像将平铺以填充背景。 如果图像大于控件，则图像将被裁剪。



## Examples
 下面的代码示例演示如何使用 <xref:System.Web.UI.WebControls.DetailsView.BackImageUrl%2A> 属性在控件的背景中显示自定义图像 <xref:System.Web.UI.WebControls.DetailsView> 。 若要使此示例正常工作，您必须提供自己的图像。

 [!code-aspx-csharp[DetailsViewBackImageUrl#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DetailsViewBackImageUrl/CS/detailsviewbackimageurlcs.aspx#1)]
 [!code-aspx-vb[DetailsViewBackImageUrl#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DetailsViewBackImageUrl/VB/detailsviewbackimageurlvb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.CellPadding" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.CellSpacing" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.GridLines" />
      </Docs>
    </Member>
    <Member MemberName="BottomPagerRow">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.DetailsViewRow BottomPagerRow { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.DetailsViewRow BottomPagerRow" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DetailsView.BottomPagerRow" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property BottomPagerRow As DetailsViewRow" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::DetailsViewRow ^ BottomPagerRow { System::Web::UI::WebControls::DetailsViewRow ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.BottomPagerRow : System.Web.UI.WebControls.DetailsViewRow" Usage="System.Web.UI.WebControls.DetailsView.BottomPagerRow" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DetailsViewRow</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个 <see cref="T:System.Web.UI.WebControls.DetailsViewRow" /> 对象，该对象表示 <see cref="T:System.Web.UI.WebControls.DetailsView" /> 控件中的底部页导航行。</summary>
        <value>一个 <see cref="T:System.Web.UI.WebControls.DetailsViewRow" />，表示 <see cref="T:System.Web.UI.WebControls.DetailsView" /> 控件中的底部页导航行。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
  (通过将 <xref:System.Web.UI.WebControls.DetailsView.AllowPaging%2A> 属性设置为) 启用分页时 `true` ，会自动在控件中显示一个名为 "页导航行" 的附加行 <xref:System.Web.UI.WebControls.DetailsView> 。 页导航行包含的控件允许用户导航到其他记录，并且可以显示在控件的顶部和底部，或者同时显示在控件的顶部和底部。 使用 <xref:System.Web.UI.WebControls.DetailsView.BottomPagerRow%2A> 属性以编程方式访问 <xref:System.Web.UI.WebControls.DetailsViewRow> 表示控件中的底部页导航行的对象 <xref:System.Web.UI.WebControls.DetailsView> 。

> [!NOTE]
>  <xref:System.Web.UI.WebControls.DetailsView.BottomPagerRow%2A>只有 <xref:System.Web.UI.WebControls.DetailsView> 控件在事件中创建了底部页导航行后，属性才可用 <xref:System.Web.UI.WebControls.DetailsView.ItemCreated> 。

 当你需要以编程方式操作底部页导航行时（例如，添加自定义内容时），通常会使用此属性。 在 <xref:System.Web.UI.WebControls.DetailsView.BottomPagerRow%2A> 呈现控件之后，必须对属性进行任何修改 <xref:System.Web.UI.WebControls.DetailsView> ; 否则， <xref:System.Web.UI.WebControls.DetailsView> 控件将覆盖所有更改。



## Examples
 下面的代码示例演示如何使用 <xref:System.Web.UI.WebControls.DetailsView.BottomPagerRow%2A> 属性 <xref:System.Web.UI.WebControls.DetailsView> 在事件期间访问控件的底部页导航行 <xref:System.Web.UI.WebControls.DetailsView.ItemCreated> 。 然后，将 <xref:System.Web.UI.WebControls.Label> 用当前页码和总页数更新自定义页导航行中的两个控件。

 [!code-aspx-csharp[DetailsViewPagerTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DetailsViewPagerTemplate/CS/detailsviewpagertemplatecs.aspx#1)]
 [!code-aspx-vb[DetailsViewPagerTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DetailsViewPagerTemplate/VB/detailsviewpagertemplatevb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.DetailsViewRow" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.AllowPaging" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.TopPagerRow" />
        <altmember cref="E:System.Web.UI.WebControls.DetailsView.ItemCreated" />
      </Docs>
    </Member>
    <Member MemberName="Caption">
      <MemberSignature Language="C#" Value="public virtual string Caption { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Caption" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DetailsView.Caption" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Caption As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Caption { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Caption : string with get, set" Usage="System.Web.UI.WebControls.DetailsView.Caption" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue("")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue("")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Localizable(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Localizable(true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置要在 <see cref="T:System.Web.UI.WebControls.DetailsView" /> 控件的 HTML 标题元素中呈现的文本。 提供此属性的目的是使辅助技术设备的用户更易于访问控件。</summary>
        <value>一个字符串，表示要在 <see cref="T:System.Web.UI.WebControls.DetailsView" /> 控件的 HTML 标题元素中呈现的文本。 默认值为空字符串 ("")。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 使用 <xref:System.Web.UI.WebControls.DetailsView.Caption%2A> 属性指定要在控件中的 HTML 标题元素中呈现的文本 <xref:System.Web.UI.WebControls.DetailsView> 。 指定的文本为辅助技术设备提供了可用于使控件更易于访问的表的说明。

 控件的其他辅助功能支持 <xref:System.Web.UI.WebControls.DetailsView> 由 <xref:System.Web.UI.WebControls.DetailsView.CaptionAlign%2A> 属性提供。 使用 <xref:System.Web.UI.WebControls.DetailsView.CaptionAlign%2A> 属性指定控件中的 HTML 标题元素的对齐方式 <xref:System.Web.UI.WebControls.DetailsView> 。

 的值 <xref:System.Web.UI.WebControls.DetailsView.Caption%2A> 存储在视图状态中。

 设置此属性后，可以使用设计器工具自动将此属性的值保存到资源文件中。 有关详细信息，请参阅 <xref:System.ComponentModel.LocalizableAttribute> 和 [全球化和本地化](https://docs.microsoft.com/previous-versions/aspnet/c6zyy3s9(v=vs.100))。



## Examples
 下面的代码示例演示如何使用 <xref:System.Web.UI.WebControls.DetailsView.Caption%2A> 属性指定控件中呈现的 HTML caption 元素的文本 <xref:System.Web.UI.WebControls.DetailsView> 。

 [!code-aspx-csharp[DetailsViewCaption#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DetailsViewCaption/CS/detailsviewcaptioncs.aspx#1)]
 [!code-aspx-vb[DetailsViewCaption#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DetailsViewCaption/VB/detailsviewcaptionvb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.CaptionAlign" />
      </Docs>
    </Member>
    <Member MemberName="CaptionAlign">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.TableCaptionAlign CaptionAlign { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.TableCaptionAlign CaptionAlign" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DetailsView.CaptionAlign" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CaptionAlign As TableCaptionAlign" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::TableCaptionAlign CaptionAlign { System::Web::UI::WebControls::TableCaptionAlign get(); void set(System::Web::UI::WebControls::TableCaptionAlign value); };" />
      <MemberSignature Language="F#" Value="member this.CaptionAlign : System.Web.UI.WebControls.TableCaptionAlign with get, set" Usage="System.Web.UI.WebControls.DetailsView.CaptionAlign" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableCaptionAlign</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置 <see cref="T:System.Web.UI.WebControls.DetailsView" /> 控件中的 HTML 标题元素的水平或垂直位置。 提供此属性的目的是使辅助技术设备的用户更易于访问控件。</summary>
        <value><see cref="T:System.Web.UI.WebControls.TableCaptionAlign" /> 值之一。 默认值为 <see langword="TableCaptionAlign.NotSet" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 使用 <xref:System.Web.UI.WebControls.DetailsView.CaptionAlign%2A> 属性指定控件中的 HTML 标题元素的水平或垂直位置 <xref:System.Web.UI.WebControls.DetailsView> 。 提供此属性的目的是使辅助技术设备的用户更易于访问控件。

 使用枚举值之一设置此属性 <xref:System.Web.UI.WebControls.TableCaptionAlign> 。 下表列出了可能的值。

|值|说明|
|-----------|-----------------|
|`TableCaptionAlign.Bottom`|标题元素和表的底部对齐。|
|`TableCaptionAlign.Left`|标题元素和表的左边对齐。|
|`TableCaptionAlign.NotSet`|未设置标题元素的对齐方式。|
|`TableCaptionAlign.Right`|标题元素和表的右边对齐。|
|`TableCaptionAlign.Top`|标题元素和表的顶部对齐。|

 控件的其他辅助功能支持 <xref:System.Web.UI.WebControls.DetailsView> 由 <xref:System.Web.UI.WebControls.DetailsView.Caption%2A> 属性提供。 使用 <xref:System.Web.UI.WebControls.DetailsView.Caption%2A> 属性指定要在控件中的 HTML 标题元素中呈现的文本 <xref:System.Web.UI.WebControls.DetailsView> 。

 的值 <xref:System.Web.UI.WebControls.DetailsView.CaptionAlign%2A> 存储在视图状态中。



## Examples
 下面的代码示例演示如何使用 <xref:System.Web.UI.WebControls.DetailsView.CaptionAlign%2A> 属性指定控件中的 HTML 标题元素 <xref:System.Web.UI.WebControls.DetailsView> 应呈现在控件的左侧。

 [!code-aspx-csharp[DetailsViewCaption#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DetailsViewCaption/CS/detailsviewcaptioncs.aspx#1)]
 [!code-aspx-vb[DetailsViewCaption#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DetailsViewCaption/VB/detailsviewcaptionvb.aspx#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">指定的值不是 <see cref="T:System.Web.UI.WebControls.TableCaptionAlign" /> 枚举值之一。</exception>
        <altmember cref="T:System.Web.UI.WebControls.TableCaptionAlign" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.Caption" />
      </Docs>
    </Member>
    <Member MemberName="CellPadding">
      <MemberSignature Language="C#" Value="public virtual int CellPadding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CellPadding" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DetailsView.CellPadding" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CellPadding As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int CellPadding { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.CellPadding : int with get, set" Usage="System.Web.UI.WebControls.DetailsView.CellPadding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(-1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(-1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置单元格的内容和单元格的边框之间的空间量。</summary>
        <value>单元格的内容和单元格的边框之间的空间量（以像素为单位）。 默认值为 -1，表示未设置此属性。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 使用 <xref:System.Web.UI.WebControls.DetailsView.CellPadding%2A> 属性可控制单元格的内容和单元格的边框之间的间距。 指定的填充量将添加到单元格的四个边。

 控件的同一列中的所有单元格 <xref:System.Web.UI.WebControls.DetailsView> 都具有相同的宽度。 填充量适用于最宽的单元格，列中的所有其他单元格都将调整为该单元格的宽度。 同样，同一行中的所有单元格都具有相同的高度。 填充量适用于行中最高的单元格，该行中的所有其他单元格都将调整为该单元格的高度。 无法指定单个单元大小。

 若要调整单元格之间的间距，请使用 <xref:System.Web.UI.WebControls.DetailsView.CellSpacing%2A> 属性。



## Examples
 下面的代码示例演示如何使用 <xref:System.Web.UI.WebControls.DetailsView.CellPadding%2A> 属性来指定单元格的内容和单元格的边框之间的间距大小。

 [!code-aspx-csharp[DetailsViewCellPadding#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DetailsViewCellPadding/CS/detailsviewcellpaddingcs.aspx#1)]
 [!code-aspx-vb[DetailsViewCellPadding#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DetailsViewCellPadding/VB/detailsviewcellpaddingvb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.CellSpacing" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.GridLines" />
      </Docs>
    </Member>
    <Member MemberName="CellSpacing">
      <MemberSignature Language="C#" Value="public virtual int CellSpacing { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CellSpacing" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DetailsView.CellSpacing" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CellSpacing As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int CellSpacing { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.CellSpacing : int with get, set" Usage="System.Web.UI.WebControls.DetailsView.CellSpacing" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(0)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(0)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置单元格间的空间量。</summary>
        <value>单元格之间的空间量（以像素为单位）。 默认值为 0。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 使用 <xref:System.Web.UI.WebControls.DetailsView.CellSpacing%2A> 属性控制控件中相邻单元格之间的间距 <xref:System.Web.UI.WebControls.DetailsView> 。 此间距同时应用于垂直和水平。 单元格间距对于整个控件是统一的。 无法指定行或列之间的个别单元格间距。

> [!NOTE]
>  如果将此属性设置为大于0的值，然后将 <xref:System.Web.UI.WebControls.DetailsView.GridLines%2A> 属性设置为显示单元格边框的值，则相邻单元格的边框之间将显示一个间隙。 在这种情况下， <xref:System.Web.UI.WebControls.DetailsView.CellSpacing%2A> 属性控制间隔大小。

 若要调整单元格内容和单元格边框之间的间距，请使用 <xref:System.Web.UI.WebControls.DetailsView.CellPadding%2A> 属性。



## Examples
 下面的代码示例演示如何使用 <xref:System.Web.UI.WebControls.DetailsView.CellSpacing%2A> 属性指定相邻单元格之间的间距量。

 [!code-aspx-csharp[DetailsViewCellPadding#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DetailsViewCellPadding/CS/detailsviewcellpaddingcs.aspx#1)]
 [!code-aspx-vb[DetailsViewCellPadding#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DetailsViewCellPadding/VB/detailsviewcellpaddingvb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.CellPadding" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.GridLines" />
      </Docs>
    </Member>
    <Member MemberName="ChangeMode">
      <MemberSignature Language="C#" Value="public void ChangeMode (System.Web.UI.WebControls.DetailsViewMode newMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ChangeMode(valuetype System.Web.UI.WebControls.DetailsViewMode newMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DetailsView.ChangeMode(System.Web.UI.WebControls.DetailsViewMode)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ChangeMode (newMode As DetailsViewMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ChangeMode(System::Web::UI::WebControls::DetailsViewMode newMode);" />
      <MemberSignature Language="F#" Value="member this.ChangeMode : System.Web.UI.WebControls.DetailsViewMode -&gt; unit" Usage="detailsView.ChangeMode newMode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newMode" Type="System.Web.UI.WebControls.DetailsViewMode" />
      </Parameters>
      <Docs>
        <param name="newMode"><see cref="T:System.Web.UI.WebControls.DetailsViewMode" /> 值之一。</param>
        <summary>将 <see cref="T:System.Web.UI.WebControls.DetailsView" /> 控件切换为指定模式。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 使用 <xref:System.Web.UI.WebControls.DetailsView.ChangeMode%2A> 方法以编程方式在 <xref:System.Web.UI.WebControls.DetailsView> 编辑、插入和只读模式间切换控件。 此方法还 <xref:System.Web.UI.WebControls.DetailsView.CurrentMode%2A> 用指定模式更新属性。 下表列出了不同的模式值。

|“模式”|说明|
|----------|-----------------|
|`DetailsViewMode.Edit`|<xref:System.Web.UI.WebControls.DetailsView>控件处于编辑模式，这允许用户更新记录的值。|
|`DetailsViewMode.Insert`|<xref:System.Web.UI.WebControls.DetailsView>控件处于插入模式，这允许用户向数据源添加新记录。|
|`DetailsView.ReadOnly`|<xref:System.Web.UI.WebControls.DetailsView>控件处于只读模式，这是正常的显示模式。|



## Examples
 下面的代码示例演示了 <xref:System.Web.UI.WebControls.DetailsView.ChangeMode%2A> <xref:System.Web.UI.WebControls.DetailsView> 当用户导航到另一条记录时，如何使用方法将控件返回到只读模式。

 [!code-aspx-csharp[DetailsViewChangeMode#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DetailsViewChangeMode/CS/detailsviewchangemodecs.aspx#1)]
 [!code-aspx-vb[DetailsViewChangeMode#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DetailsViewChangeMode/VB/detailsviewchangemodevb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.DetailsViewMode" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.CurrentMode" />
      </Docs>
    </Member>
    <Member MemberName="CommandRowStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle CommandRowStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle CommandRowStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DetailsView.CommandRowStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CommandRowStyle As TableItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TableItemStyle ^ CommandRowStyle { System::Web::UI::WebControls::TableItemStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CommandRowStyle : System.Web.UI.WebControls.TableItemStyle" Usage="System.Web.UI.WebControls.DetailsView.CommandRowStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(null)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(null)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.NotifyParentProperty(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.NotifyParentProperty(true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取对 <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> 对象的引用，该对象允许您设置 <see cref="T:System.Web.UI.WebControls.DetailsView" /> 控件中的命令行的外观。</summary>
        <value>一个对 <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> 的引用，该对象表示 <see cref="T:System.Web.UI.WebControls.DetailsView" /> 控件中的命令行的样式。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 使用 <xref:System.Web.UI.WebControls.DetailsView.CommandRowStyle%2A> 属性可控制控件中的命令行的外观 <xref:System.Web.UI.WebControls.DetailsView> 。 命令行包含用于执行操作（如编辑、删除和插入）的命令按钮。 此属性是只读的;但是，您可以设置 <xref:System.Web.UI.WebControls.TableItemStyle> 它返回的对象的属性。 可以在窗体中以声明方式设置这些属性 `Property-Subproperty` ，其中 `Subproperty` 是对象的属性 <xref:System.Web.UI.WebControls.TableItemStyle> (例如 `CommandRowStyle-ForeColor`) 。 还可以以编程方式设置属性 `Property.Subproperty` ， (例如 `CommandRowStyle.ForeColor`) 。 常见设置通常包括自定义背景色、前景色和字体属性。



## Examples
 下面的代码示例演示如何使用 <xref:System.Web.UI.WebControls.DetailsView.CommandRowStyle%2A> 属性指定控件中的命令行的字体和样式设置 <xref:System.Web.UI.WebControls.DetailsView> 。

 [!code-aspx-csharp[DetailsViewCommandRowStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DetailsViewCommandRowStyle/CS/detailsviewcommandrowstylecs.aspx#1)]
 [!code-aspx-vb[DetailsViewCommandRowStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DetailsViewCommandRowStyle/VB/detailsviewcommandrowstylevb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TableItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.AlternatingRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.EditRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.EmptyDataRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.FooterStyle" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.FieldHeaderStyle" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.HeaderStyle" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.InsertRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.RowStyle" />
      </Docs>
    </Member>
    <Member MemberName="CreateAutoGeneratedRow">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.WebControls.AutoGeneratedField CreateAutoGeneratedRow (System.Web.UI.WebControls.AutoGeneratedFieldProperties fieldProperties);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.UI.WebControls.AutoGeneratedField CreateAutoGeneratedRow(class System.Web.UI.WebControls.AutoGeneratedFieldProperties fieldProperties) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DetailsView.CreateAutoGeneratedRow(System.Web.UI.WebControls.AutoGeneratedFieldProperties)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateAutoGeneratedRow (fieldProperties As AutoGeneratedFieldProperties) As AutoGeneratedField" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Web::UI::WebControls::AutoGeneratedField ^ CreateAutoGeneratedRow(System::Web::UI::WebControls::AutoGeneratedFieldProperties ^ fieldProperties);" />
      <MemberSignature Language="F#" Value="abstract member CreateAutoGeneratedRow : System.Web.UI.WebControls.AutoGeneratedFieldProperties -&gt; System.Web.UI.WebControls.AutoGeneratedField&#xA;override this.CreateAutoGeneratedRow : System.Web.UI.WebControls.AutoGeneratedFieldProperties -&gt; System.Web.UI.WebControls.AutoGeneratedField" Usage="detailsView.CreateAutoGeneratedRow fieldProperties" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.AutoGeneratedField</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fieldProperties" Type="System.Web.UI.WebControls.AutoGeneratedFieldProperties" />
      </Parameters>
      <Docs>
        <param name="fieldProperties"><see cref="T:System.Web.UI.WebControls.AutoGeneratedFieldProperties" />，包含 <see cref="T:System.Web.UI.WebControls.AutoGeneratedField" /> 的属性。</param>
        <summary>创建一个 <see cref="T:System.Web.UI.WebControls.AutoGeneratedField" /> 对象，该对象表示使用指定的字段属性自动生成的行字段。</summary>
        <returns>一个 <see cref="T:System.Web.UI.WebControls.AutoGeneratedField" />，包含 <paramref name="fieldProperties" /> 参数指定的字段属性。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.DetailsView.CreateAutoGeneratedRow%2A>方法是一个帮助器方法，该方法由 <xref:System.Web.UI.WebControls.DetailsView> 控件调用以使用指定的字段属性创建自动生成的行字段。

 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>扩展类时 <see cref="T:System.Web.UI.WebControls.DetailsView" /> ，可以重写此方法以创建自己的自动生成的行字段。</para></block>
        <altmember cref="T:System.Web.UI.WebControls.AutoGeneratedFieldProperties" />
      </Docs>
    </Member>
    <Member MemberName="CreateAutoGeneratedRows">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.ICollection CreateAutoGeneratedRows (object dataItem);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.ICollection CreateAutoGeneratedRows(object dataItem) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DetailsView.CreateAutoGeneratedRows(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateAutoGeneratedRows (dataItem As Object) As ICollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Collections::ICollection ^ CreateAutoGeneratedRows(System::Object ^ dataItem);" />
      <MemberSignature Language="F#" Value="abstract member CreateAutoGeneratedRows : obj -&gt; System.Collections.ICollection&#xA;override this.CreateAutoGeneratedRows : obj -&gt; System.Collections.ICollection" Usage="detailsView.CreateAutoGeneratedRows dataItem" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataItem" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="dataItem">数据项，将对其创建自动生成的行字段。</param>
        <summary>创建一组对指定数据项自动生成的行字段。</summary>
        <returns>一个 <see cref="T:System.Collections.ICollection" />，包含对指定数据项自动生成的行字段。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 当 <xref:System.Web.UI.WebControls.DetailsView.AutoGenerateRows%2A> 属性设置为时 `true` ，控件将 <xref:System.Web.UI.WebControls.DetailsView.CreateAutoGeneratedRows%2A> 调用方法 <xref:System.Web.UI.WebControls.DetailsView> 为当前数据项创建一组自动生成的行字段。

 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException"><see cref="T:System.Web.UI.WebControls.DetailsView" /> 控件不具备任何可用于生成字段的属性或特性。</exception>
        <block subset="none" type="overrides"><para>扩展类时 <see cref="T:System.Web.UI.WebControls.DetailsView" /> ，可以重写此方法以创建自己的一组自动生成的行字段。</para></block>
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.AutoGenerateRows" />
        <altmember cref="M:System.Web.UI.WebControls.DetailsView.CreateAutoGeneratedRows(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="CreateChildControls">
      <MemberSignature Language="C#" Value="protected override int CreateChildControls (System.Collections.IEnumerable dataSource, bool dataBinding);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance int32 CreateChildControls(class System.Collections.IEnumerable dataSource, bool dataBinding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DetailsView.CreateChildControls(System.Collections.IEnumerable,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateChildControls (dataSource As IEnumerable, dataBinding As Boolean) As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override int CreateChildControls(System::Collections::IEnumerable ^ dataSource, bool dataBinding);" />
      <MemberSignature Language="F#" Value="override this.CreateChildControls : System.Collections.IEnumerable * bool -&gt; int" Usage="detailsView.CreateChildControls (dataSource, dataBinding)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSource" Type="System.Collections.IEnumerable" />
        <Parameter Name="dataBinding" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="dataSource">表示 <see cref="T:System.Collections.IEnumerable" /> 控件的数据源的 <see cref="T:System.Web.UI.WebControls.DetailsView" />。</param>
        <param name="dataBinding"><see langword="true" /> 指示在数据绑定期间调用此方法；否则为 <see langword="false" />。</param>
        <summary>创建用于呈现 <see cref="T:System.Web.UI.WebControls.DetailsView" /> 控件的控件层次结构。</summary>
        <returns>数据源中的项数。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.DetailsView.CreateChildControls%2A>方法是一个帮助器方法，该方法由 <xref:System.Web.UI.WebControls.DetailsView> 控件调用以创建控件的控件层次结构。

 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException"><paramref name="dataSource" /> 返回空的 <see cref="T:System.Web.UI.DataSourceView" />。

- 或 -

 <paramref name="dataSource" /> 不是 <see cref="T:System.Collections.ICollection" />，无法返回总行数。

- 或 -

 <paramref name="dataBinding" /> 为 <see langword="false" />，<paramref name="dataSource" /> 未实现 <see cref="T:System.Collections.ICollection" /> 接口。

- 或 -

 <paramref name="dataSource" /> 未实现 <see cref="T:System.Collections.ICollection" /> 接口，<see cref="P:System.Web.UI.WebControls.DetailsView.AllowPaging" /> 被设置为 <see langword="true" />。</exception>
        <block subset="none" type="overrides"><para>扩展类时 <see cref="T:System.Web.UI.WebControls.DetailsView" /> ，可以重写此方法以创建自己的控件层次结构。</para></block>
        <altmember cref="T:System.Collections.IEnumerable" />
      </Docs>
    </Member>
    <Member MemberName="CreateControlStyle">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.WebControls.Style CreateControlStyle ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.WebControls.Style CreateControlStyle() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DetailsView.CreateControlStyle" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateControlStyle () As Style" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Web::UI::WebControls::Style ^ CreateControlStyle();" />
      <MemberSignature Language="F#" Value="override this.CreateControlStyle : unit -&gt; System.Web.UI.WebControls.Style" Usage="detailsView.CreateControlStyle " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Style</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>创建 <see cref="T:System.Web.UI.WebControls.DetailsView" /> 控件的默认表样式对象。</summary>
        <returns>一个 <see cref="T:System.Web.UI.WebControls.Style" />，包含 <see cref="T:System.Web.UI.WebControls.DetailsView" /> 控件的默认表样式。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.DetailsView.CreateControlStyle%2A>方法是由 <xref:System.Web.UI.WebControls.DetailsView> 控件调用以创建其默认表样式对象的帮助器方法。 除了对象的默认样式设置外 <xref:System.Web.UI.WebControls.TableStyle> ，此方法还设置下表中的属性。

|properties|初始值|
|--------------|-------------------|
|<xref:System.Web.UI.WebControls.TableStyle.GridLines%2A>|`GridLines.Both`|
|<xref:System.Web.UI.WebControls.TableStyle.CellSpacing%2A>|0|

 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>扩展类时 <see cref="T:System.Web.UI.WebControls.DetailsView" /> ，可以重写此方法以返回 <see cref="T:System.Web.UI.WebControls.TableStyle" /> 具有自定义设置的对象。</para></block>
        <altmember cref="T:System.Web.UI.WebControls.Style" />
        <altmember cref="T:System.Web.UI.WebControls.TableStyle" />
      </Docs>
    </Member>
    <Member MemberName="CreateDataSourceSelectArguments">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.DataSourceSelectArguments CreateDataSourceSelectArguments ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.DataSourceSelectArguments CreateDataSourceSelectArguments() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DetailsView.CreateDataSourceSelectArguments" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateDataSourceSelectArguments () As DataSourceSelectArguments" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Web::UI::DataSourceSelectArguments ^ CreateDataSourceSelectArguments();" />
      <MemberSignature Language="F#" Value="override this.CreateDataSourceSelectArguments : unit -&gt; System.Web.UI.DataSourceSelectArguments" Usage="detailsView.CreateDataSourceSelectArguments " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataSourceSelectArguments</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>创建传递给“Select”命令的 <see cref="T:System.Web.UI.DataSourceSelectArguments" /> 对象。</summary>
        <returns>传递给“Select”命令的 <see cref="T:System.Web.UI.DataSourceSelectArguments" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.DetailsView.CreateDataSourceSelectArguments%2A>方法是一个帮助器方法，该方法由 <xref:System.Web.UI.WebControls.DetailsView> 控件调用以创建 <xref:System.Web.UI.DataSourceSelectArguments> 传递给 "Select" 命令的对象。

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.DataSourceSelectArguments" />
        <altmember cref="M:System.Web.UI.WebControls.DataBoundControl.CreateDataSourceSelectArguments" />
      </Docs>
    </Member>
    <Member MemberName="CreateFieldSet">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.ICollection CreateFieldSet (object dataItem, bool useDataSource);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.ICollection CreateFieldSet(object dataItem, bool useDataSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DetailsView.CreateFieldSet(System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateFieldSet (dataItem As Object, useDataSource As Boolean) As ICollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Collections::ICollection ^ CreateFieldSet(System::Object ^ dataItem, bool useDataSource);" />
      <MemberSignature Language="F#" Value="abstract member CreateFieldSet : obj * bool -&gt; System.Collections.ICollection&#xA;override this.CreateFieldSet : obj * bool -&gt; System.Collections.ICollection" Usage="detailsView.CreateFieldSet (dataItem, useDataSource)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataItem" Type="System.Object" />
        <Parameter Name="useDataSource" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="dataItem">数据项，将对其创建行字段。</param>
        <param name="useDataSource"><see langword="true" /> 表示使用该数据项创建自动生成的行字段；否则为 <see langword="false" />。</param>
        <summary>创建用来生成控件层次结构的自动生成行字段和用户定义行字段的完整集合。</summary>
        <returns>一个 <see cref="T:System.Collections.ICollection" />，包含针对指定数据项的自动生成行字段和用户定义行字段。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.DetailsView.CreateFieldSet%2A>方法是一个帮助器方法，该方法由 <xref:System.Web.UI.WebControls.DetailsView> 控件调用以创建控件的一组完整的行字段。 如果将 <xref:System.Web.UI.WebControls.DetailsView.AutoGenerateRows%2A> 属性设置为 `true` ，则自动生成的行字段将追加到集合中包含的用户定义行字段 <xref:System.Web.UI.WebControls.DetailsView.Fields%2A> 。 若要基于数据项创建自动生成的行字段，请传入 `true` `useDataSource` 参数; 否则，将基于控件中现有行字段的属性创建自动生成的行字段。

 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>扩展类时 <see cref="T:System.Web.UI.WebControls.DetailsView" /> ，可以重写此方法以创建自己的行字段集。</para></block>
        <altmember cref="M:System.Web.UI.WebControls.DetailsView.CreateAutoGeneratedRows(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="CreateRow">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.WebControls.DetailsViewRow CreateRow (int rowIndex, System.Web.UI.WebControls.DataControlRowType rowType, System.Web.UI.WebControls.DataControlRowState rowState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.UI.WebControls.DetailsViewRow CreateRow(int32 rowIndex, valuetype System.Web.UI.WebControls.DataControlRowType rowType, valuetype System.Web.UI.WebControls.DataControlRowState rowState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DetailsView.CreateRow(System.Int32,System.Web.UI.WebControls.DataControlRowType,System.Web.UI.WebControls.DataControlRowState)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateRow (rowIndex As Integer, rowType As DataControlRowType, rowState As DataControlRowState) As DetailsViewRow" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Web::UI::WebControls::DetailsViewRow ^ CreateRow(int rowIndex, System::Web::UI::WebControls::DataControlRowType rowType, System::Web::UI::WebControls::DataControlRowState rowState);" />
      <MemberSignature Language="F#" Value="abstract member CreateRow : int * System.Web.UI.WebControls.DataControlRowType * System.Web.UI.WebControls.DataControlRowState -&gt; System.Web.UI.WebControls.DetailsViewRow&#xA;override this.CreateRow : int * System.Web.UI.WebControls.DataControlRowType * System.Web.UI.WebControls.DataControlRowState -&gt; System.Web.UI.WebControls.DetailsViewRow" Usage="detailsView.CreateRow (rowIndex, rowType, rowState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DetailsViewRow</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowIndex" Type="System.Int32" />
        <Parameter Name="rowType" Type="System.Web.UI.WebControls.DataControlRowType" />
        <Parameter Name="rowState" Type="System.Web.UI.WebControls.DataControlRowState" />
      </Parameters>
      <Docs>
        <param name="rowIndex">要显示的数据项的从零开始的索引。</param>
        <param name="rowType"><see cref="T:System.Web.UI.WebControls.DataControlRowType" /> 值之一。</param>
        <param name="rowState"><see cref="T:System.Web.UI.WebControls.DataControlRowState" /> 值之一。</param>
        <summary>使用指定项索引、行类型和行状态创建 <see cref="T:System.Web.UI.WebControls.DetailsViewRow" /> 对象。</summary>
        <returns>一个具有指定项索引、行类型和行状态的 <see cref="T:System.Web.UI.WebControls.DetailsViewRow" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.DetailsView.CreateRow%2A>方法是由 <xref:System.Web.UI.WebControls.DetailsView> 控件调用以创建对象的帮助器方法 <xref:System.Web.UI.WebControls.DetailsViewRow> 。

 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>扩展类时 <see cref="T:System.Web.UI.WebControls.DetailsView" /> ，可以重写此方法以返回 <see cref="T:System.Web.UI.WebControls.DetailsViewRow" /> 具有自定义设置的对象。</para></block>
        <altmember cref="T:System.Web.UI.WebControls.DetailsViewRow" />
        <altmember cref="T:System.Web.UI.WebControls.DataControlRowType" />
        <altmember cref="T:System.Web.UI.WebControls.DataControlRowState" />
      </Docs>
    </Member>
    <Member MemberName="CreateTable">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.WebControls.Table CreateTable ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.UI.WebControls.Table CreateTable() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DetailsView.CreateTable" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateTable () As Table" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Web::UI::WebControls::Table ^ CreateTable();" />
      <MemberSignature Language="F#" Value="abstract member CreateTable : unit -&gt; System.Web.UI.WebControls.Table&#xA;override this.CreateTable : unit -&gt; System.Web.UI.WebControls.Table" Usage="detailsView.CreateTable " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Table</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>为 <see cref="T:System.Web.UI.WebControls.DetailsView" /> 控件创建包含表。</summary>
        <returns>一个 <see cref="T:System.Web.UI.WebControls.Table" />，它表示 <see cref="T:System.Web.UI.WebControls.DetailsView" /> 控件的包含表。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.DetailsView.CreateTable%2A>方法是一个帮助器方法，该方法由 <xref:System.Web.UI.WebControls.DetailsView> 控件调用以创建一个充当控件的容器的表。

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentMode">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.DetailsViewMode CurrentMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.DetailsViewMode CurrentMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DetailsView.CurrentMode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CurrentMode As DetailsViewMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::DetailsViewMode CurrentMode { System::Web::UI::WebControls::DetailsViewMode get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrentMode : System.Web.UI.WebControls.DetailsViewMode" Usage="System.Web.UI.WebControls.DetailsView.CurrentMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DetailsViewMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取 <see cref="T:System.Web.UI.WebControls.DetailsView" /> 控件的当前数据输入模式。</summary>
        <value><see cref="T:System.Web.UI.WebControls.DetailsViewMode" /> 值之一。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 使用 <xref:System.Web.UI.WebControls.DetailsView.CurrentMode%2A> 属性可确定 <xref:System.Web.UI.WebControls.DetailsView> 控件是处于编辑、插入还是只读模式。 下表列出了不同的模式值。

|“模式”|说明|
|----------|-----------------|
|`DetailsViewMode.Edit`|<xref:System.Web.UI.WebControls.DetailsView>控件处于编辑模式，这允许用户更新记录的值。|
|`DetailsViewMode.Insert`|<xref:System.Web.UI.WebControls.DetailsView>控件处于插入模式，这允许用户向数据源添加新记录。|
|`DetailsViewMode.ReadOnly`|<xref:System.Web.UI.WebControls.DetailsView>控件处于只读模式，这是正常的显示模式。|

 <xref:System.Web.UI.WebControls.DetailsView>单击 "新建"、"更新"、"插入"、"删除" 或 "取消" 命令按钮时，控件通常会自动设置此值。 你还可以使用方法以编程方式更改模式 <xref:System.Web.UI.WebControls.DetailsView.ChangeMode%2A> 。

 当 <xref:System.Web.UI.WebControls.DetailsView> 控件更改模式时，将引发下表中的事件。 这允许您创建一个自定义事件处理程序，该处理程序在发生事件时执行例程。

|事件|说明|
|-----------|-----------------|
|<xref:System.Web.UI.WebControls.DetailsView.ModeChanged>|当单击更改控件模式的命令按钮时 <xref:System.Web.UI.WebControls.DetailsView> ，但在模式更改之后发生。|
|<xref:System.Web.UI.WebControls.DetailsView.ModeChanging>|当单击更改控件模式的命令按钮时 <xref:System.Web.UI.WebControls.DetailsView> ，但在模式更改之前发生。|



## Examples
 下面的代码示例演示如何使用 <xref:System.Web.UI.WebControls.DetailsView.CurrentMode%2A> 属性来确定 <xref:System.Web.UI.WebControls.DetailsView> 控件是处于编辑、插入还是只读模式。 如果用户在控件处于编辑模式时尝试导航到另一条记录 <xref:System.Web.UI.WebControls.DetailsView> ，则会取消分页操作。

 [!code-aspx-csharp[DetailsViewCurrentMode#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DetailsViewCurrentMode/CS/detailsviewcurrentmodecs.aspx#1)]
 [!code-aspx-vb[DetailsViewCurrentMode#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DetailsViewCurrentMode/VB/detailsviewcurrentmodevb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.CurrentMode" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.DefaultMode" />
        <altmember cref="M:System.Web.UI.WebControls.DetailsView.ChangeMode(System.Web.UI.WebControls.DetailsViewMode)" />
        <altmember cref="E:System.Web.UI.WebControls.DetailsView.ModeChanged" />
        <altmember cref="E:System.Web.UI.WebControls.DetailsView.ModeChanging" />
      </Docs>
    </Member>
    <Member MemberName="DataBind">
      <MemberSignature Language="C#" Value="public override sealed void DataBind ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void DataBind() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DetailsView.DataBind" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable Sub DataBind ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void DataBind();" />
      <MemberSignature Language="F#" Value="override this.DataBind : unit -&gt; unit" Usage="detailsView.DataBind " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>调用基类的 <see cref="M:System.Web.UI.WebControls.BaseDataBoundControl.DataBind" /> 方法。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 数据绑定控件应重写 <xref:System.Web.UI.WebControls.DetailsView.PerformDataBinding%2A> 而不是 <xref:System.Web.UI.WebControls.DetailsView.DataBind%2A> 。

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataItem">
      <MemberSignature Language="C#" Value="public virtual object DataItem { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object DataItem" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DetailsView.DataItem" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property DataItem As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ DataItem { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DataItem : obj" Usage="System.Web.UI.WebControls.DetailsView.DataItem" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.IDataItemContainer.DataItem</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取绑定到 <see cref="T:System.Web.UI.WebControls.DetailsView" /> 控件的数据项。</summary>
        <value>一个 <see cref="T:System.Object" />，表示绑定到 <see cref="T:System.Web.UI.WebControls.DetailsView" /> 控件的数据项。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 使用 <xref:System.Web.UI.WebControls.DetailsView.DataItem%2A> 属性可访问绑定到控件的数据项 <xref:System.Web.UI.WebControls.DetailsView> 。 该数据项通常用于直接访问当前记录的字段值。 <xref:System.Object>此属性返回的类型因数据源而异。 例如，将 <xref:System.Web.UI.WebControls.SqlDataSource> 控件绑定到控件时，将 <xref:System.Web.UI.WebControls.DetailsView> <xref:System.Data.DataRowView> 返回一个对象。

> [!NOTE]
>  此属性仅在数据绑定发生之后才可用。 数据绑定发生之前，此属性返回 `null` 。 当 <xref:System.Web.UI.WebControls.DetailsView> 控件处于插入模式并返回时，此属性也不适用 `null` 。



## Examples
 下面的代码示例演示如何使用 <xref:System.Web.UI.WebControls.DetailsView.DataItem%2A> 属性来确定数据项中的字段的值。

 [!code-aspx-csharp[DetailsViewDataItem#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DetailsViewDataItem/CS/DetailsViewDataItem.aspx#1)]
 [!code-aspx-vb[DetailsViewDataItem#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DetailsViewDataItem/VB/DetailsViewDataItemVB.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Object" />
        <altmember cref="Overload:System.Web.UI.DataBinder.Eval" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.DataItemCount" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.DataItemIndex" />
      </Docs>
    </Member>
    <Member MemberName="DataItemCount">
      <MemberSignature Language="C#" Value="public int DataItemCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 DataItemCount" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DetailsView.DataItemCount" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DataItemCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int DataItemCount { int get(); };" />
      <MemberSignature Language="F#" Value="member this.DataItemCount : int" Usage="System.Web.UI.WebControls.DetailsView.DataItemCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取基础数据源中的项数。</summary>
        <value>基础数据源中的项数。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 通过将属性设置为 ") " 启用分页功能后 (<xref:System.Web.UI.WebControls.DetailsView.AllowPaging%2A> `true` ，请使用 <xref:System.Web.UI.WebControls.DetailsView.DataItemCount%2A> 属性来确定基础数据源中的记录总数。

> [!NOTE]
>  由于 <xref:System.Web.UI.WebControls.DetailsView> 控件一次只显示一条记录，因此此值还对应于显示数据源中的每个记录所需的总页数。

 若要确定基础数据源中的当前记录的索引，请使用 <xref:System.Web.UI.WebControls.DetailsView.DataItemIndex%2A> 属性。



## Examples
 下面的代码示例演示如何使用 <xref:System.Web.UI.WebControls.DetailsView.DataItemCount%2A> 属性来确定数据源中的项数。 此值用于显示 <xref:System.Web.UI.WebControls.Label> 自定义页导航行内包含的控件中的页计数。

 [!code-aspx-csharp[DetailsViewPagerTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DetailsViewPagerTemplate/CS/detailsviewpagertemplatecs.aspx#1)]
 [!code-aspx-vb[DetailsViewPagerTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DetailsViewPagerTemplate/VB/detailsviewpagertemplatevb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.AllowPaging" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.DataItemIndex" />
      </Docs>
    </Member>
    <Member MemberName="DataItemIndex">
      <MemberSignature Language="C#" Value="public virtual int DataItemIndex { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 DataItemIndex" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DetailsView.DataItemIndex" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property DataItemIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int DataItemIndex { int get(); };" />
      <MemberSignature Language="F#" Value="member this.DataItemIndex : int" Usage="System.Web.UI.WebControls.DetailsView.DataItemIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>从基础数据源中获取 <see cref="T:System.Web.UI.WebControls.DetailsView" /> 控件中正在显示的项的索引。</summary>
        <value>正从基础数据源显示在 <see cref="T:System.Web.UI.WebControls.DetailsView" /> 控件中的数据项的从零开始的索引。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 通过将属性设置为 ") " 启用分页功能后 (<xref:System.Web.UI.WebControls.DetailsView.AllowPaging%2A> `true` ，请使用 <xref:System.Web.UI.WebControls.DetailsView.DataItemIndex%2A> 属性来确定当前显示的记录的索引。 还可以使用此属性以编程方式更改显示的记录。

> [!NOTE]
>  启用分页功能后，还可以使用此属性来确定所显示记录的页码;但请注意，此属性是从零开始的。

 若要确定数据源中的总项数，请使用 <xref:System.Web.UI.WebControls.DetailsView.DataItemCount%2A> 属性。



## Examples
 下面的代码示例演示如何使用 <xref:System.Web.UI.WebControls.DetailsView.DataItemIndex%2A> 属性来确定数据源中当前项的索引。 此值用于显示 <xref:System.Web.UI.WebControls.Label> 自定义页导航行中包含的控件中的当前页码。

 [!code-aspx-csharp[DetailsViewPagerTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DetailsViewPagerTemplate/CS/detailsviewpagertemplatecs.aspx#1)]
 [!code-aspx-vb[DetailsViewPagerTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DetailsViewPagerTemplate/VB/detailsviewpagertemplatevb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.AllowPaging" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.DataItemCount" />
      </Docs>
    </Member>
    <Member MemberName="DataKey">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.DataKey DataKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.DataKey DataKey" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DetailsView.DataKey" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property DataKey As DataKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::DataKey ^ DataKey { System::Web::UI::WebControls::DataKey ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DataKey : System.Web.UI.WebControls.DataKey" Usage="System.Web.UI.WebControls.DetailsView.DataKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个 <see cref="T:System.Web.UI.WebControls.DataKey" /> 对象，该对象表示所显示的记录的主键。</summary>
        <value>一个 <see cref="T:System.Web.UI.WebControls.DataKey" />，表示所显示的记录的主键。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.DetailsView.DataKeyNames%2A>设置属性后， <xref:System.Web.UI.WebControls.DetailsView> 控件将自动创建一个 <xref:System.Web.UI.WebControls.DataKey> 对象，该对象表示当前记录的一个或多个键字段。 使用 <xref:System.Web.UI.WebControls.DetailsView.DataKey%2A> 属性可获取此 <xref:System.Web.UI.WebControls.DataKey> 对象。 此属性通常用于获取属性中指定的字段的键及其对应的值 <xref:System.Web.UI.WebControls.DetailsView.DataKeyNames%2A> 。

> [!NOTE]
>  作为一种快捷方式，还可以使用 <xref:System.Web.UI.WebControls.DetailsView.SelectedValue%2A> 属性来确定属性中列出的第一个键字段的值 <xref:System.Web.UI.WebControls.DetailsView.DataKeyNames%2A> 。



## Examples
 下面的代码示例演示如何使用 <xref:System.Web.UI.WebControls.DetailsView.DataKey%2A> 属性来确定当前记录的键字段和对应的值。

 [!code-aspx-csharp[DetailsViewDataKey#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DetailsViewDataKey/CS/detailsviewdatakeycs.aspx#1)]
 [!code-aspx-vb[DetailsViewDataKey#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DetailsViewDataKey/VB/detailsviewdatakeyvb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.DataKey" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.DataKeyNames" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.SelectedValue" />
      </Docs>
    </Member>
    <Member MemberName="DataKeyNames">
      <MemberSignature Language="C#" Value="public virtual string[] DataKeyNames { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] DataKeyNames" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DetailsView.DataKeyNames" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property DataKeyNames As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property cli::array &lt;System::String ^&gt; ^ DataKeyNames { cli::array &lt;System::String ^&gt; ^ get(); void set(cli::array &lt;System::String ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataKeyNames : string[] with get, set" Usage="System.Web.UI.WebControls.DetailsView.DataKeyNames" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(null)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(null)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName Language="C#">[System.ComponentModel.Editor("System.Web.UI.Design.WebControls.DataFieldEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Editor("System.Web.UI.Design.WebControls.DataFieldEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.TypeConverter(typeof(System.Web.UI.WebControls.StringArrayConverter))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.TypeConverter(typeof(System.Web.UI.WebControls.StringArrayConverter))&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.Editor("System.Web.UI.Design.WebControls.DataFieldEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Editor("System.Web.UI.Design.WebControls.DataFieldEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个数组，该数组包含数据源的键字段的名称。</summary>
        <value>一个数组，包含数据源的键字段的名称。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 使用 <xref:System.Web.UI.WebControls.DetailsView.DataKeyNames%2A> 属性指定以逗号分隔的字段名称列表，这些字段名称表示数据源的主键。 <xref:System.Web.UI.WebControls.DetailsView.DataKeyNames%2A>设置属性后， <xref:System.Web.UI.WebControls.DetailsView> 控件将自动创建一个 <xref:System.Web.UI.WebControls.DataKey> 对象，该对象表示当前记录的一个或多个键字段，并将其存储在 <xref:System.Web.UI.WebControls.DetailsView.DataKey%2A> 属性中。 当 <xref:System.Web.UI.WebControls.GridView.AutoGenerateColumns%2A> 属性设置为时 `true` ， <xref:System.Web.UI.WebControls.DetailsView> 控件将自动确保在属性中指定的一个或多个字段 <xref:System.Web.UI.WebControls.DetailsView.DataKeyNames%2A> 是只读的。

> [!NOTE]
>  必须将属性设置 <xref:System.Web.UI.WebControls.DetailsView.DataKeyNames%2A> 为自动更新、删除和插入控件的功能 <xref:System.Web.UI.WebControls.DetailsView> 才能工作。

 如果 <xref:System.Web.UI.WebControls.DataControlField.Visible%2A> 行字段的属性设置为 `false` ，则不会在控件中显示行， <xref:System.Web.UI.WebControls.DetailsView> 并且该行的数据不会对客户端进行往返。 如果希望不可见的行的数据进行往返，请将字段名称添加到 <xref:System.Web.UI.WebControls.DetailsView.DataKeyNames%2A> 属性。



## Examples
 下面的代码示例演示如何使用 <xref:System.Web.UI.WebControls.DetailsView.DataKeyNames%2A> 属性标识绑定到控件的数据源的键字段 <xref:System.Web.UI.WebControls.DetailsView> 。

 [!code-aspx-csharp[DetailsViewAutoGenerateDeleteButton#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DetailsViewAutoGenerateDeleteButton/CS/detailsviewautogeneratedeletebuttoncs.aspx#1)]
 [!code-aspx-vb[DetailsViewAutoGenerateDeleteButton#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DetailsViewAutoGenerateDeleteButton/VB/detailsviewautogeneratedeletebuttonvb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.DataKey" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.SelectedValue" />
      </Docs>
    </Member>
    <Member MemberName="DefaultMode">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.DetailsViewMode DefaultMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.DetailsViewMode DefaultMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DetailsView.DefaultMode" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property DefaultMode As DetailsViewMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::DetailsViewMode DefaultMode { System::Web::UI::WebControls::DetailsViewMode get(); void set(System::Web::UI::WebControls::DetailsViewMode value); };" />
      <MemberSignature Language="F#" Value="member this.DefaultMode : System.Web.UI.WebControls.DetailsViewMode with get, set" Usage="System.Web.UI.WebControls.DetailsView.DefaultMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DetailsViewMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置 <see cref="T:System.Web.UI.WebControls.DetailsView" /> 控件的默认数据输入模式。</summary>
        <value><see cref="T:System.Web.UI.WebControls.DetailsViewMode" /> 值之一。 默认值为 <see langword="DetailsViewMode.ReadOnly" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 使用 <xref:System.Web.UI.WebControls.DetailsView.DefaultMode%2A> 属性来指定在 <xref:System.Web.UI.WebControls.DetailsView> 执行编辑或插入操作后控件是返回到编辑、插入还是只读模式。 默认情况下， <xref:System.Web.UI.WebControls.DetailsView> 控件将返回到只读模式; 但是，您可以 <xref:System.Web.UI.WebControls.DetailsView> 通过将此属性设置为适当的值，使控件处于 "编辑" 或 "插入" 模式。 下表列出了不同的模式值。

|“模式”|说明|
|----------|-----------------|
|`DetailsViewMode.Edit`|<xref:System.Web.UI.WebControls.DetailsView>控件处于编辑模式，这允许用户更新记录的值。|
|`DetailsViewMode.Insert`|<xref:System.Web.UI.WebControls.DetailsView>控件处于插入模式，这允许用户向数据源添加新记录。|
|`DetailsViewMode.ReadOnly`|<xref:System.Web.UI.WebControls.DetailsView>控件处于只读模式，这是正常的显示模式。|



## Examples
 下面的代码示例演示如何使用 <xref:System.Web.UI.WebControls.DetailsView.DefaultMode%2A> 属性来指定在 <xref:System.Web.UI.WebControls.DetailsView> 更新记录后控件应保持在编辑模式下。

 [!code-aspx-csharp[DetailsViewDefaultMode#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DetailsViewDefaultMode/CS/detailsviewdefaultmodecs.aspx#1)]
 [!code-aspx-vb[DetailsViewDefaultMode#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DetailsViewDefaultMode/VB/detailsviewdefaultmodevb.aspx#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">指定的值不是 <see cref="T:System.Web.UI.WebControls.DetailsViewMode" /> 枚举值之一。</exception>
        <altmember cref="T:System.Web.UI.WebControls.DetailsViewMode" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.CurrentMode" />
        <altmember cref="M:System.Web.UI.WebControls.DetailsView.ChangeMode(System.Web.UI.WebControls.DetailsViewMode)" />
      </Docs>
    </Member>
    <Member MemberName="DeleteItem">
      <MemberSignature Language="C#" Value="public virtual void DeleteItem ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DeleteItem() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DetailsView.DeleteItem" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub DeleteItem ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void DeleteItem();" />
      <MemberSignature Language="F#" Value="abstract member DeleteItem : unit -&gt; unit&#xA;override this.DeleteItem : unit -&gt; unit" Usage="detailsView.DeleteItem " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>从数据源中删除当前记录。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 如果控件处于插入模式，则不执行删除操作 <xref:System.Web.UI.WebControls.DetailsView> 。 在 <xref:System.Web.UI.WebControls.DetailsView.ItemDeleting> 删除项之前立即引发事件。 将 <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> 属性设置为， `true` 以取消删除。

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteMethod">
      <MemberSignature Language="C#" Value="public virtual string DeleteMethod { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DeleteMethod" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DetailsView.DeleteMethod" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property DeleteMethod As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ DeleteMethod { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DeleteMethod : string with get, set" Usage="System.Web.UI.WebControls.DetailsView.DeleteMethod" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue("")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue("")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Web.UI.Themeable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.Themeable(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置控件执行删除操作时调用的页面上的方法的名称。</summary>
        <value>当控件执行删除操作时，该页中被调用的方法的名称。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 有关如何在 Web 窗体中使用模型绑定的教程系列，请参阅 [模型绑定和 Web 窗体](/aspnet/web-forms/overview/presenting-and-managing-data/model-binding/retrieving-data)。

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EditRowStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle EditRowStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle EditRowStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DetailsView.EditRowStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EditRowStyle As TableItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TableItemStyle ^ EditRowStyle { System::Web::UI::WebControls::TableItemStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EditRowStyle : System.Web.UI.WebControls.TableItemStyle" Usage="System.Web.UI.WebControls.DetailsView.EditRowStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(null)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(null)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.NotifyParentProperty(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.NotifyParentProperty(true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个对 <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> 对象的引用，该对象允许您设置在 <see cref="T:System.Web.UI.WebControls.DetailsView" /> 控件处于编辑模式时数据行的外观。</summary>
        <value>一个对 <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> 的引用，该对象表示在 <see cref="T:System.Web.UI.WebControls.DetailsView" /> 控件处于编辑模式时数据行的样式。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.DetailsView.EditRowStyle%2A>当控件处于编辑模式时，使用属性控制数据行的外观 <xref:System.Web.UI.WebControls.DetailsView> 。 此属性是只读的;但是，您可以设置 <xref:System.Web.UI.WebControls.TableItemStyle> 它返回的对象的属性。 可以在窗体中以声明方式设置这些属性 `Property-Subproperty` ，其中 `Subproperty` 是对象的属性 <xref:System.Web.UI.WebControls.TableItemStyle> (例如 `EditRowStyle-ForeColor`) 。 还可以以编程方式设置属性 `Property.Subproperty` ， (例如 `EditRowStyle.ForeColor`) 。 常见设置通常包括自定义背景色、前景色和字体属性。



## Examples
 下面的代码示例演示如何使用 <xref:System.Web.UI.WebControls.DetailsView.EditRowStyle%2A> 属性来指定在 <xref:System.Web.UI.WebControls.DetailsView> 控件处于编辑模式时数据行的字体和样式设置。

 [!code-aspx-csharp[DetailsViewEditRowStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DetailsViewEditRowStyle/CS/detailsvieweditrowstylecs.aspx#1)]
 [!code-aspx-vb[DetailsViewEditRowStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DetailsViewEditRowStyle/VB/detailsvieweditrowstylevb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TableItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.AlternatingRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.CommandRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.EmptyDataRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.FooterStyle" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.FieldHeaderStyle" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.HeaderStyle" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.InsertRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.RowStyle" />
      </Docs>
    </Member>
    <Member MemberName="EmptyDataRowStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle EmptyDataRowStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle EmptyDataRowStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DetailsView.EmptyDataRowStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EmptyDataRowStyle As TableItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TableItemStyle ^ EmptyDataRowStyle { System::Web::UI::WebControls::TableItemStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EmptyDataRowStyle : System.Web.UI.WebControls.TableItemStyle" Usage="System.Web.UI.WebControls.DetailsView.EmptyDataRowStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(null)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(null)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.NotifyParentProperty(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.NotifyParentProperty(true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个对 <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> 对象的引用，使用该对象可以设置在绑定到 <see cref="T:System.Web.UI.WebControls.DetailsView" /> 控件的数据源不包含任何记录时所显示的空数据行的外观。</summary>
        <value>一个对 <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> 的引用，使用该对象可以设置空数据行的外观。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 使用 <xref:System.Web.UI.WebControls.DetailsView.EmptyDataRowStyle%2A> 属性可控制控件中的空数据行的外观 <xref:System.Web.UI.WebControls.DetailsView> 。 当绑定到控件的数据源不包含任何记录时，将显示空数据行。 此属性是只读的;但是，您可以设置 <xref:System.Web.UI.WebControls.TableItemStyle> 它返回的对象的属性。 可以在窗体中以声明方式设置这些属性 `Property-Subproperty` ，其中 `Subproperty` 是对象的属性 <xref:System.Web.UI.WebControls.TableItemStyle> (例如 `EmptyDataRowStyle-ForeColor`) 。 还可以以编程方式设置属性 `Property.Subproperty` ， (例如 `EmptyDataRowStyle.ForeColor`) 。 常见设置通常包括自定义背景色、前景色和字体属性。



## Examples
 下面的代码示例演示如何使用 <xref:System.Web.UI.WebControls.DetailsView.EmptyDataRowStyle%2A> 属性为空数据行指定字体和样式设置。

 [!code-aspx-csharp[DetailsViewEmptyDataText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DetailsViewEmptyDataText/CS/detailsviewemptydatatextcs.aspx#1)]
 [!code-aspx-vb[DetailsViewEmptyDataText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DetailsViewEmptyDataText/VB/detailsviewemptydatatextvb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TableItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.AlternatingRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.CommandRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.EditRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.EmptyDataTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.EmptyDataText" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.FooterStyle" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.FieldHeaderStyle" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.HeaderStyle" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.InsertRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.RowStyle" />
      </Docs>
    </Member>
    <Member MemberName="EmptyDataTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate EmptyDataTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate EmptyDataTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DetailsView.EmptyDataTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property EmptyDataTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ EmptyDataTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberSignature Language="F#" Value="member this.EmptyDataTemplate : System.Web.UI.ITemplate with get, set" Usage="System.Web.UI.WebControls.DetailsView.EmptyDataTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(null)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(null)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.DetailsView))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.DetailsView))&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置在 <see cref="T:System.Web.UI.WebControls.DetailsView" /> 控件绑定到不包含任何记录的数据源时所呈现的空数据行的用户定义内容。</summary>
        <value>一个 <see cref="T:System.Web.UI.ITemplate" />，包含空数据行的自定义内容。 默认值为 <see langword="null" />，表示未设置此属性。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.DetailsView>当绑定到控件的数据源不包含任何记录时，将在控件中显示空数据行。 您可以使用属性为空的数据行定义您自己的自定义用户界面 (UI) <xref:System.Web.UI.WebControls.DetailsView.EmptyDataTemplate%2A> 。 若要为 null 行指定自定义模板，请先 `<EmptyDataTemplate>` 在控件的开始和结束标记之间放置标记 <xref:System.Web.UI.WebControls.DetailsView> 。 然后，你可以在开始标记和结束标记之间列出模板的内容 `<EmptyDataTemplate>` 。 若要控制空数据行的样式，请使用 <xref:System.Web.UI.WebControls.DetailsView.EmptyDataRowStyle%2A> 属性。 或者，您可以通过设置 <xref:System.Web.UI.WebControls.DetailsView.EmptyDataText%2A> 属性而不是此属性，对空数据行使用内置 UI。

> [!NOTE]
>  如果同时 <xref:System.Web.UI.WebControls.DetailsView.EmptyDataText%2A> 设置了和 <xref:System.Web.UI.WebControls.DetailsView.EmptyDataTemplate%2A> 属性，则 <xref:System.Web.UI.WebControls.DetailsView.EmptyDataTemplate%2A> 属性优先。



## Examples
 下面的代码示例演示如何使用 <xref:System.Web.UI.WebControls.DetailsView.EmptyDataTemplate%2A> 属性创建自定义的空数据行。

 [!code-aspx-csharp[DetailsViewEmptyDataTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DetailsViewEmptyDataTemplate/CS/detailsviewemptydatatemplatecs.aspx#1)]
 [!code-aspx-vb[DetailsViewEmptyDataTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DetailsViewEmptyDataTemplate/VB/detailsviewemptydatatemplatevb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.EmptyDataRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.EmptyDataText" />
      </Docs>
    </Member>
    <Member MemberName="EmptyDataText">
      <MemberSignature Language="C#" Value="public virtual string EmptyDataText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string EmptyDataText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DetailsView.EmptyDataText" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property EmptyDataText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ EmptyDataText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.EmptyDataText : string with get, set" Usage="System.Web.UI.WebControls.DetailsView.EmptyDataText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue("")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue("")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Localizable(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Localizable(true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置在 <see cref="T:System.Web.UI.WebControls.DetailsView" /> 控件绑定到不包含任何记录的数据源时所呈现的空数据行中显示的文本。</summary>
        <value>要在空数据行中显示的文本。 默认值为空字符串 ("")，表示尚未设置此属性。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.DetailsView>当绑定到控件的数据源不包含任何记录时，将在控件中显示空数据行。 使用 <xref:System.Web.UI.WebControls.DetailsView.EmptyDataText%2A> 属性指定要在空数据行中显示的文本。 若要控制空数据行的样式，请使用 <xref:System.Web.UI.WebControls.DetailsView.EmptyDataRowStyle%2A> 属性。 或者，您可以通过设置 <xref:System.Web.UI.WebControls.DetailsView.EmptyDataTemplate%2A> 属性而不是此属性，为空数据行 (UI) 定义自己的自定义用户界面。

> [!NOTE]
>  如果同时 <xref:System.Web.UI.WebControls.DetailsView.EmptyDataText%2A> 设置了和 <xref:System.Web.UI.WebControls.DetailsView.EmptyDataTemplate%2A> 属性，则 <xref:System.Web.UI.WebControls.DetailsView.EmptyDataTemplate%2A> 属性优先。

 的值 <xref:System.Web.UI.WebControls.DetailsView.EmptyDataText%2A> 存储在视图状态中。

 设置此属性后，可以使用设计器工具自动将此属性的值保存到资源文件中。 有关详细信息，请参阅 <xref:System.ComponentModel.LocalizableAttribute> 和 [全球化和本地化](https://docs.microsoft.com/previous-versions/aspnet/c6zyy3s9(v=vs.100))。



## Examples
 下面的代码示例演示如何使用 <xref:System.Web.UI.WebControls.DetailsView.EmptyDataText%2A> 属性指定要在空数据行中显示的文本。

 [!code-aspx-csharp[DetailsViewEmptyDataText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DetailsViewEmptyDataText/CS/detailsviewemptydatatextcs.aspx#1)]
 [!code-aspx-vb[DetailsViewEmptyDataText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DetailsViewEmptyDataText/VB/detailsviewemptydatatextvb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.EmptyDataRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.EmptyDataTemplate" />
      </Docs>
    </Member>
    <Member MemberName="EnableModelValidation">
      <MemberSignature Language="C#" Value="public virtual bool EnableModelValidation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableModelValidation" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DetailsView.EnableModelValidation" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property EnableModelValidation As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool EnableModelValidation { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableModelValidation : bool with get, set" Usage="System.Web.UI.WebControls.DetailsView.EnableModelValidation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示是否启用数据模型验证。</summary>
        <value>如果启用数据模型验证，则为 <see langword="true" />；否则为 <see langword="false" />。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnablePagingCallbacks">
      <MemberSignature Language="C#" Value="public virtual bool EnablePagingCallbacks { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnablePagingCallbacks" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DetailsView.EnablePagingCallbacks" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property EnablePagingCallbacks As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool EnablePagingCallbacks { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnablePagingCallbacks : bool with get, set" Usage="System.Web.UI.WebControls.DetailsView.EnablePagingCallbacks" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示客户端回调函数是否用于 <see cref="T:System.Web.UI.WebControls.DetailsView" /> 控件中的分页操作。</summary>
        <value><see langword="true" /> 表示客户端回调函数用于分页操作；否则为 <see langword="false" />。 默认值为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 使用 <xref:System.Web.UI.WebControls.DetailsView.EnablePagingCallbacks%2A> 属性指定是否使用客户端回调函数执行分页操作。 启用后，使用回叫功能执行分页，这会阻止需要将页面回发到服务器。

> [!NOTE]
>  仅在 Microsoft Internet Explorer 5.5 和更高版本以及 Netscape 6.0 及更高版本中支持客户端分页功能。

 的值 <xref:System.Web.UI.WebControls.DetailsView.EnablePagingCallbacks%2A> 存储在视图状态中。



## Examples
 下面的代码示例演示如何使用 <xref:System.Web.UI.WebControls.DetailsView.EnablePagingCallbacks%2A> 属性来允许使用客户端回调函数进行分页操作。

 [!code-aspx-csharp[DetailsViewEnablePagingCallbacks#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DetailsViewEnablePagingCallbacks/CS/detailsviewenablepagingcallbackscs.aspx#1)]
 [!code-aspx-vb[DetailsViewEnablePagingCallbacks#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DetailsViewEnablePagingCallbacks/VB/detailsviewenablepagingcallbacksvb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.AllowPaging" />
      </Docs>
    </Member>
    <Member MemberName="EnsureDataBound">
      <MemberSignature Language="C#" Value="protected override void EnsureDataBound ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void EnsureDataBound() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DetailsView.EnsureDataBound" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub EnsureDataBound ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void EnsureDataBound();" />
      <MemberSignature Language="F#" Value="override this.EnsureDataBound : unit -&gt; unit" Usage="detailsView.EnsureDataBound " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>在验证数据列表控件需要数据绑定以及有效数据源控件已指定之后，调用 <see cref="M:System.Web.UI.WebControls.BaseDataBoundControl.DataBind" /> 方法。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 如果控件处于插入模式，则不会发生数据绑定 <xref:System.Web.UI.WebControls.DetailsView> 。

 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>扩展类时 <see cref="T:System.Web.UI.WebControls.DetailsView" /> ，可以重写此方法，以在控件被数据绑定之前实现其他处理。</para></block>
      </Docs>
    </Member>
    <Member MemberName="ExtractRowValues">
      <MemberSignature Language="C#" Value="protected virtual void ExtractRowValues (System.Collections.Specialized.IOrderedDictionary fieldValues, bool includeReadOnlyFields, bool includeKeys);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ExtractRowValues(class System.Collections.Specialized.IOrderedDictionary fieldValues, bool includeReadOnlyFields, bool includeKeys) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DetailsView.ExtractRowValues(System.Collections.Specialized.IOrderedDictionary,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub ExtractRowValues (fieldValues As IOrderedDictionary, includeReadOnlyFields As Boolean, includeKeys As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void ExtractRowValues(System::Collections::Specialized::IOrderedDictionary ^ fieldValues, bool includeReadOnlyFields, bool includeKeys);" />
      <MemberSignature Language="F#" Value="abstract member ExtractRowValues : System.Collections.Specialized.IOrderedDictionary * bool * bool -&gt; unit&#xA;override this.ExtractRowValues : System.Collections.Specialized.IOrderedDictionary * bool * bool -&gt; unit" Usage="detailsView.ExtractRowValues (fieldValues, includeReadOnlyFields, includeKeys)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fieldValues" Type="System.Collections.Specialized.IOrderedDictionary" />
        <Parameter Name="includeReadOnlyFields" Type="System.Boolean" />
        <Parameter Name="includeKeys" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="fieldValues">用来存储字段值的 <see cref="T:System.Collections.Specialized.IOrderedDictionary" />。</param>
        <param name="includeReadOnlyFields"><see langword="true" /> 表示包含只读字段；否则为 <see langword="false" />。</param>
        <param name="includeKeys"><see langword="true" /> 表示包含主键字段；否则为 <see langword="false" />。</param>
        <summary>检索显示的每个字段的值，并将它们存储在指定的 <see cref="T:System.Collections.Specialized.IOrderedDictionary" /> 对象中。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.DetailsView.ExtractRowValues%2A>方法是由 <xref:System.Web.UI.WebControls.DetailsView> 控件调用以检索每个字段的值的帮助器方法。 这些值可用于数据源操作。 您可以分别使用和参数来指定提取的值是否包括只读字段和键字段 `includeReadOnlyFields` `includePrimaryKey` 。

 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>扩展类时 <see cref="T:System.Web.UI.WebControls.DetailsView" /> ，可以重写此方法以创建自己的例程来检索字段值。</para></block>
      </Docs>
    </Member>
    <Member MemberName="FieldHeaderStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle FieldHeaderStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle FieldHeaderStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DetailsView.FieldHeaderStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FieldHeaderStyle As TableItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TableItemStyle ^ FieldHeaderStyle { System::Web::UI::WebControls::TableItemStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FieldHeaderStyle : System.Web.UI.WebControls.TableItemStyle" Usage="System.Web.UI.WebControls.DetailsView.FieldHeaderStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(null)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(null)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.NotifyParentProperty(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.NotifyParentProperty(true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取对 <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> 对象的引用，该对象允许您设置 <see cref="T:System.Web.UI.WebControls.DetailsView" /> 控件中的标题列的外观。</summary>
        <value>一个对 <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> 的引用，该对象表示 <see cref="T:System.Web.UI.WebControls.DetailsView" /> 控件中的标题列的样式。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 使用 <xref:System.Web.UI.WebControls.DetailsView.FieldHeaderStyle%2A> 属性可控制控件中的字段标题列的外观 <xref:System.Web.UI.WebControls.DetailsView> 。 这是包含数据值的字段名称的列。 此属性是只读的;但是，您可以设置 <xref:System.Web.UI.WebControls.TableItemStyle> 它返回的对象的属性。 可以在窗体中以声明方式设置这些属性 `Property-Subproperty` ，其中 `Subproperty` 是对象的属性 <xref:System.Web.UI.WebControls.TableItemStyle> (例如 `FieldHeaderStyle-ForeColor`) 。 还可以以编程方式设置属性 `Property.Subproperty` ， (例如 `FieldHeaderStyle.ForeColor`) 。 常见设置通常包括自定义背景色、前景色和字体属性。



## Examples
 下面的代码示例演示如何使用 <xref:System.Web.UI.WebControls.DetailsView.FieldHeaderStyle%2A> 属性指定字段标题行的字体和样式设置。

 [!code-aspx-csharp[DetailsViewFieldHeaderStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DetailsViewFieldHeaderStyle/CS/FieldHeaderStyleCS.aspx#1)]
 [!code-aspx-vb[DetailsViewFieldHeaderStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DetailsViewFieldHeaderStyle/VB/FieldHeaderStyleVB.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TableItemStyle" />
      </Docs>
    </Member>
    <Member MemberName="Fields">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.DataControlFieldCollection Fields { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.DataControlFieldCollection Fields" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DetailsView.Fields" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Fields As DataControlFieldCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::DataControlFieldCollection ^ Fields { System::Web::UI::WebControls::DataControlFieldCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Fields : System.Web.UI.WebControls.DataControlFieldCollection" Usage="System.Web.UI.WebControls.DetailsView.Fields" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(null)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(null)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName Language="C#">[System.ComponentModel.Editor("System.Web.UI.Design.WebControls.DataControlFieldTypeEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Editor("System.Web.UI.Design.WebControls.DataControlFieldTypeEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.MergableProperty(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.MergableProperty(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.Editor("System.Web.UI.Design.WebControls.DataControlFieldTypeEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Editor("System.Web.UI.Design.WebControls.DataControlFieldTypeEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataControlFieldCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取 <see cref="T:System.Web.UI.WebControls.DataControlField" /> 对象的集合，这些对象表示 <see cref="T:System.Web.UI.WebControls.DetailsView" /> 控件中显式声明的行字段。</summary>
        <value>一个 <see cref="T:System.Web.UI.WebControls.DataControlFieldCollection" />，包含 <see cref="T:System.Web.UI.WebControls.DetailsView" /> 控件中所有显式声明的行字段。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 显式声明控件的行字段时 <xref:System.Web.UI.WebControls.DetailsView> ，这些行字段存储在 <xref:System.Web.UI.WebControls.DetailsView.Fields%2A> 属性 (集合) 中。 <xref:System.Web.UI.WebControls.DetailsView.Fields%2A>集合还允许以编程方式管理显式声明的行的集合。

> [!NOTE]
>  显式声明的行字段可与自动生成的行字段结合使用。 如果同时使用这两种方法，将首先呈现显式声明的行字段，然后呈现自动生成的行字段。 自动生成的行字段不会添加到 <xref:System.Web.UI.WebControls.DetailsView.Fields%2A> 集合中。

 不同的行字段类型确定控件中行的行为。 下表显示了可以在集合中使用的不同行字段类型 <xref:System.Web.UI.WebControls.DetailsView.Fields%2A> 。

|行字段类型|说明|
|--------------------|-----------------|
|<xref:System.Web.UI.WebControls.BoundField>|以文本形式显示数据源中字段的值。|
|<xref:System.Web.UI.WebControls.ButtonField>|在控件中显示命令按钮 <xref:System.Web.UI.WebControls.DetailsView> 。 这允许您显示具有自定义按钮控件的行，如 "添加" 或 "移除" 按钮。|
|<xref:System.Web.UI.WebControls.CheckBoxField>|在控件中显示复选框 <xref:System.Web.UI.WebControls.DetailsView> 。 此行字段类型通常用于显示具有布尔值的字段。|
|<xref:System.Web.UI.WebControls.CommandField>|显示内置命令按钮，用于在控件中执行编辑、插入或删除操作 <xref:System.Web.UI.WebControls.DetailsView> 。|
|<xref:System.Web.UI.WebControls.HyperLinkField>|将数据源中的字段值显示为超链接。 此行字段类型允许您将第二个字段绑定到超链接的 URL。|
|<xref:System.Web.UI.WebControls.ImageField>|在控件中显示图像 <xref:System.Web.UI.WebControls.DetailsView> 。|
|<xref:System.Web.UI.WebControls.TemplateField>|根据指定的模板，在控件中显示行的用户定义内容 <xref:System.Web.UI.WebControls.DetailsView> 。 此行字段类型允许您创建自定义行字段。|

 若要显式声明控件的行字段 <xref:System.Web.UI.WebControls.DetailsView> ，请首先将 <xref:System.Web.UI.WebControls.DetailsView.AutoGenerateRows%2A> 属性设置为 `false` 。 接下来， `<Fields>` 在控件的开始标记和结束标记之间添加开始标记和结束标记 <xref:System.Web.UI.WebControls.DetailsView> 。 最后，列出要在开始标记和结束标记之间包括的行字段 `<Fields>` 。 行字段在控件中的显示 <xref:System.Web.UI.WebControls.DetailsView> 顺序与行字段在集合中的显示顺序相同 <xref:System.Web.UI.WebControls.DetailsView.Fields%2A> 。

 尽管可以通过编程方式向集合添加行字段 <xref:System.Web.UI.WebControls.DetailsView.Fields%2A> ，但在控件中以声明方式列出行字段 <xref:System.Web.UI.WebControls.DetailsView> 并使用 <xref:System.Web.UI.WebControls.DataControlField.Visible%2A> 每个行字段的属性来显示或隐藏行字段更为容易。

 如果 <xref:System.Web.UI.WebControls.DataControlField.Visible%2A> 行字段的属性设置为 `false` ，则不会在控件中显示行， <xref:System.Web.UI.WebControls.DetailsView> 并且该行的数据不会对客户端进行往返。 如果希望不可见的行的数据进行往返，请将字段名称添加到 <xref:System.Web.UI.WebControls.DetailsView.DataKeyNames%2A> 属性。



## Examples
 下面的代码示例演示如何以声明方式将行字段添加到 <xref:System.Web.UI.WebControls.DetailsView.Fields%2A> 控件的集合 <xref:System.Web.UI.WebControls.DetailsView> 。

 [!code-aspx-csharp[DetailsViewFields#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DetailsViewFields/CS/DetailsViewFieldsCS.aspx#1)]
 [!code-aspx-vb[DetailsViewFields#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DetailsViewFields/VB/DetailsViewFieldsVB.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.DataControlField" />
        <altmember cref="T:System.Web.UI.WebControls.DataControlFieldCollection" />
        <altmember cref="T:System.Web.UI.WebControls.BoundField" />
        <altmember cref="T:System.Web.UI.WebControls.ButtonField" />
        <altmember cref="T:System.Web.UI.WebControls.CheckBoxField" />
        <altmember cref="T:System.Web.UI.WebControls.CommandField" />
        <altmember cref="T:System.Web.UI.WebControls.HyperLinkField" />
        <altmember cref="T:System.Web.UI.WebControls.TemplateField" />
      </Docs>
    </Member>
    <Member MemberName="FooterRow">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.DetailsViewRow FooterRow { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.DetailsViewRow FooterRow" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DetailsView.FooterRow" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property FooterRow As DetailsViewRow" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::DetailsViewRow ^ FooterRow { System::Web::UI::WebControls::DetailsViewRow ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FooterRow : System.Web.UI.WebControls.DetailsViewRow" Usage="System.Web.UI.WebControls.DetailsView.FooterRow" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DetailsViewRow</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取表示 <see cref="T:System.Web.UI.WebControls.DetailsViewRow" /> 控件中的脚注行的 <see cref="T:System.Web.UI.WebControls.DetailsView" /> 对象。</summary>
        <value>一个 <see cref="T:System.Web.UI.WebControls.DetailsViewRow" />，表示 <see cref="T:System.Web.UI.WebControls.DetailsView" /> 控件中的脚注行。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.DetailsView>设置或属性时，在控件的底部显示脚注行 <xref:System.Web.UI.WebControls.DetailsView.FooterText%2A> <xref:System.Web.UI.WebControls.DetailsView.FooterTemplate%2A> 。 使用 <xref:System.Web.UI.WebControls.DetailsView.FooterRow%2A> 属性以编程方式访问 <xref:System.Web.UI.WebControls.DetailsViewRow> 表示脚注行的对象。

> [!NOTE]
>  <xref:System.Web.UI.WebControls.GridView.FooterRow%2A>只有 <xref:System.Web.UI.WebControls.DetailsView> 控件在事件中创建了页脚行后，属性才可用 <xref:System.Web.UI.WebControls.DetailsView.ItemCreated> 。

 当你需要以编程方式操作脚注行时（例如，添加自定义内容时），通常会使用此属性。 在 <xref:System.Web.UI.WebControls.DetailsView.FooterRow%2A> 呈现控件之后，必须对属性进行任何修改 <xref:System.Web.UI.WebControls.DetailsView> ; 否则， <xref:System.Web.UI.WebControls.DetailsView> 控件将覆盖所有更改。

 若要控制脚注行的样式，请使用 <xref:System.Web.UI.WebControls.DetailsView.FooterStyle%2A> 属性。



## Examples
 下面的代码示例演示如何使用 <xref:System.Web.UI.WebControls.DetailsView.FooterRow%2A> 属性 <xref:System.Web.UI.WebControls.DetailsView> 在事件期间访问控件的脚注行 <xref:System.Web.UI.WebControls.DetailsView.ItemCreated> 。 <xref:System.Web.UI.WebControls.Label>然后，使用当前页码更新自定义页脚行中的控件。

 [!code-aspx-csharp[DetailsViewFooterTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DetailsViewFooterTemplate/CS/detailsviewfootertemplatecs.aspx#1)]
 [!code-aspx-vb[DetailsViewFooterTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DetailsViewFooterTemplate/VB/detailsviewfootertemplatevb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.DetailsViewRow" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.FooterStyle" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.HeaderRow" />
      </Docs>
    </Member>
    <Member MemberName="FooterStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle FooterStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle FooterStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DetailsView.FooterStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FooterStyle As TableItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TableItemStyle ^ FooterStyle { System::Web::UI::WebControls::TableItemStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FooterStyle : System.Web.UI.WebControls.TableItemStyle" Usage="System.Web.UI.WebControls.DetailsView.FooterStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(null)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(null)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.NotifyParentProperty(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.NotifyParentProperty(true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个对 <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> 对象的引用，使用该对象可以设置 <see cref="T:System.Web.UI.WebControls.DetailsView" /> 控件中的脚注行的外观。</summary>
        <value>一个对表示 <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> 控件中脚注行的样式的 <see cref="T:System.Web.UI.WebControls.DetailsView" /> 的引用。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.DetailsView>设置或属性时，在控件的底部显示脚注行 <xref:System.Web.UI.WebControls.DetailsView.FooterText%2A> <xref:System.Web.UI.WebControls.DetailsView.FooterTemplate%2A> 。 使用 <xref:System.Web.UI.WebControls.DetailsView.FooterStyle%2A> 属性可控制控件中脚注行的外观 <xref:System.Web.UI.WebControls.DetailsView> 。 此属性是只读的;但是，您可以设置 <xref:System.Web.UI.WebControls.TableItemStyle> 它返回的对象的属性。 可以在窗体中以声明方式设置这些属性 `Property-Subproperty` ，其中 `Subproperty` 是对象的属性 <xref:System.Web.UI.WebControls.TableItemStyle> (例如 `FooterStyle-ForeColor`) 。 还可以以编程方式设置属性 `Property.Subproperty` ， (例如 `FooterStyle.ForeColor`) 。 常见设置通常包括自定义背景色、前景色和字体属性。



## Examples
 下面的代码示例演示如何使用 <xref:System.Web.UI.WebControls.DetailsView.FooterStyle%2A> 属性为脚注行指定字体和样式设置。

 [!code-aspx-csharp[DetailsViewFooterText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DetailsViewFooterText/CS/detailsviewfootertextcs.aspx#1)]
 [!code-aspx-vb[DetailsViewFooterText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DetailsViewFooterText/VB/detailsviewfootertextvb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TableItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.AlternatingRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.CommandRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.EditRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.EmptyDataRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.FooterRow" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.FooterTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.FooterText" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.FieldHeaderStyle" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.HeaderStyle" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.InsertRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.RowStyle" />
      </Docs>
    </Member>
    <Member MemberName="FooterTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate FooterTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate FooterTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DetailsView.FooterTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property FooterTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ FooterTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberSignature Language="F#" Value="member this.FooterTemplate : System.Web.UI.ITemplate with get, set" Usage="System.Web.UI.WebControls.DetailsView.FooterTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(null)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(null)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.DetailsView))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.DetailsView))&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置 <see cref="T:System.Web.UI.WebControls.DetailsView" /> 控件中的脚注行的用户定义内容。</summary>
        <value>一个 <see cref="T:System.Web.UI.ITemplate" />，包含脚注行的自定义内容。 默认值为 <see langword="null" />，表示未设置此属性。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.DetailsView>设置或属性时，在控件的底部显示脚注行 <xref:System.Web.UI.WebControls.DetailsView.FooterText%2A> <xref:System.Web.UI.WebControls.DetailsView.FooterTemplate%2A> 。 您可以通过使用属性为页脚行 (UI) 定义您自己的自定义用户界面 <xref:System.Web.UI.WebControls.DetailsView.FooterTemplate%2A> 。 若要为脚注行指定自定义模板，请先 `<FooterTemplate>` 在控件的开始和结束标记之间放置标记 <xref:System.Web.UI.WebControls.DetailsView> 。 然后，你可以在开始标记和结束标记之间列出模板的内容 `<FooterTemplate>` 。 若要控制脚注行的样式，请使用 <xref:System.Web.UI.WebControls.DetailsView.FooterStyle%2A> 属性。 或者，您可以通过设置 <xref:System.Web.UI.WebControls.DetailsView.FooterText%2A> 属性而不是此属性，直接在页脚行中显示文本。

> [!NOTE]
>  如果同时 <xref:System.Web.UI.WebControls.DetailsView.FooterText%2A> 设置了和 <xref:System.Web.UI.WebControls.DetailsView.FooterTemplate%2A> 属性，则 <xref:System.Web.UI.WebControls.DetailsView.FooterTemplate%2A> 属性优先。



## Examples
 下面的代码示例演示如何使用 <xref:System.Web.UI.WebControls.DetailsView.FooterTemplate%2A> 属性创建自定义的页脚行。

 [!code-aspx-csharp[DetailsViewFooterTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DetailsViewFooterTemplate/CS/detailsviewfootertemplatecs.aspx#1)]
 [!code-aspx-vb[DetailsViewFooterTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DetailsViewFooterTemplate/VB/detailsviewfootertemplatevb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.ITemplate" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.FooterStyle" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.FooterText" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.HeaderTemplate" />
      </Docs>
    </Member>
    <Member MemberName="FooterText">
      <MemberSignature Language="C#" Value="public virtual string FooterText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FooterText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DetailsView.FooterText" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property FooterText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ FooterText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.FooterText : string with get, set" Usage="System.Web.UI.WebControls.DetailsView.FooterText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue("")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue("")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Localizable(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Localizable(true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置要在 <see cref="T:System.Web.UI.WebControls.DetailsView" /> 控件的脚注行中显示的文本。</summary>
        <value>脚注行中将显示的文本。 默认值为空字符串 ("")，表示尚未设置此属性。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.DetailsView>设置或属性时，在控件的底部显示脚注行 <xref:System.Web.UI.WebControls.DetailsView.FooterText%2A> <xref:System.Web.UI.WebControls.DetailsView.FooterTemplate%2A> 。 使用 <xref:System.Web.UI.WebControls.DetailsView.FooterText%2A> 属性指定要在脚注行中显示的文本。 若要控制脚注行的样式，请使用 <xref:System.Web.UI.WebControls.DetailsView.FooterStyle%2A> 属性。 或者，您可以通过设置 <xref:System.Web.UI.WebControls.DetailsView.FooterTemplate%2A> 属性而不是此属性，为页脚行 (UI) 定义自己的自定义用户界面。

> [!NOTE]
>  如果同时 <xref:System.Web.UI.WebControls.DetailsView.FooterText%2A> 设置了和 <xref:System.Web.UI.WebControls.DetailsView.FooterTemplate%2A> 属性，则 <xref:System.Web.UI.WebControls.DetailsView.FooterTemplate%2A> 属性优先。

 的值 <xref:System.Web.UI.WebControls.DetailsView.FooterText%2A> 存储在视图状态中。

 设置此属性后，可以使用设计器工具自动将此属性的值保存到资源文件中。 有关详细信息，请参阅 <xref:System.ComponentModel.LocalizableAttribute> 和 [全球化和本地化](https://docs.microsoft.com/previous-versions/aspnet/c6zyy3s9(v=vs.100))。



## Examples
 下面的代码示例演示如何使用 <xref:System.Web.UI.WebControls.DetailsView.FooterText%2A> 属性指定要在脚注行中显示的文本。

 [!code-aspx-csharp[DetailsViewFooterText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DetailsViewFooterText/CS/detailsviewfootertextcs.aspx#1)]
 [!code-aspx-vb[DetailsViewFooterText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DetailsViewFooterText/VB/detailsviewfootertextvb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.FooterStyle" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.FooterTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.HeaderText" />
      </Docs>
    </Member>
    <Member MemberName="GetCallbackResult">
      <MemberSignature Language="C#" Value="protected virtual string GetCallbackResult ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string GetCallbackResult() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DetailsView.GetCallbackResult" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetCallbackResult () As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ GetCallbackResult();" />
      <MemberSignature Language="F#" Value="abstract member GetCallbackResult : unit -&gt; string&#xA;override this.GetCallbackResult : unit -&gt; string" Usage="detailsView.GetCallbackResult " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>返回以控件为目标的回调事件的结果。</summary>
        <returns>回调的结果。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.DetailsView>控件实现 <xref:System.Web.UI.ICallbackEventHandler> 接口，并使用 <xref:System.Web.UI.WebControls.DetailsView.RaisePostBackEvent%2A> 来检索数据，并使用方法将检索到的 <xref:System.Web.UI.WebControls.DetailsView.GetCallbackResult%2A> 数据返回到控件。

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCallbackScript">
      <MemberSignature Language="C#" Value="protected virtual string GetCallbackScript (System.Web.UI.WebControls.IButtonControl buttonControl, string argument);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string GetCallbackScript(class System.Web.UI.WebControls.IButtonControl buttonControl, string argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DetailsView.GetCallbackScript(System.Web.UI.WebControls.IButtonControl,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetCallbackScript (buttonControl As IButtonControl, argument As String) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ GetCallbackScript(System::Web::UI::WebControls::IButtonControl ^ buttonControl, System::String ^ argument);" />
      <MemberSignature Language="F#" Value="abstract member GetCallbackScript : System.Web.UI.WebControls.IButtonControl * string -&gt; string&#xA;override this.GetCallbackScript : System.Web.UI.WebControls.IButtonControl * string -&gt; string" Usage="detailsView.GetCallbackScript (buttonControl, argument)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buttonControl" Type="System.Web.UI.WebControls.IButtonControl" />
        <Parameter Name="argument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="buttonControl">启动回调的控件。</param>
        <param name="argument">回调代码。</param>
        <summary>返回使用指定的参数创建的回调字符串。</summary>
        <returns>要发送至客户端的完整回调字符串。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GridLines">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.GridLines GridLines { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.GridLines GridLines" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DetailsView.GridLines" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property GridLines As GridLines" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::GridLines GridLines { System::Web::UI::WebControls::GridLines get(); void set(System::Web::UI::WebControls::GridLines value); };" />
      <MemberSignature Language="F#" Value="member this.GridLines : System.Web.UI.WebControls.GridLines with get, set" Usage="System.Web.UI.WebControls.DetailsView.GridLines" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.GridLines</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置 <see cref="T:System.Web.UI.WebControls.DetailsView" /> 控件的网格线样式。</summary>
        <value><see cref="T:System.Web.UI.WebControls.GridLines" /> 值之一。 默认值为 <see langword="GridLines.Both" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 使用 <xref:System.Web.UI.WebControls.DetailsView.GridLines%2A> 属性为控件指定网格线样式 <xref:System.Web.UI.WebControls.DetailsView> 。 下表列出了可用样式。

|Style|说明|
|-----------|-----------------|
|`GridLines.None`|不显示网格线。|
|`GridLines.Horizontal`|仅显示水平网格线。|
|`GridLines.Vertical`|仅显示垂直网格线。|
|`GridLines.Both`|同时显示水平和垂直网格线。|



## Examples
 下面的代码示例演示如何使用 <xref:System.Web.UI.WebControls.DetailsView.GridLines%2A> 属性隐藏控件中的所有网格线 <xref:System.Web.UI.WebControls.DetailsView> 。

 [!code-aspx-csharp[DetailsViewGridLines#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DetailsViewGridLines/CS/detailsviewgridlinescs.aspx#1)]
 [!code-aspx-vb[DetailsViewGridLines#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DetailsViewGridLines/VB/detailsviewgridlinesvb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.GridLines" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.CellPadding" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.CellSpacing" />
      </Docs>
    </Member>
    <Member MemberName="HeaderRow">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.DetailsViewRow HeaderRow { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.DetailsViewRow HeaderRow" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DetailsView.HeaderRow" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property HeaderRow As DetailsViewRow" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::DetailsViewRow ^ HeaderRow { System::Web::UI::WebControls::DetailsViewRow ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.HeaderRow : System.Web.UI.WebControls.DetailsViewRow" Usage="System.Web.UI.WebControls.DetailsView.HeaderRow" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DetailsViewRow</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取表示 <see cref="T:System.Web.UI.WebControls.DetailsViewRow" /> 控件中的标题行的 <see cref="T:System.Web.UI.WebControls.DetailsView" /> 对象。</summary>
        <value>一个 <see cref="T:System.Web.UI.WebControls.DetailsViewRow" />，表示 <see cref="T:System.Web.UI.WebControls.DetailsView" /> 控件中的标题行。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.DetailsView> <xref:System.Web.UI.WebControls.DetailsView.HeaderText%2A> 设置或属性时，标题行显示在控件的顶部 <xref:System.Web.UI.WebControls.DetailsView.HeaderTemplate%2A> 。 使用 <xref:System.Web.UI.WebControls.DetailsView.HeaderRow%2A> 属性以编程方式访问 <xref:System.Web.UI.WebControls.DetailsViewRow> 表示标题行的对象。

> [!NOTE]
>  <xref:System.Web.UI.WebControls.GridView.HeaderRow%2A>只有 <xref:System.Web.UI.WebControls.DetailsView> 控件在事件中创建了标题行后，属性才可用 <xref:System.Web.UI.WebControls.DetailsView.ItemCreated> 。

 当你需要以编程方式操作标题行时（例如，添加自定义内容时），通常会使用此属性。 在 <xref:System.Web.UI.WebControls.DetailsView.HeaderRow%2A> 呈现控件之后，必须对属性进行任何修改 <xref:System.Web.UI.WebControls.DetailsView> ; 否则， <xref:System.Web.UI.WebControls.DetailsView> 控件将覆盖所有更改。



## Examples
 下面的代码示例演示如何使用 <xref:System.Web.UI.WebControls.DetailsView.HeaderRow%2A> 属性 <xref:System.Web.UI.WebControls.DetailsView> 在事件期间访问控件的标题行 <xref:System.Web.UI.WebControls.DetailsView.ItemCreated> 。 <xref:System.Web.UI.WebControls.Label>然后，使用当前页码更新自定义标题行中的控件。

 [!code-aspx-csharp[DetailsViewHeaderTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DetailsViewHeaderTemplate/CS/detailsviewheadertemplatecs.aspx#1)]
 [!code-aspx-vb[DetailsViewHeaderTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DetailsViewHeaderTemplate/VB/detailsviewheadertemplatevb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.DetailsViewRow" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.FooterRow" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.HeaderStyle" />
      </Docs>
    </Member>
    <Member MemberName="HeaderStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle HeaderStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle HeaderStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DetailsView.HeaderStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HeaderStyle As TableItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TableItemStyle ^ HeaderStyle { System::Web::UI::WebControls::TableItemStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.HeaderStyle : System.Web.UI.WebControls.TableItemStyle" Usage="System.Web.UI.WebControls.DetailsView.HeaderStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(null)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(null)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.NotifyParentProperty(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.NotifyParentProperty(true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个对 <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> 对象的引用，使用该对象可以设置 <see cref="T:System.Web.UI.WebControls.DetailsView" /> 控件中的标题行的外观。</summary>
        <value>一个对表示 <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> 控件中脚注行的样式的 <see cref="T:System.Web.UI.WebControls.DetailsView" /> 的引用。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.DetailsView> <xref:System.Web.UI.WebControls.DetailsView.HeaderText%2A> 设置或属性时，标题行显示在控件的顶部 <xref:System.Web.UI.WebControls.DetailsView.HeaderTemplate%2A> 。 使用 <xref:System.Web.UI.WebControls.DetailsView.HeaderStyle%2A> 属性可控制控件中标题行的外观 <xref:System.Web.UI.WebControls.DetailsView> 。 此属性是只读的;但是，您可以设置 <xref:System.Web.UI.WebControls.TableItemStyle> 它返回的对象的属性。 可以在窗体中以声明方式设置这些属性 `Property-Subproperty` ，其中 `Subproperty` 是对象的属性 <xref:System.Web.UI.WebControls.TableItemStyle> (例如 `HeaderStyle-ForeColor`) 。 还可以以编程方式设置属性 `Property.Subproperty` ， (例如 `HeaderStyle.ForeColor`) 。 常见设置通常包括自定义背景色、前景色和字体属性。



## Examples
 下面的代码示例演示如何使用 <xref:System.Web.UI.WebControls.DetailsView.HeaderStyle%2A> 属性为标题行指定字体和样式设置。

 [!code-aspx-csharp[DetailsViewHeaderText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DetailsViewHeaderText/CS/detailsviewheadertextcs.aspx#1)]
 [!code-aspx-vb[DetailsViewHeaderText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DetailsViewHeaderText/VB/detailsviewheadertextvb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TableItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.AlternatingRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.CommandRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.EditRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.EmptyDataRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.HeaderTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.HeaderText" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.FooterStyle" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.FieldHeaderStyle" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.InsertRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.RowStyle" />
      </Docs>
    </Member>
    <Member MemberName="HeaderTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate HeaderTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate HeaderTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DetailsView.HeaderTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property HeaderTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ HeaderTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberSignature Language="F#" Value="member this.HeaderTemplate : System.Web.UI.ITemplate with get, set" Usage="System.Web.UI.WebControls.DetailsView.HeaderTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(null)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(null)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.DetailsView))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.DetailsView))&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置 <see cref="T:System.Web.UI.WebControls.DetailsView" /> 控件中的标题行的用户定义内容。</summary>
        <value>一个 <see cref="T:System.Web.UI.ITemplate" />，包含标题行的自定义内容。 默认值为 <see langword="null" />，表示未设置此属性。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.DetailsView> <xref:System.Web.UI.WebControls.DetailsView.HeaderText%2A> 设置或属性时，标题行显示在控件的顶部 <xref:System.Web.UI.WebControls.DetailsView.HeaderTemplate%2A> 。 您可以使用属性为标题行 (UI) 定义自己的自定义用户界面 <xref:System.Web.UI.WebControls.DetailsView.HeaderTemplate%2A> 。 若要为标题行指定自定义模板，请先 `<HeaderTemplate>` 在控件的开始和结束标记之间放置标记 <xref:System.Web.UI.WebControls.DetailsView> 。 然后，你可以在开始标记和结束标记之间列出模板的内容 `<HeaderTemplate>` 。 若要控制标题行的样式，请使用 <xref:System.Web.UI.WebControls.DetailsView.HeaderStyle%2A> 属性。 或者，您可以通过设置 <xref:System.Web.UI.WebControls.DetailsView.HeaderText%2A> 属性而不是此属性，直接在标题行中显示文本。

> [!NOTE]
>  如果同时 <xref:System.Web.UI.WebControls.DetailsView.HeaderText%2A> 设置了和 <xref:System.Web.UI.WebControls.DetailsView.HeaderTemplate%2A> 属性，则 <xref:System.Web.UI.WebControls.DetailsView.HeaderTemplate%2A> 属性优先。



## Examples
 下面的代码示例演示如何使用 <xref:System.Web.UI.WebControls.DetailsView.HeaderTemplate%2A> 属性创建自定义标题行。

 [!code-aspx-csharp[DetailsViewHeaderTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DetailsViewHeaderTemplate/CS/detailsviewheadertemplatecs.aspx#1)]
 [!code-aspx-vb[DetailsViewHeaderTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DetailsViewHeaderTemplate/VB/detailsviewheadertemplatevb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.ITemplate" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.FooterTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.HeaderStyle" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.HeaderText" />
      </Docs>
    </Member>
    <Member MemberName="HeaderText">
      <MemberSignature Language="C#" Value="public virtual string HeaderText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HeaderText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DetailsView.HeaderText" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property HeaderText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ HeaderText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.HeaderText : string with get, set" Usage="System.Web.UI.WebControls.DetailsView.HeaderText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue("")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue("")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Localizable(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Localizable(true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置要在 <see cref="T:System.Web.UI.WebControls.DetailsView" /> 控件的标题行中显示的文本。</summary>
        <value>标题行中将显示的文本。 默认值为空字符串 ("")，表示尚未设置此属性。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.DetailsView> <xref:System.Web.UI.WebControls.DetailsView.HeaderText%2A> 设置或属性时，标题行显示在控件的顶部 <xref:System.Web.UI.WebControls.DetailsView.HeaderTemplate%2A> 。 使用 <xref:System.Web.UI.WebControls.DetailsView.HeaderText%2A> 属性指定要在标题行中显示的文本。 若要控制标题行的样式，请使用 <xref:System.Web.UI.WebControls.DetailsView.HeaderStyle%2A> 属性。 或者，你可以通过设置 <xref:System.Web.UI.WebControls.DetailsView.HeaderTemplate%2A> 属性（而不是此属性）来为标题行定义你自己的自定义用户界面 (UI) 。

> [!NOTE]
>  如果同时 <xref:System.Web.UI.WebControls.DetailsView.HeaderText%2A> 设置了和 <xref:System.Web.UI.WebControls.DetailsView.HeaderTemplate%2A> 属性，则 <xref:System.Web.UI.WebControls.DetailsView.HeaderTemplate%2A> 属性优先。

 的值 <xref:System.Web.UI.WebControls.DetailsView.HeaderText%2A> 存储在视图状态中。

 设置此属性后，可以使用设计器工具自动将此属性的值保存到资源文件中。 有关详细信息，请参阅 <xref:System.ComponentModel.LocalizableAttribute> 和 [全球化和本地化](https://docs.microsoft.com/previous-versions/aspnet/c6zyy3s9(v=vs.100))。



## Examples
 下面的代码示例演示如何使用 <xref:System.Web.UI.WebControls.DetailsView.HeaderText%2A> 属性指定要在标题行中显示的文本。

 [!code-aspx-csharp[DetailsViewHeaderText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DetailsViewHeaderText/CS/detailsviewheadertextcs.aspx#1)]
 [!code-aspx-vb[DetailsViewHeaderText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DetailsViewHeaderText/VB/detailsviewheadertextvb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.FooterText" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.HeaderStyle" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.HeaderTemplate" />
      </Docs>
    </Member>
    <Member MemberName="HorizontalAlign">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.HorizontalAlign HorizontalAlign { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.HorizontalAlign HorizontalAlign" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DetailsView.HorizontalAlign" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property HorizontalAlign As HorizontalAlign" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::HorizontalAlign HorizontalAlign { System::Web::UI::WebControls::HorizontalAlign get(); void set(System::Web::UI::WebControls::HorizontalAlign value); };" />
      <MemberSignature Language="F#" Value="member this.HorizontalAlign : System.Web.UI.WebControls.HorizontalAlign with get, set" Usage="System.Web.UI.WebControls.DetailsView.HorizontalAlign" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Category("Layout")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Category("Layout")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.HorizontalAlign</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置 <see cref="T:System.Web.UI.WebControls.DetailsView" /> 控件在页面上的水平对齐方式。</summary>
        <value><see cref="T:System.Web.UI.WebControls.HorizontalAlign" /> 值之一。 默认值为 <see langword="HorizontalAlign.NotSet" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 使用 <xref:System.Web.UI.WebControls.DetailsView.HorizontalAlign%2A> 属性指定 <xref:System.Web.UI.WebControls.DetailsView> 控件在页面内的水平对齐方式。 下表列出了不同的水平对齐样式。

|HorizontalAlign 值|说明|
|---------------------------|-----------------|
|`HorizontalAlign.NotSet`|尚未设置控件的水平对齐方式 <xref:System.Web.UI.WebControls.DetailsView> 。|
|`HorizontalAlign.Left`|<xref:System.Web.UI.WebControls.DetailsView>控件在页面上左对齐。|
|`HorizontalAlign.Center`|<xref:System.Web.UI.WebControls.DetailsView>控件在页面上居中。|
|`HorizontalAlign.Right`|<xref:System.Web.UI.WebControls.DetailsView>控件在页面上右对齐。|
|`HorizontalAlign.Justify`|<xref:System.Web.UI.WebControls.DetailsView>控件与页面的左边距和右边距对齐。|



## Examples
 下面的代码示例演示如何使用 <xref:System.Web.UI.WebControls.DetailsView.HorizontalAlign%2A> 属性指定 <xref:System.Web.UI.WebControls.DetailsView> 控件应在页面上居中。

 [!code-aspx-csharp[DetailsViewHorizontalAlign#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DetailsViewHorizontalAlign/CS/detailsviewhorizontalaligncs.aspx#1)]
 [!code-aspx-vb[DetailsViewHorizontalAlign#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DetailsViewHorizontalAlign/VB/detailsviewhorizontalalignvb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.HorizontalAlign" />
      </Docs>
    </Member>
    <Member MemberName="InitializePager">
      <MemberSignature Language="C#" Value="protected virtual void InitializePager (System.Web.UI.WebControls.DetailsViewRow row, System.Web.UI.WebControls.PagedDataSource pagedDataSource);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void InitializePager(class System.Web.UI.WebControls.DetailsViewRow row, class System.Web.UI.WebControls.PagedDataSource pagedDataSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DetailsView.InitializePager(System.Web.UI.WebControls.DetailsViewRow,System.Web.UI.WebControls.PagedDataSource)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub InitializePager (row As DetailsViewRow, pagedDataSource As PagedDataSource)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void InitializePager(System::Web::UI::WebControls::DetailsViewRow ^ row, System::Web::UI::WebControls::PagedDataSource ^ pagedDataSource);" />
      <MemberSignature Language="F#" Value="abstract member InitializePager : System.Web.UI.WebControls.DetailsViewRow * System.Web.UI.WebControls.PagedDataSource -&gt; unit&#xA;override this.InitializePager : System.Web.UI.WebControls.DetailsViewRow * System.Web.UI.WebControls.PagedDataSource -&gt; unit" Usage="detailsView.InitializePager (row, pagedDataSource)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="row" Type="System.Web.UI.WebControls.DetailsViewRow" />
        <Parameter Name="pagedDataSource" Type="System.Web.UI.WebControls.PagedDataSource" />
      </Parameters>
      <Docs>
        <param name="row">包含当前页导航行的 <see cref="T:System.Web.UI.WebControls.DetailsViewRow" />。</param>
        <param name="pagedDataSource">包含当前页的数据的 <see cref="T:System.Web.UI.WebControls.PagedDataSource" />。</param>
        <summary>为 <see cref="T:System.Web.UI.WebControls.DetailsView" /> 控件创建页导航行。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.DetailsView.InitializePager%2A>方法是由 <xref:System.Web.UI.WebControls.DetailsView> 控件调用以创建页导航行的帮助器方法。 它 <xref:System.Web.UI.WebControls.TableCell> 使用 <xref:System.Web.UI.WebControls.PagedDataSource> 参数中包含的对象的属性创建一个包含导航控件的对象 `pagedDataSource` 。 然后，将单元添加到参数所指定的行 `row` 。

 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>扩展类时 <see cref="T:System.Web.UI.WebControls.DetailsView" /> ，可以重写此方法以创建自己的页导航行。</para></block>
        <altmember cref="T:System.Web.UI.WebControls.DetailsViewRow" />
        <altmember cref="T:System.Web.UI.WebControls.PagedDataSource" />
        <altmember cref="T:System.Web.UI.WebControls.TableCell" />
      </Docs>
    </Member>
    <Member MemberName="InitializeRow">
      <MemberSignature Language="C#" Value="protected virtual void InitializeRow (System.Web.UI.WebControls.DetailsViewRow row, System.Web.UI.WebControls.DataControlField field);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void InitializeRow(class System.Web.UI.WebControls.DetailsViewRow row, class System.Web.UI.WebControls.DataControlField field) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DetailsView.InitializeRow(System.Web.UI.WebControls.DetailsViewRow,System.Web.UI.WebControls.DataControlField)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub InitializeRow (row As DetailsViewRow, field As DataControlField)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void InitializeRow(System::Web::UI::WebControls::DetailsViewRow ^ row, System::Web::UI::WebControls::DataControlField ^ field);" />
      <MemberSignature Language="F#" Value="abstract member InitializeRow : System.Web.UI.WebControls.DetailsViewRow * System.Web.UI.WebControls.DataControlField -&gt; unit&#xA;override this.InitializeRow : System.Web.UI.WebControls.DetailsViewRow * System.Web.UI.WebControls.DataControlField -&gt; unit" Usage="detailsView.InitializeRow (row, field)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="row" Type="System.Web.UI.WebControls.DetailsViewRow" />
        <Parameter Name="field" Type="System.Web.UI.WebControls.DataControlField" />
      </Parameters>
      <Docs>
        <param name="row">要初始化的 <see cref="T:System.Web.UI.WebControls.DetailsViewRow" />。</param>
        <param name="field">与该行对应的 <see cref="T:System.Web.UI.WebControls.DataControlField" />。</param>
        <summary>初始化指定的 <see cref="T:System.Web.UI.WebControls.DetailsViewRow" /> 对象。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.DetailsView.InitializeRow%2A>方法是由控件调用的帮助器方法 <xref:System.Web.UI.WebControls.DetailsView> ，用于初始化指定的 <xref:System.Web.UI.WebControls.DetailsViewRow> 对象。 该行针对 <xref:System.Web.UI.WebControls.DataControlField> 参数中包含的对象进行初始化 `field` 。

 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>扩展类时 <see cref="T:System.Web.UI.WebControls.DetailsView" /> ，可以重写此方法以创建自己的自定义行。</para></block>
        <altmember cref="T:System.Web.UI.WebControls.DataControlField" />
        <altmember cref="T:System.Web.UI.WebControls.DetailsViewRow" />
      </Docs>
    </Member>
    <Member MemberName="InsertItem">
      <MemberSignature Language="C#" Value="public virtual void InsertItem (bool causesValidation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InsertItem(bool causesValidation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DetailsView.InsertItem(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub InsertItem (causesValidation As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void InsertItem(bool causesValidation);" />
      <MemberSignature Language="F#" Value="abstract member InsertItem : bool -&gt; unit&#xA;override this.InsertItem : bool -&gt; unit" Usage="detailsView.InsertItem causesValidation" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="causesValidation" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="causesValidation"><see langword="true" /> 表示调用该方法时执行页验证；否则为 <see langword="false" />。</param>
        <summary>将当前记录插入到数据源中。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 当 <xref:System.Web.UI.WebControls.DetailsView> 控件处于插入模式时，使用 <xref:System.Web.UI.WebControls.DetailsView.InsertItem%2A> 方法以编程方式将当前记录插入到数据源中。 如果需要从控件之外插入当前记录（ <xref:System.Web.UI.WebControls.DetailsView> 例如，来自页面上的不同控件），通常会使用此方法。

> [!NOTE]
>  <xref:System.Web.UI.WebControls.DetailsView>调用此方法时，控件必须处于插入模式; 否则，将 <xref:System.Web.HttpException> 引发异常。

 若要指定在插入操作之前是否执行页验证，请使用 `causesValidation` 参数。 调用此方法还会引发 <xref:System.Web.UI.WebControls.DetailsView.ItemInserted> 和 <xref:System.Web.UI.WebControls.DetailsView.ItemInserting> 事件。

 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">当 <see cref="T:System.Web.UI.WebControls.DetailsView" /> 控件不处于插入模式时，调用此方法。

- 或 -

与 <see cref="T:System.Web.UI.DataSourceView" /> 控件关联的 <see cref="T:System.Web.UI.WebControls.DetailsView" /> 为 <see langword="null" />。</exception>
        <altmember cref="E:System.Web.UI.WebControls.DetailsView.ItemInserted" />
        <altmember cref="E:System.Web.UI.WebControls.DetailsView.ItemInserting" />
        <altmember cref="M:System.Web.UI.WebControls.DetailsView.DeleteItem" />
        <altmember cref="M:System.Web.UI.WebControls.DetailsView.UpdateItem(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="InsertMethod">
      <MemberSignature Language="C#" Value="public virtual string InsertMethod { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string InsertMethod" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DetailsView.InsertMethod" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property InsertMethod As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ InsertMethod { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.InsertMethod : string with get, set" Usage="System.Web.UI.WebControls.DetailsView.InsertMethod" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue("")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue("")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Web.UI.Themeable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.Themeable(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置控件执行插入操作时调用的页面上的方法的名称。</summary>
        <value>当控件执行插入操作时该页的被调用的方法的名称。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 有关如何在 Web 窗体中使用模型绑定的教程系列，请参阅 [模型绑定和 Web 窗体](/aspnet/web-forms/overview/presenting-and-managing-data/model-binding/retrieving-data)。

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertRowStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle InsertRowStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle InsertRowStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DetailsView.InsertRowStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InsertRowStyle As TableItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TableItemStyle ^ InsertRowStyle { System::Web::UI::WebControls::TableItemStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InsertRowStyle : System.Web.UI.WebControls.TableItemStyle" Usage="System.Web.UI.WebControls.DetailsView.InsertRowStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(null)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(null)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.NotifyParentProperty(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.NotifyParentProperty(true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个对 <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> 对象的引用，该对象允许您设置在 <see cref="T:System.Web.UI.WebControls.DetailsView" /> 控件处于插入模式时 <see cref="T:System.Web.UI.WebControls.DetailsView" /> 控件中的数据行的外观。</summary>
        <value>一个对 <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> 的引用，该对象表示在 <see cref="T:System.Web.UI.WebControls.DetailsView" /> 控件处于插入模式时 <see cref="T:System.Web.UI.WebControls.DetailsView" /> 控件中的数据行的样式。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.DetailsView>当控件处于插入模式时，将使用此样式来显示控件中的数据行 <xref:System.Web.UI.WebControls.DetailsView> 。 使用 <xref:System.Web.UI.WebControls.DetailsView.InsertRowStyle%2A> 属性可控制插入模式下的数据行的外观。 此属性是只读的;但是，您可以设置 <xref:System.Web.UI.WebControls.TableItemStyle> 它返回的对象的属性。 可以在窗体中以声明方式设置这些属性 `Property-Subproperty` ，其中 `Subproperty` 是对象的属性 <xref:System.Web.UI.WebControls.TableItemStyle> (例如 `InsertRowStyle-ForeColor`) 。 还可以以编程方式设置属性 `Property.Subproperty` ， (例如 `InsertRowStyle.ForeColor`) 。 常见设置通常包括自定义背景色、前景色和字体属性。



## Examples
 下面的代码示例演示如何使用 <xref:System.Web.UI.WebControls.DetailsView.InsertRowStyle%2A> 属性来指定在 <xref:System.Web.UI.WebControls.DetailsView> 控件处于插入模式时数据行的字体和样式设置。

 [!code-aspx-csharp[DetailsViewInsertRowStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DetailsViewInsertRowStyle/CS/detailsviewinsertrowstylecs.aspx#1)]
 [!code-aspx-vb[DetailsViewInsertRowStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DetailsViewInsertRowStyle/VB/detailsviewinsertrowstylevb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TableItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.AlternatingRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.CommandRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.EditRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.EmptyDataRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.FooterStyle" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.FieldHeaderStyle" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.HeaderStyle" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.RowStyle" />
      </Docs>
    </Member>
    <Member MemberName="IsBindableType">
      <MemberSignature Language="C#" Value="public virtual bool IsBindableType (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsBindableType(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DetailsView.IsBindableType(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsBindableType (type As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsBindableType(Type ^ type);" />
      <MemberSignature Language="F#" Value="abstract member IsBindableType : Type -&gt; bool&#xA;override this.IsBindableType : Type -&gt; bool" Usage="detailsView.IsBindableType type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">表示要检查的数据类型的 <see cref="T:System.Type" />。</param>
        <summary>确定指定的数据类型是否可以绑定到 <see cref="T:System.Web.UI.WebControls.DetailsView" /> 控件中的字段。</summary>
        <returns>如果指定的数据类型可以绑定到 <see cref="T:System.Web.UI.WebControls.DetailsView" /> 控件中的字段，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.DetailsView.IsBindableType%2A>方法是由控件调用的帮助器方法 <xref:System.Web.UI.WebControls.DetailsView> ，用于确定指定的数据类型是否可绑定到控件中的字段。 <xref:System.Web.UI.WebControls.DetailsView>控件支持以下数据类型：

 所有基元数据类型，如 <xref:System.Boolean> 、 <xref:System.Byte> 和 <xref:System.Int32>

 <xref:System.DateTime>

 <xref:System.Decimal>

 <xref:System.Guid>

 <xref:System.String>

 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>扩展类时 <see cref="T:System.Web.UI.WebControls.DetailsView" /> ，可以重写此方法，以添加或限制可在控件中使用的数据类型 <see cref="T:System.Web.UI.WebControls.DetailsView" /> 。</para></block>
        <altmember cref="P:System.Type.IsPrimitive" />
        <altmember cref="T:System.DateTime" />
        <altmember cref="T:System.Decimal" />
        <altmember cref="T:System.Guid" />
        <altmember cref="T:System.String" />
      </Docs>
    </Member>
    <Member MemberName="ItemCommand">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.DetailsViewCommandEventHandler ItemCommand;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.DetailsViewCommandEventHandler ItemCommand" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.DetailsView.ItemCommand" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ItemCommand As DetailsViewCommandEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::DetailsViewCommandEventHandler ^ ItemCommand;" />
      <MemberSignature Language="F#" Value="member this.ItemCommand : System.Web.UI.WebControls.DetailsViewCommandEventHandler " Usage="member this.ItemCommand : System.Web.UI.WebControls.DetailsViewCommandEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DetailsViewCommandEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>在单击 <see cref="T:System.Web.UI.WebControls.DetailsView" /> 控件中的某个按钮时发生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.DetailsView.ItemCommand>单击控件中的按钮时，将引发事件 <xref:System.Web.UI.WebControls.DetailsView> 。 这使你可以提供一个事件处理程序，该事件处理程序将在每次发生此事件时执行自定义例程。

 <xref:System.Web.UI.WebControls.DetailsViewCommandEventArgs>对象传递到事件处理程序，该处理程序允许您确定所单击按钮的命令名和命令参数。 若要确定当前记录的索引，请使用 <xref:System.Web.UI.WebControls.DetailsView.PageIndex%2A> 属性。

 有关如何处理事件的详细信息，请参阅 [处理和引发事件](/dotnet/standard/events/)。



## Examples
 下面的代码示例演示如何使用 <xref:System.Web.UI.WebControls.DetailsView.ItemCommand> 事件来处理控件中的按钮单击操作 <xref:System.Web.UI.WebControls.DetailsView> 。 当用户单击 "添加联系人" 按钮时，该项将添加到 <xref:System.Web.UI.WebControls.ListBox> 控件中。

 [!code-aspx-csharp[DetailsViewItemCommand#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DetailsViewItemCommand/CS/detailsviewitemcommandcs.aspx#1)]
 [!code-aspx-vb[DetailsViewItemCommand#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DetailsViewItemCommand/VB/detailsviewitemcommandvb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.DetailsViewCommandEventArgs" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.PageIndex" />
        <altmember cref="P:System.Web.UI.WebControls.CommandEventArgs.CommandName" />
        <altmember cref="P:System.Web.UI.WebControls.CommandEventArgs.CommandArgument" />
        <altmember cref="M:System.Web.UI.WebControls.DetailsView.OnItemCommand(System.Web.UI.WebControls.DetailsViewCommandEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="ItemCreated">
      <MemberSignature Language="C#" Value="public event EventHandler ItemCreated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ItemCreated" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.DetailsView.ItemCreated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ItemCreated As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ ItemCreated;" />
      <MemberSignature Language="F#" Value="member this.ItemCreated : EventHandler " Usage="member this.ItemCreated : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>在 <see cref="T:System.Web.UI.WebControls.DetailsView" /> 控件中创建记录时发生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.DetailsView.ItemCreated>每次在控件中创建一条记录时都会引发该事件 <xref:System.Web.UI.WebControls.DetailsView> 。 第一次呈现控件时，或当用户导航到另一条记录时，会发生这种情况。 可以使用此事件提供一个事件处理程序，该事件处理程序将在每次发生此事件时执行自定义例程（如将自定义内容添加到行）。

 您可以 <xref:System.Web.UI.WebControls.DetailsView> <xref:System.Web.UI.WebControls.DetailsView.HeaderRow%2A> 分别使用、 <xref:System.Web.UI.WebControls.DetailsView.FooterRow%2A> 、 <xref:System.Web.UI.WebControls.DetailsView.TopPagerRow%2A> 或属性访问控件中的标头、表尾和页导航行 <xref:System.Web.UI.WebControls.DetailsView.BottomPagerRow%2A> 。 若要访问其中一个数据行，请使用 <xref:System.Web.UI.WebControls.DetailsView.Rows%2A> 集合。

 有关如何处理事件的详细信息，请参阅 [处理和引发事件](/dotnet/standard/events/)。



## Examples
 下面的代码示例演示如何使用 <xref:System.Web.UI.WebControls.DetailsView.ItemCreated> 事件来更新具有当前分页统计信息的自定义页导航行。

 [!code-aspx-csharp[DetailsViewHeaderTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DetailsViewHeaderTemplate/CS/detailsviewheadertemplatecs.aspx#1)]
 [!code-aspx-vb[DetailsViewHeaderTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DetailsViewHeaderTemplate/VB/detailsviewheadertemplatevb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.EventArgs" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.BottomPagerRow" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.FooterRow" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.HeaderRow" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.Rows" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.TopPagerRow" />
        <altmember cref="M:System.Web.UI.WebControls.DetailsView.OnItemCreated(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="ItemDeleted">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.DetailsViewDeletedEventHandler ItemDeleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.DetailsViewDeletedEventHandler ItemDeleted" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.DetailsView.ItemDeleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ItemDeleted As DetailsViewDeletedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::DetailsViewDeletedEventHandler ^ ItemDeleted;" />
      <MemberSignature Language="F#" Value="member this.ItemDeleted : System.Web.UI.WebControls.DetailsViewDeletedEventHandler " Usage="member this.ItemDeleted : System.Web.UI.WebControls.DetailsViewDeletedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DetailsViewDeletedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>在单击 <see cref="T:System.Web.UI.WebControls.DetailsView" /> 控件中的“删除”按钮时，但在删除操作之后发生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.DetailsView.ItemDeleted>当单击控件中的 "删除" 按钮时 <xref:System.Web.UI.WebControls.DetailsView> ，但在删除操作之后，会引发事件。 这使您可以提供一个事件处理程序，以便在每次发生此事件时执行自定义例程，如检查删除操作的结果。

 <xref:System.Web.UI.WebControls.DetailsViewDeletedEventArgs>对象传递到事件处理程序，该处理程序允许您确定受影响的行数以及可能已发生的任何异常。 还可以通过设置属性，指示是否已在事件处理程序中处理异常 <xref:System.Web.UI.WebControls.DetailsViewDeletedEventArgs.ExceptionHandled%2A> 。

 有关如何处理事件的详细信息，请参阅 [处理和引发事件](/dotnet/standard/events/)。



## Examples
 下面的代码示例演示如何使用事件在 <xref:System.Web.UI.WebControls.DetailsView.ItemDeleted> <xref:System.Web.UI.WebControls.GridView> <xref:System.Web.UI.WebControls.DetailsView> 控件执行删除操作后刷新控件。 这会使 <xref:System.Web.UI.WebControls.GridView> 控件与控件保持同步 <xref:System.Web.UI.WebControls.DetailsView> 。

 [!code-aspx-csharp[DetailsViewComplex#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DetailsViewComplex/CS/detailsviewcomplexcs.aspx#1)]
 [!code-aspx-vb[DetailsViewComplex#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DetailsViewComplex/VB/detailsviewcomplexvb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.DetailsViewDeletedEventArgs" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsViewDeletedEventArgs.ExceptionHandled" />
        <altmember cref="E:System.Web.UI.WebControls.DetailsView.ItemDeleting" />
        <altmember cref="M:System.Web.UI.WebControls.DetailsView.OnItemDeleted(System.Web.UI.WebControls.DetailsViewDeletedEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="ItemDeleting">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.DetailsViewDeleteEventHandler ItemDeleting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.DetailsViewDeleteEventHandler ItemDeleting" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.DetailsView.ItemDeleting" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ItemDeleting As DetailsViewDeleteEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::DetailsViewDeleteEventHandler ^ ItemDeleting;" />
      <MemberSignature Language="F#" Value="member this.ItemDeleting : System.Web.UI.WebControls.DetailsViewDeleteEventHandler " Usage="member this.ItemDeleting : System.Web.UI.WebControls.DetailsViewDeleteEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DetailsViewDeleteEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>在单击 <see cref="T:System.Web.UI.WebControls.DetailsView" /> 控件中的“删除”按钮时，但在删除操作之前发生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.DetailsView.ItemDeleting>当单击控件中的 "删除" 按钮时 <xref:System.Web.UI.WebControls.DetailsView> ，但在删除操作之前引发事件。 这使您可以提供一个事件处理程序，以便在此事件发生时执行自定义例程（如取消删除操作）。

 <xref:System.Web.UI.WebControls.DetailsViewDeleteEventArgs>对象传递到事件处理程序，该处理程序允许您确定要删除的记录的索引，并指示应取消删除操作。 若要取消删除操作，请将 <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> 属性设置为 `true` 。 如果需要，还可以在将 <xref:System.Web.UI.WebControls.DetailsViewDeleteEventArgs.Keys%2A> <xref:System.Web.UI.WebControls.DetailsViewDeleteEventArgs.Values%2A> 值传递给数据源之前操作和集合。

 有关如何处理事件的详细信息，请参阅 [处理和引发事件](/dotnet/standard/events/)。



## Examples
 下面的代码示例演示了 <xref:System.Web.UI.WebControls.DetailsView.ItemDeleting> 当用户尝试从控件中删除最后一项时，如何使用事件取消删除操作 <xref:System.Web.UI.WebControls.DetailsView> 。

 [!code-aspx-csharp[DetailsViewItemDeleting#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DetailsViewItemDeleting/CS/detailsviewitemdeletingcs.aspx#1)]
 [!code-aspx-vb[DetailsViewItemDeleting#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DetailsViewItemDeleting/VB/detailsviewitemdeletingvb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.DetailsViewDeleteEventArgs" />
        <altmember cref="P:System.ComponentModel.CancelEventArgs.Cancel" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsViewDeleteEventArgs.Keys" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsViewDeleteEventArgs.Values" />
        <altmember cref="E:System.Web.UI.WebControls.DetailsView.ItemDeleting" />
        <altmember cref="M:System.Web.UI.WebControls.DetailsView.OnItemDeleted(System.Web.UI.WebControls.DetailsViewDeletedEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="ItemInserted">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.DetailsViewInsertedEventHandler ItemInserted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.DetailsViewInsertedEventHandler ItemInserted" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.DetailsView.ItemInserted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ItemInserted As DetailsViewInsertedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::DetailsViewInsertedEventHandler ^ ItemInserted;" />
      <MemberSignature Language="F#" Value="member this.ItemInserted : System.Web.UI.WebControls.DetailsViewInsertedEventHandler " Usage="member this.ItemInserted : System.Web.UI.WebControls.DetailsViewInsertedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DetailsViewInsertedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>在单击 <see cref="T:System.Web.UI.WebControls.DetailsView" /> 控件中的“插入”按钮时，但在插入操作之后发生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.DetailsView.ItemInserted>当单击控件中的 "插入" 按钮时 <xref:System.Web.UI.WebControls.DetailsView> ，但在插入操作后引发事件。 这使您可以提供一个事件处理程序，以便在每次发生此事件时执行自定义例程，如检查插入操作的结果。

 <xref:System.Web.UI.WebControls.DetailsViewInsertedEventArgs>对象传递到事件处理程序，该处理程序允许您确定受影响的行数以及可能已发生的任何异常。 还可以通过设置属性，指示是否已在事件处理程序中处理异常 <xref:System.Web.UI.WebControls.DetailsViewInsertedEventArgs.ExceptionHandled%2A> 。 若要在插入操作后使控件处于插入模式，请将 <xref:System.Web.UI.WebControls.DetailsViewInsertedEventArgs.KeepInInsertMode%2A> 属性设置为 `true` 。

 有关如何处理事件的详细信息，请参阅 [处理和引发事件](/dotnet/standard/events/)。



## Examples
 下面的代码示例演示如何使用事件在 <xref:System.Web.UI.WebControls.DetailsView.ItemInserted> <xref:System.Web.UI.WebControls.GridView> <xref:System.Web.UI.WebControls.DetailsView> 控件执行插入操作后刷新控件。 这会使 <xref:System.Web.UI.WebControls.GridView> 控件与控件保持同步 <xref:System.Web.UI.WebControls.DetailsView> 。

 [!code-aspx-csharp[DetailsViewComplex#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DetailsViewComplex/CS/detailsviewcomplexcs.aspx#1)]
 [!code-aspx-vb[DetailsViewComplex#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DetailsViewComplex/VB/detailsviewcomplexvb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.DetailsViewInsertedEventArgs" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsViewInsertedEventArgs.ExceptionHandled" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsViewInsertedEventArgs.KeepInInsertMode" />
        <altmember cref="E:System.Web.UI.WebControls.DetailsView.ItemInserting" />
        <altmember cref="M:System.Web.UI.WebControls.DetailsView.OnItemInserted(System.Web.UI.WebControls.DetailsViewInsertedEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="ItemInserting">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.DetailsViewInsertEventHandler ItemInserting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.DetailsViewInsertEventHandler ItemInserting" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.DetailsView.ItemInserting" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ItemInserting As DetailsViewInsertEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::DetailsViewInsertEventHandler ^ ItemInserting;" />
      <MemberSignature Language="F#" Value="member this.ItemInserting : System.Web.UI.WebControls.DetailsViewInsertEventHandler " Usage="member this.ItemInserting : System.Web.UI.WebControls.DetailsViewInsertEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DetailsViewInsertEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>在单击 <see cref="T:System.Web.UI.WebControls.DetailsView" /> 控件中的“插入”按钮时，但在插入操作之前发生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.DetailsView.ItemInserting>当单击控件中的 "插入" 按钮时 <xref:System.Web.UI.WebControls.DetailsView> ，但在插入操作之前引发事件。 这使你可以提供一个事件处理程序，该事件处理程序会在每次发生此事件时执行自定义例程，如取消插入操作。

 <xref:System.Web.UI.WebControls.DetailsViewInsertEventArgs>对象传递到事件处理程序，该处理程序允许您指示应取消插入操作。 若要取消插入操作，请将 <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> 属性设置为 `true` 。 <xref:System.Web.UI.WebControls.DetailsViewInsertEventArgs.Values%2A>如果需要，还可以在将值传递给数据源之前操作该集合。

 有关如何处理事件的详细信息，请参阅 [处理和引发事件](/dotnet/standard/events/)。



## Examples
 下面的代码示例演示如何使用 <xref:System.Web.UI.WebControls.DetailsView.ItemInserting> 事件对用户输入的值进行 HTML 编码，然后将新记录添加到数据源。

 [!code-aspx-csharp[DetailsViewComplex#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DetailsViewComplex/CS/detailsviewcomplexcs.aspx#1)]
 [!code-aspx-vb[DetailsViewComplex#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DetailsViewComplex/VB/detailsviewcomplexvb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.DetailsViewInsertEventArgs" />
        <altmember cref="P:System.ComponentModel.CancelEventArgs.Cancel" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsViewInsertEventArgs.Values" />
        <altmember cref="E:System.Web.UI.WebControls.DetailsView.ItemInserted" />
        <altmember cref="M:System.Web.UI.WebControls.DetailsView.OnItemInserting(System.Web.UI.WebControls.DetailsViewInsertEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="ItemUpdated">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.DetailsViewUpdatedEventHandler ItemUpdated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.DetailsViewUpdatedEventHandler ItemUpdated" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.DetailsView.ItemUpdated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ItemUpdated As DetailsViewUpdatedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::DetailsViewUpdatedEventHandler ^ ItemUpdated;" />
      <MemberSignature Language="F#" Value="member this.ItemUpdated : System.Web.UI.WebControls.DetailsViewUpdatedEventHandler " Usage="member this.ItemUpdated : System.Web.UI.WebControls.DetailsViewUpdatedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DetailsViewUpdatedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>在单击 <see cref="T:System.Web.UI.WebControls.DetailsView" /> 控件中的“更新”按钮时，但在更新操作之后发生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.DetailsView.ItemUpdated>当单击控件中的 "更新" 按钮时 <xref:System.Web.UI.WebControls.DetailsView> ，但在更新操作完成后，会引发事件。 这使您可以提供一个事件处理程序，以便在每次发生此事件时执行自定义例程，如检查更新操作的结果。

 <xref:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs>对象传递到事件处理程序，该处理程序允许您确定受影响的行数以及可能已发生的任何异常。 还可以通过设置属性，指示是否已在事件处理程序中处理异常 <xref:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.ExceptionHandled%2A> 。 若要在更新操作后使控件处于编辑模式，请将 <xref:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.KeepInEditMode%2A> 属性设置为 `true` 。

 有关如何处理事件的详细信息，请参阅 [处理和引发事件](/dotnet/standard/events/)。



## Examples
 下面的代码示例演示如何使用事件在 <xref:System.Web.UI.WebControls.DetailsView.ItemUpdated> <xref:System.Web.UI.WebControls.GridView> <xref:System.Web.UI.WebControls.DetailsView> 控件执行更新操作后刷新控件。 这会使 <xref:System.Web.UI.WebControls.GridView> 控件与控件保持同步 <xref:System.Web.UI.WebControls.DetailsView> 。

 [!code-aspx-csharp[DetailsViewComplex#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DetailsViewComplex/CS/detailsviewcomplexcs.aspx#1)]
 [!code-aspx-vb[DetailsViewComplex#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DetailsViewComplex/VB/detailsviewcomplexvb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.ExceptionHandled" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.KeepInEditMode" />
        <altmember cref="E:System.Web.UI.WebControls.DetailsView.ItemUpdating" />
        <altmember cref="M:System.Web.UI.WebControls.DetailsView.OnItemUpdated(System.Web.UI.WebControls.DetailsViewUpdatedEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="ItemUpdating">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.DetailsViewUpdateEventHandler ItemUpdating;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.DetailsViewUpdateEventHandler ItemUpdating" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.DetailsView.ItemUpdating" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ItemUpdating As DetailsViewUpdateEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::DetailsViewUpdateEventHandler ^ ItemUpdating;" />
      <MemberSignature Language="F#" Value="member this.ItemUpdating : System.Web.UI.WebControls.DetailsViewUpdateEventHandler " Usage="member this.ItemUpdating : System.Web.UI.WebControls.DetailsViewUpdateEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DetailsViewUpdateEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>在单击 <see cref="T:System.Web.UI.WebControls.DetailsView" /> 控件中的“更新”按钮时，但在更新操作之前发生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.DetailsView.ItemUpdating>当单击控件中的 "更新" 按钮时 <xref:System.Web.UI.WebControls.DetailsView> ，但在更新操作之前引发事件。 这使您可以提供一个事件处理程序，以便在此事件发生时执行自定义例程（如取消更新操作）。

 <xref:System.Web.UI.WebControls.DetailsViewUpdateEventArgs>对象传递到事件处理程序，该处理程序允许您确定要更新的记录的索引，并指示应取消更新操作。 若要取消更新操作，请将 <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> 属性设置为 `true` 。 如果需要，还可以在将 <xref:System.Web.UI.WebControls.DetailsViewUpdateEventArgs.Keys%2A> <xref:System.Web.UI.WebControls.DetailsViewUpdateEventArgs.OldValues%2A> <xref:System.Web.UI.WebControls.DetailsViewUpdateEventArgs.NewValues%2A> 值传递给数据源之前操作、和集合。 使用这些集合的常见方法是在将用户提供的值存储到数据源之前对这些值进行 HTML 编码。 这有助于防止脚本注入攻击。

 有关如何处理事件的详细信息，请参阅 [处理和引发事件](/dotnet/standard/events/)。



## Examples
 下面的代码示例演示如何使用 <xref:System.Web.UI.WebControls.DetailsView.ItemUpdating> 事件对用户输入的值进行 HTML 编码，然后在数据源中更新记录。

 [!code-aspx-csharp[DetailsViewComplex#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DetailsViewComplex/CS/detailsviewcomplexcs.aspx#1)]
 [!code-aspx-vb[DetailsViewComplex#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DetailsViewComplex/VB/detailsviewcomplexvb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.DetailsViewUpdateEventArgs" />
        <altmember cref="P:System.ComponentModel.CancelEventArgs.Cancel" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsViewUpdateEventArgs.Keys" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsViewUpdateEventArgs.NewValues" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsViewUpdateEventArgs.OldValues" />
        <altmember cref="E:System.Web.UI.WebControls.DetailsView.ItemUpdated" />
        <altmember cref="M:System.Web.UI.WebControls.DetailsView.OnItemUpdating(System.Web.UI.WebControls.DetailsViewUpdateEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="LoadControlState">
      <MemberSignature Language="C#" Value="protected internal override void LoadControlState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void LoadControlState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DetailsView.LoadControlState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub LoadControlState (savedState As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void LoadControlState(System::Object ^ savedState);" />
      <MemberSignature Language="F#" Value="override this.LoadControlState : obj -&gt; unit" Usage="detailsView.LoadControlState savedState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState">一个 <see cref="T:System.Object" />，表示 <see cref="T:System.Web.UI.WebControls.DetailsView" /> 控件的状态。</param>
        <summary>加载 <see cref="T:System.Web.UI.WebControls.DetailsView" /> 控件中需要保留的属性的状态（即使在 <see cref="P:System.Web.UI.Control.EnableViewState" /> 属性设置为 <see langword="false" /> 时）。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.DetailsView.LoadControlState%2A>方法用于加载控件中需要保留的属性的状态 <xref:System.Web.UI.WebControls.DetailsView> （即使在 <xref:System.Web.UI.Control.EnableViewState%2A> 属性设置为时） `false` 。

> [!NOTE]
>  此方法主要由控件开发人员在扩展控件时使用 <xref:System.Web.UI.WebControls.DetailsView> 。

 ]]></format>
        </remarks>
        <altmember cref="T:System.Object" />
        <altmember cref="P:System.Web.UI.Control.EnableViewState" />
        <altmember cref="M:System.Web.UI.Control.LoadControlState(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="LoadViewState">
      <MemberSignature Language="C#" Value="protected override void LoadViewState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void LoadViewState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DetailsView.LoadViewState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub LoadViewState (savedState As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void LoadViewState(System::Object ^ savedState);" />
      <MemberSignature Language="F#" Value="override this.LoadViewState : obj -&gt; unit" Usage="detailsView.LoadViewState savedState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState">一个 <see cref="T:System.Object" />，表示 <see cref="T:System.Web.UI.WebControls.DetailsView" /> 控件的状态。</param>
        <summary>加载以前保存的 <see cref="T:System.Web.UI.WebControls.DetailsView" /> 控件的视图状态。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 此方法主要由 .NET Framework 基础结构使用，不应在代码中直接使用。 不过，控件开发人员可以重写此方法，以指定自定义服务器控件如何还原其视图状态。 有关详细信息，请参阅 [ASP.NET 状态管理概述](https://docs.microsoft.com/previous-versions/aspnet/75x4ha6s(v=vs.100))。

 <xref:System.Web.UI.WebControls.DetailsView.LoadViewState%2A>方法用于加载以前保存的控件视图状态 <xref:System.Web.UI.WebControls.DetailsView> 。

 ]]></format>
        </remarks>
        <altmember cref="T:System.Object" />
        <altmember cref="M:System.Web.UI.Control.LoadViewState(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="ModeChanged">
      <MemberSignature Language="C#" Value="public event EventHandler ModeChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ModeChanged" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.DetailsView.ModeChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ModeChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ ModeChanged;" />
      <MemberSignature Language="F#" Value="member this.ModeChanged : EventHandler " Usage="member this.ModeChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>在 <see cref="T:System.Web.UI.WebControls.DetailsView" /> 控件尝试在编辑、插入和只读模式之间更改时，但在更新 <see cref="P:System.Web.UI.WebControls.DetailsView.CurrentMode" /> 属性之后发生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.DetailsView.ModeChanged>当 <xref:System.Web.UI.WebControls.DetailsView> 控件尝试在编辑、插入和只读模式之间更改时，但在更新属性后，会引发事件 <xref:System.Web.UI.WebControls.DetailsView.CurrentMode%2A> 。 这使你可以提供一个事件处理程序，该事件处理程序在此事件发生时执行自定义例程（如将 <xref:System.Web.UI.WebControls.DetailsView> 控件与其他控件同步）。

 有关如何处理事件的详细信息，请参阅 [处理和引发事件](/dotnet/standard/events/)。



## Examples
 下面的代码示例演示如何使用 <xref:System.Web.UI.WebControls.DetailsView.ModeChanged> 事件在标题行中显示当前模式。

 [!code-aspx-csharp[DetailsViewModeChanged#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DetailsViewModeChanged/CS/detailsviewmodechangedcs.aspx#1)]
 [!code-aspx-vb[DetailsViewModeChanged#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DetailsViewModeChanged/VB/detailsviewmodechangedvb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.EventArgs" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.CurrentMode" />
        <altmember cref="E:System.Web.UI.WebControls.DetailsView.ModeChanging" />
        <altmember cref="M:System.Web.UI.WebControls.DetailsView.OnModeChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="ModeChanging">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.DetailsViewModeEventHandler ModeChanging;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.DetailsViewModeEventHandler ModeChanging" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.DetailsView.ModeChanging" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ModeChanging As DetailsViewModeEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::DetailsViewModeEventHandler ^ ModeChanging;" />
      <MemberSignature Language="F#" Value="member this.ModeChanging : System.Web.UI.WebControls.DetailsViewModeEventHandler " Usage="member this.ModeChanging : System.Web.UI.WebControls.DetailsViewModeEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DetailsViewModeEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>当 <see cref="T:System.Web.UI.WebControls.DetailsView" /> 控件尝试在编辑、插入和只读模式之间更改时，但在更新 <see cref="P:System.Web.UI.WebControls.DetailsView.CurrentMode" /> 属性之前发生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.DetailsView.ModeChanging>当 <xref:System.Web.UI.WebControls.DetailsView> 控件尝试在编辑、插入和只读模式之间更改时，但在更新属性之前，会引发事件 <xref:System.Web.UI.WebControls.DetailsView.CurrentMode%2A> 。 这允许你提供一个事件处理程序，以便在每次发生此事件时执行自定义例程，如取消模式更改。

 <xref:System.Web.UI.WebControls.DetailsViewModeEventArgs>对象将传递到事件处理程序，该处理程序允许您确定新模式，确定模式更改是用户取消编辑操作的结果，还是取消模式更改。 若要确定新模式，请使用 <xref:System.Web.UI.WebControls.DetailsViewModeEventArgs.NewMode%2A> 属性。 若要确定模式更改是否是用户取消编辑操作的结果，请使用 <xref:System.Web.UI.WebControls.DetailsViewModeEventArgs.CancelingEdit%2A> 属性。 您可以通过将 <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> 属性设置为来取消模式更改 `true` 。

 有关如何处理事件的详细信息，请参阅 [处理和引发事件](/dotnet/standard/events/)。



## Examples
 下面的代码示例演示如何使用 <xref:System.Web.UI.WebControls.DetailsView.ModeChanging> 事件 <xref:System.Web.UI.WebControls.DetailsView> 在控件处于编辑模式时禁用分页功能。

 [!code-aspx-csharp[DetailsViewModeChanging#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DetailsViewModeChanging/CS/detailsviewmodechangingcs.aspx#1)]
 [!code-aspx-vb[DetailsViewModeChanging#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DetailsViewModeChanging/VB/detailsviewmodechangingvb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.DetailsViewModeEventArgs" />
        <altmember cref="P:System.ComponentModel.CancelEventArgs.Cancel" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsViewModeEventArgs.CancelingEdit" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsViewModeEventArgs.NewMode" />
        <altmember cref="E:System.Web.UI.WebControls.DetailsView.ModeChanged" />
        <altmember cref="M:System.Web.UI.WebControls.DetailsView.OnModeChanging(System.Web.UI.WebControls.DetailsViewModeEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnBubbleEvent">
      <MemberSignature Language="C#" Value="protected override bool OnBubbleEvent (object source, EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool OnBubbleEvent(object source, class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DetailsView.OnBubbleEvent(System.Object,System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function OnBubbleEvent (source As Object, e As EventArgs) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool OnBubbleEvent(System::Object ^ source, EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnBubbleEvent : obj * EventArgs -&gt; bool" Usage="detailsView.OnBubbleEvent (source, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Object" />
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="source">事件源。</param>
        <param name="e">包含事件数据的 <see cref="T:System.EventArgs" />。</param>
        <summary>确定 Web 服务器控件的事件是否沿页的用户界面 (UI) 服务器控件层次结构向上传递。</summary>
        <returns>如果事件已被取消，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.DetailsView.OnBubbleEvent%2A>方法实现 <xref:System.Web.UI.Control.OnBubbleEvent%2A?displayProperty=nameWithType> 方法，以将事件从子控件传递到页层次结构。

 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>在派生类中重写 <see cref="M:System.Web.UI.WebControls.DetailsView.OnBubbleEvent(System.Object,System.EventArgs)" /> 时，一定要调用基类的 <see cref="M:System.Web.UI.WebControls.DetailsView.OnBubbleEvent(System.Object,System.EventArgs)" /> 方法，以便已注册的委托对事件进行接收。</para></block>
        <altmember cref="M:System.Web.UI.Control.OnBubbleEvent(System.Object,System.EventArgs)" />
        <altmember cref="T:System.EventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnDataSourceViewChanged">
      <MemberSignature Language="C#" Value="protected override void OnDataSourceViewChanged (object sender, EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnDataSourceViewChanged(object sender, class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DetailsView.OnDataSourceViewChanged(System.Object,System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnDataSourceViewChanged (sender As Object, e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnDataSourceViewChanged(System::Object ^ sender, EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnDataSourceViewChanged : obj * EventArgs -&gt; unit" Usage="detailsView.OnDataSourceViewChanged (sender, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="sender">事件源。</param>
        <param name="e">包含事件数据的 <see cref="T:System.EventArgs" />。</param>
        <summary>引发 <see cref="E:System.Web.UI.DataSourceView.DataSourceViewChanged" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 此 <xref:System.Web.UI.WebControls.DetailsView.OnDataSourceViewChanged%2A> 方法由 <xref:System.Web.UI.WebControls.DetailsView> 控件调用以引发 <xref:System.Web.UI.DataSourceView.DataSourceViewChanged> 事件。 在扩展类时，控件开发人员通常会使用此方法 <xref:System.Web.UI.WebControls.DetailsView> 。

 <xref:System.Web.UI.WebControls.DetailsView.OnDataSourceViewChanged%2A> 方法还允许派生类对事件进行处理而不必附加委托。 这是在派生类中处理事件的首选技术。

 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>在派生类中重写 <see cref="M:System.Web.UI.WebControls.DetailsView.OnDataSourceViewChanged(System.Object,System.EventArgs)" /> 时，一定要调用基类的 <see cref="M:System.Web.UI.WebControls.DetailsView.OnDataSourceViewChanged(System.Object,System.EventArgs)" /> 方法，以便已注册的委托对事件进行接收。</para></block>
        <altmember cref="E:System.Web.UI.DataSourceView.DataSourceViewChanged" />
        <altmember cref="T:System.EventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnInit">
      <MemberSignature Language="C#" Value="protected internal override void OnInit (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnInit(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DetailsView.OnInit(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnInit (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnInit(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnInit : EventArgs -&gt; unit" Usage="detailsView.OnInit e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件数据的 <see cref="T:System.EventArgs" />。</param>
        <summary>引发 <see cref="E:System.Web.UI.Control.Init" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 此 <xref:System.Web.UI.WebControls.DetailsView.OnInit%2A> 方法由 <xref:System.Web.UI.WebControls.DetailsView> 控件调用以引发 <xref:System.Web.UI.Control.Init> 事件。 在扩展类时，控件开发人员通常会使用此方法 <xref:System.Web.UI.WebControls.DetailsView> 。

 <xref:System.Web.UI.WebControls.DetailsView.OnInit%2A> 方法还允许派生类对事件进行处理而不必附加委托。 这是在派生类中处理事件的首选技术。

 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>在派生类中重写 <see cref="M:System.Web.UI.WebControls.DetailsView.OnInit(System.EventArgs)" /> 时，一定要调用基类的 <see cref="M:System.Web.UI.WebControls.DetailsView.OnInit(System.EventArgs)" /> 方法，以便已注册的委托对事件进行接收。</para></block>
        <altmember cref="E:System.Web.UI.Control.Init" />
        <altmember cref="T:System.EventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnItemCommand">
      <MemberSignature Language="C#" Value="protected virtual void OnItemCommand (System.Web.UI.WebControls.DetailsViewCommandEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemCommand(class System.Web.UI.WebControls.DetailsViewCommandEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DetailsView.OnItemCommand(System.Web.UI.WebControls.DetailsViewCommandEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnItemCommand (e As DetailsViewCommandEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnItemCommand(System::Web::UI::WebControls::DetailsViewCommandEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnItemCommand : System.Web.UI.WebControls.DetailsViewCommandEventArgs -&gt; unit&#xA;override this.OnItemCommand : System.Web.UI.WebControls.DetailsViewCommandEventArgs -&gt; unit" Usage="detailsView.OnItemCommand e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.DetailsViewCommandEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件数据的 <see cref="T:System.Web.UI.WebControls.DetailsViewCommandEventArgs" />。</param>
        <summary>引发 <see cref="E:System.Web.UI.WebControls.DetailsView.ItemCommand" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 此 <xref:System.Web.UI.WebControls.DetailsView.OnItemCommand%2A> 方法由 <xref:System.Web.UI.WebControls.DetailsView> 控件调用以引发 <xref:System.Web.UI.WebControls.DetailsView.ItemCommand> 事件。 在扩展类时，控件开发人员通常会使用此方法 <xref:System.Web.UI.WebControls.DetailsView> 。

 <xref:System.Web.UI.WebControls.DetailsView.OnItemCommand%2A> 方法还允许派生类对事件进行处理而不必附加委托。 这是在派生类中处理事件的首选技术。

 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>在派生类中重写 <see cref="M:System.Web.UI.WebControls.DetailsView.OnItemCommand(System.Web.UI.WebControls.DetailsViewCommandEventArgs)" /> 时，一定要调用基类的 <see cref="M:System.Web.UI.WebControls.DetailsView.OnItemCommand(System.Web.UI.WebControls.DetailsViewCommandEventArgs)" /> 方法，以便已注册的委托对事件进行接收。</para></block>
        <altmember cref="E:System.Web.UI.WebControls.DetailsView.ItemCommand" />
        <altmember cref="T:System.Web.UI.WebControls.DetailsViewCommandEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnItemCreated">
      <MemberSignature Language="C#" Value="protected virtual void OnItemCreated (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemCreated(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DetailsView.OnItemCreated(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnItemCreated (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnItemCreated(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnItemCreated : EventArgs -&gt; unit&#xA;override this.OnItemCreated : EventArgs -&gt; unit" Usage="detailsView.OnItemCreated e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件数据的 <see cref="T:System.EventArgs" />。</param>
        <summary>引发 <see cref="E:System.Web.UI.WebControls.DetailsView.ItemCreated" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 此 <xref:System.Web.UI.WebControls.DetailsView.OnItemCreated%2A> 方法由 <xref:System.Web.UI.WebControls.DetailsView> 控件调用以引发 <xref:System.Web.UI.WebControls.DetailsView.ItemCreated> 事件。 在扩展类时，控件开发人员通常会使用此方法 <xref:System.Web.UI.WebControls.DetailsView> 。

 <xref:System.Web.UI.WebControls.DetailsView.OnItemCreated%2A> 方法还允许派生类对事件进行处理而不必附加委托。 这是在派生类中处理事件的首选技术。

 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>在派生类中重写 <see cref="M:System.Web.UI.WebControls.DetailsView.OnItemCreated(System.EventArgs)" /> 时，一定要调用基类的 <see cref="M:System.Web.UI.WebControls.DetailsView.OnItemCreated(System.EventArgs)" /> 方法，以便已注册的委托对事件进行接收。</para></block>
        <altmember cref="E:System.Web.UI.WebControls.DetailsView.ItemCreated" />
        <altmember cref="T:System.EventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnItemDeleted">
      <MemberSignature Language="C#" Value="protected virtual void OnItemDeleted (System.Web.UI.WebControls.DetailsViewDeletedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemDeleted(class System.Web.UI.WebControls.DetailsViewDeletedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DetailsView.OnItemDeleted(System.Web.UI.WebControls.DetailsViewDeletedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnItemDeleted (e As DetailsViewDeletedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnItemDeleted(System::Web::UI::WebControls::DetailsViewDeletedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnItemDeleted : System.Web.UI.WebControls.DetailsViewDeletedEventArgs -&gt; unit&#xA;override this.OnItemDeleted : System.Web.UI.WebControls.DetailsViewDeletedEventArgs -&gt; unit" Usage="detailsView.OnItemDeleted e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.DetailsViewDeletedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件数据的 <see cref="T:System.Web.UI.WebControls.DetailsViewDeletedEventArgs" />。</param>
        <summary>引发 <see cref="E:System.Web.UI.WebControls.DetailsView.ItemDeleted" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 此 <xref:System.Web.UI.WebControls.DetailsView.OnItemDeleted%2A> 方法由 <xref:System.Web.UI.WebControls.DetailsView> 控件调用以引发 <xref:System.Web.UI.WebControls.DetailsView.ItemDeleted> 事件。 在扩展类时，控件开发人员通常会使用此方法 <xref:System.Web.UI.WebControls.DetailsView> 。

 <xref:System.Web.UI.WebControls.DetailsView.OnItemDeleted%2A> 方法还允许派生类对事件进行处理而不必附加委托。 这是在派生类中处理事件的首选技术。

 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>在派生类中重写 <see cref="M:System.Web.UI.WebControls.DetailsView.OnItemDeleted(System.Web.UI.WebControls.DetailsViewDeletedEventArgs)" /> 时，一定要调用基类的 <see cref="M:System.Web.UI.WebControls.DetailsView.OnItemDeleted(System.Web.UI.WebControls.DetailsViewDeletedEventArgs)" /> 方法，以便已注册的委托对事件进行接收。</para></block>
        <altmember cref="E:System.Web.UI.WebControls.DetailsView.ItemDeleted" />
        <altmember cref="T:System.Web.UI.WebControls.DetailsViewDeletedEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnItemDeleting">
      <MemberSignature Language="C#" Value="protected virtual void OnItemDeleting (System.Web.UI.WebControls.DetailsViewDeleteEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemDeleting(class System.Web.UI.WebControls.DetailsViewDeleteEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DetailsView.OnItemDeleting(System.Web.UI.WebControls.DetailsViewDeleteEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnItemDeleting (e As DetailsViewDeleteEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnItemDeleting(System::Web::UI::WebControls::DetailsViewDeleteEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnItemDeleting : System.Web.UI.WebControls.DetailsViewDeleteEventArgs -&gt; unit&#xA;override this.OnItemDeleting : System.Web.UI.WebControls.DetailsViewDeleteEventArgs -&gt; unit" Usage="detailsView.OnItemDeleting e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.DetailsViewDeleteEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件数据的 <see cref="T:System.Web.UI.WebControls.DetailsViewDeleteEventArgs" />。</param>
        <summary>引发 <see cref="E:System.Web.UI.WebControls.DetailsView.ItemDeleting" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 此 <xref:System.Web.UI.WebControls.DetailsView.OnItemDeleting%2A> 方法由 <xref:System.Web.UI.WebControls.DetailsView> 控件调用以引发 <xref:System.Web.UI.WebControls.DetailsView.ItemDeleting> 事件。 在扩展类时，控件开发人员通常会使用此方法 <xref:System.Web.UI.WebControls.DetailsView> 。

 <xref:System.Web.UI.WebControls.DetailsView.OnItemDeleting%2A> 方法还允许派生类对事件进行处理而不必附加委托。 这是在派生类中处理事件的首选技术。

 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">没有 <see cref="E:System.Web.UI.WebControls.DetailsView.ItemDeleting" /> 事件的处理程序。</exception>
        <block subset="none" type="overrides"><para>在派生类中重写 <see cref="M:System.Web.UI.WebControls.DetailsView.OnItemDeleting(System.Web.UI.WebControls.DetailsViewDeleteEventArgs)" /> 时，一定要调用基类的 <see cref="M:System.Web.UI.WebControls.DetailsView.OnItemDeleting(System.Web.UI.WebControls.DetailsViewDeleteEventArgs)" /> 方法，以便已注册的委托对事件进行接收。</para></block>
        <altmember cref="E:System.Web.UI.WebControls.DetailsView.ItemDeleting" />
        <altmember cref="T:System.Web.UI.WebControls.DetailsViewDeleteEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnItemInserted">
      <MemberSignature Language="C#" Value="protected virtual void OnItemInserted (System.Web.UI.WebControls.DetailsViewInsertedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemInserted(class System.Web.UI.WebControls.DetailsViewInsertedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DetailsView.OnItemInserted(System.Web.UI.WebControls.DetailsViewInsertedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnItemInserted (e As DetailsViewInsertedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnItemInserted(System::Web::UI::WebControls::DetailsViewInsertedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnItemInserted : System.Web.UI.WebControls.DetailsViewInsertedEventArgs -&gt; unit&#xA;override this.OnItemInserted : System.Web.UI.WebControls.DetailsViewInsertedEventArgs -&gt; unit" Usage="detailsView.OnItemInserted e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.DetailsViewInsertedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件数据的 <see cref="T:System.Web.UI.WebControls.DetailsViewInsertedEventArgs" />。</param>
        <summary>引发 <see cref="E:System.Web.UI.WebControls.DetailsView.ItemInserted" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 此 <xref:System.Web.UI.WebControls.DetailsView.OnItemInserted%2A> 方法由 <xref:System.Web.UI.WebControls.DetailsView> 控件调用以引发 <xref:System.Web.UI.WebControls.DetailsView.ItemInserted> 事件。 在扩展类时，控件开发人员通常会使用此方法 <xref:System.Web.UI.WebControls.DetailsView> 。

 <xref:System.Web.UI.WebControls.DetailsView.OnItemInserted%2A> 方法还允许派生类对事件进行处理而不必附加委托。 这是在派生类中处理事件的首选技术。

 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>在派生类中重写 <see cref="M:System.Web.UI.WebControls.DetailsView.OnItemInserted(System.Web.UI.WebControls.DetailsViewInsertedEventArgs)" /> 时，一定要调用基类的 <see cref="M:System.Web.UI.WebControls.DetailsView.OnItemInserted(System.Web.UI.WebControls.DetailsViewInsertedEventArgs)" /> 方法，以便已注册的委托对事件进行接收。</para></block>
        <altmember cref="E:System.Web.UI.WebControls.DetailsView.ItemInserted" />
        <altmember cref="T:System.Web.UI.WebControls.DetailsViewInsertedEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnItemInserting">
      <MemberSignature Language="C#" Value="protected virtual void OnItemInserting (System.Web.UI.WebControls.DetailsViewInsertEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemInserting(class System.Web.UI.WebControls.DetailsViewInsertEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DetailsView.OnItemInserting(System.Web.UI.WebControls.DetailsViewInsertEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnItemInserting (e As DetailsViewInsertEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnItemInserting(System::Web::UI::WebControls::DetailsViewInsertEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnItemInserting : System.Web.UI.WebControls.DetailsViewInsertEventArgs -&gt; unit&#xA;override this.OnItemInserting : System.Web.UI.WebControls.DetailsViewInsertEventArgs -&gt; unit" Usage="detailsView.OnItemInserting e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.DetailsViewInsertEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件数据的 <see cref="T:System.Web.UI.WebControls.DetailsViewInsertEventArgs" />。</param>
        <summary>引发 <see cref="E:System.Web.UI.WebControls.DetailsView.ItemInserting" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 此 <xref:System.Web.UI.WebControls.DetailsView.OnItemInserting%2A> 方法由 <xref:System.Web.UI.WebControls.DetailsView> 控件调用以引发 <xref:System.Web.UI.WebControls.DetailsView.ItemInserting> 事件。 在扩展类时，控件开发人员通常会使用此方法 <xref:System.Web.UI.WebControls.DetailsView> 。

 <xref:System.Web.UI.WebControls.DetailsView.OnItemInserting%2A> 方法还允许派生类对事件进行处理而不必附加委托。 这是在派生类中处理事件的首选技术。

 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">没有 <see cref="E:System.Web.UI.WebControls.DetailsView.ItemInserting" /> 事件的处理程序。</exception>
        <block subset="none" type="overrides"><para>在派生类中重写 <see cref="M:System.Web.UI.WebControls.DetailsView.OnItemInserting(System.Web.UI.WebControls.DetailsViewInsertEventArgs)" /> 时，一定要调用基类的 <see cref="M:System.Web.UI.WebControls.DetailsView.OnItemInserting(System.Web.UI.WebControls.DetailsViewInsertEventArgs)" /> 方法，以便已注册的委托对事件进行接收。</para></block>
        <altmember cref="E:System.Web.UI.WebControls.DetailsView.ItemInserting" />
        <altmember cref="T:System.Web.UI.WebControls.DetailsViewInsertEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnItemUpdated">
      <MemberSignature Language="C#" Value="protected virtual void OnItemUpdated (System.Web.UI.WebControls.DetailsViewUpdatedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemUpdated(class System.Web.UI.WebControls.DetailsViewUpdatedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DetailsView.OnItemUpdated(System.Web.UI.WebControls.DetailsViewUpdatedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnItemUpdated (e As DetailsViewUpdatedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnItemUpdated(System::Web::UI::WebControls::DetailsViewUpdatedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnItemUpdated : System.Web.UI.WebControls.DetailsViewUpdatedEventArgs -&gt; unit&#xA;override this.OnItemUpdated : System.Web.UI.WebControls.DetailsViewUpdatedEventArgs -&gt; unit" Usage="detailsView.OnItemUpdated e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.DetailsViewUpdatedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件数据的 <see cref="T:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs" />。</param>
        <summary>引发 <see cref="E:System.Web.UI.WebControls.DetailsView.ItemUpdated" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 此 <xref:System.Web.UI.WebControls.DetailsView.OnItemUpdated%2A> 方法由 <xref:System.Web.UI.WebControls.DetailsView> 控件调用以引发 <xref:System.Web.UI.WebControls.DetailsView.ItemUpdated> 事件。 在扩展类时，控件开发人员通常会使用此方法 <xref:System.Web.UI.WebControls.DetailsView> 。

 <xref:System.Web.UI.WebControls.DetailsView.OnItemUpdated%2A> 方法还允许派生类对事件进行处理而不必附加委托。 这是在派生类中处理事件的首选技术。

 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>在派生类中重写 <see cref="M:System.Web.UI.WebControls.DetailsView.OnItemUpdated(System.Web.UI.WebControls.DetailsViewUpdatedEventArgs)" /> 时，一定要调用基类的 <see cref="M:System.Web.UI.WebControls.DetailsView.OnItemUpdated(System.Web.UI.WebControls.DetailsViewUpdatedEventArgs)" /> 方法，以便已注册的委托对事件进行接收。</para></block>
        <altmember cref="E:System.Web.UI.WebControls.DetailsView.ItemUpdated" />
        <altmember cref="T:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnItemUpdating">
      <MemberSignature Language="C#" Value="protected virtual void OnItemUpdating (System.Web.UI.WebControls.DetailsViewUpdateEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemUpdating(class System.Web.UI.WebControls.DetailsViewUpdateEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DetailsView.OnItemUpdating(System.Web.UI.WebControls.DetailsViewUpdateEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnItemUpdating (e As DetailsViewUpdateEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnItemUpdating(System::Web::UI::WebControls::DetailsViewUpdateEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnItemUpdating : System.Web.UI.WebControls.DetailsViewUpdateEventArgs -&gt; unit&#xA;override this.OnItemUpdating : System.Web.UI.WebControls.DetailsViewUpdateEventArgs -&gt; unit" Usage="detailsView.OnItemUpdating e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.DetailsViewUpdateEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件数据的 <see cref="T:System.Web.UI.WebControls.DetailsViewUpdateEventArgs" />。</param>
        <summary>引发 <see cref="E:System.Web.UI.WebControls.DetailsView.ItemUpdating" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 此 <xref:System.Web.UI.WebControls.DetailsView.OnItemUpdating%2A> 方法由 <xref:System.Web.UI.WebControls.DetailsView> 控件调用以引发 <xref:System.Web.UI.WebControls.DetailsView.ItemUpdating> 事件。 在扩展类时，控件开发人员通常会使用此方法 <xref:System.Web.UI.WebControls.DetailsView> 。

 <xref:System.Web.UI.WebControls.DetailsView.OnItemUpdating%2A> 方法还允许派生类对事件进行处理而不必附加委托。 这是在派生类中处理事件的首选技术。

 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">没有 <see cref="E:System.Web.UI.WebControls.DetailsView.ItemUpdating" /> 事件的处理程序。</exception>
        <block subset="none" type="overrides"><para>在派生类中重写 <see cref="M:System.Web.UI.WebControls.DetailsView.OnItemUpdating(System.Web.UI.WebControls.DetailsViewUpdateEventArgs)" /> 时，一定要调用基类的 <see cref="M:System.Web.UI.WebControls.DetailsView.OnItemUpdating(System.Web.UI.WebControls.DetailsViewUpdateEventArgs)" /> 方法，以便已注册的委托对事件进行接收。</para></block>
        <altmember cref="E:System.Web.UI.WebControls.DetailsView.ItemUpdating" />
        <altmember cref="T:System.Web.UI.WebControls.DetailsViewUpdateEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnModeChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnModeChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnModeChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DetailsView.OnModeChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnModeChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnModeChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnModeChanged : EventArgs -&gt; unit&#xA;override this.OnModeChanged : EventArgs -&gt; unit" Usage="detailsView.OnModeChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件数据的 <see cref="T:System.EventArgs" />。</param>
        <summary>引发 <see cref="E:System.Web.UI.WebControls.DetailsView.ModeChanged" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 此 <xref:System.Web.UI.WebControls.DetailsView.OnModeChanged%2A> 方法由 <xref:System.Web.UI.WebControls.DetailsView> 控件调用以引发 <xref:System.Web.UI.WebControls.DetailsView.ModeChanged> 事件。 在扩展类时，控件开发人员通常会使用此方法 <xref:System.Web.UI.WebControls.DetailsView> 。

 <xref:System.Web.UI.WebControls.DetailsView.OnModeChanged%2A> 方法还允许派生类对事件进行处理而不必附加委托。 这是在派生类中处理事件的首选技术。

 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>在派生类中重写 <see cref="M:System.Web.UI.WebControls.DetailsView.OnModeChanged(System.EventArgs)" /> 时，一定要调用基类的 <see cref="M:System.Web.UI.WebControls.DetailsView.OnModeChanged(System.EventArgs)" /> 方法，以便已注册的委托对事件进行接收。</para></block>
        <altmember cref="E:System.Web.UI.WebControls.DetailsView.ModeChanged" />
        <altmember cref="T:System.EventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnModeChanging">
      <MemberSignature Language="C#" Value="protected virtual void OnModeChanging (System.Web.UI.WebControls.DetailsViewModeEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnModeChanging(class System.Web.UI.WebControls.DetailsViewModeEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DetailsView.OnModeChanging(System.Web.UI.WebControls.DetailsViewModeEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnModeChanging (e As DetailsViewModeEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnModeChanging(System::Web::UI::WebControls::DetailsViewModeEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnModeChanging : System.Web.UI.WebControls.DetailsViewModeEventArgs -&gt; unit&#xA;override this.OnModeChanging : System.Web.UI.WebControls.DetailsViewModeEventArgs -&gt; unit" Usage="detailsView.OnModeChanging e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.DetailsViewModeEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件数据的 <see cref="T:System.Web.UI.WebControls.DetailsViewModeEventArgs" />。</param>
        <summary>引发 <see cref="E:System.Web.UI.WebControls.DetailsView.ModeChanging" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 此 <xref:System.Web.UI.WebControls.DetailsView.OnModeChanging%2A> 方法由 <xref:System.Web.UI.WebControls.DetailsView> 控件调用以引发 <xref:System.Web.UI.WebControls.DetailsView.ModeChanging> 事件。 在扩展类时，控件开发人员通常会使用此方法 <xref:System.Web.UI.WebControls.DetailsView> 。

 <xref:System.Web.UI.WebControls.DetailsView.OnModeChanging%2A> 方法还允许派生类对事件进行处理而不必附加委托。 这是在派生类中处理事件的首选技术。

 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">没有 <see cref="E:System.Web.UI.WebControls.DetailsView.ModeChanging" /> 事件的处理程序。</exception>
        <block subset="none" type="overrides"><para>在派生类中重写 <see cref="M:System.Web.UI.WebControls.DetailsView.OnModeChanging(System.Web.UI.WebControls.DetailsViewModeEventArgs)" /> 时，一定要调用基类的 <see cref="M:System.Web.UI.WebControls.DetailsView.OnModeChanging(System.Web.UI.WebControls.DetailsViewModeEventArgs)" /> 方法，以便已注册的委托对事件进行接收。</para></block>
        <altmember cref="E:System.Web.UI.WebControls.DetailsView.ModeChanging" />
        <altmember cref="T:System.Web.UI.WebControls.DetailsViewModeEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnPageIndexChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnPageIndexChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPageIndexChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DetailsView.OnPageIndexChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPageIndexChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPageIndexChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPageIndexChanged : EventArgs -&gt; unit&#xA;override this.OnPageIndexChanged : EventArgs -&gt; unit" Usage="detailsView.OnPageIndexChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件数据的 <see cref="T:System.EventArgs" />。</param>
        <summary>引发 <see cref="E:System.Web.UI.WebControls.DetailsView.PageIndexChanged" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 此 <xref:System.Web.UI.WebControls.DetailsView.OnPageIndexChanged%2A> 方法由 <xref:System.Web.UI.WebControls.DetailsView> 控件调用以引发 <xref:System.Web.UI.WebControls.DetailsView.PageIndexChanged> 事件。 在扩展类时，控件开发人员通常会使用此方法 <xref:System.Web.UI.WebControls.DetailsView> 。

 引发事件时，将通过委托调用事件处理程序。 有关详细信息，请参阅 [处理和引发事件](/dotnet/standard/events/)。

 <xref:System.Web.UI.WebControls.DetailsView.OnPageIndexChanged%2A> 方法还允许派生类对事件进行处理而不必附加委托。 这是在派生类中处理事件的首选技术。

 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>在派生类中重写 <see cref="M:System.Web.UI.WebControls.DetailsView.OnPageIndexChanged(System.EventArgs)" /> 时，一定要调用基类的 <see cref="M:System.Web.UI.WebControls.DetailsView.OnPageIndexChanged(System.EventArgs)" /> 方法，以便已注册的委托对事件进行接收。</para></block>
        <altmember cref="E:System.Web.UI.WebControls.DetailsView.PageIndexChanged" />
        <altmember cref="T:System.EventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnPageIndexChanging">
      <MemberSignature Language="C#" Value="protected virtual void OnPageIndexChanging (System.Web.UI.WebControls.DetailsViewPageEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPageIndexChanging(class System.Web.UI.WebControls.DetailsViewPageEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DetailsView.OnPageIndexChanging(System.Web.UI.WebControls.DetailsViewPageEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPageIndexChanging (e As DetailsViewPageEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPageIndexChanging(System::Web::UI::WebControls::DetailsViewPageEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPageIndexChanging : System.Web.UI.WebControls.DetailsViewPageEventArgs -&gt; unit&#xA;override this.OnPageIndexChanging : System.Web.UI.WebControls.DetailsViewPageEventArgs -&gt; unit" Usage="detailsView.OnPageIndexChanging e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.DetailsViewPageEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件数据的 <see cref="T:System.Web.UI.WebControls.DetailsViewPageEventArgs" />。</param>
        <summary>引发 <see cref="E:System.Web.UI.WebControls.DetailsView.PageIndexChanging" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 此 <xref:System.Web.UI.WebControls.DetailsView.OnPageIndexChanging%2A> 方法由 <xref:System.Web.UI.WebControls.DetailsView> 控件调用以引发 <xref:System.Web.UI.WebControls.DetailsView.PageIndexChanging> 事件。 在扩展类时，控件开发人员通常会使用此方法 <xref:System.Web.UI.WebControls.DetailsView> 。

 引发事件时，将通过委托调用事件处理程序。 有关详细信息，请参阅 [处理和引发事件](/dotnet/standard/events/)。

 <xref:System.Web.UI.WebControls.DetailsView.OnPageIndexChanging%2A> 方法还允许派生类对事件进行处理而不必附加委托。 这是在派生类中处理事件的首选技术。

 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">此方法在 <see cref="T:System.Web.UI.WebControls.DetailsView" /> 控件未绑定到数据源控件、未取消分页操作以及事件处理程序没有为事件注册时调用。</exception>
        <block subset="none" type="overrides"><para>在派生类中重写 <see cref="M:System.Web.UI.WebControls.DetailsView.OnPageIndexChanging(System.Web.UI.WebControls.DetailsViewPageEventArgs)" /> 时，一定要调用基类的 <see cref="M:System.Web.UI.WebControls.DetailsView.OnPageIndexChanging(System.Web.UI.WebControls.DetailsViewPageEventArgs)" /> 方法，以便已注册的委托对事件进行接收。</para></block>
        <altmember cref="E:System.Web.UI.WebControls.DetailsView.PageIndexChanging" />
        <altmember cref="T:System.Web.UI.WebControls.DetailsViewPageEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnPagePreLoad">
      <MemberSignature Language="C#" Value="protected override void OnPagePreLoad (object sender, EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnPagePreLoad(object sender, class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DetailsView.OnPagePreLoad(System.Object,System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnPagePreLoad (sender As Object, e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnPagePreLoad(System::Object ^ sender, EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnPagePreLoad : obj * EventArgs -&gt; unit" Usage="detailsView.OnPagePreLoad (sender, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="sender">引发事件的 <see cref="T:System.Web.UI.Page" />。</param>
        <param name="e">包含事件数据的 <see cref="T:System.EventArgs" />。</param>
        <summary>在加载数据绑定控件之前设置该控件的初始化状态。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.DetailsView.OnPagePreLoad%2A>方法用于控制在页的生命周期内何时发生数据绑定。 它通过设置数据绑定控件的内部初始化状态来实现此功能。 由于控件的已初始化状态是在 <xref:System.Web.UI.Page.PreLoad> 页面生命周期的阶段中设置的，因此 <xref:System.Web.UI.WebControls.DataBoundControl.OnDataPropertyChanged%2A> 只要在该阶段后更改控件的数据属性，就会调用事件处理程序，以指示控件在呈现之前必须重新绑定到其数据。

 当 <xref:System.Web.UI.WebControls.DetailsView.OnPagePreLoad%2A> <xref:System.Web.UI.WebControls.DetailsView> <xref:System.Web.UI.WebControls.BaseDataBoundControl.RequiresDataBinding%2A> `true` HTTP 请求为回发但启用了视图状态但尚未绑定数据绑定控件时，类会重写方法，以将属性设置为。 此方案常见于控件（如 <xref:System.Web.UI.WebControls.Wizard> 和）中 <xref:System.Web.UI.WebControls.MultiView> ，在运行时更改控件的可见性。

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.DataBoundControl" />
        <altmember cref="N:System.Web.UI.WebControls" />
        <altmember cref="P:System.Web.UI.WebControls.BaseDataBoundControl.RequiresDataBinding" />
      </Docs>
    </Member>
    <Member MemberName="OnPreRender">
      <MemberSignature Language="C#" Value="protected internal override void OnPreRender (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnPreRender(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DetailsView.OnPreRender(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnPreRender (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnPreRender(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnPreRender : EventArgs -&gt; unit" Usage="detailsView.OnPreRender e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件数据的 <see cref="T:System.EventArgs" />。</param>
        <summary>引发 <see cref="E:System.Web.UI.Control.PreRender" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 此方法通知服务器控件在保存视图状态和呈现内容之前执行任何必需的预呈现步骤。 在扩展类时，控件开发人员通常会使用此方法 <xref:System.Web.UI.WebControls.DetailsView> 。

 <xref:System.Web.UI.WebControls.DetailsView.OnPreRender%2A> 方法还允许派生类对事件进行处理而不必附加委托。 这是在派生类中处理事件的首选技术。

 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>在派生类中重写 <see cref="M:System.Web.UI.WebControls.DetailsView.OnPreRender(System.EventArgs)" /> 时，一定要调用基类的 <see cref="M:System.Web.UI.WebControls.DetailsView.OnPreRender(System.EventArgs)" /> 方法，以便已注册的委托对事件进行接收。</para></block>
        <altmember cref="E:System.Web.UI.Control.PreRender" />
        <altmember cref="T:System.EventArgs" />
      </Docs>
    </Member>
    <Member MemberName="PageCount">
      <MemberSignature Language="C#" Value="public virtual int PageCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PageCount" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DetailsView.PageCount" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property PageCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int PageCount { int get(); };" />
      <MemberSignature Language="F#" Value="member this.PageCount : int" Usage="System.Web.UI.WebControls.DetailsView.PageCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取数据源中的记录数。</summary>
        <value>数据源中的记录数。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 如果 <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataSource%2A> 属性为 `null` ， `0` 则返回。

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PageIndex">
      <MemberSignature Language="C#" Value="public virtual int PageIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PageIndex" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DetailsView.PageIndex" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property PageIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int PageIndex { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.PageIndex : int with get, set" Usage="System.Web.UI.WebControls.DetailsView.PageIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Bindable(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Bindable(true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(0)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(0)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置所显示的记录的索引。</summary>
        <value>正从基础数据源显示在 <see cref="T:System.Web.UI.WebControls.DetailsView" /> 控件中的数据项的从零开始的索引。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 启用分页功能后 (当 <xref:System.Web.UI.WebControls.DetailsView.AllowPaging%2A> 属性设置为 `true`) 时，请使用 <xref:System.Web.UI.WebControls.DetailsView.PageIndex%2A> 属性来确定当前显示的记录的索引。 还可以使用此属性以编程方式更改显示的记录。

> [!NOTE]
>  启用分页功能后，还可以使用此属性来确定所显示记录的页码;但请注意，此属性是从零开始的。

 若要确定数据源中的总项数，请使用 <xref:System.Web.UI.WebControls.DetailsView.PageCount%2A> 属性。

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">选定值小于 <see langword="-1" />。</exception>
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.BottomPagerRow" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.PageCount" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.PagerSettings" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.PagerStyle" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.PagerTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.TopPagerRow" />
        <altmember cref="E:System.Web.UI.WebControls.DetailsView.PageIndexChanged" />
        <altmember cref="E:System.Web.UI.WebControls.DetailsView.PageIndexChanging" />
      </Docs>
    </Member>
    <Member MemberName="PageIndexChanged">
      <MemberSignature Language="C#" Value="public event EventHandler PageIndexChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler PageIndexChanged" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.DetailsView.PageIndexChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PageIndexChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ PageIndexChanged;" />
      <MemberSignature Language="F#" Value="member this.PageIndexChanged : EventHandler " Usage="member this.PageIndexChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>当 <see cref="P:System.Web.UI.WebControls.DetailsView.PageIndex" /> 属性的值在分页操作后更改时发生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.DetailsView> <xref:System.Web.UI.WebControls.DetailsView.PageIndexChanged> 当页导航按钮 (在 `CommandName` 控件中 ) 属性设置为 "Page" 的按钮时，控件将引发事件，但在 <xref:System.Web.UI.WebControls.DetailsView> 控件处理分页操作之后。 这使你可以提供一个事件处理程序，该事件处理程序将在每次发生此事件时执行自定义例程。

> [!NOTE]
>  以编程方式设置该属性时，不会引发此事件 <xref:System.Web.UI.WebControls.DetailsView.PageIndex%2A> 。

 页导航按钮通常位于控件的页导航行中 <xref:System.Web.UI.WebControls.DetailsView> 。 此事件通常用于使 <xref:System.Web.UI.WebControls.DetailsView> 控件与控件同步， <xref:System.Web.UI.WebControls.GridView> 或 <xref:System.Web.UI.WebControls.DetailsView> 在分页操作后设置控件的行为。

 有关如何处理事件的详细信息，请参阅 [处理和引发事件](/dotnet/standard/events/)。



## Examples
 下面的代码示例演示了 <xref:System.Web.UI.WebControls.DetailsView.PageIndexChanged> <xref:System.Web.UI.WebControls.DetailsView> 当用户导航到另一条记录时，如何使用事件将返回到只读模式。

 [!code-aspx-csharp[DetailsViewChangeMode#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DetailsViewChangeMode/CS/detailsviewchangemodecs.aspx#1)]
 [!code-aspx-vb[DetailsViewChangeMode#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DetailsViewChangeMode/VB/detailsviewchangemodevb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.EventArgs" />
        <altmember cref="T:System.EventHandler" />
        <altmember cref="M:System.Web.UI.WebControls.DetailsView.OnPageIndexChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="PageIndexChanging">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.DetailsViewPageEventHandler PageIndexChanging;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.DetailsViewPageEventHandler PageIndexChanging" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.DetailsView.PageIndexChanging" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PageIndexChanging As DetailsViewPageEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::DetailsViewPageEventHandler ^ PageIndexChanging;" />
      <MemberSignature Language="F#" Value="member this.PageIndexChanging : System.Web.UI.WebControls.DetailsViewPageEventHandler " Usage="member this.PageIndexChanging : System.Web.UI.WebControls.DetailsViewPageEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DetailsViewPageEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>当 <see cref="P:System.Web.UI.WebControls.DetailsView.PageIndex" /> 属性的值在分页操作前更改时发生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.DetailsView> <xref:System.Web.UI.WebControls.DetailsView.PageIndexChanging> 当页导航按钮 (`CommandName` 控件中 ) 属性设置为 "Page" 的按钮时，但在 <xref:System.Web.UI.WebControls.DetailsView> 控件处理分页操作之前，控件引发事件。 这使你可以提供一个事件处理程序，该事件处理程序会在每次发生此事件时执行自定义例程，如取消分页操作。

> [!NOTE]
>  以编程方式设置该属性时，不会引发此事件 <xref:System.Web.UI.WebControls.DetailsView.PageIndex%2A> 。

 页导航按钮通常位于控件的页导航行中 <xref:System.Web.UI.WebControls.DetailsView> 。

 <xref:System.Web.UI.WebControls.DetailsViewPageEventArgs>对象传递到事件处理程序，该处理程序允许您确定用户选择的页的索引，并指示应取消分页操作。 若要确定用户选择的页的索引，请使用 <xref:System.Web.UI.WebControls.DetailsViewPageEventArgs.NewPageIndex%2A> 属性。 若要取消分页操作，请将 <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> 对象的属性设置 <xref:System.Web.UI.WebControls.DetailsViewPageEventArgs> 为 `true` 。

 有关如何处理事件的详细信息，请参阅 [处理和引发事件](/dotnet/standard/events/)。



## Examples
 下面的代码示例演示如何使用 <xref:System.Web.UI.WebControls.DetailsView.PageIndexChanging> 事件取消分页操作。

 [!code-aspx-csharp[DetailsViewCurrentMode#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DetailsViewCurrentMode/CS/detailsviewcurrentmodecs.aspx#1)]
 [!code-aspx-vb[DetailsViewCurrentMode#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DetailsViewCurrentMode/VB/detailsviewcurrentmodevb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.DetailsViewPageEventArgs" />
        <altmember cref="P:System.ComponentModel.CancelEventArgs.Cancel" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsViewPageEventArgs.NewPageIndex" />
        <altmember cref="M:System.Web.UI.WebControls.DetailsView.OnPageIndexChanging(System.Web.UI.WebControls.DetailsViewPageEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="PagerSettings">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.PagerSettings PagerSettings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.PagerSettings PagerSettings" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DetailsView.PagerSettings" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property PagerSettings As PagerSettings" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::PagerSettings ^ PagerSettings { System::Web::UI::WebControls::PagerSettings ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PagerSettings : System.Web.UI.WebControls.PagerSettings" Usage="System.Web.UI.WebControls.DetailsView.PagerSettings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.NotifyParentProperty(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.NotifyParentProperty(true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.PagerSettings</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个对 <see cref="T:System.Web.UI.WebControls.PagerSettings" /> 对象的引用，使用该对象可以设置 <see cref="T:System.Web.UI.WebControls.DetailsView" /> 控件中的页导航按钮的属性。</summary>
        <value>一个对 <see cref="T:System.Web.UI.WebControls.PagerSettings" /> 的引用，使用该对象可以设置 <see cref="T:System.Web.UI.WebControls.DetailsView" /> 控件中的页导航按钮的属性。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 使用 <xref:System.Web.UI.WebControls.DetailsView.PagerSettings%2A> 属性可控制控件中页导航行的设置 <xref:System.Web.UI.WebControls.DetailsView> 。 如果启用分页功能，则会显示页导航行 (通过将 <xref:System.Web.UI.WebControls.DetailsView.AllowPaging%2A> 属性设置为 `true`) 并包含允许用户导航到控件中不同记录的控件。 此属性是只读的;但是，您可以设置 <xref:System.Web.UI.WebControls.PagerSettings> 它返回的对象的属性。 可以在窗体中以声明方式设置这些属性 `Property-Subproperty` ，其中 `Subproperty` 是对象的属性 <xref:System.Web.UI.WebControls.PagerSettings> (例如 `PagerSetting-Mode`) 。 还可以以编程方式设置属性 `Property.Subproperty` ， (例如 `PagerSetting.Mode`) 。 常见设置通常包括页导航行的显示模式以及导航控件的自定义文本或图像。



## Examples
 下面的代码示例演示如何使用 <xref:System.Web.UI.WebControls.DetailsView.PagerSettings%2A> 属性指定页导航行的属性。

 [!code-aspx-csharp[DetailsViewPagerTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DetailsViewPagerTemplate/CS/detailsviewpagertemplatecs.aspx#1)]
 [!code-aspx-vb[DetailsViewPagerTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DetailsViewPagerTemplate/VB/detailsviewpagertemplatevb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.PagerSettings" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.AllowPaging" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.PagerStyle" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.PagerTemplate" />
      </Docs>
    </Member>
    <Member MemberName="PagerStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle PagerStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle PagerStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DetailsView.PagerStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PagerStyle As TableItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TableItemStyle ^ PagerStyle { System::Web::UI::WebControls::TableItemStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PagerStyle : System.Web.UI.WebControls.TableItemStyle" Usage="System.Web.UI.WebControls.DetailsView.PagerStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.NotifyParentProperty(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.NotifyParentProperty(true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个对 <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> 对象的引用，使用该对象可以设置 <see cref="T:System.Web.UI.WebControls.DetailsView" /> 控件中的页导航行的外观。</summary>
        <value>一个对 <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> 的引用，该对象表示 <see cref="T:System.Web.UI.WebControls.DetailsView" /> 控件中页导航行的样式。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 使用 <xref:System.Web.UI.WebControls.DetailsView.PagerStyle%2A> 属性可控制控件中页导航行的外观 <xref:System.Web.UI.WebControls.DetailsView> 。 如果启用分页功能，则会显示页导航行 (通过将 <xref:System.Web.UI.WebControls.DetailsView.AllowPaging%2A> 属性设置为 `true`) 并包含允许用户导航到控件中的不同页面的控件。 此属性是只读的;但是，您可以设置 <xref:System.Web.UI.WebControls.TableItemStyle> 它返回的对象的属性。 可以在窗体中以声明方式设置这些属性 `Property-Subproperty` ，其中 `Subproperty` 是对象的属性 <xref:System.Web.UI.WebControls.TableItemStyle> (例如 `PagerStyle-ForeColor`) 。 还可以以编程方式设置属性 `Property.Subproperty` ， (例如 `PagerStyle.ForeColor`) 。 常见设置通常包括自定义背景色、前景色和字体属性。



## Examples
 下面的代码示例演示如何使用 <xref:System.Web.UI.WebControls.DetailsView.PagerStyle%2A> 属性指定页导航行的字体和样式设置。

 [!code-aspx-csharp[DetailsViewPagerTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DetailsViewPagerTemplate/CS/detailsviewpagertemplatecs.aspx#1)]
 [!code-aspx-vb[DetailsViewPagerTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DetailsViewPagerTemplate/VB/detailsviewpagertemplatevb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TableItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.AllowPaging" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.PagerSettings" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.PagerTemplate" />
      </Docs>
    </Member>
    <Member MemberName="PagerTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate PagerTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate PagerTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DetailsView.PagerTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property PagerTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ PagerTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PagerTemplate : System.Web.UI.ITemplate with get, set" Usage="System.Web.UI.WebControls.DetailsView.PagerTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(null)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(null)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.DetailsView))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.DetailsView))&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置 <see cref="T:System.Web.UI.WebControls.DetailsView" /> 控件中页导航行的自定义内容。</summary>
        <value>一个 <see cref="T:System.Web.UI.ITemplate" />，包含页导航行的自定义内容。 默认值为 null，表示未设置此属性。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.DetailsView> (通过将 <xref:System.Web.UI.WebControls.DetailsView.AllowPaging%2A> 属性设置为 true) 启用分页功能时，将在控件中显示页导航行。 页导航行包含允许用户导航到控件中的不同页的控件。 您可以使用属性定义您自己的 UI，而不是使用内置的页导航行用户界面)  (UI <xref:System.Web.UI.WebControls.DetailsView.PagerTemplate%2A> 。 若要为页导航行指定自定义模板，请先 `<PagerTemplate>` 在控件的开始和结束标记之间放置标记 <xref:System.Web.UI.WebControls.DetailsView> 。 然后，你可以在开始标记和结束标记之间列出模板的内容 `<PagerTemplate>` 。 若要控制页导航行的外观，请使用 <xref:System.Web.UI.WebControls.DetailsView.PagerStyle%2A> 属性。



## Examples
 下面的代码示例演示如何使用 <xref:System.Web.UI.WebControls.DetailsView.PagerTemplate%2A> 属性创建自定义页导航行。

 [!code-aspx-csharp[DetailsViewPagerTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DetailsViewPagerTemplate/CS/detailsviewpagertemplatecs.aspx#1)]
 [!code-aspx-vb[DetailsViewPagerTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DetailsViewPagerTemplate/VB/detailsviewpagertemplatevb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.ITemplate" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.AllowPaging" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.PagerSettings" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.PagerStyle" />
      </Docs>
    </Member>
    <Member MemberName="PerformDataBinding">
      <MemberSignature Language="C#" Value="protected internal override void PerformDataBinding (System.Collections.IEnumerable data);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void PerformDataBinding(class System.Collections.IEnumerable data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DetailsView.PerformDataBinding(System.Collections.IEnumerable)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub PerformDataBinding (data As IEnumerable)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void PerformDataBinding(System::Collections::IEnumerable ^ data);" />
      <MemberSignature Language="F#" Value="override this.PerformDataBinding : System.Collections.IEnumerable -&gt; unit" Usage="detailsView.PerformDataBinding data" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Collections.IEnumerable" />
      </Parameters>
      <Docs>
        <param name="data">一个表示数据源的 <see cref="T:System.Collections.IEnumerable" />。</param>
        <summary>将指定数据源绑定到 <see cref="T:System.Web.UI.WebControls.DetailsView" /> 控件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.DetailsView.PerformDataBinding%2A>方法是一个由控件调用的帮助器方法 <xref:System.Web.UI.WebControls.DetailsView> ，用于将指定的数据源绑定到控件。

 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IEnumerable" />
      </Docs>
    </Member>
    <Member MemberName="PrepareControlHierarchy">
      <MemberSignature Language="C#" Value="protected internal virtual void PrepareControlHierarchy ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void PrepareControlHierarchy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DetailsView.PrepareControlHierarchy" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub PrepareControlHierarchy ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void PrepareControlHierarchy();" />
      <MemberSignature Language="F#" Value="abstract member PrepareControlHierarchy : unit -&gt; unit&#xA;override this.PrepareControlHierarchy : unit -&gt; unit" Usage="detailsView.PrepareControlHierarchy " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>设置 <see cref="T:System.Web.UI.WebControls.DetailsView" /> 控件的控件层次结构。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.DetailsView.PrepareControlHierarchy%2A>方法是一个帮助器方法，该方法由 <xref:System.Web.UI.WebControls.DetailsView> 控件调用，用于在呈现控件之前在控件中设置控件层次结构 <xref:System.Web.UI.WebControls.DetailsView> 。

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RaiseCallbackEvent">
      <MemberSignature Language="C#" Value="protected virtual void RaiseCallbackEvent (string eventArgument);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void RaiseCallbackEvent(string eventArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DetailsView.RaiseCallbackEvent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub RaiseCallbackEvent (eventArgument As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void RaiseCallbackEvent(System::String ^ eventArgument);" />
      <MemberSignature Language="F#" Value="abstract member RaiseCallbackEvent : string -&gt; unit&#xA;override this.RaiseCallbackEvent : string -&gt; unit" Usage="detailsView.RaiseCallbackEvent eventArgument" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventArgument">要传递给事件处理程序的参数。</param>
        <summary>为 <see cref="Overload:System.Web.UI.ClientScriptManager.GetCallbackEventReference" /> 方法中的回调处理程序创建参数。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.DetailsView.RaiseCallbackEvent%2A>方法是一个帮助器方法，该方法由 <xref:System.Web.UI.WebControls.DetailsView> 控件用于在方法中创建回调处理程序的参数 <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> 。

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RaisePostBackEvent">
      <MemberSignature Language="C#" Value="protected virtual void RaisePostBackEvent (string eventArgument);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void RaisePostBackEvent(string eventArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DetailsView.RaisePostBackEvent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub RaisePostBackEvent (eventArgument As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void RaisePostBackEvent(System::String ^ eventArgument);" />
      <MemberSignature Language="F#" Value="abstract member RaisePostBackEvent : string -&gt; unit&#xA;override this.RaisePostBackEvent : string -&gt; unit" Usage="detailsView.RaisePostBackEvent eventArgument" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventArgument">为引发的一个或多个事件创建 <see cref="T:System.Web.UI.WebControls.CommandEventArgs" /> 时所使用的事件参数。</param>
        <summary>当 <see cref="T:System.Web.UI.WebControls.DetailsView" /> 控件回发到服务器时引发此控件的合适的事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.DetailsView.RaisePostBackEvent%2A>当发生引发控件的相应事件的回发事件时，页面将调用方法 <xref:System.Web.UI.WebControls.DetailsView> 。 此调用发生在加载并更改通知完成之后、进行预呈现之前的页面生命周期中。 实现此方法是为了为 <xref:System.Web.UI.WebControls.CommandEventArgs> 引发的事件创建对象。

> [!NOTE]
>  此方法主要由控件开发人员用来扩展 <xref:System.Web.UI.WebControls.DetailsView> 控件。

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.CommandEventArgs" />
        <altmember cref="T:System.Web.UI.IPostBackEventHandler" />
        <altmember cref="M:System.Web.UI.Page.RaisePostBackEvent(System.Web.UI.IPostBackEventHandler,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="protected internal override void Render (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Render(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DetailsView.Render(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub Render (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void Render(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.Render : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="detailsView.Render writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">一个 <see cref="T:System.Web.UI.HtmlTextWriter" />，其中包含要在客户端上呈现内容的输出流。</param>
        <summary>使用指定的 <see cref="T:System.Web.UI.WebControls.DetailsView" /> 对象在客户端上显示 <see cref="T:System.Web.UI.HtmlTextWriter" /> 控件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.DetailsView.Render%2A>方法用于使用指定的对象将服务器控件内容呈现到客户端的浏览器 <xref:System.Web.UI.HtmlTextWriter> 。

 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Control.Render(System.Web.UI.HtmlTextWriter)" />
      </Docs>
    </Member>
    <Member MemberName="Rows">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.DetailsViewRowCollection Rows { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.DetailsViewRowCollection Rows" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DetailsView.Rows" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Rows As DetailsViewRowCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::DetailsViewRowCollection ^ Rows { System::Web::UI::WebControls::DetailsViewRowCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Rows : System.Web.UI.WebControls.DetailsViewRowCollection" Usage="System.Web.UI.WebControls.DetailsView.Rows" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DetailsViewRowCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取表示 <see cref="T:System.Web.UI.WebControls.DetailsViewRow" /> 控件中数据行的 <see cref="T:System.Web.UI.WebControls.DetailsView" /> 对象的集合。</summary>
        <value>一个 <see cref="T:System.Web.UI.WebControls.DetailsViewRowCollection" />，包含 <see cref="T:System.Web.UI.WebControls.DetailsView" /> 控件中的所有数据行。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.DetailsView.Rows%2A>属性 (集合) 用于存储控件中的数据行 <xref:System.Web.UI.WebControls.DetailsView> 。 <xref:System.Web.UI.WebControls.DetailsView>控件 <xref:System.Web.UI.WebControls.DetailsView.Rows%2A> 通过 <xref:System.Web.UI.WebControls.DetailsViewRow> 为数据源中的每个记录创建一个对象，然后将该对象添加到集合中，自动填充该集合。 此属性通常用于访问控件中的特定行或循环访问整个行集合。

> [!NOTE]
>  只有数据行存储在集合中 <xref:System.Web.UI.WebControls.DetailsView.Rows%2A> 。 <xref:System.Web.UI.WebControls.DetailsViewRow>表示页眉、页脚和页导航行的对象不包含在集合中。



## Examples
 下面的代码示例演示如何使用 <xref:System.Web.UI.WebControls.DetailsView.Rows%2A> 属性访问控件中的数据行 <xref:System.Web.UI.WebControls.DetailsView> 。 数据行用于从控件检索字段的值 <xref:System.Web.UI.WebControls.DetailsView> 。

 [!code-aspx-csharp[DetailsViewItemCommand#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DetailsViewItemCommand/CS/detailsviewitemcommandcs.aspx#1)]
 [!code-aspx-vb[DetailsViewItemCommand#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DetailsViewItemCommand/VB/detailsviewitemcommandvb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.DetailsViewRow" />
        <altmember cref="T:System.Web.UI.WebControls.DetailsViewRowCollection" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.Fields" />
      </Docs>
    </Member>
    <Member MemberName="RowsGenerator">
      <MemberSignature Language="C#" Value="public System.Web.UI.IAutoFieldGenerator RowsGenerator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.IAutoFieldGenerator RowsGenerator" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DetailsView.RowsGenerator" />
      <MemberSignature Language="VB.NET" Value="Public Property RowsGenerator As IAutoFieldGenerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::IAutoFieldGenerator ^ RowsGenerator { System::Web::UI::IAutoFieldGenerator ^ get(); void set(System::Web::UI::IAutoFieldGenerator ^ value); };" />
      <MemberSignature Language="F#" Value="member this.RowsGenerator : System.Web.UI.IAutoFieldGenerator with get, set" Usage="System.Web.UI.WebControls.DetailsView.RowsGenerator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.IAutoFieldGenerator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个对象，该对象实现 <see cref="T:System.Web.UI.IAutoFieldGenerator" /> 接口，以便自动填充视图中的行。</summary>
        <value>实现 <see cref="T:System.Web.UI.IAutoFieldGenerator" /> 接口的对象。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RowStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle RowStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle RowStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DetailsView.RowStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RowStyle As TableItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TableItemStyle ^ RowStyle { System::Web::UI::WebControls::TableItemStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RowStyle : System.Web.UI.WebControls.TableItemStyle" Usage="System.Web.UI.WebControls.DetailsView.RowStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(null)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(null)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.NotifyParentProperty(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.NotifyParentProperty(true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取对 <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> 对象的引用，该对象允许您设置 <see cref="T:System.Web.UI.WebControls.DetailsView" /> 控件中的数据行的外观。</summary>
        <value>一个对 <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> 的引用，该对象表示 <see cref="T:System.Web.UI.WebControls.DetailsView" /> 控件中的数据行的样式。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 使用 <xref:System.Web.UI.WebControls.DetailsView.RowStyle%2A> 属性可控制控件中的数据行的外观 <xref:System.Web.UI.WebControls.DetailsView> 。 如果 <xref:System.Web.UI.WebControls.DetailsView.AlternatingRowStyle%2A> 同时设置了属性，则会在 <xref:System.Web.UI.WebControls.DetailsView.RowStyle%2A> 设置和设置之间交替显示数据行 <xref:System.Web.UI.WebControls.DetailsView.AlternatingRowStyle%2A> 。 此属性是只读的;但是，您可以设置 <xref:System.Web.UI.WebControls.TableItemStyle> 它返回的对象的属性。 可以在窗体中以声明方式设置这些属性 `Property-Subproperty` ，其中 `Subproperty` 是对象的属性 <xref:System.Web.UI.WebControls.TableItemStyle> (例如 `RowStyle-ForeColor`) 。 还可以以编程方式设置属性 `Property.Subproperty` ， (例如 `RowStyle.ForeColor`) 。 常见设置通常包括自定义背景色、前景色和字体属性。



## Examples
 下面的代码示例演示如何使用 <xref:System.Web.UI.WebControls.DetailsView.RowStyle%2A> 属性指定控件中的数据行的字体和样式设置 <xref:System.Web.UI.WebControls.DetailsView> 。

 [!code-aspx-csharp[DetailsViewRowStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DetailsViewRowStyle/CS/detailsviewrowstylecs.aspx#1)]
 [!code-aspx-vb[DetailsViewRowStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DetailsViewRowStyle/VB/detailsviewrowstylevb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TableItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.AlternatingRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.CommandRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.EditRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.EmptyDataRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.FooterStyle" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.FieldHeaderStyle" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.HeaderStyle" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.InsertRowStyle" />
      </Docs>
    </Member>
    <Member MemberName="SaveControlState">
      <MemberSignature Language="C#" Value="protected internal override object SaveControlState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance object SaveControlState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DetailsView.SaveControlState" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function SaveControlState () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override System::Object ^ SaveControlState();" />
      <MemberSignature Language="F#" Value="override this.SaveControlState : unit -&gt; obj" Usage="detailsView.SaveControlState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>保存 <see cref="T:System.Web.UI.WebControls.DetailsView" /> 控件中需要保留的属性的状态（即使在 <see cref="P:System.Web.UI.Control.EnableViewState" /> 属性设置为 <see langword="false" /> 时）。</summary>
        <returns>返回服务器控件的当前视图状态。 如果没有与该控件关联的视图状态，则此方法返回 <see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 此方法用于保存控件中需要保留的属性的状态 <xref:System.Web.UI.WebControls.DetailsView> （即使在 <xref:System.Web.UI.Control.EnableViewState%2A?displayProperty=nameWithType> 属性设置为时） `false` 。

> [!NOTE]
>  此方法主要由控件开发人员用来扩展 <xref:System.Web.UI.WebControls.DetailsView> 控件。

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.EnableViewState" />
      </Docs>
    </Member>
    <Member MemberName="SaveViewState">
      <MemberSignature Language="C#" Value="protected override object SaveViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance object SaveViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DetailsView.SaveViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function SaveViewState () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Object ^ SaveViewState();" />
      <MemberSignature Language="F#" Value="override this.SaveViewState : unit -&gt; obj" Usage="detailsView.SaveViewState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>保存 <see cref="T:System.Web.UI.WebControls.DetailsView" /> 控件的当前视图状态。</summary>
        <returns>它包含已保存的 <see cref="T:System.Object" /> 控件的状态的 <see cref="T:System.Web.UI.WebControls.DetailsView" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.DetailsView.SaveViewState%2A>方法是由控件调用的帮助器方法 <xref:System.Web.UI.WebControls.DetailsView> ，用于保存控件的状态。

 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Control.SaveViewState" />
      </Docs>
    </Member>
    <Member MemberName="SelectedValue">
      <MemberSignature Language="C#" Value="public object SelectedValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SelectedValue" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DetailsView.SelectedValue" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SelectedValue As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ SelectedValue { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectedValue : obj" Usage="System.Web.UI.WebControls.DetailsView.SelectedValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取 <see cref="T:System.Web.UI.WebControls.DetailsView" /> 控件中的当前记录的数据键值。</summary>
        <value><see cref="T:System.Web.UI.WebControls.DetailsView" /> 控件中的当前记录的数据键值。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 使用 <xref:System.Web.UI.WebControls.DetailsView.SelectedValue%2A> 属性可确定当前记录的数据键值。 若要检索 <xref:System.Web.UI.WebControls.DataKey?displayProperty=nameWithType> 表示记录的数据键的实际对象，请使用 <xref:System.Web.UI.WebControls.DetailsView.DataKey%2A> 属性。

 此属性是 <xref:System.Web.UI.WebControls.ControlParameter> 对象在运行时绑定到的默认属性。 有关详细信息，请参阅 <xref:System.Web.UI.ControlValuePropertyAttribute> 、 <xref:System.Web.UI.WebControls.ControlParameter> 和 [对数据源控件使用参数进行筛选](https://docs.microsoft.com/previous-versions/aspnet/xt50s8kz(v=vs.100))。



## Examples
 下面的代码示例演示如何使用 <xref:System.Web.UI.WebControls.DetailsView.SelectedValue%2A> 属性来确定当前记录的数据键值。

 [!code-aspx-csharp[DetailsViewSelectedValue#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DetailsViewSelectedValue/CS/detailsviewselectedvaluecs.aspx#1)]
 [!code-aspx-vb[DetailsViewSelectedValue#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DetailsViewSelectedValue/VB/detailsviewselectedvaluevb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.DataKey" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.DataKey" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.DataKeyNames" />
      </Docs>
    </Member>
    <Member MemberName="SetPageIndex">
      <MemberSignature Language="C#" Value="public void SetPageIndex (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetPageIndex(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DetailsView.SetPageIndex(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetPageIndex (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetPageIndex(int index);" />
      <MemberSignature Language="F#" Value="member this.SetPageIndex : int -&gt; unit" Usage="detailsView.SetPageIndex index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="index">要设置的索引值。</param>
        <summary>设置 <see cref="T:System.Web.UI.WebControls.DetailsView" /> 控件中当前显示页面的索引。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.ICallbackEventHandler.GetCallbackResult">
      <MemberSignature Language="C#" Value="string ICallbackEventHandler.GetCallbackResult ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.Web.UI.ICallbackEventHandler.GetCallbackResult() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DetailsView.System#Web#UI#ICallbackEventHandler#GetCallbackResult" />
      <MemberSignature Language="VB.NET" Value="Function GetCallbackResult () As String Implements ICallbackEventHandler.GetCallbackResult" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::String ^ System.Web.UI.ICallbackEventHandler.GetCallbackResult() = System::Web::UI::ICallbackEventHandler::GetCallbackResult;" />
      <MemberSignature Language="F#" Value="abstract member System.Web.UI.ICallbackEventHandler.GetCallbackResult : unit -&gt; string&#xA;override this.System.Web.UI.ICallbackEventHandler.GetCallbackResult : unit -&gt; string" Usage="detailsView.System.Web.UI.ICallbackEventHandler.GetCallbackResult " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.ICallbackEventHandler.GetCallbackResult</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>请参见 <see cref="M:System.Web.UI.WebControls.DetailsView.GetCallbackResult" /> 方法。</summary>
        <returns>回调的结果。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.DetailsView>控件实现 <xref:System.Web.UI.ICallbackEventHandler> 接口，并使用 <xref:System.Web.UI.WebControls.DetailsView.RaisePostBackEvent%2A> 来检索数据，并使用方法将检索到的 <xref:System.Web.UI.WebControls.DetailsView.GetCallbackResult%2A> 数据返回到控件。

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent">
      <MemberSignature Language="C#" Value="void ICallbackEventHandler.RaiseCallbackEvent (string eventArgument);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(string eventArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DetailsView.System#Web#UI#ICallbackEventHandler#RaiseCallbackEvent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Sub RaiseCallbackEvent (eventArgument As String) Implements ICallbackEventHandler.RaiseCallbackEvent" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System::String ^ eventArgument) = System::Web::UI::ICallbackEventHandler::RaiseCallbackEvent;" />
      <MemberSignature Language="F#" Value="abstract member System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent : string -&gt; unit&#xA;override this.System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent : string -&gt; unit" Usage="detailsView.System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent eventArgument" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventArgument">事件自变量。</param>
        <summary>使用指定参数引发回调事件。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IDataItemContainer.DataItemIndex">
      <MemberSignature Language="C#" Value="int System.Web.UI.IDataItemContainer.DataItemIndex { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 System.Web.UI.IDataItemContainer.DataItemIndex" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DetailsView.System#Web#UI#IDataItemContainer#DataItemIndex" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property DataItemIndex As Integer Implements IDataItemContainer.DataItemIndex" />
      <MemberSignature Language="C++ CLI" Value="property int System::Web::UI::IDataItemContainer::DataItemIndex { int get(); };" />
      <MemberSignature Language="F#" Value="member this.System.Web.UI.IDataItemContainer.DataItemIndex : int" Usage="System.Web.UI.IDataItemContainer.DataItemIndex" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.IDataItemContainer.DataItemIndex</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>有关此成员的说明，请参见 <see cref="P:System.Web.UI.WebControls.DetailsView.DataItemIndex" />。</summary>
        <value>返回 <see cref="P:System.Web.UI.WebControls.DetailsView.DataItemIndex" /> 值。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 此成员是显式接口成员的实现。 它只能在 <xref:System.Web.UI.WebControls.DetailsView> 实例被强制转换为接口时使用 <xref:System.Web.UI.IDataItemContainer> 。

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.IDataItemContainer" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IDataItemContainer.DisplayIndex">
      <MemberSignature Language="C#" Value="int System.Web.UI.IDataItemContainer.DisplayIndex { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 System.Web.UI.IDataItemContainer.DisplayIndex" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DetailsView.System#Web#UI#IDataItemContainer#DisplayIndex" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property DisplayIndex As Integer Implements IDataItemContainer.DisplayIndex" />
      <MemberSignature Language="C++ CLI" Value="property int System::Web::UI::IDataItemContainer::DisplayIndex { int get(); };" />
      <MemberSignature Language="F#" Value="member this.System.Web.UI.IDataItemContainer.DisplayIndex : int" Usage="System.Web.UI.IDataItemContainer.DisplayIndex" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.IDataItemContainer.DisplayIndex</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>有关此成员的说明，请参见 <see cref="P:System.Web.UI.IDataItemContainer.DisplayIndex" />。</summary>
        <value>返回 <see langword="0" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 此成员是显式接口成员的实现。 它只能在 <xref:System.Web.UI.WebControls.DetailsView> 实例被强制转换为接口时使用 <xref:System.Web.UI.IDataItemContainer> 。

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.IDataItemContainer" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IPostBackEventHandler.RaisePostBackEvent">
      <MemberSignature Language="C#" Value="void IPostBackEventHandler.RaisePostBackEvent (string eventArgument);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(string eventArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DetailsView.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Sub RaisePostBackEvent (eventArgument As String) Implements IPostBackEventHandler.RaisePostBackEvent" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System::String ^ eventArgument) = System::Web::UI::IPostBackEventHandler::RaisePostBackEvent;" />
      <MemberSignature Language="F#" Value="abstract member System.Web.UI.IPostBackEventHandler.RaisePostBackEvent : string -&gt; unit&#xA;override this.System.Web.UI.IPostBackEventHandler.RaisePostBackEvent : string -&gt; unit" Usage="detailsView.System.Web.UI.IPostBackEventHandler.RaisePostBackEvent eventArgument" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventArgument">表示要传递到事件处理程序的可选事件自变量的字符串。</param>
        <summary>有关此成员的说明，请参见 <see cref="M:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System.String)" />。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 此成员是显式接口成员的实现。 它只能在 <xref:System.Web.UI.WebControls.DetailsView> 实例被强制转换为接口时使用 <xref:System.Web.UI.IPostBackEventHandler> 。

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.IPostBackEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.ICallbackContainer.GetCallbackScript">
      <MemberSignature Language="C#" Value="string ICallbackContainer.GetCallbackScript (System.Web.UI.WebControls.IButtonControl buttonControl, string argument);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.Web.UI.WebControls.ICallbackContainer.GetCallbackScript(class System.Web.UI.WebControls.IButtonControl buttonControl, string argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DetailsView.System#Web#UI#WebControls#ICallbackContainer#GetCallbackScript(System.Web.UI.WebControls.IButtonControl,System.String)" />
      <MemberSignature Language="VB.NET" Value="Function GetCallbackScript (buttonControl As IButtonControl, argument As String) As String Implements ICallbackContainer.GetCallbackScript" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::String ^ System.Web.UI.WebControls.ICallbackContainer.GetCallbackScript(System::Web::UI::WebControls::IButtonControl ^ buttonControl, System::String ^ argument) = System::Web::UI::WebControls::ICallbackContainer::GetCallbackScript;" />
      <MemberSignature Language="F#" Value="abstract member System.Web.UI.WebControls.ICallbackContainer.GetCallbackScript : System.Web.UI.WebControls.IButtonControl * string -&gt; string&#xA;override this.System.Web.UI.WebControls.ICallbackContainer.GetCallbackScript : System.Web.UI.WebControls.IButtonControl * string -&gt; string" Usage="detailsView.System.Web.UI.WebControls.ICallbackContainer.GetCallbackScript (buttonControl, argument)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.WebControls.ICallbackContainer.GetCallbackScript(System.Web.UI.WebControls.IButtonControl,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buttonControl" Type="System.Web.UI.WebControls.IButtonControl" />
        <Parameter Name="argument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="buttonControl">将页回发给服务器的按钮控件。</param>
        <param name="argument">回调事件的参数。</param>
        <summary>为 <see cref="T:System.Web.UI.WebControls.DetailsView" /> 控件创建回调脚本。</summary>
        <returns><see cref="T:System.Web.UI.WebControls.DetailsView" /> 控件的回调脚本。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 此方法是一个帮助器方法，该方法由 <xref:System.Web.UI.WebControls.DetailsView> 控件调用以生成其回调脚本。 如果 <xref:System.Web.UI.WebControls.DetailsView> 控件不呈现客户端脚本，或者 `argument` 参数为 `null` 或空字符串 ( "" ) ，则此方法返回 `null` 。

 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.ICallbackContainer.GetCallbackScript(System.Web.UI.WebControls.IButtonControl,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IDataBoundControl.DataKeyNames">
      <MemberSignature Language="C#" Value="string[] System.Web.UI.WebControls.IDataBoundControl.DataKeyNames { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] System.Web.UI.WebControls.IDataBoundControl.DataKeyNames" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DetailsView.System#Web#UI#WebControls#IDataBoundControl#DataKeyNames" />
      <MemberSignature Language="VB.NET" Value=" Property DataKeyNames As String() Implements IDataBoundControl.DataKeyNames" />
      <MemberSignature Language="C++ CLI" Value="property cli::array &lt;System::String ^&gt; ^ System::Web::UI::WebControls::IDataBoundControl::DataKeyNames { cli::array &lt;System::String ^&gt; ^ get(); void set(cli::array &lt;System::String ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.System.Web.UI.WebControls.IDataBoundControl.DataKeyNames : string[] with get, set" Usage="System.Web.UI.WebControls.IDataBoundControl.DataKeyNames" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IDataBoundControl.DataKeyNames</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>有关此属性的说明，请参见 <see cref="P:System.Web.UI.WebControls.IDataBoundControl.DataKeyNames" />。</summary>
        <value>一个数组，该数组包含显示在数据绑定控件中的项的主键字段的名称。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 此成员是显式接口成员的实现。 它只能在 <xref:System.Web.UI.WebControls.DetailsView> 实例被强制转换为 <xref:System.Web.UI.WebControls.IDataBoundControl> 接口时使用。

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IDataBoundControl.DataMember">
      <MemberSignature Language="C#" Value="string System.Web.UI.WebControls.IDataBoundControl.DataMember { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string System.Web.UI.WebControls.IDataBoundControl.DataMember" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DetailsView.System#Web#UI#WebControls#IDataBoundControl#DataMember" />
      <MemberSignature Language="VB.NET" Value=" Property DataMember As String Implements IDataBoundControl.DataMember" />
      <MemberSignature Language="C++ CLI" Value="property System::String ^ System::Web::UI::WebControls::IDataBoundControl::DataMember { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.System.Web.UI.WebControls.IDataBoundControl.DataMember : string with get, set" Usage="System.Web.UI.WebControls.IDataBoundControl.DataMember" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IDataBoundControl.DataMember</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>有关此属性的说明，请参见 <see cref="P:System.Web.UI.WebControls.IDataBoundControl.DataMember" />。</summary>
        <value><see cref="T:System.Web.UI.WebControls.DetailsView" /> 控件绑定到的数据列表的名称。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 此成员是显式接口成员的实现。 它只能在 <xref:System.Web.UI.WebControls.DetailsView> 实例被强制转换为 <xref:System.Web.UI.WebControls.IDataBoundControl> 接口时使用。

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IDataBoundControl.DataSource">
      <MemberSignature Language="C#" Value="object System.Web.UI.WebControls.IDataBoundControl.DataSource { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Web.UI.WebControls.IDataBoundControl.DataSource" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DetailsView.System#Web#UI#WebControls#IDataBoundControl#DataSource" />
      <MemberSignature Language="VB.NET" Value=" Property DataSource As Object Implements IDataBoundControl.DataSource" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Web::UI::WebControls::IDataBoundControl::DataSource { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.System.Web.UI.WebControls.IDataBoundControl.DataSource : obj with get, set" Usage="System.Web.UI.WebControls.IDataBoundControl.DataSource" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IDataBoundControl.DataSource</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>有关此属性的说明，请参见 <see cref="P:System.Web.UI.WebControls.IDataBoundControl.DataSource" />。</summary>
        <value>一个表示数据源的对象，<see cref="T:System.Web.UI.WebControls.DetailsView" /> 控件从该数据源中检索其数据。 默认值为 <see langword="null" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 此成员是显式接口成员的实现。 它只能在 <xref:System.Web.UI.WebControls.DetailsView> 实例被强制转换为 <xref:System.Web.UI.WebControls.IDataBoundControl> 接口时使用。

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IDataBoundControl.DataSourceID">
      <MemberSignature Language="C#" Value="string System.Web.UI.WebControls.IDataBoundControl.DataSourceID { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string System.Web.UI.WebControls.IDataBoundControl.DataSourceID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DetailsView.System#Web#UI#WebControls#IDataBoundControl#DataSourceID" />
      <MemberSignature Language="VB.NET" Value=" Property DataSourceID As String Implements IDataBoundControl.DataSourceID" />
      <MemberSignature Language="C++ CLI" Value="property System::String ^ System::Web::UI::WebControls::IDataBoundControl::DataSourceID { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.System.Web.UI.WebControls.IDataBoundControl.DataSourceID : string with get, set" Usage="System.Web.UI.WebControls.IDataBoundControl.DataSourceID" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IDataBoundControl.DataSourceID</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>有关此属性的说明，请参见 <see cref="P:System.Web.UI.WebControls.IDataBoundControl.DataSourceID" />。</summary>
        <value>数据源控件的 ID，该数据源控件包含 <see cref="T:System.Web.UI.WebControls.DetailsView" /> 控件所检索到的数据项列表。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 此成员是显式接口成员的实现。 它只能在 <xref:System.Web.UI.WebControls.DetailsView> 实例被强制转换为 <xref:System.Web.UI.WebControls.IDataBoundControl> 接口时使用。

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IDataBoundControl.DataSourceObject">
      <MemberSignature Language="C#" Value="System.Web.UI.IDataSource System.Web.UI.WebControls.IDataBoundControl.DataSourceObject { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.IDataSource System.Web.UI.WebControls.IDataBoundControl.DataSourceObject" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DetailsView.System#Web#UI#WebControls#IDataBoundControl#DataSourceObject" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property DataSourceObject As IDataSource Implements IDataBoundControl.DataSourceObject" />
      <MemberSignature Language="C++ CLI" Value="property System::Web::UI::IDataSource ^ System::Web::UI::WebControls::IDataBoundControl::DataSourceObject { System::Web::UI::IDataSource ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.System.Web.UI.WebControls.IDataBoundControl.DataSourceObject : System.Web.UI.IDataSource" Usage="System.Web.UI.WebControls.IDataBoundControl.DataSourceObject" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IDataBoundControl.DataSourceObject</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.IDataSource</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>有关此属性的说明，请参见 <see cref="P:System.Web.UI.WebControls.IDataBoundControl.DataSourceObject" />。</summary>
        <value>一个对象，其中包含 <see cref="T:System.Web.UI.WebControls.DetailsView" /> 控件所检索到的数据项列表。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 此成员是显式接口成员的实现。 它只能在 <xref:System.Web.UI.WebControls.DetailsView> 实例被强制转换为 <xref:System.Web.UI.WebControls.IDataBoundControl> 接口时使用。

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IDataBoundItemControl.DataKey">
      <MemberSignature Language="C#" Value="System.Web.UI.WebControls.DataKey System.Web.UI.WebControls.IDataBoundItemControl.DataKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.DataKey System.Web.UI.WebControls.IDataBoundItemControl.DataKey" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DetailsView.System#Web#UI#WebControls#IDataBoundItemControl#DataKey" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property DataKey As DataKey Implements IDataBoundItemControl.DataKey" />
      <MemberSignature Language="C++ CLI" Value="property System::Web::UI::WebControls::DataKey ^ System::Web::UI::WebControls::IDataBoundItemControl::DataKey { System::Web::UI::WebControls::DataKey ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.System.Web.UI.WebControls.IDataBoundItemControl.DataKey : System.Web.UI.WebControls.DataKey" Usage="System.Web.UI.WebControls.IDataBoundItemControl.DataKey" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IDataBoundItemControl.DataKey</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>有关此属性的说明，请参见 <see cref="P:System.Web.UI.WebControls.IDataBoundItemControl.DataKey" />。</summary>
        <value>表示 <see cref="T:System.Web.UI.WebControls.DetailsView" /> 控件中行的数据键值的对象。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 此成员是显式接口成员的实现。 它只能在 <xref:System.Web.UI.WebControls.DetailsView> 实例被强制转换为 <xref:System.Web.UI.WebControls.IDataBoundControl> 接口时使用。

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IDataBoundItemControl.Mode">
      <MemberSignature Language="C#" Value="System.Web.UI.WebControls.DataBoundControlMode System.Web.UI.WebControls.IDataBoundItemControl.Mode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.DataBoundControlMode System.Web.UI.WebControls.IDataBoundItemControl.Mode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DetailsView.System#Web#UI#WebControls#IDataBoundItemControl#Mode" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Mode As DataBoundControlMode Implements IDataBoundItemControl.Mode" />
      <MemberSignature Language="C++ CLI" Value="property System::Web::UI::WebControls::DataBoundControlMode System::Web::UI::WebControls::IDataBoundItemControl::Mode { System::Web::UI::WebControls::DataBoundControlMode get(); };" />
      <MemberSignature Language="F#" Value="member this.System.Web.UI.WebControls.IDataBoundItemControl.Mode : System.Web.UI.WebControls.DataBoundControlMode" Usage="System.Web.UI.WebControls.IDataBoundItemControl.Mode" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IDataBoundItemControl.Mode</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataBoundControlMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>有关此属性的说明，请参见 <see cref="P:System.Web.UI.WebControls.IDataBoundItemControl.Mode" />。</summary>
        <value><see cref="T:System.Web.UI.WebControls.DetailsView" /> 控件的当前模式。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 此成员是显式接口成员的实现。 它只能在 <xref:System.Web.UI.WebControls.DetailsView> 实例被强制转换为 <xref:System.Web.UI.WebControls.IDataBoundControl> 接口时使用。

 <xref:System.Web.UI.WebControls.DetailsView>可以设置为 `ReadOnly` `Edit` 或 `Delete` 。

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IFieldControl.FieldsGenerator">
      <MemberSignature Language="C#" Value="System.Web.UI.IAutoFieldGenerator System.Web.UI.WebControls.IFieldControl.FieldsGenerator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.IAutoFieldGenerator System.Web.UI.WebControls.IFieldControl.FieldsGenerator" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DetailsView.System#Web#UI#WebControls#IFieldControl#FieldsGenerator" />
      <MemberSignature Language="VB.NET" Value=" Property FieldsGenerator As IAutoFieldGenerator Implements IFieldControl.FieldsGenerator" />
      <MemberSignature Language="C++ CLI" Value="property System::Web::UI::IAutoFieldGenerator ^ System::Web::UI::WebControls::IFieldControl::FieldsGenerator { System::Web::UI::IAutoFieldGenerator ^ get(); void set(System::Web::UI::IAutoFieldGenerator ^ value); };" />
      <MemberSignature Language="F#" Value="member this.System.Web.UI.WebControls.IFieldControl.FieldsGenerator : System.Web.UI.IAutoFieldGenerator with get, set" Usage="System.Web.UI.WebControls.IFieldControl.FieldsGenerator" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IFieldControl.FieldsGenerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.IAutoFieldGenerator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>有关此属性的说明，请参见 <see cref="P:System.Web.UI.WebControls.IFieldControl.FieldsGenerator" />。</summary>
        <value>自动为 <see cref="T:System.Web.UI.WebControls.DetailsView" /> 控件生成列的控件。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 此成员是显式接口成员的实现。 它只能在 <xref:System.Web.UI.WebControls.DetailsView> 实例被强制转换为 <xref:System.Web.UI.WebControls.IFieldControl> 接口时使用。

 此属性用于为 <xref:System.Web.UI.WebControls.DetailsView> 使用 ASP.NET 动态数据功能的控件自动生成列。

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IPostBackContainer.GetPostBackOptions">
      <MemberSignature Language="C#" Value="System.Web.UI.PostBackOptions IPostBackContainer.GetPostBackOptions (System.Web.UI.WebControls.IButtonControl buttonControl);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Web.UI.PostBackOptions System.Web.UI.WebControls.IPostBackContainer.GetPostBackOptions(class System.Web.UI.WebControls.IButtonControl buttonControl) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DetailsView.System#Web#UI#WebControls#IPostBackContainer#GetPostBackOptions(System.Web.UI.WebControls.IButtonControl)" />
      <MemberSignature Language="VB.NET" Value="Function GetPostBackOptions (buttonControl As IButtonControl) As PostBackOptions Implements IPostBackContainer.GetPostBackOptions" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Web::UI::PostBackOptions ^ System.Web.UI.WebControls.IPostBackContainer.GetPostBackOptions(System::Web::UI::WebControls::IButtonControl ^ buttonControl) = System::Web::UI::WebControls::IPostBackContainer::GetPostBackOptions;" />
      <MemberSignature Language="F#" Value="abstract member System.Web.UI.WebControls.IPostBackContainer.GetPostBackOptions : System.Web.UI.WebControls.IButtonControl -&gt; System.Web.UI.PostBackOptions&#xA;override this.System.Web.UI.WebControls.IPostBackContainer.GetPostBackOptions : System.Web.UI.WebControls.IButtonControl -&gt; System.Web.UI.PostBackOptions" Usage="detailsView.System.Web.UI.WebControls.IPostBackContainer.GetPostBackOptions buttonControl" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.WebControls.IPostBackContainer.GetPostBackOptions(System.Web.UI.WebControls.IButtonControl)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.PostBackOptions</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buttonControl" Type="System.Web.UI.WebControls.IButtonControl" />
      </Parameters>
      <Docs>
        <param name="buttonControl">生成客户端回发事件的控件。</param>
        <summary>有关此成员的说明，请参见 <see cref="M:System.Web.UI.WebControls.IPostBackContainer.GetPostBackOptions(System.Web.UI.WebControls.IButtonControl)" />。</summary>
        <returns>一个 <see cref="T:System.Web.UI.PostBackOptions" />，它包含 <see cref="Overload:System.Web.UI.Page.GetPostBackEventReference" /> 构造有效脚本（在客户端上执行时将启动客户端回发）时所需的信息。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 此成员是显式接口成员的实现。 它只能在 <xref:System.Web.UI.WebControls.DetailsView> 实例被强制转换为接口时使用 <xref:System.Web.UI.IPostBackEventHandler> 。

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="buttonControl" /> 为 <see langword="null" />。</exception>
        <exception cref="T:System.InvalidOperationException"><paramref name="buttonControl" /> 导致在 <see cref="T:System.Web.UI.WebControls.DetailsView" /> 控件中进行验证，尝试使用相同的 <see cref="T:System.Web.UI.WebControls.DetailsView" /> 控件作为回发目标。</exception>
        <altmember cref="T:System.Web.UI.IPostBackEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="TagKey">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.HtmlTextWriterTag TagKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.HtmlTextWriterTag TagKey" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DetailsView.TagKey" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property TagKey As HtmlTextWriterTag" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Web::UI::HtmlTextWriterTag TagKey { System::Web::UI::HtmlTextWriterTag get(); };" />
      <MemberSignature Language="F#" Value="member this.TagKey : System.Web.UI.HtmlTextWriterTag" Usage="System.Web.UI.WebControls.DetailsView.TagKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.HtmlTextWriterTag</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取 <see cref="T:System.Web.UI.WebControls.DetailsView" /> 控件的 <see cref="T:System.Web.UI.HtmlTextWriterTag" /> 值。</summary>
        <value>如果 <see cref="P:System.Web.UI.WebControls.DetailsView.EnablePagingCallbacks" /> 为 <see langword="true" />，则此属性返回 <see cref="F:System.Web.UI.HtmlTextWriterTag.Div" />。 否则，将返回 <see cref="F:System.Web.UI.HtmlTextWriterTag.Table" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.DetailsView.TagKey%2A>属性允许输出流为控件写入适当的 HTML 标记 <xref:System.Web.UI.WebControls.DetailsView> 。

 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>可以重写此属性，以指定 <see cref="T:System.Web.UI.HtmlTextWriterTag" /> 要用于派生控件的值。</para></block>
      </Docs>
    </Member>
    <Member MemberName="TopPagerRow">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.DetailsViewRow TopPagerRow { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.DetailsViewRow TopPagerRow" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DetailsView.TopPagerRow" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property TopPagerRow As DetailsViewRow" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::DetailsViewRow ^ TopPagerRow { System::Web::UI::WebControls::DetailsViewRow ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TopPagerRow : System.Web.UI.WebControls.DetailsViewRow" Usage="System.Web.UI.WebControls.DetailsView.TopPagerRow" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DetailsViewRow</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个 <see cref="T:System.Web.UI.WebControls.DetailsViewRow" /> 对象，该对象表示 <see cref="T:System.Web.UI.WebControls.DetailsView" /> 控件中的顶部页导航行。</summary>
        <value>一个 <see cref="T:System.Web.UI.WebControls.DetailsViewRow" />，表示 <see cref="T:System.Web.UI.WebControls.DetailsView" /> 控件中的顶部页导航行。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
  (通过将 <xref:System.Web.UI.WebControls.DetailsView.AllowPaging%2A> 属性设置为) 启用分页时 `true` ，会自动在控件中显示一个名为 "页导航行" 的附加行 <xref:System.Web.UI.WebControls.DetailsView> 。 页导航行包含的控件允许用户导航到其他记录，并且可以显示在控件的顶部和底部，或者同时显示在控件的顶部和底部。 使用 <xref:System.Web.UI.WebControls.DetailsView.TopPagerRow%2A> 属性以编程方式访问 <xref:System.Web.UI.WebControls.DetailsViewRow> 表示控件中的顶部页导航行的对象 <xref:System.Web.UI.WebControls.DetailsView> 。

> [!NOTE]
>  <xref:System.Web.UI.WebControls.DetailsView.TopPagerRow%2A>只有 <xref:System.Web.UI.WebControls.DetailsView> 控件在事件中创建了底部页导航行后，属性才可用 <xref:System.Web.UI.WebControls.DetailsView.ItemCreated> 。

 当你需要以编程方式操作顶部页导航行时（例如，添加自定义内容时），通常会使用此属性。 在 <xref:System.Web.UI.WebControls.DetailsView.TopPagerRow%2A> 呈现控件之后，必须对属性进行任何修改 <xref:System.Web.UI.WebControls.DetailsView> ; 否则， <xref:System.Web.UI.WebControls.DetailsView> 控件将覆盖所有更改。



## Examples
 下面的代码示例演示如何使用 <xref:System.Web.UI.WebControls.DetailsView.TopPagerRow%2A> 属性 <xref:System.Web.UI.WebControls.DetailsView> 在事件期间访问控件的顶部页导航行 <xref:System.Web.UI.WebControls.DetailsView.ItemCreated> 。 然后，将 <xref:System.Web.UI.WebControls.Label> 用当前页码和总页数更新自定义页导航行中的两个控件。

 [!code-aspx-csharp[DetailsViewTopPagerRow#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DetailsViewTopPagerRow/CS/detailsviewtoppagerrowcs.aspx#1)]
 [!code-aspx-vb[DetailsViewTopPagerRow#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DetailsViewTopPagerRow/VB/detailsviewtoppagerrowvb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.DetailsViewRow" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.AllowPaging" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.BottomPagerRow" />
        <altmember cref="E:System.Web.UI.WebControls.DetailsView.ItemCreated" />
      </Docs>
    </Member>
    <Member MemberName="TrackViewState">
      <MemberSignature Language="C#" Value="protected override void TrackViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void TrackViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DetailsView.TrackViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub TrackViewState ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void TrackViewState();" />
      <MemberSignature Language="F#" Value="override this.TrackViewState : unit -&gt; unit" Usage="detailsView.TrackViewState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>标记开始跟踪并对 <see cref="T:System.Web.UI.WebControls.DetailsView" /> 控件的视图状态更改进行保存的起始点。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 此方法被重写，以标记开始跟踪并将更改保存为控件的视图状态的一部分的起始点。

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.StateBag" />
        <altmember cref="P:System.Web.UI.Control.ViewState" />
      </Docs>
    </Member>
    <Member MemberName="UpdateItem">
      <MemberSignature Language="C#" Value="public virtual void UpdateItem (bool causesValidation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UpdateItem(bool causesValidation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DetailsView.UpdateItem(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub UpdateItem (causesValidation As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void UpdateItem(bool causesValidation);" />
      <MemberSignature Language="F#" Value="abstract member UpdateItem : bool -&gt; unit&#xA;override this.UpdateItem : bool -&gt; unit" Usage="detailsView.UpdateItem causesValidation" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="causesValidation" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="causesValidation"><see langword="true" /> 表示调用该方法时执行页验证；否则为 <see langword="false" />。</param>
        <summary>更新数据源中的当前记录。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 当 <xref:System.Web.UI.WebControls.DetailsView> 控件处于编辑模式时，使用 <xref:System.Web.UI.WebControls.DetailsView.UpdateItem%2A> 方法以编程方式更新数据源中的当前记录。 如果需要从控件之外（如 <xref:System.Web.UI.WebControls.DetailsView> 页面上的不同控件）更新当前记录，通常会使用此方法。

> [!NOTE]
>  <xref:System.Web.UI.WebControls.DetailsView>调用此方法时，控件必须处于编辑模式; 否则，将 <xref:System.Web.HttpException> 引发异常。

 若要指定在更新操作之前是否执行页验证，请使用 `causesValidation` 参数。 调用此方法还会引发 <xref:System.Web.UI.WebControls.DetailsView.ItemUpdated> 和 <xref:System.Web.UI.WebControls.DetailsView.ItemUpdating> 事件。

 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">此方法在 <see cref="T:System.Web.UI.WebControls.DetailsView" /> 控件不处于编辑模式时调用。

- 或 -

与 <see cref="T:System.Web.UI.DataSourceView" /> 控件关联的 <see cref="T:System.Web.UI.WebControls.DetailsView" /> 为 <see langword="null" />。</exception>
        <altmember cref="E:System.Web.UI.WebControls.DetailsView.ItemUpdated" />
        <altmember cref="E:System.Web.UI.WebControls.DetailsView.ItemUpdating" />
        <altmember cref="M:System.Web.UI.WebControls.DetailsView.DeleteItem" />
        <altmember cref="M:System.Web.UI.WebControls.DetailsView.InsertItem(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="UpdateMethod">
      <MemberSignature Language="C#" Value="public virtual string UpdateMethod { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UpdateMethod" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DetailsView.UpdateMethod" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property UpdateMethod As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ UpdateMethod { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.UpdateMethod : string with get, set" Usage="System.Web.UI.WebControls.DetailsView.UpdateMethod" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue("")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue("")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Web.UI.Themeable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.Themeable(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置控件执行更新操作时调用的页面上的方法的名称。</summary>
        <value>当控件执行更新操作时，该页中被调用的方法的名称。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 有关如何在 Web 窗体中使用模型绑定的教程系列，请参阅 [模型绑定和 Web 窗体](/aspnet/web-forms/overview/presenting-and-managing-data/model-binding/retrieving-data)。

 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
