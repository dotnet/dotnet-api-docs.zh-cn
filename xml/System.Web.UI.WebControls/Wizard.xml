<Type Name="Wizard" FullName="System.Web.UI.WebControls.Wizard">
  <Metadata><Meta Name="ms.openlocfilehash" Value="621e7fae15188b0c70857c2211d6259682582ec7" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86657200" /></Metadata><TypeSignature Language="C#" Value="public class Wizard : System.Web.UI.WebControls.CompositeControl" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Wizard extends System.Web.UI.WebControls.CompositeControl" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.Wizard" />
  <TypeSignature Language="VB.NET" Value="Public Class Wizard&#xA;Inherits CompositeControl" />
  <TypeSignature Language="C++ CLI" Value="public ref class Wizard : System::Web::UI::WebControls::CompositeControl" />
  <TypeSignature Language="F#" Value="type Wizard = class&#xA;    inherit CompositeControl" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.CompositeControl</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.ComponentModel.Bindable(false)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.ComponentModel.Bindable(false)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.ComponentModel.DefaultEvent("FinishButtonClick")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultEvent("FinishButtonClick")&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName Language="C#">[System.ComponentModel.Designer("System.Web.UI.Design.WebControls.WizardDesigner, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.ComponentModel.Designer("System.Web.UI.Design.WebControls.WizardDesigner, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Web.UI.ToolboxData("&lt;{0}:Wizard runat="server"&gt; &lt;WizardSteps&gt; &lt;asp:WizardStep title="Step 1" runat="server"&gt;&lt;/asp:WizardStep&gt; &lt;asp:WizardStep title="Step 2" runat="server"&gt;&lt;/asp:WizardStep&gt; &lt;/WizardSteps&gt; &lt;/{0}:Wizard&gt;")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Web.UI.ToolboxData("&lt;{0}:Wizard runat="server"&gt; &lt;WizardSteps&gt; &lt;asp:WizardStep title="Step 1" runat="server"&gt;&lt;/asp:WizardStep&gt; &lt;asp:WizardStep title="Step 2" runat="server"&gt;&lt;/asp:WizardStep&gt; &lt;/WizardSteps&gt; &lt;/{0}:Wizard&gt;")&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName Language="C#">[System.ComponentModel.Designer("System.Web.UI.Design.WebControls.WizardDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.ComponentModel.Designer("System.Web.UI.Design.WebControls.WizardDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>提供导航和用户界面 (UI)，以跨多个步骤收集相关数据。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[

## Remarks
 本主题内容：

-   [简介](#introduction)

-   [向导组件](#components)

-   [向导步骤](#wizard_steps)

-   [收集向导数据](#collecting_wizard_data)

-   [向导命令名称](#wizard_command_names)

-   [动态更改步骤](#dynamically_changing_steps)

-   [向导外观](#wizard_appearance)

-   [使用布局模板设置格式](#formatting_using_layout_templates)

-   [辅助功能](#accessibility)

-   [声明性语法](#declarative_syntax)

<a name="introduction"></a>
## <a name="introduction"></a>简介
 您可以使用 <xref:System.Web.UI.WebControls.Wizard> 控件来执行以下操作：

-   跨多个步骤收集相关数据。

-   分解一个更大的网页，用于将用户输入收集到较小的逻辑步骤。

-   允许线性或非线性导航完成这些步骤。

<a name="components"></a>
## <a name="wizard-components"></a>向导组件
 该 <xref:System.Web.UI.WebControls.Wizard> 控件由以下组件组成：

-   一 <xref:System.Web.UI.WebControls.WizardStepCollection> 系列步骤，其中包含由页面开发人员定义的每个步骤的用户界面。

-   内置导航功能，用于根据值确定要显示的相应按钮 <xref:System.Web.UI.WebControls.WizardStepBase.StepType%2A> 。

-   一种标题区域，可对其进行自定义以显示特定于用户当前所处步骤的信息。

-   边栏区域，可用于快速导航到控件中的步骤。

    > [!NOTE]
    >  如果使用 Microsoft Visual Studio 2005，请注意， <xref:System.Web.UI.WebControls.Wizard.ActiveStepIndex%2A> 将保留在源视图中。 如果在 <xref:System.Web.UI.WebControls.Wizard.WizardSteps%2A> 设计视图中通过单击侧栏按钮来更改属性，然后运行页面，则 `Wizard` 可能不会显示控件的第一步，因为 <xref:System.Web.UI.WebControls.Wizard.ActiveStepIndex%2A> 可能会指向不同的步骤。

<a name="wizard_steps"></a>
## <a name="wizard-steps"></a>向导步骤
 控件中的每个步骤 <xref:System.Web.UI.WebControls.Wizard> 都有一个 <xref:System.Web.UI.WebControls.WizardStepBase.StepType%2A> 属性，该属性确定该步骤具有的导航功能的类型。 如果没有为属性指定值 <xref:System.Web.UI.WebControls.WizardStepBase.StepType%2A> ，则默认值为 <xref:System.Web.UI.WebControls.WizardStepType.Auto> 。 下表列出了属性的可用设置 <xref:System.Web.UI.WebControls.WizardStepBase.StepType%2A> 和步骤的结果行为。

 `WizardStepType.Auto` 为步骤呈现的导航 UI 由声明该步骤的顺序确定。

 `WizardStepType.Complete` 该步骤是要显示的最后一个步骤。 不呈现任何导航按钮。

 `WizardStepType.Finish` 步骤是收集用户数据的最后一个步骤。 为导航呈现 " **完成** " 按钮。

 `WizardStepType.Start` 该步骤是要显示的第一个步骤。 不呈现 " **上一步** " 按钮。

 `WizardStepType.Step` 步骤是第一个和最后一个步骤之间的任何步骤。 呈现用于导航的“上一步”和“下一步”按钮********。

<a name="collecting_wizard_data"></a>
## <a name="collecting-wizard-data"></a>收集向导数据
 使用 <xref:System.Web.UI.WebControls.Wizard> 控件，可以通过线性或非线性导航来收集数据。 非线性导航的一些示例是跳过不必要的步骤，或返回到之前完成的步骤来更改某个值。 <xref:System.Web.UI.WebControls.Wizard>控件在各个步骤之间维护其状态，因此在步骤中输入的数据无需保存到数据存储区，直到完成控件的所有步骤 <xref:System.Web.UI.WebControls.Wizard> 。

 或者，如果要在每个步骤完成时将收集的数据保存到数据存储区（如引发事件时）， <xref:System.Web.UI.WebControls.Wizard.NextButtonClick> 则应将 <xref:System.Web.UI.WebControls.WizardStepBase.AllowReturn%2A> 对象的属性设置为， <xref:System.Web.UI.WebControls.WizardStepBase> `false` 以使用户无法返回到以前完成的步骤，并在提交数据后对其进行更改。

<a name="wizard_command_names"></a>
## <a name="wizard-command-names"></a>向导命令名称
 <xref:System.Web.UI.WebControls.Wizard>控件继承类和类中的以下命令名称 <xref:System.Web.UI.WebControls.View> <xref:System.Web.UI.WebControls.MultiView> ： <xref:System.Web.UI.WebControls.MultiView.NextViewCommandName> 、 <xref:System.Web.UI.WebControls.MultiView.PreviousViewCommandName> 、 <xref:System.Web.UI.WebControls.MultiView.SwitchViewByIDCommandName> 和 <xref:System.Web.UI.WebControls.MultiView.SwitchViewByIndexCommandName> 。 向导控件忽略这些命令名称，并且不包含任何特殊逻辑来使这些命令自动用于导航。 如果从控件中的按钮删除或缺少命令名称 <xref:System.Web.UI.WebControls.Wizard> ，则不会引发异常。 例如，如果 <xref:System.Web.UI.WebControls.Wizard.StartNavigationTemplate%2A> 按钮缺少的值 <xref:System.Web.UI.WebControls.Button.CommandName%2A> ，则不会引发异常。

<a name="dynamically_changing_steps"></a>
## <a name="dynamically-changing-steps"></a>动态更改步骤
 您可以使用 <xref:System.Web.UI.WebControls.Wizard.MoveTo%2A> 方法或 <xref:System.Web.UI.WebControls.Wizard.ActiveStepIndex%2A> 属性动态更改当前显示在控件中的步骤 <xref:System.Web.UI.WebControls.Wizard> 。

> [!NOTE]
>  如果以编程方式 <xref:System.Web.UI.WebControls.WizardStep> 在 `Page_Load` 事件处理程序中添加，则必须在加载页面之前将导航添加到该步骤。

<a name="wizard_appearance"></a>
## <a name="wizard-appearance"></a>向导外观
 控件的外观可 <xref:System.Web.UI.WebControls.Wizard> 通过模板、外观和样式设置完全自定义。 例如，您可以使用 <xref:System.Web.UI.WebControls.Wizard.HeaderTemplate%2A> 、 <xref:System.Web.UI.WebControls.Wizard.SideBarTemplate%2A> 、 <xref:System.Web.UI.WebControls.Wizard.StartNavigationTemplate%2A> 、 <xref:System.Web.UI.WebControls.Wizard.FinishNavigationTemplate%2A> 和 <xref:System.Web.UI.WebControls.Wizard.StepNavigationTemplate%2A> 属性来自定义控件的接口 <xref:System.Web.UI.WebControls.Wizard> 。

> [!NOTE]
>  设置 <xref:System.Web.UI.WebControls.Wizard.FinishNavigationTemplate%2A> 、、 <xref:System.Web.UI.WebControls.Wizard.DisplaySideBar%2A> 、 <xref:System.Web.UI.WebControls.Wizard.HeaderTemplate%2A> <xref:System.Web.UI.WebControls.Wizard.SideBarTemplate%2A> 、或属性将重新 <xref:System.Web.UI.WebControls.Wizard.StartNavigationTemplate%2A> <xref:System.Web.UI.WebControls.Wizard.StepNavigationTemplate%2A> 创建控件的子控件 <xref:System.Web.UI.WebControls.Wizard> 。 因此，子控件的视图状态会在进程中丢失。 若要避免这种情况，请显式保持 <xref:System.Web.UI.WebControls.Wizard> 控件的子控件的控件状态，或避免在模板内放置控件。

 请注意， <xref:System.Web.UI.WebControls.Wizard> 对于非标准或兼容模式，控件不支持特殊的 Microsoft Internet Explorer 呈现。 若要使用控件获得最佳的 Internet Explorer 呈现 <xref:System.Web.UI.WebControls.Wizard> 功能，请使用 XHTML 文档类型，该类型默认情况下会在 Visual Web Developer 和 Visual Studio 中添加。

<a name="formatting_using_layout_templates"></a>
## <a name="formatting-using-layout-templates"></a>使用布局模板设置格式
 <xref:System.Web.UI.WebControls.Wizard>控件使你可以指定控件的布局，而无需使用 HTML `table` 元素。 相反，可以使用 `LayoutTemplate` 元素来指定布局。 在模板中，创建占位符控件以指示应将项动态插入控件的位置。  (这类似于控件的模板模型的工作方式 <xref:System.Web.UI.WebControls.ListView> 。 ) 有关详细信息，请参见 <xref:System.Web.UI.WebControls.Wizard.LayoutTemplate%2A?displayProperty=nameWithType> 属性。

<a name="accessibility"></a>
## <a name="accessibility"></a>可访问性
 有关如何配置此控件以生成符合辅助功能标准的标记的信息，请参阅 [Visual Studio 中的辅助功能和 ASP.NET](https://docs.microsoft.com/previous-versions/ms228004(v=vs.140)) 和 [ASP.NET 控件和辅助功能](https://docs.microsoft.com/previous-versions/ms227996(v=vs.140))。

<a name="declarative_syntax"></a>
## <a name="declarative-syntax"></a>声明性语法

```
<asp:Wizard
    AccessKey="string"
    ActiveStepIndex="integer"
    BackColor="color name|#dddddd"
    BorderColor="color name|#dddddd"
    BorderStyle="NotSet|None|Dotted|Dashed|Solid|Double|Groove|Ridge|
        Inset|Outset"
    BorderWidth="size"
    CancelButtonImageUrl="uri"
    CancelButtonText="string"
    CancelButtonType="Button|Image|Link"
    CancelDestinationPageUrl="uri"
    CellPadding="integer"
    CellSpacing="integer"
    CssClass="string"
    DisplayCancelButton="True|False"
    DisplaySideBar="True|False"
    Enabled="True|False"
    EnableTheming="True|False"
    EnableViewState="True|False"
    FinishCompleteButtonImageUrl="uri"
    FinishCompleteButtonText="string"
    FinishCompleteButtonType="Button|Image|Link"
    FinishDestinationPageUrl="uri"
    FinishPreviousButtonImageUrl="uri"
    FinishPreviousButtonText="string"
    FinishPreviousButtonType="Button|Image|Link"
    Font-Bold="True|False"
    Font-Italic="True|False"
    Font-Names="string"
    Font-Overline="True|False"
    Font-Size="string|Smaller|Larger|XX-Small|X-Small|Small|Medium|
        Large|X-Large|XX-Large"
    Font-Strikeout="True|False"
    Font-Underline="True|False"
    ForeColor="color name|#dddddd"
    HeaderText="string"
    Height="size"
    ID="string"
    OnActiveStepChanged="ActiveStepChanged event handler"
    OnCancelButtonClick="CancelButtonClick event handler"
    OnDataBinding="DataBinding event handler"
    OnDisposed="Disposed event handler"
    OnFinishButtonClick="FinishButtonClick event handler"
    OnInit="Init event handler"
    OnLoad="Load event handler"
    OnNextButtonClick="NextButtonClick event handler"
    OnPreRender="PreRender event handler"
    OnPreviousButtonClick="PreviousButtonClick event handler"
    OnSideBarButtonClick="SideBarButtonClick event handler"
    OnUnload="Unload event handler"
    runat="server"
    SkinID="string"
    SkipLinkText="string"
    StartNextButtonImageUrl="uri"
    StartNextButtonText="string"
    StartNextButtonType="Button|Image|Link"
    StepNextButtonImageUrl="uri"
    StepNextButtonText="string"
    StepNextButtonType="Button|Image|Link"
    StepPreviousButtonImageUrl="uri"
    StepPreviousButtonText="string"
    StepPreviousButtonType="Button|Image|Link"
    Style="string"
    TabIndex="integer"
    ToolTip="string"
    Visible="True|False"
    Width="size"
>
        <CancelButtonStyle />
        <FinishCompleteButtonStyle />
        <FinishNavigationTemplate>
            <!-- child controls -->
        </FinishNavigationTemplate>
        <FinishPreviousButtonStyle />
        <HeaderStyle />
        <HeaderTemplate>
            <!-- child controls -->
        </HeaderTemplate>
        <NavigationButtonStyle />
        <NavigationStyle />
        <SideBarButtonStyle />
        <SideBarStyle />
        <SideBarTemplate>
            <!-- child controls -->
        </SideBarTemplate>
        <StartNavigationTemplate>
            <!-- child controls -->
        </StartNavigationTemplate>
        <StartNextButtonStyle />
        <StepNavigationTemplate>
            <!-- child controls -->
        </StepNavigationTemplate>
        <StepNextButtonStyle />
        <StepPreviousButtonStyle />
        <StepStyle />
        <WizardSteps>
                <asp:TemplatedWizardStep
                    AllowReturn="True|False"
                    ContentTemplateContainer="string"
                    EnableTheming="True|False"
                    EnableViewState="True|False"
                    ID="string"
                    OnActivate="Activate event handler"
                    OnDataBinding="DataBinding event handler"
                    OnDeactivate="Deactivate event handler"
                    OnDisposed="Disposed event handler"
                    OnInit="Init event handler"
                    OnLoad="Load event handler"
                    OnPreRender="PreRender event handler"
                    OnUnload="Unload event handler"
                    runat="server"
                    SkinID="string"
                    StepType="Auto|Complete|Finish|Start|Step"
                    Title="string"
                    Visible="True|False"
>
                        <ContentTemplate>
                            <!-- child controls -->
                        </ContentTemplate>
                        <CustomNavigationTemplate>
                            <!-- child controls -->
                        </CustomNavigationTemplate>
                </asp:TemplatedWizardStep>
                <asp:WizardStep
                    AllowReturn="True|False"
                    EnableTheming="True|False"
                    EnableViewState="True|False"
                    ID="string"
                    OnActivate="Activate event handler"
                    OnDataBinding="DataBinding event handler"
                    OnDeactivate="Deactivate event handler"
                    OnDisposed="Disposed event handler"
                    OnInit="Init event handler"
                    OnLoad="Load event handler"
                    OnPreRender="PreRender event handler"
                    OnUnload="Unload event handler"
                    runat="server"
                    SkinID="string"
                    StepType="Auto|Complete|Finish|Start|Step"
                    Title="string"
                    Visible="True|False"
                />
        </WizardSteps>
</asp:Wizard>
```



## Examples
 下面的代码示例演示如何定义一个 <xref:System.Web.UI.WebControls.Wizard> 控件以收集用户的名称和地址，并提供用于输入单独的装运地址的选项。 如果用户未选择 **SeparateShippingCheckBox**，因而发出了添加单独的寄送地址的请求，则 <xref:System.Web.UI.WebControls.Wizard> 控件会直接从移动 `Step2` 到 `Finish` 。 在该 `Finish` 步骤中，用户可以选择返回到控件的开头， <xref:System.Web.UI.WebControls.Wizard> 方法是单击 " **GoBackButton**"; 但是，它会使用户进入， `Step2` 因为的 <xref:System.Web.UI.WebControls.WizardStepBase.AllowReturn%2A> 属性 `Step1` 被设置为 `false` 。

> [!IMPORTANT]
>  此示例具有一个接受用户输入的文本框，这是一个潜在的安全威胁。 默认情况下，ASP.NET 网页验证用户输入是否不包含脚本或 HTML 元素。 有关详细信息，请参阅[脚本侵入概述](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100))。

 [!code-aspx-csharp[System.Web.UI.WebControls.Wizard#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.Wizard/CS/wizardclasscs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.Wizard#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.Wizard/VB/wizardclassvb.aspx#1)]

 下面的代码示例是在前面的示例中使用的网页的代码隐藏文件。

 [!code-csharp[System.Web.UI.WebControls.Wizard#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.Wizard/CS/wizardclass.cs#2)]
 [!code-vb[System.Web.UI.WebControls.Wizard#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.Wizard/VB/wizardclass.vb#2)]

 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.CompositeControl" />
    <altmember cref="T:System.Web.UI.Control" />
    <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/fs0za4w6(v=vs.100)">ASP.NET 向导控件简介</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Wizard ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Wizard.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Wizard();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Web.UI.WebControls.Wizard" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 使用 <xref:System.Web.UI.WebControls.Wizard.%23ctor%2A> 构造函数来创建和初始化类的新实例 <xref:System.Web.UI.WebControls.Wizard> 。

 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/fs0za4w6(v=vs.100)">向导 Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="ActiveStep">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.WizardStepBase ActiveStep { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WizardStepBase ActiveStep" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Wizard.ActiveStep" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ActiveStep As WizardStepBase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::WizardStepBase ^ ActiveStep { System::Web::UI::WebControls::WizardStepBase ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ActiveStep : System.Web.UI.WebControls.WizardStepBase" Usage="System.Web.UI.WebControls.Wizard.ActiveStep" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WizardStepBase</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取 <see cref="P:System.Web.UI.WebControls.Wizard.WizardSteps" /> 集合中当前显示给用户的步骤。</summary>
        <value>当前显示给用户的 <see cref="T:System.Web.UI.WebControls.WizardStepBase" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.Wizard.ActiveStep%2A>属性返回 <xref:System.Web.UI.WebControls.WizardStepBase> 当前显示在控件中的对象 <xref:System.Web.UI.WebControls.Wizard> 。 <xref:System.Web.UI.WebControls.Wizard.ActiveStep%2A>属性是只读的; 但是，您可以使用 <xref:System.Web.UI.WebControls.Wizard.ActiveStep%2A> 属性来访问当前对象的属性 <xref:System.Web.UI.WebControls.WizardStepBase> 。 使用 <xref:System.Web.UI.WebControls.Wizard.ActiveStepIndex%2A> 属性可将更改 <xref:System.Web.UI.WebControls.Wizard.ActiveStep%2A> 为不同的 <xref:System.Web.UI.WebControls.WizardStepBase> 对象。 或者，可以使用 <xref:System.Web.UI.WebControls.Wizard.MoveTo%2A> 方法动态设置 <xref:System.Web.UI.WebControls.Wizard.ActiveStep%2A> 属性。



## Examples
 下面的代码示例演示如何使用 <xref:System.Web.UI.WebControls.Wizard.ActiveStep%2A> 属性来确定要设置为控件的下一个属性的步骤 <xref:System.Web.UI.WebControls.Wizard.ActiveStep%2A> <xref:System.Web.UI.WebControls.Wizard> 。 如果的值 `CheckBox1.Checked` 为，则将 `true` <xref:System.Web.UI.WebControls.Wizard.ActiveStep%2A> 属性设置为 `Wizard1.Step3` ; 否则， <xref:System.Web.UI.WebControls.Wizard.ActiveStep%2A> 属性设置为 `Wizard1.Step2` 。

 [!code-aspx-csharp[System.Web.UI.WebControls.WizardActiveStep#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardActiveStep/CS/wizardactivestepcs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.WizardActiveStep#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardActiveStep/VB/wizardactivestepvb.aspx#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">相应的 <see cref="P:System.Web.UI.WebControls.Wizard.ActiveStepIndex" /> 小于 -1 或大于 <see cref="T:System.Web.UI.WebControls.WizardStepBase" /> 中的 <see cref="T:System.Web.UI.WebControls.Wizard" /> 对象数。</exception>
        <altmember cref="P:System.Web.UI.WebControls.Wizard.ActiveStepIndex" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/fs0za4w6(v=vs.100)">向导 Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="ActiveStepChanged">
      <MemberSignature Language="C#" Value="public event EventHandler ActiveStepChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ActiveStepChanged" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.Wizard.ActiveStepChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ActiveStepChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ ActiveStepChanged;" />
      <MemberSignature Language="F#" Value="member this.ActiveStepChanged : EventHandler " Usage="member this.ActiveStepChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>当用户切换到控件中的新步骤时发生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.Wizard.ActiveStepChanged>当控件中显示的当前步骤更改时，将引发事件 <xref:System.Web.UI.WebControls.Wizard> 。 <xref:System.Web.UI.WebControls.Wizard.ActiveStepChanged>当控件的当前步骤发生更改时，可以使用事件来提供其他处理 <xref:System.Web.UI.WebControls.Wizard> 。

 有关如何处理事件的详细信息，请参阅 [处理和引发事件](/dotnet/standard/events/)。



## Examples
 下面的代码示例演示如何使用 <xref:System.Web.UI.WebControls.Wizard.ActiveStepChanged> 事件更新 <xref:System.Web.UI.WebControls.Wizard.HeaderText%2A> 控件的属性 <xref:System.Web.UI.WebControls.Wizard> 。

 [!code-aspx-csharp[System.Web.UI.WebControls.WizardActiveStepChanged#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardActiveStepChanged/CS/wizardactivestepchangedcs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.WizardActiveStepChanged#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardActiveStepChanged/VB/wizardactivestepchangedvb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.Wizard.OnActiveStepChanged(System.Object,System.EventArgs)" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/fs0za4w6(v=vs.100)">向导 Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="ActiveStepIndex">
      <MemberSignature Language="C#" Value="public virtual int ActiveStepIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ActiveStepIndex" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Wizard.ActiveStepIndex" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ActiveStepIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int ActiveStepIndex { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.ActiveStepIndex : int with get, set" Usage="System.Web.UI.WebControls.Wizard.ActiveStepIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(-1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(-1)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.Themeable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.Themeable(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置当前 <see cref="T:System.Web.UI.WebControls.WizardStepBase" /> 对象的索引。</summary>
        <value>当前显示在 <see cref="T:System.Web.UI.WebControls.WizardStepBase" /> 控件中的 <see cref="T:System.Web.UI.WebControls.Wizard" /> 的索引。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.Wizard.ActiveStepIndex%2A>属性提供 <xref:System.Web.UI.WebControls.WizardStepBase> 当前在控件中显示的对象的从零开始的索引 <xref:System.Web.UI.WebControls.Wizard> 。 您可以通过编程方式设置 <xref:System.Web.UI.WebControls.Wizard.ActiveStepIndex%2A> 属性来控制运行时向用户显示的步骤。

> [!NOTE]
>  如果使用 Microsoft Visual Studio 2005，请注意， <xref:System.Web.UI.WebControls.Wizard.ActiveStepIndex%2A> 将保留在源视图中。 如果在 <xref:System.Web.UI.WebControls.Wizard.WizardSteps%2A> 设计视图中通过单击侧栏按钮来更改属性，然后运行页面，则 `Wizard` 可能不会显示控件的第一步，因为 <xref:System.Web.UI.WebControls.Wizard.ActiveStepIndex%2A> 可能会指向不同的步骤。

 如果将的值设置 <xref:System.Web.UI.WebControls.Wizard.ActiveStepIndex%2A> 为-1 以支持默认情况下不包含步骤的向导，则会发生以下行为：

-   如果以声明方式设置 <xref:System.Web.UI.WebControls.Wizard.ActiveStepIndex%2A> 为-1，或将其设置为-1 作为默认值，则控件将始终尝试呈现向导中的第一步。

-   如果以编程方式将设置 <xref:System.Web.UI.WebControls.Wizard.ActiveStepIndex%2A> 为-1，则不会呈现控件。

 无法通过主题或样式表主题设置此属性。 有关详细信息，请参阅 <xref:System.Web.UI.ThemeableAttribute> 和 [ASP.NET 主题和外观](https://docs.microsoft.com/previous-versions/aspnet/ykzx33wh(v=vs.100))。



## Examples
 下面的代码示例演示如何使用 <xref:System.Web.UI.WebControls.Wizard.ActiveStepIndex%2A> 属性来设置 <xref:System.Web.UI.WebControls.Wizard.ActiveStep%2A> 控件的属性 <xref:System.Web.UI.WebControls.Wizard> 。 如果的值 `CheckBox1.Checked` 为，则将 `true` <xref:System.Web.UI.WebControls.Wizard.ActiveStep%2A> 属性设置为 `Wizard1.Step3` ; 否则， <xref:System.Web.UI.WebControls.Wizard.ActiveStep%2A> 属性设置为 `Wizard1.Step2` 。

 [!code-aspx-csharp[System.Web.UI.WebControls.WizardActiveStepIndex#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardActiveStepIndex/CS/wizardactivestepindexcs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.WizardActiveStepIndex#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardActiveStepIndex/VB/wizardactivestepindexvb.aspx#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">所选值大于 <see cref="P:System.Web.UI.WebControls.Wizard.WizardSteps" /> 集合中定义的向导步骤的数量。</exception>
        <altmember cref="P:System.Web.UI.WebControls.Wizard.ActiveStep" />
        <altmember cref="M:System.Web.UI.WebControls.Wizard.MoveTo(System.Web.UI.WebControls.WizardStepBase)" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/fs0za4w6(v=vs.100)">向导 Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="AllowNavigationToStep">
      <MemberSignature Language="C#" Value="protected virtual bool AllowNavigationToStep (int index);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool AllowNavigationToStep(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Wizard.AllowNavigationToStep(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function AllowNavigationToStep (index As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool AllowNavigationToStep(int index);" />
      <MemberSignature Language="F#" Value="abstract member AllowNavigationToStep : int -&gt; bool&#xA;override this.AllowNavigationToStep : int -&gt; bool" Usage="wizard.AllowNavigationToStep index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">被检查的 <see cref="T:System.Web.UI.WebControls.WizardStepBase" /> 对象的索引。</param>
        <summary>使用一个布尔值来确定 <see cref="P:System.Web.UI.WebControls.Wizard.ActiveStep" /> 属性是否可以设置为与传入的索引对应的 <see cref="T:System.Web.UI.WebControls.WizardStepBase" /> 对象。</summary>
        <returns>如果传入的索引引用已经被访问过而且 <see cref="T:System.Web.UI.WebControls.WizardStepBase" /> 属性设置为 <see langword="false" /> 的 <see cref="P:System.Web.UI.WebControls.WizardStepBase.AllowReturn" />，则为 <see langword="false" />；否则为 <see langword="true" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 只能 <xref:System.Web.UI.WebControls.Wizard.AllowNavigationToStep%2A> 从派生类访问方法，因为它的 `protected` 修饰符。 在派生类中，您可以使用 <xref:System.Web.UI.WebControls.Wizard.AllowNavigationToStep%2A> 方法来确定传入的索引是否可用于设置 <xref:System.Web.UI.WebControls.Wizard.ActiveStepIndex%2A> 属性。 <xref:System.Web.UI.WebControls.Wizard.AllowNavigationToStep%2A> `false` 如果传入的索引引用已 <xref:System.Web.UI.WebControls.WizardStepBase> 访问的对象并将其属性设置为，则方法将返回 <xref:System.Web.UI.WebControls.WizardStepBase.AllowReturn%2A> `false` ; 否则 `true` 将返回。



## Examples
 下面的代码示例演示如何创建一个名为的派生类 `CustomWizard` ，并重写 <xref:System.Web.UI.WebControls.Wizard.OnSideBarButtonClick%2A> 方法。 单击控件侧栏区域中的按钮时 `CustomWizard` ，将 <xref:System.Web.UI.WebControls.Wizard.AllowNavigationToStep%2A> 调用方法来确定是否可以访问选定的步骤。 然后，会向包含的网页写入一条消息，告知用户发生了什么情况。

 [!code-aspx-csharp[System.Web.UI.WebControls.WizardAllowNavigationToStep#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardAllowNavigationToStep/CS/wizardallownavigationtostepcs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.WizardAllowNavigationToStep#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardAllowNavigationToStep/VB/wizardallownavigationtostepvb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Wizard.ActiveStepIndex" />
        <altmember cref="P:System.Web.UI.WebControls.WizardStepBase.AllowReturn" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/fs0za4w6(v=vs.100)">向导 Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="CancelButtonClick">
      <MemberSignature Language="C#" Value="public event EventHandler CancelButtonClick;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler CancelButtonClick" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.Wizard.CancelButtonClick" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CancelButtonClick As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ CancelButtonClick;" />
      <MemberSignature Language="F#" Value="member this.CancelButtonClick : EventHandler " Usage="member this.CancelButtonClick : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>单击“取消”按钮时发生****。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.Wizard.CancelButtonClick>当单击控件上的 "**取消**" 按钮时，将引发事件 <xref:System.Web.UI.WebControls.Wizard> 。 <xref:System.Web.UI.WebControls.Wizard.CancelButtonClick>当单击 "**取消**" 按钮时，可以使用事件来提供其他处理。

 有关如何处理事件的详细信息，请参阅 [处理和引发事件](/dotnet/standard/events/)。



## Examples
 下面的代码示例演示如何为事件指定事件处理程序 <xref:System.Web.UI.WebControls.Wizard.CancelButtonClick> 。 单击 " **取消** " 按钮后，该页将重定向到 http://www.wingtiptoys.com/ 。

 [!code-aspx-csharp[System.Web.UI.WebControls.WizardCancelButtonClick#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardCancelButtonClick/CS/wizardcancelbuttonclickcs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.WizardCancelButtonClick#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardCancelButtonClick/VB/wizardcancelbuttonclickvb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.Wizard.OnCancelButtonClick(System.EventArgs)" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/fs0za4w6(v=vs.100)">向导 Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="CancelButtonID">
      <MemberSignature Language="C#" Value="protected static readonly string CancelButtonID;" />
      <MemberSignature Language="ILAsm" Value=".field family static initonly string CancelButtonID" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.Wizard.CancelButtonID" />
      <MemberSignature Language="VB.NET" Value="Protected Shared ReadOnly CancelButtonID As String " />
      <MemberSignature Language="C++ CLI" Value="protected: static initonly System::String ^ CancelButtonID;" />
      <MemberSignature Language="F#" Value=" staticval mutable CancelButtonID : string" Usage="System.Web.UI.WebControls.Wizard.CancelButtonID" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>指定“取消”按钮的标识符****。 此字段是静态的且是只读的。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 此 <xref:System.Web.UI.WebControls.Wizard.CancelButtonID> 字段主要由控件开发人员使用。 的值 <xref:System.Web.UI.WebControls.Wizard.CancelButtonID> 为 `"CancelButton"` 。

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.IButtonControl" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/fs0za4w6(v=vs.100)">向导 Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="CancelButtonImageUrl">
      <MemberSignature Language="C#" Value="public virtual string CancelButtonImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CancelButtonImageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Wizard.CancelButtonImageUrl" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CancelButtonImageUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ CancelButtonImageUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CancelButtonImageUrl : string with get, set" Usage="System.Web.UI.WebControls.Wizard.CancelButtonImageUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue("")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue("")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName Language="C#">[System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.UrlProperty]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.UrlProperty&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置为“取消”按钮显示的图像的 URL****。</summary>
        <value>为控件上的 " **取消** " 按钮显示的图像的 URL <see cref="T:System.Web.UI.WebControls.Wizard" /> 。 默认值为空字符串 ("")。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 当 <xref:System.Web.UI.WebControls.Wizard.CancelButtonType%2A> 属性设置为时 <xref:System.Web.UI.WebControls.ButtonType.Image> ，使用 <xref:System.Web.UI.WebControls.Wizard.CancelButtonImageUrl%2A> 属性指定要为 " **取消** " 按钮显示的图像。

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Wizard.CancelButtonStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.CancelButtonType" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.CancelButtonText" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.CancelDestinationPageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.DisplayCancelButton" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/fs0za4w6(v=vs.100)">向导 Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="CancelButtonStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.Style CancelButtonStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.Style CancelButtonStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Wizard.CancelButtonStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CancelButtonStyle As Style" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::Style ^ CancelButtonStyle { System::Web::UI::WebControls::Style ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CancelButtonStyle : System.Web.UI.WebControls.Style" Usage="System.Web.UI.WebControls.Wizard.CancelButtonStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(null)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(null)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.NotifyParentProperty(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.NotifyParentProperty(true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Style</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取对定义“取消”按钮外观的样式属性集合的引用****。</summary>
        <value>一个对的引用 <see cref="T:System.Web.UI.WebControls.Style" /> ，该引用定义上的 **Cancel** 的样式设置 <see cref="T:System.Web.UI.WebControls.Wizard" /> 。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.Wizard.CancelButtonStyle%2A>属性定义控件上 "**取消**" 按钮的外观 <xref:System.Web.UI.WebControls.Wizard> 。 <xref:System.Web.UI.WebControls.Wizard.CancelButtonStyle%2A>属性是只读的; 但是，您可以设置它返回的对象的属性 <xref:System.Web.UI.WebControls.Style> 。 可以在窗体中以声明方式设置这些属性 `Property-Subproperty` ，其中 `Subproperty` 表示类的属性 <xref:System.Web.UI.WebControls.Style> (例如 `CancelButtonStyle-ForeColor`) 。 可以通过编程方式设置属性 `Property.Subproperty` ， (例如 `CancelButtonStyle.ForeColor`) 。

 常见设置包括自定义背景色、文本颜色和字体属性。 属性的样式设置 <xref:System.Web.UI.WebControls.Wizard.CancelButtonStyle%2A> 与属性的样式设置合并在一起 <xref:System.Web.UI.WebControls.Wizard.NavigationButtonStyle%2A> 。 在属性中应用的任何设置都将 <xref:System.Web.UI.WebControls.Wizard.CancelButtonStyle%2A> 重写属性中的相应设置 <xref:System.Web.UI.WebControls.Wizard.NavigationButtonStyle%2A> 。

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Wizard.NavigationButtonStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.CancelButtonText" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.CancelButtonType" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.CancelButtonImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.CancelDestinationPageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.DisplayCancelButton" />
        <altmember cref="T:System.Web.UI.WebControls.Style" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/fs0za4w6(v=vs.100)">向导 Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="CancelButtonText">
      <MemberSignature Language="C#" Value="public virtual string CancelButtonText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CancelButtonText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Wizard.CancelButtonText" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CancelButtonText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ CancelButtonText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CancelButtonText : string with get, set" Usage="System.Web.UI.WebControls.Wizard.CancelButtonText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Localizable(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Localizable(true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置为“取消”按钮显示的描述文字****。</summary>
        <value>为 " **取消** " 显示的文本标题 <see cref="T:System.Web.UI.WebControls.Wizard" /> 。 默认值为 <c>"Cancel"</c>。 控件的默认文本将根据服务器当前的区域设置进行本地化。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.Wizard.CancelButtonText%2A>属性包含为控件上的 "**取消**" 按钮显示的文本 <xref:System.Web.UI.WebControls.Wizard> 。 根据属性的值 <xref:System.Web.UI.WebControls.Wizard.CancelButtonType%2A> ， <xref:System.Web.UI.WebControls.Wizard.CancelButtonText%2A> 属性可以以文本形式显示在按钮上，如显示为图像的替代文本或链接文本。 下表列出了 <xref:System.Web.UI.WebControls.Wizard.CancelButtonType%2A> 值及其在 " **取消** " 按钮文本上的相应效果。

 <xref:System.Web.UI.WebControls.ButtonType.Button> 文本出现在按钮上。

 <xref:System.Web.UI.WebControls.ButtonType.Image> 文本显示为图像的替代文本。

 <xref:System.Web.UI.WebControls.ButtonType.Link> 文本显示为链接。

 设置此属性后，可以使用设计器工具自动将此属性的值保存到资源文件中。 有关详细信息，请参阅 <xref:System.ComponentModel.LocalizableAttribute> 和 [全球化和本地化](https://docs.microsoft.com/previous-versions/aspnet/c6zyy3s9(v=vs.100))。

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Wizard.CancelButtonStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.CancelButtonType" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.CancelButtonImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.CancelDestinationPageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.DisplayCancelButton" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/fs0za4w6(v=vs.100)">向导 Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="CancelButtonType">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.ButtonType CancelButtonType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.ButtonType CancelButtonType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Wizard.CancelButtonType" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CancelButtonType As ButtonType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::ButtonType CancelButtonType { System::Web::UI::WebControls::ButtonType get(); void set(System::Web::UI::WebControls::ButtonType value); };" />
      <MemberSignature Language="F#" Value="member this.CancelButtonType : System.Web.UI.WebControls.ButtonType with get, set" Usage="System.Web.UI.WebControls.Wizard.CancelButtonType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ButtonType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置呈现为“取消”按钮的按钮类型****。</summary>
        <value><see cref="T:System.Web.UI.WebControls.ButtonType" /> 值之一。 默认为 <see cref="F:System.Web.UI.WebControls.ButtonType.Button" />。</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.UI.WebControls.Wizard.CancelButtonStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.CancelButtonImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.CancelDestinationPageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.CancelButtonText" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/fs0za4w6(v=vs.100)">向导 Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="CancelCommandName">
      <MemberSignature Language="C#" Value="public static readonly string CancelCommandName;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string CancelCommandName" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.Wizard.CancelCommandName" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly CancelCommandName As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ CancelCommandName;" />
      <MemberSignature Language="F#" Value=" staticval mutable CancelCommandName : string" Usage="System.Web.UI.WebControls.Wizard.CancelCommandName" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>检索“取消”按钮的命令名****。 此字段是静态的且是只读的。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 此 <xref:System.Web.UI.WebControls.Wizard.CancelCommandName> 字段主要由控件开发人员使用。 的值 <xref:System.Web.UI.WebControls.Wizard.CancelCommandName> 为 `"Cancel"` 。

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.IButtonControl.CommandName" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/fs0za4w6(v=vs.100)">向导 Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="CancelDestinationPageUrl">
      <MemberSignature Language="C#" Value="public virtual string CancelDestinationPageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CancelDestinationPageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Wizard.CancelDestinationPageUrl" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CancelDestinationPageUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ CancelDestinationPageUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CancelDestinationPageUrl : string with get, set" Usage="System.Web.UI.WebControls.Wizard.CancelDestinationPageUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue("")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue("")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName Language="C#">[System.ComponentModel.Editor("System.Web.UI.Design.UrlEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Editor("System.Web.UI.Design.UrlEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.Themeable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.Themeable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.UrlProperty]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.UrlProperty&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.Editor("System.Web.UI.Design.UrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Editor("System.Web.UI.Design.UrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置在用户单击“取消”按钮时将定向到的 URL****。</summary>
        <value>用户单击上的 " **取消** " 时将重定向到的 URL <see cref="T:System.Web.UI.WebControls.Wizard" /> 。 默认值为空字符串("")。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.Wizard.CancelDestinationPageUrl%2A>属性指定用户单击控件上的 "**取消**" 按钮时显示的步骤 <xref:System.Web.UI.WebControls.Wizard> 。 如果将 <xref:System.Web.UI.WebControls.Wizard.DisplayCancelButton%2A> 属性设置为 `true` ，并且 <xref:System.Web.UI.WebControls.Wizard.CancelDestinationPageUrl%2A> 未设置该属性，则将刷新网页并 <xref:System.Web.UI.WebControls.Wizard.OnCancelButtonClick%2A> 引发事件。

 无法通过主题或样式表主题设置此属性。 有关详细信息，请参阅 <xref:System.Web.UI.ThemeableAttribute> 和 [ASP.NET 主题和外观](https://docs.microsoft.com/previous-versions/aspnet/ykzx33wh(v=vs.100))。

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Wizard.CancelButtonStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.CancelButtonType" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.CancelButtonImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.CancelButtonText" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.DisplayCancelButton" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/fs0za4w6(v=vs.100)">向导 Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="CellPadding">
      <MemberSignature Language="C#" Value="public virtual int CellPadding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CellPadding" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Wizard.CellPadding" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CellPadding As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int CellPadding { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.CellPadding : int with get, set" Usage="System.Web.UI.WebControls.Wizard.CellPadding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(0)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(0)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置单元格内容和单元格边框之间的空间量。</summary>
        <value>单元格的内容和单元格的边框之间的空间量（以像素为单位）。 默认值为 0。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 使用 <xref:System.Web.UI.WebControls.Wizard.CellPadding%2A> 属性可控制单元格内容和单元格边框之间的间距。 指定的填充量将添加到单元格的四个边。 列中的所有单元格都具有相同的单元宽度;因此，间距适用于列中最宽的单元格。 同样，同一行中的所有单元格都具有相同的单元高度。 这样，间距就会应用于行中最高的单元格。 无法指定单个单元大小。



## Examples
 下面的代码示例演示如何使用 <xref:System.Web.UI.WebControls.Wizard.CellPadding%2A> 和 <xref:System.Web.UI.WebControls.Wizard.CellSpacing%2A> 属性以声明方式对控件的布局进行编程 <xref:System.Web.UI.WebControls.Wizard> 。

 [!code-aspx-csharp[System.Web.UI.WebControls.WizardCellPadding#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardCellPadding/CS/wizardcellpaddingcs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.WizardCellPadding#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardCellPadding/VB/wizardcellpaddingvb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Wizard.CellSpacing" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/fs0za4w6(v=vs.100)">向导 Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="CellSpacing">
      <MemberSignature Language="C#" Value="public virtual int CellSpacing { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CellSpacing" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Wizard.CellSpacing" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CellSpacing As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int CellSpacing { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.CellSpacing : int with get, set" Usage="System.Web.UI.WebControls.Wizard.CellSpacing" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(0)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(0)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置单元格间的空间量。</summary>
        <value>单元格之间的空间量（以像素为单位）。 默认值为 0。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 使用 <xref:System.Web.UI.WebControls.Wizard.CellSpacing%2A> 属性控制向导控件中相邻单元格之间的间距。 此间距同时应用于垂直和水平。



## Examples
 下面的代码示例演示如何使用 <xref:System.Web.UI.WebControls.Wizard.CellPadding%2A> 和 <xref:System.Web.UI.WebControls.Wizard.CellSpacing%2A> 属性以声明方式对控件的布局进行编程 <xref:System.Web.UI.WebControls.Wizard> 。

 [!code-aspx-csharp[System.Web.UI.WebControls.WizardCellPadding#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardCellPadding/CS/wizardcellpaddingcs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.WizardCellPadding#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardCellPadding/VB/wizardcellpaddingvb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Wizard.CellPadding" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/fs0za4w6(v=vs.100)">向导 Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="CreateChildControls">
      <MemberSignature Language="C#" Value="protected internal override void CreateChildControls ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void CreateChildControls() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Wizard.CreateChildControls" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub CreateChildControls ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void CreateChildControls();" />
      <MemberSignature Language="F#" Value="override this.CreateChildControls : unit -&gt; unit" Usage="wizard.CreateChildControls " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>创建子控件。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateControlCollection">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.ControlCollection CreateControlCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.ControlCollection CreateControlCollection() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Wizard.CreateControlCollection" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateControlCollection () As ControlCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Web::UI::ControlCollection ^ CreateControlCollection();" />
      <MemberSignature Language="F#" Value="override this.CreateControlCollection : unit -&gt; System.Web.UI.ControlCollection" Usage="wizard.CreateControlCollection " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.ControlCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>创建控件集合。</summary>
        <returns>一个 <see cref="T:System.Web.UI.ControlCollection" /> 对象，用于包含当前服务器控件的子服务器控件。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateControlHierarchy">
      <MemberSignature Language="C#" Value="protected virtual void CreateControlHierarchy ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void CreateControlHierarchy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Wizard.CreateControlHierarchy" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub CreateControlHierarchy ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void CreateControlHierarchy();" />
      <MemberSignature Language="F#" Value="abstract member CreateControlHierarchy : unit -&gt; unit&#xA;override this.CreateControlHierarchy : unit -&gt; unit" Usage="wizard.CreateControlHierarchy " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>创建构成控件的子控件的层次结构。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">侧栏模板不包含 <see cref="T:System.Web.UI.WebControls.DataList" /> 控件。</exception>
        <altmember cref="M:System.Web.UI.WebControls.Wizard.CreateChildControls" />
        <altmember cref="M:System.Web.UI.WebControls.Wizard.CreateControlCollection" />
        <altmember cref="M:System.Web.UI.WebControls.Wizard.CreateControlStyle" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/fs0za4w6(v=vs.100)">向导 Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="CreateControlStyle">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.WebControls.Style CreateControlStyle ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.WebControls.Style CreateControlStyle() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Wizard.CreateControlStyle" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateControlStyle () As Style" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Web::UI::WebControls::Style ^ CreateControlStyle();" />
      <MemberSignature Language="F#" Value="override this.CreateControlStyle : unit -&gt; System.Web.UI.WebControls.Style" Usage="wizard.CreateControlStyle " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Style</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>创建控件样式。</summary>
        <returns>一个 <see cref="T:System.Web.UI.WebControls.Style" />，用于实现该控件的所有与样式有关的属性。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CustomFinishButtonID">
      <MemberSignature Language="C#" Value="protected static readonly string CustomFinishButtonID;" />
      <MemberSignature Language="ILAsm" Value=".field family static initonly string CustomFinishButtonID" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.Wizard.CustomFinishButtonID" />
      <MemberSignature Language="VB.NET" Value="Protected Shared ReadOnly CustomFinishButtonID As String " />
      <MemberSignature Language="C++ CLI" Value="protected: static initonly System::String ^ CustomFinishButtonID;" />
      <MemberSignature Language="F#" Value=" staticval mutable CustomFinishButtonID : string" Usage="System.Web.UI.WebControls.Wizard.CustomFinishButtonID" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>检索自定义的“完成”按钮的标识符****。 此字段是静态的且是只读的。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 此 <xref:System.Web.UI.WebControls.Wizard.CustomFinishButtonID> 字段主要由控件开发人员使用。 的值 <xref:System.Web.UI.WebControls.Wizard.CustomFinishButtonID> 为 `"CustomFinishButton"` 。

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.IButtonControl" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/fs0za4w6(v=vs.100)">向导 Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="CustomNextButtonID">
      <MemberSignature Language="C#" Value="protected static readonly string CustomNextButtonID;" />
      <MemberSignature Language="ILAsm" Value=".field family static initonly string CustomNextButtonID" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.Wizard.CustomNextButtonID" />
      <MemberSignature Language="VB.NET" Value="Protected Shared ReadOnly CustomNextButtonID As String " />
      <MemberSignature Language="C++ CLI" Value="protected: static initonly System::String ^ CustomNextButtonID;" />
      <MemberSignature Language="F#" Value=" staticval mutable CustomNextButtonID : string" Usage="System.Web.UI.WebControls.Wizard.CustomNextButtonID" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>检索自定义的“下一步”按钮的标识符****。 此字段是静态的且是只读的。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 此 <xref:System.Web.UI.WebControls.Wizard.CustomNextButtonID> 字段主要由控件开发人员使用。 的值 <xref:System.Web.UI.WebControls.Wizard.CustomNextButtonID> 为 `"CustomNextButton"` 。

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.IButtonControl" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/fs0za4w6(v=vs.100)">向导 Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="CustomPreviousButtonID">
      <MemberSignature Language="C#" Value="protected static readonly string CustomPreviousButtonID;" />
      <MemberSignature Language="ILAsm" Value=".field family static initonly string CustomPreviousButtonID" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.Wizard.CustomPreviousButtonID" />
      <MemberSignature Language="VB.NET" Value="Protected Shared ReadOnly CustomPreviousButtonID As String " />
      <MemberSignature Language="C++ CLI" Value="protected: static initonly System::String ^ CustomPreviousButtonID;" />
      <MemberSignature Language="F#" Value=" staticval mutable CustomPreviousButtonID : string" Usage="System.Web.UI.WebControls.Wizard.CustomPreviousButtonID" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>检索自定义的“上一步”按钮的标识符****。 此字段是静态的且是只读的。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 此 <xref:System.Web.UI.WebControls.Wizard.CustomPreviousButtonID> 字段主要由控件开发人员使用。 的值 <xref:System.Web.UI.WebControls.Wizard.CustomPreviousButtonID> 为 `"CustomPreviousButton"` 。

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.IButtonControl" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/fs0za4w6(v=vs.100)">向导 Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="DataListID">
      <MemberSignature Language="C#" Value="protected static readonly string DataListID;" />
      <MemberSignature Language="ILAsm" Value=".field family static initonly string DataListID" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.Wizard.DataListID" />
      <MemberSignature Language="VB.NET" Value="Protected Shared ReadOnly DataListID As String " />
      <MemberSignature Language="C++ CLI" Value="protected: static initonly System::String ^ DataListID;" />
      <MemberSignature Language="F#" Value=" staticval mutable DataListID : string" Usage="System.Web.UI.WebControls.Wizard.DataListID" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>检索侧栏 <see cref="T:System.Web.UI.WebControls.DataList" /> 集合的标识符。 此字段是静态的且是只读的。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 此 <xref:System.Web.UI.WebControls.Wizard.DataListID> 字段主要由控件开发人员使用。 的值 <xref:System.Web.UI.WebControls.Wizard.DataListID> 为 `"SideBarList"` 。

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.DataList" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/fs0za4w6(v=vs.100)">向导 Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="DisplayCancelButton">
      <MemberSignature Language="C#" Value="public virtual bool DisplayCancelButton { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayCancelButton" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Wizard.DisplayCancelButton" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property DisplayCancelButton As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool DisplayCancelButton { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.DisplayCancelButton : bool with get, set" Usage="System.Web.UI.WebControls.Wizard.DisplayCancelButton" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.Themeable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.Themeable(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个布尔值，指示是否显示“取消”按钮****。</summary>
        <value><see langword="true" /> 若要在上显示 " **取消** " <see cref="T:System.Web.UI.WebControls.Wizard" /> ，则为; 否则为 <see langword="false" /> 。 默认为 <see langword="false" />。

无法通过主题或样式表主题设置此属性。 有关详细信息，请参阅 <see cref="T:System.Web.UI.ThemeableAttribute" /> 和 [ASP.NET 主题和外观](https://docs.microsoft.com/previous-versions/aspnet/ykzx33wh(v=vs.100))。</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.UI.WebControls.Wizard.CancelButtonStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.CancelButtonType" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.CancelButtonImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.CancelButtonText" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.CancelDestinationPageUrl" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/fs0za4w6(v=vs.100)">向导 Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="DisplaySideBar">
      <MemberSignature Language="C#" Value="public virtual bool DisplaySideBar { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplaySideBar" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Wizard.DisplaySideBar" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property DisplaySideBar As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool DisplaySideBar { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.DisplaySideBar : bool with get, set" Usage="System.Web.UI.WebControls.Wizard.DisplaySideBar" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.Themeable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.Themeable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个布尔值，该值指示是否显示 <see cref="T:System.Web.UI.WebControls.Wizard" /> 控件上的侧栏区域。</summary>
        <value>如果为 <see langword="true" />，则显示 <see cref="T:System.Web.UI.WebControls.Wizard" /> 上的侧栏区域；否则为 <see langword="false" />。 默认为 <see langword="true" />。

无法通过主题或样式表主题设置此属性。 有关详细信息，请参阅 <see cref="T:System.Web.UI.ThemeableAttribute" /> 和 [ASP.NET 主题和外观](https://docs.microsoft.com/previous-versions/aspnet/ykzx33wh(v=vs.100))。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 控件的呈现可能有不同， <xref:System.Web.UI.WebControls.Wizard> 具体取决于此属性是设置为 `true` 还是 `false` 。 如果此属性值设置为 `true` 并且显示了边栏，则单元格间距不会应用于 `HeadCell` 控件表的、 `StepCell` 或 `NavigationCell` 元素。 如果该值为 `false` ，则应用单元间距。 这可能会影响控件的呈现方式。

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Wizard.SideBarTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.SideBarStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.SideBarButtonStyle" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/fs0za4w6(v=vs.100)">向导 Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="FinishButtonClick">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.WizardNavigationEventHandler FinishButtonClick;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.WizardNavigationEventHandler FinishButtonClick" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.Wizard.FinishButtonClick" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event FinishButtonClick As WizardNavigationEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::WizardNavigationEventHandler ^ FinishButtonClick;" />
      <MemberSignature Language="F#" Value="member this.FinishButtonClick : System.Web.UI.WebControls.WizardNavigationEventHandler " Usage="member this.FinishButtonClick : System.Web.UI.WebControls.WizardNavigationEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WizardNavigationEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>单击“完成”按钮时发生****。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.Wizard.FinishButtonClick>当单击控件上的 "**完成**" 按钮时，将引发事件 <xref:System.Web.UI.WebControls.Wizard> 。 <xref:System.Web.UI.WebControls.Wizard.FinishButtonClick>当单击 "**完成**" 按钮时，可以使用事件来提供其他处理。

 有关如何处理事件的详细信息，请参阅 [处理和引发事件](/dotnet/standard/events/)。



## Examples
 下面的代码示例演示如何为事件指定事件处理程序 <xref:System.Web.UI.WebControls.Wizard.FinishButtonClick> 。 单击 " **完成** " 按钮后，将向写入一条确认消息， `Label1` 并将 `Label1.Visible` 属性设置为， `true` 以使消息显示在步骤中。

 [!code-aspx-csharp[System.Web.UI.WebControls.WizardFinishButtonClick#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardFinishButtonClick/CS/wizardfinishbuttonclickcs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.WizardFinishButtonClick#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardFinishButtonClick/VB/wizardfinishbuttonclickvb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.Wizard.OnFinishButtonClick(System.Web.UI.WebControls.WizardNavigationEventArgs)" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/fs0za4w6(v=vs.100)">向导 Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="FinishButtonID">
      <MemberSignature Language="C#" Value="protected static readonly string FinishButtonID;" />
      <MemberSignature Language="ILAsm" Value=".field family static initonly string FinishButtonID" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.Wizard.FinishButtonID" />
      <MemberSignature Language="VB.NET" Value="Protected Shared ReadOnly FinishButtonID As String " />
      <MemberSignature Language="C++ CLI" Value="protected: static initonly System::String ^ FinishButtonID;" />
      <MemberSignature Language="F#" Value=" staticval mutable FinishButtonID : string" Usage="System.Web.UI.WebControls.Wizard.FinishButtonID" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>检索“完成”按钮的标识符****。 此字段是静态的且是只读的。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 此 <xref:System.Web.UI.WebControls.Wizard.FinishButtonID> 字段主要由控件开发人员使用。 的值 <xref:System.Web.UI.WebControls.Wizard.FinishButtonID> 为 `"FinishButton"` 。

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.IButtonControl" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/fs0za4w6(v=vs.100)">向导 Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="FinishCompleteButtonImageUrl">
      <MemberSignature Language="C#" Value="public virtual string FinishCompleteButtonImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FinishCompleteButtonImageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Wizard.FinishCompleteButtonImageUrl" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property FinishCompleteButtonImageUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ FinishCompleteButtonImageUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.FinishCompleteButtonImageUrl : string with get, set" Usage="System.Web.UI.WebControls.Wizard.FinishCompleteButtonImageUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue("")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue("")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName Language="C#">[System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.UrlProperty]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.UrlProperty&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置为“完成”按钮显示的图像的 URL****。</summary>
        <value>在上为 " **完成** " 显示的图像的 URL <see cref="T:System.Web.UI.WebControls.Wizard" /> 。 默认值为空字符串("")。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 当 <xref:System.Web.UI.WebControls.Wizard.FinishCompleteButtonType%2A> 属性设置为 <xref:System.Web.UI.WebControls.ButtonType.Image> 字段时，请使用 <xref:System.Web.UI.WebControls.Wizard.FinishCompleteButtonImageUrl%2A> 属性指定要为 " **完成** " 按钮显示的图像。

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Wizard.FinishCompleteButtonText" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.FinishCompleteButtonType" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.FinishCompleteButtonStyle" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/fs0za4w6(v=vs.100)">向导 Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="FinishCompleteButtonStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.Style FinishCompleteButtonStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.Style FinishCompleteButtonStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Wizard.FinishCompleteButtonStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FinishCompleteButtonStyle As Style" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::Style ^ FinishCompleteButtonStyle { System::Web::UI::WebControls::Style ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FinishCompleteButtonStyle : System.Web.UI.WebControls.Style" Usage="System.Web.UI.WebControls.Wizard.FinishCompleteButtonStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(null)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(null)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.NotifyParentProperty(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.NotifyParentProperty(true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Style</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个对 <see cref="T:System.Web.UI.WebControls.Style" /> 对象的引用，该对象定义“完成”按钮的设置****。</summary>
        <value>一个对的引用 <see cref="T:System.Web.UI.WebControls.Style" /> ，该引用定义上的 " **完成** " 的样式设置 <see cref="T:System.Web.UI.WebControls.Wizard" /> 。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.Wizard.FinishCompleteButtonStyle%2A>属性定义控件上 "**完成**" 按钮的外观 <xref:System.Web.UI.WebControls.Wizard> 。 <xref:System.Web.UI.WebControls.Wizard.FinishCompleteButtonStyle%2A>属性是只读的; 但是，您可以设置它返回的对象的属性 <xref:System.Web.UI.WebControls.Style> 。 可以在窗体中以声明方式设置这些属性 `Property-Subproperty` ，其中 `Subproperty` 表示类的属性 <xref:System.Web.UI.WebControls.Style> (例如 `CancelButtonStyle-ForeColor`) 。 可以通过编程方式设置属性 `Property.Subproperty` ， (例如 `CancelButtonStyle.ForeColor`) 。

 常见设置包括自定义背景色、文本颜色和字体属性。 属性的样式设置 <xref:System.Web.UI.WebControls.Wizard.FinishCompleteButtonStyle%2A> 与属性的样式设置合并在一起 <xref:System.Web.UI.WebControls.Wizard.NavigationButtonStyle%2A> 。 在属性中应用的任何设置都将 <xref:System.Web.UI.WebControls.Wizard.FinishCompleteButtonStyle%2A> 重写属性中的相应设置 <xref:System.Web.UI.WebControls.Wizard.NavigationButtonStyle%2A> 。

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Wizard.NavigationButtonStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.FinishCompleteButtonText" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.FinishCompleteButtonType" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.FinishCompleteButtonImageUrl" />
        <altmember cref="T:System.Web.UI.WebControls.Style" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/fs0za4w6(v=vs.100)">向导 Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="FinishCompleteButtonText">
      <MemberSignature Language="C#" Value="public virtual string FinishCompleteButtonText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FinishCompleteButtonText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Wizard.FinishCompleteButtonText" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property FinishCompleteButtonText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ FinishCompleteButtonText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.FinishCompleteButtonText : string with get, set" Usage="System.Web.UI.WebControls.Wizard.FinishCompleteButtonText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Localizable(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Localizable(true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置为“完成”按钮显示的描述文字****。</summary>
        <value>为中的 " **完成** " 显示的文本标题 <see cref="T:System.Web.UI.WebControls.Wizard" /> 。 默认值为 <c>"Finish"</c>。 控件的默认文本将根据服务器当前的区域设置进行本地化。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.Wizard.FinishCompleteButtonText%2A>属性包含为控件上的 "**完成**" 按钮显示的文本 <xref:System.Web.UI.WebControls.Wizard> 。 根据属性的值 <xref:System.Web.UI.WebControls.Wizard.FinishCompleteButtonType%2A> ， <xref:System.Web.UI.WebControls.Wizard.FinishCompleteButtonText%2A> 属性可以作为按钮上的文本出现，作为在不呈现图像的浏览器中显示为图像的替代文本，或显示为链接的文本。 下表列出了属性的字段值，并列出了 " <xref:System.Web.UI.WebControls.Wizard.FinishCompleteButtonType%2A> **完成** " 按钮文本上每个字段的作用。

 <xref:System.Web.UI.WebControls.ButtonType.Button> 文本出现在按钮上。

 <xref:System.Web.UI.WebControls.ButtonType.Image> 文本显示为图像的替代文本。

 <xref:System.Web.UI.WebControls.ButtonType.Link> 文本显示为链接文本。

 设置此属性后，可以使用设计器工具自动将此属性的值保存到资源文件中。 有关详细信息，请参阅 <xref:System.ComponentModel.LocalizableAttribute> 和 [全球化和本地化](https://docs.microsoft.com/previous-versions/aspnet/c6zyy3s9(v=vs.100))。

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Wizard.FinishCompleteButtonType" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.FinishCompleteButtonStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.FinishCompleteButtonImageUrl" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/fs0za4w6(v=vs.100)">向导 Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="FinishCompleteButtonType">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.ButtonType FinishCompleteButtonType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.ButtonType FinishCompleteButtonType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Wizard.FinishCompleteButtonType" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property FinishCompleteButtonType As ButtonType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::ButtonType FinishCompleteButtonType { System::Web::UI::WebControls::ButtonType get(); void set(System::Web::UI::WebControls::ButtonType value); };" />
      <MemberSignature Language="F#" Value="member this.FinishCompleteButtonType : System.Web.UI.WebControls.ButtonType with get, set" Usage="System.Web.UI.WebControls.Wizard.FinishCompleteButtonType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ButtonType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置呈现为“完成”按钮的按钮类型****。</summary>
        <value><see cref="T:System.Web.UI.WebControls.ButtonType" /> 值之一。 默认为 <see cref="F:System.Web.UI.WebControls.ButtonType.Button" />。</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.UI.WebControls.Wizard.FinishCompleteButtonText" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.FinishCompleteButtonStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.FinishCompleteButtonImageUrl" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/fs0za4w6(v=vs.100)">向导 Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="FinishDestinationPageUrl">
      <MemberSignature Language="C#" Value="public virtual string FinishDestinationPageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FinishDestinationPageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Wizard.FinishDestinationPageUrl" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property FinishDestinationPageUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ FinishDestinationPageUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.FinishDestinationPageUrl : string with get, set" Usage="System.Web.UI.WebControls.Wizard.FinishDestinationPageUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue("")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue("")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName Language="C#">[System.ComponentModel.Editor("System.Web.UI.Design.UrlEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Editor("System.Web.UI.Design.UrlEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.Themeable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.Themeable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.UrlProperty]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.UrlProperty&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.Editor("System.Web.UI.Design.UrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Editor("System.Web.UI.Design.UrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置在用户单击“完成”按钮时将重定向到的 URL****。</summary>
        <value>用户单击上的 " **完成** " 时将重定向到的 URL <see cref="T:System.Web.UI.WebControls.Wizard" /> 。 默认值为空字符串("")。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.Wizard.FinishDestinationPageUrl%2A>属性指定用户单击控件上的 "**完成**" 按钮时显示的步骤 <xref:System.Web.UI.WebControls.Wizard> 。

 无法通过主题或样式表主题设置此属性。 有关详细信息，请参阅 <xref:System.Web.UI.ThemeableAttribute> 和 [ASP.NET 主题和外观](https://docs.microsoft.com/previous-versions/aspnet/ykzx33wh(v=vs.100))。

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Wizard.FinishCompleteButtonStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.FinishCompleteButtonType" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.FinishCompleteButtonText" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/fs0za4w6(v=vs.100)">向导 Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="FinishNavigationTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate FinishNavigationTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate FinishNavigationTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Wizard.FinishNavigationTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property FinishNavigationTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ FinishNavigationTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberSignature Language="F#" Value="member this.FinishNavigationTemplate : System.Web.UI.ITemplate with get, set" Usage="System.Web.UI.WebControls.Wizard.FinishNavigationTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(null)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(null)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.Wizard))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.Wizard))&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置在 <see cref="F:System.Web.UI.WebControls.WizardStepType.Finish" /> 步骤中用于显示导航区域的模板。</summary>
        <value><see cref="T:System.Web.UI.ITemplate" />，定义 <see cref="F:System.Web.UI.WebControls.WizardStepType.Finish" /> 上 <see cref="T:System.Web.UI.WebControls.Wizard" /> 的导航区域的内容。 默认为 <see langword="null" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 使用 <xref:System.Web.UI.WebControls.Wizard.FinishNavigationTemplate%2A> 属性指定为控件的步骤显示的导航区域的自定义内容 <xref:System.Web.UI.WebControls.WizardStepType.Finish> <xref:System.Web.UI.WebControls.Wizard> 。 通过创建指定如何在步骤中呈现导航区域的模板来定义内容 <xref:System.Web.UI.WebControls.WizardStepType.Finish> 。

 模板的自定义内容包含在 <xref:System.Web.UI.WebControls.Wizard.FinishNavigationTemplate%2A> 对象内。 您可以 <xref:System.Web.UI.WebControls.Wizard.FinishNavigationTemplate%2A> 通过在 "设计" 视图中使用模板编辑模式或通过使用标记来定义嵌入对象，将自定义内容添加到对象 <xref:System.Web.UI.WebControls.Wizard.FinishNavigationTemplate%2A> `FinishNavigationTemplate` 。 内容可以与纯文本或更复杂 (嵌入模板中的其他控件一样简单，例如) 。

> [!NOTE]
>  <xref:System.Web.UI.WebControls.Wizard.FinishNavigationTemplate%2A>属性中包含的对象 <xref:System.Web.UI.WebControls.Wizard.FinishNavigationTemplate%2A> 必须包含两个 <xref:System.Web.UI.WebControls.IButtonControl> 控件，一个控件的 <xref:System.Web.UI.WebControls.IButtonControl.CommandName%2A> 属性设置为 "MoveComplete"，另一个控件的 <xref:System.Web.UI.WebControls.IButtonControl.CommandName%2A> 属性设置为 "MovePrevious"，以启用导航功能。

 若要以编程方式访问在模板中定义的控件，请使用 <xref:System.Web.UI.WebControls.CompositeControl.Controls%2A> 对象的集合 <xref:System.Web.UI.WebControls.Wizard> 。 <xref:System.Web.UI.Control.FindControl%2A> <xref:System.Web.UI.WebControls.Wizard> 如果控件具有指定的属性，则还可以使用对象的方法来查找控件 <xref:System.Web.UI.Control.ID%2A> 。



## Examples
 下面的代码示例演示如何使用属性为 <xref:System.Web.UI.WebControls.Wizard.FinishNavigationTemplate%2A> 控件的步骤导航区域创建自定义模板 <xref:System.Web.UI.WebControls.WizardStepType.Finish> <xref:System.Web.UI.WebControls.Wizard> 。

> [!IMPORTANT]
>  此示例具有一个接受用户输入的文本框，这是一个潜在的安全威胁。 默认情况下，ASP.NET 网页验证用户输入是否不包含脚本或 HTML 元素。 有关详细信息，请参阅[脚本侵入概述](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100))。

 [!code-aspx-csharp[System.Web.UI.WebControls.WizardFinishNavigationTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardFinishNavigationTemplate/CS/wizardfinishnavigationtemplatecs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.WizardFinishNavigationTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardFinishNavigationTemplate/VB/wizardfinishnavigationtemplatevb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="F:System.Web.UI.WebControls.WizardStepType.Finish" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.StartNavigationTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.StepNavigationTemplate" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/fs0za4w6(v=vs.100)">向导 Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="FinishPreviousButtonID">
      <MemberSignature Language="C#" Value="protected static readonly string FinishPreviousButtonID;" />
      <MemberSignature Language="ILAsm" Value=".field family static initonly string FinishPreviousButtonID" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.Wizard.FinishPreviousButtonID" />
      <MemberSignature Language="VB.NET" Value="Protected Shared ReadOnly FinishPreviousButtonID As String " />
      <MemberSignature Language="C++ CLI" Value="protected: static initonly System::String ^ FinishPreviousButtonID;" />
      <MemberSignature Language="F#" Value=" staticval mutable FinishPreviousButtonID : string" Usage="System.Web.UI.WebControls.Wizard.FinishPreviousButtonID" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>检索 <see cref="F:System.Web.UI.WebControls.WizardStepType.Finish" /> 步骤中的“上一步”按钮的标识符****。 此字段是静态的且是只读的。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 此 <xref:System.Web.UI.WebControls.Wizard.FinishPreviousButtonID> 字段主要由控件开发人员使用。 的值 <xref:System.Web.UI.WebControls.Wizard.FinishPreviousButtonID> `"FinishPreviousButton"` 。

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.IButtonControl" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/fs0za4w6(v=vs.100)">向导 Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="FinishPreviousButtonImageUrl">
      <MemberSignature Language="C#" Value="public virtual string FinishPreviousButtonImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FinishPreviousButtonImageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Wizard.FinishPreviousButtonImageUrl" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property FinishPreviousButtonImageUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ FinishPreviousButtonImageUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.FinishPreviousButtonImageUrl : string with get, set" Usage="System.Web.UI.WebControls.Wizard.FinishPreviousButtonImageUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue("")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue("")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName Language="C#">[System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.UrlProperty]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.UrlProperty&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置为 <see cref="F:System.Web.UI.WebControls.WizardStepType.Finish" /> 步骤中的“上一步”按钮显示的图像的 URL****。</summary>
        <value>为的上的 "上 **一步** " 显示的图像的 URL <see cref="F:System.Web.UI.WebControls.WizardStepType.Finish" /> <see cref="T:System.Web.UI.WebControls.Wizard" /> 。 默认值为空字符串("")。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 当 <xref:System.Web.UI.WebControls.Wizard.FinishPreviousButtonType%2A> 属性设置为 <xref:System.Web.UI.WebControls.ButtonType.Image> 字段时，使用 <xref:System.Web.UI.WebControls.Wizard.FinishPreviousButtonImageUrl%2A> 属性指定为步骤中的 " **上一** 步" 按钮显示的图像 <xref:System.Web.UI.WebControls.WizardStepType.Finish> 。

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Wizard.FinishPreviousButtonStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.FinishPreviousButtonText" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.FinishPreviousButtonType" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/fs0za4w6(v=vs.100)">向导 Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="FinishPreviousButtonStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.Style FinishPreviousButtonStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.Style FinishPreviousButtonStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Wizard.FinishPreviousButtonStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FinishPreviousButtonStyle As Style" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::Style ^ FinishPreviousButtonStyle { System::Web::UI::WebControls::Style ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FinishPreviousButtonStyle : System.Web.UI.WebControls.Style" Usage="System.Web.UI.WebControls.Wizard.FinishPreviousButtonStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(null)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(null)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.NotifyParentProperty(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.NotifyParentProperty(true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Style</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个对 <see cref="T:System.Web.UI.WebControls.Style" /> 对象的引用，该对象定义 <see cref="F:System.Web.UI.WebControls.WizardStepType.Finish" /> 步骤中“上一步”按钮的设置****。</summary>
        <value>一个对的引用，该引用定义的上的 <see cref="T:System.Web.UI.WebControls.Style" /> " **上一步** " 的样式设置 <see cref="F:System.Web.UI.WebControls.WizardStepType.Finish" /> <see cref="T:System.Web.UI.WebControls.Wizard" /> 。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.Wizard.FinishPreviousButtonStyle%2A>属性定义控件步骤中 "**上一**步" 按钮的外观 <xref:System.Web.UI.WebControls.WizardStepType.Finish> <xref:System.Web.UI.WebControls.Wizard> 。 <xref:System.Web.UI.WebControls.Wizard.FinishPreviousButtonStyle%2A>属性是只读的; 但是，您可以设置它返回的对象的属性 <xref:System.Web.UI.WebControls.Style> 。 可以在窗体中以声明方式设置这些属性 `Property-Subproperty` ，其中 `Subproperty` 表示类的属性 <xref:System.Web.UI.WebControls.Style> (例如 `CancelButtonStyle-ForeColor`) 。 可以通过编程方式设置属性 `Property.Subproperty` ， (例如 `CancelButtonStyle.ForeColor`) 。

 常见设置包括自定义背景色、文本颜色和字体属性。 属性的样式设置 <xref:System.Web.UI.WebControls.Wizard.FinishPreviousButtonStyle%2A> 与属性的样式设置合并在一起 <xref:System.Web.UI.WebControls.Wizard.NavigationButtonStyle%2A> 。 在属性中应用的任何设置都将 <xref:System.Web.UI.WebControls.Wizard.FinishPreviousButtonStyle%2A> 重写属性中的相应设置 <xref:System.Web.UI.WebControls.Wizard.NavigationButtonStyle%2A> 。

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Wizard.FinishPreviousButtonText" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.FinishPreviousButtonType" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.FinishPreviousButtonImageUrl" />
        <altmember cref="T:System.Web.UI.WebControls.Style" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/fs0za4w6(v=vs.100)">向导 Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="FinishPreviousButtonText">
      <MemberSignature Language="C#" Value="public virtual string FinishPreviousButtonText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FinishPreviousButtonText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Wizard.FinishPreviousButtonText" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property FinishPreviousButtonText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ FinishPreviousButtonText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.FinishPreviousButtonText : string with get, set" Usage="System.Web.UI.WebControls.Wizard.FinishPreviousButtonText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Localizable(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Localizable(true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置为 <see cref="F:System.Web.UI.WebControls.WizardStepType.Finish" /> 步骤中的“上一步”按钮显示的描述文字****。</summary>
        <value>为的上的 "上 **一步** " 显示的文本标题 <see cref="F:System.Web.UI.WebControls.WizardStepType.Finish" /> <see cref="T:System.Web.UI.WebControls.Wizard" /> 。 默认值为 <c>"上一步"</c>。 控件的默认文本将根据服务器当前的区域设置进行本地化。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.Wizard.FinishPreviousButtonText%2A>属性包含为控件的步骤中 "**上一**步" 按钮显示的文本 <xref:System.Web.UI.WebControls.WizardStepType.Finish> <xref:System.Web.UI.WebControls.Wizard> 。 根据属性的值 <xref:System.Web.UI.WebControls.Wizard.FinishPreviousButtonType%2A> ， <xref:System.Web.UI.WebControls.Wizard.FinishPreviousButtonText%2A> 属性可以作为按钮上的文本出现，作为在不呈现图像的浏览器中显示为图像的替代文本，或显示为链接的文本。 下表列出了 <xref:System.Web.UI.WebControls.Wizard.FinishPreviousButtonType%2A> 属性字段值以及对 **上一个** 按钮文本的相应效果。

 <xref:System.Web.UI.WebControls.ButtonType.Button> 文本出现在按钮上。

 <xref:System.Web.UI.WebControls.ButtonType.Image> 文本显示为图像的替代文本。

 <xref:System.Web.UI.WebControls.ButtonType.Link> 文本显示为链接。

 设置此属性后，可以使用设计器工具自动将此属性的值保存到资源文件中。 有关详细信息，请参阅 <xref:System.ComponentModel.LocalizableAttribute> 和 [全球化和本地化](https://docs.microsoft.com/previous-versions/aspnet/c6zyy3s9(v=vs.100))。

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Wizard.FinishPreviousButtonImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.FinishPreviousButtonType" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.FinishPreviousButtonStyle" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/fs0za4w6(v=vs.100)">向导 Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="FinishPreviousButtonType">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.ButtonType FinishPreviousButtonType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.ButtonType FinishPreviousButtonType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Wizard.FinishPreviousButtonType" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property FinishPreviousButtonType As ButtonType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::ButtonType FinishPreviousButtonType { System::Web::UI::WebControls::ButtonType get(); void set(System::Web::UI::WebControls::ButtonType value); };" />
      <MemberSignature Language="F#" Value="member this.FinishPreviousButtonType : System.Web.UI.WebControls.ButtonType with get, set" Usage="System.Web.UI.WebControls.Wizard.FinishPreviousButtonType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ButtonType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置呈现为 <see cref="F:System.Web.UI.WebControls.WizardStepType.Finish" /> 步骤中的“上一步”按钮的按钮类型****。</summary>
        <value><see cref="T:System.Web.UI.WebControls.ButtonType" /> 值之一。 默认为 <see cref="F:System.Web.UI.WebControls.ButtonType.Button" />。</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.UI.WebControls.Wizard.FinishPreviousButtonImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.FinishPreviousButtonText" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.FinishPreviousButtonStyle" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/fs0za4w6(v=vs.100)">向导 Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="GetDesignModeState">
      <MemberSignature Language="C#" Value="protected override System.Collections.IDictionary GetDesignModeState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Collections.IDictionary GetDesignModeState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Wizard.GetDesignModeState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetDesignModeState () As IDictionary" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Collections::IDictionary ^ GetDesignModeState();" />
      <MemberSignature Language="F#" Value="override this.GetDesignModeState : unit -&gt; System.Collections.IDictionary" Usage="wizard.GetDesignModeState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IDictionary</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>获取设计模式的状态。</summary>
        <returns>包含控件的设计时数据的 <see cref="T:System.Collections.IDictionary" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHistory">
      <MemberSignature Language="C#" Value="public System.Collections.ICollection GetHistory ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.ICollection GetHistory() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Wizard.GetHistory" />
      <MemberSignature Language="VB.NET" Value="Public Function GetHistory () As ICollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ICollection ^ GetHistory();" />
      <MemberSignature Language="F#" Value="member this.GetHistory : unit -&gt; System.Collections.ICollection" Usage="wizard.GetHistory " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>返回已经被访问过的 <see cref="T:System.Web.UI.WebControls.WizardStepBase" /> 对象的集合。</summary>
        <returns>一个 <see cref="T:System.Collections.ICollection" />，包含已经被访问过的 <see cref="T:System.Web.UI.WebControls.WizardStepBase" /> 对象。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.Wizard.GetHistory%2A>方法返回一个集合，其中包含已 <xref:System.Web.UI.WebControls.WizardStepBase> 访问的对象。 按 <xref:System.Web.UI.WebControls.WizardStepBase> 对象的访问顺序排列对象：集合中的第一项是上一个 <xref:System.Web.UI.WebControls.WizardStepBase> 对象，集合中的第二项是在 <xref:System.Web.UI.WebControls.WizardStepBase> 上一步骤之前访问的对象，依次类推。

 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/fs0za4w6(v=vs.100)">向导 Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="GetStepType">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.WizardStepType GetStepType (System.Web.UI.WebControls.WizardStepBase wizardStep, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Web.UI.WebControls.WizardStepType GetStepType(class System.Web.UI.WebControls.WizardStepBase wizardStep, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Wizard.GetStepType(System.Web.UI.WebControls.WizardStepBase,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetStepType (wizardStep As WizardStepBase, index As Integer) As WizardStepType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::UI::WebControls::WizardStepType GetStepType(System::Web::UI::WebControls::WizardStepBase ^ wizardStep, int index);" />
      <MemberSignature Language="F#" Value="member this.GetStepType : System.Web.UI.WebControls.WizardStepBase * int -&gt; System.Web.UI.WebControls.WizardStepType" Usage="wizard.GetStepType (wizardStep, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WizardStepType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="wizardStep" Type="System.Web.UI.WebControls.WizardStepBase" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="wizardStep">将为其返回关联的 <see cref="T:System.Web.UI.WebControls.WizardStepType" /> 的 <see cref="T:System.Web.UI.WebControls.WizardStepBase" />。</param>
        <param name="index">将为其返回关联的 <see cref="T:System.Web.UI.WebControls.WizardStepType" /> 的 <see cref="T:System.Web.UI.WebControls.WizardStepBase" /> 的索引。</param>
        <summary>返回指定的 <see cref="T:System.Web.UI.WebControls.WizardStepType" /> 对象的 <see cref="T:System.Web.UI.WebControls.WizardStepBase" /> 值。</summary>
        <returns><see cref="T:System.Web.UI.WebControls.WizardStepType" /> 值之一。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 使用 <xref:System.Web.UI.WebControls.Wizard.GetStepType%2A> 方法可确定 <xref:System.Web.UI.WebControls.WizardStepType> 指定对象的值 <xref:System.Web.UI.WebControls.WizardStepBase> 。



## Examples
 下面的代码示例演示如何使用 <xref:System.Web.UI.WebControls.Wizard.GetStepType%2A> 方法来确定 <xref:System.Web.UI.WebControls.WizardStepType> 控件当前步骤的关联值 <xref:System.Web.UI.WebControls.Wizard> 。 每次 <xref:System.Web.UI.WebControls.Wizard.ActiveStepChanged> 引发事件时， <xref:System.Web.UI.WebControls.WizardStepType> 都会检索新值并写入消息 `Label1` 。

 [!code-aspx-csharp[System.Web.UI.WebControls.WizardGetStepType#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardGetStepType/CS/wizardgetsteptypecs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.WizardGetStepType#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardGetStepType/VB/wizardgetsteptypevb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.WizardStepType" />
        <altmember cref="T:System.Web.UI.WebControls.WizardStepBase" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/fs0za4w6(v=vs.100)">向导 Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="HeaderPlaceholderId">
      <MemberSignature Language="C#" Value="public static readonly string HeaderPlaceholderId;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string HeaderPlaceholderId" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.Wizard.HeaderPlaceholderId" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly HeaderPlaceholderId As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ HeaderPlaceholderId;" />
      <MemberSignature Language="F#" Value=" staticval mutable HeaderPlaceholderId : string" Usage="System.Web.UI.WebControls.Wizard.HeaderPlaceholderId" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取 <see cref="P:System.Web.UI.WebControls.Wizard.HeaderTemplate" /> 控件中 <see cref="T:System.Web.UI.WebControls.Wizard" /> 占位符的 ID。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 占位符 ID 必须设置为 "headerPlaceHolder"。

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HeaderStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle HeaderStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle HeaderStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Wizard.HeaderStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HeaderStyle As TableItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TableItemStyle ^ HeaderStyle { System::Web::UI::WebControls::TableItemStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.HeaderStyle : System.Web.UI.WebControls.TableItemStyle" Usage="System.Web.UI.WebControls.Wizard.HeaderStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(null)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(null)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.NotifyParentProperty(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.NotifyParentProperty(true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个对 <see cref="T:System.Web.UI.WebControls.Style" /> 对象的引用，该对象定义控件上标题区域的设置。</summary>
        <value>一个对 <see cref="T:System.Web.UI.WebControls.Style" /> 的引用，该对象定义 <see cref="T:System.Web.UI.WebControls.Wizard" /> 上标题区域的样式设置。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.Wizard.HeaderStyle%2A>属性定义控件上标题区域的外观 <xref:System.Web.UI.WebControls.Wizard> 。 <xref:System.Web.UI.WebControls.Wizard.HeaderStyle%2A>属性是只读的; 但是，您可以设置它返回的对象的属性 <xref:System.Web.UI.WebControls.Style> 。 可以在窗体中以声明方式设置这些属性 `Property-Subproperty` ，其中 `Subproperty` 表示类的属性 <xref:System.Web.UI.WebControls.Style> (例如 `CancelButtonStyle-ForeColor`) 。 可以通过编程方式设置属性 `Property.Subproperty` ， (例如 `CancelButtonStyle.ForeColor`) 。

 常见设置包括自定义背景色、文本颜色和字体属性。

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Wizard.HeaderTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.HeaderText" />
        <altmember cref="T:System.Web.UI.WebControls.Style" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/fs0za4w6(v=vs.100)">向导 Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="HeaderTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate HeaderTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate HeaderTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Wizard.HeaderTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property HeaderTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ HeaderTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberSignature Language="F#" Value="member this.HeaderTemplate : System.Web.UI.ITemplate with get, set" Usage="System.Web.UI.WebControls.Wizard.HeaderTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(null)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(null)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.Wizard))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.Wizard))&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置用于显示控件上标题区域的模板。</summary>
        <value>一个 <see cref="T:System.Web.UI.ITemplate" />，它包含用于显示 <see cref="T:System.Web.UI.WebControls.Wizard" /> 上标题区域的模板。 默认为 <see langword="null" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 使用 <xref:System.Web.UI.WebControls.Wizard.HeaderTemplate%2A> 属性指定为控件上的标题区域显示的自定义内容 <xref:System.Web.UI.WebControls.Wizard> 。 通过创建指定如何呈现页眉区的模板来定义内容。

 模板的自定义内容包含在 <xref:System.Web.UI.WebControls.Wizard.HeaderTemplate%2A> 对象内。 您可以 <xref:System.Web.UI.WebControls.Wizard.HeaderTemplate%2A> 通过在 "设计" 视图中使用模板编辑模式或通过使用标记来定义嵌入对象，将自定义内容添加到对象 <xref:System.Web.UI.WebControls.Wizard.HeaderTemplate%2A> `HeaderTemplate` 。 内容可以与纯文本或更复杂 (嵌入模板中的其他控件一样简单，例如) 。

 若要以编程方式访问在模板中定义的控件，请使用 <xref:System.Web.UI.WebControls.CompositeControl.Controls%2A> 对象的集合 <xref:System.Web.UI.WebControls.Wizard> 。 <xref:System.Web.UI.Control.FindControl%2A> <xref:System.Web.UI.WebControls.Wizard> 如果控件具有指定的属性，则还可以使用对象的方法来查找控件 <xref:System.Web.UI.Control.ID%2A> 。

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Wizard.HeaderStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.HeaderText" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/fs0za4w6(v=vs.100)">向导 Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="HeaderText">
      <MemberSignature Language="C#" Value="public virtual string HeaderText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HeaderText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Wizard.HeaderText" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property HeaderText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ HeaderText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.HeaderText : string with get, set" Usage="System.Web.UI.WebControls.Wizard.HeaderText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue("")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue("")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Localizable(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Localizable(true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置为在控件上的标题区域显示的文本标题。</summary>
        <value>为 <see cref="T:System.Web.UI.WebControls.Wizard" /> 上的标题区域显示的文本标题。 默认值为空字符串("")。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.Wizard.HeaderText%2A>属性定义为控件上的标题区域显示的文本标题 <xref:System.Web.UI.WebControls.Wizard> 。

 若要控制标题区的样式，请使用 <xref:System.Web.UI.WebControls.Wizard.HeaderStyle%2A> 属性。 或者，您可以通过设置 <xref:System.Web.UI.WebControls.Wizard.HeaderTemplate%2A> 属性而不是属性来为标题行定义您自己的自定义 UI <xref:System.Web.UI.WebControls.Wizard.HeaderText%2A> 。

> [!NOTE]
>  如果同时 <xref:System.Web.UI.WebControls.Wizard.HeaderText%2A> 定义了和 <xref:System.Web.UI.WebControls.Wizard.HeaderTemplate%2A> 属性，则 <xref:System.Web.UI.WebControls.Wizard.HeaderText%2A> 属性不起作用。

 设置此属性后，可以使用设计器工具自动将此属性的值保存到资源文件中。 有关详细信息，请参阅 <xref:System.ComponentModel.LocalizableAttribute> 和 [全球化和本地化](https://docs.microsoft.com/previous-versions/aspnet/c6zyy3s9(v=vs.100))。



## Examples
 下面的代码示例演示如何使用 <xref:System.Web.UI.WebControls.Wizard.ActiveStepChanged> 事件更新 <xref:System.Web.UI.WebControls.Wizard.HeaderText%2A> 控件的属性 <xref:System.Web.UI.WebControls.Wizard> 。

 [!code-aspx-csharp[System.Web.UI.WebControls.WizardActiveStepChanged#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardActiveStepChanged/CS/wizardactivestepchangedcs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.WizardActiveStepChanged#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardActiveStepChanged/VB/wizardactivestepchangedvb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Wizard.HeaderTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.HeaderStyle" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/fs0za4w6(v=vs.100)">向导 Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="LayoutTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate LayoutTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate LayoutTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Wizard.LayoutTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property LayoutTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ LayoutTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberSignature Language="F#" Value="member this.LayoutTemplate : System.Web.UI.ITemplate with get, set" Usage="System.Web.UI.WebControls.Wizard.LayoutTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(null)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(null)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.Wizard))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.Wizard))&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置 <see cref="T:System.Web.UI.WebControls.Wizard" /> 控件中的根容器的自定义内容。</summary>
        <value>一个对象，包含 <see cref="T:System.Web.UI.WebControls.Wizard" /> 控件中的根容器的自定义内容。 默认值为 <see langword="null" />，指示未设置此属性。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 您可以使用 <xref:System.Web.UI.WebControls.Wizard.LayoutTemplate%2A> 属性为控件定义 (UI) 的自定义用户界面 <xref:System.Web.UI.WebControls.Wizard> 。 若要指定布局模板，请在 `LayoutTemplate` 控件标记中添加一个元素 <xref:System.Web.UI.WebControls.Wizard> 。 在 `LayoutTemplate` 元素内，为控件的组件添加占位符 <xref:System.Web.UI.WebControls.Wizard> 。 在元素中，控件的导航、边栏和向导步骤部分的占位符 <xref:System.Web.UI.WebControls.Wizard> 是必需的 `LayoutTemplate` 。

> [!NOTE]
>  您可以在 " **源** " 视图中修改布局模板。 不支持在 " **设计** " 视图中编辑布局模板。



## Examples
 下面的示例演示如何将元素添加 `LayoutTemplate` 到 `Wizard` 控件，以及如何使用元素设置控件组件的格式 `Wizard` `div` 。 当控件呈现时， `div` 将使用元素而不是 HTML 表设置控件的格式。



 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadControlState">
      <MemberSignature Language="C#" Value="protected internal override void LoadControlState (object state);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void LoadControlState(object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Wizard.LoadControlState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub LoadControlState (state As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void LoadControlState(System::Object ^ state);" />
      <MemberSignature Language="F#" Value="override this.LoadControlState : obj -&gt; unit" Usage="wizard.LoadControlState state" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="state">要还原的控件状态。</param>
        <summary>还原控件状态信息。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadViewState">
      <MemberSignature Language="C#" Value="protected override void LoadViewState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void LoadViewState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Wizard.LoadViewState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub LoadViewState (savedState As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void LoadViewState(System::Object ^ savedState);" />
      <MemberSignature Language="F#" Value="override this.LoadViewState : obj -&gt; unit" Usage="wizard.LoadViewState savedState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState">要还原的控件状态。</param>
        <summary>加载视图状态信息。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><paramref name="savedState" /> 不是有效的 <see cref="P:System.Web.UI.PageStatePersister.ViewState" /> 值。</exception>
      </Docs>
    </Member>
    <Member MemberName="MoveCompleteCommandName">
      <MemberSignature Language="C#" Value="public static readonly string MoveCompleteCommandName;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string MoveCompleteCommandName" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.Wizard.MoveCompleteCommandName" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MoveCompleteCommandName As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ MoveCompleteCommandName;" />
      <MemberSignature Language="F#" Value=" staticval mutable MoveCompleteCommandName : string" Usage="System.Web.UI.WebControls.Wizard.MoveCompleteCommandName" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>检索与“完成”按钮关联的命令名****。 此字段是静态的且是只读的。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 此 <xref:System.Web.UI.WebControls.Wizard.MoveCompleteCommandName> 字段主要由控件开发人员使用。 的值 <xref:System.Web.UI.WebControls.Wizard.MoveCompleteCommandName> 为 `"MoveComplete"` 。

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.IButtonControl.CommandName" />
        <altmember cref="F:System.Web.UI.WebControls.Wizard.MoveNextCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.Wizard.MovePreviousCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.Wizard.MoveToCommandName" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/fs0za4w6(v=vs.100)">向导 Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="MoveNextCommandName">
      <MemberSignature Language="C#" Value="public static readonly string MoveNextCommandName;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string MoveNextCommandName" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.Wizard.MoveNextCommandName" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MoveNextCommandName As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ MoveNextCommandName;" />
      <MemberSignature Language="F#" Value=" staticval mutable MoveNextCommandName : string" Usage="System.Web.UI.WebControls.Wizard.MoveNextCommandName" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>检索与“下一步”按钮关联的命令名****。 此字段是静态的且是只读的。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 此 <xref:System.Web.UI.WebControls.Wizard.MoveNextCommandName> 字段主要由控件开发人员使用。 的值 <xref:System.Web.UI.WebControls.Wizard.MoveNextCommandName> 为 `"MoveNext"` 。

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.IButtonControl.CommandName" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/fs0za4w6(v=vs.100)">向导 Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="MovePreviousCommandName">
      <MemberSignature Language="C#" Value="public static readonly string MovePreviousCommandName;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string MovePreviousCommandName" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.Wizard.MovePreviousCommandName" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MovePreviousCommandName As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ MovePreviousCommandName;" />
      <MemberSignature Language="F#" Value=" staticval mutable MovePreviousCommandName : string" Usage="System.Web.UI.WebControls.Wizard.MovePreviousCommandName" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>检索与“上一步”按钮关联的命令名****。 此字段是静态的且是只读的。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 此 <xref:System.Web.UI.WebControls.Wizard.MovePreviousCommandName> 字段主要由控件开发人员使用。 的值 <xref:System.Web.UI.WebControls.Wizard.MovePreviousCommandName> 为 `"MovePrevious"` 。

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.IButtonControl.CommandName" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/fs0za4w6(v=vs.100)">向导 Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="MoveTo">
      <MemberSignature Language="C#" Value="public void MoveTo (System.Web.UI.WebControls.WizardStepBase wizardStep);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void MoveTo(class System.Web.UI.WebControls.WizardStepBase wizardStep) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Wizard.MoveTo(System.Web.UI.WebControls.WizardStepBase)" />
      <MemberSignature Language="VB.NET" Value="Public Sub MoveTo (wizardStep As WizardStepBase)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void MoveTo(System::Web::UI::WebControls::WizardStepBase ^ wizardStep);" />
      <MemberSignature Language="F#" Value="member this.MoveTo : System.Web.UI.WebControls.WizardStepBase -&gt; unit" Usage="wizard.MoveTo wizardStep" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="wizardStep" Type="System.Web.UI.WebControls.WizardStepBase" />
      </Parameters>
      <Docs>
        <param name="wizardStep">要设置为 <see cref="T:System.Web.UI.WebControls.WizardStepBase" /> 的从 <see cref="P:System.Web.UI.WebControls.Wizard.ActiveStep" /> 派生的对象。</param>
        <summary>将指定的从 <see cref="T:System.Web.UI.WebControls.WizardStepBase" /> 派生的对象设置为 <see cref="P:System.Web.UI.WebControls.Wizard.ActiveStep" /> 控件的 <see cref="T:System.Web.UI.WebControls.Wizard" /> 属性的值。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 使用 <xref:System.Web.UI.WebControls.Wizard.MoveTo%2A> 方法控制 <xref:System.Web.UI.WebControls.WizardStepBase> <xref:System.Web.UI.WebControls.Wizard.ActiveStep%2A> <xref:System.Web.UI.WebControls.Wizard> 以编程方式将哪个派生对象设置为控件中的属性的值。 这样一来，您就可以 <xref:System.Web.UI.WebControls.Wizard.ActiveStep%2A> 在运行时根据其他条件动态地更改属性。



## Examples
 下面的代码示例演示如何使用 <xref:System.Web.UI.WebControls.Wizard.MoveTo%2A> 方法控制 <xref:System.Web.UI.WebControls.Wizard.ActiveStep%2A> 控件的属性 <xref:System.Web.UI.WebControls.Wizard> 。 如果的值 `CheckBox1.Checked` 为，则将 `true` <xref:System.Web.UI.WebControls.Wizard.ActiveStep%2A> 属性设置为 `Wizard1.Step3` ; 否则， <xref:System.Web.UI.WebControls.Wizard.ActiveStep%2A> 属性设置为 `Wizard1.Step2` 。

 [!code-aspx-csharp[System.Web.UI.WebControls.WizardMoveTo#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardMoveTo/CS/wizardmovetocs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.WizardMoveTo#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardMoveTo/VB/wizardmovetovb.aspx#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">已传入的从 <see cref="T:System.Web.UI.WebControls.WizardStepBase" /> 派生的对象的值为 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentException">与已传入的从 <see cref="P:System.Web.UI.WebControls.Wizard.ActiveStepIndex" /> 派生的对象关联的 <see cref="T:System.Web.UI.WebControls.WizardStepBase" /> 等于 -1。</exception>
        <altmember cref="P:System.Web.UI.WebControls.Wizard.ActiveStep" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.ActiveStepIndex" />
        <altmember cref="T:System.Web.UI.WebControls.WizardStepBase" />
        <altmember cref="T:System.Web.UI.WebControls.WizardStep" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/fs0za4w6(v=vs.100)">向导 Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="MoveToCommandName">
      <MemberSignature Language="C#" Value="public static readonly string MoveToCommandName;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string MoveToCommandName" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.Wizard.MoveToCommandName" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MoveToCommandName As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ MoveToCommandName;" />
      <MemberSignature Language="F#" Value=" staticval mutable MoveToCommandName : string" Usage="System.Web.UI.WebControls.Wizard.MoveToCommandName" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>检索与每个侧栏按钮关联的命令名。 此字段是静态的且是只读的。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 此 <xref:System.Web.UI.WebControls.Wizard.MoveToCommandName> 字段主要由控件开发人员使用。 的值 <xref:System.Web.UI.WebControls.Wizard.MoveToCommandName> 为 `"Move"` 。

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.IButtonControl.CommandName" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/fs0za4w6(v=vs.100)">向导 Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="NavigationButtonStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.Style NavigationButtonStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.Style NavigationButtonStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Wizard.NavigationButtonStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NavigationButtonStyle As Style" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::Style ^ NavigationButtonStyle { System::Web::UI::WebControls::Style ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.NavigationButtonStyle : System.Web.UI.WebControls.Style" Usage="System.Web.UI.WebControls.Wizard.NavigationButtonStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(null)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(null)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.NotifyParentProperty(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.NotifyParentProperty(true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Style</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个对 <see cref="T:System.Web.UI.WebControls.Style" /> 对象的引用，该对象定义控件上导航区域中按钮的设置。</summary>
        <value>一个对 <see cref="T:System.Web.UI.WebControls.Style" /> 的引用，该对象定义 <see cref="T:System.Web.UI.WebControls.Wizard" /> 上导航区域中按钮的样式设置。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.Wizard.NavigationButtonStyle%2A>属性定义控件上导航区域中按钮的外观 <xref:System.Web.UI.WebControls.Wizard> 。 <xref:System.Web.UI.WebControls.Wizard.NavigationButtonStyle%2A>属性是只读的; 但是，您可以设置它返回的对象的属性 <xref:System.Web.UI.WebControls.Style> 。 可以在窗体中以声明方式设置这些属性 `Property-Subproperty` ，其中 `Subproperty` 表示类的属性 <xref:System.Web.UI.WebControls.Style> (例如 `CancelButtonStyle-ForeColor`) 。 可以通过编程方式设置属性 `Property.Subproperty` ， (例如 `CancelButtonStyle.ForeColor`) 。

 常见设置包括自定义背景色、文本颜色和字体属性。 属性的样式设置 <xref:System.Web.UI.WebControls.Wizard.NavigationButtonStyle%2A> 与各个按钮样式合并。 在单个按钮样式属性中应用的任何设置都将覆盖属性中的相应设置 <xref:System.Web.UI.WebControls.Wizard.NavigationButtonStyle%2A> 。 例如，如果将 `FinishPreviousButtonStyle.ForeColor` 属性设置为，并将属性设置 `"red"` `NavigationButtonStyle.ForeColor` 为 `"green"` ，则按钮的颜色将为红色，因为属性的各个样式设置会 <xref:System.Web.UI.WebControls.Wizard.FinishPreviousButtonStyle%2A> 重写属性的设置 <xref:System.Web.UI.WebControls.Wizard.NavigationButtonStyle%2A> 。

 以下 <xref:System.Web.UI.WebControls.Wizard.NavigationButtonStyle%2A> 属性样式由各按钮样式设置重写：

-   <xref:System.Web.UI.WebControls.Style.BackColor%2A>

-   <xref:System.Web.UI.WebControls.Style.BorderColor%2A>

-   <xref:System.Web.UI.WebControls.Style.BorderStyle%2A>

-   <xref:System.Web.UI.WebControls.Style.BorderWidth%2A>

-   <xref:System.Web.UI.WebControls.Style.Font%2A>

-   <xref:System.Web.UI.WebControls.Style.ForeColor%2A>

-   <xref:System.Web.UI.WebControls.Style.Height%2A>

-   <xref:System.Web.UI.WebControls.Style.Width%2A>

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Wizard.NavigationStyle" />
        <altmember cref="T:System.Web.UI.WebControls.Style" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/fs0za4w6(v=vs.100)">向导 Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="NavigationPlaceholderId">
      <MemberSignature Language="C#" Value="public static readonly string NavigationPlaceholderId;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string NavigationPlaceholderId" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.Wizard.NavigationPlaceholderId" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly NavigationPlaceholderId As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ NavigationPlaceholderId;" />
      <MemberSignature Language="F#" Value=" staticval mutable NavigationPlaceholderId : string" Usage="System.Web.UI.WebControls.Wizard.NavigationPlaceholderId" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取 <see cref="P:System.Web.UI.WebControls.Wizard.StartNavigationTemplate" /> 控件中 <see cref="T:System.Web.UI.WebControls.Wizard" /> 占位符的 ID。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 占位符 ID 必须设置为 "navigationPlaceHolder"。

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NavigationStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle NavigationStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle NavigationStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Wizard.NavigationStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NavigationStyle As TableItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TableItemStyle ^ NavigationStyle { System::Web::UI::WebControls::TableItemStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.NavigationStyle : System.Web.UI.WebControls.TableItemStyle" Usage="System.Web.UI.WebControls.Wizard.NavigationStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(null)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(null)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.NotifyParentProperty(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.NotifyParentProperty(true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个对 <see cref="T:System.Web.UI.WebControls.Style" /> 对象的引用，该对象定义控件上导航区域的设置。</summary>
        <value>一个对 <see cref="T:System.Web.UI.WebControls.Style" /> 的引用，该对象定义 <see cref="T:System.Web.UI.WebControls.Wizard" /> 上导航区域的样式设置。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.Wizard.NavigationStyle%2A>属性定义控件上的导航区域的外观 <xref:System.Web.UI.WebControls.Wizard> 。 <xref:System.Web.UI.WebControls.Wizard.NavigationStyle%2A>属性是只读的; 但是，您可以设置它返回的对象的属性 <xref:System.Web.UI.WebControls.Style> 。 可以在窗体中以声明方式设置这些属性 `Property-Subproperty` ，其中 `Subproperty` 表示类的属性 <xref:System.Web.UI.WebControls.Style> (例如 `CancelButtonStyle-ForeColor`) 。 可以通过编程方式设置属性 `Property.Subproperty` ， (例如 `CancelButtonStyle.ForeColor`) 。

 常见设置包括自定义背景色、文本颜色和字体属性。

 属性的样式设置 <xref:System.Web.UI.WebControls.Wizard.NavigationStyle%2A> 与控件的样式设置合并 <xref:System.Web.UI.WebControls.Wizard> 。 在属性中应用的任何设置都将 <xref:System.Web.UI.WebControls.Wizard.NavigationStyle%2A> 覆盖控件的属性中的相应设置 <xref:System.Web.UI.WebControls.Wizard> 。

 以下 <xref:System.Web.UI.WebControls.Wizard> 样式属性被设置重写 <xref:System.Web.UI.WebControls.Wizard.NavigationStyle%2A> ：

-   <xref:System.Web.UI.WebControls.Style.BackColor%2A>

-   <xref:System.Web.UI.WebControls.Style.BorderColor%2A>

-   <xref:System.Web.UI.WebControls.Style.BorderStyle%2A>

-   <xref:System.Web.UI.WebControls.Style.BorderWidth%2A>

-   <xref:System.Web.UI.WebControls.Style.Font%2A>

-   <xref:System.Web.UI.WebControls.Style.ForeColor%2A>

-   <xref:System.Web.UI.WebControls.Style.Height%2A>

-   <xref:System.Web.UI.WebControls.Style.Width%2A>

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Wizard.NavigationButtonStyle" />
        <altmember cref="T:System.Web.UI.WebControls.Style" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/fs0za4w6(v=vs.100)">向导 Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="NextButtonClick">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.WizardNavigationEventHandler NextButtonClick;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.WizardNavigationEventHandler NextButtonClick" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.Wizard.NextButtonClick" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event NextButtonClick As WizardNavigationEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::WizardNavigationEventHandler ^ NextButtonClick;" />
      <MemberSignature Language="F#" Value="member this.NextButtonClick : System.Web.UI.WebControls.WizardNavigationEventHandler " Usage="member this.NextButtonClick : System.Web.UI.WebControls.WizardNavigationEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WizardNavigationEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>单击“下一步”按钮时发生****。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.Wizard.NextButtonClick>当单击控件上的 "**下一步**" 按钮时，将引发事件 <xref:System.Web.UI.WebControls.Wizard> 。 <xref:System.Web.UI.WebControls.Wizard.NextButtonClick>当单击 "**下一步**" 按钮时，可以使用事件来提供其他处理。

 有关如何处理事件的详细信息，请参阅 [处理和引发事件](/dotnet/standard/events/)。



## Examples
 下面的代码示例演示如何为事件指定事件处理程序 <xref:System.Web.UI.WebControls.Wizard.NextButtonClick> 。 每次单击 " **下一步** " 按钮时， <xref:System.Web.UI.WebControls.WebControl.BorderWidth%2A> 控件的属性将以 <xref:System.Web.UI.WebControls.Wizard> 1 像素为增量增加，这由 <xref:System.Web.UI.WebControls.Unit> 类衡量。

 [!code-aspx-csharp[System.Web.UI.WebControls.WizardNextPreviousButtonClick#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardNextPreviousButtonClick/CS/wizardnextpreviousbuttonclickcs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.WizardNextPreviousButtonClick#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardNextPreviousButtonClick/VB/wizardnextpreviousbuttonclickvb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.Wizard.OnNextButtonClick(System.Web.UI.WebControls.WizardNavigationEventArgs)" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/fs0za4w6(v=vs.100)">向导 Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="OnActiveStepChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnActiveStepChanged (object source, EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnActiveStepChanged(object source, class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Wizard.OnActiveStepChanged(System.Object,System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnActiveStepChanged (source As Object, e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnActiveStepChanged(System::Object ^ source, EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnActiveStepChanged : obj * EventArgs -&gt; unit&#xA;override this.OnActiveStepChanged : obj * EventArgs -&gt; unit" Usage="wizard.OnActiveStepChanged (source, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Object" />
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="source">事件源。</param>
        <param name="e">包含事件数据的 <see cref="T:System.EventArgs" />。</param>
        <summary>引发 <see cref="E:System.Web.UI.WebControls.Wizard.ActiveStepChanged" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.Wizard.OnActiveStepChanged%2A>方法在 <xref:System.Web.UI.WebControls.Wizard.ActiveStepChanged> <xref:System.Web.UI.WebControls.Wizard.ActiveStep%2A> 控件的属性发生更改时引发事件 <xref:System.Web.UI.WebControls.Wizard> 。 <xref:System.Web.UI.WebControls.Wizard.ActiveStepChanged>当控件中显示的当前步骤发生更改时，可以使用事件来提供其他处理 <xref:System.Web.UI.WebControls.Wizard> 。

 引发事件时，将通过委托调用事件处理程序。 有关详细信息，请参阅 [处理和引发事件](/dotnet/standard/events/)。

 <xref:System.Web.UI.WebControls.Wizard.OnActiveStepChanged%2A> 方法还允许派生类对事件进行处理而不必附加委托。 这是在派生类中处理事件的首选技术。



## Examples
 下面的代码示例演示如何使用 <xref:System.Web.UI.WebControls.Wizard.ActiveStepChanged> 事件更新 <xref:System.Web.UI.WebControls.Wizard.HeaderText%2A> 控件的属性 <xref:System.Web.UI.WebControls.Wizard> 。

 [!code-aspx-csharp[System.Web.UI.WebControls.WizardActiveStepChanged#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardActiveStepChanged/CS/wizardactivestepchangedcs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.WizardActiveStepChanged#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardActiveStepChanged/VB/wizardactivestepchangedvb.aspx#1)]

 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>当在 <see cref="M:System.Web.UI.WebControls.Wizard.OnActiveStepChanged(System.Object,System.EventArgs)" /> 派生类中重写方法时，请确保调用 <see cref="M:System.Web.UI.WebControls.Wizard.OnActiveStepChanged(System.Object,System.EventArgs)" /> 基类的方法，以便注册的委托接收事件。</para></block>
        <altmember cref="E:System.Web.UI.WebControls.Wizard.ActiveStepChanged" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/fs0za4w6(v=vs.100)">向导 Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="OnBubbleEvent">
      <MemberSignature Language="C#" Value="protected override bool OnBubbleEvent (object source, EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool OnBubbleEvent(object source, class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Wizard.OnBubbleEvent(System.Object,System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function OnBubbleEvent (source As Object, e As EventArgs) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool OnBubbleEvent(System::Object ^ source, EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnBubbleEvent : obj * EventArgs -&gt; bool" Usage="wizard.OnBubbleEvent (source, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Object" />
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="source">事件源。</param>
        <param name="e">包含事件数据。</param>
        <summary>确定服务器控件的事件是否沿页的用户界面服务器控件层次结构向上传递。</summary>
        <returns>如果服务器控件的事件是否沿页的用户界面服务器控件层次结构向上传递，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCancelButtonClick">
      <MemberSignature Language="C#" Value="protected virtual void OnCancelButtonClick (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCancelButtonClick(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Wizard.OnCancelButtonClick(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCancelButtonClick (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCancelButtonClick(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnCancelButtonClick : EventArgs -&gt; unit&#xA;override this.OnCancelButtonClick : EventArgs -&gt; unit" Usage="wizard.OnCancelButtonClick e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件数据的 <see cref="T:System.EventArgs" />。</param>
        <summary>引发 <see cref="E:System.Web.UI.WebControls.Wizard.CancelButtonClick" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.Wizard.CancelButtonClick>单击 "**取消**" 按钮时引发事件。

 引发事件时，将通过委托调用事件处理程序。 有关详细信息，请参阅 [处理和引发事件](/dotnet/standard/events/)。

 <xref:System.Web.UI.WebControls.Wizard.OnCancelButtonClick%2A> 方法还允许派生类对事件进行处理而不必附加委托。 这是在派生类中处理事件的首选技术。



## Examples
 下面的代码示例演示如何为事件指定事件处理程序 <xref:System.Web.UI.WebControls.Wizard.CancelButtonClick> 。 单击 " **取消** " 按钮后，该步骤将重定向到 http://www.wingtiptoys.com/ 。

 [!code-aspx-csharp[System.Web.UI.WebControls.WizardCancelButtonClick#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardCancelButtonClick/CS/wizardcancelbuttonclickcs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.WizardCancelButtonClick#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardCancelButtonClick/VB/wizardcancelbuttonclickvb.aspx#1)]

 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>当在 <see cref="M:System.Web.UI.WebControls.Wizard.OnCancelButtonClick(System.EventArgs)" /> 派生类中重写方法时，请确保调用 <see cref="M:System.Web.UI.WebControls.Wizard.OnCancelButtonClick(System.EventArgs)" /> 基类的方法，以便注册的委托接收事件。</para></block>
        <altmember cref="E:System.Web.UI.WebControls.Wizard.CancelButtonClick" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/fs0za4w6(v=vs.100)">向导 Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="OnFinishButtonClick">
      <MemberSignature Language="C#" Value="protected virtual void OnFinishButtonClick (System.Web.UI.WebControls.WizardNavigationEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnFinishButtonClick(class System.Web.UI.WebControls.WizardNavigationEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Wizard.OnFinishButtonClick(System.Web.UI.WebControls.WizardNavigationEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnFinishButtonClick (e As WizardNavigationEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnFinishButtonClick(System::Web::UI::WebControls::WizardNavigationEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnFinishButtonClick : System.Web.UI.WebControls.WizardNavigationEventArgs -&gt; unit&#xA;override this.OnFinishButtonClick : System.Web.UI.WebControls.WizardNavigationEventArgs -&gt; unit" Usage="wizard.OnFinishButtonClick e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.WizardNavigationEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件数据的 <see cref="T:System.Web.UI.WebControls.WizardNavigationEventArgs" />。</param>
        <summary>引发 <see cref="E:System.Web.UI.WebControls.Wizard.FinishButtonClick" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.Wizard.FinishButtonClick>单击 "**完成**" 按钮时，将引发事件。

 引发事件时，将通过委托调用事件处理程序。 有关详细信息，请参阅 [处理和引发事件](/dotnet/standard/events/)。

 <xref:System.Web.UI.WebControls.Wizard.OnFinishButtonClick%2A> 方法还允许派生类对事件进行处理而不必附加委托。 这是在派生类中处理事件的首选技术。



## Examples
 下面的代码示例演示如何为事件指定事件处理程序 <xref:System.Web.UI.WebControls.Wizard.FinishButtonClick> 。 单击 " **完成** " 按钮后，将向写入一条确认消息， `Label1` 并将 `Label1.Visible` 属性设置为， `true` 以使消息显示在步骤中。

 [!code-aspx-csharp[System.Web.UI.WebControls.WizardFinishButtonClick#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardFinishButtonClick/CS/wizardfinishbuttonclickcs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.WizardFinishButtonClick#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardFinishButtonClick/VB/wizardfinishbuttonclickvb.aspx#1)]

 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>当在 <see cref="M:System.Web.UI.WebControls.Wizard.OnFinishButtonClick(System.Web.UI.WebControls.WizardNavigationEventArgs)" /> 派生类中重写方法时，请确保调用 <see cref="M:System.Web.UI.WebControls.Wizard.OnFinishButtonClick(System.Web.UI.WebControls.WizardNavigationEventArgs)" /> 基类的方法，以便注册的委托接收事件。</para></block>
        <altmember cref="E:System.Web.UI.WebControls.Wizard.FinishButtonClick" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/fs0za4w6(v=vs.100)">向导 Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="OnInit">
      <MemberSignature Language="C#" Value="protected internal override void OnInit (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnInit(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Wizard.OnInit(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnInit (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnInit(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnInit : EventArgs -&gt; unit" Usage="wizard.OnInit e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">引发的事件。</param>
        <summary>引发 Init 事件。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnNextButtonClick">
      <MemberSignature Language="C#" Value="protected virtual void OnNextButtonClick (System.Web.UI.WebControls.WizardNavigationEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnNextButtonClick(class System.Web.UI.WebControls.WizardNavigationEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Wizard.OnNextButtonClick(System.Web.UI.WebControls.WizardNavigationEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnNextButtonClick (e As WizardNavigationEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnNextButtonClick(System::Web::UI::WebControls::WizardNavigationEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnNextButtonClick : System.Web.UI.WebControls.WizardNavigationEventArgs -&gt; unit&#xA;override this.OnNextButtonClick : System.Web.UI.WebControls.WizardNavigationEventArgs -&gt; unit" Usage="wizard.OnNextButtonClick e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.WizardNavigationEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件数据的 <see cref="T:System.Web.UI.WebControls.WizardNavigationEventArgs" />。</param>
        <summary>引发 <see cref="E:System.Web.UI.WebControls.Wizard.NextButtonClick" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.Wizard.NextButtonClick>单击 "**下一步**" 按钮时将引发该事件。

 引发事件时，将通过委托调用事件处理程序。 有关详细信息，请参阅 [处理和引发事件](/dotnet/standard/events/)。

 <xref:System.Web.UI.WebControls.Wizard.OnNextButtonClick%2A> 方法还允许派生类对事件进行处理而不必附加委托。 这是在派生类中处理事件的首选技术。



## Examples
 下面的代码示例演示如何为事件指定事件处理程序 <xref:System.Web.UI.WebControls.Wizard.NextButtonClick> 。 每次单击 " **下一步** " 按钮时， <xref:System.Web.UI.WebControls.WebControl.BorderWidth%2A> 控件的属性将以 <xref:System.Web.UI.WebControls.Wizard> 1 像素为增量增加，这由 <xref:System.Web.UI.WebControls.Unit> 类衡量。

 [!code-aspx-csharp[System.Web.UI.WebControls.WizardNextPreviousButtonClick#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardNextPreviousButtonClick/CS/wizardnextpreviousbuttonclickcs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.WizardNextPreviousButtonClick#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardNextPreviousButtonClick/VB/wizardnextpreviousbuttonclickvb.aspx#1)]

 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>当在 <see cref="M:System.Web.UI.WebControls.Wizard.OnNextButtonClick(System.Web.UI.WebControls.WizardNavigationEventArgs)" /> 派生类中重写方法时，请确保调用 <see cref="M:System.Web.UI.WebControls.Wizard.OnNextButtonClick(System.Web.UI.WebControls.WizardNavigationEventArgs)" /> 基类的方法，以便注册的委托接收事件。</para></block>
        <altmember cref="E:System.Web.UI.WebControls.Wizard.NextButtonClick" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/fs0za4w6(v=vs.100)">向导 Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="OnPreviousButtonClick">
      <MemberSignature Language="C#" Value="protected virtual void OnPreviousButtonClick (System.Web.UI.WebControls.WizardNavigationEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreviousButtonClick(class System.Web.UI.WebControls.WizardNavigationEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Wizard.OnPreviousButtonClick(System.Web.UI.WebControls.WizardNavigationEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreviousButtonClick (e As WizardNavigationEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreviousButtonClick(System::Web::UI::WebControls::WizardNavigationEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviousButtonClick : System.Web.UI.WebControls.WizardNavigationEventArgs -&gt; unit&#xA;override this.OnPreviousButtonClick : System.Web.UI.WebControls.WizardNavigationEventArgs -&gt; unit" Usage="wizard.OnPreviousButtonClick e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.WizardNavigationEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">一个包含事件数据的 <see cref="T:System.Web.UI.WebControls.WizardNavigationEventArgs" />。</param>
        <summary>引发 <see cref="E:System.Web.UI.WebControls.Wizard.PreviousButtonClick" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.Wizard.PreviousButtonClick>单击 "**上一步**" 按钮时引发事件。

 引发事件时，将通过委托调用事件处理程序。 有关详细信息，请参阅 [处理和引发事件](/dotnet/standard/events/)。

 <xref:System.Web.UI.WebControls.Wizard.OnPreviousButtonClick%2A> 方法还允许派生类对事件进行处理而不必附加委托。 这是在派生类中处理事件的首选技术。



## Examples
 下面的代码示例演示如何为事件指定事件处理程序 <xref:System.Web.UI.WebControls.Wizard.PreviousButtonClick> 。 每次单击 " **上一步** " 按钮时， <xref:System.Web.UI.WebControls.WebControl.BorderWidth%2A> 控件的属性 <xref:System.Web.UI.WebControls.Wizard> 将减少1个像素，这由 <xref:System.Web.UI.WebControls.Unit> 类衡量。

 [!code-aspx-csharp[System.Web.UI.WebControls.WizardNextPreviousButtonClick#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardNextPreviousButtonClick/CS/wizardnextpreviousbuttonclickcs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.WizardNextPreviousButtonClick#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardNextPreviousButtonClick/VB/wizardnextpreviousbuttonclickvb.aspx#1)]

 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>当在 <see cref="M:System.Web.UI.WebControls.Wizard.OnPreviousButtonClick(System.Web.UI.WebControls.WizardNavigationEventArgs)" /> 派生类中重写方法时，请确保调用 <see cref="M:System.Web.UI.WebControls.Wizard.OnPreviousButtonClick(System.Web.UI.WebControls.WizardNavigationEventArgs)" /> 基类的方法，以便注册的委托接收事件。</para></block>
        <altmember cref="E:System.Web.UI.WebControls.Wizard.PreviousButtonClick" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/fs0za4w6(v=vs.100)">向导 Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="OnSideBarButtonClick">
      <MemberSignature Language="C#" Value="protected virtual void OnSideBarButtonClick (System.Web.UI.WebControls.WizardNavigationEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSideBarButtonClick(class System.Web.UI.WebControls.WizardNavigationEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Wizard.OnSideBarButtonClick(System.Web.UI.WebControls.WizardNavigationEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSideBarButtonClick (e As WizardNavigationEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSideBarButtonClick(System::Web::UI::WebControls::WizardNavigationEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnSideBarButtonClick : System.Web.UI.WebControls.WizardNavigationEventArgs -&gt; unit&#xA;override this.OnSideBarButtonClick : System.Web.UI.WebControls.WizardNavigationEventArgs -&gt; unit" Usage="wizard.OnSideBarButtonClick e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.WizardNavigationEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">一个包含事件数据的 <see cref="T:System.Web.UI.WebControls.WizardNavigationEventArgs" />。</param>
        <summary>引发 <see cref="E:System.Web.UI.WebControls.Wizard.SideBarButtonClick" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.Wizard.SideBarButtonClick>单击侧栏区域上的按钮时，将引发事件。

> [!NOTE]
>  <xref:System.Web.UI.WebControls.Wizard.SideBarButtonClick>如果 <xref:System.Web.UI.WebControls.Button> <xref:System.Web.UI.WebControls.Button.CommandName%2A> 将属性设置为的控件 `Move` 超出 <xref:System.Web.UI.WebControls.DataList> 对象的控件侧栏列表 <xref:System.Web.UI.WebControls.Wizard.SideBarTemplate%2A> ，该事件不会引发事件。

 引发事件时，将通过委托调用事件处理程序。 有关详细信息，请参阅 [处理和引发事件](/dotnet/standard/events/)。

 <xref:System.Web.UI.WebControls.Wizard.OnSideBarButtonClick%2A> 方法还允许派生类对事件进行处理而不必附加委托。 这是在派生类中处理事件的首选技术。



## Examples
 下面的代码示例演示如何为事件指定事件处理程序 <xref:System.Web.UI.WebControls.Wizard.SideBarButtonClick> 。 每次 <xref:System.Web.UI.WebControls.Wizard.SideBarButtonClick> 引发事件时，都会向的属性写入一条消息，其中 <xref:System.Web.UI.WebControls.Label.Text%2A> 包含有关单击了 `Label1` 哪个边栏区域按钮的信息。

 [!code-aspx-csharp[System.Web.UI.WebControls.WizardSideBarButtonClick#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardSideBarButtonClick/CS/wizardsidebarbuttonclickcs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.WizardSideBarButtonClick#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardSideBarButtonClick/VB/wizardsidebarbuttonclickvb.aspx#1)]

 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>当在 <see cref="M:System.Web.UI.WebControls.Wizard.OnSideBarButtonClick(System.Web.UI.WebControls.WizardNavigationEventArgs)" /> 派生类中重写方法时，请确保调用 <see cref="M:System.Web.UI.WebControls.Wizard.OnSideBarButtonClick(System.Web.UI.WebControls.WizardNavigationEventArgs)" /> 基类的方法，以便注册的委托接收事件。</para></block>
        <altmember cref="E:System.Web.UI.WebControls.Wizard.SideBarButtonClick" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/fs0za4w6(v=vs.100)">向导 Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="PreviousButtonClick">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.WizardNavigationEventHandler PreviousButtonClick;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.WizardNavigationEventHandler PreviousButtonClick" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.Wizard.PreviousButtonClick" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviousButtonClick As WizardNavigationEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::WizardNavigationEventHandler ^ PreviousButtonClick;" />
      <MemberSignature Language="F#" Value="member this.PreviousButtonClick : System.Web.UI.WebControls.WizardNavigationEventHandler " Usage="member this.PreviousButtonClick : System.Web.UI.WebControls.WizardNavigationEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WizardNavigationEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>单击“上一步”按钮时发生****。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.Wizard.PreviousButtonClick>单击控件上的 "**上一个**" 按钮时，将引发事件 <xref:System.Web.UI.WebControls.Wizard> 。 <xref:System.Web.UI.WebControls.Wizard.PreviousButtonClick>当单击 "**上一步**" 按钮时，使用事件提供其他处理。

 有关如何处理事件的详细信息，请参阅 [处理和引发事件](/dotnet/standard/events/)。



## Examples
 下面的代码示例演示如何为事件指定事件处理程序 <xref:System.Web.UI.WebControls.Wizard.PreviousButtonClick> 。 每次单击 " **上一步** " 按钮时， <xref:System.Web.UI.WebControls.WebControl.BorderWidth%2A> 控件的属性 <xref:System.Web.UI.WebControls.Wizard> 将减少1个像素，这由 <xref:System.Web.UI.WebControls.Unit> 类衡量。

 [!code-aspx-csharp[System.Web.UI.WebControls.WizardNextPreviousButtonClick#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardNextPreviousButtonClick/CS/wizardnextpreviousbuttonclickcs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.WizardNextPreviousButtonClick#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardNextPreviousButtonClick/VB/wizardnextpreviousbuttonclickvb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.Wizard.OnPreviousButtonClick(System.Web.UI.WebControls.WizardNavigationEventArgs)" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/fs0za4w6(v=vs.100)">向导 Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="RegisterCommandEvents">
      <MemberSignature Language="C#" Value="protected internal void RegisterCommandEvents (System.Web.UI.WebControls.IButtonControl button);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance void RegisterCommandEvents(class System.Web.UI.WebControls.IButtonControl button) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Wizard.RegisterCommandEvents(System.Web.UI.WebControls.IButtonControl)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub RegisterCommandEvents (button As IButtonControl)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; void RegisterCommandEvents(System::Web::UI::WebControls::IButtonControl ^ button);" />
      <MemberSignature Language="F#" Value="member this.RegisterCommandEvents : System.Web.UI.WebControls.IButtonControl -&gt; unit" Usage="wizard.RegisterCommandEvents button" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="button" Type="System.Web.UI.WebControls.IButtonControl" />
      </Parameters>
      <Docs>
        <param name="button">为其注册 <see cref="T:System.Web.UI.WebControls.IButtonControl" /> 的新实例的 <see cref="T:System.Web.UI.WebControls.CommandEventHandler" />。</param>
        <summary>为指定的 <see cref="T:System.Web.UI.WebControls.CommandEventHandler" /> 对象注册 <see cref="T:System.Web.UI.WebControls.IButtonControl" /> 类的新实例。</summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/fs0za4w6(v=vs.100)">向导 Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="protected internal override void Render (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Render(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Wizard.Render(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub Render (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void Render(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.Render : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="wizard.Render writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">HTML 编写器。</param>
        <summary>将控件呈现给指定的编写器。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveControlState">
      <MemberSignature Language="C#" Value="protected internal override object SaveControlState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance object SaveControlState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Wizard.SaveControlState" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function SaveControlState () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override System::Object ^ SaveControlState();" />
      <MemberSignature Language="F#" Value="override this.SaveControlState : unit -&gt; obj" Usage="wizard.SaveControlState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>保存控件状态。</summary>
        <returns>控件状态。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveViewState">
      <MemberSignature Language="C#" Value="protected override object SaveViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance object SaveViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Wizard.SaveViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function SaveViewState () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Object ^ SaveViewState();" />
      <MemberSignature Language="F#" Value="override this.SaveViewState : unit -&gt; obj" Usage="wizard.SaveViewState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>保存视图状态。</summary>
        <returns>视图状态。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SideBarButtonClick">
      <MemberSignature Language="C#" Value="public virtual event System.Web.UI.WebControls.WizardNavigationEventHandler SideBarButtonClick;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.WizardNavigationEventHandler SideBarButtonClick" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.Wizard.SideBarButtonClick" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Custom Event SideBarButtonClick As WizardNavigationEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Web::UI::WebControls::WizardNavigationEventHandler ^ SideBarButtonClick;" />
      <MemberSignature Language="F#" Value="member this.SideBarButtonClick : System.Web.UI.WebControls.WizardNavigationEventHandler " Usage="member this.SideBarButtonClick : System.Web.UI.WebControls.WizardNavigationEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WizardNavigationEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>当单击侧栏区域中的按钮时发生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.Wizard.SideBarButtonClick>当单击控件上侧栏区域中的按钮时，将引发事件 <xref:System.Web.UI.WebControls.Wizard> 。 <xref:System.Web.UI.WebControls.Wizard.SideBarButtonClick>当单击侧栏区域中的按钮时，可以使用事件来提供其他处理。

> [!NOTE]
>  <xref:System.Web.UI.WebControls.Wizard.SideBarButtonClick>如果 <xref:System.Web.UI.WebControls.Button> <xref:System.Web.UI.WebControls.Button.CommandName%2A> 将属性设置为的控件 `Move` 超出 <xref:System.Web.UI.WebControls.DataList> 对象的控件侧栏列表 <xref:System.Web.UI.WebControls.Wizard.SideBarTemplate%2A> ，该事件不会引发事件。

 有关如何处理事件的详细信息，请参阅 [处理和引发事件](/dotnet/standard/events/)。



## Examples
 下面的代码示例演示如何为事件指定事件处理程序 <xref:System.Web.UI.WebControls.Wizard.SideBarButtonClick> 。 每次 <xref:System.Web.UI.WebControls.Wizard.SideBarButtonClick> 引发事件时，都会向的属性写入一条消息，其中 <xref:System.Web.UI.WebControls.Label.Text%2A> 包含有关单击了 `Label1` 哪个边栏区域按钮的信息。

 [!code-aspx-csharp[System.Web.UI.WebControls.WizardSideBarButtonClick#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardSideBarButtonClick/CS/wizardsidebarbuttonclickcs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.WizardSideBarButtonClick#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardSideBarButtonClick/VB/wizardsidebarbuttonclickvb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.Wizard.OnSideBarButtonClick(System.Web.UI.WebControls.WizardNavigationEventArgs)" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/fs0za4w6(v=vs.100)">向导 Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="SideBarButtonID">
      <MemberSignature Language="C#" Value="protected static readonly string SideBarButtonID;" />
      <MemberSignature Language="ILAsm" Value=".field family static initonly string SideBarButtonID" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.Wizard.SideBarButtonID" />
      <MemberSignature Language="VB.NET" Value="Protected Shared ReadOnly SideBarButtonID As String " />
      <MemberSignature Language="C++ CLI" Value="protected: static initonly System::String ^ SideBarButtonID;" />
      <MemberSignature Language="F#" Value=" staticval mutable SideBarButtonID : string" Usage="System.Web.UI.WebControls.Wizard.SideBarButtonID" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>检索与每个侧栏按钮关联的标识符。 此字段是静态的且是只读的。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 此 <xref:System.Web.UI.WebControls.Wizard.SideBarButtonID> 字段主要由控件开发人员使用。 的值 <xref:System.Web.UI.WebControls.Wizard.SideBarButtonID> 为 `"SideBarButton"` 。

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.IButtonControl" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/fs0za4w6(v=vs.100)">向导 Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="SideBarButtonStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.Style SideBarButtonStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.Style SideBarButtonStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Wizard.SideBarButtonStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SideBarButtonStyle As Style" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::Style ^ SideBarButtonStyle { System::Web::UI::WebControls::Style ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SideBarButtonStyle : System.Web.UI.WebControls.Style" Usage="System.Web.UI.WebControls.Wizard.SideBarButtonStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(null)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(null)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.NotifyParentProperty(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.NotifyParentProperty(true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Style</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个对 <see cref="T:System.Web.UI.WebControls.Style" /> 对象的引用，该对象定义侧栏上按钮的设置。</summary>
        <value>一个对 <see cref="T:System.Web.UI.WebControls.Style" /> 的引用，该对象定义 <see cref="T:System.Web.UI.WebControls.Wizard" /> 的侧栏上按钮的样式设置。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.Wizard.SideBarButtonStyle%2A>属性定义控件侧栏上按钮的外观 <xref:System.Web.UI.WebControls.Wizard> 。 <xref:System.Web.UI.WebControls.Wizard.SideBarButtonStyle%2A>属性是只读的; 但是，您可以设置它返回的对象的属性 <xref:System.Web.UI.WebControls.Style> 。 可以在窗体中以声明方式设置这些属性 `Property-Subproperty` ，其中 `Subproperty` 表示类的属性 <xref:System.Web.UI.WebControls.Style> (例如 `CancelButtonStyle-ForeColor`) 。 可以通过编程方式设置属性 `Property.Subproperty` ， (例如 `CancelButtonStyle.ForeColor`) 。

 常见设置包括自定义背景色、文本颜色和字体属性。

 属性的样式设置 <xref:System.Web.UI.WebControls.Wizard.SideBarButtonStyle%2A> 与控件的样式设置合并 <xref:System.Web.UI.WebControls.Wizard> 。 在属性中应用的任何设置都将 <xref:System.Web.UI.WebControls.Wizard.SideBarButtonStyle%2A> 覆盖控件的属性中的相应设置 <xref:System.Web.UI.WebControls.Wizard> 。

 以下 <xref:System.Web.UI.WebControls.Wizard> 样式属性被设置重写 <xref:System.Web.UI.WebControls.Wizard.SideBarButtonStyle%2A> ：

-   <xref:System.Web.UI.WebControls.Style.BackColor%2A>

-   <xref:System.Web.UI.WebControls.Style.BorderColor%2A>

-   <xref:System.Web.UI.WebControls.Style.BorderStyle%2A>

-   <xref:System.Web.UI.WebControls.Style.BorderWidth%2A>

-   <xref:System.Web.UI.WebControls.Style.Font%2A>

-   <xref:System.Web.UI.WebControls.Style.ForeColor%2A>

-   <xref:System.Web.UI.WebControls.Style.Height%2A>

-   <xref:System.Web.UI.WebControls.Style.Width%2A>

 但是，当使用模板定义控件边栏的外观时 <xref:System.Web.UI.WebControls.Wizard> ， <xref:System.Web.UI.WebControls.Wizard.SideBarButtonStyle%2A> 属性不起作用。

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Wizard.SideBarStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.SideBarTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.DisplaySideBar" />
        <altmember cref="T:System.Web.UI.WebControls.Style" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/fs0za4w6(v=vs.100)">向导 Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="SideBarPlaceholderId">
      <MemberSignature Language="C#" Value="public static readonly string SideBarPlaceholderId;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string SideBarPlaceholderId" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.Wizard.SideBarPlaceholderId" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly SideBarPlaceholderId As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ SideBarPlaceholderId;" />
      <MemberSignature Language="F#" Value=" staticval mutable SideBarPlaceholderId : string" Usage="System.Web.UI.WebControls.Wizard.SideBarPlaceholderId" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取 <see cref="P:System.Web.UI.WebControls.Wizard.SideBarTemplate" /> 控件中 <see cref="T:System.Web.UI.WebControls.Wizard" /> 占位符的 ID。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 占位符 ID 必须设置为 "sideBarPlaceHolder"。

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SideBarStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle SideBarStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle SideBarStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Wizard.SideBarStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SideBarStyle As TableItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TableItemStyle ^ SideBarStyle { System::Web::UI::WebControls::TableItemStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SideBarStyle : System.Web.UI.WebControls.TableItemStyle" Usage="System.Web.UI.WebControls.Wizard.SideBarStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(null)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(null)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.NotifyParentProperty(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.NotifyParentProperty(true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个对 <see cref="T:System.Web.UI.WebControls.Style" /> 对象的引用，该对象定义控件上侧栏区域的设置。</summary>
        <value>一个对 <see cref="T:System.Web.UI.WebControls.Style" /> 的引用，该对象定义 <see cref="T:System.Web.UI.WebControls.Wizard" /> 上侧栏区域的样式设置。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.Wizard.SideBarStyle%2A>属性定义控件上侧栏区域的外观 <xref:System.Web.UI.WebControls.Wizard> 。 <xref:System.Web.UI.WebControls.Wizard.SideBarStyle%2A>属性是只读的; 但是，您可以设置它返回的对象的属性 <xref:System.Web.UI.WebControls.Style> 。 可以在窗体中以声明方式设置这些属性 `Property-Subproperty` ，其中 `Subproperty` 表示类的属性 <xref:System.Web.UI.WebControls.Style> (例如 `CancelButtonStyle-ForeColor`) 。 可以通过编程方式设置属性 `Property.Subproperty` ， (例如 `CancelButtonStyle.ForeColor`) 。

 常见设置包括自定义背景色、文本颜色和字体属性。

 属性的样式设置 <xref:System.Web.UI.WebControls.Wizard.SideBarStyle%2A> 与控件的样式设置合并 <xref:System.Web.UI.WebControls.Wizard> 。 在属性中应用的任何设置都将 <xref:System.Web.UI.WebControls.Wizard.SideBarStyle%2A> 覆盖控件的属性中的相应设置 <xref:System.Web.UI.WebControls.Wizard> 。

> [!NOTE]
>  <xref:System.Web.UI.WebControls.Wizard.SideBarStyle%2A>如果高度设置为小于向导的高度，则将忽略的高度属性。 设置为 <xref:System.Web.UI.WebControls.Wizard.NavigationStyle%2A> "高度" 和 " <xref:System.Web.UI.WebControls.Wizard.HeaderStyle%2A> 高度" 的值将添加到向导的总高度。 例如，如果向导的 "高度" 设置为 "500px"，" <xref:System.Web.UI.WebControls.Wizard.NavigationStyle%2A> 高度 <xref:System.Web.UI.WebControls.Wizard.HeaderStyle%2A> " 或 "高度" 设置为 "50px" 或 "10%"，则 "总向导" 高度为 "550px"。

 以下 <xref:System.Web.UI.WebControls.Wizard> 样式属性被设置重写 <xref:System.Web.UI.WebControls.Wizard.SideBarStyle%2A> ：

-   <xref:System.Web.UI.WebControls.Style.BackColor%2A>

-   <xref:System.Web.UI.WebControls.Style.BorderColor%2A>

-   <xref:System.Web.UI.WebControls.Style.BorderStyle%2A>

-   <xref:System.Web.UI.WebControls.Style.BorderWidth%2A>

-   <xref:System.Web.UI.WebControls.Style.Font%2A>

-   <xref:System.Web.UI.WebControls.Style.ForeColor%2A>

-   <xref:System.Web.UI.WebControls.Style.Height%2A>

-   <xref:System.Web.UI.WebControls.Style.Width%2A>

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Wizard.SideBarButtonStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.SideBarTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.DisplaySideBar" />
        <altmember cref="T:System.Web.UI.WebControls.Style" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/fs0za4w6(v=vs.100)">向导 Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="SideBarTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate SideBarTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate SideBarTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Wizard.SideBarTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property SideBarTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ SideBarTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SideBarTemplate : System.Web.UI.ITemplate with get, set" Usage="System.Web.UI.WebControls.Wizard.SideBarTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(null)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(null)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.Wizard))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.Wizard))&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置用于显示控件上侧栏区域的模板。</summary>
        <value>一个 <see cref="T:System.Web.UI.ITemplate" />，它包含用于显示 <see cref="T:System.Web.UI.WebControls.Wizard" /> 上侧栏区域的模板。 默认为 <see langword="null" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 使用 <xref:System.Web.UI.WebControls.Wizard.SideBarTemplate%2A> 属性指定为控件上侧栏区域显示的自定义内容 <xref:System.Web.UI.WebControls.Wizard> 。 通过创建指定如何呈现侧栏区域的模板来定义内容。

 模板的自定义内容包含在 <xref:System.Web.UI.WebControls.Wizard.SideBarTemplate%2A> 对象内。 您可以 <xref:System.Web.UI.WebControls.Wizard.SideBarTemplate%2A> 通过在 "设计" 视图中使用模板编辑模式或通过使用标记来定义嵌入对象，将自定义内容添加到对象 <xref:System.Web.UI.WebControls.Wizard.SideBarTemplate%2A> `SideBarTemplate` 。 内容可以与纯文本或更复杂 (嵌入模板中的其他控件一样简单，例如) 。

> [!NOTE]
>  <xref:System.Web.UI.WebControls.Wizard.SideBarTemplate%2A>对象必须包含 <xref:System.Web.UI.WebControls.DataList> 控件或控件， <xref:System.Web.UI.WebControls.ListView> 其 <xref:System.Web.UI.Control.ID%2A> 属性设置为 `"SideBarList"` 才能启用侧栏导航功能。 此外， `"SideBarList"` <xref:System.Web.UI.WebControls.DataList> 或控件上的 <xref:System.Web.UI.WebControls.ListView> 必须包含一个 <xref:System.Web.UI.WebControls.IButtonControl> 控件。

 若要以编程方式访问在模板中定义的控件，请使用 <xref:System.Web.UI.WebControls.CompositeControl.Controls%2A> 对象的集合 <xref:System.Web.UI.WebControls.Wizard> 。 <xref:System.Web.UI.Control.FindControl%2A> <xref:System.Web.UI.WebControls.Wizard> 如果控件具有指定的属性，则还可以使用对象的方法来查找控件 <xref:System.Web.UI.Control.ID%2A> 。



## Examples
 下面的示例演示如何将控件添加 <xref:System.Web.UI.WebControls.ListView> 到 `SideBarTemplate` 元素，以及如何使用 <xref:System.Web.UI.WebControls.LinkButton> 控件来导航这些步骤。

```
<SideBarTemplate>
  <asp:ListView ID="sideBarList" runat="server">
    <LayoutTemplate>
    <div id="ItemPlaceHolder" runat="server"/>
    </LayoutTemplate>

    <ItemTemplate>
      <asp:LinkButton ID="sideBarButton" runat="server"
          Text="Button" />
    </ItemTemplate>
  </asp:ListView>
</SideBarTemplate>
```

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Wizard.SideBarStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.SideBarButtonStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.DisplaySideBar" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/fs0za4w6(v=vs.100)">向导 Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="SkipLinkText">
      <MemberSignature Language="C#" Value="public virtual string SkipLinkText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SkipLinkText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Wizard.SkipLinkText" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property SkipLinkText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ SkipLinkText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SkipLinkText : string with get, set" Usage="System.Web.UI.WebControls.Wizard.SkipLinkText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Localizable(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Localizable(true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，它用于呈现替换文本，以通知屏幕阅读器跳过侧栏区域中的内容。</summary>
        <value>一个字符串，<see cref="T:System.Web.UI.WebControls.Wizard" /> 将其呈现为不可见图像的替换文本，作为对屏幕阅读器的提示。 默认值为 <c>"跳过导航链接"</c>。 控件的默认文本将根据服务器当前的区域设置进行本地化。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 使用 <xref:System.Web.UI.WebControls.Wizard.SkipLinkText%2A> 属性指定屏幕阅读器读取的隐藏图像的替换文字，以提供跳过侧栏区域内容的功能。 指定的文本提供了辅助技术设备，其中包含隐藏图像的说明，可用于使控件更易于访问。

> [!NOTE]
>  如果将 <xref:System.Web.UI.WebControls.Wizard.DisplaySideBar%2A> 属性设置为 `false` ，则 <xref:System.Web.UI.WebControls.Wizard.SkipLinkText%2A> 属性不会创建具有替换文本的隐藏图像。

 设置此属性后，可以使用设计器工具自动将此属性的值保存到资源文件中。 有关详细信息，请参阅 <xref:System.ComponentModel.LocalizableAttribute> 和 [全球化和本地化](https://docs.microsoft.com/previous-versions/aspnet/c6zyy3s9(v=vs.100))。

 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/fs0za4w6(v=vs.100)">向导 Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="StartNavigationTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate StartNavigationTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate StartNavigationTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Wizard.StartNavigationTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property StartNavigationTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ StartNavigationTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberSignature Language="F#" Value="member this.StartNavigationTemplate : System.Web.UI.ITemplate with get, set" Usage="System.Web.UI.WebControls.Wizard.StartNavigationTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(null)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(null)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.Wizard))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.Wizard))&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置用于显示 <see cref="F:System.Web.UI.WebControls.WizardStepType.Start" /> 控件的 <see cref="T:System.Web.UI.WebControls.Wizard" /> 步骤中的导航区域的模板。</summary>
        <value>一个 <see cref="T:System.Web.UI.ITemplate" />，它包含用于显示 <see cref="F:System.Web.UI.WebControls.WizardStepType.Start" /> 的 <see cref="T:System.Web.UI.WebControls.Wizard" /> 上的导航区域的模板。 默认为 <see langword="null" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 使用 <xref:System.Web.UI.WebControls.Wizard.StartNavigationTemplate%2A> 属性指定为控件的步骤显示的导航区域的自定义内容 <xref:System.Web.UI.WebControls.WizardStepType.Start> <xref:System.Web.UI.WebControls.Wizard> 。 通过创建指定如何在步骤中呈现导航区域的模板来定义内容 <xref:System.Web.UI.WebControls.WizardStepType.Start> 。

 模板的自定义内容包含在 <xref:System.Web.UI.WebControls.Wizard.StartNavigationTemplate%2A> 对象内。 您可以 <xref:System.Web.UI.WebControls.Wizard.StartNavigationTemplate%2A> 通过在 "设计" 视图中使用模板编辑模式或通过使用标记来定义嵌入对象，将自定义内容添加到对象 <xref:System.Web.UI.WebControls.Wizard.StartNavigationTemplate%2A> `StartNavigationTemplate` 。 内容可以与纯文本或更复杂 (嵌入模板中的其他控件一样简单，例如) 。

> [!NOTE]
>  <xref:System.Web.UI.WebControls.Wizard.StartNavigationTemplate%2A>属性中包含的对象 <xref:System.Web.UI.WebControls.Wizard.StartNavigationTemplate%2A> 必须包含一个控件，其 <xref:System.Web.UI.WebControls.IButtonControl> <xref:System.Web.UI.WebControls.IButtonControl.CommandName%2A> 属性设置为， `"MoveNext"` 以启用导航功能。

 若要以编程方式访问在模板中定义的控件，请使用 <xref:System.Web.UI.WebControls.CompositeControl.Controls%2A> 对象的集合 <xref:System.Web.UI.WebControls.Wizard> 。 <xref:System.Web.UI.Control.FindControl%2A> <xref:System.Web.UI.WebControls.Wizard> 如果控件具有指定的属性，则还可以使用对象的方法来查找控件 <xref:System.Web.UI.Control.ID%2A> 。

 ]]></format>
        </remarks>
        <altmember cref="F:System.Web.UI.WebControls.WizardStepType.Start" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.FinishNavigationTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.StepNavigationTemplate" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/fs0za4w6(v=vs.100)">向导 Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="StartNextButtonID">
      <MemberSignature Language="C#" Value="protected static readonly string StartNextButtonID;" />
      <MemberSignature Language="ILAsm" Value=".field family static initonly string StartNextButtonID" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.Wizard.StartNextButtonID" />
      <MemberSignature Language="VB.NET" Value="Protected Shared ReadOnly StartNextButtonID As String " />
      <MemberSignature Language="C++ CLI" Value="protected: static initonly System::String ^ StartNextButtonID;" />
      <MemberSignature Language="F#" Value=" staticval mutable StartNextButtonID : string" Usage="System.Web.UI.WebControls.Wizard.StartNextButtonID" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>检索与 <see cref="F:System.Web.UI.WebControls.WizardStepType.Start" /> 步骤中的“下一步”按钮关联的标识符****。 此字段是静态的且是只读的。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.Wizard.StartNextButtonID>主要由控件开发人员使用。 的值 <xref:System.Web.UI.WebControls.Wizard.StartNextButtonID> 为 `"StartNextButton"` 。

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.IButtonControl" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/fs0za4w6(v=vs.100)">向导 Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="StartNextButtonImageUrl">
      <MemberSignature Language="C#" Value="public virtual string StartNextButtonImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StartNextButtonImageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Wizard.StartNextButtonImageUrl" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property StartNextButtonImageUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ StartNextButtonImageUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.StartNextButtonImageUrl : string with get, set" Usage="System.Web.UI.WebControls.Wizard.StartNextButtonImageUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue("")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue("")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName Language="C#">[System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.UrlProperty]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.UrlProperty&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置为 <see cref="F:System.Web.UI.WebControls.WizardStepType.Start" /> 步骤中的“下一步”按钮显示的图像的 URL****。</summary>
        <value>为的上的 " **下一步** " 显示的图像的 URL <see cref="F:System.Web.UI.WebControls.WizardStepType.Start" /> <see cref="T:System.Web.UI.WebControls.Wizard" /> 。 默认值为空字符串("")。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 当 <xref:System.Web.UI.WebControls.Wizard.StartNextButtonType%2A> 属性设置为 <xref:System.Web.UI.WebControls.ButtonType.Image> 字段时，请使用 <xref:System.Web.UI.WebControls.Wizard.StartNextButtonImageUrl%2A> 属性指定为 " **下一步** " 按钮显示的图像。

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Wizard.StartNextButtonStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.StartNextButtonText" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.StartNextButtonType" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.StartNavigationTemplate" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/fs0za4w6(v=vs.100)">向导 Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="StartNextButtonStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.Style StartNextButtonStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.Style StartNextButtonStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Wizard.StartNextButtonStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property StartNextButtonStyle As Style" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::Style ^ StartNextButtonStyle { System::Web::UI::WebControls::Style ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.StartNextButtonStyle : System.Web.UI.WebControls.Style" Usage="System.Web.UI.WebControls.Wizard.StartNextButtonStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(null)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(null)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.NotifyParentProperty(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.NotifyParentProperty(true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Style</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个对 <see cref="T:System.Web.UI.WebControls.Style" /> 的引用，该对象定义 <see cref="F:System.Web.UI.WebControls.WizardStepType.Start" /> 步骤中的“下一步”按钮的设置****。</summary>
        <value>一个对的引用 <see cref="T:System.Web.UI.WebControls.Style" /> ，该引用定义的 **下的下一** 的样式设置 <see cref="F:System.Web.UI.WebControls.WizardStepType.Start" /> <see cref="T:System.Web.UI.WebControls.Wizard" /> 。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.Wizard.StartNextButtonStyle%2A>属性定义控件步骤中的 "**下一步**" 按钮的外观 <xref:System.Web.UI.WebControls.WizardStepType.Start> <xref:System.Web.UI.WebControls.Wizard> 。 <xref:System.Web.UI.WebControls.Wizard.StartNextButtonStyle%2A>属性是只读的; 但是，您可以设置它返回的对象的属性 <xref:System.Web.UI.WebControls.Style> 。 可以在窗体中以声明方式设置这些属性 `Property-Subproperty` ，其中 `Subproperty` 表示类的属性 <xref:System.Web.UI.WebControls.Style> (例如 `CancelButtonStyle-ForeColor`) 。 可以通过编程方式设置属性 `Property.Subproperty` ， (例如 `CancelButtonStyle.ForeColor`) 。

 常见设置包括自定义背景色、文本颜色和字体属性。 属性的样式设置 <xref:System.Web.UI.WebControls.Wizard.StartNextButtonStyle%2A> 与属性的样式设置合并在一起 <xref:System.Web.UI.WebControls.Wizard.NavigationButtonStyle%2A> 。 在属性中应用的任何设置都将 <xref:System.Web.UI.WebControls.Wizard.StartNextButtonStyle%2A> 重写属性中的相应设置 <xref:System.Web.UI.WebControls.Wizard.NavigationButtonStyle%2A> 。

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Wizard.NavigationButtonStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.StartNextButtonImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.StartNextButtonText" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.StartNextButtonType" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.StartNavigationTemplate" />
        <altmember cref="T:System.Web.UI.WebControls.Style" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/fs0za4w6(v=vs.100)">向导 Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="StartNextButtonText">
      <MemberSignature Language="C#" Value="public virtual string StartNextButtonText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StartNextButtonText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Wizard.StartNextButtonText" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property StartNextButtonText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ StartNextButtonText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.StartNextButtonText : string with get, set" Usage="System.Web.UI.WebControls.Wizard.StartNextButtonText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Localizable(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Localizable(true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置为 <see cref="F:System.Web.UI.WebControls.WizardStepType.Start" /> 步骤中的“下一步”按钮显示的描述文字****。</summary>
        <value>为的上的 " **下一步** " 显示的文本标题 <see cref="F:System.Web.UI.WebControls.WizardStepType.Start" /> <see cref="T:System.Web.UI.WebControls.Wizard" /> 。 默认值为 <c>"下一步"</c>。 控件的默认文本将根据服务器当前的区域设置进行本地化。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.Wizard.StartNextButtonText%2A>属性包含为控件步骤中的 "**下一步**" 按钮显示的文本 <xref:System.Web.UI.WebControls.WizardStepType.Start> <xref:System.Web.UI.WebControls.Wizard> 。 根据属性的值 <xref:System.Web.UI.WebControls.Wizard.StartNextButtonType%2A> ， <xref:System.Web.UI.WebControls.Wizard.StartNextButtonText%2A> 属性可以作为按钮上的文本出现，作为在不呈现图像的浏览器中显示为图像的替代文本，或显示为链接的文本。 下表列出了属性的字段值 <xref:System.Web.UI.WebControls.Wizard.StartNextButtonType%2A> ，并列出了每个字段在 **下一个** 按钮文本上的作用。

 <xref:System.Web.UI.WebControls.ButtonType.Button> 文本出现在按钮上。

 <xref:System.Web.UI.WebControls.ButtonType.Image> 文本显示为图像的替代文本。

 <xref:System.Web.UI.WebControls.ButtonType.Link> 文本显示为链接。

 设置此属性后，可以使用设计器工具自动将此属性的值保存到资源文件中。 有关详细信息，请参阅 <xref:System.ComponentModel.LocalizableAttribute> 和 [全球化和本地化](https://docs.microsoft.com/previous-versions/aspnet/c6zyy3s9(v=vs.100))。

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Wizard.StartNextButtonImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.StartNextButtonStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.StartNextButtonType" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.StartNavigationTemplate" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/fs0za4w6(v=vs.100)">向导 Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="StartNextButtonType">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.ButtonType StartNextButtonType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.ButtonType StartNextButtonType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Wizard.StartNextButtonType" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property StartNextButtonType As ButtonType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::ButtonType StartNextButtonType { System::Web::UI::WebControls::ButtonType get(); void set(System::Web::UI::WebControls::ButtonType value); };" />
      <MemberSignature Language="F#" Value="member this.StartNextButtonType : System.Web.UI.WebControls.ButtonType with get, set" Usage="System.Web.UI.WebControls.Wizard.StartNextButtonType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ButtonType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置呈现为 <see cref="F:System.Web.UI.WebControls.WizardStepType.Start" /> 步骤中的“下一步”按钮的按钮类型****。</summary>
        <value><see cref="T:System.Web.UI.WebControls.ButtonType" /> 值之一。 默认为 <see cref="F:System.Web.UI.WebControls.ButtonType.Button" />。</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.UI.WebControls.Wizard.StartNextButtonImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.StartNextButtonStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.StartNextButtonText" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.StartNavigationTemplate" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/fs0za4w6(v=vs.100)">向导 Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="StepNavigationTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate StepNavigationTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate StepNavigationTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Wizard.StepNavigationTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property StepNavigationTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ StepNavigationTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberSignature Language="F#" Value="member this.StepNavigationTemplate : System.Web.UI.ITemplate with get, set" Usage="System.Web.UI.WebControls.Wizard.StepNavigationTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(null)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(null)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.Wizard))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.Wizard))&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置模板，该模板用于显示除 <see cref="T:System.Web.UI.WebControls.WizardStepBase" />、<see cref="F:System.Web.UI.WebControls.WizardStepType.Start" /> 或 <see cref="F:System.Web.UI.WebControls.WizardStepType.Finish" /> 步骤以外的任何从 <see cref="F:System.Web.UI.WebControls.WizardStepType.Complete" /> 派生的对象上的导航区域。</summary>
        <value>一个 <see cref="T:System.Web.UI.ITemplate" />，它包含用于显示除 <see cref="T:System.Web.UI.WebControls.WizardStepBase" />、<see cref="T:System.Web.UI.WebControls.Wizard" /> 或 <see cref="F:System.Web.UI.WebControls.WizardStepType.Start" /> 以外的任何从 <see cref="F:System.Web.UI.WebControls.WizardStepType.Finish" /> 控件的 <see cref="F:System.Web.UI.WebControls.WizardStepType.Complete" /> 派生的对象上的导航区域。 默认为 <see langword="null" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 使用 <xref:System.Web.UI.WebControls.Wizard.StartNavigationTemplate%2A> 属性指定为控件的步骤显示的导航区域的自定义内容 <xref:System.Web.UI.WebControls.WizardStepType.Step> <xref:System.Web.UI.WebControls.Wizard> 。 通过创建指定如何在步骤中呈现导航区域的模板来定义内容 <xref:System.Web.UI.WebControls.WizardStepType.Step> 。

 模板的自定义内容包含在 <xref:System.Web.UI.WebControls.Wizard.StepNavigationTemplate%2A> 对象内。 您可以 <xref:System.Web.UI.WebControls.Wizard.StepNavigationTemplate%2A> 通过在 "设计" 视图中使用模板编辑模式或通过使用标记来定义嵌入对象，将自定义内容添加到对象 <xref:System.Web.UI.WebControls.Wizard.StepNavigationTemplate%2A> `StepNavigationTemplate` 。 内容可以与纯文本或更复杂 (嵌入模板中的其他控件一样简单，例如) 。

> [!NOTE]
>  <xref:System.Web.UI.WebControls.Wizard.StepNavigationTemplate%2A>属性中包含的对象 <xref:System.Web.UI.WebControls.Wizard.StepNavigationTemplate%2A> 必须包含两个 <xref:System.Web.UI.WebControls.IButtonControl> 控件，一个控件的 <xref:System.Web.UI.WebControls.IButtonControl.CommandName%2A> 属性设置为， `"MoveNext"` 另一个控件的 <xref:System.Web.UI.WebControls.IButtonControl.CommandName%2A> 属性设置为 `"MovePrevious"` ，以启用导航功能。

 若要以编程方式访问在模板中定义的控件，请使用 <xref:System.Web.UI.WebControls.CompositeControl.Controls%2A> 对象的集合 <xref:System.Web.UI.WebControls.Wizard> 。 <xref:System.Web.UI.Control.FindControl%2A> <xref:System.Web.UI.WebControls.Wizard> 如果控件具有指定的属性，则还可以使用对象的方法来查找控件 <xref:System.Web.UI.Control.ID%2A> 。

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Wizard.StartNavigationTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.FinishNavigationTemplate" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/fs0za4w6(v=vs.100)">向导 Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="StepNextButtonID">
      <MemberSignature Language="C#" Value="protected static readonly string StepNextButtonID;" />
      <MemberSignature Language="ILAsm" Value=".field family static initonly string StepNextButtonID" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.Wizard.StepNextButtonID" />
      <MemberSignature Language="VB.NET" Value="Protected Shared ReadOnly StepNextButtonID As String " />
      <MemberSignature Language="C++ CLI" Value="protected: static initonly System::String ^ StepNextButtonID;" />
      <MemberSignature Language="F#" Value=" staticval mutable StepNextButtonID : string" Usage="System.Web.UI.WebControls.Wizard.StepNextButtonID" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>检索与“下一步”按钮关联的标识符****。 此字段是静态的且是只读的。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 此 <xref:System.Web.UI.WebControls.Wizard.StepNextButtonID> 字段主要由控件开发人员使用。 的值 <xref:System.Web.UI.WebControls.Wizard.StepNextButtonID> 为 `"StepNextButton"` 。

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.IButtonControl" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/fs0za4w6(v=vs.100)">向导 Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="StepNextButtonImageUrl">
      <MemberSignature Language="C#" Value="public virtual string StepNextButtonImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StepNextButtonImageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Wizard.StepNextButtonImageUrl" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property StepNextButtonImageUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ StepNextButtonImageUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.StepNextButtonImageUrl : string with get, set" Usage="System.Web.UI.WebControls.Wizard.StepNextButtonImageUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue("")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue("")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName Language="C#">[System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.UrlProperty]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.UrlProperty&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置为“下一步”按钮显示的图像的 URL****。</summary>
        <value>为 **下一步** 显示的图像的 URL <see cref="T:System.Web.UI.WebControls.Wizard" /> 。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 当 <xref:System.Web.UI.WebControls.Wizard.StepNextButtonType%2A> 属性设置为 <xref:System.Web.UI.WebControls.ButtonType.Image> 字段时，请使用 <xref:System.Web.UI.WebControls.Wizard.StepNextButtonImageUrl%2A> 属性指定为 " **下一步** " 按钮显示的图像。

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Wizard.StepNextButtonStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.StepNextButtonText" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.StepNextButtonType" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/fs0za4w6(v=vs.100)">向导 Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="StepNextButtonStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.Style StepNextButtonStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.Style StepNextButtonStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Wizard.StepNextButtonStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property StepNextButtonStyle As Style" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::Style ^ StepNextButtonStyle { System::Web::UI::WebControls::Style ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.StepNextButtonStyle : System.Web.UI.WebControls.Style" Usage="System.Web.UI.WebControls.Wizard.StepNextButtonStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(null)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(null)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.NotifyParentProperty(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.NotifyParentProperty(true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Style</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个对 <see cref="T:System.Web.UI.WebControls.Style" /> 对象的引用，该对象定义“下一步”按钮的设置****。</summary>
        <value>一个对的引用 <see cref="T:System.Web.UI.WebControls.Style" /> ，该引用定义的 **下一个** 的样式设置 <see cref="T:System.Web.UI.WebControls.Wizard" /> 。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.Wizard.StepNextButtonStyle%2A>属性定义控件上 "**下一步**" 按钮的外观 <xref:System.Web.UI.WebControls.Wizard> 。 <xref:System.Web.UI.WebControls.Wizard.StepNextButtonStyle%2A>属性是只读的; 但是，您可以设置它返回的对象的属性 <xref:System.Web.UI.WebControls.Style> 。 可以在窗体中以声明方式设置这些属性 `Property-Subproperty` ，其中 `Subproperty` 表示类的属性 <xref:System.Web.UI.WebControls.Style> (例如 `CancelButtonStyle-ForeColor`) 。 可以通过编程方式设置属性 `Property.Subproperty` ， (例如 `CancelButtonStyle.ForeColor`) 。

 常见设置包括自定义背景色、文本颜色和字体属性。 属性的样式设置 <xref:System.Web.UI.WebControls.Wizard.StepNextButtonStyle%2A> 与属性的样式设置合并在一起 <xref:System.Web.UI.WebControls.Wizard.NavigationButtonStyle%2A> 。 在属性中应用的任何设置都将 <xref:System.Web.UI.WebControls.Wizard.StepNextButtonStyle%2A> 重写属性中的相应设置 <xref:System.Web.UI.WebControls.Wizard.NavigationButtonStyle%2A> 。

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Wizard.NavigationButtonStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.StepNextButtonImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.StepNextButtonText" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.StepNextButtonType" />
        <altmember cref="T:System.Web.UI.WebControls.Style" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/fs0za4w6(v=vs.100)">向导 Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="StepNextButtonText">
      <MemberSignature Language="C#" Value="public virtual string StepNextButtonText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StepNextButtonText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Wizard.StepNextButtonText" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property StepNextButtonText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ StepNextButtonText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.StepNextButtonText : string with get, set" Usage="System.Web.UI.WebControls.Wizard.StepNextButtonText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Localizable(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Localizable(true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置为“下一步”按钮显示的描述文字****。</summary>
        <value>为 **下一步** 显示的文本标题 <see cref="T:System.Web.UI.WebControls.Wizard" /> 。 默认值为 <c>"下一步"</c>。 控件的默认文本将根据服务器当前的区域设置进行本地化。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.Wizard.StepNextButtonText%2A>属性包含为控件上的 "**下一步**" 按钮显示的文本 <xref:System.Web.UI.WebControls.Wizard> 。 根据属性的值 <xref:System.Web.UI.WebControls.Wizard.StepNextButtonType%2A> ， <xref:System.Web.UI.WebControls.Wizard.StepNextButtonText%2A> 属性可以以文本形式显示在按钮上，如显示为图像的替代文本或链接文本。 下表列出了属性的字段值 <xref:System.Web.UI.WebControls.Wizard.StepNextButtonType%2A> ，并列出了每个字段在 **下一个** 按钮文本上的作用。

 <xref:System.Web.UI.WebControls.ButtonType.Button> 文本出现在按钮上。

 <xref:System.Web.UI.WebControls.ButtonType.Image> 文本显示为图像的替代文本。

 <xref:System.Web.UI.WebControls.ButtonType.Link> 文本显示为链接。

 设置此属性后，可以使用设计器工具自动将此属性的值保存到资源文件中。 有关详细信息，请参阅 <xref:System.ComponentModel.LocalizableAttribute> 和 [全球化和本地化](https://docs.microsoft.com/previous-versions/aspnet/c6zyy3s9(v=vs.100))。

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Wizard.StepNextButtonImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.StepNextButtonStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.StepNextButtonType" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/fs0za4w6(v=vs.100)">向导 Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="StepNextButtonType">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.ButtonType StepNextButtonType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.ButtonType StepNextButtonType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Wizard.StepNextButtonType" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property StepNextButtonType As ButtonType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::ButtonType StepNextButtonType { System::Web::UI::WebControls::ButtonType get(); void set(System::Web::UI::WebControls::ButtonType value); };" />
      <MemberSignature Language="F#" Value="member this.StepNextButtonType : System.Web.UI.WebControls.ButtonType with get, set" Usage="System.Web.UI.WebControls.Wizard.StepNextButtonType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ButtonType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置呈现为“下一步”按钮的按钮类型****。</summary>
        <value><see cref="T:System.Web.UI.WebControls.ButtonType" /> 值之一。 默认为 <see cref="F:System.Web.UI.WebControls.ButtonType.Button" />。</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.UI.WebControls.Wizard.StepNextButtonImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.StepNextButtonStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.StepNextButtonText" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/fs0za4w6(v=vs.100)">向导 Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="StepPreviousButtonID">
      <MemberSignature Language="C#" Value="protected static readonly string StepPreviousButtonID;" />
      <MemberSignature Language="ILAsm" Value=".field family static initonly string StepPreviousButtonID" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.Wizard.StepPreviousButtonID" />
      <MemberSignature Language="VB.NET" Value="Protected Shared ReadOnly StepPreviousButtonID As String " />
      <MemberSignature Language="C++ CLI" Value="protected: static initonly System::String ^ StepPreviousButtonID;" />
      <MemberSignature Language="F#" Value=" staticval mutable StepPreviousButtonID : string" Usage="System.Web.UI.WebControls.Wizard.StepPreviousButtonID" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>检索与“上一步”按钮关联的标识符****。 此字段是静态的且是只读的。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 此 <xref:System.Web.UI.WebControls.Wizard.StepPreviousButtonID> 字段主要由控件开发人员使用。 的值 <xref:System.Web.UI.WebControls.Wizard.StepPreviousButtonID> 为 `"StepPreviousButton"` 。

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.IButtonControl" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/fs0za4w6(v=vs.100)">向导 Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="StepPreviousButtonImageUrl">
      <MemberSignature Language="C#" Value="public virtual string StepPreviousButtonImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StepPreviousButtonImageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Wizard.StepPreviousButtonImageUrl" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property StepPreviousButtonImageUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ StepPreviousButtonImageUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.StepPreviousButtonImageUrl : string with get, set" Usage="System.Web.UI.WebControls.Wizard.StepPreviousButtonImageUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue("")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue("")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName Language="C#">[System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.UrlProperty]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.UrlProperty&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置为“上一步”按钮显示的图像的 URL****。</summary>
        <value>为上的 "上 **一步** " 显示的图像的 URL <see cref="T:System.Web.UI.WebControls.Wizard" /> 。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 当 <xref:System.Web.UI.WebControls.Wizard.StepPreviousButtonType%2A> 属性设置为 <xref:System.Web.UI.WebControls.ButtonType.Image> 字段时，使用 <xref:System.Web.UI.WebControls.Wizard.StepPreviousButtonImageUrl%2A> 属性指定为 " **上一步** " 按钮显示的图像。

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Wizard.StepPreviousButtonStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.StepPreviousButtonText" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.StepPreviousButtonType" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/fs0za4w6(v=vs.100)">向导 Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="StepPreviousButtonStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.Style StepPreviousButtonStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.Style StepPreviousButtonStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Wizard.StepPreviousButtonStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property StepPreviousButtonStyle As Style" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::Style ^ StepPreviousButtonStyle { System::Web::UI::WebControls::Style ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.StepPreviousButtonStyle : System.Web.UI.WebControls.Style" Usage="System.Web.UI.WebControls.Wizard.StepPreviousButtonStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(null)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(null)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.NotifyParentProperty(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.NotifyParentProperty(true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Style</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个对 <see cref="T:System.Web.UI.WebControls.Style" /> 对象的引用，该对象定义“上一步”按钮的设置****。</summary>
        <value>一个对的引用 <see cref="T:System.Web.UI.WebControls.Style" /> ，该引用定义 **上** 针对的上的的样式设置 <see cref="F:System.Web.UI.WebControls.WizardStepType.Step" /> <see cref="T:System.Web.UI.WebControls.Wizard" /> 。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.Wizard.StepPreviousButtonStyle%2A>属性定义控件步骤中 "**上一**步" 按钮的外观 <xref:System.Web.UI.WebControls.WizardStepType.Step> <xref:System.Web.UI.WebControls.Wizard> 。 <xref:System.Web.UI.WebControls.Wizard.StepPreviousButtonStyle%2A>属性是只读的; 但是，您可以设置它返回的对象的属性 <xref:System.Web.UI.WebControls.Style> 。 可以在窗体中以声明方式设置这些属性 `Property-Subproperty` ，其中 `Subproperty` 表示类的属性 <xref:System.Web.UI.WebControls.Style> (例如 `CancelButtonStyle-ForeColor`) 。 可以通过编程方式设置属性 `Property.Subproperty` ， (例如 `CancelButtonStyle.ForeColor`) 。

 常见设置包括自定义背景色、文本颜色和字体属性。 属性的样式设置 <xref:System.Web.UI.WebControls.Wizard.StepPreviousButtonStyle%2A> 与属性的样式设置合并在一起 <xref:System.Web.UI.WebControls.Wizard.NavigationButtonStyle%2A> 。 在属性中应用的任何设置都将 <xref:System.Web.UI.WebControls.Wizard.StepPreviousButtonStyle%2A> 重写属性中的相应设置 <xref:System.Web.UI.WebControls.Wizard.NavigationButtonStyle%2A> 。

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Wizard.NavigationButtonStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.StepPreviousButtonImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.StepPreviousButtonText" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.StepPreviousButtonType" />
        <altmember cref="T:System.Web.UI.WebControls.Style" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/fs0za4w6(v=vs.100)">向导 Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="StepPreviousButtonText">
      <MemberSignature Language="C#" Value="public virtual string StepPreviousButtonText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StepPreviousButtonText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Wizard.StepPreviousButtonText" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property StepPreviousButtonText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ StepPreviousButtonText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.StepPreviousButtonText : string with get, set" Usage="System.Web.UI.WebControls.Wizard.StepPreviousButtonText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Localizable(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Localizable(true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置为“上一步”按钮显示的描述文字****。</summary>
        <value>为上的 "上 **一步** " 显示的文本标题 <see cref="T:System.Web.UI.WebControls.Wizard" /> 。 默认值为 <c>"上一步"</c>。 控件的默认文本将根据服务器当前的区域设置进行本地化。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.Wizard.StepPreviousButtonText%2A>属性包含为控件上的 "**上一步**" 按钮显示的文本 <xref:System.Web.UI.WebControls.Wizard> 。 根据属性的值 <xref:System.Web.UI.WebControls.Wizard.StepPreviousButtonType%2A> ， <xref:System.Web.UI.WebControls.Wizard.StepPreviousButtonText%2A> 属性可以作为按钮上的文本出现，作为在不呈现图像的浏览器中显示为图像的替代文本，或显示为链接的文本。 下表列出了属性的字段值 <xref:System.Web.UI.WebControls.Wizard.StepPreviousButtonType%2A> 以及每个属性在上 **一** 按钮文本上的作用。

 <xref:System.Web.UI.WebControls.ButtonType.Button> 文本出现在按钮上。

 <xref:System.Web.UI.WebControls.ButtonType.Image> 文本显示为图像的替代文本。

 <xref:System.Web.UI.WebControls.ButtonType.Link> 文本显示为链接。

 设置此属性后，可以使用设计器工具自动将此属性的值保存到资源文件中。 有关详细信息，请参阅 <xref:System.ComponentModel.LocalizableAttribute> 和 [全球化和本地化](https://docs.microsoft.com/previous-versions/aspnet/c6zyy3s9(v=vs.100))。

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Wizard.StepPreviousButtonImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.StepPreviousButtonStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.StepPreviousButtonType" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/fs0za4w6(v=vs.100)">向导 Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="StepPreviousButtonType">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.ButtonType StepPreviousButtonType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.ButtonType StepPreviousButtonType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Wizard.StepPreviousButtonType" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property StepPreviousButtonType As ButtonType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::ButtonType StepPreviousButtonType { System::Web::UI::WebControls::ButtonType get(); void set(System::Web::UI::WebControls::ButtonType value); };" />
      <MemberSignature Language="F#" Value="member this.StepPreviousButtonType : System.Web.UI.WebControls.ButtonType with get, set" Usage="System.Web.UI.WebControls.Wizard.StepPreviousButtonType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ButtonType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置呈现为“上一步”按钮的按钮类型****。</summary>
        <value><see cref="T:System.Web.UI.WebControls.ButtonType" /> 值之一。 默认为 <see cref="F:System.Web.UI.WebControls.ButtonType.Button" />。</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.UI.WebControls.Wizard.StepPreviousButtonImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.StepPreviousButtonStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.StepPreviousButtonText" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/fs0za4w6(v=vs.100)">向导 Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="StepStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle StepStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle StepStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Wizard.StepStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property StepStyle As TableItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TableItemStyle ^ StepStyle { System::Web::UI::WebControls::TableItemStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.StepStyle : System.Web.UI.WebControls.TableItemStyle" Usage="System.Web.UI.WebControls.Wizard.StepStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(null)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(null)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.NotifyParentProperty(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.NotifyParentProperty(true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个对 <see cref="T:System.Web.UI.WebControls.Style" /> 对象的引用，该对象定义 <see cref="T:System.Web.UI.WebControls.WizardStep" /> 对象的设置。</summary>
        <value>一个对 <see cref="T:System.Web.UI.WebControls.Style" /> 的引用，该对象定义 <see cref="T:System.Web.UI.WebControls.WizardStep" /> 上的 <see cref="T:System.Web.UI.WebControls.Wizard" /> 对象的样式设置。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.Wizard.StepStyle%2A>属性获取对 <xref:System.Web.UI.WebControls.Style> 对象的引用，该对象定义 <xref:System.Web.UI.WebControls.WizardStep> 控件上的对象的外观 <xref:System.Web.UI.WebControls.Wizard> 。 <xref:System.Web.UI.WebControls.Wizard.StepStyle%2A>属性是只读的; 但是，您可以设置它返回的对象的属性 <xref:System.Web.UI.WebControls.Style> 。 可以在窗体中以声明方式设置这些属性 `Property-Subproperty` ，其中 `Subproperty` 表示类的属性 <xref:System.Web.UI.WebControls.Style> (例如 `CancelButtonStyle-ForeColor`) 。 可以通过编程方式设置属性 `Property.Subproperty` ， (例如 `CancelButtonStyle.ForeColor`) 。

 常见设置包括自定义背景色、文本颜色和字体属性。 属性的样式设置 <xref:System.Web.UI.WebControls.Wizard.StepStyle%2A> 与控件的属性的样式设置合并在一起 <xref:System.Web.UI.WebControls.WebControl.Style%2A> <xref:System.Web.UI.WebControls.Wizard> 。 在属性中应用的任何设置都将 <xref:System.Web.UI.WebControls.Wizard.StepStyle%2A> 重写控件的属性中的相应设置 <xref:System.Web.UI.WebControls.WebControl.Style%2A> <xref:System.Web.UI.WebControls.Wizard> 。

 <xref:System.Web.UI.WebControls.Wizard.StepStyle%2A>可以设置以下属性来重写控件的 <xref:System.Web.UI.WebControls.WebControl.Style%2A> 属性 <xref:System.Web.UI.WebControls.Wizard> ：

-   <xref:System.Web.UI.WebControls.Style.BackColor%2A>

-   <xref:System.Web.UI.WebControls.Style.BorderColor%2A>

-   <xref:System.Web.UI.WebControls.Style.BorderStyle%2A>

-   <xref:System.Web.UI.WebControls.Style.BorderWidth%2A>

-   <xref:System.Web.UI.WebControls.Style.CssClass%2A>

-   <xref:System.Web.UI.WebControls.Style.Font%2A>

-   <xref:System.Web.UI.WebControls.Style.ForeColor%2A>

-   <xref:System.Web.UI.WebControls.Style.Height%2A>

-   <xref:System.Web.UI.WebControls.Style.Width%2A>

 使用 <xref:System.Web.UI.WebControls.TemplatedWizardStep> 模板定义对象的外观时 <xref:System.Web.UI.WebControls.WizardStep> ， <xref:System.Web.UI.WebControls.Wizard.StepStyle%2A> 属性不起作用。

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.WizardStep" />
        <altmember cref="T:System.Web.UI.WebControls.Style" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/fs0za4w6(v=vs.100)">向导 Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="TagKey">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.HtmlTextWriterTag TagKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.HtmlTextWriterTag TagKey" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Wizard.TagKey" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property TagKey As HtmlTextWriterTag" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Web::UI::HtmlTextWriterTag TagKey { System::Web::UI::HtmlTextWriterTag get(); };" />
      <MemberSignature Language="F#" Value="member this.TagKey : System.Web.UI.HtmlTextWriterTag" Usage="System.Web.UI.WebControls.Wizard.TagKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.HtmlTextWriterTag</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取与 <see cref="T:System.Web.UI.HtmlTextWriterTag" /> 控件相对应的 <see cref="T:System.Web.UI.WebControls.Wizard" /> 值。</summary>
        <value>与 <see cref="T:System.Web.UI.HtmlTextWriterTag" /> 控件相对应的 <see cref="T:System.Web.UI.WebControls.Wizard" /> 值。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 此 <xref:System.Web.UI.WebControls.Wizard.TagKey%2A> 属性主要由控件开发人员用来扩展 <xref:System.Web.UI.WebControls.Wizard> 控件。

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.HtmlTextWriterTag" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/fs0za4w6(v=vs.100)">向导 Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="TrackViewState">
      <MemberSignature Language="C#" Value="protected override void TrackViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void TrackViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Wizard.TrackViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub TrackViewState ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void TrackViewState();" />
      <MemberSignature Language="F#" Value="override this.TrackViewState : unit -&gt; unit" Usage="wizard.TrackViewState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>跟踪视图状态。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WizardStepPlaceholderId">
      <MemberSignature Language="C#" Value="public static readonly string WizardStepPlaceholderId;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string WizardStepPlaceholderId" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.Wizard.WizardStepPlaceholderId" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly WizardStepPlaceholderId As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ WizardStepPlaceholderId;" />
      <MemberSignature Language="F#" Value=" staticval mutable WizardStepPlaceholderId : string" Usage="System.Web.UI.WebControls.Wizard.WizardStepPlaceholderId" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取 <see cref="T:System.Web.UI.WebControls.WizardStep" /> 控件中 <see cref="T:System.Web.UI.WebControls.Wizard" /> 占位符的 ID。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 占位符 ID 必须设置为 "WizardStepPlaceHolder"。

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WizardSteps">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.WizardStepCollection WizardSteps { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WizardStepCollection WizardSteps" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Wizard.WizardSteps" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property WizardSteps As WizardStepCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::WizardStepCollection ^ WizardSteps { System::Web::UI::WebControls::WizardStepCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.WizardSteps : System.Web.UI.WebControls.WizardStepCollection" Usage="System.Web.UI.WebControls.Wizard.WizardSteps" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName Language="C#">[System.ComponentModel.Editor("System.Web.UI.Design.WebControls.WizardStepCollectionEditor,System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Editor("System.Web.UI.Design.WebControls.WizardStepCollectionEditor,System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.Themeable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.Themeable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.Editor("System.Web.UI.Design.WebControls.WizardStepCollectionEditor,System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Editor("System.Web.UI.Design.WebControls.WizardStepCollectionEditor,System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WizardStepCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个包含为该控件定义的所有 <see cref="T:System.Web.UI.WebControls.WizardStepBase" /> 对象的集合。</summary>
        <value>一个 <see cref="T:System.Web.UI.WebControls.WizardStepCollection" />，表示为 <see cref="T:System.Web.UI.WebControls.WizardStepBase" /> 定义的所有 <see cref="T:System.Web.UI.WebControls.Wizard" /> 对象。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.Wizard.WizardSteps%2A>属性返回 <xref:System.Web.UI.WebControls.WizardStepBase> 构成控件的对象的集合 <xref:System.Web.UI.WebControls.Wizard> 。 您可以使用该 <xref:System.Web.UI.WebControls.Wizard.WizardSteps%2A> 集合以 <xref:System.Web.UI.WebControls.WizardStepBase> 编程方式访问控件中包含的对象 <xref:System.Web.UI.WebControls.Wizard> 。 使用 <xref:System.Web.UI.WebControls.WizardStepCollection.Add%2A> 、 <xref:System.Web.UI.WebControls.WizardStepCollection.Remove%2A> 、 <xref:System.Web.UI.WebControls.WizardStepCollection.Clear%2A> 和 <xref:System.Web.UI.WebControls.WizardStepCollection.Insert%2A> 方法以 <xref:System.Web.UI.WebControls.WizardStepBase> 编程方式操作集合中的对象。

> [!NOTE]
>  如果使用 Microsoft Visual Studio 2005，请注意， <xref:System.Web.UI.WebControls.Wizard.ActiveStepIndex%2A> 将保留在源视图中。 如果在 <xref:System.Web.UI.WebControls.Wizard.WizardSteps%2A> 设计视图中通过单击侧栏按钮来更改属性，然后运行页面，则 `Wizard` 可能不会显示控件的第一步，因为 <xref:System.Web.UI.WebControls.Wizard.ActiveStepIndex%2A> 可能会指向不同的步骤。

 如果 <xref:System.Web.UI.WebControls.Wizard> 控件包含多个 <xref:System.Web.UI.WebControls.WizardStepCollection> 集合，则将合并集合。

 无法通过主题或样式表主题设置此属性。 有关详细信息，请参阅 <xref:System.Web.UI.ThemeableAttribute> 和 [ASP.NET 主题和外观](https://docs.microsoft.com/previous-versions/aspnet/ykzx33wh(v=vs.100))。



## Examples
 下面的代码示例演示如何以编程方式创建 <xref:System.Web.UI.WebControls.Wizard> 控件，以及如何使用 <xref:System.Web.UI.WebControls.WizardStepCollection.Add%2A> 方法将对象添加 <xref:System.Web.UI.WebControls.WizardStepBase> 到 <xref:System.Web.UI.WebControls.Wizard.WizardSteps%2A> 集合中。

 [!code-aspx-csharp[System.Web.UI.WebControls.WizardSteps#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardSteps/CS/wizardstepscs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.WizardSteps#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardSteps/VB/wizardstepsvb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.WizardStepCollection" />
        <altmember cref="T:System.Web.UI.WebControls.WizardStepBase" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/fs0za4w6(v=vs.100)">向导 Web 服务器控件</related>
      </Docs>
    </Member>
  </Members>
</Type>
