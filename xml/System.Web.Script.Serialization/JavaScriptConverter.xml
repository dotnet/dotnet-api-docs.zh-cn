<Type Name="JavaScriptConverter" FullName="System.Web.Script.Serialization.JavaScriptConverter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="46542fec8ca5a98335245d1436794880d43f535f" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86679170" /></Metadata><TypeSignature Language="C#" Value="public abstract class JavaScriptConverter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit JavaScriptConverter extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.Script.Serialization.JavaScriptConverter" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class JavaScriptConverter" />
  <TypeSignature Language="C++ CLI" Value="public ref class JavaScriptConverter abstract" />
  <TypeSignature Language="F#" Value="type JavaScriptConverter = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="d3df5-101">为自定义类型转换器提供抽象基类。</span><span class="sxs-lookup"><span data-stu-id="d3df5-101">Provides an abstract base class for a custom type converter.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d3df5-102"><xref:System.Web.Script.Serialization.JavaScriptConverter>利用类，您可以实现类不支持的托管类型的序列化和反序列化进程 <xref:System.Web.Script.Serialization.JavaScriptSerializer> 。</span><span class="sxs-lookup"><span data-stu-id="d3df5-102">The <xref:System.Web.Script.Serialization.JavaScriptConverter> class enables you to implement serialization and deserialization processes for managed types that are not natively supported by the <xref:System.Web.Script.Serialization.JavaScriptSerializer> class.</span></span> <span data-ttu-id="d3df5-103">你还可以 <xref:System.Web.Script.Serialization.JavaScriptConverter> 在需要更好地控制序列化和反序列化过程时使用。</span><span class="sxs-lookup"><span data-stu-id="d3df5-103">You can also use <xref:System.Web.Script.Serialization.JavaScriptConverter> when you need more control over the serialization and deserialization process.</span></span>  
  
 <span data-ttu-id="d3df5-104"><xref:System.Web.Script.Serialization.JavaScriptConverter.SupportedTypes%2A>属性指示自定义转换器为其提供转换器服务的类型。</span><span class="sxs-lookup"><span data-stu-id="d3df5-104">The <xref:System.Web.Script.Serialization.JavaScriptConverter.SupportedTypes%2A> property indicates the types for which a custom converter provides converter services.</span></span>  
  
 <span data-ttu-id="d3df5-105">若要指示实例必须使用自定义转换器 <xref:System.Web.Script.Serialization.JavaScriptSerializer> ，则必须向实例注册转换器。</span><span class="sxs-lookup"><span data-stu-id="d3df5-105">To indicate that a custom converter must be used by the <xref:System.Web.Script.Serialization.JavaScriptSerializer> instance, you must register the converter with the instance.</span></span> <span data-ttu-id="d3df5-106">如果 <xref:System.Web.Script.Serialization.JavaScriptSerializer> 直接使用类，则应使用 <xref:System.Web.Script.Serialization.JavaScriptSerializer.RegisterConverters%2A> 方法注册转换器。</span><span class="sxs-lookup"><span data-stu-id="d3df5-106">If you are using the <xref:System.Web.Script.Serialization.JavaScriptSerializer> class directly, you should use the <xref:System.Web.Script.Serialization.JavaScriptSerializer.RegisterConverters%2A> method to register the converter.</span></span> <span data-ttu-id="d3df5-107">否则，如果从 ECMAScript (的 Web 方法调用 JavaScript) 并且要使用自定义转换器，则可以通过 `converters` 在配置文件中添加元素来注册它。</span><span class="sxs-lookup"><span data-stu-id="d3df5-107">Otherwise, if you are invoking Web methods from ECMAScript (JavaScript) and you want to use the custom converter, you can register it by adding a `converters` element in the configuration file.</span></span> <span data-ttu-id="d3df5-108">有关详细信息，请参阅 [如何：在 Microsoft Ajax 中配置 ASP.NET 服务](https://docs.microsoft.com/previous-versions/aspnet/bb763183(v=vs.100))。</span><span class="sxs-lookup"><span data-stu-id="d3df5-108">For more information, see [How to: Configure ASP.NET Services in Microsoft Ajax](https://docs.microsoft.com/previous-versions/aspnet/bb763183(v=vs.100)).</span></span>  
  
 <span data-ttu-id="d3df5-109">当 <xref:System.Web.Script.Serialization.JavaScriptSerializer> 实例序列化其已注册自定义转换器的类型时，序列化程序将调用 <xref:System.Web.Script.Serialization.JavaScriptConverter.Serialize%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="d3df5-109">When the <xref:System.Web.Script.Serialization.JavaScriptSerializer> instance is serializing a type for which it has a custom converter registered, the serializer calls the <xref:System.Web.Script.Serialization.JavaScriptConverter.Serialize%2A> method.</span></span> <span data-ttu-id="d3df5-110">同样，如果 <xref:System.Web.Script.Serialization.JavaScriptSerializer> 实例正在反序列化 JavaScript 对象表示法 (json) 字符串，并识别 json 字符串内的类型具有与之关联的自定义转换器，则序列化程序将调用 <xref:System.Web.Script.Serialization.JavaScriptConverter.Deserialize%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="d3df5-110">Similarly, when the <xref:System.Web.Script.Serialization.JavaScriptSerializer> instance is deserializing a JavaScript Object Notation (JSON) string and recognizes that a type inside the JSON string has a custom converter associated with it, the serializer calls the <xref:System.Web.Script.Serialization.JavaScriptConverter.Deserialize%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d3df5-111">下面的示例演示如何为类创建自定义转换器 <xref:System.Web.UI.WebControls.ListItemCollection> 。</span><span class="sxs-lookup"><span data-stu-id="d3df5-111">The following example shows how to create a custom converter for the <xref:System.Web.UI.WebControls.ListItemCollection> class.</span></span>  
  
 [!code-csharp[System.Web.Script.Serialization#2](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.Script.Serialization/CS/App_Code/ListItemCollectionConverter.cs#2)]
 [!code-vb[System.Web.Script.Serialization#2](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.Script.Serialization/VB/App_Code/ListItemCollectionConverter.vb#2)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para><span data-ttu-id="d3df5-112">当从继承时 <see cref="T:System.Web.Script.Serialization.JavaScriptConverter" /> ，必须重写以下成员：</span><span class="sxs-lookup"><span data-stu-id="d3df5-112">When you inherit from <see cref="T:System.Web.Script.Serialization.JavaScriptConverter" />, you must override the following members:</span></span> 
-   <see cref="M:System.Web.Script.Serialization.JavaScriptConverter.Deserialize(System.Collections.Generic.IDictionary{System.String,System.Object},System.Type,System.Web.Script.Serialization.JavaScriptSerializer)" />  
  
-   <see cref="M:System.Web.Script.Serialization.JavaScriptConverter.Serialize(System.Object,System.Web.Script.Serialization.JavaScriptSerializer)" />  
  <span data-ttu-id="d3df5-113">
-   <see cref="P:System.Web.Script.Serialization.JavaScriptConverter.SupportedTypes" /><see cref="T:System.Web.Script.Serialization.JavaScriptSerializer" /> 提供的 <see cref="M:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType``1(System.Object)" /> 实现程序将使用的方法 <see cref="T:System.Web.Script.Serialization.JavaScriptConverter" /> 。</span><span class="sxs-lookup"><span data-stu-id="d3df5-113">
-   <see cref="P:System.Web.Script.Serialization.JavaScriptConverter.SupportedTypes" /><see cref="T:System.Web.Script.Serialization.JavaScriptSerializer" /> provides the <see cref="M:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType``1(System.Object)" /> method that will be used by implementers of <see cref="T:System.Web.Script.Serialization.JavaScriptConverter" />.</span></span> <span data-ttu-id="d3df5-114">转换器代码必须能够获取序列化程序传递给它的字典中包含的值，然后将该值转换为类型的对象 <paramref name="T" /> 。</span><span class="sxs-lookup"><span data-stu-id="d3df5-114">Converter code must be able to take a value that is contained in the dictionary that the serializer passes to it, and then convert that value into an object of type <paramref name="T" />.</span></span> <span data-ttu-id="d3df5-115">您可以调用方法，而不是重新实现自定义转换代码来实现此目的 <see cref="M:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType``1(System.Object)" /> 。</span><span class="sxs-lookup"><span data-stu-id="d3df5-115">Rather than re-implementing the custom conversion code to accomplish this, you can call the <see cref="M:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType``1(System.Object)" /> method.</span></span></para></block>
    <altmember cref="T:System.Web.Configuration.Converter" />
    <related type="Article" href="https://msdn.microsoft.com/library/8290e543-7eff-47a4-aace-681f3c07229b"><span data-ttu-id="d3df5-116">ASP.NET AJAX 中的 Web 服务</span><span class="sxs-lookup"><span data-stu-id="d3df5-116">Web Services in ASP.NET AJAX</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected JavaScriptConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.JavaScriptConverter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; JavaScriptConverter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d3df5-117">初始化 <see cref="T:System.Web.Script.Serialization.JavaScriptConverter" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="d3df5-117">Initializes a new instance of the <see cref="T:System.Web.Script.Serialization.JavaScriptConverter" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Deserialize">
      <MemberSignature Language="C#" Value="public abstract object Deserialize (System.Collections.Generic.IDictionary&lt;string,object&gt; dictionary, Type type, System.Web.Script.Serialization.JavaScriptSerializer serializer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Deserialize(class System.Collections.Generic.IDictionary`2&lt;string, object&gt; dictionary, class System.Type type, class System.Web.Script.Serialization.JavaScriptSerializer serializer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.JavaScriptConverter.Deserialize(System.Collections.Generic.IDictionary{System.String,System.Object},System.Type,System.Web.Script.Serialization.JavaScriptSerializer)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Deserialize (dictionary As IDictionary(Of String, Object), type As Type, serializer As JavaScriptSerializer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Object ^ Deserialize(System::Collections::Generic::IDictionary&lt;System::String ^, System::Object ^&gt; ^ dictionary, Type ^ type, System::Web::Script::Serialization::JavaScriptSerializer ^ serializer);" />
      <MemberSignature Language="F#" Value="abstract member Deserialize : System.Collections.Generic.IDictionary&lt;string, obj&gt; * Type * System.Web.Script.Serialization.JavaScriptSerializer -&gt; obj" Usage="javaScriptConverter.Deserialize (dictionary, type, serializer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dictionary" Type="System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;" />
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="serializer" Type="System.Web.Script.Serialization.JavaScriptSerializer" />
      </Parameters>
      <Docs>
        <param name="dictionary"><span data-ttu-id="d3df5-118">作为名称/值对存储的属性数据的 <see cref="T:System.Collections.Generic.IDictionary`2" /> 实例。</span><span class="sxs-lookup"><span data-stu-id="d3df5-118">An <see cref="T:System.Collections.Generic.IDictionary`2" /> instance of property data stored as name/value pairs.</span></span></param>
        <param name="type"><span data-ttu-id="d3df5-119">所生成对象的类型。</span><span class="sxs-lookup"><span data-stu-id="d3df5-119">The type of the resulting object.</span></span></param>
        <param name="serializer"><span data-ttu-id="d3df5-120"><see cref="T:System.Web.Script.Serialization.JavaScriptSerializer" /> 实例。</span><span class="sxs-lookup"><span data-stu-id="d3df5-120">The <see cref="T:System.Web.Script.Serialization.JavaScriptSerializer" /> instance.</span></span></param>
        <summary><span data-ttu-id="d3df5-121">当在派生类中重写时，将所提供的字典转换为指定类型的对象。</span><span class="sxs-lookup"><span data-stu-id="d3df5-121">When overridden in a derived class, converts the provided dictionary into an object of the specified type.</span></span></summary>
        <returns><span data-ttu-id="d3df5-122">已反序列化的对象。</span><span class="sxs-lookup"><span data-stu-id="d3df5-122">The deserialized object.</span></span></returns>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="d3df5-123"><see cref="M:System.Web.Script.Serialization.JavaScriptConverter.Deserialize(System.Collections.Generic.IDictionary{System.String,System.Object},System.Type,System.Web.Script.Serialization.JavaScriptSerializer)" />方法循环访问参数中的值 <paramref name="dictionary" /> ，以构造参数中请求的类型的实例 <paramref name="type" /> 。</span><span class="sxs-lookup"><span data-stu-id="d3df5-123">The <see cref="M:System.Web.Script.Serialization.JavaScriptConverter.Deserialize(System.Collections.Generic.IDictionary{System.String,System.Object},System.Type,System.Web.Script.Serialization.JavaScriptSerializer)" /> method iterates through the values in the <paramref name="dictionary" /> parameter to construct an instance of the type requested in the <paramref name="type" /> parameter.</span></span> <span data-ttu-id="d3df5-124">尽管转换器可以直接使用中的值 <paramref name="dictionary" /> ，但我们建议转换器实施人员改用 <see cref="M:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType``1(System.Object)" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="d3df5-124">Although a converter can directly use values from <paramref name="dictionary" />, we recommend that the converter implementer use the <see cref="M:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType``1(System.Object)" /> method instead.</span></span> <span data-ttu-id="d3df5-125">转换器应 <see cref="T:System.Web.Script.Serialization.JavaScriptSerializer" /> 从参数调用可用实例的此方法 <paramref name="serializer" /> 。</span><span class="sxs-lookup"><span data-stu-id="d3df5-125">The converter should call this method of the <see cref="T:System.Web.Script.Serialization.JavaScriptSerializer" /> instance available from the <paramref name="serializer" /> parameter.</span></span>  
  
<span data-ttu-id="d3df5-126"><see cref="M:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType``1(System.Object)" />方法使转换器能够从传递属性值 <paramref name="dictionary" /> ，然后返回预期类型的值。</span><span class="sxs-lookup"><span data-stu-id="d3df5-126">The <see cref="M:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType``1(System.Object)" /> method enables converter to pass a property value from <paramref name="dictionary" />, and then return a value of the expected type.</span></span> <span data-ttu-id="d3df5-127">在某些情况下，自定义类型的转换器可能使用自身已注册转换器的属性 (例如，类型 A 具有类型为 B 的属性，类型 B 也与自定义转换器) 相关联。</span><span class="sxs-lookup"><span data-stu-id="d3df5-127">In some cases, a converter for a custom type might be working with properties that themselves have registered converters (for example, type A has a property of type B, and type B is also associated with a custom converter).</span></span> <span data-ttu-id="d3df5-128">在这种情况下，调用 <see cref="M:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType``1(System.Object)" /> 将确保为字典中包含的属性数据递归调用自定义转换器。</span><span class="sxs-lookup"><span data-stu-id="d3df5-128">In that case, invoking <see cref="M:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType``1(System.Object)" /> makes sure that custom converters will be recursively invoked for property data that is contained in the dictionary.</span></span> <span data-ttu-id="d3df5-129">转换器循环访问字典中的所有项后，将返回目标类型的构造实例。</span><span class="sxs-lookup"><span data-stu-id="d3df5-129">When the converter has iterated through all entries in the dictionary, it returns a constructed instance of the target type.</span></span>  
  
<span data-ttu-id="d3df5-130">如果转换器在反序列化过程中遇到问题，则会引发 <see cref="T:System.InvalidOperationException" /> 描述问题的错误。</span><span class="sxs-lookup"><span data-stu-id="d3df5-130">If the converter encounters a problem during deserialization, it should throw an <see cref="T:System.InvalidOperationException" /> error that describes the problem.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="Serialize">
      <MemberSignature Language="C#" Value="public abstract System.Collections.Generic.IDictionary&lt;string,object&gt; Serialize (object obj, System.Web.Script.Serialization.JavaScriptSerializer serializer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IDictionary`2&lt;string, object&gt; Serialize(object obj, class System.Web.Script.Serialization.JavaScriptSerializer serializer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.JavaScriptConverter.Serialize(System.Object,System.Web.Script.Serialization.JavaScriptSerializer)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Serialize (obj As Object, serializer As JavaScriptSerializer) As IDictionary(Of String, Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Collections::Generic::IDictionary&lt;System::String ^, System::Object ^&gt; ^ Serialize(System::Object ^ obj, System::Web::Script::Serialization::JavaScriptSerializer ^ serializer);" />
      <MemberSignature Language="F#" Value="abstract member Serialize : obj * System.Web.Script.Serialization.JavaScriptSerializer -&gt; System.Collections.Generic.IDictionary&lt;string, obj&gt;" Usage="javaScriptConverter.Serialize (obj, serializer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
        <Parameter Name="serializer" Type="System.Web.Script.Serialization.JavaScriptSerializer" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="d3df5-131">要序列化的对象。</span><span class="sxs-lookup"><span data-stu-id="d3df5-131">The object to serialize.</span></span></param>
        <param name="serializer"><span data-ttu-id="d3df5-132">负责序列化的对象。</span><span class="sxs-lookup"><span data-stu-id="d3df5-132">The object that is responsible for the serialization.</span></span></param>
        <summary><span data-ttu-id="d3df5-133">当在派生类中重写时，生成名称/值对的字典。</span><span class="sxs-lookup"><span data-stu-id="d3df5-133">When overridden in a derived class, builds a dictionary of name/value pairs.</span></span></summary>
        <returns><span data-ttu-id="d3df5-134">一个对象，包含表示该对象数据的键/值对。</span><span class="sxs-lookup"><span data-stu-id="d3df5-134">An object that contains key/value pairs that represent the object's data.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d3df5-135">序列化自定义转换器注册到的类型时， <xref:System.Web.Script.Serialization.JavaScriptSerializer> 实例将调用 <xref:System.Web.Script.Serialization.JavaScriptConverter.Serialize%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="d3df5-135">When you serialize a type for which a custom converter is registered, the <xref:System.Web.Script.Serialization.JavaScriptSerializer> instance invokes the <xref:System.Web.Script.Serialization.JavaScriptConverter.Serialize%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="d3df5-136">的返回值 <see cref="M:System.Web.Script.Serialization.JavaScriptConverter.Serialize(System.Object,System.Web.Script.Serialization.JavaScriptSerializer)" /> 必须是 <see cref="T:System.Collections.Generic.IDictionary`2" /> 包含零个或多个名称/值对的实例，这些名称/值对表示要转换为 JSON 的对象数据。</span><span class="sxs-lookup"><span data-stu-id="d3df5-136">The return value of <see cref="M:System.Web.Script.Serialization.JavaScriptConverter.Serialize(System.Object,System.Web.Script.Serialization.JavaScriptSerializer)" /> must be an <see cref="T:System.Collections.Generic.IDictionary`2" /> instance with zero or more name/value pairs that represent an object's data to be converted to JSON.</span></span> <span data-ttu-id="d3df5-137">转换器本身不会将数据序列化为 JSON。</span><span class="sxs-lookup"><span data-stu-id="d3df5-137">The converter itself does not serialize data as JSON.</span></span> <span data-ttu-id="d3df5-138">相反，转换器会生成名称/值对的字典，这些名称/值对包含字典的字符串密钥)  (字典) 中的对象值 (相应属性值。</span><span class="sxs-lookup"><span data-stu-id="d3df5-138">Instead, the converter builds a dictionary of name/value pairs that contain the property names (the string key for the dictionary) and corresponding property values (the object value in the dictionary).</span></span> <span data-ttu-id="d3df5-139"><see cref="T:System.Web.Script.Serialization.JavaScriptSerializer" />然后，实例会将它们转换为 JSON。</span><span class="sxs-lookup"><span data-stu-id="d3df5-139">The <see cref="T:System.Web.Script.Serialization.JavaScriptSerializer" /> instance subsequently converts these to JSON.</span></span>  
  
<span data-ttu-id="d3df5-140">如果转换器遇到异常，则它应引发 <see cref="T:System.InvalidOperationException" /> 说明问题的错误。</span><span class="sxs-lookup"><span data-stu-id="d3df5-140">If the converter encounters an exception, it should throw an <see cref="T:System.InvalidOperationException" /> error that describes the problem.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="SupportedTypes">
      <MemberSignature Language="C#" Value="public abstract System.Collections.Generic.IEnumerable&lt;Type&gt; SupportedTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class System.Type&gt; SupportedTypes" />
      <MemberSignature Language="DocId" Value="P:System.Web.Script.Serialization.JavaScriptConverter.SupportedTypes" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property SupportedTypes As IEnumerable(Of Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Collections::Generic::IEnumerable&lt;Type ^&gt; ^ SupportedTypes { System::Collections::Generic::IEnumerable&lt;Type ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportedTypes : seq&lt;Type&gt;" Usage="System.Web.Script.Serialization.JavaScriptConverter.SupportedTypes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Type&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d3df5-141">当在派生类中重写时，获取受支持类型的集合。</span><span class="sxs-lookup"><span data-stu-id="d3df5-141">When overridden in a derived class, gets a collection of the supported types.</span></span></summary>
        <value><span data-ttu-id="d3df5-142">一个实现 <see cref="T:System.Collections.Generic.IEnumerable`1" /> 的对象，用于表示转换器支持的类型。</span><span class="sxs-lookup"><span data-stu-id="d3df5-142">An object that implements <see cref="T:System.Collections.Generic.IEnumerable`1" /> that represents the types supported by the converter.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d3df5-143"><xref:System.Web.Script.Serialization.JavaScriptConverter.SupportedTypes%2A>属性列出转换器支持的类型。</span><span class="sxs-lookup"><span data-stu-id="d3df5-143">The <xref:System.Web.Script.Serialization.JavaScriptConverter.SupportedTypes%2A> property lists the types that are supported by the converter.</span></span> <span data-ttu-id="d3df5-144">在运行时， <xref:System.Web.Script.Serialization.JavaScriptSerializer> 实例使用此属性来确定托管类型到其对应的自定义转换器的映射。</span><span class="sxs-lookup"><span data-stu-id="d3df5-144">At run time, a <xref:System.Web.Script.Serialization.JavaScriptSerializer> instance uses this property to determine the mapping of managed types to their corresponding custom converters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d3df5-145">下面的示例演示如何 <xref:System.Web.Script.Serialization.JavaScriptConverter.SupportedTypes%2A> 在派生类中重写属性。</span><span class="sxs-lookup"><span data-stu-id="d3df5-145">The following example shows how to override the <xref:System.Web.Script.Serialization.JavaScriptConverter.SupportedTypes%2A> property in a derived class.</span></span> <span data-ttu-id="d3df5-146">在此示例中，转换器仅支持 <xref:System.Web.UI.WebControls.ListItemCollection> 类型。</span><span class="sxs-lookup"><span data-stu-id="d3df5-146">In this example, the converter supports only the <xref:System.Web.UI.WebControls.ListItemCollection> type.</span></span> <span data-ttu-id="d3df5-147">此代码示例是为类提供的更大示例的一部分 <xref:System.Web.Script.Serialization.JavaScriptConverter> 。</span><span class="sxs-lookup"><span data-stu-id="d3df5-147">This code example is part of a larger example provided for the <xref:System.Web.Script.Serialization.JavaScriptConverter> class.</span></span>  
  
 [!code-csharp[System.Web.Script.Serialization#3](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.Script.Serialization/CS/App_Code/ListItemCollectionConverter.cs#3)]
 [!code-vb[System.Web.Script.Serialization#3](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.Script.Serialization/VB/App_Code/ListItemCollectionConverter.vb#3)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="d3df5-148">
            <see cref="P:System.Web.Script.Serialization.JavaScriptConverter.SupportedTypes" /> 必须始终返回集合，且集合必须至少包含一个条目。</span><span class="sxs-lookup"><span data-stu-id="d3df5-148">
            <see cref="P:System.Web.Script.Serialization.JavaScriptConverter.SupportedTypes" /> must always return a collection, and the collection must contain at least one entry.</span></span></para></block>
      </Docs>
    </Member>
  </Members>
</Type>
