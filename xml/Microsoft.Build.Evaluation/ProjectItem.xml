<Type Name="ProjectItem" FullName="Microsoft.Build.Evaluation.ProjectItem">
  <Metadata><Meta Name="ms.openlocfilehash" Value="1c8ee9efb5578e8923bbf1b876754b0a4fc5d068" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89955294" /></Metadata><TypeSignature Language="C#" Value="public class ProjectItem" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ProjectItem extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Build.Evaluation.ProjectItem" />
  <TypeSignature Language="VB.NET" Value="Public Class ProjectItem" />
  <TypeSignature Language="C++ CLI" Value="public ref class ProjectItem" />
  <TypeSignature Language="F#" Value="type ProjectItem = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Build</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>15.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.Diagnostics.DebuggerDisplay("{ItemType}={EvaluatedInclude} [{UnevaluatedInclude}] #DirectMetadata={DirectMetadataCount}")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerDisplay("{ItemType}={EvaluatedInclude} [{UnevaluatedInclude}] #DirectMetadata={DirectMetadataCount}")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="cb5c4-101">计算的设计时项</span><span class="sxs-lookup"><span data-stu-id="cb5c4-101">An evaluated design-time item</span></span></summary>
    <remarks><span data-ttu-id="cb5c4-102">对此对象进行的编辑将间接更新包含项目，因为它们将修改支持 XML。</span><span class="sxs-lookup"><span data-stu-id="cb5c4-102">Edits to this object will indirectly dirty the containing project because they will modify the backing XML.</span></span></remarks>
    <comment><span data-ttu-id="cb5c4-103">由于 ProjectMetadata 对象是可变的，因此无法对元数据使用写入时复制表。</span><span class="sxs-lookup"><span data-stu-id="cb5c4-103">We cannot use a copy-on-write table for the metadata, as ProjectMetadata objects are mutable.</span></span> <span data-ttu-id="cb5c4-104">但是，我们将它用于生成时项。</span><span class="sxs-lookup"><span data-stu-id="cb5c4-104">However, we do use it for build-time items.</span></span></comment>
  </Docs>
  <Members>
    <Member MemberName="DirectMetadata">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Evaluation.ProjectMetadata&gt; DirectMetadata { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Evaluation.ProjectMetadata&gt; DirectMetadata" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.ProjectItem.DirectMetadata" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DirectMetadata As IEnumerable(Of ProjectMetadata)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Evaluation::ProjectMetadata ^&gt; ^ DirectMetadata { System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Evaluation::ProjectMetadata ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DirectMetadata : seq&lt;Microsoft.Build.Evaluation.ProjectMetadata&gt;" Usage="Microsoft.Build.Evaluation.ProjectItem.DirectMetadata" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Evaluation.ProjectMetadata&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cb5c4-105">项的直接元数据（如果有）。</span><span class="sxs-lookup"><span data-stu-id="cb5c4-105">Metadata directly on the item, if any.</span></span>
<span data-ttu-id="cb5c4-106">不包含来自项定义的元数据。</span><span class="sxs-lookup"><span data-stu-id="cb5c4-106">Does not include metadata from item definitions.</span></span>
<span data-ttu-id="cb5c4-107">不包含内置元数据。</span><span class="sxs-lookup"><span data-stu-id="cb5c4-107">Does not include built-in metadata.</span></span>
<span data-ttu-id="cb5c4-108">从不返回 null。</span><span class="sxs-lookup"><span data-stu-id="cb5c4-108">Never returns null.</span></span></summary>
        <value><span data-ttu-id="cb5c4-109">对所有项元数据的枚举器，该枚举数永远不能为 <see langword="null" /> 。</span><span class="sxs-lookup"><span data-stu-id="cb5c4-109">An enumerator over all item metadata, which can never be <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cb5c4-110">不包含来自项定义的元数据。</span><span class="sxs-lookup"><span data-stu-id="cb5c4-110">Does not include metadata from item definitions.</span></span> <span data-ttu-id="cb5c4-111">不包含内置元数据，如“FullPath”。</span><span class="sxs-lookup"><span data-stu-id="cb5c4-111">Does not include built-in metadata, such as "FullPath".</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DirectMetadataCount">
      <MemberSignature Language="C#" Value="public int DirectMetadataCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 DirectMetadataCount" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.ProjectItem.DirectMetadataCount" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DirectMetadataCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int DirectMetadataCount { int get(); };" />
      <MemberSignature Language="F#" Value="member this.DirectMetadataCount : int" Usage="Microsoft.Build.Evaluation.ProjectItem.DirectMetadataCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cb5c4-112">此项的直接元数据（如果有）的计数。</span><span class="sxs-lookup"><span data-stu-id="cb5c4-112">Count of direct metadata on this item, if any.</span></span>
<span data-ttu-id="cb5c4-113">不对从项定义继承的任何元数据进行计数。</span><span class="sxs-lookup"><span data-stu-id="cb5c4-113">Does NOT count any metadata inherited from item definitions.</span></span>
<span data-ttu-id="cb5c4-114">不计算内置元数据，如“FullPath”。</span><span class="sxs-lookup"><span data-stu-id="cb5c4-114">Does not count built-in metadata, such as "FullPath".</span></span></summary>
        <value><span data-ttu-id="cb5c4-115">此项的元数据的计数。</span><span class="sxs-lookup"><span data-stu-id="cb5c4-115">The count of metadata for this item.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cb5c4-116">不包含来自项定义的元数据。</span><span class="sxs-lookup"><span data-stu-id="cb5c4-116">Does not include metadata from item definitions.</span></span> <span data-ttu-id="cb5c4-117">不包含内置元数据，如“FullPath”。</span><span class="sxs-lookup"><span data-stu-id="cb5c4-117">Does not include built-in metadata, such as "FullPath".</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EvaluatedInclude">
      <MemberSignature Language="C#" Value="public string EvaluatedInclude { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string EvaluatedInclude" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.ProjectItem.EvaluatedInclude" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EvaluatedInclude As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ EvaluatedInclude { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EvaluatedInclude : string" Usage="Microsoft.Build.Evaluation.ProjectItem.EvaluatedInclude" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cb5c4-118">获取 Include 的未转义计算值。</span><span class="sxs-lookup"><span data-stu-id="cb5c4-118">Gets the evaluated value of the include, unescaped.</span></span></summary>
        <value><span data-ttu-id="cb5c4-119">Include 特性的计算值。</span><span class="sxs-lookup"><span data-stu-id="cb5c4-119">The evaluated value of the Include attribute.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cb5c4-120">转义字符不存在。</span><span class="sxs-lookup"><span data-stu-id="cb5c4-120">Escaped characters are not present.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMetadata">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Evaluation.ProjectMetadata GetMetadata (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Build.Evaluation.ProjectMetadata GetMetadata(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.ProjectItem.GetMetadata(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMetadata (name As String) As ProjectMetadata" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Build::Evaluation::ProjectMetadata ^ GetMetadata(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.GetMetadata : string -&gt; Microsoft.Build.Evaluation.ProjectMetadata" Usage="projectItem.GetMetadata name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Evaluation.ProjectMetadata</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="cb5c4-121">要检索其值的元数据的名称。</span><span class="sxs-lookup"><span data-stu-id="cb5c4-121">The name of the metadata whose value is retrieved.</span></span></param>
        <summary><span data-ttu-id="cb5c4-122">获取此项的计算元数据。</span><span class="sxs-lookup"><span data-stu-id="cb5c4-122">Gets an evaluated metadata on this item.</span></span>
<span data-ttu-id="cb5c4-123">可能包含来自项定义的元数据。</span><span class="sxs-lookup"><span data-stu-id="cb5c4-123">Potentially includes a metadata from an item definition.</span></span>
<span data-ttu-id="cb5c4-124">不返回内置元数据，如“FullPath”。</span><span class="sxs-lookup"><span data-stu-id="cb5c4-124">Does not return built-in metadata, such as "FullPath".</span></span>
<span data-ttu-id="cb5c4-125">如果找不到，则返回 null。</span><span class="sxs-lookup"><span data-stu-id="cb5c4-125">Returns null if not found.</span></span></summary>
        <returns><span data-ttu-id="cb5c4-126">此项的给定元数据的计算值，或如果不存在具有给定名称的元数据，则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="cb5c4-126">The evaluated value of the given metadata for this item, or <see langword="null" /> if no metadata exists with the given name.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cb5c4-127">可能包含来自项定义的元数据。</span><span class="sxs-lookup"><span data-stu-id="cb5c4-127">May include metadata from an item definition.</span></span> <span data-ttu-id="cb5c4-128">不包含内置元数据，如“FullPath”。</span><span class="sxs-lookup"><span data-stu-id="cb5c4-128">Does not include built-in metadata, such as "FullPath".</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMetadataValue">
      <MemberSignature Language="C#" Value="public string GetMetadataValue (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetMetadataValue(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.ProjectItem.GetMetadataValue(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMetadataValue (name As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetMetadataValue(System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member GetMetadataValue : string -&gt; string&#xA;override this.GetMetadataValue : string -&gt; string" Usage="projectItem.GetMetadataValue name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="cb5c4-129">要检索其值的元数据的名称。</span><span class="sxs-lookup"><span data-stu-id="cb5c4-129">The name of the metadata whose value is retrieved.</span></span></param>
        <summary><span data-ttu-id="cb5c4-130">获取此项的元数据（可能来自项定义）的计算值。</span><span class="sxs-lookup"><span data-stu-id="cb5c4-130">Get the evaluated value of a metadata on this item, possibly from an item definition.</span></span> <span data-ttu-id="cb5c4-131">如果不存在，则返回空字符串。</span><span class="sxs-lookup"><span data-stu-id="cb5c4-131">Returns empty string if it does not exist.</span></span>
<span data-ttu-id="cb5c4-132">若要确定某一部分元数据是不存在，还是只是没有值，请使用 <see cref="M:Microsoft.Build.Evaluation.ProjectItem.HasMetadata(System.String)">HasMetadata</see>。</span><span class="sxs-lookup"><span data-stu-id="cb5c4-132">To determine whether a piece of metadata does not exist vs. simply has no value, use <see cref="M:Microsoft.Build.Evaluation.ProjectItem.HasMetadata(System.String)">HasMetadata</see>.</span></span>
<span data-ttu-id="cb5c4-133">可用于访问内置元数据的值，如“FullPath”。</span><span class="sxs-lookup"><span data-stu-id="cb5c4-133">May be used to access the value of built-in metadata, such as "FullPath".</span></span>
<span data-ttu-id="cb5c4-134">如果尝试在一个不是有效路径的值上获取内置元数据，会引发 InvalidOperationException。</span><span class="sxs-lookup"><span data-stu-id="cb5c4-134">Attempting to get built-in metadata on a value that is not a valid path throws InvalidOperationException.</span></span></summary>
        <returns><span data-ttu-id="cb5c4-135">此项的给定元数据（包括源自于项定义的元数据）的计算值，或如果不存在具有给定名称的元数据，则为空字符串。</span><span class="sxs-lookup"><span data-stu-id="cb5c4-135">The evaluated value of the given metadata for this item, including metadata originating from an item definition, or an empty string if no metadata exists with the given name.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cb5c4-136">若要确定元数据是否存在，请使用 <xref:Microsoft.Build.Evaluation.ProjectItem.HasMetadata%2A> 。</span><span class="sxs-lookup"><span data-stu-id="cb5c4-136">To determine whether metadata exist, whether it has a value or not, use <xref:Microsoft.Build.Evaluation.ProjectItem.HasMetadata%2A>.</span></span>  
  
 <span data-ttu-id="cb5c4-137">此方法可用于访问内置元数据的值，例如 "FullPath"。</span><span class="sxs-lookup"><span data-stu-id="cb5c4-137">This method may be used to access the value of built-in metadata, such as "FullPath".</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasMetadata">
      <MemberSignature Language="C#" Value="public bool HasMetadata (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool HasMetadata(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.ProjectItem.HasMetadata(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function HasMetadata (name As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool HasMetadata(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.HasMetadata : string -&gt; bool" Usage="projectItem.HasMetadata name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="cb5c4-138">要搜索的元数据的名称。</span><span class="sxs-lookup"><span data-stu-id="cb5c4-138">The name of the metadata to be searched for.</span></span></param>
        <summary><span data-ttu-id="cb5c4-139">如果在此项上定义了特定元数据，则返回 true；否则返回 false。</span><span class="sxs-lookup"><span data-stu-id="cb5c4-139">Returns true if a particular piece of metadata is defined on this item, otherwise false.</span></span>
<span data-ttu-id="cb5c4-140">包含内置元数据以及继承自项定义的元数据。</span><span class="sxs-lookup"><span data-stu-id="cb5c4-140">Includes built-in metadata and metadata inherited from item definitions.</span></span></summary>
        <returns><span data-ttu-id="cb5c4-141">如果在此项上定义了具有给定名称的元数据，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="cb5c4-141"><see langword="true" /> if metadata with the given name is defined on this item; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cb5c4-142">包括内置的元数据和源自项定义的元数据。</span><span class="sxs-lookup"><span data-stu-id="cb5c4-142">Includes built-in metadata and metadata originating from item definitions.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsImported">
      <MemberSignature Language="C#" Value="public bool IsImported { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsImported" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.ProjectItem.IsImported" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsImported As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsImported { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsImported : bool" Usage="Microsoft.Build.Evaluation.ProjectItem.IsImported" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cb5c4-143">如果项源自一个导入的文件，则返回 true。</span><span class="sxs-lookup"><span data-stu-id="cb5c4-143">If the item originated in an imported file, returns true.</span></span>
<span data-ttu-id="cb5c4-144">否则，返回 False。</span><span class="sxs-lookup"><span data-stu-id="cb5c4-144">Otherwise returns false.</span></span></summary>
        <value><span data-ttu-id="cb5c4-145"><see langword="true" /> 如果此项源自于导入的文件，则为;否则为 <see langword="false" /> 。</span><span class="sxs-lookup"><span data-stu-id="cb5c4-145"><see langword="true" /> if this item originates from an imported file; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemType">
      <MemberSignature Language="C#" Value="public string ItemType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ItemType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.ProjectItem.ItemType" />
      <MemberSignature Language="VB.NET" Value="Public Property ItemType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ItemType { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ItemType : string with get, set" Usage="Microsoft.Build.Evaluation.ProjectItem.ItemType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cb5c4-146">获取或设置此项的类型。</span><span class="sxs-lookup"><span data-stu-id="cb5c4-146">Gets or sets the type of this item.</span></span></summary>
        <value><span data-ttu-id="cb5c4-147">项类型。</span><span class="sxs-lookup"><span data-stu-id="cb5c4-147">The item type.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Metadata">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectMetadata&gt; Metadata { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;class Microsoft.Build.Evaluation.ProjectMetadata&gt; Metadata" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.ProjectItem.Metadata" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Metadata As ICollection(Of ProjectMetadata)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::ICollection&lt;Microsoft::Build::Evaluation::ProjectMetadata ^&gt; ^ Metadata { System::Collections::Generic::ICollection&lt;Microsoft::Build::Evaluation::ProjectMetadata ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Metadata : System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectMetadata&gt;" Usage="Microsoft.Build.Evaluation.ProjectItem.Metadata" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectMetadata&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cb5c4-148">项的元数据（如果有）。</span><span class="sxs-lookup"><span data-stu-id="cb5c4-148">Metadata on the item, if any.</span></span>  <span data-ttu-id="cb5c4-149">包括由定义指定的元数据（如果有）。</span><span class="sxs-lookup"><span data-stu-id="cb5c4-149">Includes metadata specified by the definition, if any.</span></span>
<span data-ttu-id="cb5c4-150">如果不存在任何元数据，则返回空集合。</span><span class="sxs-lookup"><span data-stu-id="cb5c4-150">If there is no metadata, returns an empty collection.</span></span>
<span data-ttu-id="cb5c4-151">不包含内置元数据，如“FullPath”。</span><span class="sxs-lookup"><span data-stu-id="cb5c4-151">Does not include built-in metadata, such as "FullPath".</span></span>
<span data-ttu-id="cb5c4-152">使用 <see cref="M:Microsoft.Build.Evaluation.ProjectItem.GetMetadataValue(System.String)" /> 获取内置元数据的值。</span><span class="sxs-lookup"><span data-stu-id="cb5c4-152">Get the values of built-in metadata using <see cref="M:Microsoft.Build.Evaluation.ProjectItem.GetMetadataValue(System.String)" />.</span></span>
<span data-ttu-id="cb5c4-153">这是一个只读集合。</span><span class="sxs-lookup"><span data-stu-id="cb5c4-153">This is a read-only collection.</span></span> <span data-ttu-id="cb5c4-154">若要修改元数据，请使用 <see cref="M:Microsoft.Build.Evaluation.ProjectItem.SetMetadataValue(System.String,System.String)" />。</span><span class="sxs-lookup"><span data-stu-id="cb5c4-154">To modify the metadata, use <see cref="M:Microsoft.Build.Evaluation.ProjectItem.SetMetadataValue(System.String,System.String)" />.</span></span></summary>
        <value><span data-ttu-id="cb5c4-155">此项的所有元数据（包括源自于项定义的元数据）。</span><span class="sxs-lookup"><span data-stu-id="cb5c4-155">All the metadata for this item, including metadata originating from item definitions.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cb5c4-156">不包含内置元数据，如“FullPath”。</span><span class="sxs-lookup"><span data-stu-id="cb5c4-156">Does not include built-in metadata, such as "FullPath".</span></span>  
  
 <span data-ttu-id="cb5c4-157">若要添加、删除或更改内置元数据的值，请使用 <xref:Microsoft.Build.Evaluation.ProjectItem.GetMetadataValue%2A> 和 <xref:Microsoft.Build.Evaluation.ProjectItem.SetMetadataValue%2A> 。</span><span class="sxs-lookup"><span data-stu-id="cb5c4-157">To add, remove, or change the values of built-in metadata, use <xref:Microsoft.Build.Evaluation.ProjectItem.GetMetadataValue%2A> and <xref:Microsoft.Build.Evaluation.ProjectItem.SetMetadataValue%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MetadataCount">
      <MemberSignature Language="C#" Value="public int MetadataCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MetadataCount" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.ProjectItem.MetadataCount" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MetadataCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MetadataCount { int get(); };" />
      <MemberSignature Language="F#" Value="member this.MetadataCount : int" Usage="Microsoft.Build.Evaluation.ProjectItem.MetadataCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cb5c4-158">此项的元数据（如果有）的计数。</span><span class="sxs-lookup"><span data-stu-id="cb5c4-158">Count of metadata on this item, if any.</span></span>
<span data-ttu-id="cb5c4-159">包含从项定义继承的任何元数据。</span><span class="sxs-lookup"><span data-stu-id="cb5c4-159">Includes any metadata inherited from item definitions.</span></span>
<span data-ttu-id="cb5c4-160">包含自定义元数据和内置元数据。</span><span class="sxs-lookup"><span data-stu-id="cb5c4-160">Includes both custom and built-in metadata.</span></span></summary>
        <value><span data-ttu-id="cb5c4-161">此项的元数据（包括源自于项定义的任何元数据和任何内置元数据）的计数。</span><span class="sxs-lookup"><span data-stu-id="cb5c4-161">The count of metadata for this item, including any metadata originating from item definitions, and any built-in metadata.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Project">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Evaluation.Project Project { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Build.Evaluation.Project Project" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.ProjectItem.Project" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Project As Project" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Build::Evaluation::Project ^ Project { Microsoft::Build::Evaluation::Project ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Project : Microsoft.Build.Evaluation.Project" Usage="Microsoft.Build.Evaluation.ProjectItem.Project" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Evaluation.Project</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cb5c4-162">此项所在的项目。</span><span class="sxs-lookup"><span data-stu-id="cb5c4-162">Project that this item lives in.</span></span>
<span data-ttu-id="cb5c4-163">ProjectItems 始终位于项目中。</span><span class="sxs-lookup"><span data-stu-id="cb5c4-163">ProjectItems always live in a project.</span></span></summary>
        <value><span data-ttu-id="cb5c4-164">包含此项目项的项目。</span><span class="sxs-lookup"><span data-stu-id="cb5c4-164">The project that contains this project item.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cb5c4-165">项目中始终包含项目项。</span><span class="sxs-lookup"><span data-stu-id="cb5c4-165">Project items are always contained by a project.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveMetadata">
      <MemberSignature Language="C#" Value="public bool RemoveMetadata (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool RemoveMetadata(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.ProjectItem.RemoveMetadata(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoveMetadata (name As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool RemoveMetadata(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.RemoveMetadata : string -&gt; bool" Usage="projectItem.RemoveMetadata name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="cb5c4-166">要移除的元数据的名称。</span><span class="sxs-lookup"><span data-stu-id="cb5c4-166">The name of the metadata to remove.</span></span></param>
        <summary><span data-ttu-id="cb5c4-167">删除具有指定名称的任何元数据。</span><span class="sxs-lookup"><span data-stu-id="cb5c4-167">Removes any metadata with the specified name.</span></span>
<span data-ttu-id="cb5c4-168">如果计算的元数据存在，则返回 true；否则返回 false。</span><span class="sxs-lookup"><span data-stu-id="cb5c4-168">Returns true if the evaluated metadata existed, otherwise false.</span></span>
<span data-ttu-id="cb5c4-169">如果元数据名称是某个内置元数据（如“FullPath”），则会引发 InvalidArgumentException。</span><span class="sxs-lookup"><span data-stu-id="cb5c4-169">If the metadata name is one of the built-in metadata, like "FullPath", throws InvalidArgumentException.</span></span>
<span data-ttu-id="cb5c4-170">如果元数据源自项定义，并且未经重写，则会引发 InvalidOperationException。</span><span class="sxs-lookup"><span data-stu-id="cb5c4-170">If the metadata originates in an item definition, and was not overridden, throws InvalidOperationException.</span></span></summary>
        <returns><span data-ttu-id="cb5c4-171">如果在移除前存在具有给定名称的元数据，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="cb5c4-171"><see langword="true" /> if metadata with the given name exists before removal; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cb5c4-172">如果元数据名称引用内置元数据（如 "FullPath"），则会引发 InvalidArgumentException。</span><span class="sxs-lookup"><span data-stu-id="cb5c4-172">Throws InvalidArgumentException if the metadata name refers to built-in metadata, like "FullPath".</span></span>  
  
 <span data-ttu-id="cb5c4-173">如果元数据名称引用源自于项定义的元数据，则会引发 InvalidOperationException。</span><span class="sxs-lookup"><span data-stu-id="cb5c4-173">Throws InvalidOperationException if the metadata name refers to metadata that originates from an item definition.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Rename">
      <MemberSignature Language="C#" Value="public void Rename (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Rename(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.ProjectItem.Rename(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Rename (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Rename(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.Rename : string -&gt; unit" Usage="projectItem.Rename name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="cb5c4-174">该项的新名称。</span><span class="sxs-lookup"><span data-stu-id="cb5c4-174">The new name of the item.</span></span></param>
        <summary><span data-ttu-id="cb5c4-175">重命名项。</span><span class="sxs-lookup"><span data-stu-id="cb5c4-175">Renames the item.</span></span>
<span data-ttu-id="cb5c4-176">相当于设置 <see cref="P:Microsoft.Build.Evaluation.ProjectItem.UnevaluatedInclude" /> 值。</span><span class="sxs-lookup"><span data-stu-id="cb5c4-176">Equivalent to setting the <see cref="P:Microsoft.Build.Evaluation.ProjectItem.UnevaluatedInclude" /> value.</span></span>
<span data-ttu-id="cb5c4-177">一般情况下，不会进行扩展。</span><span class="sxs-lookup"><span data-stu-id="cb5c4-177">Generally, no expansion occurs.</span></span> <span data-ttu-id="cb5c4-178">因为这将有可能产生多个项，而在重命名单个项时，这不是有意义的语义。</span><span class="sxs-lookup"><span data-stu-id="cb5c4-178">This is because it would potentially result in several items, which is not meaningful semantics when renaming a single item.</span></span>
<span data-ttu-id="cb5c4-179">但是，如果不需要拆分项（这会使其 ProjectItemElement 无效），并且新值正好扩展到一个项，则会用扩展值（而不是未扩展的值）更新其计算的 Include。</span><span class="sxs-lookup"><span data-stu-id="cb5c4-179">However if the item does not need to be split (which would invalidate its ProjectItemElement), and the new value expands to exactly one item, then its evaluated include is updated with the expanded value, rather than the unexpanded value.</span></span></summary>
        <remarks><span data-ttu-id="cb5c4-180">即使新值扩展到零项，也不会对其进行扩展。</span><span class="sxs-lookup"><span data-stu-id="cb5c4-180">Even if the new value expands to zero items, we do not expand it.</span></span>
<span data-ttu-id="cb5c4-181">我们对此处展开感兴趣的常见情况是设置诸如 "$ (sourcesroot) \ foo.cs" 的内容并将其扩展到单个项。</span><span class="sxs-lookup"><span data-stu-id="cb5c4-181">The common case we are interested in for expansion here is setting something like "$(sourcesroot)\foo.cs" and expanding that to a single item.</span></span> <span data-ttu-id="cb5c4-182">如果说 "@ (foo) " 设置为新名称，并将其扩展为空白，则在主机上可能会令人吃惊，甚至即使对它进行了未处理，也不会将其扩展为空白。</span><span class="sxs-lookup"><span data-stu-id="cb5c4-182">If say "@(foo)" is set as the new name, and it expands to blank, that might be surprising to the host and maybe even unhandled, if on full reevaluation it wouldn’t expand to blank.</span></span> <span data-ttu-id="cb5c4-183">这就是我们非常谨慎并仅支持最常见方案的原因。</span><span class="sxs-lookup"><span data-stu-id="cb5c4-183">That’s why we're being cautious and supporting the most common scenario only.</span></span> <span data-ttu-id="cb5c4-184">许多主机会在仍读取之前执行 ReevaluateIfNecessary。</span><span class="sxs-lookup"><span data-stu-id="cb5c4-184">Many hosts will do a ReevaluateIfNecessary before reading anyway.</span></span></remarks>
      </Docs>
    </Member>
    <Member MemberName="SetMetadataValue">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Evaluation.ProjectMetadata SetMetadataValue (string name, string unevaluatedValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Build.Evaluation.ProjectMetadata SetMetadataValue(string name, string unevaluatedValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.ProjectItem.SetMetadataValue(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SetMetadataValue (name As String, unevaluatedValue As String) As ProjectMetadata" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Build::Evaluation::ProjectMetadata ^ SetMetadataValue(System::String ^ name, System::String ^ unevaluatedValue);" />
      <MemberSignature Language="F#" Value="member this.SetMetadataValue : string * string -&gt; Microsoft.Build.Evaluation.ProjectMetadata" Usage="projectItem.SetMetadataValue (name, unevaluatedValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Evaluation.ProjectMetadata</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="unevaluatedValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="cb5c4-185">要添加的元数据的名称。</span><span class="sxs-lookup"><span data-stu-id="cb5c4-185">The name of the metadata to add.</span></span></param>
        <param name="unevaluatedValue"><span data-ttu-id="cb5c4-186">要添加的元数据的未计算值。</span><span class="sxs-lookup"><span data-stu-id="cb5c4-186">The unevaluated value of the metadata to add.</span></span></param>
        <summary><span data-ttu-id="cb5c4-187">将具有指定名称和值的元数据添加到项。</span><span class="sxs-lookup"><span data-stu-id="cb5c4-187">Adds metadata with the specified name and value to the item.</span></span>
<span data-ttu-id="cb5c4-188">如果项上已经存在同名元数据，则直接更新现有的元数据，而不是从项定义中继承。</span><span class="sxs-lookup"><span data-stu-id="cb5c4-188">Updates an existing metadata if one already exists with the same name on the item directly, as opposed to inherited from an item definition.</span></span>
<span data-ttu-id="cb5c4-189">更新已计算的项目，但在重新计算之前不会影响项目中的其他内容。</span><span class="sxs-lookup"><span data-stu-id="cb5c4-189">Updates the evaluated project, but does not affect anything else in the project until reevaluation.</span></span> <span data-ttu-id="cb5c4-190">例如，如果对“i”类型的项添加了名为“m”的元数据，则在重新评估之前，它不会影响从“@(j-&gt;'%(m)')”计算出的“j”。</span><span class="sxs-lookup"><span data-stu-id="cb5c4-190">For example, if a piece of metadata named "m" is added on item of type "i", it does not affect "j" which is evaluated from "@(j-&gt;'%(m)')" until reevaluation.</span></span>
<span data-ttu-id="cb5c4-191">另外，如果将“m”的未计算值设置为通过计算修改的内容（如“$(p)”），则在重新计算之前，计算的值将设置为字面意义上的“$(p)”。</span><span class="sxs-lookup"><span data-stu-id="cb5c4-191">Also if the unevaluated value of "m" is set to something that is modified by evaluation, such as "$(p)", the evaluated value will be set to literally "$(p)" until reevaluation.</span></span>
<span data-ttu-id="cb5c4-192">当然，这是一种很方便的方法，如果不重新计算的话，它不一定会使项目处于完全一致的状态。</span><span class="sxs-lookup"><span data-stu-id="cb5c4-192">This is a convenience that it is understood does not necessarily leave the project in a perfectly self consistent state without a reevaluation.</span></span>
<span data-ttu-id="cb5c4-193">返回新的或现有的元数据。</span><span class="sxs-lookup"><span data-stu-id="cb5c4-193">Returns the new or existing metadatum.</span></span></summary>
        <returns><span data-ttu-id="cb5c4-194">新的元数据。</span><span class="sxs-lookup"><span data-stu-id="cb5c4-194">The new metadata.</span></span> <span data-ttu-id="cb5c4-195">如果已存在具有给定名称的元数据，则返回此元数据。</span><span class="sxs-lookup"><span data-stu-id="cb5c4-195">If metadata with the given name already exists, returns this metadata.</span></span></returns>
        <remarks><span data-ttu-id="cb5c4-196">未计算的值假定为必要时进行转义</span><span class="sxs-lookup"><span data-stu-id="cb5c4-196">Unevaluated value is assumed to be escaped as necessary</span></span></remarks>
      </Docs>
    </Member>
    <Member MemberName="SetMetadataValue">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Evaluation.ProjectMetadata SetMetadataValue (string name, string unevaluatedValue, bool propagateMetadataToSiblingItems);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Build.Evaluation.ProjectMetadata SetMetadataValue(string name, string unevaluatedValue, bool propagateMetadataToSiblingItems) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.ProjectItem.SetMetadataValue(System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function SetMetadataValue (name As String, unevaluatedValue As String, propagateMetadataToSiblingItems As Boolean) As ProjectMetadata" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Build::Evaluation::ProjectMetadata ^ SetMetadataValue(System::String ^ name, System::String ^ unevaluatedValue, bool propagateMetadataToSiblingItems);" />
      <MemberSignature Language="F#" Value="member this.SetMetadataValue : string * string * bool -&gt; Microsoft.Build.Evaluation.ProjectMetadata" Usage="projectItem.SetMetadataValue (name, unevaluatedValue, propagateMetadataToSiblingItems)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Evaluation.ProjectMetadata</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="msbuild-15;msbuild-15-netcore;msbuild-16;msbuild-16-netcore" />
        <Parameter Name="unevaluatedValue" Type="System.String" Index="1" FrameworkAlternate="msbuild-15;msbuild-15-netcore;msbuild-16;msbuild-16-netcore" />
        <Parameter Name="propagateMetadataToSiblingItems" Type="System.Boolean" Index="2" FrameworkAlternate="msbuild-15;msbuild-15-netcore;msbuild-16;msbuild-16-netcore" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="cb5c4-197">元数据名称</span><span class="sxs-lookup"><span data-stu-id="cb5c4-197">Metadata name</span></span></param>
        <param name="unevaluatedValue"><span data-ttu-id="cb5c4-198">元数据值</span><span class="sxs-lookup"><span data-stu-id="cb5c4-198">Metadata value</span></span></param>
        <param name="propagateMetadataToSiblingItems"><span data-ttu-id="cb5c4-199">如果为 true，则将直接元数据添加到此 <see cref="T:Microsoft.Build.Evaluation.ProjectItem" /> 的源 <see cref="T:Microsoft.Build.Construction.ProjectItemElement" />。</span><span class="sxs-lookup"><span data-stu-id="cb5c4-199">If true, adds direct metadata to the <see cref="T:Microsoft.Build.Construction.ProjectItemElement" /> from which this <see cref="T:Microsoft.Build.Evaluation.ProjectItem" /> originated.</span></span> <span data-ttu-id="cb5c4-200">目的是影响所有其他同级项。</span><span class="sxs-lookup"><span data-stu-id="cb5c4-200">The intent is to affect all other sibling items.</span></span></param>
        <summary><span data-ttu-id="cb5c4-201"><see cref="M:Microsoft.Build.Evaluation.ProjectItem.SetMetadataValue(System.String,System.String)" /> 的重载。</span><span class="sxs-lookup"><span data-stu-id="cb5c4-201">Overload of <see cref="M:Microsoft.Build.Evaluation.ProjectItem.SetMetadataValue(System.String,System.String)" />.</span></span> <span data-ttu-id="cb5c4-202">增加了不拆分项元素的选项，从而影响所有同级项。</span><span class="sxs-lookup"><span data-stu-id="cb5c4-202">Adds the option of not splitting the item element and thus affecting all sibling items.</span></span>
<span data-ttu-id="cb5c4-203">将同级项定义为从同一项元素创建的所有 ProjectItem 实例。</span><span class="sxs-lookup"><span data-stu-id="cb5c4-203">Sibling items are defined as all ProjectItem instances that were created from the same item element.</span></span>
            
<span data-ttu-id="cb5c4-204">当然，这是一种很方便的方法，如果不重新计算的话，它不一定会使项目处于完全一致的状态</span><span class="sxs-lookup"><span data-stu-id="cb5c4-204">This is a convenience that it is understood does not necessarily leave the project in a perfectly self consistent state without a reevaluation</span></span></summary>
        <returns><span data-ttu-id="cb5c4-205">返回新的或现有的元数据。</span><span class="sxs-lookup"><span data-stu-id="cb5c4-205">Returns the new or existing metadatum.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnevaluatedInclude">
      <MemberSignature Language="C#" Value="public string UnevaluatedInclude { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UnevaluatedInclude" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.ProjectItem.UnevaluatedInclude" />
      <MemberSignature Language="VB.NET" Value="Public Property UnevaluatedInclude As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ UnevaluatedInclude { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.UnevaluatedInclude : string with get, set" Usage="Microsoft.Build.Evaluation.ProjectItem.UnevaluatedInclude" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cb5c4-206">获取或设置 Include 的未计算值。</span><span class="sxs-lookup"><span data-stu-id="cb5c4-206">Gets or sets the unevaluated value of the Include.</span></span></summary>
        <value><span data-ttu-id="cb5c4-207">Include 特性的未计算值。</span><span class="sxs-lookup"><span data-stu-id="cb5c4-207">The unevaluated value of the Include attribute.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Xml">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Construction.ProjectItemElement Xml { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Build.Construction.ProjectItemElement Xml" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.ProjectItem.Xml" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Xml As ProjectItemElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Build::Construction::ProjectItemElement ^ Xml { Microsoft::Build::Construction::ProjectItemElement ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Xml : Microsoft.Build.Construction.ProjectItemElement" Usage="Microsoft.Build.Evaluation.ProjectItem.Xml" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Construction.ProjectItemElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cb5c4-208">支持 XML 项。</span><span class="sxs-lookup"><span data-stu-id="cb5c4-208">Backing XML item.</span></span>
<span data-ttu-id="cb5c4-209">决不能为 null。</span><span class="sxs-lookup"><span data-stu-id="cb5c4-209">Can never be null.</span></span></summary>
        <value><span data-ttu-id="cb5c4-210">与此项关联的项元素，该元素永远不能为 <see langword="null" /> 。</span><span class="sxs-lookup"><span data-stu-id="cb5c4-210">The item element that is associated with this item, which can never be <see langword="null" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
