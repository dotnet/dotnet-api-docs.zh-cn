<Type Name="Project" FullName="Microsoft.Build.Evaluation.Project">
  <Metadata><Meta Name="ms.openlocfilehash" Value="4a0d9d219cc38b93512fc7bf4d50bf7eea7390ec" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86855273" /></Metadata><TypeSignature Language="C#" Value="public class Project" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Project extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Build.Evaluation.Project" />
  <TypeSignature Language="VB.NET" Value="Public Class Project" />
  <TypeSignature Language="C++ CLI" Value="public ref class Project" />
  <TypeSignature Language="F#" Value="type Project = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Build</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>15.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="msbuild-15;msbuild-15-netcore;msbuild-16;msbuild-16-netcore">
      <AttributeName Language="C#">[System.Diagnostics.DebuggerDisplay("{FullPath} EffectiveToolsVersion={ToolsVersion} #GlobalProperties={_data.GlobalPropertiesDictionary.Count} #Properties={_data.Properties.Count} #ItemTypes={_data.ItemTypes.Count} #ItemDefinitions={_data.ItemDefinitions.Count} #Items={_data.Items.Count} #Targets={_data.Targets.Count}")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerDisplay("{FullPath} EffectiveToolsVersion={ToolsVersion} #GlobalProperties={_data.GlobalPropertiesDictionary.Count} #Properties={_data.Properties.Count} #ItemTypes={_data.ItemTypes.Count} #ItemDefinitions={_data.ItemDefinitions.Count} #Items={_data.Items.Count} #Targets={_data.Targets.Count}")&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName Language="C#">[System.Diagnostics.DebuggerDisplay("{FullPath} EffectiveToolsVersion={ToolsVersion} #GlobalProperties={data.globalProperties.Count} #Properties={data.Properties.Count} #ItemTypes={data.ItemTypes.Count} #ItemDefinitions={data.ItemDefinitions.Count} #Items={data.Items.Count} #Targets={data.Targets.Count}")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerDisplay("{FullPath} EffectiveToolsVersion={ToolsVersion} #GlobalProperties={data.globalProperties.Count} #Properties={data.Properties.Count} #ItemTypes={data.ItemTypes.Count} #ItemDefinitions={data.ItemDefinitions.Count} #Items={data.Items.Count} #Targets={data.Targets.Count}")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="fb927-101">表示具有设计时语义的计算项目。</span><span class="sxs-lookup"><span data-stu-id="fb927-101">Represents an evaluated project with design time semantics.</span></span>
<span data-ttu-id="fb927-102">始终由 XML 支持；可以直接生成，也可以克隆出一个实例来添加虚拟项/属性和生成。</span><span class="sxs-lookup"><span data-stu-id="fb927-102">Always backed by XML; can be built directly, or an instance can be cloned off to add virtual items/properties and build.</span></span>
<span data-ttu-id="fb927-103">对此项目的编辑始终更新支持的 XML。</span><span class="sxs-lookup"><span data-stu-id="fb927-103">Edits to this project always update the backing XML.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="fb927-104">使用全局项目集合的全局属性和默认工具版本构造一个空项目。</span><span class="sxs-lookup"><span data-stu-id="fb927-104">Constructs an empty project using the global project collection global properties and default tools version.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Project ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Project();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fb927-105">构造一个空项目，使用全局项目集合的全局属性和默认工具版本进行计算。</span><span class="sxs-lookup"><span data-stu-id="fb927-105">Construct an empty project, evaluating with the global project collection's global properties and default tools version.</span></span>
<span data-ttu-id="fb927-106">项目命名后，添加到全局项目集合中。</span><span class="sxs-lookup"><span data-stu-id="fb927-106">Project will be added to the global project collection when it is named.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fb927-107">当向全局项目集合提供源项目文件的完整路径（通常通过保存项目）时，此项目将添加到全局项目集合中。</span><span class="sxs-lookup"><span data-stu-id="fb927-107">This project is added to the global project collection when it is given the full path to the source project file, typically by saving the project.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Project (Microsoft.Build.Construction.ProjectRootElement xml);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Build.Construction.ProjectRootElement xml) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.#ctor(Microsoft.Build.Construction.ProjectRootElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (xml As ProjectRootElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Project(Microsoft::Build::Construction::ProjectRootElement ^ xml);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Evaluation.Project : Microsoft.Build.Construction.ProjectRootElement -&gt; Microsoft.Build.Evaluation.Project" Usage="new Microsoft.Build.Evaluation.Project xml" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="xml" Type="Microsoft.Build.Construction.ProjectRootElement" />
      </Parameters>
      <Docs>
        <param name="xml"><span data-ttu-id="fb927-108">要使用的 ProjectRootElement</span><span class="sxs-lookup"><span data-stu-id="fb927-108">ProjectRootElement to use</span></span></param>
        <summary><span data-ttu-id="fb927-109">在 ProjectRootElement 项目上构造，使用全局项目集合的全局属性和默认工具版本进行计算。</span><span class="sxs-lookup"><span data-stu-id="fb927-109">Construct over a ProjectRootElement object, evaluating with the global project collection's global properties and default tools version.</span></span>
<span data-ttu-id="fb927-110">如果项目有名称，添加到全局项目集合中，否则在命名后添加。</span><span class="sxs-lookup"><span data-stu-id="fb927-110">Project is added to the global project collection if it has a name, or else when it is named.</span></span>
<span data-ttu-id="fb927-111">如果计算失败，将引发 InvalidProjectFileException。</span><span class="sxs-lookup"><span data-stu-id="fb927-111">Throws InvalidProjectFileException if the evaluation fails.</span></span>
<span data-ttu-id="fb927-112">如果已在项目集合中加载了等效项目，则会引发 InvalidOperationException。</span><span class="sxs-lookup"><span data-stu-id="fb927-112">Throws InvalidOperationException if there is already an equivalent project loaded in the project collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fb927-113">当向此项目或给定的项目根提供源项目文件的完整路径时，此项目将添加到全局项目集合中。</span><span class="sxs-lookup"><span data-stu-id="fb927-113">This project is added to the global project collection when either this project or the given project root is given the full path to the source project file.</span></span>  
  
 <span data-ttu-id="fb927-114">如果计算失败，将引发 Microsoft.build.buildengine.invalidprojectfileexception。</span><span class="sxs-lookup"><span data-stu-id="fb927-114">Throws InvalidProjectFileException if the evaluation fails.</span></span> <span data-ttu-id="fb927-115">如果已在项目集合中加载了等效项目，则会引发 InvalidOperationException。</span><span class="sxs-lookup"><span data-stu-id="fb927-115">Throws InvalidOperationException if there is already an equivalent project loaded in the project collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Project (Microsoft.Build.Evaluation.NewProjectFileOptions newProjectFileOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype Microsoft.Build.Evaluation.NewProjectFileOptions newProjectFileOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.#ctor(Microsoft.Build.Evaluation.NewProjectFileOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (newProjectFileOptions As NewProjectFileOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Project(Microsoft::Build::Evaluation::NewProjectFileOptions newProjectFileOptions);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Evaluation.Project : Microsoft.Build.Evaluation.NewProjectFileOptions -&gt; Microsoft.Build.Evaluation.Project" Usage="new Microsoft.Build.Evaluation.Project newProjectFileOptions" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="newProjectFileOptions" Type="Microsoft.Build.Evaluation.NewProjectFileOptions" Index="0" FrameworkAlternate="msbuild-15;msbuild-15-netcore;msbuild-16;msbuild-16-netcore" />
      </Parameters>
      <Docs>
        <param name="newProjectFileOptions">To be added.</param>
        <summary><span data-ttu-id="fb927-116">构造一个空项目，使用全局项目集合的全局属性和默认工具版本进行计算。</span><span class="sxs-lookup"><span data-stu-id="fb927-116">Construct an empty project, evaluating with the global project collection's global properties and default tools version.</span></span>
<span data-ttu-id="fb927-117">项目命名后，添加到全局项目集合中。</span><span class="sxs-lookup"><span data-stu-id="fb927-117">Project will be added to the global project collection when it is named.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Project (Microsoft.Build.Evaluation.ProjectCollection projectCollection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Build.Evaluation.ProjectCollection projectCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.#ctor(Microsoft.Build.Evaluation.ProjectCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (projectCollection As ProjectCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Project(Microsoft::Build::Evaluation::ProjectCollection ^ projectCollection);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Evaluation.Project : Microsoft.Build.Evaluation.ProjectCollection -&gt; Microsoft.Build.Evaluation.Project" Usage="new Microsoft.Build.Evaluation.Project projectCollection" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="projectCollection" Type="Microsoft.Build.Evaluation.ProjectCollection" />
      </Parameters>
      <Docs>
        <param name="projectCollection"><span data-ttu-id="fb927-118">要将新项目添加到的项目集合。</span><span class="sxs-lookup"><span data-stu-id="fb927-118">The project collection that the new project is added to.</span></span></param>
        <summary><span data-ttu-id="fb927-119">构造一个空项目，使用指定项目集合的全局属性和默认工具版本进行计算。</span><span class="sxs-lookup"><span data-stu-id="fb927-119">Construct an empty project, evaluating with the specified project collection's global properties and default tools version.</span></span>
<span data-ttu-id="fb927-120">项目命名后，将添加到指定项目集合中。</span><span class="sxs-lookup"><span data-stu-id="fb927-120">Project will be added to the specified project collection when it is named.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fb927-121">当向给定的项目集合提供源项目文件的完整路径（通常通过保存项目）时，此项目将添加到该项目集合中。</span><span class="sxs-lookup"><span data-stu-id="fb927-121">This project is added to the given project collection when it is given the full path to the source project file, typically by saving the project.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Project (string projectFile);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string projectFile) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (projectFile As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Project(System::String ^ projectFile);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Evaluation.Project : string -&gt; Microsoft.Build.Evaluation.Project" Usage="new Microsoft.Build.Evaluation.Project projectFile" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="projectFile" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="projectFile"><span data-ttu-id="fb927-122">要计算的源项目文件。</span><span class="sxs-lookup"><span data-stu-id="fb927-122">The source project file to be evaluated.</span></span></param>
        <summary><span data-ttu-id="fb927-123">在现有项目文件上构造，使用全局项目集合的全局属性和默认工具版本进行计算。</span><span class="sxs-lookup"><span data-stu-id="fb927-123">Construct over an existing project file, evaluating with the global project collection's global properties and default tools version.</span></span>
<span data-ttu-id="fb927-124">项目添加到全局项目集合中。</span><span class="sxs-lookup"><span data-stu-id="fb927-124">Project is added to the global project collection.</span></span>
<span data-ttu-id="fb927-125">如果计算失败，将引发 InvalidProjectFileException。</span><span class="sxs-lookup"><span data-stu-id="fb927-125">Throws InvalidProjectFileException if the evaluation fails.</span></span>
<span data-ttu-id="fb927-126">如果已在项目集合中加载了等效项目，则会引发 InvalidOperationException。</span><span class="sxs-lookup"><span data-stu-id="fb927-126">Throws InvalidOperationException if there is already an equivalent project loaded in the project collection.</span></span>
<span data-ttu-id="fb927-127">可能引发与 IO 相关的异常。</span><span class="sxs-lookup"><span data-stu-id="fb927-127">May throw IO-related exceptions.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fb927-128">项目将添加到全局项目集合中。</span><span class="sxs-lookup"><span data-stu-id="fb927-128">The project is added to the global project collection.</span></span>  
  
 <span data-ttu-id="fb927-129">如果项目集合中已经存在用于计算此源项目文件的项目，则会引发 InvalidOperationException。</span><span class="sxs-lookup"><span data-stu-id="fb927-129">Throws InvalidOperationException if there is already a project in the project collection that evaluates this source project file.</span></span> <span data-ttu-id="fb927-130">可能引发与 IO 相关的异常。</span><span class="sxs-lookup"><span data-stu-id="fb927-130">May throw IO-related exceptions.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:Microsoft.Build.Exceptions.InvalidProjectFileException"><span data-ttu-id="fb927-131">如果计算失败。</span><span class="sxs-lookup"><span data-stu-id="fb927-131">If the evaluation fails.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Project (System.Xml.XmlReader xmlReader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.XmlReader xmlReader) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.#ctor(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (xmlReader As XmlReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Project(System::Xml::XmlReader ^ xmlReader);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Evaluation.Project : System.Xml.XmlReader -&gt; Microsoft.Build.Evaluation.Project" Usage="new Microsoft.Build.Evaluation.Project xmlReader" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="xmlReader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="xmlReader"><span data-ttu-id="fb927-132">从中读取项目的 Xml 读取器。</span><span class="sxs-lookup"><span data-stu-id="fb927-132">Xml reader to read project from</span></span></param>
        <summary><span data-ttu-id="fb927-133">在项目 xml 的文本读取器上构造，使用全局项目集合的全局属性和默认工具版本进行计算。</span><span class="sxs-lookup"><span data-stu-id="fb927-133">Construct over a text reader over project xml, evaluating with the global project collection's global properties and default tools version.</span></span>
<span data-ttu-id="fb927-134">项目命名后，添加到全局项目集合中。</span><span class="sxs-lookup"><span data-stu-id="fb927-134">Project will be added to the global project collection when it is named.</span></span>
<span data-ttu-id="fb927-135">如果计算失败，将引发 InvalidProjectFileException。</span><span class="sxs-lookup"><span data-stu-id="fb927-135">Throws InvalidProjectFileException if the evaluation fails.</span></span>
<span data-ttu-id="fb927-136">如果已在项目集合中加载了等效项目，则会引发 InvalidOperationException。</span><span class="sxs-lookup"><span data-stu-id="fb927-136">Throws InvalidOperationException if there is already an equivalent project loaded in the project collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fb927-137">当向全局项目集合提供源项目文件的完整路径（通常通过保存项目）时，此项目将添加到全局项目集合中。</span><span class="sxs-lookup"><span data-stu-id="fb927-137">This project is added to the global project collection when it is given the full path to the source project file, typically by saving the project.</span></span>  
  
 <span data-ttu-id="fb927-138">如果计算失败，将引发 Microsoft.build.buildengine.invalidprojectfileexception。</span><span class="sxs-lookup"><span data-stu-id="fb927-138">Throws InvalidProjectFileException if the evaluation fails.</span></span> <span data-ttu-id="fb927-139">如果已在项目集合中加载了等效项目，则会引发 InvalidOperationException。</span><span class="sxs-lookup"><span data-stu-id="fb927-139">Throws InvalidOperationException if there is already an equivalent project loaded in the project collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Project (Microsoft.Build.Evaluation.ProjectCollection projectCollection, Microsoft.Build.Evaluation.NewProjectFileOptions newProjectFileOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Build.Evaluation.ProjectCollection projectCollection, valuetype Microsoft.Build.Evaluation.NewProjectFileOptions newProjectFileOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.#ctor(Microsoft.Build.Evaluation.ProjectCollection,Microsoft.Build.Evaluation.NewProjectFileOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (projectCollection As ProjectCollection, newProjectFileOptions As NewProjectFileOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Project(Microsoft::Build::Evaluation::ProjectCollection ^ projectCollection, Microsoft::Build::Evaluation::NewProjectFileOptions newProjectFileOptions);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Evaluation.Project : Microsoft.Build.Evaluation.ProjectCollection * Microsoft.Build.Evaluation.NewProjectFileOptions -&gt; Microsoft.Build.Evaluation.Project" Usage="new Microsoft.Build.Evaluation.Project (projectCollection, newProjectFileOptions)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="projectCollection" Type="Microsoft.Build.Evaluation.ProjectCollection" Index="0" FrameworkAlternate="msbuild-15;msbuild-15-netcore;msbuild-16;msbuild-16-netcore" />
        <Parameter Name="newProjectFileOptions" Type="Microsoft.Build.Evaluation.NewProjectFileOptions" Index="1" FrameworkAlternate="msbuild-15;msbuild-15-netcore;msbuild-16;msbuild-16-netcore" />
      </Parameters>
      <Docs>
        <param name="projectCollection">To be added.</param>
        <param name="newProjectFileOptions">To be added.</param>
        <summary><span data-ttu-id="fb927-140">构造一个空项目，使用指定项目集合的全局属性和默认工具版本进行计算。</span><span class="sxs-lookup"><span data-stu-id="fb927-140">Construct an empty project, evaluating with the specified project collection's global properties and default tools version.</span></span>
<span data-ttu-id="fb927-141">项目命名后，将添加到指定项目集合中。</span><span class="sxs-lookup"><span data-stu-id="fb927-141">Project will be added to the specified project collection when it is named.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Project (Microsoft.Build.Construction.ProjectRootElement xml, System.Collections.Generic.IDictionary&lt;string,string&gt; globalProperties, string toolsVersion);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Build.Construction.ProjectRootElement xml, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; globalProperties, string toolsVersion) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.#ctor(Microsoft.Build.Construction.ProjectRootElement,System.Collections.Generic.IDictionary{System.String,System.String},System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (xml As ProjectRootElement, globalProperties As IDictionary(Of String, String), toolsVersion As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Project(Microsoft::Build::Construction::ProjectRootElement ^ xml, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ globalProperties, System::String ^ toolsVersion);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Evaluation.Project : Microsoft.Build.Construction.ProjectRootElement * System.Collections.Generic.IDictionary&lt;string, string&gt; * string -&gt; Microsoft.Build.Evaluation.Project" Usage="new Microsoft.Build.Evaluation.Project (xml, globalProperties, toolsVersion)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="xml" Type="Microsoft.Build.Construction.ProjectRootElement" />
        <Parameter Name="globalProperties" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="toolsVersion" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="xml"><span data-ttu-id="fb927-142">要使用的 ProjectRootElement</span><span class="sxs-lookup"><span data-stu-id="fb927-142">ProjectRootElement to use</span></span></param>
        <param name="globalProperties"><span data-ttu-id="fb927-143">要计算的全局属性。</span><span class="sxs-lookup"><span data-stu-id="fb927-143">Global properties to evaluate with.</span></span> <span data-ttu-id="fb927-144">可以为 null，在此情况下，将使用包含项目集合的全局属性。</span><span class="sxs-lookup"><span data-stu-id="fb927-144">May be null in which case the containing project collection's global properties will be used.</span></span></param>
        <param name="toolsVersion"><span data-ttu-id="fb927-145">用于计算的工具版本。</span><span class="sxs-lookup"><span data-stu-id="fb927-145">Tools version to evaluate with.</span></span> <span data-ttu-id="fb927-146">可能为 null</span><span class="sxs-lookup"><span data-stu-id="fb927-146">May be null</span></span></param>
        <summary><span data-ttu-id="fb927-147">在 ProjectRootElement 对象上构造，使用指定的全局属性和工具集（可能其中一个为 null，也可能两者都为 null）进行计算。</span><span class="sxs-lookup"><span data-stu-id="fb927-147">Construct over a ProjectRootElement object, evaluating with specified global properties and toolset, either or both of which may be null.</span></span>
<span data-ttu-id="fb927-148">如果项目有名称，添加到全局项目集合中，否则在命名后添加。</span><span class="sxs-lookup"><span data-stu-id="fb927-148">Project is added to the global project collection if it has a name, or else when it is named.</span></span>
<span data-ttu-id="fb927-149">如果计算失败，将引发 InvalidProjectFileException。</span><span class="sxs-lookup"><span data-stu-id="fb927-149">Throws InvalidProjectFileException if the evaluation fails.</span></span>
<span data-ttu-id="fb927-150">如果已在项目集合中加载了等效项目，则会引发 InvalidOperationException。</span><span class="sxs-lookup"><span data-stu-id="fb927-150">Throws InvalidOperationException if there is already an equivalent project loaded in the project collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fb927-151">当向此项目或给定的项目根提供源项目文件的完整路径时，此项目将添加到全局项目集合中。</span><span class="sxs-lookup"><span data-stu-id="fb927-151">This project is added to the global project collection when either this project or the given project root is given the full path to the source project file.</span></span>  
  
 <span data-ttu-id="fb927-152">如果计算失败，将引发 Microsoft.build.buildengine.invalidprojectfileexception。</span><span class="sxs-lookup"><span data-stu-id="fb927-152">Throws InvalidProjectFileException if the evaluation fails.</span></span> <span data-ttu-id="fb927-153">如果已在项目集合中加载了等效项目，则会引发 InvalidOperationException。</span><span class="sxs-lookup"><span data-stu-id="fb927-153">Throws InvalidOperationException if there is already an equivalent project loaded in the project collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Project (System.Collections.Generic.IDictionary&lt;string,string&gt; globalProperties, string toolsVersion, Microsoft.Build.Evaluation.ProjectCollection projectCollection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IDictionary`2&lt;string, string&gt; globalProperties, string toolsVersion, class Microsoft.Build.Evaluation.ProjectCollection projectCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.#ctor(System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (globalProperties As IDictionary(Of String, String), toolsVersion As String, projectCollection As ProjectCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Project(System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ globalProperties, System::String ^ toolsVersion, Microsoft::Build::Evaluation::ProjectCollection ^ projectCollection);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Evaluation.Project : System.Collections.Generic.IDictionary&lt;string, string&gt; * string * Microsoft.Build.Evaluation.ProjectCollection -&gt; Microsoft.Build.Evaluation.Project" Usage="new Microsoft.Build.Evaluation.Project (globalProperties, toolsVersion, projectCollection)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="globalProperties" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="toolsVersion" Type="System.String" />
        <Parameter Name="projectCollection" Type="Microsoft.Build.Evaluation.ProjectCollection" />
      </Parameters>
      <Docs>
        <param name="globalProperties"><span data-ttu-id="fb927-154">要计算的全局属性。</span><span class="sxs-lookup"><span data-stu-id="fb927-154">Global properties to evaluate with.</span></span> <span data-ttu-id="fb927-155">可以为 null，在此情况下，将使用包含项目集合的全局属性。</span><span class="sxs-lookup"><span data-stu-id="fb927-155">May be null in which case the containing project collection's global properties will be used.</span></span></param>
        <param name="toolsVersion"><span data-ttu-id="fb927-156">用于计算的工具版本。</span><span class="sxs-lookup"><span data-stu-id="fb927-156">Tools version to evaluate with.</span></span> <span data-ttu-id="fb927-157">可能为 null</span><span class="sxs-lookup"><span data-stu-id="fb927-157">May be null</span></span></param>
        <param name="projectCollection"><span data-ttu-id="fb927-158">项目添加到的 <see cref="P:Microsoft.Build.Evaluation.Project.ProjectCollection" />。</span><span class="sxs-lookup"><span data-stu-id="fb927-158">The <see cref="P:Microsoft.Build.Evaluation.Project.ProjectCollection" /> the project is added to.</span></span></param>
        <summary><span data-ttu-id="fb927-159">构造一个空项目，使用指定项目集合、指定全局属性和默认工具版本（可能其中一个为 null）进行计算。</span><span class="sxs-lookup"><span data-stu-id="fb927-159">Construct an empty project, evaluating with the specified project collection and the specified global properties and default tools version, either of which may be null.</span></span>
<span data-ttu-id="fb927-160">项目命名后，将添加到指定项目集合中。</span><span class="sxs-lookup"><span data-stu-id="fb927-160">Project will be added to the specified project collection when it is named.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fb927-161">当向指定的项目集合提供源项目文件的完整路径（通常通过保存项目）时，该项目将添加到该集合。</span><span class="sxs-lookup"><span data-stu-id="fb927-161">The project is added to the specified project collection when it is given the full path to the source project file, typically by saving the project.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Project (string projectFile, System.Collections.Generic.IDictionary&lt;string,string&gt; globalProperties, string toolsVersion);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string projectFile, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; globalProperties, string toolsVersion) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (projectFile As String, globalProperties As IDictionary(Of String, String), toolsVersion As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Project(System::String ^ projectFile, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ globalProperties, System::String ^ toolsVersion);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Evaluation.Project : string * System.Collections.Generic.IDictionary&lt;string, string&gt; * string -&gt; Microsoft.Build.Evaluation.Project" Usage="new Microsoft.Build.Evaluation.Project (projectFile, globalProperties, toolsVersion)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="projectFile" Type="System.String" />
        <Parameter Name="globalProperties" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="toolsVersion" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="projectFile"><span data-ttu-id="fb927-162">要计算的源项目文件的路径。</span><span class="sxs-lookup"><span data-stu-id="fb927-162">The path to the source project file to be evaluated.</span></span></param>
        <param name="globalProperties"><span data-ttu-id="fb927-163">要计算的全局属性。</span><span class="sxs-lookup"><span data-stu-id="fb927-163">Global properties to evaluate with.</span></span> <span data-ttu-id="fb927-164">可以为 null，在此情况下，将使用包含项目集合的全局属性。</span><span class="sxs-lookup"><span data-stu-id="fb927-164">May be null in which case the containing project collection's global properties will be used.</span></span></param>
        <param name="toolsVersion"><span data-ttu-id="fb927-165">用于计算的工具版本。</span><span class="sxs-lookup"><span data-stu-id="fb927-165">Tools version to evaluate with.</span></span> <span data-ttu-id="fb927-166">可能为 null。</span><span class="sxs-lookup"><span data-stu-id="fb927-166">May be null.</span></span></param>
        <summary><span data-ttu-id="fb927-167">在现有项目文件上构造，使用指定的全局属性和工具集（可能其中一个为 null，也可能两者都为 null）进行计算。</span><span class="sxs-lookup"><span data-stu-id="fb927-167">Construct over an existing project file, evaluating with specified global properties and toolset, either or both of which may be null.</span></span>
<span data-ttu-id="fb927-168">项目添加到全局项目集合中。</span><span class="sxs-lookup"><span data-stu-id="fb927-168">Project is added to the global project collection.</span></span>
<span data-ttu-id="fb927-169">如果计算失败，将引发 InvalidProjectFileException。</span><span class="sxs-lookup"><span data-stu-id="fb927-169">Throws InvalidProjectFileException if the evaluation fails.</span></span>
<span data-ttu-id="fb927-170">如果已在项目集合中加载了等效项目，则会引发 InvalidOperationException。</span><span class="sxs-lookup"><span data-stu-id="fb927-170">Throws InvalidOperationException if there is already an equivalent project loaded in the project collection.</span></span>
<span data-ttu-id="fb927-171">可能引发与 IO 相关的异常。</span><span class="sxs-lookup"><span data-stu-id="fb927-171">May throw IO-related exceptions.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fb927-172">项目将添加到全局项目集合中。</span><span class="sxs-lookup"><span data-stu-id="fb927-172">The project is added to the global project collection.</span></span>  
  
 <span data-ttu-id="fb927-173">如果计算失败，将引发 Microsoft.build.buildengine.invalidprojectfileexception。</span><span class="sxs-lookup"><span data-stu-id="fb927-173">Throws InvalidProjectFileException if the evaluation fails.</span></span> <span data-ttu-id="fb927-174">如果已在项目集合中加载了等效项目，则会引发 InvalidOperationException。</span><span class="sxs-lookup"><span data-stu-id="fb927-174">Throws InvalidOperationException if there is already an equivalent project loaded in the project collection.</span></span> <span data-ttu-id="fb927-175">可能引发与 IO 相关的异常。</span><span class="sxs-lookup"><span data-stu-id="fb927-175">May throw IO-related exceptions.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Project (System.Xml.XmlReader xmlReader, System.Collections.Generic.IDictionary&lt;string,string&gt; globalProperties, string toolsVersion);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.XmlReader xmlReader, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; globalProperties, string toolsVersion) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.#ctor(System.Xml.XmlReader,System.Collections.Generic.IDictionary{System.String,System.String},System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (xmlReader As XmlReader, globalProperties As IDictionary(Of String, String), toolsVersion As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Project(System::Xml::XmlReader ^ xmlReader, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ globalProperties, System::String ^ toolsVersion);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Evaluation.Project : System.Xml.XmlReader * System.Collections.Generic.IDictionary&lt;string, string&gt; * string -&gt; Microsoft.Build.Evaluation.Project" Usage="new Microsoft.Build.Evaluation.Project (xmlReader, globalProperties, toolsVersion)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="xmlReader" Type="System.Xml.XmlReader" />
        <Parameter Name="globalProperties" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="toolsVersion" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="xmlReader"><span data-ttu-id="fb927-176">从中读取项目的 Xml 读取器。</span><span class="sxs-lookup"><span data-stu-id="fb927-176">Xml reader to read project from</span></span></param>
        <param name="globalProperties"><span data-ttu-id="fb927-177">要计算的全局属性。</span><span class="sxs-lookup"><span data-stu-id="fb927-177">Global properties to evaluate with.</span></span> <span data-ttu-id="fb927-178">可以为 null，在此情况下，将使用包含项目集合的全局属性。</span><span class="sxs-lookup"><span data-stu-id="fb927-178">May be null in which case the containing project collection's global properties will be used.</span></span></param>
        <param name="toolsVersion"><span data-ttu-id="fb927-179">用于计算的工具版本。</span><span class="sxs-lookup"><span data-stu-id="fb927-179">Tools version to evaluate with.</span></span> <span data-ttu-id="fb927-180">可能为 null</span><span class="sxs-lookup"><span data-stu-id="fb927-180">May be null</span></span></param>
        <summary><span data-ttu-id="fb927-181">在项目 xml 的文本读取器上构造，使用指定的全局属性和工具集（可能其中一个为 null，也可能两者都为 null）进行计算。</span><span class="sxs-lookup"><span data-stu-id="fb927-181">Construct over a text reader over project xml, evaluating with specified global properties and toolset, either or both of which may be null.</span></span>
<span data-ttu-id="fb927-182">项目命名后，添加到全局项目集合中。</span><span class="sxs-lookup"><span data-stu-id="fb927-182">Project will be added to the global project collection when it is named.</span></span>
<span data-ttu-id="fb927-183">如果计算失败，将引发 InvalidProjectFileException。</span><span class="sxs-lookup"><span data-stu-id="fb927-183">Throws InvalidProjectFileException if the evaluation fails.</span></span>
<span data-ttu-id="fb927-184">如果已在项目集合中加载了等效项目，则会引发 InvalidOperationException。</span><span class="sxs-lookup"><span data-stu-id="fb927-184">Throws InvalidOperationException if there is already an equivalent project loaded in the project collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fb927-185">当向全局项目集合提供源项目文件的完整路径（通常通过保存项目）时，此项目将添加到全局项目集合中。</span><span class="sxs-lookup"><span data-stu-id="fb927-185">This project is added to the global project collection when it is given the full path to the source project file, typically by saving the project.</span></span>  
  
 <span data-ttu-id="fb927-186">如果计算失败，将引发 Microsoft.build.buildengine.invalidprojectfileexception。</span><span class="sxs-lookup"><span data-stu-id="fb927-186">Throws InvalidProjectFileException if the evaluation fails.</span></span> <span data-ttu-id="fb927-187">如果已在项目集合中加载了等效项目，则会引发 InvalidOperationException。</span><span class="sxs-lookup"><span data-stu-id="fb927-187">Throws InvalidOperationException if there is already an equivalent project loaded in the project collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Project (Microsoft.Build.Construction.ProjectRootElement xml, System.Collections.Generic.IDictionary&lt;string,string&gt; globalProperties, string toolsVersion, Microsoft.Build.Evaluation.ProjectCollection projectCollection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Build.Construction.ProjectRootElement xml, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; globalProperties, string toolsVersion, class Microsoft.Build.Evaluation.ProjectCollection projectCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.#ctor(Microsoft.Build.Construction.ProjectRootElement,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (xml As ProjectRootElement, globalProperties As IDictionary(Of String, String), toolsVersion As String, projectCollection As ProjectCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Project(Microsoft::Build::Construction::ProjectRootElement ^ xml, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ globalProperties, System::String ^ toolsVersion, Microsoft::Build::Evaluation::ProjectCollection ^ projectCollection);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Evaluation.Project : Microsoft.Build.Construction.ProjectRootElement * System.Collections.Generic.IDictionary&lt;string, string&gt; * string * Microsoft.Build.Evaluation.ProjectCollection -&gt; Microsoft.Build.Evaluation.Project" Usage="new Microsoft.Build.Evaluation.Project (xml, globalProperties, toolsVersion, projectCollection)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="xml" Type="Microsoft.Build.Construction.ProjectRootElement" />
        <Parameter Name="globalProperties" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="toolsVersion" Type="System.String" />
        <Parameter Name="projectCollection" Type="Microsoft.Build.Evaluation.ProjectCollection" />
      </Parameters>
      <Docs>
        <param name="xml"><span data-ttu-id="fb927-188">要使用的 ProjectRootElement</span><span class="sxs-lookup"><span data-stu-id="fb927-188">ProjectRootElement to use</span></span></param>
        <param name="globalProperties"><span data-ttu-id="fb927-189">要计算的全局属性。</span><span class="sxs-lookup"><span data-stu-id="fb927-189">Global properties to evaluate with.</span></span> <span data-ttu-id="fb927-190">可以为 null，在此情况下，将使用包含项目集合的全局属性。</span><span class="sxs-lookup"><span data-stu-id="fb927-190">May be null in which case the containing project collection's global properties will be used.</span></span></param>
        <param name="toolsVersion"><span data-ttu-id="fb927-191">用于计算的工具版本。</span><span class="sxs-lookup"><span data-stu-id="fb927-191">Tools version to evaluate with.</span></span> <span data-ttu-id="fb927-192">可能为 null</span><span class="sxs-lookup"><span data-stu-id="fb927-192">May be null</span></span></param>
        <param name="projectCollection"><span data-ttu-id="fb927-193">项目添加到的 <see cref="P:Microsoft.Build.Evaluation.Project.ProjectCollection" />。</span><span class="sxs-lookup"><span data-stu-id="fb927-193">The <see cref="P:Microsoft.Build.Evaluation.Project.ProjectCollection" /> the project is added to.</span></span></param>
        <summary><span data-ttu-id="fb927-194">在 ProjectRootElement 对象上构造，使用指定的全局属性和工具集（可能其中一个为 null，也可能两者都为 null）进行计算。</span><span class="sxs-lookup"><span data-stu-id="fb927-194">Construct over a ProjectRootElement object, evaluating with specified global properties and toolset, either or both of which may be null.</span></span>
<span data-ttu-id="fb927-195">如果项目有名称，添加到全局项目集合中，否则在命名后添加。</span><span class="sxs-lookup"><span data-stu-id="fb927-195">Project is added to the global project collection if it has a name, or else when it is named.</span></span>
<span data-ttu-id="fb927-196">如果计算失败，将引发 InvalidProjectFileException。</span><span class="sxs-lookup"><span data-stu-id="fb927-196">Throws InvalidProjectFileException if the evaluation fails.</span></span>
<span data-ttu-id="fb927-197">如果已在项目集合中加载了等效项目，则会引发 InvalidOperationException。</span><span class="sxs-lookup"><span data-stu-id="fb927-197">Throws InvalidOperationException if there is already an equivalent project loaded in the project collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fb927-198">当向此项目或给定的项目根提供源项目文件的完整路径时，此项目将添加到给定的项目集合中。</span><span class="sxs-lookup"><span data-stu-id="fb927-198">This project is added to the given project collection when either this project or the given project root is given the full path to the source project file.</span></span>  
  
 <span data-ttu-id="fb927-199">如果计算失败，将引发 Microsoft.build.buildengine.invalidprojectfileexception。</span><span class="sxs-lookup"><span data-stu-id="fb927-199">Throws InvalidProjectFileException if the evaluation fails.</span></span> <span data-ttu-id="fb927-200">如果已在项目集合中加载了等效项目，则会引发 InvalidOperationException。</span><span class="sxs-lookup"><span data-stu-id="fb927-200">Throws InvalidOperationException if there is already an equivalent project loaded in the project collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Project (System.Collections.Generic.IDictionary&lt;string,string&gt; globalProperties, string toolsVersion, Microsoft.Build.Evaluation.ProjectCollection projectCollection, Microsoft.Build.Evaluation.NewProjectFileOptions newProjectFileOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IDictionary`2&lt;string, string&gt; globalProperties, string toolsVersion, class Microsoft.Build.Evaluation.ProjectCollection projectCollection, valuetype Microsoft.Build.Evaluation.NewProjectFileOptions newProjectFileOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.#ctor(System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection,Microsoft.Build.Evaluation.NewProjectFileOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (globalProperties As IDictionary(Of String, String), toolsVersion As String, projectCollection As ProjectCollection, newProjectFileOptions As NewProjectFileOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Project(System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ globalProperties, System::String ^ toolsVersion, Microsoft::Build::Evaluation::ProjectCollection ^ projectCollection, Microsoft::Build::Evaluation::NewProjectFileOptions newProjectFileOptions);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Evaluation.Project : System.Collections.Generic.IDictionary&lt;string, string&gt; * string * Microsoft.Build.Evaluation.ProjectCollection * Microsoft.Build.Evaluation.NewProjectFileOptions -&gt; Microsoft.Build.Evaluation.Project" Usage="new Microsoft.Build.Evaluation.Project (globalProperties, toolsVersion, projectCollection, newProjectFileOptions)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="globalProperties" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" Index="0" FrameworkAlternate="msbuild-15;msbuild-15-netcore;msbuild-16;msbuild-16-netcore" />
        <Parameter Name="toolsVersion" Type="System.String" Index="1" FrameworkAlternate="msbuild-15;msbuild-15-netcore;msbuild-16;msbuild-16-netcore" />
        <Parameter Name="projectCollection" Type="Microsoft.Build.Evaluation.ProjectCollection" Index="2" FrameworkAlternate="msbuild-15;msbuild-15-netcore;msbuild-16;msbuild-16-netcore" />
        <Parameter Name="newProjectFileOptions" Type="Microsoft.Build.Evaluation.NewProjectFileOptions" Index="3" FrameworkAlternate="msbuild-15;msbuild-15-netcore;msbuild-16;msbuild-16-netcore" />
      </Parameters>
      <Docs>
        <param name="globalProperties"><span data-ttu-id="fb927-201">要计算的全局属性。</span><span class="sxs-lookup"><span data-stu-id="fb927-201">Global properties to evaluate with.</span></span> <span data-ttu-id="fb927-202">可以为 null，在此情况下，将使用包含项目集合的全局属性。</span><span class="sxs-lookup"><span data-stu-id="fb927-202">May be null in which case the containing project collection's global properties will be used.</span></span></param>
        <param name="toolsVersion"><span data-ttu-id="fb927-203">用于计算的工具版本。</span><span class="sxs-lookup"><span data-stu-id="fb927-203">Tools version to evaluate with.</span></span> <span data-ttu-id="fb927-204">可能为 null</span><span class="sxs-lookup"><span data-stu-id="fb927-204">May be null</span></span></param>
        <param name="projectCollection"><span data-ttu-id="fb927-205">项目添加到的 <see cref="P:Microsoft.Build.Evaluation.Project.ProjectCollection" />。</span><span class="sxs-lookup"><span data-stu-id="fb927-205">The <see cref="P:Microsoft.Build.Evaluation.Project.ProjectCollection" /> the project is added to.</span></span></param>
        <param name="newProjectFileOptions"><span data-ttu-id="fb927-206">要用于新项目的 <see cref="T:Microsoft.Build.Evaluation.NewProjectFileOptions" />。</span><span class="sxs-lookup"><span data-stu-id="fb927-206">The <see cref="T:Microsoft.Build.Evaluation.NewProjectFileOptions" /> to use for the new project.</span></span></param>
        <summary><span data-ttu-id="fb927-207">构造一个空项目，使用指定项目集合、指定全局属性和默认工具版本（可能其中一个为 null）进行计算。</span><span class="sxs-lookup"><span data-stu-id="fb927-207">Construct an empty project, evaluating with the specified project collection and the specified global properties and default tools version, either of which may be null.</span></span>
<span data-ttu-id="fb927-208">项目命名后，将添加到指定项目集合中。</span><span class="sxs-lookup"><span data-stu-id="fb927-208">Project will be added to the specified project collection when it is named.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Project (string projectFile, System.Collections.Generic.IDictionary&lt;string,string&gt; globalProperties, string toolsVersion, Microsoft.Build.Evaluation.ProjectCollection projectCollection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string projectFile, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; globalProperties, string toolsVersion, class Microsoft.Build.Evaluation.ProjectCollection projectCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (projectFile As String, globalProperties As IDictionary(Of String, String), toolsVersion As String, projectCollection As ProjectCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Project(System::String ^ projectFile, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ globalProperties, System::String ^ toolsVersion, Microsoft::Build::Evaluation::ProjectCollection ^ projectCollection);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Evaluation.Project : string * System.Collections.Generic.IDictionary&lt;string, string&gt; * string * Microsoft.Build.Evaluation.ProjectCollection -&gt; Microsoft.Build.Evaluation.Project" Usage="new Microsoft.Build.Evaluation.Project (projectFile, globalProperties, toolsVersion, projectCollection)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="projectFile" Type="System.String" />
        <Parameter Name="globalProperties" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="toolsVersion" Type="System.String" />
        <Parameter Name="projectCollection" Type="Microsoft.Build.Evaluation.ProjectCollection" />
      </Parameters>
      <Docs>
        <param name="projectFile"><span data-ttu-id="fb927-209">项目文件</span><span class="sxs-lookup"><span data-stu-id="fb927-209">The project file</span></span></param>
        <param name="globalProperties"><span data-ttu-id="fb927-210">全局属性。</span><span class="sxs-lookup"><span data-stu-id="fb927-210">The global properties.</span></span> <span data-ttu-id="fb927-211">可能为 null。</span><span class="sxs-lookup"><span data-stu-id="fb927-211">May be null.</span></span></param>
        <param name="toolsVersion"><span data-ttu-id="fb927-212">工具版本。</span><span class="sxs-lookup"><span data-stu-id="fb927-212">The tools version.</span></span> <span data-ttu-id="fb927-213">可能为 null。</span><span class="sxs-lookup"><span data-stu-id="fb927-213">May be null.</span></span></param>
        <param name="projectCollection"><span data-ttu-id="fb927-214">此项目应与之相关联的集合。</span><span class="sxs-lookup"><span data-stu-id="fb927-214">The collection with which this project should be associated.</span></span> <span data-ttu-id="fb927-215">不能为 null。</span><span class="sxs-lookup"><span data-stu-id="fb927-215">May not be null.</span></span></param>
        <summary><span data-ttu-id="fb927-216">在现有项目文件上构造，使用指定的全局属性并使用提供的工具版本（可能其中一个为 null，也可能两者都为 null）进行计算。</span><span class="sxs-lookup"><span data-stu-id="fb927-216">Construct over an existing project file, evaluating with the specified global properties and using the tools version provided, either or both of which may be null.</span></span>
<span data-ttu-id="fb927-217">项目添加到全局项目集合中。</span><span class="sxs-lookup"><span data-stu-id="fb927-217">Project is added to the global project collection.</span></span>
<span data-ttu-id="fb927-218">如果计算失败，将引发 InvalidProjectFileException。</span><span class="sxs-lookup"><span data-stu-id="fb927-218">Throws InvalidProjectFileException if the evaluation fails.</span></span>
<span data-ttu-id="fb927-219">如果已在项目集合中加载了等效项目，则会引发 InvalidOperationException。</span><span class="sxs-lookup"><span data-stu-id="fb927-219">Throws InvalidOperationException if there is already an equivalent project loaded in the project collection.</span></span>
<span data-ttu-id="fb927-220">可能引发与 IO 相关的异常。</span><span class="sxs-lookup"><span data-stu-id="fb927-220">May throw IO-related exceptions.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fb927-221">项目将添加到给定的项目集合中。</span><span class="sxs-lookup"><span data-stu-id="fb927-221">The project is added to the given project collection.</span></span>  
  
 <span data-ttu-id="fb927-222">如果计算失败，将引发 Microsoft.build.buildengine.invalidprojectfileexception。</span><span class="sxs-lookup"><span data-stu-id="fb927-222">Throws InvalidProjectFileException if the evaluation fails.</span></span> <span data-ttu-id="fb927-223">如果已在项目集合中加载了等效项目，则会引发 InvalidOperationException。</span><span class="sxs-lookup"><span data-stu-id="fb927-223">Throws InvalidOperationException if there is already an equivalent project loaded in the project collection.</span></span> <span data-ttu-id="fb927-224">可能引发与 IO 相关的异常。</span><span class="sxs-lookup"><span data-stu-id="fb927-224">May throw IO-related exceptions.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Project (System.Xml.XmlReader xmlReader, System.Collections.Generic.IDictionary&lt;string,string&gt; globalProperties, string toolsVersion, Microsoft.Build.Evaluation.ProjectCollection projectCollection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.XmlReader xmlReader, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; globalProperties, string toolsVersion, class Microsoft.Build.Evaluation.ProjectCollection projectCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.#ctor(System.Xml.XmlReader,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (xmlReader As XmlReader, globalProperties As IDictionary(Of String, String), toolsVersion As String, projectCollection As ProjectCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Project(System::Xml::XmlReader ^ xmlReader, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ globalProperties, System::String ^ toolsVersion, Microsoft::Build::Evaluation::ProjectCollection ^ projectCollection);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Evaluation.Project : System.Xml.XmlReader * System.Collections.Generic.IDictionary&lt;string, string&gt; * string * Microsoft.Build.Evaluation.ProjectCollection -&gt; Microsoft.Build.Evaluation.Project" Usage="new Microsoft.Build.Evaluation.Project (xmlReader, globalProperties, toolsVersion, projectCollection)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="xmlReader" Type="System.Xml.XmlReader" />
        <Parameter Name="globalProperties" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="toolsVersion" Type="System.String" />
        <Parameter Name="projectCollection" Type="Microsoft.Build.Evaluation.ProjectCollection" />
      </Parameters>
      <Docs>
        <param name="xmlReader"><span data-ttu-id="fb927-225">从中读取项目的 Xml 读取器。</span><span class="sxs-lookup"><span data-stu-id="fb927-225">Xml reader to read project from</span></span></param>
        <param name="globalProperties"><span data-ttu-id="fb927-226">要计算的全局属性。</span><span class="sxs-lookup"><span data-stu-id="fb927-226">Global properties to evaluate with.</span></span> <span data-ttu-id="fb927-227">可以为 null，在此情况下，将使用包含项目集合的全局属性。</span><span class="sxs-lookup"><span data-stu-id="fb927-227">May be null in which case the containing project collection's global properties will be used.</span></span></param>
        <param name="toolsVersion"><span data-ttu-id="fb927-228">用于计算的工具版本。</span><span class="sxs-lookup"><span data-stu-id="fb927-228">Tools version to evaluate with.</span></span> <span data-ttu-id="fb927-229">可能为 null</span><span class="sxs-lookup"><span data-stu-id="fb927-229">May be null</span></span></param>
        <param name="projectCollection"><span data-ttu-id="fb927-230">此项目应与之相关联的集合。</span><span class="sxs-lookup"><span data-stu-id="fb927-230">The collection with which this project should be associated.</span></span> <span data-ttu-id="fb927-231">不能为 null。</span><span class="sxs-lookup"><span data-stu-id="fb927-231">May not be null.</span></span></param>
        <summary><span data-ttu-id="fb927-232">在项目 xml 的文本读取器上构造，使用指定的全局属性和工具集（可能其中一个为 null，也可能两者都为 null）进行计算。</span><span class="sxs-lookup"><span data-stu-id="fb927-232">Construct over a text reader over project xml, evaluating with specified global properties and toolset, either or both of which may be null.</span></span>
<span data-ttu-id="fb927-233">项目命名后，将添加到指定项目集合中。</span><span class="sxs-lookup"><span data-stu-id="fb927-233">Project will be added to the specified project collection when it is named.</span></span>
<span data-ttu-id="fb927-234">如果计算失败，将引发 InvalidProjectFileException。</span><span class="sxs-lookup"><span data-stu-id="fb927-234">Throws InvalidProjectFileException if the evaluation fails.</span></span>
<span data-ttu-id="fb927-235">如果已在项目集合中加载了等效项目，则会引发 InvalidOperationException。</span><span class="sxs-lookup"><span data-stu-id="fb927-235">Throws InvalidOperationException if there is already an equivalent project loaded in the project collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fb927-236">当向此项目或给定的项目根提供源项目文件的完整路径时，此项目将添加到给定的项目集合中。</span><span class="sxs-lookup"><span data-stu-id="fb927-236">This project is added to the given project collection when either this project or the given project root is given the full path to the source project file.</span></span>  
  
 <span data-ttu-id="fb927-237">如果计算失败，将引发 Microsoft.build.buildengine.invalidprojectfileexception。</span><span class="sxs-lookup"><span data-stu-id="fb927-237">Throws InvalidProjectFileException if the evaluation fails.</span></span> <span data-ttu-id="fb927-238">如果已在项目集合中加载了等效项目，则会引发 InvalidOperationException。</span><span class="sxs-lookup"><span data-stu-id="fb927-238">Throws InvalidOperationException if there is already an equivalent project loaded in the project collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Project (Microsoft.Build.Construction.ProjectRootElement xml, System.Collections.Generic.IDictionary&lt;string,string&gt; globalProperties, string toolsVersion, Microsoft.Build.Evaluation.ProjectCollection projectCollection, Microsoft.Build.Evaluation.ProjectLoadSettings loadSettings);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Build.Construction.ProjectRootElement xml, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; globalProperties, string toolsVersion, class Microsoft.Build.Evaluation.ProjectCollection projectCollection, valuetype Microsoft.Build.Evaluation.ProjectLoadSettings loadSettings) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.#ctor(Microsoft.Build.Construction.ProjectRootElement,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection,Microsoft.Build.Evaluation.ProjectLoadSettings)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (xml As ProjectRootElement, globalProperties As IDictionary(Of String, String), toolsVersion As String, projectCollection As ProjectCollection, loadSettings As ProjectLoadSettings)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Project(Microsoft::Build::Construction::ProjectRootElement ^ xml, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ globalProperties, System::String ^ toolsVersion, Microsoft::Build::Evaluation::ProjectCollection ^ projectCollection, Microsoft::Build::Evaluation::ProjectLoadSettings loadSettings);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Evaluation.Project : Microsoft.Build.Construction.ProjectRootElement * System.Collections.Generic.IDictionary&lt;string, string&gt; * string * Microsoft.Build.Evaluation.ProjectCollection * Microsoft.Build.Evaluation.ProjectLoadSettings -&gt; Microsoft.Build.Evaluation.Project" Usage="new Microsoft.Build.Evaluation.Project (xml, globalProperties, toolsVersion, projectCollection, loadSettings)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="xml" Type="Microsoft.Build.Construction.ProjectRootElement" />
        <Parameter Name="globalProperties" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="toolsVersion" Type="System.String" />
        <Parameter Name="projectCollection" Type="Microsoft.Build.Evaluation.ProjectCollection" />
        <Parameter Name="loadSettings" Type="Microsoft.Build.Evaluation.ProjectLoadSettings" />
      </Parameters>
      <Docs>
        <param name="xml"><span data-ttu-id="fb927-239">要使用的 ProjectRootElement</span><span class="sxs-lookup"><span data-stu-id="fb927-239">ProjectRootElement to use</span></span></param>
        <param name="globalProperties"><span data-ttu-id="fb927-240">要计算的全局属性。</span><span class="sxs-lookup"><span data-stu-id="fb927-240">Global properties to evaluate with.</span></span> <span data-ttu-id="fb927-241">可以为 null，在此情况下，将使用包含项目集合的全局属性。</span><span class="sxs-lookup"><span data-stu-id="fb927-241">May be null in which case the containing project collection's global properties will be used.</span></span></param>
        <param name="toolsVersion"><span data-ttu-id="fb927-242">用于计算的工具版本。</span><span class="sxs-lookup"><span data-stu-id="fb927-242">Tools version to evaluate with.</span></span> <span data-ttu-id="fb927-243">可能为 null</span><span class="sxs-lookup"><span data-stu-id="fb927-243">May be null</span></span></param>
        <param name="projectCollection"><span data-ttu-id="fb927-244">项目添加到的 <see cref="P:Microsoft.Build.Evaluation.Project.ProjectCollection" />。</span><span class="sxs-lookup"><span data-stu-id="fb927-244">The <see cref="P:Microsoft.Build.Evaluation.Project.ProjectCollection" /> the project is added to.</span></span></param>
        <param name="loadSettings"><span data-ttu-id="fb927-245">要用于计算的 <see cref="T:Microsoft.Build.Evaluation.ProjectLoadSettings" />。</span><span class="sxs-lookup"><span data-stu-id="fb927-245">The <see cref="T:Microsoft.Build.Evaluation.ProjectLoadSettings" /> to use for evaluation.</span></span></param>
        <summary><span data-ttu-id="fb927-246">在 ProjectRootElement 对象上构造，使用指定的全局属性和工具集（可能其中一个为 null，也可能两者都为 null）进行计算。</span><span class="sxs-lookup"><span data-stu-id="fb927-246">Construct over a ProjectRootElement object, evaluating with specified global properties and toolset, either or both of which may be null.</span></span>
<span data-ttu-id="fb927-247">如果项目有名称，添加到全局项目集合中，否则在命名后添加。</span><span class="sxs-lookup"><span data-stu-id="fb927-247">Project is added to the global project collection if it has a name, or else when it is named.</span></span>
<span data-ttu-id="fb927-248">如果计算失败，将引发 InvalidProjectFileException。</span><span class="sxs-lookup"><span data-stu-id="fb927-248">Throws InvalidProjectFileException if the evaluation fails.</span></span>
<span data-ttu-id="fb927-249">如果已在项目集合中加载了等效项目，则会引发 InvalidOperationException。</span><span class="sxs-lookup"><span data-stu-id="fb927-249">Throws InvalidOperationException if there is already an equivalent project loaded in the project collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fb927-250">当向此项目或给定的项目根提供源项目文件的完整路径时，此项目将添加到给定的项目集合中。</span><span class="sxs-lookup"><span data-stu-id="fb927-250">This project is added to the given project collection when either this project or the given project root is given the full path to the source project file.</span></span>  
  
 <span data-ttu-id="fb927-251">如果计算失败，将引发 Microsoft.build.buildengine.invalidprojectfileexception。</span><span class="sxs-lookup"><span data-stu-id="fb927-251">Throws InvalidProjectFileException if the evaluation fails.</span></span> <span data-ttu-id="fb927-252">如果已在项目集合中加载了等效项目，则会引发 InvalidOperationException。</span><span class="sxs-lookup"><span data-stu-id="fb927-252">Throws InvalidOperationException if there is already an equivalent project loaded in the project collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Project (string projectFile, System.Collections.Generic.IDictionary&lt;string,string&gt; globalProperties, string toolsVersion, Microsoft.Build.Evaluation.ProjectCollection projectCollection, Microsoft.Build.Evaluation.ProjectLoadSettings loadSettings);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string projectFile, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; globalProperties, string toolsVersion, class Microsoft.Build.Evaluation.ProjectCollection projectCollection, valuetype Microsoft.Build.Evaluation.ProjectLoadSettings loadSettings) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection,Microsoft.Build.Evaluation.ProjectLoadSettings)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (projectFile As String, globalProperties As IDictionary(Of String, String), toolsVersion As String, projectCollection As ProjectCollection, loadSettings As ProjectLoadSettings)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Project(System::String ^ projectFile, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ globalProperties, System::String ^ toolsVersion, Microsoft::Build::Evaluation::ProjectCollection ^ projectCollection, Microsoft::Build::Evaluation::ProjectLoadSettings loadSettings);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Evaluation.Project : string * System.Collections.Generic.IDictionary&lt;string, string&gt; * string * Microsoft.Build.Evaluation.ProjectCollection * Microsoft.Build.Evaluation.ProjectLoadSettings -&gt; Microsoft.Build.Evaluation.Project" Usage="new Microsoft.Build.Evaluation.Project (projectFile, globalProperties, toolsVersion, projectCollection, loadSettings)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="projectFile" Type="System.String" />
        <Parameter Name="globalProperties" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="toolsVersion" Type="System.String" />
        <Parameter Name="projectCollection" Type="Microsoft.Build.Evaluation.ProjectCollection" />
        <Parameter Name="loadSettings" Type="Microsoft.Build.Evaluation.ProjectLoadSettings" />
      </Parameters>
      <Docs>
        <param name="projectFile"><span data-ttu-id="fb927-253">项目文件</span><span class="sxs-lookup"><span data-stu-id="fb927-253">The project file</span></span></param>
        <param name="globalProperties"><span data-ttu-id="fb927-254">全局属性。</span><span class="sxs-lookup"><span data-stu-id="fb927-254">The global properties.</span></span> <span data-ttu-id="fb927-255">可能为 null。</span><span class="sxs-lookup"><span data-stu-id="fb927-255">May be null.</span></span></param>
        <param name="toolsVersion"><span data-ttu-id="fb927-256">工具版本。</span><span class="sxs-lookup"><span data-stu-id="fb927-256">The tools version.</span></span> <span data-ttu-id="fb927-257">可能为 null。</span><span class="sxs-lookup"><span data-stu-id="fb927-257">May be null.</span></span></param>
        <param name="projectCollection"><span data-ttu-id="fb927-258">此项目应与之相关联的集合。</span><span class="sxs-lookup"><span data-stu-id="fb927-258">The collection with which this project should be associated.</span></span> <span data-ttu-id="fb927-259">不能为 null。</span><span class="sxs-lookup"><span data-stu-id="fb927-259">May not be null.</span></span></param>
        <param name="loadSettings"><span data-ttu-id="fb927-260">此项目的加载设置。</span><span class="sxs-lookup"><span data-stu-id="fb927-260">The load settings for this project.</span></span></param>
        <summary><span data-ttu-id="fb927-261">在现有项目文件上构造，使用指定的全局属性并使用提供的工具版本（可能其中一个为 null，也可能两者都为 null）进行计算。</span><span class="sxs-lookup"><span data-stu-id="fb927-261">Construct over an existing project file, evaluating with the specified global properties and using the tools version provided, either or both of which may be null.</span></span>
<span data-ttu-id="fb927-262">项目添加到全局项目集合中。</span><span class="sxs-lookup"><span data-stu-id="fb927-262">Project is added to the global project collection.</span></span>
<span data-ttu-id="fb927-263">如果计算失败，将引发 InvalidProjectFileException。</span><span class="sxs-lookup"><span data-stu-id="fb927-263">Throws InvalidProjectFileException if the evaluation fails.</span></span>
<span data-ttu-id="fb927-264">如果已在项目集合中加载了等效项目，则会引发 InvalidOperationException。</span><span class="sxs-lookup"><span data-stu-id="fb927-264">Throws InvalidOperationException if there is already an equivalent project loaded in the project collection.</span></span>
<span data-ttu-id="fb927-265">可能引发与 IO 相关的异常。</span><span class="sxs-lookup"><span data-stu-id="fb927-265">May throw IO-related exceptions.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fb927-266">项目将添加到给定的项目集合中。</span><span class="sxs-lookup"><span data-stu-id="fb927-266">The project is added to the given project collection.</span></span>  
  
 <span data-ttu-id="fb927-267">如果计算失败，将引发 Microsoft.build.buildengine.invalidprojectfileexception。</span><span class="sxs-lookup"><span data-stu-id="fb927-267">Throws InvalidProjectFileException if the evaluation fails.</span></span> <span data-ttu-id="fb927-268">如果已在项目集合中加载了等效项目，则会引发 InvalidOperationException。</span><span class="sxs-lookup"><span data-stu-id="fb927-268">Throws InvalidOperationException if there is already an equivalent project loaded in the project collection.</span></span> <span data-ttu-id="fb927-269">可能引发与 IO 相关的异常。</span><span class="sxs-lookup"><span data-stu-id="fb927-269">May throw IO-related exceptions.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Project (System.Xml.XmlReader xmlReader, System.Collections.Generic.IDictionary&lt;string,string&gt; globalProperties, string toolsVersion, Microsoft.Build.Evaluation.ProjectCollection projectCollection, Microsoft.Build.Evaluation.ProjectLoadSettings loadSettings);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.XmlReader xmlReader, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; globalProperties, string toolsVersion, class Microsoft.Build.Evaluation.ProjectCollection projectCollection, valuetype Microsoft.Build.Evaluation.ProjectLoadSettings loadSettings) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.#ctor(System.Xml.XmlReader,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection,Microsoft.Build.Evaluation.ProjectLoadSettings)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (xmlReader As XmlReader, globalProperties As IDictionary(Of String, String), toolsVersion As String, projectCollection As ProjectCollection, loadSettings As ProjectLoadSettings)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Project(System::Xml::XmlReader ^ xmlReader, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ globalProperties, System::String ^ toolsVersion, Microsoft::Build::Evaluation::ProjectCollection ^ projectCollection, Microsoft::Build::Evaluation::ProjectLoadSettings loadSettings);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Evaluation.Project : System.Xml.XmlReader * System.Collections.Generic.IDictionary&lt;string, string&gt; * string * Microsoft.Build.Evaluation.ProjectCollection * Microsoft.Build.Evaluation.ProjectLoadSettings -&gt; Microsoft.Build.Evaluation.Project" Usage="new Microsoft.Build.Evaluation.Project (xmlReader, globalProperties, toolsVersion, projectCollection, loadSettings)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="xmlReader" Type="System.Xml.XmlReader" />
        <Parameter Name="globalProperties" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="toolsVersion" Type="System.String" />
        <Parameter Name="projectCollection" Type="Microsoft.Build.Evaluation.ProjectCollection" />
        <Parameter Name="loadSettings" Type="Microsoft.Build.Evaluation.ProjectLoadSettings" />
      </Parameters>
      <Docs>
        <param name="xmlReader"><span data-ttu-id="fb927-270">从中读取项目的 Xml 读取器。</span><span class="sxs-lookup"><span data-stu-id="fb927-270">Xml reader to read project from</span></span></param>
        <param name="globalProperties"><span data-ttu-id="fb927-271">要计算的全局属性。</span><span class="sxs-lookup"><span data-stu-id="fb927-271">Global properties to evaluate with.</span></span> <span data-ttu-id="fb927-272">可以为 null，在此情况下，将使用包含项目集合的全局属性。</span><span class="sxs-lookup"><span data-stu-id="fb927-272">May be null in which case the containing project collection's global properties will be used.</span></span></param>
        <param name="toolsVersion"><span data-ttu-id="fb927-273">用于计算的工具版本。</span><span class="sxs-lookup"><span data-stu-id="fb927-273">Tools version to evaluate with.</span></span> <span data-ttu-id="fb927-274">可能为 null</span><span class="sxs-lookup"><span data-stu-id="fb927-274">May be null</span></span></param>
        <param name="projectCollection"><span data-ttu-id="fb927-275">此项目应与之相关联的集合。</span><span class="sxs-lookup"><span data-stu-id="fb927-275">The collection with which this project should be associated.</span></span> <span data-ttu-id="fb927-276">不能为 null。</span><span class="sxs-lookup"><span data-stu-id="fb927-276">May not be null.</span></span></param>
        <param name="loadSettings"><span data-ttu-id="fb927-277">要用于计算的 <see cref="T:Microsoft.Build.Evaluation.ProjectLoadSettings" />。</span><span class="sxs-lookup"><span data-stu-id="fb927-277">The <see cref="T:Microsoft.Build.Evaluation.ProjectLoadSettings" /> to use for evaluation.</span></span></param>
        <summary><span data-ttu-id="fb927-278">在项目 xml 的文本读取器上构造，使用指定的全局属性和工具集（可能其中一个为 null，也可能两者都为 null）进行计算。</span><span class="sxs-lookup"><span data-stu-id="fb927-278">Construct over a text reader over project xml, evaluating with specified global properties and toolset, either or both of which may be null.</span></span>
<span data-ttu-id="fb927-279">项目命名后，将添加到指定项目集合中。</span><span class="sxs-lookup"><span data-stu-id="fb927-279">Project will be added to the specified project collection when it is named.</span></span>
<span data-ttu-id="fb927-280">如果计算失败，将引发 InvalidProjectFileException。</span><span class="sxs-lookup"><span data-stu-id="fb927-280">Throws InvalidProjectFileException if the evaluation fails.</span></span>
<span data-ttu-id="fb927-281">如果已在项目集合中加载了等效项目，则会引发 InvalidOperationException。</span><span class="sxs-lookup"><span data-stu-id="fb927-281">Throws InvalidOperationException if there is already an equivalent project loaded in the project collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fb927-282">当向此项目或给定的项目根提供源项目文件的完整路径时，此项目将添加到给定的项目集合中。</span><span class="sxs-lookup"><span data-stu-id="fb927-282">This project is added to the given project collection when either this project or the given project root is given the full path to the source project file.</span></span>  
  
 <span data-ttu-id="fb927-283">如果计算失败，将引发 Microsoft.build.buildengine.invalidprojectfileexception。</span><span class="sxs-lookup"><span data-stu-id="fb927-283">Throws InvalidProjectFileException if the evaluation fails.</span></span> <span data-ttu-id="fb927-284">如果已在项目集合中加载了等效项目，则会引发 InvalidOperationException。</span><span class="sxs-lookup"><span data-stu-id="fb927-284">Throws InvalidOperationException if there is already an equivalent project loaded in the project collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Project (Microsoft.Build.Construction.ProjectRootElement xml, System.Collections.Generic.IDictionary&lt;string,string&gt; globalProperties, string toolsVersion, string subToolsetVersion, Microsoft.Build.Evaluation.ProjectCollection projectCollection, Microsoft.Build.Evaluation.ProjectLoadSettings loadSettings);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Build.Construction.ProjectRootElement xml, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; globalProperties, string toolsVersion, string subToolsetVersion, class Microsoft.Build.Evaluation.ProjectCollection projectCollection, valuetype Microsoft.Build.Evaluation.ProjectLoadSettings loadSettings) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.#ctor(Microsoft.Build.Construction.ProjectRootElement,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,Microsoft.Build.Evaluation.ProjectCollection,Microsoft.Build.Evaluation.ProjectLoadSettings)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (xml As ProjectRootElement, globalProperties As IDictionary(Of String, String), toolsVersion As String, subToolsetVersion As String, projectCollection As ProjectCollection, loadSettings As ProjectLoadSettings)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Project(Microsoft::Build::Construction::ProjectRootElement ^ xml, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ globalProperties, System::String ^ toolsVersion, System::String ^ subToolsetVersion, Microsoft::Build::Evaluation::ProjectCollection ^ projectCollection, Microsoft::Build::Evaluation::ProjectLoadSettings loadSettings);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Evaluation.Project : Microsoft.Build.Construction.ProjectRootElement * System.Collections.Generic.IDictionary&lt;string, string&gt; * string * string * Microsoft.Build.Evaluation.ProjectCollection * Microsoft.Build.Evaluation.ProjectLoadSettings -&gt; Microsoft.Build.Evaluation.Project" Usage="new Microsoft.Build.Evaluation.Project (xml, globalProperties, toolsVersion, subToolsetVersion, projectCollection, loadSettings)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="xml" Type="Microsoft.Build.Construction.ProjectRootElement" Index="0" FrameworkAlternate="msbuild-15;msbuild-15-netcore;msbuild-16;msbuild-16-netcore;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="globalProperties" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" Index="1" FrameworkAlternate="msbuild-15;msbuild-15-netcore;msbuild-16;msbuild-16-netcore;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="toolsVersion" Type="System.String" Index="2" FrameworkAlternate="msbuild-15;msbuild-15-netcore;msbuild-16;msbuild-16-netcore;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="subToolsetVersion" Type="System.String" Index="3" FrameworkAlternate="msbuild-15;msbuild-15-netcore;msbuild-16;msbuild-16-netcore;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="projectCollection" Type="Microsoft.Build.Evaluation.ProjectCollection" Index="4" FrameworkAlternate="msbuild-15;msbuild-15-netcore;msbuild-16;msbuild-16-netcore;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="loadSettings" Type="Microsoft.Build.Evaluation.ProjectLoadSettings" Index="5" FrameworkAlternate="msbuild-15;msbuild-15-netcore;msbuild-16;msbuild-16-netcore;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="xml"><span data-ttu-id="fb927-285">要使用的 ProjectRootElement</span><span class="sxs-lookup"><span data-stu-id="fb927-285">ProjectRootElement to use</span></span></param>
        <param name="globalProperties"><span data-ttu-id="fb927-286">要计算的全局属性。</span><span class="sxs-lookup"><span data-stu-id="fb927-286">Global properties to evaluate with.</span></span> <span data-ttu-id="fb927-287">可以为 null，在此情况下，将使用包含项目集合的全局属性。</span><span class="sxs-lookup"><span data-stu-id="fb927-287">May be null in which case the containing project collection's global properties will be used.</span></span></param>
        <param name="toolsVersion"><span data-ttu-id="fb927-288">用于计算的工具版本。</span><span class="sxs-lookup"><span data-stu-id="fb927-288">Tools version to evaluate with.</span></span> <span data-ttu-id="fb927-289">可能为 null</span><span class="sxs-lookup"><span data-stu-id="fb927-289">May be null</span></span></param>
        <param name="subToolsetVersion"><span data-ttu-id="fb927-290">用于显式计算工具集的子工具集版本。</span><span class="sxs-lookup"><span data-stu-id="fb927-290">Sub-toolset version to explicitly evaluate the toolset with.</span></span>  <span data-ttu-id="fb927-291">可能为 null。</span><span class="sxs-lookup"><span data-stu-id="fb927-291">May be null.</span></span></param>
        <param name="projectCollection"><span data-ttu-id="fb927-292">项目添加到的 <see cref="P:Microsoft.Build.Evaluation.Project.ProjectCollection" />。</span><span class="sxs-lookup"><span data-stu-id="fb927-292">The <see cref="P:Microsoft.Build.Evaluation.Project.ProjectCollection" /> the project is added to.</span></span></param>
        <param name="loadSettings"><span data-ttu-id="fb927-293">要用于计算的 <see cref="T:Microsoft.Build.Evaluation.ProjectLoadSettings" />。</span><span class="sxs-lookup"><span data-stu-id="fb927-293">The <see cref="T:Microsoft.Build.Evaluation.ProjectLoadSettings" /> to use for evaluation.</span></span></param>
        <summary><span data-ttu-id="fb927-294">在 ProjectRootElement 对象上构造，使用指定的全局属性和工具集（可能其中一个为 null，也可能两者都为 null）进行计算。</span><span class="sxs-lookup"><span data-stu-id="fb927-294">Construct over a ProjectRootElement object, evaluating with specified global properties and toolset, either or both of which may be null.</span></span>
<span data-ttu-id="fb927-295">如果项目有名称，添加到全局项目集合中，否则在命名后添加。</span><span class="sxs-lookup"><span data-stu-id="fb927-295">Project is added to the global project collection if it has a name, or else when it is named.</span></span>
<span data-ttu-id="fb927-296">如果计算失败，将引发 InvalidProjectFileException。</span><span class="sxs-lookup"><span data-stu-id="fb927-296">Throws InvalidProjectFileException if the evaluation fails.</span></span>
<span data-ttu-id="fb927-297">如果已在项目集合中加载了等效项目，则会引发 InvalidOperationException。</span><span class="sxs-lookup"><span data-stu-id="fb927-297">Throws InvalidOperationException if there is already an equivalent project loaded in the project collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fb927-298">当向此项目或给定的项目根提供源项目文件的完整路径时，此项目将添加到给定的项目集合中。</span><span class="sxs-lookup"><span data-stu-id="fb927-298">This project is added to the given project collection when either this project or the given project root is given the full path to the source project file.</span></span>  
  
 <span data-ttu-id="fb927-299">如果计算失败，将引发 Microsoft.build.buildengine.invalidprojectfileexception。</span><span class="sxs-lookup"><span data-stu-id="fb927-299">Throws InvalidProjectFileException if the evaluation fails.</span></span> <span data-ttu-id="fb927-300">如果已在项目集合中加载了等效项目，则会引发 InvalidOperationException。</span><span class="sxs-lookup"><span data-stu-id="fb927-300">Throws InvalidOperationException if there is already an equivalent project loaded in the project collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Project (string projectFile, System.Collections.Generic.IDictionary&lt;string,string&gt; globalProperties, string toolsVersion, string subToolsetVersion, Microsoft.Build.Evaluation.ProjectCollection projectCollection, Microsoft.Build.Evaluation.ProjectLoadSettings loadSettings);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string projectFile, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; globalProperties, string toolsVersion, string subToolsetVersion, class Microsoft.Build.Evaluation.ProjectCollection projectCollection, valuetype Microsoft.Build.Evaluation.ProjectLoadSettings loadSettings) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,Microsoft.Build.Evaluation.ProjectCollection,Microsoft.Build.Evaluation.ProjectLoadSettings)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (projectFile As String, globalProperties As IDictionary(Of String, String), toolsVersion As String, subToolsetVersion As String, projectCollection As ProjectCollection, loadSettings As ProjectLoadSettings)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Project(System::String ^ projectFile, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ globalProperties, System::String ^ toolsVersion, System::String ^ subToolsetVersion, Microsoft::Build::Evaluation::ProjectCollection ^ projectCollection, Microsoft::Build::Evaluation::ProjectLoadSettings loadSettings);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Evaluation.Project : string * System.Collections.Generic.IDictionary&lt;string, string&gt; * string * string * Microsoft.Build.Evaluation.ProjectCollection * Microsoft.Build.Evaluation.ProjectLoadSettings -&gt; Microsoft.Build.Evaluation.Project" Usage="new Microsoft.Build.Evaluation.Project (projectFile, globalProperties, toolsVersion, subToolsetVersion, projectCollection, loadSettings)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="projectFile" Type="System.String" Index="0" FrameworkAlternate="msbuild-15;msbuild-15-netcore;msbuild-16;msbuild-16-netcore;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="globalProperties" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" Index="1" FrameworkAlternate="msbuild-15;msbuild-15-netcore;msbuild-16;msbuild-16-netcore;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="toolsVersion" Type="System.String" Index="2" FrameworkAlternate="msbuild-15;msbuild-15-netcore;msbuild-16;msbuild-16-netcore;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="subToolsetVersion" Type="System.String" Index="3" FrameworkAlternate="msbuild-15;msbuild-15-netcore;msbuild-16;msbuild-16-netcore;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="projectCollection" Type="Microsoft.Build.Evaluation.ProjectCollection" Index="4" FrameworkAlternate="msbuild-15;msbuild-15-netcore;msbuild-16;msbuild-16-netcore;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="loadSettings" Type="Microsoft.Build.Evaluation.ProjectLoadSettings" Index="5" FrameworkAlternate="msbuild-15;msbuild-15-netcore;msbuild-16;msbuild-16-netcore;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="projectFile"><span data-ttu-id="fb927-301">项目文件</span><span class="sxs-lookup"><span data-stu-id="fb927-301">The project file</span></span></param>
        <param name="globalProperties"><span data-ttu-id="fb927-302">全局属性。</span><span class="sxs-lookup"><span data-stu-id="fb927-302">The global properties.</span></span> <span data-ttu-id="fb927-303">可能为 null。</span><span class="sxs-lookup"><span data-stu-id="fb927-303">May be null.</span></span></param>
        <param name="toolsVersion"><span data-ttu-id="fb927-304">工具版本。</span><span class="sxs-lookup"><span data-stu-id="fb927-304">The tools version.</span></span> <span data-ttu-id="fb927-305">可能为 null。</span><span class="sxs-lookup"><span data-stu-id="fb927-305">May be null.</span></span></param>
        <param name="subToolsetVersion"><span data-ttu-id="fb927-306">用于显式计算工具集的子工具集版本。</span><span class="sxs-lookup"><span data-stu-id="fb927-306">Sub-toolset version to explicitly evaluate the toolset with.</span></span>  <span data-ttu-id="fb927-307">可能为 null。</span><span class="sxs-lookup"><span data-stu-id="fb927-307">May be null.</span></span></param>
        <param name="projectCollection"><span data-ttu-id="fb927-308">此项目应与之相关联的集合。</span><span class="sxs-lookup"><span data-stu-id="fb927-308">The collection with which this project should be associated.</span></span> <span data-ttu-id="fb927-309">不能为 null。</span><span class="sxs-lookup"><span data-stu-id="fb927-309">May not be null.</span></span></param>
        <param name="loadSettings"><span data-ttu-id="fb927-310">此项目的加载设置。</span><span class="sxs-lookup"><span data-stu-id="fb927-310">The load settings for this project.</span></span></param>
        <summary><span data-ttu-id="fb927-311">在现有项目文件上构造，使用指定的全局属性并使用提供的工具版本（可能其中一个为 null，也可能两者都为 null）进行计算。</span><span class="sxs-lookup"><span data-stu-id="fb927-311">Construct over an existing project file, evaluating with the specified global properties and using the tools version provided, either or both of which may be null.</span></span>
<span data-ttu-id="fb927-312">项目添加到全局项目集合中。</span><span class="sxs-lookup"><span data-stu-id="fb927-312">Project is added to the global project collection.</span></span>
<span data-ttu-id="fb927-313">如果计算失败，将引发 InvalidProjectFileException。</span><span class="sxs-lookup"><span data-stu-id="fb927-313">Throws InvalidProjectFileException if the evaluation fails.</span></span>
<span data-ttu-id="fb927-314">如果已在项目集合中加载了等效项目，则会引发 InvalidOperationException。</span><span class="sxs-lookup"><span data-stu-id="fb927-314">Throws InvalidOperationException if there is already an equivalent project loaded in the project collection.</span></span>
<span data-ttu-id="fb927-315">可能引发与 IO 相关的异常。</span><span class="sxs-lookup"><span data-stu-id="fb927-315">May throw IO-related exceptions.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fb927-316">项目将添加到给定的项目集合中。</span><span class="sxs-lookup"><span data-stu-id="fb927-316">The project is added to the given project collection.</span></span>  
  
 <span data-ttu-id="fb927-317">如果计算失败，将引发 Microsoft.build.buildengine.invalidprojectfileexception。</span><span class="sxs-lookup"><span data-stu-id="fb927-317">Throws InvalidProjectFileException if the evaluation fails.</span></span> <span data-ttu-id="fb927-318">如果已在项目集合中加载了等效项目，则会引发 InvalidOperationException。</span><span class="sxs-lookup"><span data-stu-id="fb927-318">Throws InvalidOperationException if there is already an equivalent project loaded in the project collection.</span></span> <span data-ttu-id="fb927-319">可能引发与 IO 相关的异常。</span><span class="sxs-lookup"><span data-stu-id="fb927-319">May throw IO-related exceptions.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Project (System.Xml.XmlReader xmlReader, System.Collections.Generic.IDictionary&lt;string,string&gt; globalProperties, string toolsVersion, string subToolsetVersion, Microsoft.Build.Evaluation.ProjectCollection projectCollection, Microsoft.Build.Evaluation.ProjectLoadSettings loadSettings);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.XmlReader xmlReader, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; globalProperties, string toolsVersion, string subToolsetVersion, class Microsoft.Build.Evaluation.ProjectCollection projectCollection, valuetype Microsoft.Build.Evaluation.ProjectLoadSettings loadSettings) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.#ctor(System.Xml.XmlReader,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,Microsoft.Build.Evaluation.ProjectCollection,Microsoft.Build.Evaluation.ProjectLoadSettings)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (xmlReader As XmlReader, globalProperties As IDictionary(Of String, String), toolsVersion As String, subToolsetVersion As String, projectCollection As ProjectCollection, loadSettings As ProjectLoadSettings)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Project(System::Xml::XmlReader ^ xmlReader, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ globalProperties, System::String ^ toolsVersion, System::String ^ subToolsetVersion, Microsoft::Build::Evaluation::ProjectCollection ^ projectCollection, Microsoft::Build::Evaluation::ProjectLoadSettings loadSettings);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Evaluation.Project : System.Xml.XmlReader * System.Collections.Generic.IDictionary&lt;string, string&gt; * string * string * Microsoft.Build.Evaluation.ProjectCollection * Microsoft.Build.Evaluation.ProjectLoadSettings -&gt; Microsoft.Build.Evaluation.Project" Usage="new Microsoft.Build.Evaluation.Project (xmlReader, globalProperties, toolsVersion, subToolsetVersion, projectCollection, loadSettings)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="xmlReader" Type="System.Xml.XmlReader" Index="0" FrameworkAlternate="msbuild-15;msbuild-15-netcore;msbuild-16;msbuild-16-netcore;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="globalProperties" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" Index="1" FrameworkAlternate="msbuild-15;msbuild-15-netcore;msbuild-16;msbuild-16-netcore;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="toolsVersion" Type="System.String" Index="2" FrameworkAlternate="msbuild-15;msbuild-15-netcore;msbuild-16;msbuild-16-netcore;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="subToolsetVersion" Type="System.String" Index="3" FrameworkAlternate="msbuild-15;msbuild-15-netcore;msbuild-16;msbuild-16-netcore;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="projectCollection" Type="Microsoft.Build.Evaluation.ProjectCollection" Index="4" FrameworkAlternate="msbuild-15;msbuild-15-netcore;msbuild-16;msbuild-16-netcore;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="loadSettings" Type="Microsoft.Build.Evaluation.ProjectLoadSettings" Index="5" FrameworkAlternate="msbuild-15;msbuild-15-netcore;msbuild-16;msbuild-16-netcore;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="xmlReader"><span data-ttu-id="fb927-320">从中读取项目的 Xml 读取器。</span><span class="sxs-lookup"><span data-stu-id="fb927-320">Xml reader to read project from</span></span></param>
        <param name="globalProperties"><span data-ttu-id="fb927-321">要计算的全局属性。</span><span class="sxs-lookup"><span data-stu-id="fb927-321">Global properties to evaluate with.</span></span> <span data-ttu-id="fb927-322">可以为 null，在此情况下，将使用包含项目集合的全局属性。</span><span class="sxs-lookup"><span data-stu-id="fb927-322">May be null in which case the containing project collection's global properties will be used.</span></span></param>
        <param name="toolsVersion"><span data-ttu-id="fb927-323">用于计算的工具版本。</span><span class="sxs-lookup"><span data-stu-id="fb927-323">Tools version to evaluate with.</span></span> <span data-ttu-id="fb927-324">可能为 null</span><span class="sxs-lookup"><span data-stu-id="fb927-324">May be null</span></span></param>
        <param name="subToolsetVersion"><span data-ttu-id="fb927-325">用于显式计算工具集的子工具集版本。</span><span class="sxs-lookup"><span data-stu-id="fb927-325">Sub-toolset version to explicitly evaluate the toolset with.</span></span>  <span data-ttu-id="fb927-326">可能为 null。</span><span class="sxs-lookup"><span data-stu-id="fb927-326">May be null.</span></span></param>
        <param name="projectCollection"><span data-ttu-id="fb927-327">此项目应与之相关联的集合。</span><span class="sxs-lookup"><span data-stu-id="fb927-327">The collection with which this project should be associated.</span></span> <span data-ttu-id="fb927-328">不能为 null。</span><span class="sxs-lookup"><span data-stu-id="fb927-328">May not be null.</span></span></param>
        <param name="loadSettings"><span data-ttu-id="fb927-329">此项目的加载设置。</span><span class="sxs-lookup"><span data-stu-id="fb927-329">The load settings for this project.</span></span></param>
        <summary><span data-ttu-id="fb927-330">在项目 xml 的文本读取器上构造，使用指定的全局属性和工具集（可能其中一个为 null，也可能两者都为 null）进行计算。</span><span class="sxs-lookup"><span data-stu-id="fb927-330">Construct over a text reader over project xml, evaluating with specified global properties and toolset, either or both of which may be null.</span></span>
<span data-ttu-id="fb927-331">项目命名后，将添加到指定项目集合中。</span><span class="sxs-lookup"><span data-stu-id="fb927-331">Project will be added to the specified project collection when it is named.</span></span>
<span data-ttu-id="fb927-332">如果计算失败，将引发 InvalidProjectFileException。</span><span class="sxs-lookup"><span data-stu-id="fb927-332">Throws InvalidProjectFileException if the evaluation fails.</span></span>
<span data-ttu-id="fb927-333">如果已在项目集合中加载了等效项目，则会引发 InvalidOperationException。</span><span class="sxs-lookup"><span data-stu-id="fb927-333">Throws InvalidOperationException if there is already an equivalent project loaded in the project collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fb927-334">当向此项目或给定的项目根提供源项目文件的完整路径时，此项目将添加到给定的项目集合中。</span><span class="sxs-lookup"><span data-stu-id="fb927-334">This project is added to the given project collection when either this project or the given project root is given the full path to the source project file.</span></span>  
  
 <span data-ttu-id="fb927-335">如果计算失败，将引发 Microsoft.build.buildengine.invalidprojectfileexception。</span><span class="sxs-lookup"><span data-stu-id="fb927-335">Throws InvalidProjectFileException if the evaluation fails.</span></span> <span data-ttu-id="fb927-336">如果已在项目集合中加载了等效项目，则会引发 InvalidOperationException。</span><span class="sxs-lookup"><span data-stu-id="fb927-336">Throws InvalidOperationException if there is already an equivalent project loaded in the project collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddItem">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="fb927-337">添加项。</span><span class="sxs-lookup"><span data-stu-id="fb927-337">Adds an item.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddItem">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Microsoft.Build.Evaluation.ProjectItem&gt; AddItem (string itemType, string unevaluatedInclude);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IList`1&lt;class Microsoft.Build.Evaluation.ProjectItem&gt; AddItem(string itemType, string unevaluatedInclude) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.AddItem(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddItem (itemType As String, unevaluatedInclude As String) As IList(Of ProjectItem)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IList&lt;Microsoft::Build::Evaluation::ProjectItem ^&gt; ^ AddItem(System::String ^ itemType, System::String ^ unevaluatedInclude);" />
      <MemberSignature Language="F#" Value="member this.AddItem : string * string -&gt; System.Collections.Generic.IList&lt;Microsoft.Build.Evaluation.ProjectItem&gt;" Usage="project.AddItem (itemType, unevaluatedInclude)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Microsoft.Build.Evaluation.ProjectItem&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemType" Type="System.String" />
        <Parameter Name="unevaluatedInclude" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="itemType"><span data-ttu-id="fb927-338">所添加的项的项类型。</span><span class="sxs-lookup"><span data-stu-id="fb927-338">The item type of the added item.</span></span></param>
        <param name="unevaluatedInclude"><span data-ttu-id="fb927-339">要添加的项的 Include 特性。</span><span class="sxs-lookup"><span data-stu-id="fb927-339">Include attribute of the item to be added.</span></span></param>
        <summary><span data-ttu-id="fb927-340">向项目中添加不包含元数据的项。</span><span class="sxs-lookup"><span data-stu-id="fb927-340">Adds an item with no metadata to the project.</span></span>
<span data-ttu-id="fb927-341">任何元数据都可以随后进行添加。</span><span class="sxs-lookup"><span data-stu-id="fb927-341">Any metadata can be added subsequently.</span></span>
<span data-ttu-id="fb927-342">如果通配符表达式已经包含新项，则不会修改 XML。</span><span class="sxs-lookup"><span data-stu-id="fb927-342">Does not modify the XML if a wildcard expression would already include the new item.</span></span>
<span data-ttu-id="fb927-343">尽力计算：展开所有项。</span><span class="sxs-lookup"><span data-stu-id="fb927-343">Evaluates on a best-effort basis: -expands with all items.</span></span> <span data-ttu-id="fb927-344">可以使用在新项下的 XML 中定义的项，尽管在实际计算中不会使用它们。</span><span class="sxs-lookup"><span data-stu-id="fb927-344">Items that are defined in the XML below the new item may be used, even though in a real evaluation they would not be.</span></span>
<span data-ttu-id="fb927-345">- 仅计算此项。</span><span class="sxs-lookup"><span data-stu-id="fb927-345">-only this item is evaluated.</span></span> <span data-ttu-id="fb927-346">其他可能依赖它的项不受影响。</span><span class="sxs-lookup"><span data-stu-id="fb927-346">Other items that might depend on it is not affected.</span></span>
<span data-ttu-id="fb927-347">当然，这是一种很方便的方法，在重新计算之前，它不一定会使项目处于完全一致的状态。</span><span class="sxs-lookup"><span data-stu-id="fb927-347">This is a convenience that it is understood does not necessarily leave the project in a perfectly self consistent state until reevaluation.</span></span></summary>
        <returns><span data-ttu-id="fb927-348">添加的项。</span><span class="sxs-lookup"><span data-stu-id="fb927-348">The added item.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fb927-349">以后可以添加任何元数据。</span><span class="sxs-lookup"><span data-stu-id="fb927-349">Any metadata can be added later.</span></span> <span data-ttu-id="fb927-350">如果通配符表达式已包含新项，则不会修改项目源。</span><span class="sxs-lookup"><span data-stu-id="fb927-350">Does not modify the project source if a wildcard expression already includes the new item.</span></span>  
  
 <span data-ttu-id="fb927-351">评估会尽力进行。</span><span class="sxs-lookup"><span data-stu-id="fb927-351">Evaluation takes place on a best-effort basis.</span></span> <span data-ttu-id="fb927-352">在新项后面的项目源中定义的项可用于计算。</span><span class="sxs-lookup"><span data-stu-id="fb927-352">Items that are defined in the project source following the new item may be used for evaluation.</span></span> <span data-ttu-id="fb927-353">仅评估此项。</span><span class="sxs-lookup"><span data-stu-id="fb927-353">Only this item is evaluated.</span></span> <span data-ttu-id="fb927-354">可能依赖于它的其他项不受影响。</span><span class="sxs-lookup"><span data-stu-id="fb927-354">Other items that might depend on it are not affected.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddItem">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Microsoft.Build.Evaluation.ProjectItem&gt; AddItem (string itemType, string unevaluatedInclude, System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;string,string&gt;&gt; metadata);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IList`1&lt;class Microsoft.Build.Evaluation.ProjectItem&gt; AddItem(string itemType, string unevaluatedInclude, class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;string, string&gt;&gt; metadata) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.AddItem(System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})" />
      <MemberSignature Language="VB.NET" Value="Public Function AddItem (itemType As String, unevaluatedInclude As String, metadata As IEnumerable(Of KeyValuePair(Of String, String))) As IList(Of ProjectItem)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IList&lt;Microsoft::Build::Evaluation::ProjectItem ^&gt; ^ AddItem(System::String ^ itemType, System::String ^ unevaluatedInclude, System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;System::String ^, System::String ^&gt;&gt; ^ metadata);" />
      <MemberSignature Language="F#" Value="member this.AddItem : string * string * seq&lt;System.Collections.Generic.KeyValuePair&lt;string, string&gt;&gt; -&gt; System.Collections.Generic.IList&lt;Microsoft.Build.Evaluation.ProjectItem&gt;" Usage="project.AddItem (itemType, unevaluatedInclude, metadata)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Microsoft.Build.Evaluation.ProjectItem&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemType" Type="System.String" />
        <Parameter Name="unevaluatedInclude" Type="System.String" />
        <Parameter Name="metadata" Type="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.String&gt;&gt;" />
      </Parameters>
      <Docs>
        <param name="itemType"><span data-ttu-id="fb927-355">所添加的项的项类型。</span><span class="sxs-lookup"><span data-stu-id="fb927-355">The item type of the added item.</span></span></param>
        <param name="unevaluatedInclude"><span data-ttu-id="fb927-356">要添加的项的 Include 特性。</span><span class="sxs-lookup"><span data-stu-id="fb927-356">Include attribute of the item to be added.</span></span></param>
        <param name="metadata"><span data-ttu-id="fb927-357">所添加的项的元数据。</span><span class="sxs-lookup"><span data-stu-id="fb927-357">The metadata of the added item.</span></span></param>
        <summary><span data-ttu-id="fb927-358">向此项目中添加包含元数据的项。</span><span class="sxs-lookup"><span data-stu-id="fb927-358">Adds an item with metadata to the project.</span></span>
<span data-ttu-id="fb927-359">元数据可能为 null，以指示没有元数据。</span><span class="sxs-lookup"><span data-stu-id="fb927-359">Metadata may be null, indicating no metadata.</span></span>
<span data-ttu-id="fb927-360">如果通配符表达式已经包含新项，则不会修改 XML。</span><span class="sxs-lookup"><span data-stu-id="fb927-360">Does not modify the XML if a wildcard expression would already include the new item.</span></span>
<span data-ttu-id="fb927-361">尽力计算：展开所有项。</span><span class="sxs-lookup"><span data-stu-id="fb927-361">Evaluates on a best-effort basis: -expands with all items.</span></span> <span data-ttu-id="fb927-362">可以使用在新项下的 XML 中定义的项，尽管在实际计算中不会使用它们。</span><span class="sxs-lookup"><span data-stu-id="fb927-362">Items that are defined in the XML below the new item may be used, even though in a real evaluation they would not be.</span></span>
<span data-ttu-id="fb927-363">- 仅计算此项。</span><span class="sxs-lookup"><span data-stu-id="fb927-363">-only this item is evaluated.</span></span> <span data-ttu-id="fb927-364">其他可能依赖它的项不受影响。</span><span class="sxs-lookup"><span data-stu-id="fb927-364">Other items that might depend on it is not affected.</span></span>
<span data-ttu-id="fb927-365">当然，这是一种很方便的方法，在重新计算之前，它不一定会使项目处于完全一致的状态。</span><span class="sxs-lookup"><span data-stu-id="fb927-365">This is a convenience that it is understood does not necessarily leave the project in a perfectly self consistent state until reevaluation.</span></span></summary>
        <returns><span data-ttu-id="fb927-366">添加的项。</span><span class="sxs-lookup"><span data-stu-id="fb927-366">The added item.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fb927-367">元数据可能为 null，表示没有元数据。</span><span class="sxs-lookup"><span data-stu-id="fb927-367">The metadata may be null, which indicates no metadata.</span></span>  
  
 <span data-ttu-id="fb927-368">评估会尽力进行。</span><span class="sxs-lookup"><span data-stu-id="fb927-368">Evaluation takes place on a best-effort basis.</span></span> <span data-ttu-id="fb927-369">在新项后面的项目源中定义的项可用于计算。</span><span class="sxs-lookup"><span data-stu-id="fb927-369">Items that are defined in the project source following the new item may be used for evaluation.</span></span> <span data-ttu-id="fb927-370">仅评估此项。</span><span class="sxs-lookup"><span data-stu-id="fb927-370">Only this item is evaluated.</span></span> <span data-ttu-id="fb927-371">可能依赖于它的其他项不受影响。</span><span class="sxs-lookup"><span data-stu-id="fb927-371">Other items that might depend on it are not affected.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddItemFast">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="fb927-372">向项目中添加不包含元数据的项。</span><span class="sxs-lookup"><span data-stu-id="fb927-372">Adds an item with no metadata to the project.</span></span>  <span data-ttu-id="fb927-373">将不会尝试查看现有的通配符是否已匹配新项，除非它是项组中的第一项。</span><span class="sxs-lookup"><span data-stu-id="fb927-373">Makes no effort to see if an existing wildcard would already match the new item, unless it is the first item in an item group.</span></span>  <span data-ttu-id="fb927-374">也不会尝试将新项放置到相似项的附近。</span><span class="sxs-lookup"><span data-stu-id="fb927-374">Makes no effort to locate the new item near similar items.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddItemFast">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Microsoft.Build.Evaluation.ProjectItem&gt; AddItemFast (string itemType, string unevaluatedInclude);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IList`1&lt;class Microsoft.Build.Evaluation.ProjectItem&gt; AddItemFast(string itemType, string unevaluatedInclude) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.AddItemFast(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddItemFast (itemType As String, unevaluatedInclude As String) As IList(Of ProjectItem)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IList&lt;Microsoft::Build::Evaluation::ProjectItem ^&gt; ^ AddItemFast(System::String ^ itemType, System::String ^ unevaluatedInclude);" />
      <MemberSignature Language="F#" Value="member this.AddItemFast : string * string -&gt; System.Collections.Generic.IList&lt;Microsoft.Build.Evaluation.ProjectItem&gt;" Usage="project.AddItemFast (itemType, unevaluatedInclude)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Microsoft.Build.Evaluation.ProjectItem&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemType" Type="System.String" />
        <Parameter Name="unevaluatedInclude" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="itemType"><span data-ttu-id="fb927-375">要添加的项类型。</span><span class="sxs-lookup"><span data-stu-id="fb927-375">The item type to be added.</span></span></param>
        <param name="unevaluatedInclude"><span data-ttu-id="fb927-376">要添加到该项的未计算 Include 特性。</span><span class="sxs-lookup"><span data-stu-id="fb927-376">The unevaluated Include attribute to be added to the item.</span></span></param>
        <summary><span data-ttu-id="fb927-377">向项目中添加不包含元数据的项。</span><span class="sxs-lookup"><span data-stu-id="fb927-377">Adds an item with no metadata to the project.</span></span>
<span data-ttu-id="fb927-378">将不会尝试查看现有的通配符是否已匹配新项，除非它是项组中的第一项。</span><span class="sxs-lookup"><span data-stu-id="fb927-378">Makes no effort to see if an existing wildcard would already match the new item, unless it is the first item in an item group.</span></span>
<span data-ttu-id="fb927-379">也不会尝试将新项放置到相似项的附近。</span><span class="sxs-lookup"><span data-stu-id="fb927-379">Makes no effort to locate the new item near similar items.</span></span>
<span data-ttu-id="fb927-380">将项追加到不具有条件、没有子级或者其第一个子级为同一类型的项的第一个项组。</span><span class="sxs-lookup"><span data-stu-id="fb927-380">Appends the item to the first item group that does not have a condition and has either no children or whose first child is an item of the same type.</span></span>
<span data-ttu-id="fb927-381">尽力计算：展开所有项。</span><span class="sxs-lookup"><span data-stu-id="fb927-381">Evaluates on a best-effort basis: -expands with all items.</span></span> <span data-ttu-id="fb927-382">可以使用在新项下的 XML 中定义的项，尽管在实际计算中不会使用它们。</span><span class="sxs-lookup"><span data-stu-id="fb927-382">Items that are defined in the XML below the new item may be used, even though in a real evaluation they would not be.</span></span>
<span data-ttu-id="fb927-383">- 仅计算此项。</span><span class="sxs-lookup"><span data-stu-id="fb927-383">-only this item is evaluated.</span></span> <span data-ttu-id="fb927-384">其他可能依赖它的项不受影响。</span><span class="sxs-lookup"><span data-stu-id="fb927-384">Other items that might depend on it is not affected.</span></span>
<span data-ttu-id="fb927-385">当然，这是一种很方便的方法，在重新计算之前，它不一定会使项目处于完全一致的状态。</span><span class="sxs-lookup"><span data-stu-id="fb927-385">This is a convenience that it is understood does not necessarily leave the project in a perfectly self consistent state until reevaluation.</span></span></summary>
        <returns><span data-ttu-id="fb927-386">所添加的项目项的列表。</span><span class="sxs-lookup"><span data-stu-id="fb927-386">A list of the project items added.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fb927-387">将项追加到不具有条件并且没有子级或者其第一个子级为同一类型的项的第一个项组。</span><span class="sxs-lookup"><span data-stu-id="fb927-387">Appends the item to the first item group that does not have a condition and has either no children or whose first child is an item of the same type.</span></span>  
  
 <span data-ttu-id="fb927-388">按最大努力计算：-使用所有项展开。</span><span class="sxs-lookup"><span data-stu-id="fb927-388">Evaluates on a best-effort basis: -expands with all items.</span></span> <span data-ttu-id="fb927-389">可以使用在新项下的 XML 中定义的项，即使在实际计算中不是这样。</span><span class="sxs-lookup"><span data-stu-id="fb927-389">Items that are defined in the XML below the new item may be used, even though in a real evaluation they would not be.</span></span>  
  
 <span data-ttu-id="fb927-390">仅评估此项。</span><span class="sxs-lookup"><span data-stu-id="fb927-390">Only this item is evaluated.</span></span> <span data-ttu-id="fb927-391">可能依赖于它的其他项不受影响。</span><span class="sxs-lookup"><span data-stu-id="fb927-391">Other items that might depend on it are not affected.</span></span>  
  
 <span data-ttu-id="fb927-392">这是一种很方便的方法，它不一定会使项目处于完全一致的状态，直到重新评估。</span><span class="sxs-lookup"><span data-stu-id="fb927-392">This is a convenience that it is understood does not necessarily leave the project in a perfectly self consistent state until reevaluation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddItemFast">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Microsoft.Build.Evaluation.ProjectItem&gt; AddItemFast (string itemType, string unevaluatedInclude, System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;string,string&gt;&gt; metadata);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IList`1&lt;class Microsoft.Build.Evaluation.ProjectItem&gt; AddItemFast(string itemType, string unevaluatedInclude, class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;string, string&gt;&gt; metadata) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.AddItemFast(System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})" />
      <MemberSignature Language="VB.NET" Value="Public Function AddItemFast (itemType As String, unevaluatedInclude As String, metadata As IEnumerable(Of KeyValuePair(Of String, String))) As IList(Of ProjectItem)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IList&lt;Microsoft::Build::Evaluation::ProjectItem ^&gt; ^ AddItemFast(System::String ^ itemType, System::String ^ unevaluatedInclude, System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;System::String ^, System::String ^&gt;&gt; ^ metadata);" />
      <MemberSignature Language="F#" Value="member this.AddItemFast : string * string * seq&lt;System.Collections.Generic.KeyValuePair&lt;string, string&gt;&gt; -&gt; System.Collections.Generic.IList&lt;Microsoft.Build.Evaluation.ProjectItem&gt;" Usage="project.AddItemFast (itemType, unevaluatedInclude, metadata)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Microsoft.Build.Evaluation.ProjectItem&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemType" Type="System.String" />
        <Parameter Name="unevaluatedInclude" Type="System.String" />
        <Parameter Name="metadata" Type="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.String&gt;&gt;" />
      </Parameters>
      <Docs>
        <param name="itemType"><span data-ttu-id="fb927-393">要添加的项类型。</span><span class="sxs-lookup"><span data-stu-id="fb927-393">The item type to be added.</span></span></param>
        <param name="unevaluatedInclude"><span data-ttu-id="fb927-394">要添加到该项的未计算 Include 特性。</span><span class="sxs-lookup"><span data-stu-id="fb927-394">The unevaluated Include attribute to be added to the item.</span></span></param>
        <param name="metadata"><span data-ttu-id="fb927-395">要添加的元数据。</span><span class="sxs-lookup"><span data-stu-id="fb927-395">The metadata to be added.</span></span></param>
        <summary><span data-ttu-id="fb927-396">向此项目中添加包含元数据的项。</span><span class="sxs-lookup"><span data-stu-id="fb927-396">Adds an item with metadata to the project.</span></span>
<span data-ttu-id="fb927-397">元数据可能为 null，以指示没有元数据。</span><span class="sxs-lookup"><span data-stu-id="fb927-397">Metadata may be null, indicating no metadata.</span></span>
<span data-ttu-id="fb927-398">将不会尝试查看现有的通配符是否已匹配新项，除非它是项组中的第一项。</span><span class="sxs-lookup"><span data-stu-id="fb927-398">Makes no effort to see if an existing wildcard would already match the new item, unless it is the first item in an item group.</span></span>
<span data-ttu-id="fb927-399">也不会尝试将新项放置到相似项的附近。</span><span class="sxs-lookup"><span data-stu-id="fb927-399">Makes no effort to locate the new item near similar items.</span></span>
<span data-ttu-id="fb927-400">将项追加到不具有条件、没有子级或者其第一个子级为同一类型的项的第一个项组。</span><span class="sxs-lookup"><span data-stu-id="fb927-400">Appends the item to the first item group that does not have a condition and has either no children or whose first child is an item of the same type.</span></span>
<span data-ttu-id="fb927-401">尽力计算：展开所有项。</span><span class="sxs-lookup"><span data-stu-id="fb927-401">Evaluates on a best-effort basis: -expands with all items.</span></span> <span data-ttu-id="fb927-402">可以使用在新项下的 XML 中定义的项，尽管在实际计算中不会使用它们。</span><span class="sxs-lookup"><span data-stu-id="fb927-402">Items that are defined in the XML below the new item may be used, even though in a real evaluation they would not be.</span></span>
<span data-ttu-id="fb927-403">- 仅计算此项。</span><span class="sxs-lookup"><span data-stu-id="fb927-403">-only this item is evaluated.</span></span> <span data-ttu-id="fb927-404">其他可能依赖它的项不受影响。</span><span class="sxs-lookup"><span data-stu-id="fb927-404">Other items that might depend on it is not affected.</span></span>
<span data-ttu-id="fb927-405">当然，这是一种很方便的方法，在重新计算之前，它不一定会使项目处于完全一致的状态。</span><span class="sxs-lookup"><span data-stu-id="fb927-405">This is a convenience that it is understood does not necessarily leave the project in a perfectly self consistent state until reevaluation.</span></span></summary>
        <returns><span data-ttu-id="fb927-406">所添加的项目项的列表。</span><span class="sxs-lookup"><span data-stu-id="fb927-406">A list of the project items added.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fb927-407">将项追加到不具有条件并且没有子级或者其第一个子级为同一类型的项的第一个项组。</span><span class="sxs-lookup"><span data-stu-id="fb927-407">Appends the item to the first item group that does not have a condition and has either no children or whose first child is an item of the same type.</span></span>  
  
 <span data-ttu-id="fb927-408">按最大努力计算：-使用所有项展开。</span><span class="sxs-lookup"><span data-stu-id="fb927-408">Evaluates on a best-effort basis: -expands with all items.</span></span> <span data-ttu-id="fb927-409">可以使用在新项下的 XML 中定义的项，即使在实际计算中不是这样。</span><span class="sxs-lookup"><span data-stu-id="fb927-409">Items that are defined in the XML below the new item may be used, even though in a real evaluation they would not be.</span></span>  
  
 <span data-ttu-id="fb927-410">仅评估此项。</span><span class="sxs-lookup"><span data-stu-id="fb927-410">Only this item is evaluated.</span></span> <span data-ttu-id="fb927-411">可能依赖于它的其他项不受影响。</span><span class="sxs-lookup"><span data-stu-id="fb927-411">Other items that might depend on it is not affected.</span></span>  
  
 <span data-ttu-id="fb927-412">这是一种很方便的方法，它不一定会使项目处于完全一致的状态，直到重新评估。</span><span class="sxs-lookup"><span data-stu-id="fb927-412">This is a convenience that it is understood does not necessarily leave the project in a perfectly self consistent state until reevaluation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllEvaluatedItemDefinitionMetadata">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectMetadata&gt; AllEvaluatedItemDefinitionMetadata { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;class Microsoft.Build.Evaluation.ProjectMetadata&gt; AllEvaluatedItemDefinitionMetadata" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.AllEvaluatedItemDefinitionMetadata" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AllEvaluatedItemDefinitionMetadata As ICollection(Of ProjectMetadata)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::ICollection&lt;Microsoft::Build::Evaluation::ProjectMetadata ^&gt; ^ AllEvaluatedItemDefinitionMetadata { System::Collections::Generic::ICollection&lt;Microsoft::Build::Evaluation::ProjectMetadata ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AllEvaluatedItemDefinitionMetadata : System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectMetadata&gt;" Usage="Microsoft.Build.Evaluation.Project.AllEvaluatedItemDefinitionMetadata" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectMetadata&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fb927-413">在计算过程中遇到的项定义元数据。</span><span class="sxs-lookup"><span data-stu-id="fb927-413">Item definition metadata encountered during evaluation.</span></span> <span data-ttu-id="fb927-414">在进行第二轮计算时读取这些项。</span><span class="sxs-lookup"><span data-stu-id="fb927-414">These are read during the second evaluation pass.</span></span>
<span data-ttu-id="fb927-415">与 ItemDefinitions 属性返回的属性不同，这些属性是有序的，它们包含随后被其他具有相同名称和项类型的内容覆盖的任何元数据。</span><span class="sxs-lookup"><span data-stu-id="fb927-415">Unlike those returned by the ItemDefinitions property, these are ordered, and include any metadata that were subsequently overridden by others with the same name and item type.</span></span> <span data-ttu-id="fb927-416">它不包含条件的计算结果不为 true 的任何元素。</span><span class="sxs-lookup"><span data-stu-id="fb927-416">It does not include any elements whose conditions did not evaluate to true.</span></span>
<span data-ttu-id="fb927-417">它不包含自上次计算后添加的任何项定义元数据。</span><span class="sxs-lookup"><span data-stu-id="fb927-417">It does not include any item definition metadata added since the last evaluation.</span></span></summary>
        <value><span data-ttu-id="fb927-418">在计算过程中遇到的所有项定义元数据。</span><span class="sxs-lookup"><span data-stu-id="fb927-418">All item definition metadata encountered during evaluation.</span></span> <span data-ttu-id="fb927-419">这不包括其条件计算结果不为 true 的任何元素，也不包括自上次计算以后添加的任何项定义元数据。</span><span class="sxs-lookup"><span data-stu-id="fb927-419">This does not include any elements whose conditions did not evaluate to true, nor any item definition metadata added since the last evaluation.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fb927-420">在第二个计算传递过程中读取项元数据。</span><span class="sxs-lookup"><span data-stu-id="fb927-420">Item metadata is read during the second evaluation pass.</span></span> <span data-ttu-id="fb927-421">不同于 ItemDefinitions 属性返回的元数据，将对此元数据进行排序，并包括随后使用相同的名称和项类型重写的任何元数据。</span><span class="sxs-lookup"><span data-stu-id="fb927-421">Unlike metadata returned by the ItemDefinitions property, this metadata is ordered, and includes any metadata subsequently overridden with the same name and item type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllEvaluatedItems">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectItem&gt; AllEvaluatedItems { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;class Microsoft.Build.Evaluation.ProjectItem&gt; AllEvaluatedItems" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.AllEvaluatedItems" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AllEvaluatedItems As ICollection(Of ProjectItem)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::ICollection&lt;Microsoft::Build::Evaluation::ProjectItem ^&gt; ^ AllEvaluatedItems { System::Collections::Generic::ICollection&lt;Microsoft::Build::Evaluation::ProjectItem ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AllEvaluatedItems : System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectItem&gt;" Usage="Microsoft.Build.Evaluation.Project.AllEvaluatedItems" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectItem&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fb927-422">在计算过程中遇到的项。</span><span class="sxs-lookup"><span data-stu-id="fb927-422">Items encountered during evaluation.</span></span> <span data-ttu-id="fb927-423">在进行第三轮计算时读取这些项。</span><span class="sxs-lookup"><span data-stu-id="fb927-423">These are read during the third evaluation pass.</span></span>
<span data-ttu-id="fb927-424">与 Items 属性返回的项不同，这些项是根据在计算期间遇到的所有其他项进行排序的，而不只是根据相同项类型的项进行排序。</span><span class="sxs-lookup"><span data-stu-id="fb927-424">Unlike those returned by the Items property, these are ordered with respect to all other items encountered during evaluation, not just ordered with respect to items of the same item type.</span></span>
<span data-ttu-id="fb927-425">在某些应用程序（如 F# 语言）中，这种完全相互的排序是很重要的，此类主机可以使用此属性。</span><span class="sxs-lookup"><span data-stu-id="fb927-425">In some applications, like the F# language, this complete mutual ordering is significant, and such hosts can use this property.</span></span>
<span data-ttu-id="fb927-426">它不包含条件的计算结果不为 true 的任何元素。</span><span class="sxs-lookup"><span data-stu-id="fb927-426">It does not include any elements whose conditions did not evaluate to true.</span></span>
<span data-ttu-id="fb927-427">它不包含自上次计算后添加的任何项。</span><span class="sxs-lookup"><span data-stu-id="fb927-427">It does not include any items added since the last evaluation.</span></span></summary>
        <value><span data-ttu-id="fb927-428">计算过程中遇到的所有项的枚举器。</span><span class="sxs-lookup"><span data-stu-id="fb927-428">An enumerator over all items encountered during evaluation.</span></span> <span data-ttu-id="fb927-429">在进行第三轮计算时读取这些项。</span><span class="sxs-lookup"><span data-stu-id="fb927-429">These are read during the third evaluation pass.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fb927-430">与 Items 属性返回的项不同，这些项与在计算过程中遇到的所有其他项有关，而不只是针对相同项类型的项进行排序。</span><span class="sxs-lookup"><span data-stu-id="fb927-430">Unlike those items returned by the Items property, these are ordered with respect to all other items encountered during evaluation, not just ordered with respect to items of the same item type.</span></span>  
  
 <span data-ttu-id="fb927-431">在某些应用程序中，这种完整的相互排序非常重要，此类主机可以使用此属性。</span><span class="sxs-lookup"><span data-stu-id="fb927-431">In some applications, this complete mutual ordering is significant, and such hosts can use this property.</span></span>  
  
 <span data-ttu-id="fb927-432">枚举不包括其条件计算结果不为 true 的任何元素，也不包括自上次计算后添加的任何项。</span><span class="sxs-lookup"><span data-stu-id="fb927-432">The enumeration does not include any elements whose conditions did not evaluate to true, nor does it include any items added since the last evaluation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllEvaluatedProperties">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectProperty&gt; AllEvaluatedProperties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;class Microsoft.Build.Evaluation.ProjectProperty&gt; AllEvaluatedProperties" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.AllEvaluatedProperties" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AllEvaluatedProperties As ICollection(Of ProjectProperty)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::ICollection&lt;Microsoft::Build::Evaluation::ProjectProperty ^&gt; ^ AllEvaluatedProperties { System::Collections::Generic::ICollection&lt;Microsoft::Build::Evaluation::ProjectProperty ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AllEvaluatedProperties : System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectProperty&gt;" Usage="Microsoft.Build.Evaluation.Project.AllEvaluatedProperties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectProperty&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fb927-433">在计算过程中遇到的属性。</span><span class="sxs-lookup"><span data-stu-id="fb927-433">Properties encountered during evaluation.</span></span> <span data-ttu-id="fb927-434">在进行第一轮计算时读取这些属性。</span><span class="sxs-lookup"><span data-stu-id="fb927-434">These are read during the first evaluation pass.</span></span>
<span data-ttu-id="fb927-435">与 Properties 属性返回的属性不同，这些属性是有序的，它们包含随后被其他具有相同名称的内容覆盖的任何属性。</span><span class="sxs-lookup"><span data-stu-id="fb927-435">Unlike those returned by the Properties property, these are ordered, and includes any properties that were subsequently overridden by others with the same name.</span></span> <span data-ttu-id="fb927-436">它不包含条件的计算结果不为 true 的任何属性。</span><span class="sxs-lookup"><span data-stu-id="fb927-436">It does not include any properties whose conditions did not evaluate to true.</span></span>
<span data-ttu-id="fb927-437">它不包含自上次计算后添加的任何属性。</span><span class="sxs-lookup"><span data-stu-id="fb927-437">It does not include any properties added since the last evaluation.</span></span></summary>
        <value><span data-ttu-id="fb927-438">评估过程中遇到的所有属性。</span><span class="sxs-lookup"><span data-stu-id="fb927-438">All properties encountered during evaluation.</span></span> <span data-ttu-id="fb927-439">这不包括其条件计算结果不为 true 的任何属性，也不包括自上次计算以后添加的任何属性。</span><span class="sxs-lookup"><span data-stu-id="fb927-439">This does not include any properties whose conditions did not evaluate to true, nor any properties added since the last evaluation.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fb927-440">在第一次计算传递过程中，将读取这些属性。</span><span class="sxs-lookup"><span data-stu-id="fb927-440">These properties are read during the first evaluation pass.</span></span> <span data-ttu-id="fb927-441">不同于 Properties 属性返回的属性，这些属性是有序的，并包括随后使用同一名称重写的任何属性。</span><span class="sxs-lookup"><span data-stu-id="fb927-441">Unlike properties returned by the Properties property, these are ordered, and includes any properties subsequently overridden with the same name.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Build">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="fb927-442">使用默认目标生成此项目。</span><span class="sxs-lookup"><span data-stu-id="fb927-442">Builds this project, using the default targets.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public bool Build ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Build() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.Build" />
      <MemberSignature Language="VB.NET" Value="Public Function Build () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Build();" />
      <MemberSignature Language="F#" Value="member this.Build : unit -&gt; bool" Usage="project.Build " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fb927-443">使用此项目启动生成，生成默认目标。</span><span class="sxs-lookup"><span data-stu-id="fb927-443">Starts a build using this project, building the default targets.</span></span>
<span data-ttu-id="fb927-444">如果成功，则返回 true；如果失败，则返回 false。</span><span class="sxs-lookup"><span data-stu-id="fb927-444">Returns true on success, false on failure.</span></span>
<span data-ttu-id="fb927-445">适用于私下克隆的实例。</span><span class="sxs-lookup"><span data-stu-id="fb927-445">Works on a privately cloned instance.</span></span> <span data-ttu-id="fb927-446">若要设置或获取虚拟项以用于生成，请显式克隆一个实例并生成它。</span><span class="sxs-lookup"><span data-stu-id="fb927-446">To set or get virtual items for build purposes, clone an instance explicitly and build that.</span></span>
<span data-ttu-id="fb927-447">不会修改 Project 对象。</span><span class="sxs-lookup"><span data-stu-id="fb927-447">Does not modify the Project object.</span></span></summary>
        <returns><span data-ttu-id="fb927-448">如果成功，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="fb927-448"><see langword="true" /> on success; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fb927-449">若要设置或获取用于生成的虚拟项，请显式克隆项目实例并生成它。</span><span class="sxs-lookup"><span data-stu-id="fb927-449">To set or get virtual items for build purposes, clone a project instance explicitly and build that.</span></span> <span data-ttu-id="fb927-450">此方法不会修改项目对象。</span><span class="sxs-lookup"><span data-stu-id="fb927-450">This method does not modify the project object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public bool Build (Microsoft.Build.Framework.ILogger logger);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Build(class Microsoft.Build.Framework.ILogger logger) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.Build(Microsoft.Build.Framework.ILogger)" />
      <MemberSignature Language="VB.NET" Value="Public Function Build (logger As ILogger) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Build(Microsoft::Build::Framework::ILogger ^ logger);" />
      <MemberSignature Language="F#" Value="member this.Build : Microsoft.Build.Framework.ILogger -&gt; bool" Usage="project.Build logger" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logger" Type="Microsoft.Build.Framework.ILogger" />
      </Parameters>
      <Docs>
        <param name="logger"><span data-ttu-id="fb927-451">要在生成期间使用的记录器。</span><span class="sxs-lookup"><span data-stu-id="fb927-451">The logger to be used during the build.</span></span></param>
        <summary><span data-ttu-id="fb927-452">使用此项目启动生成，生成默认目标和指定记录器。</span><span class="sxs-lookup"><span data-stu-id="fb927-452">Starts a build using this project, building the default targets and the specified logger.</span></span>
<span data-ttu-id="fb927-453">如果成功，则返回 true；如果失败，则返回 false。</span><span class="sxs-lookup"><span data-stu-id="fb927-453">Returns true on success, false on failure.</span></span>
<span data-ttu-id="fb927-454">适用于私下克隆的实例。</span><span class="sxs-lookup"><span data-stu-id="fb927-454">Works on a privately cloned instance.</span></span> <span data-ttu-id="fb927-455">若要设置或获取虚拟项以用于生成，请显式克隆一个实例并生成它。</span><span class="sxs-lookup"><span data-stu-id="fb927-455">To set or get virtual items for build purposes, clone an instance explicitly and build that.</span></span>
<span data-ttu-id="fb927-456">不会修改 Project 对象。</span><span class="sxs-lookup"><span data-stu-id="fb927-456">Does not modify the Project object.</span></span></summary>
        <returns><span data-ttu-id="fb927-457">如果成功，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="fb927-457"><see langword="true" /> on success; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fb927-458">若要设置或获取用于生成的虚拟项，请显式克隆项目实例并生成它。</span><span class="sxs-lookup"><span data-stu-id="fb927-458">To set or get virtual items for build purposes, clone a project instance explicitly and build that.</span></span> <span data-ttu-id="fb927-459">此方法不会修改项目对象。</span><span class="sxs-lookup"><span data-stu-id="fb927-459">This method does not modify the project object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public bool Build (System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt; loggers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Build(class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Framework.ILogger&gt; loggers) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.Build(System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger})" />
      <MemberSignature Language="VB.NET" Value="Public Function Build (loggers As IEnumerable(Of ILogger)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Build(System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Framework::ILogger ^&gt; ^ loggers);" />
      <MemberSignature Language="F#" Value="member this.Build : seq&lt;Microsoft.Build.Framework.ILogger&gt; -&gt; bool" Usage="project.Build loggers" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="loggers" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt;" />
      </Parameters>
      <Docs>
        <param name="loggers"><span data-ttu-id="fb927-460">一个可枚举要在生成过程中使用的所有记录器的枚举器。</span><span class="sxs-lookup"><span data-stu-id="fb927-460">An enumerator over all loggers to be used during the build.</span></span></param>
        <summary><span data-ttu-id="fb927-461">使用此项目启动生成，生成默认目标和指定记录器。</span><span class="sxs-lookup"><span data-stu-id="fb927-461">Starts a build using this project, building the default targets and the specified loggers.</span></span>
<span data-ttu-id="fb927-462">如果成功，则返回 true；如果失败，则返回 false。</span><span class="sxs-lookup"><span data-stu-id="fb927-462">Returns true on success, false on failure.</span></span>
<span data-ttu-id="fb927-463">适用于私下克隆的实例。</span><span class="sxs-lookup"><span data-stu-id="fb927-463">Works on a privately cloned instance.</span></span> <span data-ttu-id="fb927-464">若要设置或获取虚拟项以用于生成，请显式克隆一个实例并生成它。</span><span class="sxs-lookup"><span data-stu-id="fb927-464">To set or get virtual items for build purposes, clone an instance explicitly and build that.</span></span>
<span data-ttu-id="fb927-465">不会修改 Project 对象。</span><span class="sxs-lookup"><span data-stu-id="fb927-465">Does not modify the Project object.</span></span></summary>
        <returns><span data-ttu-id="fb927-466">如果成功，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="fb927-466"><see langword="true" /> on success; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fb927-467">若要设置或获取用于生成的虚拟项，请显式克隆项目实例并生成它。</span><span class="sxs-lookup"><span data-stu-id="fb927-467">To set or get virtual items for build purposes, clone a project instance explicitly and build that.</span></span> <span data-ttu-id="fb927-468">此方法不会修改项目对象。</span><span class="sxs-lookup"><span data-stu-id="fb927-468">This method does not modify the project object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public bool Build (string target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Build(string target) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.Build(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Build (target As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Build(System::String ^ target);" />
      <MemberSignature Language="F#" Value="member this.Build : string -&gt; bool" Usage="project.Build target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="fb927-469">要生成的目标。</span><span class="sxs-lookup"><span data-stu-id="fb927-469">The target to be built.</span></span></param>
        <summary><span data-ttu-id="fb927-470">使用此项目启动生成，生成指定目标。</span><span class="sxs-lookup"><span data-stu-id="fb927-470">Starts a build using this project, building the specified target.</span></span>
<span data-ttu-id="fb927-471">如果成功，则返回 true；如果失败，则返回 false。</span><span class="sxs-lookup"><span data-stu-id="fb927-471">Returns true on success, false on failure.</span></span>
<span data-ttu-id="fb927-472">适用于私下克隆的实例。</span><span class="sxs-lookup"><span data-stu-id="fb927-472">Works on a privately cloned instance.</span></span> <span data-ttu-id="fb927-473">若要设置或获取虚拟项以用于生成，请显式克隆一个实例并生成它。</span><span class="sxs-lookup"><span data-stu-id="fb927-473">To set or get virtual items for build purposes, clone an instance explicitly and build that.</span></span>
<span data-ttu-id="fb927-474">不会修改 Project 对象。</span><span class="sxs-lookup"><span data-stu-id="fb927-474">Does not modify the Project object.</span></span></summary>
        <returns><span data-ttu-id="fb927-475">如果成功，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="fb927-475"><see langword="true" /> on success; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fb927-476">若要设置或获取用于生成的虚拟项，请显式克隆项目实例并生成它。</span><span class="sxs-lookup"><span data-stu-id="fb927-476">To set or get virtual items for build purposes, clone a project instance explicitly and build that.</span></span> <span data-ttu-id="fb927-477">此方法不会修改项目对象。</span><span class="sxs-lookup"><span data-stu-id="fb927-477">This method does not modify the project object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public bool Build (string[] targets);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Build(string[] targets) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.Build(System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Build (targets As String()) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Build(cli::array &lt;System::String ^&gt; ^ targets);" />
      <MemberSignature Language="F#" Value="member this.Build : string[] -&gt; bool" Usage="project.Build targets" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targets" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="targets"><span data-ttu-id="fb927-478">要生成的目标数组。</span><span class="sxs-lookup"><span data-stu-id="fb927-478">An array of targets to be built.</span></span></param>
        <summary><span data-ttu-id="fb927-479">使用此项目启动生成，生成指定目标。</span><span class="sxs-lookup"><span data-stu-id="fb927-479">Starts a build using this project, building the specified targets.</span></span>
<span data-ttu-id="fb927-480">如果成功，则返回 true；如果失败，则返回 false。</span><span class="sxs-lookup"><span data-stu-id="fb927-480">Returns true on success, false on failure.</span></span>
<span data-ttu-id="fb927-481">适用于私下克隆的实例。</span><span class="sxs-lookup"><span data-stu-id="fb927-481">Works on a privately cloned instance.</span></span> <span data-ttu-id="fb927-482">若要设置或获取虚拟项以用于生成，请显式克隆一个实例并生成它。</span><span class="sxs-lookup"><span data-stu-id="fb927-482">To set or get virtual items for build purposes, clone an instance explicitly and build that.</span></span>
<span data-ttu-id="fb927-483">不会修改 Project 对象。</span><span class="sxs-lookup"><span data-stu-id="fb927-483">Does not modify the Project object.</span></span></summary>
        <returns><span data-ttu-id="fb927-484">如果成功，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="fb927-484"><see langword="true" /> on success; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fb927-485">若要设置或获取用于生成的虚拟项，请显式克隆项目实例并生成它。</span><span class="sxs-lookup"><span data-stu-id="fb927-485">To set or get virtual items for build purposes, clone a project instance explicitly and build that.</span></span> <span data-ttu-id="fb927-486">此方法不会修改项目对象。</span><span class="sxs-lookup"><span data-stu-id="fb927-486">This method does not modify the project object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public bool Build (System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt; loggers, System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Logging.ForwardingLoggerRecord&gt; remoteLoggers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Build(class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Framework.ILogger&gt; loggers, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Logging.ForwardingLoggerRecord&gt; remoteLoggers) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.Build(System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger},System.Collections.Generic.IEnumerable{Microsoft.Build.Logging.ForwardingLoggerRecord})" />
      <MemberSignature Language="VB.NET" Value="Public Function Build (loggers As IEnumerable(Of ILogger), remoteLoggers As IEnumerable(Of ForwardingLoggerRecord)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Build(System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Framework::ILogger ^&gt; ^ loggers, System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Logging::ForwardingLoggerRecord ^&gt; ^ remoteLoggers);" />
      <MemberSignature Language="F#" Value="member this.Build : seq&lt;Microsoft.Build.Framework.ILogger&gt; * seq&lt;Microsoft.Build.Logging.ForwardingLoggerRecord&gt; -&gt; bool" Usage="project.Build (loggers, remoteLoggers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="loggers" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt;" />
        <Parameter Name="remoteLoggers" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Logging.ForwardingLoggerRecord&gt;" />
      </Parameters>
      <Docs>
        <param name="loggers"><span data-ttu-id="fb927-487">要在生成期间使用的记录器。</span><span class="sxs-lookup"><span data-stu-id="fb927-487">The loggers to be used during the build.</span></span></param>
        <param name="remoteLoggers"><span data-ttu-id="fb927-488">要在生成期间使用的远程记录器。</span><span class="sxs-lookup"><span data-stu-id="fb927-488">The remote loggers to be used during the build.</span></span></param>
        <summary><span data-ttu-id="fb927-489">使用此项目启动生成，生成默认目标和指定记录器。</span><span class="sxs-lookup"><span data-stu-id="fb927-489">Starts a build using this project, building the default targets and the specified loggers.</span></span>
<span data-ttu-id="fb927-490">如果成功，则返回 true；如果失败，则返回 false。</span><span class="sxs-lookup"><span data-stu-id="fb927-490">Returns true on success, false on failure.</span></span>
<span data-ttu-id="fb927-491">适用于私下克隆的实例。</span><span class="sxs-lookup"><span data-stu-id="fb927-491">Works on a privately cloned instance.</span></span> <span data-ttu-id="fb927-492">若要设置或获取虚拟项以用于生成，请显式克隆一个实例并生成它。</span><span class="sxs-lookup"><span data-stu-id="fb927-492">To set or get virtual items for build purposes, clone an instance explicitly and build that.</span></span>
<span data-ttu-id="fb927-493">不会修改 Project 对象。</span><span class="sxs-lookup"><span data-stu-id="fb927-493">Does not modify the Project object.</span></span></summary>
        <returns><span data-ttu-id="fb927-494">如果成功，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="fb927-494"><see langword="true" /> on success; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fb927-495">若要设置或获取用于生成的虚拟项，请显式克隆项目实例并生成它。</span><span class="sxs-lookup"><span data-stu-id="fb927-495">To set or get virtual items for build purposes, clone a project instance explicitly and build that.</span></span> <span data-ttu-id="fb927-496">此方法不会修改项目对象。</span><span class="sxs-lookup"><span data-stu-id="fb927-496">This method does not modify the project object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public bool Build (string target, System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt; loggers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Build(string target, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Framework.ILogger&gt; loggers) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.Build(System.String,System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger})" />
      <MemberSignature Language="VB.NET" Value="Public Function Build (target As String, loggers As IEnumerable(Of ILogger)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Build(System::String ^ target, System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Framework::ILogger ^&gt; ^ loggers);" />
      <MemberSignature Language="F#" Value="member this.Build : string * seq&lt;Microsoft.Build.Framework.ILogger&gt; -&gt; bool" Usage="project.Build (target, loggers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.String" />
        <Parameter Name="loggers" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt;" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="fb927-497">要生成的目标。</span><span class="sxs-lookup"><span data-stu-id="fb927-497">The target to be built.</span></span></param>
        <param name="loggers"><span data-ttu-id="fb927-498">要在生成期间使用的记录器。</span><span class="sxs-lookup"><span data-stu-id="fb927-498">The loggers to be used during the build.</span></span></param>
        <summary><span data-ttu-id="fb927-499">使用此项目启动生成，生成指定目标和指定记录器。</span><span class="sxs-lookup"><span data-stu-id="fb927-499">Starts a build using this project, building the specified target with the specified loggers.</span></span>
<span data-ttu-id="fb927-500">如果成功，则返回 true；如果失败，则返回 false。</span><span class="sxs-lookup"><span data-stu-id="fb927-500">Returns true on success, false on failure.</span></span>
<span data-ttu-id="fb927-501">适用于私下克隆的实例。</span><span class="sxs-lookup"><span data-stu-id="fb927-501">Works on a privately cloned instance.</span></span> <span data-ttu-id="fb927-502">若要设置或获取虚拟项以用于生成，请显式克隆一个实例并生成它。</span><span class="sxs-lookup"><span data-stu-id="fb927-502">To set or get virtual items for build purposes, clone an instance explicitly and build that.</span></span>
<span data-ttu-id="fb927-503">不会修改 Project 对象。</span><span class="sxs-lookup"><span data-stu-id="fb927-503">Does not modify the Project object.</span></span></summary>
        <returns><span data-ttu-id="fb927-504">如果成功，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="fb927-504"><see langword="true" /> on success; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fb927-505">若要设置或获取用于生成的虚拟项，请显式克隆项目实例并生成它。</span><span class="sxs-lookup"><span data-stu-id="fb927-505">To set or get virtual items for build purposes, clone a project instance explicitly and build that.</span></span> <span data-ttu-id="fb927-506">此方法不会修改项目对象。</span><span class="sxs-lookup"><span data-stu-id="fb927-506">This method does not modify the project object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public bool Build (string[] targets, System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt; loggers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Build(string[] targets, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Framework.ILogger&gt; loggers) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.Build(System.String[],System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger})" />
      <MemberSignature Language="VB.NET" Value="Public Function Build (targets As String(), loggers As IEnumerable(Of ILogger)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Build(cli::array &lt;System::String ^&gt; ^ targets, System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Framework::ILogger ^&gt; ^ loggers);" />
      <MemberSignature Language="F#" Value="member this.Build : string[] * seq&lt;Microsoft.Build.Framework.ILogger&gt; -&gt; bool" Usage="project.Build (targets, loggers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targets" Type="System.String[]" />
        <Parameter Name="loggers" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt;" />
      </Parameters>
      <Docs>
        <param name="targets"><span data-ttu-id="fb927-507">要生成的目标。</span><span class="sxs-lookup"><span data-stu-id="fb927-507">The targets to be built.</span></span></param>
        <param name="loggers"><span data-ttu-id="fb927-508">要在生成期间使用的记录器。</span><span class="sxs-lookup"><span data-stu-id="fb927-508">The loggers to be used during the build.</span></span></param>
        <summary><span data-ttu-id="fb927-509">使用此项目启动生成，生成指定目标和指定记录器。</span><span class="sxs-lookup"><span data-stu-id="fb927-509">Starts a build using this project, building the specified targets with the specified loggers.</span></span>
<span data-ttu-id="fb927-510">如果成功，则返回 true；如果失败，则返回 false。</span><span class="sxs-lookup"><span data-stu-id="fb927-510">Returns true on success, false on failure.</span></span>
<span data-ttu-id="fb927-511">如果禁用此项目的生成，则不会生成，并返回 false。</span><span class="sxs-lookup"><span data-stu-id="fb927-511">If build is disabled on this project, does not build, and returns false.</span></span>
<span data-ttu-id="fb927-512">适用于私下克隆的实例。</span><span class="sxs-lookup"><span data-stu-id="fb927-512">Works on a privately cloned instance.</span></span> <span data-ttu-id="fb927-513">若要设置或获取虚拟项以用于生成，请显式克隆一个实例并生成它。</span><span class="sxs-lookup"><span data-stu-id="fb927-513">To set or get virtual items for build purposes, clone an instance explicitly and build that.</span></span>
<span data-ttu-id="fb927-514">不会修改 Project 对象。</span><span class="sxs-lookup"><span data-stu-id="fb927-514">Does not modify the Project object.</span></span></summary>
        <returns><span data-ttu-id="fb927-515">如果成功，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="fb927-515"><see langword="true" /> on success; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fb927-516">若要设置或获取用于生成的虚拟项，请显式克隆项目实例并生成它。</span><span class="sxs-lookup"><span data-stu-id="fb927-516">To set or get virtual items for build purposes, clone a project instance explicitly and build that.</span></span> <span data-ttu-id="fb927-517">此方法不会修改项目对象。</span><span class="sxs-lookup"><span data-stu-id="fb927-517">This method does not modify the project object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public bool Build (string target, System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt; loggers, System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Logging.ForwardingLoggerRecord&gt; remoteLoggers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Build(string target, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Framework.ILogger&gt; loggers, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Logging.ForwardingLoggerRecord&gt; remoteLoggers) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.Build(System.String,System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger},System.Collections.Generic.IEnumerable{Microsoft.Build.Logging.ForwardingLoggerRecord})" />
      <MemberSignature Language="VB.NET" Value="Public Function Build (target As String, loggers As IEnumerable(Of ILogger), remoteLoggers As IEnumerable(Of ForwardingLoggerRecord)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Build(System::String ^ target, System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Framework::ILogger ^&gt; ^ loggers, System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Logging::ForwardingLoggerRecord ^&gt; ^ remoteLoggers);" />
      <MemberSignature Language="F#" Value="member this.Build : string * seq&lt;Microsoft.Build.Framework.ILogger&gt; * seq&lt;Microsoft.Build.Logging.ForwardingLoggerRecord&gt; -&gt; bool" Usage="project.Build (target, loggers, remoteLoggers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.String" />
        <Parameter Name="loggers" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt;" />
        <Parameter Name="remoteLoggers" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Logging.ForwardingLoggerRecord&gt;" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="fb927-518">要生成的目标。</span><span class="sxs-lookup"><span data-stu-id="fb927-518">The target to be built.</span></span></param>
        <param name="loggers"><span data-ttu-id="fb927-519">要在生成期间使用的记录器。</span><span class="sxs-lookup"><span data-stu-id="fb927-519">The loggers to be used during the build.</span></span></param>
        <param name="remoteLoggers"><span data-ttu-id="fb927-520">要在生成期间使用的远程记录器。</span><span class="sxs-lookup"><span data-stu-id="fb927-520">The remote loggers to be used during the build.</span></span></param>
        <summary><span data-ttu-id="fb927-521">使用此项目启动生成，生成指定目标和指定记录器。</span><span class="sxs-lookup"><span data-stu-id="fb927-521">Starts a build using this project, building the specified target with the specified loggers.</span></span>
<span data-ttu-id="fb927-522">如果成功，则返回 true；如果失败，则返回 false。</span><span class="sxs-lookup"><span data-stu-id="fb927-522">Returns true on success, false on failure.</span></span>
<span data-ttu-id="fb927-523">适用于私下克隆的实例。</span><span class="sxs-lookup"><span data-stu-id="fb927-523">Works on a privately cloned instance.</span></span> <span data-ttu-id="fb927-524">若要设置或获取虚拟项以用于生成，请显式克隆一个实例并生成它。</span><span class="sxs-lookup"><span data-stu-id="fb927-524">To set or get virtual items for build purposes, clone an instance explicitly and build that.</span></span>
<span data-ttu-id="fb927-525">不会修改 Project 对象。</span><span class="sxs-lookup"><span data-stu-id="fb927-525">Does not modify the Project object.</span></span></summary>
        <returns><span data-ttu-id="fb927-526">如果成功，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="fb927-526"><see langword="true" /> on success; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fb927-527">若要设置或获取用于生成的虚拟项，请显式克隆项目实例并生成它。</span><span class="sxs-lookup"><span data-stu-id="fb927-527">To set or get virtual items for build purposes, clone a project instance explicitly and build that.</span></span> <span data-ttu-id="fb927-528">此方法不会修改项目对象。</span><span class="sxs-lookup"><span data-stu-id="fb927-528">This method does not modify the project object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public bool Build (string[] targets, System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt; loggers, System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Logging.ForwardingLoggerRecord&gt; remoteLoggers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Build(string[] targets, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Framework.ILogger&gt; loggers, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Logging.ForwardingLoggerRecord&gt; remoteLoggers) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.Build(System.String[],System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger},System.Collections.Generic.IEnumerable{Microsoft.Build.Logging.ForwardingLoggerRecord})" />
      <MemberSignature Language="VB.NET" Value="Public Function Build (targets As String(), loggers As IEnumerable(Of ILogger), remoteLoggers As IEnumerable(Of ForwardingLoggerRecord)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Build(cli::array &lt;System::String ^&gt; ^ targets, System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Framework::ILogger ^&gt; ^ loggers, System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Logging::ForwardingLoggerRecord ^&gt; ^ remoteLoggers);" />
      <MemberSignature Language="F#" Value="member this.Build : string[] * seq&lt;Microsoft.Build.Framework.ILogger&gt; * seq&lt;Microsoft.Build.Logging.ForwardingLoggerRecord&gt; -&gt; bool" Usage="project.Build (targets, loggers, remoteLoggers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targets" Type="System.String[]" />
        <Parameter Name="loggers" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt;" />
        <Parameter Name="remoteLoggers" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Logging.ForwardingLoggerRecord&gt;" />
      </Parameters>
      <Docs>
        <param name="targets"><span data-ttu-id="fb927-529">要生成的目标。</span><span class="sxs-lookup"><span data-stu-id="fb927-529">The targets to be built.</span></span></param>
        <param name="loggers"><span data-ttu-id="fb927-530">要在生成期间使用的记录器。</span><span class="sxs-lookup"><span data-stu-id="fb927-530">The loggers to be used during the build.</span></span></param>
        <param name="remoteLoggers"><span data-ttu-id="fb927-531">要在生成期间使用的远程记录器。</span><span class="sxs-lookup"><span data-stu-id="fb927-531">The remote loggers to be used during the build.</span></span></param>
        <summary><span data-ttu-id="fb927-532">使用此项目启动生成，生成指定目标和指定记录器。</span><span class="sxs-lookup"><span data-stu-id="fb927-532">Starts a build using this project, building the specified targets with the specified loggers.</span></span>
<span data-ttu-id="fb927-533">如果成功，则返回 true；如果失败，则返回 false。</span><span class="sxs-lookup"><span data-stu-id="fb927-533">Returns true on success, false on failure.</span></span>
<span data-ttu-id="fb927-534">如果禁用此项目的生成，则不会生成，并返回 false。</span><span class="sxs-lookup"><span data-stu-id="fb927-534">If build is disabled on this project, does not build, and returns false.</span></span>
<span data-ttu-id="fb927-535">适用于私下克隆的实例。</span><span class="sxs-lookup"><span data-stu-id="fb927-535">Works on a privately cloned instance.</span></span> <span data-ttu-id="fb927-536">若要设置或获取虚拟项以用于生成，请显式克隆一个实例并生成它。</span><span class="sxs-lookup"><span data-stu-id="fb927-536">To set or get virtual items for build purposes, clone an instance explicitly and build that.</span></span>
<span data-ttu-id="fb927-537">不会修改 Project 对象。</span><span class="sxs-lookup"><span data-stu-id="fb927-537">Does not modify the Project object.</span></span></summary>
        <returns><span data-ttu-id="fb927-538">如果成功，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="fb927-538"><see langword="true" /> on success; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fb927-539">若要设置或获取用于生成的虚拟项，请显式克隆项目实例并生成它。</span><span class="sxs-lookup"><span data-stu-id="fb927-539">To set or get virtual items for build purposes, clone a project instance explicitly and build that.</span></span> <span data-ttu-id="fb927-540">此方法不会修改项目对象。</span><span class="sxs-lookup"><span data-stu-id="fb927-540">This method does not modify the project object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public bool Build (string[] targets, System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt; loggers, System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Logging.ForwardingLoggerRecord&gt; remoteLoggers, Microsoft.Build.Evaluation.Context.EvaluationContext evaluationContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Build(string[] targets, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Framework.ILogger&gt; loggers, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Logging.ForwardingLoggerRecord&gt; remoteLoggers, class Microsoft.Build.Evaluation.Context.EvaluationContext evaluationContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.Build(System.String[],System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger},System.Collections.Generic.IEnumerable{Microsoft.Build.Logging.ForwardingLoggerRecord},Microsoft.Build.Evaluation.Context.EvaluationContext)" />
      <MemberSignature Language="VB.NET" Value="Public Function Build (targets As String(), loggers As IEnumerable(Of ILogger), remoteLoggers As IEnumerable(Of ForwardingLoggerRecord), evaluationContext As EvaluationContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Build(cli::array &lt;System::String ^&gt; ^ targets, System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Framework::ILogger ^&gt; ^ loggers, System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Logging::ForwardingLoggerRecord ^&gt; ^ remoteLoggers, Microsoft::Build::Evaluation::Context::EvaluationContext ^ evaluationContext);" />
      <MemberSignature Language="F#" Value="member this.Build : string[] * seq&lt;Microsoft.Build.Framework.ILogger&gt; * seq&lt;Microsoft.Build.Logging.ForwardingLoggerRecord&gt; * Microsoft.Build.Evaluation.Context.EvaluationContext -&gt; bool" Usage="project.Build (targets, loggers, remoteLoggers, evaluationContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targets" Type="System.String[]" Index="0" FrameworkAlternate="msbuild-15;msbuild-15-netcore;msbuild-16;msbuild-16-netcore" />
        <Parameter Name="loggers" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt;" Index="1" FrameworkAlternate="msbuild-15;msbuild-15-netcore;msbuild-16;msbuild-16-netcore" />
        <Parameter Name="remoteLoggers" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Logging.ForwardingLoggerRecord&gt;" Index="2" FrameworkAlternate="msbuild-15;msbuild-15-netcore;msbuild-16;msbuild-16-netcore" />
        <Parameter Name="evaluationContext" Type="Microsoft.Build.Evaluation.Context.EvaluationContext" Index="3" FrameworkAlternate="msbuild-15;msbuild-15-netcore;msbuild-16;msbuild-16-netcore" />
      </Parameters>
      <Docs>
        <param name="targets">To be added.</param>
        <param name="loggers">To be added.</param>
        <param name="remoteLoggers">To be added.</param>
        <param name="evaluationContext"><span data-ttu-id="fb927-541">在需要重新计算的情况下使用的计算上下文</span><span class="sxs-lookup"><span data-stu-id="fb927-541">The evaluation context to use in case reevaluation is required</span></span></param>
        <summary><span data-ttu-id="fb927-542">请参见<see cref="M:Microsoft.Build.Evaluation.Project.Build(System.String[],System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger},System.Collections.Generic.IEnumerable{Microsoft.Build.Logging.ForwardingLoggerRecord})" /></span><span class="sxs-lookup"><span data-stu-id="fb927-542">See <see cref="M:Microsoft.Build.Evaluation.Project.Build(System.String[],System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger},System.Collections.Generic.IEnumerable{Microsoft.Build.Logging.ForwardingLoggerRecord})" /></span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConditionedProperties">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;string,System.Collections.Generic.List&lt;string&gt;&gt; ConditionedProperties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;string, class System.Collections.Generic.List`1&lt;string&gt;&gt; ConditionedProperties" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.ConditionedProperties" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ConditionedProperties As IDictionary(Of String, List(Of String))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IDictionary&lt;System::String ^, System::Collections::Generic::List&lt;System::String ^&gt; ^&gt; ^ ConditionedProperties { System::Collections::Generic::IDictionary&lt;System::String ^, System::Collections::Generic::List&lt;System::String ^&gt; ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ConditionedProperties : System.Collections.Generic.IDictionary&lt;string, System.Collections.Generic.List&lt;string&gt;&gt;" Usage="Microsoft.Build.Evaluation.Project.ConditionedProperties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="msbuild-15;msbuild-15-netcore;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[get: System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.Collections.Generic.List&lt;System.String&gt;&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fb927-543">包含在属性、属性组、导入和时间的条件中的属性的可能值的集合。</span><span class="sxs-lookup"><span data-stu-id="fb927-543">Collection of possible values implied for properties contained in the conditions found on properties, property groups, imports, and whens.</span></span>
            
<span data-ttu-id="fb927-544">例如，如果项目中的属性存在以下情况：</span><span class="sxs-lookup"><span data-stu-id="fb927-544">For example, if the following conditions existed on properties in a project:</span></span> 
<span data-ttu-id="fb927-545">Condition="'$(Configuration)|$(Platform)' == 'Debug|x86'" Condition="'$(Configuration)' == 'Release'"</span><span class="sxs-lookup"><span data-stu-id="fb927-545">Condition="'$(Configuration)|$(Platform)' == 'Debug|x86'" Condition="'$(Configuration)' == 'Release'"</span></span> 
<span data-ttu-id="fb927-546">该表将由以下内容填充</span><span class="sxs-lookup"><span data-stu-id="fb927-546">the table would be populated with</span></span> 
<span data-ttu-id="fb927-547">{ "Configuration", { "Debug", "Release" }} { "Platform", { "x86" }}</span><span class="sxs-lookup"><span data-stu-id="fb927-547">{ "Configuration", { "Debug", "Release" }} { "Platform", { "x86" }}</span></span> 
<span data-ttu-id="fb927-548">Visual Studio 使用此方法来确定项目中定义的配置。</span><span class="sxs-lookup"><span data-stu-id="fb927-548">This is used by Visual Studio to determine the configurations defined in the project.</span></span></summary>
        <value><span data-ttu-id="fb927-549">属性的可能属性值的集合，这些属性用于计算在属性、属性组、导入和的时间找到的条件。</span><span class="sxs-lookup"><span data-stu-id="fb927-549">A collection of possible property values for properties used to evaluate conditions found on properties, property groups, imports, and whens.</span></span> <span data-ttu-id="fb927-550">该集合采用规范格式。</span><span class="sxs-lookup"><span data-stu-id="fb927-550">The collection is in canonical form.</span></span> <span data-ttu-id="fb927-551">条目的名称是要计算的属性的名称，值是可能的属性值的列表。</span><span class="sxs-lookup"><span data-stu-id="fb927-551">The name of the entry is the name of the property to be evaluated, and the value is a list of possible property values.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fb927-552">例如，如果以下条件存在于项目中的属性上： Condition = "' $ (Configuration) # B0 $ (平台) " = = "Debug&#124;x86 '" Condition = "' $ (Configuration) ' = = ' Release '"，则将使用 {"Configuration" 填充表 {"调试"，"发布"}} {"平台"，{"x86"}} Visual Studio 使用此集合来确定项目中定义的配置</span><span class="sxs-lookup"><span data-stu-id="fb927-552">For example, if the following conditions existed on properties in a project: Condition="'$(Configuration)&#124;$(Platform)' == 'Debug&#124;x86'" Condition="'$(Configuration)' == 'Release'" the table would be populated with { "Configuration", { "Debug", "Release" }} { "Platform", { "x86" }} This collection is used by Visual Studio to determine the configurations defined in the project</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateProjectInstance">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="fb927-553">基于此项目创建一个项目实例，但将此项目与创建的项目实例完全断开连接。</span><span class="sxs-lookup"><span data-stu-id="fb927-553">Creates a project instance based on this project, but completely disconnected from it.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fb927-554">可用于单独生成。</span><span class="sxs-lookup"><span data-stu-id="fb927-554">Can be used to build independently.</span></span> <span data-ttu-id="fb927-555">在创建实例之前计算原始项目（如有必要），以便将原始项目标记为未修改。</span><span class="sxs-lookup"><span data-stu-id="fb927-555">The original project is evaluated before creating the instance, if necessary, so that the original project is marked as unmodified.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateProjectInstance">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Execution.ProjectInstance CreateProjectInstance ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Build.Execution.ProjectInstance CreateProjectInstance() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.CreateProjectInstance" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateProjectInstance () As ProjectInstance" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Build::Execution::ProjectInstance ^ CreateProjectInstance();" />
      <MemberSignature Language="F#" Value="member this.CreateProjectInstance : unit -&gt; Microsoft.Build.Execution.ProjectInstance" Usage="project.CreateProjectInstance " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Execution.ProjectInstance</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fb927-556">基于此项目返回一个实例，但完全断开连接。</span><span class="sxs-lookup"><span data-stu-id="fb927-556">Returns an instance based on this project, but completely disconnected.</span></span>
<span data-ttu-id="fb927-557">此实例可用于独立生成。</span><span class="sxs-lookup"><span data-stu-id="fb927-557">This instance can be used to build independently.</span></span>
<span data-ttu-id="fb927-558">在创建实例之前，如有必要，会对项目进行重新计算，因此它将不会更新。</span><span class="sxs-lookup"><span data-stu-id="fb927-558">Before creating the instance, this will reevaluate the project if necessary, so it will not be dirty.</span></span></summary>
        <returns><span data-ttu-id="fb927-559">项目实例。</span><span class="sxs-lookup"><span data-stu-id="fb927-559">The project instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fb927-560">可用于单独生成。</span><span class="sxs-lookup"><span data-stu-id="fb927-560">Can be used to build independently.</span></span> <span data-ttu-id="fb927-561">在创建实例之前计算原始项目（如有必要），以便将原始项目标记为未修改。</span><span class="sxs-lookup"><span data-stu-id="fb927-561">The original project is evaluated before creating the instance, if necessary, so that the original project is marked as unmodified.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateProjectInstance">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Execution.ProjectInstance CreateProjectInstance (Microsoft.Build.Execution.ProjectInstanceSettings settings);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Build.Execution.ProjectInstance CreateProjectInstance(valuetype Microsoft.Build.Execution.ProjectInstanceSettings settings) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.CreateProjectInstance(Microsoft.Build.Execution.ProjectInstanceSettings)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateProjectInstance (settings As ProjectInstanceSettings) As ProjectInstance" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Build::Execution::ProjectInstance ^ CreateProjectInstance(Microsoft::Build::Execution::ProjectInstanceSettings settings);" />
      <MemberSignature Language="F#" Value="member this.CreateProjectInstance : Microsoft.Build.Execution.ProjectInstanceSettings -&gt; Microsoft.Build.Execution.ProjectInstance" Usage="project.CreateProjectInstance settings" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Execution.ProjectInstance</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="settings" Type="Microsoft.Build.Execution.ProjectInstanceSettings" Index="0" FrameworkAlternate="msbuild-15;msbuild-15-netcore;msbuild-16;msbuild-16-netcore;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="settings"><span data-ttu-id="fb927-562">确定所创建的项目实例是否为不可变的，以及该实例是否包含查找表以提高性能。</span><span class="sxs-lookup"><span data-stu-id="fb927-562">Determines whether created project instance is immutable and whether it contains a look up table to improve performance.</span></span></param>
        <summary><span data-ttu-id="fb927-563">基于此项目返回一个实例，但完全断开连接。</span><span class="sxs-lookup"><span data-stu-id="fb927-563">Returns an instance based on this project, but completely disconnected.</span></span>
<span data-ttu-id="fb927-564">此实例可用于独立生成。</span><span class="sxs-lookup"><span data-stu-id="fb927-564">This instance can be used to build independently.</span></span>
<span data-ttu-id="fb927-565">在创建实例之前，如有必要，会对项目进行重新计算，因此它将不会更新。</span><span class="sxs-lookup"><span data-stu-id="fb927-565">Before creating the instance, this will reevaluate the project if necessary, so it will not be dirty.</span></span>
<span data-ttu-id="fb927-566">实例是不可变的；不能修改构成该示例的任何对象。</span><span class="sxs-lookup"><span data-stu-id="fb927-566">The instance is immutable; none of the objects that form it can be modified.</span></span> <span data-ttu-id="fb927-567">这样就可以从多个线程中安全地进行访问。</span><span class="sxs-lookup"><span data-stu-id="fb927-567">This makes it safe to access concurrently from multiple threads.</span></span></summary>
        <returns><span data-ttu-id="fb927-568">项目实例。</span><span class="sxs-lookup"><span data-stu-id="fb927-568">The project instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fb927-569">可用于单独生成。</span><span class="sxs-lookup"><span data-stu-id="fb927-569">Can be used to build independently.</span></span> <span data-ttu-id="fb927-570">在创建实例之前计算原始项目（如有必要），以便将原始项目标记为未修改。</span><span class="sxs-lookup"><span data-stu-id="fb927-570">The original project is evaluated before creating the instance, if necessary, so that the original project is marked as unmodified.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateProjectInstance">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Execution.ProjectInstance CreateProjectInstance (Microsoft.Build.Execution.ProjectInstanceSettings settings, Microsoft.Build.Evaluation.Context.EvaluationContext evaluationContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Build.Execution.ProjectInstance CreateProjectInstance(valuetype Microsoft.Build.Execution.ProjectInstanceSettings settings, class Microsoft.Build.Evaluation.Context.EvaluationContext evaluationContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.CreateProjectInstance(Microsoft.Build.Execution.ProjectInstanceSettings,Microsoft.Build.Evaluation.Context.EvaluationContext)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateProjectInstance (settings As ProjectInstanceSettings, evaluationContext As EvaluationContext) As ProjectInstance" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Build::Execution::ProjectInstance ^ CreateProjectInstance(Microsoft::Build::Execution::ProjectInstanceSettings settings, Microsoft::Build::Evaluation::Context::EvaluationContext ^ evaluationContext);" />
      <MemberSignature Language="F#" Value="member this.CreateProjectInstance : Microsoft.Build.Execution.ProjectInstanceSettings * Microsoft.Build.Evaluation.Context.EvaluationContext -&gt; Microsoft.Build.Execution.ProjectInstance" Usage="project.CreateProjectInstance (settings, evaluationContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Execution.ProjectInstance</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="settings" Type="Microsoft.Build.Execution.ProjectInstanceSettings" Index="0" FrameworkAlternate="msbuild-15;msbuild-15-netcore;msbuild-16;msbuild-16-netcore" />
        <Parameter Name="evaluationContext" Type="Microsoft.Build.Evaluation.Context.EvaluationContext" Index="1" FrameworkAlternate="msbuild-15;msbuild-15-netcore;msbuild-16;msbuild-16-netcore" />
      </Parameters>
      <Docs>
        <param name="settings">To be added.</param>
        <param name="evaluationContext"><span data-ttu-id="fb927-571">在需要重新计算的情况下使用的计算上下文</span><span class="sxs-lookup"><span data-stu-id="fb927-571">The evaluation context to use in case reevaluation is required</span></span></param>
        <summary><span data-ttu-id="fb927-572">请参见<see cref="M:Microsoft.Build.Evaluation.Project.CreateProjectInstance(Microsoft.Build.Execution.ProjectInstanceSettings)" /></span><span class="sxs-lookup"><span data-stu-id="fb927-572">See <see cref="M:Microsoft.Build.Evaluation.Project.CreateProjectInstance(Microsoft.Build.Execution.ProjectInstanceSettings)" /></span></span></summary>
        <returns />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DirectoryPath">
      <MemberSignature Language="C#" Value="public string DirectoryPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DirectoryPath" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.DirectoryPath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DirectoryPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DirectoryPath { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DirectoryPath : string" Usage="Microsoft.Build.Evaluation.Project.DirectoryPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[get: System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fb927-573">此项目的根目录。</span><span class="sxs-lookup"><span data-stu-id="fb927-573">The root directory for this project.</span></span>
<span data-ttu-id="fb927-574">根目录从不会是 null；内存中项目使用在加载时的当前目录。</span><span class="sxs-lookup"><span data-stu-id="fb927-574">Is never null: in-memory projects use the current directory from the time of load.</span></span></summary>
        <value><span data-ttu-id="fb927-575">此项目的根目录。</span><span class="sxs-lookup"><span data-stu-id="fb927-575">The root directory for this project.</span></span> <span data-ttu-id="fb927-576">根目录从不会是 null；内存中项目使用在项目加载时的当前目录。</span><span class="sxs-lookup"><span data-stu-id="fb927-576">The root directory is never null; in-memory projects use the current directory at the time of project load.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisableMarkDirty">
      <MemberSignature Language="C#" Value="public bool DisableMarkDirty { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisableMarkDirty" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.DisableMarkDirty" />
      <MemberSignature Language="VB.NET" Value="Public Property DisableMarkDirty As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisableMarkDirty { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.DisableMarkDirty : bool with get, set" Usage="Microsoft.Build.Evaluation.Project.DisableMarkDirty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="msbuild-16;msbuild-16-netcore">
          <AttributeName Language="C#">[get: System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="msbuild-16;msbuild-16-netcore">
          <AttributeName Language="C#">[set: System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fb927-577">是否暂时禁用 <see cref="M:Microsoft.Build.Evaluation.Project.MarkDirty">MarkDirty()</see>。</span><span class="sxs-lookup"><span data-stu-id="fb927-577">Whether <see cref="M:Microsoft.Build.Evaluation.Project.MarkDirty">MarkDirty()</see> is temporarily disabled.</span></span>
<span data-ttu-id="fb927-578">例如，可以通过此标记来设置全局属性，而不必将项目标记为已更新（从而导致重新计算）。</span><span class="sxs-lookup"><span data-stu-id="fb927-578">This allows, for example, a global property to be set without the project getting marked dirty for reevaluation as a consequence.</span></span></summary>
        <value><span data-ttu-id="fb927-579"><see langword="true" /> 如果 <see langword="MarkDirty" /> 已暂时禁用，则为; 否则为 <see langword="false" /> 。</span><span class="sxs-lookup"><span data-stu-id="fb927-579"><see langword="true" /> to indicate <see langword="MarkDirty" /> is temporarily disabled; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EvaluationCounter">
      <MemberSignature Language="C#" Value="public int EvaluationCounter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 EvaluationCounter" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.EvaluationCounter" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EvaluationCounter As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int EvaluationCounter { int get(); };" />
      <MemberSignature Language="F#" Value="member this.EvaluationCounter : int" Usage="Microsoft.Build.Evaluation.Project.EvaluationCounter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fb927-580">已过时。</span><span class="sxs-lookup"><span data-stu-id="fb927-580">Obsolete.</span></span> <span data-ttu-id="fb927-581">请改用 <see cref="P:Microsoft.Build.Evaluation.Project.LastEvaluationId" />。</span><span class="sxs-lookup"><span data-stu-id="fb927-581">Use <see cref="P:Microsoft.Build.Evaluation.Project.LastEvaluationId" /> instead.</span></span></summary>
        <value><span data-ttu-id="fb927-582">递增的值。</span><span class="sxs-lookup"><span data-stu-id="fb927-582">The incremented value.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fb927-583">应将此值与以前的值进行比较，以查看是否已重新计算项目。</span><span class="sxs-lookup"><span data-stu-id="fb927-583">This value should be compared with previous values to see if the project has been re-evaluated.</span></span> <span data-ttu-id="fb927-584">不应使用它来确定重新计算项目的次数，因为对于给定的重新计算，该项目可能会递增多次。</span><span class="sxs-lookup"><span data-stu-id="fb927-584">It should not be used to determine how many times the project has been re-evaluated since it may be incremented by more than one for a given re-evaluation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExpandString">
      <MemberSignature Language="C#" Value="public string ExpandString (string unexpandedValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ExpandString(string unexpandedValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.ExpandString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ExpandString (unexpandedValue As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ExpandString(System::String ^ unexpandedValue);" />
      <MemberSignature Language="F#" Value="member this.ExpandString : string -&gt; string" Usage="project.ExpandString unexpandedValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="unexpandedValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="unexpandedValue"><span data-ttu-id="fb927-585">要计算的字符串。</span><span class="sxs-lookup"><span data-stu-id="fb927-585">The string to be evaluated.</span></span></param>
        <summary><span data-ttu-id="fb927-586">通过展开项和属性来计算提供的字符串，就像在项目文件的最末尾找到的一样。</span><span class="sxs-lookup"><span data-stu-id="fb927-586">Evaluates the provided string by expanding items and properties, as if it was found at the very end of the project file.</span></span>
<span data-ttu-id="fb927-587">这对于一些主机来说是很有用的，因为对它们来说，这种尽力计算已经足够了。</span><span class="sxs-lookup"><span data-stu-id="fb927-587">This is useful for some hosts for which this kind of best-effort evaluation is sufficient.</span></span>
<span data-ttu-id="fb927-588">不扩展空的元数据表达式。</span><span class="sxs-lookup"><span data-stu-id="fb927-588">Does not expand bare metadata expressions.</span></span></summary>
        <returns><span data-ttu-id="fb927-589">计算的字符串。</span><span class="sxs-lookup"><span data-stu-id="fb927-589">The evaluated string.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fb927-590">当尽力评估足够时，可以使用此方法。</span><span class="sxs-lookup"><span data-stu-id="fb927-590">This method can be used when best-effort evaluation is sufficient.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FromFile">
      <MemberSignature Language="C#" Value="public static Microsoft.Build.Evaluation.Project FromFile (string file, Microsoft.Build.Definition.ProjectOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Build.Evaluation.Project FromFile(string file, class Microsoft.Build.Definition.ProjectOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.FromFile(System.String,Microsoft.Build.Definition.ProjectOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromFile (file As String, options As ProjectOptions) As Project" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Microsoft::Build::Evaluation::Project ^ FromFile(System::String ^ file, Microsoft::Build::Definition::ProjectOptions ^ options);" />
      <MemberSignature Language="F#" Value="static member FromFile : string * Microsoft.Build.Definition.ProjectOptions -&gt; Microsoft.Build.Evaluation.Project" Usage="Microsoft.Build.Evaluation.Project.FromFile (file, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Evaluation.Project</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="file" Type="System.String" Index="0" FrameworkAlternate="msbuild-15;msbuild-15-netcore;msbuild-16;msbuild-16-netcore" />
        <Parameter Name="options" Type="Microsoft.Build.Definition.ProjectOptions" Index="1" FrameworkAlternate="msbuild-15;msbuild-15-netcore;msbuild-16;msbuild-16-netcore" />
      </Parameters>
      <Docs>
        <param name="file"><span data-ttu-id="fb927-591">要从中计算项目的文件。</span><span class="sxs-lookup"><span data-stu-id="fb927-591">The file to evaluate the project from.</span></span></param>
        <param name="options"><span data-ttu-id="fb927-592">要使用的 <see cref="T:Microsoft.Build.Definition.ProjectOptions" />。</span><span class="sxs-lookup"><span data-stu-id="fb927-592">The <see cref="T:Microsoft.Build.Definition.ProjectOptions" /> to use.</span></span></param>
        <summary><span data-ttu-id="fb927-593">创建基于文件的项目。</span><span class="sxs-lookup"><span data-stu-id="fb927-593">Create a file based project.</span></span></summary>
        <returns />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FromProjectRootElement">
      <MemberSignature Language="C#" Value="public static Microsoft.Build.Evaluation.Project FromProjectRootElement (Microsoft.Build.Construction.ProjectRootElement rootElement, Microsoft.Build.Definition.ProjectOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Build.Evaluation.Project FromProjectRootElement(class Microsoft.Build.Construction.ProjectRootElement rootElement, class Microsoft.Build.Definition.ProjectOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.FromProjectRootElement(Microsoft.Build.Construction.ProjectRootElement,Microsoft.Build.Definition.ProjectOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromProjectRootElement (rootElement As ProjectRootElement, options As ProjectOptions) As Project" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Microsoft::Build::Evaluation::Project ^ FromProjectRootElement(Microsoft::Build::Construction::ProjectRootElement ^ rootElement, Microsoft::Build::Definition::ProjectOptions ^ options);" />
      <MemberSignature Language="F#" Value="static member FromProjectRootElement : Microsoft.Build.Construction.ProjectRootElement * Microsoft.Build.Definition.ProjectOptions -&gt; Microsoft.Build.Evaluation.Project" Usage="Microsoft.Build.Evaluation.Project.FromProjectRootElement (rootElement, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Evaluation.Project</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rootElement" Type="Microsoft.Build.Construction.ProjectRootElement" Index="0" FrameworkAlternate="msbuild-15;msbuild-15-netcore;msbuild-16;msbuild-16-netcore" />
        <Parameter Name="options" Type="Microsoft.Build.Definition.ProjectOptions" Index="1" FrameworkAlternate="msbuild-15;msbuild-15-netcore;msbuild-16;msbuild-16-netcore" />
      </Parameters>
      <Docs>
        <param name="rootElement"><span data-ttu-id="fb927-594">要从中计算项目的 <see cref="T:Microsoft.Build.Construction.ProjectRootElement" />。</span><span class="sxs-lookup"><span data-stu-id="fb927-594">The <see cref="T:Microsoft.Build.Construction.ProjectRootElement" /> to evaluate the project from.</span></span></param>
        <param name="options"><span data-ttu-id="fb927-595">要使用的 <see cref="T:Microsoft.Build.Definition.ProjectOptions" />。</span><span class="sxs-lookup"><span data-stu-id="fb927-595">The <see cref="T:Microsoft.Build.Definition.ProjectOptions" /> to use.</span></span></param>
        <summary><span data-ttu-id="fb927-596">创建基于 <see cref="T:Microsoft.Build.Construction.ProjectRootElement" /> 的项目。</span><span class="sxs-lookup"><span data-stu-id="fb927-596">Create a <see cref="T:Microsoft.Build.Construction.ProjectRootElement" /> based project.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FromXmlReader">
      <MemberSignature Language="C#" Value="public static Microsoft.Build.Evaluation.Project FromXmlReader (System.Xml.XmlReader reader, Microsoft.Build.Definition.ProjectOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Build.Evaluation.Project FromXmlReader(class System.Xml.XmlReader reader, class Microsoft.Build.Definition.ProjectOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.FromXmlReader(System.Xml.XmlReader,Microsoft.Build.Definition.ProjectOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromXmlReader (reader As XmlReader, options As ProjectOptions) As Project" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Microsoft::Build::Evaluation::Project ^ FromXmlReader(System::Xml::XmlReader ^ reader, Microsoft::Build::Definition::ProjectOptions ^ options);" />
      <MemberSignature Language="F#" Value="static member FromXmlReader : System.Xml.XmlReader * Microsoft.Build.Definition.ProjectOptions -&gt; Microsoft.Build.Evaluation.Project" Usage="Microsoft.Build.Evaluation.Project.FromXmlReader (reader, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Evaluation.Project</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" Index="0" FrameworkAlternate="msbuild-15;msbuild-15-netcore;msbuild-16;msbuild-16-netcore" />
        <Parameter Name="options" Type="Microsoft.Build.Definition.ProjectOptions" Index="1" FrameworkAlternate="msbuild-15;msbuild-15-netcore;msbuild-16;msbuild-16-netcore" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="fb927-597">要从中计算项目的 <see cref="T:System.Xml.XmlReader" />。</span><span class="sxs-lookup"><span data-stu-id="fb927-597">The <see cref="T:System.Xml.XmlReader" /> to evaluate the project from.</span></span></param>
        <param name="options"><span data-ttu-id="fb927-598">要使用的 <see cref="T:Microsoft.Build.Definition.ProjectOptions" />。</span><span class="sxs-lookup"><span data-stu-id="fb927-598">The <see cref="T:Microsoft.Build.Definition.ProjectOptions" /> to use.</span></span></param>
        <summary><span data-ttu-id="fb927-599">创建基于 <see cref="T:System.Xml.XmlReader" /> 的项目。</span><span class="sxs-lookup"><span data-stu-id="fb927-599">Create a <see cref="T:System.Xml.XmlReader" /> based project.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FullPath">
      <MemberSignature Language="C#" Value="public string FullPath { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FullPath" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.FullPath" />
      <MemberSignature Language="VB.NET" Value="Public Property FullPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FullPath { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.FullPath : string with get, set" Usage="Microsoft.Build.Evaluation.Project.FullPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fb927-600">项目文件的完整路径。</span><span class="sxs-lookup"><span data-stu-id="fb927-600">The full path to this project's file.</span></span>
<span data-ttu-id="fb927-601">如果未从磁盘加载项目，则可能为 null。</span><span class="sxs-lookup"><span data-stu-id="fb927-601">May be null, if the project was not loaded from disk.</span></span>
<span data-ttu-id="fb927-602">如果项目已命名，Setter 会重命名该项目。</span><span class="sxs-lookup"><span data-stu-id="fb927-602">Setter renames the project, if it already had a name.</span></span></summary>
        <value><span data-ttu-id="fb927-603">项目源文件的完整路径，如果未从磁盘加载项目，则为空字符串。</span><span class="sxs-lookup"><span data-stu-id="fb927-603">The full path to the project source file, or an empty string if the project was not loaded from disk.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fb927-604">对项目集合中的项目设置此属性会重命名该项目。</span><span class="sxs-lookup"><span data-stu-id="fb927-604">Setting this property on a project in a project collection renames the project.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAllGlobs">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.List&lt;Microsoft.Build.Evaluation.GlobResult&gt; GetAllGlobs ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.List`1&lt;class Microsoft.Build.Evaluation.GlobResult&gt; GetAllGlobs() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.GetAllGlobs" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAllGlobs () As List(Of GlobResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::List&lt;Microsoft::Build::Evaluation::GlobResult ^&gt; ^ GetAllGlobs();" />
      <MemberSignature Language="F#" Value="member this.GetAllGlobs : unit -&gt; System.Collections.Generic.List&lt;Microsoft.Build.Evaluation.GlobResult&gt;" Usage="project.GetAllGlobs " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.List&lt;Microsoft.Build.Evaluation.GlobResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fb927-605">查找项 include 中指定的所有 glob。</span><span class="sxs-lookup"><span data-stu-id="fb927-605">Finds all the globs specified in item includes.</span></span></summary>
        <returns><span data-ttu-id="fb927-606"><see cref="T:Microsoft.Build.Evaluation.GlobResult" /> 的列表。</span><span class="sxs-lookup"><span data-stu-id="fb927-606">List of <see cref="T:Microsoft.Build.Evaluation.GlobResult" />.</span></span></returns>
        <remarks><span data-ttu-id="fb927-607"><see cref="P:Microsoft.Build.Evaluation.GlobResult.MsBuildGlob" /> 是一个 <see cref="T:Microsoft.Build.Globbing.IMSBuildGlob" /> ，它合并 include 元素中的所有 glob，并忽略 exclude 属性中的所有片段和所有删除元素中应用于 include 元素的所有片段。</span><span class="sxs-lookup"><span data-stu-id="fb927-607"><see cref="P:Microsoft.Build.Evaluation.GlobResult.MsBuildGlob" /> is a <see cref="T:Microsoft.Build.Globbing.IMSBuildGlob" /> that combines all globs in the include element and ignores all the fragments in the exclude attribute and all the fragments in all Remove elements that apply to the include element.</span></span>
             
<span data-ttu-id="fb927-608">用户可以构造合并项目中所有 glob 的复合 glob：</span><span class="sxs-lookup"><span data-stu-id="fb927-608">Users can construct a composite glob that incorporates all the globs in the Project:</span></span> <code>
             var uberGlob = new CompositeGlob(project.GetAllGlobs().Select(r =&gt; r.MSBuildGlob).ToArray());
             uberGlob.IsMatch("foo.cs");
             </code></remarks>
        <example><code>
            <P>*.txt</P>
            <Bar Include="bar" /> (both outside and inside project cone)
            <Zar Include="C:\**\*.foo" /> (both outside and inside project cone)
            <Foo Include="*.a;*.b" Exclude="3.a" /><Foo Remove="2.a" /><Foo Include="**\*.b" Exclude="1.b;**\obj\*.b;**\bar\*.b" /><Foo Include="$(P)" /><Foo Include="*.a;@(Bar);3.a" /> (If Bar has globs, they will have been included when querying Bar ProjectItems for globs)
            <Foo Include="*.cs" Exclude="@(Bar)" /></code>
             
<span data-ttu-id="fb927-609">示例结果： [GlobResult (glob： "C： \* \* \* foo"，排除： [] ) ，GlobResult (glob： ["*. a"，"*. b"]，exclude = [""]，remove = ["2. a"] ) ，GlobResult (glob： "\* \* \* b."，exclude = ["1. b，\* \* \obj \* "，\**\bar \* "] ) ，GlobResult (glob："*.txt "，exclude = [] ) ，GlobResult (glob："*。 a "，exclude = [] ) ，GlobResult (glob："*.cs "，exclude = [" bar "] ) ]</span><span class="sxs-lookup"><span data-stu-id="fb927-609">Example result: [ GlobResult(glob: "C:\**\*.foo", exclude: []), GlobResult(glob: ["*.a", "\*.b"], exclude=["3.a"], remove=["2.a"]), GlobResult(glob: "\*\*\*.b", exclude=["1.b, \*\*\obj\*.b", \**\bar\*.b"]), GlobResult(glob: "*.txt", exclude=[]), GlobResult(glob: "*.a", exclude=[]), GlobResult(glob: "*.cs", exclude=["bar"]) ]</span></span></example>
      </Docs>
    </Member>
    <Member MemberName="GetAllGlobs">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.List&lt;Microsoft.Build.Evaluation.GlobResult&gt; GetAllGlobs (Microsoft.Build.Evaluation.Context.EvaluationContext evaluationContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.List`1&lt;class Microsoft.Build.Evaluation.GlobResult&gt; GetAllGlobs(class Microsoft.Build.Evaluation.Context.EvaluationContext evaluationContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.GetAllGlobs(Microsoft.Build.Evaluation.Context.EvaluationContext)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAllGlobs (evaluationContext As EvaluationContext) As List(Of GlobResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::List&lt;Microsoft::Build::Evaluation::GlobResult ^&gt; ^ GetAllGlobs(Microsoft::Build::Evaluation::Context::EvaluationContext ^ evaluationContext);" />
      <MemberSignature Language="F#" Value="member this.GetAllGlobs : Microsoft.Build.Evaluation.Context.EvaluationContext -&gt; System.Collections.Generic.List&lt;Microsoft.Build.Evaluation.GlobResult&gt;" Usage="project.GetAllGlobs evaluationContext" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.List&lt;Microsoft.Build.Evaluation.GlobResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="evaluationContext" Type="Microsoft.Build.Evaluation.Context.EvaluationContext" Index="0" FrameworkAlternate="msbuild-15;msbuild-15-netcore;msbuild-16;msbuild-16-netcore" />
      </Parameters>
      <Docs>
        <param name="evaluationContext"><span data-ttu-id="fb927-610">在需要重新计算的情况下使用的计算上下文。</span><span class="sxs-lookup"><span data-stu-id="fb927-610">The evaluation context to use in case reevaluation is required.</span></span>
<span data-ttu-id="fb927-611">为了避免重新计算，请使用 <see cref="F:Microsoft.Build.Evaluation.ProjectLoadSettings.RecordEvaluatedItemElements" /></span><span class="sxs-lookup"><span data-stu-id="fb927-611">To avoid reevaluation use <see cref="F:Microsoft.Build.Evaluation.ProjectLoadSettings.RecordEvaluatedItemElements" /></span></span></param>
        <summary><span data-ttu-id="fb927-612">请参见<see cref="M:Microsoft.Build.Evaluation.Project.GetAllGlobs" /></span><span class="sxs-lookup"><span data-stu-id="fb927-612">See <see cref="M:Microsoft.Build.Evaluation.Project.GetAllGlobs" /></span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAllGlobs">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.List&lt;Microsoft.Build.Evaluation.GlobResult&gt; GetAllGlobs (string itemType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.List`1&lt;class Microsoft.Build.Evaluation.GlobResult&gt; GetAllGlobs(string itemType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.GetAllGlobs(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAllGlobs (itemType As String) As List(Of GlobResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::List&lt;Microsoft::Build::Evaluation::GlobResult ^&gt; ^ GetAllGlobs(System::String ^ itemType);" />
      <MemberSignature Language="F#" Value="member this.GetAllGlobs : string -&gt; System.Collections.Generic.List&lt;Microsoft.Build.Evaluation.GlobResult&gt;" Usage="project.GetAllGlobs itemType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.List&lt;Microsoft.Build.Evaluation.GlobResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemType" Type="System.String" Index="0" FrameworkAlternate="msbuild-15;msbuild-15-netcore;msbuild-16;msbuild-16-netcore" />
      </Parameters>
      <Docs>
        <param name="itemType"><span data-ttu-id="fb927-613">将搜索范围限定为此类型的项元素</span><span class="sxs-lookup"><span data-stu-id="fb927-613">Confine search to item elements of this type</span></span></param>
        <summary><span data-ttu-id="fb927-614"><see cref="M:Microsoft.Build.Evaluation.Project.GetAllGlobs" /> 的重载</span><span class="sxs-lookup"><span data-stu-id="fb927-614">Overload of <see cref="M:Microsoft.Build.Evaluation.Project.GetAllGlobs" /></span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAllGlobs">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.List&lt;Microsoft.Build.Evaluation.GlobResult&gt; GetAllGlobs (string itemType, Microsoft.Build.Evaluation.Context.EvaluationContext evaluationContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.List`1&lt;class Microsoft.Build.Evaluation.GlobResult&gt; GetAllGlobs(string itemType, class Microsoft.Build.Evaluation.Context.EvaluationContext evaluationContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.GetAllGlobs(System.String,Microsoft.Build.Evaluation.Context.EvaluationContext)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAllGlobs (itemType As String, evaluationContext As EvaluationContext) As List(Of GlobResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::List&lt;Microsoft::Build::Evaluation::GlobResult ^&gt; ^ GetAllGlobs(System::String ^ itemType, Microsoft::Build::Evaluation::Context::EvaluationContext ^ evaluationContext);" />
      <MemberSignature Language="F#" Value="member this.GetAllGlobs : string * Microsoft.Build.Evaluation.Context.EvaluationContext -&gt; System.Collections.Generic.List&lt;Microsoft.Build.Evaluation.GlobResult&gt;" Usage="project.GetAllGlobs (itemType, evaluationContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.List&lt;Microsoft.Build.Evaluation.GlobResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemType" Type="System.String" Index="0" FrameworkAlternate="msbuild-15;msbuild-15-netcore;msbuild-16;msbuild-16-netcore" />
        <Parameter Name="evaluationContext" Type="Microsoft.Build.Evaluation.Context.EvaluationContext" Index="1" FrameworkAlternate="msbuild-15;msbuild-15-netcore;msbuild-16;msbuild-16-netcore" />
      </Parameters>
      <Docs>
        <param name="itemType">To be added.</param>
        <param name="evaluationContext"><span data-ttu-id="fb927-615">在需要重新计算的情况下使用的计算上下文。</span><span class="sxs-lookup"><span data-stu-id="fb927-615">The evaluation context to use in case reevaluation is required.</span></span>
<span data-ttu-id="fb927-616">为了避免重新计算，请使用 <see cref="F:Microsoft.Build.Evaluation.ProjectLoadSettings.RecordEvaluatedItemElements" /></span><span class="sxs-lookup"><span data-stu-id="fb927-616">To avoid reevaluation use <see cref="F:Microsoft.Build.Evaluation.ProjectLoadSettings.RecordEvaluatedItemElements" /></span></span></param>
        <summary><span data-ttu-id="fb927-617">请参见<see cref="M:Microsoft.Build.Evaluation.Project.GetAllGlobs(System.String)" /></span><span class="sxs-lookup"><span data-stu-id="fb927-617">See <see cref="M:Microsoft.Build.Evaluation.Project.GetAllGlobs(System.String)" /></span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetEvaluatedItemIncludeEscaped">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="fb927-618">获取所提供的项的 Include 特性的值，该值是计算得到的且经过了转义。</span><span class="sxs-lookup"><span data-stu-id="fb927-618">Gets evaluated, escaped value of the Include attribute of the provided items.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetEvaluatedItemIncludeEscaped">
      <MemberSignature Language="C#" Value="public static string GetEvaluatedItemIncludeEscaped (Microsoft.Build.Evaluation.ProjectItem item);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetEvaluatedItemIncludeEscaped(class Microsoft.Build.Evaluation.ProjectItem item) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.GetEvaluatedItemIncludeEscaped(Microsoft.Build.Evaluation.ProjectItem)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetEvaluatedItemIncludeEscaped (item As ProjectItem) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetEvaluatedItemIncludeEscaped(Microsoft::Build::Evaluation::ProjectItem ^ item);" />
      <MemberSignature Language="F#" Value="static member GetEvaluatedItemIncludeEscaped : Microsoft.Build.Evaluation.ProjectItem -&gt; string" Usage="Microsoft.Build.Evaluation.Project.GetEvaluatedItemIncludeEscaped item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="Microsoft.Build.Evaluation.ProjectItem" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="fb927-619">要计算和转义的项。</span><span class="sxs-lookup"><span data-stu-id="fb927-619">The item to be evaluated and escaped.</span></span></param>
        <summary><span data-ttu-id="fb927-620">针对所提供的项的 include 返回经计算的转义值。</span><span class="sxs-lookup"><span data-stu-id="fb927-620">Returns the evaluated, escaped value of the provided item's include.</span></span></summary>
        <returns><span data-ttu-id="fb927-621">所提供的项的 Include 特性的值，该值是计算得到的且经过了转义。</span><span class="sxs-lookup"><span data-stu-id="fb927-621">The evaluated, escaped value of the Include attribute of the provided items.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEvaluatedItemIncludeEscaped">
      <MemberSignature Language="C#" Value="public static string GetEvaluatedItemIncludeEscaped (Microsoft.Build.Evaluation.ProjectItemDefinition item);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetEvaluatedItemIncludeEscaped(class Microsoft.Build.Evaluation.ProjectItemDefinition item) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.GetEvaluatedItemIncludeEscaped(Microsoft.Build.Evaluation.ProjectItemDefinition)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetEvaluatedItemIncludeEscaped (item As ProjectItemDefinition) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetEvaluatedItemIncludeEscaped(Microsoft::Build::Evaluation::ProjectItemDefinition ^ item);" />
      <MemberSignature Language="F#" Value="static member GetEvaluatedItemIncludeEscaped : Microsoft.Build.Evaluation.ProjectItemDefinition -&gt; string" Usage="Microsoft.Build.Evaluation.Project.GetEvaluatedItemIncludeEscaped item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="Microsoft.Build.Evaluation.ProjectItemDefinition" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="fb927-622">要计算和转义的项定义。</span><span class="sxs-lookup"><span data-stu-id="fb927-622">The item definition to be evaluated and escaped.</span></span></param>
        <summary><span data-ttu-id="fb927-623">针对所提供的项定义的 include 返回经计算的转义值。</span><span class="sxs-lookup"><span data-stu-id="fb927-623">Returns the evaluated, escaped value of the provided item definition's include.</span></span></summary>
        <returns><span data-ttu-id="fb927-624">Include 特性的值。</span><span class="sxs-lookup"><span data-stu-id="fb927-624">The value of the Include attribute.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetItemProvenance">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.List&lt;Microsoft.Build.Evaluation.ProvenanceResult&gt; GetItemProvenance (Microsoft.Build.Evaluation.ProjectItem item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.List`1&lt;class Microsoft.Build.Evaluation.ProvenanceResult&gt; GetItemProvenance(class Microsoft.Build.Evaluation.ProjectItem item) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.GetItemProvenance(Microsoft.Build.Evaluation.ProjectItem)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetItemProvenance (item As ProjectItem) As List(Of ProvenanceResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::List&lt;Microsoft::Build::Evaluation::ProvenanceResult ^&gt; ^ GetItemProvenance(Microsoft::Build::Evaluation::ProjectItem ^ item);" />
      <MemberSignature Language="F#" Value="member this.GetItemProvenance : Microsoft.Build.Evaluation.ProjectItem -&gt; System.Collections.Generic.List&lt;Microsoft.Build.Evaluation.ProvenanceResult&gt;" Usage="project.GetItemProvenance item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.List&lt;Microsoft.Build.Evaluation.ProvenanceResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="Microsoft.Build.Evaluation.ProjectItem" Index="0" FrameworkAlternate="msbuild-15;msbuild-15-netcore;msbuild-16;msbuild-16-netcore" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="fb927-625">ProjectItem 对象，指示要匹配的项规范以及要限制搜索范围的项类型。</span><span class="sxs-lookup"><span data-stu-id="fb927-625">The ProjectItem object that indicates: the itemspec to match and the item type to constrain the search in.</span></span>
<span data-ttu-id="fb927-626">搜索范围也限于在生成此 <paramref name="item" /> 的项元素之前出现的项元素。</span><span class="sxs-lookup"><span data-stu-id="fb927-626">The search is also constrained on item elements appearing before the item element that produced this <paramref name="item" />.</span></span>
<span data-ttu-id="fb927-627">生成此 <paramref name="item" /> 的元素包含在结果中。</span><span class="sxs-lookup"><span data-stu-id="fb927-627">The element that produced this <paramref name="item" /> is included in the results.</span></span></param>
        <summary><span data-ttu-id="fb927-628"><see cref="M:Microsoft.Build.Evaluation.Project.GetItemProvenance(System.String)" /> 的重载</span><span class="sxs-lookup"><span data-stu-id="fb927-628">Overload of <see cref="M:Microsoft.Build.Evaluation.Project.GetItemProvenance(System.String)" /></span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetItemProvenance">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.List&lt;Microsoft.Build.Evaluation.ProvenanceResult&gt; GetItemProvenance (string itemToMatch);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.List`1&lt;class Microsoft.Build.Evaluation.ProvenanceResult&gt; GetItemProvenance(string itemToMatch) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.GetItemProvenance(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetItemProvenance (itemToMatch As String) As List(Of ProvenanceResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::List&lt;Microsoft::Build::Evaluation::ProvenanceResult ^&gt; ^ GetItemProvenance(System::String ^ itemToMatch);" />
      <MemberSignature Language="F#" Value="member this.GetItemProvenance : string -&gt; System.Collections.Generic.List&lt;Microsoft.Build.Evaluation.ProvenanceResult&gt;" Usage="project.GetItemProvenance itemToMatch" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.List&lt;Microsoft.Build.Evaluation.ProvenanceResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemToMatch" Type="System.String" Index="0" FrameworkAlternate="msbuild-15;msbuild-15-netcore;msbuild-16;msbuild-16-netcore" />
      </Parameters>
      <Docs>
        <param name="itemToMatch"><span data-ttu-id="fb927-629">要对其执行匹配的字符串</span><span class="sxs-lookup"><span data-stu-id="fb927-629">The string to perform matching against</span></span></param>
        <summary><span data-ttu-id="fb927-630">查找具有与给定字符串相匹配的项规范的逻辑项目中的所有项元素：- 将包含（或排除）字符串的元素 - 将更新字符串（尚未执行）的元素 - 将删除字符串（尚未执行）的元素</span><span class="sxs-lookup"><span data-stu-id="fb927-630">Finds all the item elements in the logical project with itemspecs that match the given string: - elements that would include (or exclude) the string - elements that would update the string (not yet implemented) - elements that would remove the string (not yet implemented)</span></span></summary>
        <returns><span data-ttu-id="fb927-631">按项目计算顺序排序的 <see cref="T:Microsoft.Build.Evaluation.ProvenanceResult" /> 的列表。</span><span class="sxs-lookup"><span data-stu-id="fb927-631">A list of <see cref="T:Microsoft.Build.Evaluation.ProvenanceResult" />, sorted in project evaluation order.</span></span></returns>
        <remarks><span data-ttu-id="fb927-632">此方法及其重载适用于需要检查可能引用特定项实例的所有项元素的客户端。</span><span class="sxs-lookup"><span data-stu-id="fb927-632">This method and its overloads are useful for clients that need to inspect all the item elements that might refer to a specific item instance.</span></span> <span data-ttu-id="fb927-633">例如，Visual Studio 使用它来检查具有 glob 的项目。</span><span class="sxs-lookup"><span data-stu-id="fb927-633">For example, Visual Studio uses it to inspect projects with globs.</span></span> <span data-ttu-id="fb927-634">文件系统或 IDE 文件项目发生更改时，VS 将调用此方法来查找可能引用检测到的文件更改的所有项 (例如，"哪些项元素引用" Program.cs "？）) 。</span><span class="sxs-lookup"><span data-stu-id="fb927-634">Upon a file system or IDE file artifact change, VS calls this method to find all the items that might refer to the detected file change (e.g. 'which item elements refer to "Program.cs"?').</span></span>
<span data-ttu-id="fb927-635">它使用此类信息来了解应编辑哪些元素，以反映用户或文件系统的更改。</span><span class="sxs-lookup"><span data-stu-id="fb927-635">It uses such information to know which elements it should edit to reflect the user or file system changes.</span></span>
             
<span data-ttu-id="fb927-636">字符串匹配尝试首先匹配字符串。</span><span class="sxs-lookup"><span data-stu-id="fb927-636">Literal string matching tries to first match the strings.</span></span> <span data-ttu-id="fb927-637">如果检查失败，则它会尝试将字符串与它们表示文件一样：将两个字符串作为相对于当前项目目录的文件进行标准化</span><span class="sxs-lookup"><span data-stu-id="fb927-637">If the check fails, it then tries to match the strings as if they represented files: it normalizes both strings as files relative to the current project directory</span></span> 
<span data-ttu-id="fb927-638">GetItemProvenance 受到导致的某些源的影响：-在计算后执行，因此在项引用存在时不区分项数据流 (它在计算结束时看到项) </span><span class="sxs-lookup"><span data-stu-id="fb927-638">GetItemProvenance suffers from some sources of inaccuracy: - it is performed after evaluation, thus is insensitive to item data flow when item references are present (it sees items as they are at the end of evaluation)</span></span> 
<span data-ttu-id="fb927-639">此 API 及其返回类型容易发生变化。</span><span class="sxs-lookup"><span data-stu-id="fb927-639">This API and its return types are prone to change.</span></span></remarks>
        <example><span data-ttu-id="fb927-640">以下代码片段显示了哪些 <c>GetItemProvenance ( "a.cs" ) </c> 为各个项元素返回</span><span class="sxs-lookup"><span data-stu-id="fb927-640">The following snippet shows what <c>GetItemProvenance("a.cs")</c> returns for various item elements</span></span> <code><A Include="a.cs;*.cs" /> // Occurrences:2; Operation: Include; Provenance: StringLiteral | Glob
             <B Include="*.cs" Exclude="a.cs" /> // Occurrences: 1; Operation: Exclude; Provenance: StringLiteral
             <C Include="b.cs" /> // NA
             <D Include="@(A)" /> // Occurrences: 2; Operation: Include; Provenance: Inconclusive (it is an indirect occurrence from a referenced item)
             <E Include="$(P)" /> // Occurrences: 4; Operation: Include; Provenance: FromLiteral (direct reference in $P) | Glob (direct reference in $P) | Inconclusive (it is an indirect occurrence from referenced properties and items)
             <PropertyGroup><P>a.cs;*.cs;@(A)</P></PropertyGroup></code></example>
      </Docs>
    </Member>
    <Member MemberName="GetItemProvenance">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.List&lt;Microsoft.Build.Evaluation.ProvenanceResult&gt; GetItemProvenance (Microsoft.Build.Evaluation.ProjectItem item, Microsoft.Build.Evaluation.Context.EvaluationContext evaluationContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.List`1&lt;class Microsoft.Build.Evaluation.ProvenanceResult&gt; GetItemProvenance(class Microsoft.Build.Evaluation.ProjectItem item, class Microsoft.Build.Evaluation.Context.EvaluationContext evaluationContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.GetItemProvenance(Microsoft.Build.Evaluation.ProjectItem,Microsoft.Build.Evaluation.Context.EvaluationContext)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetItemProvenance (item As ProjectItem, evaluationContext As EvaluationContext) As List(Of ProvenanceResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::List&lt;Microsoft::Build::Evaluation::ProvenanceResult ^&gt; ^ GetItemProvenance(Microsoft::Build::Evaluation::ProjectItem ^ item, Microsoft::Build::Evaluation::Context::EvaluationContext ^ evaluationContext);" />
      <MemberSignature Language="F#" Value="member this.GetItemProvenance : Microsoft.Build.Evaluation.ProjectItem * Microsoft.Build.Evaluation.Context.EvaluationContext -&gt; System.Collections.Generic.List&lt;Microsoft.Build.Evaluation.ProvenanceResult&gt;" Usage="project.GetItemProvenance (item, evaluationContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.List&lt;Microsoft.Build.Evaluation.ProvenanceResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="Microsoft.Build.Evaluation.ProjectItem" Index="0" FrameworkAlternate="msbuild-15;msbuild-15-netcore;msbuild-16;msbuild-16-netcore" />
        <Parameter Name="evaluationContext" Type="Microsoft.Build.Evaluation.Context.EvaluationContext" Index="1" FrameworkAlternate="msbuild-15;msbuild-15-netcore;msbuild-16;msbuild-16-netcore" />
      </Parameters>
      <Docs>
        <param name="item">To be added.</param>
        <param name="evaluationContext"><span data-ttu-id="fb927-641">在需要重新计算的情况下使用的计算上下文。</span><span class="sxs-lookup"><span data-stu-id="fb927-641">The evaluation context to use in case reevaluation is required.</span></span>
<span data-ttu-id="fb927-642">为了避免重新计算，请使用 <see cref="F:Microsoft.Build.Evaluation.ProjectLoadSettings.RecordEvaluatedItemElements" /></span><span class="sxs-lookup"><span data-stu-id="fb927-642">To avoid reevaluation use <see cref="F:Microsoft.Build.Evaluation.ProjectLoadSettings.RecordEvaluatedItemElements" /></span></span></param>
        <summary><span data-ttu-id="fb927-643">请参见<see cref="M:Microsoft.Build.Evaluation.Project.GetItemProvenance(Microsoft.Build.Evaluation.ProjectItem)" /></span><span class="sxs-lookup"><span data-stu-id="fb927-643">See <see cref="M:Microsoft.Build.Evaluation.Project.GetItemProvenance(Microsoft.Build.Evaluation.ProjectItem)" /></span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetItemProvenance">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.List&lt;Microsoft.Build.Evaluation.ProvenanceResult&gt; GetItemProvenance (string itemToMatch, Microsoft.Build.Evaluation.Context.EvaluationContext evaluationContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.List`1&lt;class Microsoft.Build.Evaluation.ProvenanceResult&gt; GetItemProvenance(string itemToMatch, class Microsoft.Build.Evaluation.Context.EvaluationContext evaluationContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.GetItemProvenance(System.String,Microsoft.Build.Evaluation.Context.EvaluationContext)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetItemProvenance (itemToMatch As String, evaluationContext As EvaluationContext) As List(Of ProvenanceResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::List&lt;Microsoft::Build::Evaluation::ProvenanceResult ^&gt; ^ GetItemProvenance(System::String ^ itemToMatch, Microsoft::Build::Evaluation::Context::EvaluationContext ^ evaluationContext);" />
      <MemberSignature Language="F#" Value="member this.GetItemProvenance : string * Microsoft.Build.Evaluation.Context.EvaluationContext -&gt; System.Collections.Generic.List&lt;Microsoft.Build.Evaluation.ProvenanceResult&gt;" Usage="project.GetItemProvenance (itemToMatch, evaluationContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.List&lt;Microsoft.Build.Evaluation.ProvenanceResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemToMatch" Type="System.String" Index="0" FrameworkAlternate="msbuild-15;msbuild-15-netcore;msbuild-16;msbuild-16-netcore" />
        <Parameter Name="evaluationContext" Type="Microsoft.Build.Evaluation.Context.EvaluationContext" Index="1" FrameworkAlternate="msbuild-15;msbuild-15-netcore;msbuild-16;msbuild-16-netcore" />
      </Parameters>
      <Docs>
        <param name="itemToMatch">To be added.</param>
        <param name="evaluationContext"><span data-ttu-id="fb927-644">在需要重新计算的情况下使用的计算上下文。</span><span class="sxs-lookup"><span data-stu-id="fb927-644">The evaluation context to use in case reevaluation is required.</span></span>
<span data-ttu-id="fb927-645">为了避免重新计算，请使用 <see cref="F:Microsoft.Build.Evaluation.ProjectLoadSettings.RecordEvaluatedItemElements" /></span><span class="sxs-lookup"><span data-stu-id="fb927-645">To avoid reevaluation use <see cref="F:Microsoft.Build.Evaluation.ProjectLoadSettings.RecordEvaluatedItemElements" /></span></span></param>
        <summary><span data-ttu-id="fb927-646">请参见<see cref="M:Microsoft.Build.Evaluation.Project.GetItemProvenance(System.String)" /></span><span class="sxs-lookup"><span data-stu-id="fb927-646">See <see cref="M:Microsoft.Build.Evaluation.Project.GetItemProvenance(System.String)" /></span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetItemProvenance">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.List&lt;Microsoft.Build.Evaluation.ProvenanceResult&gt; GetItemProvenance (string itemToMatch, string itemType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.List`1&lt;class Microsoft.Build.Evaluation.ProvenanceResult&gt; GetItemProvenance(string itemToMatch, string itemType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.GetItemProvenance(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetItemProvenance (itemToMatch As String, itemType As String) As List(Of ProvenanceResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::List&lt;Microsoft::Build::Evaluation::ProvenanceResult ^&gt; ^ GetItemProvenance(System::String ^ itemToMatch, System::String ^ itemType);" />
      <MemberSignature Language="F#" Value="member this.GetItemProvenance : string * string -&gt; System.Collections.Generic.List&lt;Microsoft.Build.Evaluation.ProvenanceResult&gt;" Usage="project.GetItemProvenance (itemToMatch, itemType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.List&lt;Microsoft.Build.Evaluation.ProvenanceResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemToMatch" Type="System.String" Index="0" FrameworkAlternate="msbuild-15;msbuild-15-netcore;msbuild-16;msbuild-16-netcore" />
        <Parameter Name="itemType" Type="System.String" Index="1" FrameworkAlternate="msbuild-15;msbuild-15-netcore;msbuild-16;msbuild-16-netcore" />
      </Parameters>
      <Docs>
        <param name="itemToMatch"><span data-ttu-id="fb927-647">要对其执行匹配的字符串</span><span class="sxs-lookup"><span data-stu-id="fb927-647">The string to perform matching against</span></span></param>
        <param name="itemType"><span data-ttu-id="fb927-648">要在其中进行搜索的项类型</span><span class="sxs-lookup"><span data-stu-id="fb927-648">The item type to constrain the search in</span></span></param>
        <summary><span data-ttu-id="fb927-649"><see cref="M:Microsoft.Build.Evaluation.Project.GetItemProvenance(System.String)" /> 的重载</span><span class="sxs-lookup"><span data-stu-id="fb927-649">Overload of <see cref="M:Microsoft.Build.Evaluation.Project.GetItemProvenance(System.String)" /></span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetItemProvenance">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.List&lt;Microsoft.Build.Evaluation.ProvenanceResult&gt; GetItemProvenance (string itemToMatch, string itemType, Microsoft.Build.Evaluation.Context.EvaluationContext evaluationContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.List`1&lt;class Microsoft.Build.Evaluation.ProvenanceResult&gt; GetItemProvenance(string itemToMatch, string itemType, class Microsoft.Build.Evaluation.Context.EvaluationContext evaluationContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.GetItemProvenance(System.String,System.String,Microsoft.Build.Evaluation.Context.EvaluationContext)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetItemProvenance (itemToMatch As String, itemType As String, evaluationContext As EvaluationContext) As List(Of ProvenanceResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::List&lt;Microsoft::Build::Evaluation::ProvenanceResult ^&gt; ^ GetItemProvenance(System::String ^ itemToMatch, System::String ^ itemType, Microsoft::Build::Evaluation::Context::EvaluationContext ^ evaluationContext);" />
      <MemberSignature Language="F#" Value="member this.GetItemProvenance : string * string * Microsoft.Build.Evaluation.Context.EvaluationContext -&gt; System.Collections.Generic.List&lt;Microsoft.Build.Evaluation.ProvenanceResult&gt;" Usage="project.GetItemProvenance (itemToMatch, itemType, evaluationContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.List&lt;Microsoft.Build.Evaluation.ProvenanceResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemToMatch" Type="System.String" Index="0" FrameworkAlternate="msbuild-15;msbuild-15-netcore;msbuild-16;msbuild-16-netcore" />
        <Parameter Name="itemType" Type="System.String" Index="1" FrameworkAlternate="msbuild-15;msbuild-15-netcore;msbuild-16;msbuild-16-netcore" />
        <Parameter Name="evaluationContext" Type="Microsoft.Build.Evaluation.Context.EvaluationContext" Index="2" FrameworkAlternate="msbuild-15;msbuild-15-netcore;msbuild-16;msbuild-16-netcore" />
      </Parameters>
      <Docs>
        <param name="itemToMatch">To be added.</param>
        <param name="itemType">To be added.</param>
        <param name="evaluationContext"><span data-ttu-id="fb927-650">在需要重新计算的情况下使用的计算上下文。</span><span class="sxs-lookup"><span data-stu-id="fb927-650">The evaluation context to use in case reevaluation is required.</span></span>
<span data-ttu-id="fb927-651">为了避免重新计算，请使用 <see cref="F:Microsoft.Build.Evaluation.ProjectLoadSettings.RecordEvaluatedItemElements" /></span><span class="sxs-lookup"><span data-stu-id="fb927-651">To avoid reevaluation use <see cref="F:Microsoft.Build.Evaluation.ProjectLoadSettings.RecordEvaluatedItemElements" /></span></span></param>
        <summary><span data-ttu-id="fb927-652">请参见<see cref="M:Microsoft.Build.Evaluation.Project.GetItemProvenance(System.String,System.String)" /></span><span class="sxs-lookup"><span data-stu-id="fb927-652">See <see cref="M:Microsoft.Build.Evaluation.Project.GetItemProvenance(System.String,System.String)" /></span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetItems">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectItem&gt; GetItems (string itemType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.ICollection`1&lt;class Microsoft.Build.Evaluation.ProjectItem&gt; GetItems(string itemType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.GetItems(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetItems (itemType As String) As ICollection(Of ProjectItem)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::ICollection&lt;Microsoft::Build::Evaluation::ProjectItem ^&gt; ^ GetItems(System::String ^ itemType);" />
      <MemberSignature Language="F#" Value="member this.GetItems : string -&gt; System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectItem&gt;" Usage="project.GetItems itemType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectItem&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="itemType"><span data-ttu-id="fb927-653">要检索的项类型。</span><span class="sxs-lookup"><span data-stu-id="fb927-653">The item type to be retrieved.</span></span></param>
        <summary><span data-ttu-id="fb927-654">指定类型的项目中的所有项。</span><span class="sxs-lookup"><span data-stu-id="fb927-654">All the items in the project of the specified type.</span></span>
<span data-ttu-id="fb927-655">如果不存在任何给定项类型的项，则返回一个空列表。</span><span class="sxs-lookup"><span data-stu-id="fb927-655">If there are none, returns an empty list.</span></span>
<span data-ttu-id="fb927-656">使用 AddItem 或 RemoveItem 修改此项目中的项。</span><span class="sxs-lookup"><span data-stu-id="fb927-656">Use AddItem or RemoveItem to modify items in this project.</span></span></summary>
        <returns><span data-ttu-id="fb927-657">项目中的给定项类型的所有项，或者如果没有任何具有给定项名称的项，则为空列表。</span><span class="sxs-lookup"><span data-stu-id="fb927-657">All the items in the project of the given item type, or an empty list if there are no items with the given item name.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fb927-658">使用 AddItem 或 RemoveItem 修改此项目中的项。</span><span class="sxs-lookup"><span data-stu-id="fb927-658">Use AddItem or RemoveItem to modify items in this project.</span></span>  
  
 ]]></format>
        </remarks>
        <comments><span data-ttu-id="fb927-659">数据.GetItems 返回一个只读集合，因此无需在此处重新包装。</span><span class="sxs-lookup"><span data-stu-id="fb927-659">data.GetItems returns a read-only collection, so no need to re-wrap it here.</span></span></comments>
      </Docs>
    </Member>
    <Member MemberName="GetItemsByEvaluatedInclude">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectItem&gt; GetItemsByEvaluatedInclude (string evaluatedInclude);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.ICollection`1&lt;class Microsoft.Build.Evaluation.ProjectItem&gt; GetItemsByEvaluatedInclude(string evaluatedInclude) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.GetItemsByEvaluatedInclude(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetItemsByEvaluatedInclude (evaluatedInclude As String) As ICollection(Of ProjectItem)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::ICollection&lt;Microsoft::Build::Evaluation::ProjectItem ^&gt; ^ GetItemsByEvaluatedInclude(System::String ^ evaluatedInclude);" />
      <MemberSignature Language="F#" Value="member this.GetItemsByEvaluatedInclude : string -&gt; System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectItem&gt;" Usage="project.GetItemsByEvaluatedInclude evaluatedInclude" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectItem&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="evaluatedInclude" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="evaluatedInclude"><span data-ttu-id="fb927-660">计算的 Include 特性。</span><span class="sxs-lookup"><span data-stu-id="fb927-660">The evaluated Include attribute.</span></span></param>
        <summary><span data-ttu-id="fb927-661">返回具有指定计算的 Include 的所有项。</span><span class="sxs-lookup"><span data-stu-id="fb927-661">Returns all items that have the specified evaluated include.</span></span>
<span data-ttu-id="fb927-662">例如，具有计算的 Include“bar.cpp”的所有项。</span><span class="sxs-lookup"><span data-stu-id="fb927-662">For example, all items that have the evaluated include "bar.cpp".</span></span>
<span data-ttu-id="fb927-663">通常会有零个或一个项，但有时会有两个项，它们具有相同的路径和不同的项类型，甚至连项类型都相同。</span><span class="sxs-lookup"><span data-stu-id="fb927-663">Typically there will be zero or one, but sometimes there are two items with the same path and different item types, or even the same item types.</span></span> <span data-ttu-id="fb927-664">这会返回全部。</span><span class="sxs-lookup"><span data-stu-id="fb927-664">This will return them all.</span></span></summary>
        <returns><span data-ttu-id="fb927-665">具有给定的计算 Include 特性的所有项。</span><span class="sxs-lookup"><span data-stu-id="fb927-665">All items that have the given evaluated Include attribute.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fb927-666">例如，此方法可能会返回所有具有已计算的 Include 特性 "component .cpp" 的项。</span><span class="sxs-lookup"><span data-stu-id="fb927-666">For example, this method might return all items that have the evaluated Include attribute "component.cpp".</span></span> <span data-ttu-id="fb927-667">通常，返回零个或一个项。</span><span class="sxs-lookup"><span data-stu-id="fb927-667">Typically zero or one items are returned.</span></span> <span data-ttu-id="fb927-668">但是，可能有多个具有相同路径和不同项类型的项，甚至有相同的项类型。</span><span class="sxs-lookup"><span data-stu-id="fb927-668">However, there may be multiple items with the same path and different item types, or even with the same item types.</span></span>  
  
 ]]></format>
        </remarks>
        <comments><span data-ttu-id="fb927-669">数据.GetItemsByEvaluatedInclude 已经返回一个只读集合，因此不需要进一步包装。</span><span class="sxs-lookup"><span data-stu-id="fb927-669">data.GetItemsByEvaluatedInclude already returns a read-only collection, so no need to wrap it further.</span></span></comments>
      </Docs>
    </Member>
    <Member MemberName="GetItemsIgnoringCondition">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectItem&gt; GetItemsIgnoringCondition (string itemType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.ICollection`1&lt;class Microsoft.Build.Evaluation.ProjectItem&gt; GetItemsIgnoringCondition(string itemType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.GetItemsIgnoringCondition(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetItemsIgnoringCondition (itemType As String) As ICollection(Of ProjectItem)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::ICollection&lt;Microsoft::Build::Evaluation::ProjectItem ^&gt; ^ GetItemsIgnoringCondition(System::String ^ itemType);" />
      <MemberSignature Language="F#" Value="member this.GetItemsIgnoringCondition : string -&gt; System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectItem&gt;" Usage="project.GetItemsIgnoringCondition itemType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectItem&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="itemType"><span data-ttu-id="fb927-670">要检索的项类型。</span><span class="sxs-lookup"><span data-stu-id="fb927-670">The item type to be retrieved.</span></span></param>
        <summary><span data-ttu-id="fb927-671">指定类型的项目中的所有项，无论它们的条件计算结果是否为 true。</span><span class="sxs-lookup"><span data-stu-id="fb927-671">All the items in the project of the specified type, irrespective of whether the conditions on them evaluated to true.</span></span>
<span data-ttu-id="fb927-672">这是一个只读列表：可使用 AddItem 或 RemoveItem 修改此项目中的项。</span><span class="sxs-lookup"><span data-stu-id="fb927-672">This is a read-only list: use AddItem or RemoveItem to modify items in this project.</span></span></summary>
        <returns><span data-ttu-id="fb927-673">项目中的给定类型的所有项（不管其 Condition 特性的计算结果是否为 true）。</span><span class="sxs-lookup"><span data-stu-id="fb927-673">All the items in the project of the given type, whether or not their Condition attribute evaluates to true.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fb927-674">这是一个只读列表。</span><span class="sxs-lookup"><span data-stu-id="fb927-674">This is a read-only list.</span></span> <span data-ttu-id="fb927-675">使用 AddItem 或 RemoveItem 修改此项目中的项。</span><span class="sxs-lookup"><span data-stu-id="fb927-675">Use AddItem or RemoveItem to modify items in this project.</span></span>  
  
 ]]></format>
        </remarks>
        <comments><span data-ttu-id="fb927-676">ItemDictionary [] 返回一个只读集合，因此不需要将其包装。</span><span class="sxs-lookup"><span data-stu-id="fb927-676">ItemDictionary[] returns a read only collection, so no need to wrap it.</span></span></comments>
      </Docs>
    </Member>
    <Member MemberName="GetLogicalProject">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Construction.ProjectElement&gt; GetLogicalProject ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Construction.ProjectElement&gt; GetLogicalProject() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.GetLogicalProject" />
      <MemberSignature Language="VB.NET" Value="Public Iterator Function GetLogicalProject () As IEnumerable(Of ProjectElement)" FrameworkAlternate="msbuild-15;msbuild-15-netcore" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Construction::ProjectElement ^&gt; ^ GetLogicalProject();" />
      <MemberSignature Language="F#" Value="member this.GetLogicalProject : unit -&gt; seq&lt;Microsoft.Build.Construction.ProjectElement&gt;" Usage="project.GetLogicalProject " />
      <MemberSignature Language="VB.NET" Value="Public Function GetLogicalProject () As IEnumerable(Of ProjectElement)" FrameworkAlternate="msbuild-16;msbuild-16-netcore;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="msbuild-15;msbuild-15-netcore">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.IteratorStateMachine(typeof(Microsoft.Build.Evaluation.Project/&lt;GetLogicalProject&gt;d__136))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.IteratorStateMachine(typeof(Microsoft.Build.Evaluation.Project/&lt;GetLogicalProject&gt;d__136))&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Construction.ProjectElement&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fb927-677">返回一个迭代器，该迭代器用于“逻辑项目”。</span><span class="sxs-lookup"><span data-stu-id="fb927-677">Returns an iterator over the "logical project".</span></span> <span data-ttu-id="fb927-678">逻辑项目定义为从单个 MSBuild 文件获得的未计算项目，该 MSBuild 文件是通过将原始 MSBuild 项目清单文件的所有导入的文本内联得到的。</span><span class="sxs-lookup"><span data-stu-id="fb927-678">The logical project is defined as the unevaluated project obtained from the single MSBuild file that is the result of inlining the text of all imports of the original MSBuild project manifest file.</span></span></summary>
        <returns><span data-ttu-id="fb927-679">可枚举“逻辑项目”中的所有元素的枚举器。</span><span class="sxs-lookup"><span data-stu-id="fb927-679">An enumerator over all the elements in the "logical project".</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fb927-680">逻辑项目定义为从单个 MSBuild 文件获取的未计算的项目，该文件是包含原始 MSBuild 项目清单文件的所有导入的文本内联的结果。</span><span class="sxs-lookup"><span data-stu-id="fb927-680">The logical project is defined as the unevaluated project obtained from the single MSBuild file that is the result of including inline the text of all imports of the original MSBuild project manifest file.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetMetadataValueEscaped">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="fb927-681">获取所提供的项中具有提供的名称的元数据的转义值。</span><span class="sxs-lookup"><span data-stu-id="fb927-681">Gets the escaped value of the metadatum with the provided name on the provided item.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetMetadataValueEscaped">
      <MemberSignature Language="C#" Value="public static string GetMetadataValueEscaped (Microsoft.Build.Evaluation.ProjectMetadata metadatum);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetMetadataValueEscaped(class Microsoft.Build.Evaluation.ProjectMetadata metadatum) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.GetMetadataValueEscaped(Microsoft.Build.Evaluation.ProjectMetadata)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetMetadataValueEscaped (metadatum As ProjectMetadata) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetMetadataValueEscaped(Microsoft::Build::Evaluation::ProjectMetadata ^ metadatum);" />
      <MemberSignature Language="F#" Value="static member GetMetadataValueEscaped : Microsoft.Build.Evaluation.ProjectMetadata -&gt; string" Usage="Microsoft.Build.Evaluation.Project.GetMetadataValueEscaped metadatum" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metadatum" Type="Microsoft.Build.Evaluation.ProjectMetadata" />
      </Parameters>
      <Docs>
        <param name="metadatum"><span data-ttu-id="fb927-682">要转义的元数据。</span><span class="sxs-lookup"><span data-stu-id="fb927-682">The metadatum to be escaped.</span></span></param>
        <summary><span data-ttu-id="fb927-683">获取所提供的元数据的转义值。</span><span class="sxs-lookup"><span data-stu-id="fb927-683">Gets the escaped value of the provided metadatum.</span></span></summary>
        <returns><span data-ttu-id="fb927-684">所提供的元数据的转义值。</span><span class="sxs-lookup"><span data-stu-id="fb927-684">The escaped value of the provided metadatum.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMetadataValueEscaped">
      <MemberSignature Language="C#" Value="public static string GetMetadataValueEscaped (Microsoft.Build.Evaluation.ProjectItem item, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetMetadataValueEscaped(class Microsoft.Build.Evaluation.ProjectItem item, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.GetMetadataValueEscaped(Microsoft.Build.Evaluation.ProjectItem,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetMetadataValueEscaped (item As ProjectItem, name As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetMetadataValueEscaped(Microsoft::Build::Evaluation::ProjectItem ^ item, System::String ^ name);" />
      <MemberSignature Language="F#" Value="static member GetMetadataValueEscaped : Microsoft.Build.Evaluation.ProjectItem * string -&gt; string" Usage="Microsoft.Build.Evaluation.Project.GetMetadataValueEscaped (item, name)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="Microsoft.Build.Evaluation.ProjectItem" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="fb927-685">要转义其元数据的项。</span><span class="sxs-lookup"><span data-stu-id="fb927-685">The item whose metadata is to be escaped.</span></span></param>
        <param name="name"><span data-ttu-id="fb927-686">要转义的元数据的名称。</span><span class="sxs-lookup"><span data-stu-id="fb927-686">The name of the metadata to be escaped.</span></span></param>
        <summary><span data-ttu-id="fb927-687">获取所提供的项中具有提供的名称的元数据的转义值。</span><span class="sxs-lookup"><span data-stu-id="fb927-687">Gets the escaped value of the metadatum with the provided name on the provided item.</span></span></summary>
        <returns><span data-ttu-id="fb927-688">所提供的项中具有提供的名称的元数据的转义值。</span><span class="sxs-lookup"><span data-stu-id="fb927-688">The escaped value of the metadatum with the provided name on the provided item.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMetadataValueEscaped">
      <MemberSignature Language="C#" Value="public static string GetMetadataValueEscaped (Microsoft.Build.Evaluation.ProjectItemDefinition item, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetMetadataValueEscaped(class Microsoft.Build.Evaluation.ProjectItemDefinition item, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.GetMetadataValueEscaped(Microsoft.Build.Evaluation.ProjectItemDefinition,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetMetadataValueEscaped (item As ProjectItemDefinition, name As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetMetadataValueEscaped(Microsoft::Build::Evaluation::ProjectItemDefinition ^ item, System::String ^ name);" />
      <MemberSignature Language="F#" Value="static member GetMetadataValueEscaped : Microsoft.Build.Evaluation.ProjectItemDefinition * string -&gt; string" Usage="Microsoft.Build.Evaluation.Project.GetMetadataValueEscaped (item, name)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="Microsoft.Build.Evaluation.ProjectItemDefinition" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="fb927-689">要转义其元数据的项定义。</span><span class="sxs-lookup"><span data-stu-id="fb927-689">The item definition whose metadata is to be escaped.</span></span></param>
        <param name="name"><span data-ttu-id="fb927-690">要转义的元数据的名称。</span><span class="sxs-lookup"><span data-stu-id="fb927-690">The name of the metadata to be escaped.</span></span></param>
        <summary><span data-ttu-id="fb927-691">获取所提供的项定义上具有提供的名称的元数据的转义值。</span><span class="sxs-lookup"><span data-stu-id="fb927-691">Gets the escaped value of the metadatum with the provided name on the provided item definition.</span></span></summary>
        <returns><span data-ttu-id="fb927-692">所提供的项定义上具有提供的名称的元数据的转义值。</span><span class="sxs-lookup"><span data-stu-id="fb927-692">The escaped value of the metadatum with the provided name on the provided item definition.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProperty">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Evaluation.ProjectProperty GetProperty (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Build.Evaluation.ProjectProperty GetProperty(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.GetProperty(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetProperty (name As String) As ProjectProperty" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Build::Evaluation::ProjectProperty ^ GetProperty(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.GetProperty : string -&gt; Microsoft.Build.Evaluation.ProjectProperty" Usage="project.GetProperty name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Evaluation.ProjectProperty</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="fb927-693">要检索的属性的名称。</span><span class="sxs-lookup"><span data-stu-id="fb927-693">The name of the property to retrieve.</span></span></param>
        <summary><span data-ttu-id="fb927-694">获取具有指定名称的项目中的任何属性；否则返回 null</span><span class="sxs-lookup"><span data-stu-id="fb927-694">Get any property in the project that has the specified name, otherwise returns null</span></span></summary>
        <returns><span data-ttu-id="fb927-695">项目中具有指定名称的任何属性，或如果不存在具有该名称的属性，则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="fb927-695">Any property in the project that has the specified name, or <see langword="null" /> if no property of that name exists.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPropertyValue">
      <MemberSignature Language="C#" Value="public string GetPropertyValue (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetPropertyValue(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.GetPropertyValue(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPropertyValue (name As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetPropertyValue(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.GetPropertyValue : string -&gt; string" Usage="project.GetPropertyValue name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="fb927-696">要检索其值的属性的名称。</span><span class="sxs-lookup"><span data-stu-id="fb927-696">The name of the property whose value is retrieved.</span></span></param>
        <summary><span data-ttu-id="fb927-697">获取此项目中属性的未转义值，如果属性不存在，则为空字符串。</span><span class="sxs-lookup"><span data-stu-id="fb927-697">Get the unescaped value of a property in this project, or an empty string if it does not exist.</span></span></summary>
        <returns><span data-ttu-id="fb927-698">此项目中的给定属性的值，或如果不存在具有该名称的属性，则为空字符串。</span><span class="sxs-lookup"><span data-stu-id="fb927-698">The value of the given property in this project, or an empty string if no property of that name exists.</span></span> <span data-ttu-id="fb927-699">在返回字符串之前将转换转义序列。</span><span class="sxs-lookup"><span data-stu-id="fb927-699">Escape sequences are converted before returning the string.</span></span></returns>
        <remarks><span data-ttu-id="fb927-700">如果属性的值为空字符串，并且根本没有属性，则不能在此方法之间区分。</span><span class="sxs-lookup"><span data-stu-id="fb927-700">A property with a value of empty string and no property at all are not distinguished between by this method.</span></span>
<span data-ttu-id="fb927-701">这样可以更轻松地使用。</span><span class="sxs-lookup"><span data-stu-id="fb927-701">That makes it easier to use.</span></span> <span data-ttu-id="fb927-702">若要确定是否在项目中对属性进行了设置，请使用 GetProperty (名称) 。</span><span class="sxs-lookup"><span data-stu-id="fb927-702">To find out if a property is set at all in the project, use GetProperty(name).</span></span></remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPropertyValueEscaped">
      <MemberSignature Language="C#" Value="public static string GetPropertyValueEscaped (Microsoft.Build.Evaluation.ProjectProperty property);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetPropertyValueEscaped(class Microsoft.Build.Evaluation.ProjectProperty property) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.GetPropertyValueEscaped(Microsoft.Build.Evaluation.ProjectProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetPropertyValueEscaped (property As ProjectProperty) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetPropertyValueEscaped(Microsoft::Build::Evaluation::ProjectProperty ^ property);" />
      <MemberSignature Language="F#" Value="static member GetPropertyValueEscaped : Microsoft.Build.Evaluation.ProjectProperty -&gt; string" Usage="Microsoft.Build.Evaluation.Project.GetPropertyValueEscaped property" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="Microsoft.Build.Evaluation.ProjectProperty" />
      </Parameters>
      <Docs>
        <param name="property"><span data-ttu-id="fb927-703">要转义的属性。</span><span class="sxs-lookup"><span data-stu-id="fb927-703">The property to be escaped.</span></span></param>
        <summary><span data-ttu-id="fb927-704">获取所提供的属性的转义值</span><span class="sxs-lookup"><span data-stu-id="fb927-704">Get the escaped value of the provided property</span></span></summary>
        <returns><span data-ttu-id="fb927-705">所提供的属性的转义值。</span><span class="sxs-lookup"><span data-stu-id="fb927-705">The escaped value of the provided property.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GlobalProperties">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;string,string&gt; GlobalProperties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;string, string&gt; GlobalProperties" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.GlobalProperties" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property GlobalProperties As IDictionary(Of String, String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ GlobalProperties { System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.GlobalProperties : System.Collections.Generic.IDictionary&lt;string, string&gt;" Usage="Microsoft.Build.Evaluation.Project.GlobalProperties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="msbuild-15;msbuild-15-netcore;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[get: System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fb927-706">仅读取用于计算此项目的全局属性的字典。</span><span class="sxs-lookup"><span data-stu-id="fb927-706">Read only dictionary of the global properties used in the evaluation of this project.</span></span></summary>
        <value><span data-ttu-id="fb927-707">用于计算此项目的全局属性的字典。</span><span class="sxs-lookup"><span data-stu-id="fb927-707">A dictionary of the global properties used for the evaluation of this project.</span></span></value>
        <remarks><span data-ttu-id="fb927-708">这是公开的 getter，转换为只读停滞 IDictionary &lt; 字符串字符串 &gt; 。</span><span class="sxs-lookup"><span data-stu-id="fb927-708">This is the publicly exposed getter, that translates into a read-only dead IDictionary&lt;string, string&gt;.</span></span>
            
<span data-ttu-id="fb927-709">为了轻松地判断更新，设置和删除全局属性是通过 <see cref="M:Microsoft.Build.Evaluation.Project.SetGlobalProperty(System.String,System.String)">SetGlobalProperty</see> 和 <see cref="M:Microsoft.Build.Evaluation.Project.RemoveGlobalProperty(System.String)">RemoveGlobalProperty</see>来完成的。</span><span class="sxs-lookup"><span data-stu-id="fb927-709">In order to easily tell when we're dirtied, setting and removing global properties is done with <see cref="M:Microsoft.Build.Evaluation.Project.SetGlobalProperty(System.String,System.String)">SetGlobalProperty</see> and <see cref="M:Microsoft.Build.Evaluation.Project.RemoveGlobalProperty(System.String)">RemoveGlobalProperty</see>.</span></span></remarks>
      </Docs>
    </Member>
    <Member MemberName="Imports">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Microsoft.Build.Evaluation.ResolvedImport&gt; Imports { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;valuetype Microsoft.Build.Evaluation.ResolvedImport&gt; Imports" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.Imports" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Imports As IList(Of ResolvedImport)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IList&lt;Microsoft::Build::Evaluation::ResolvedImport&gt; ^ Imports { System::Collections::Generic::IList&lt;Microsoft::Build::Evaluation::ResolvedImport&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Imports : System.Collections.Generic.IList&lt;Microsoft.Build.Evaluation.ResolvedImport&gt;" Usage="Microsoft.Build.Evaluation.Project.Imports" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Microsoft.Build.Evaluation.ResolvedImport&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fb927-710">在计算过程中参与了此项目的所有文件（如 ProjectRootElements），以及导致它们被导入的 ProjectImportElement。</span><span class="sxs-lookup"><span data-stu-id="fb927-710">All the files that during evaluation contributed to this project, as ProjectRootElements, with the ProjectImportElement that caused them to be imported.</span></span>
<span data-ttu-id="fb927-711">这不包括从未导入的项目，因为 Import 元素上的条件为 false。</span><span class="sxs-lookup"><span data-stu-id="fb927-711">This does not include projects that were never imported because a condition on an Import element was false.</span></span>
<span data-ttu-id="fb927-712">不包含映射到此项目本身的外部 ProjectRootElement。</span><span class="sxs-lookup"><span data-stu-id="fb927-712">The outer ProjectRootElement that maps to this project itself is not included.</span></span></summary>
        <value><span data-ttu-id="fb927-713">参与此项目计算的所有文件的列表。</span><span class="sxs-lookup"><span data-stu-id="fb927-713">A list of all the files that contributed to the evaluation of this project.</span></span>  
  
 <span data-ttu-id="fb927-714">每项的名称是导致导入对应文件的 Import 元素。</span><span class="sxs-lookup"><span data-stu-id="fb927-714">The name of each item is the Import element that caused the file to be imported.</span></span> <span data-ttu-id="fb927-715">每项的值是导入的项目的项目根。</span><span class="sxs-lookup"><span data-stu-id="fb927-715">The value of each item is the project root of the imported project.</span></span> <span data-ttu-id="fb927-716">将不包括其 Condition 特性的计算结果为 false 的 Import 元素。</span><span class="sxs-lookup"><span data-stu-id="fb927-716">Import elements whose Condition attribute evaluated to false are not included.</span></span></value>
        <remarks><span data-ttu-id="fb927-717">主机可以使用此方法来找出对特定文件的更改可能会影响哪些项目。</span><span class="sxs-lookup"><span data-stu-id="fb927-717">This can be used by the host to figure out what projects might be impacted by a change to a particular file.</span></span>
<span data-ttu-id="fb927-718">例如，还可以使用它来查找 user 文件，并使用其 ProjectRootElement 修改其中的属性。</span><span class="sxs-lookup"><span data-stu-id="fb927-718">It could also be used, for example, to find the .user file, and use its ProjectRootElement to modify properties in it.</span></span></remarks>
      </Docs>
    </Member>
    <Member MemberName="ImportsIncludingDuplicates">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Microsoft.Build.Evaluation.ResolvedImport&gt; ImportsIncludingDuplicates { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;valuetype Microsoft.Build.Evaluation.ResolvedImport&gt; ImportsIncludingDuplicates" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.ImportsIncludingDuplicates" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ImportsIncludingDuplicates As IList(Of ResolvedImport)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IList&lt;Microsoft::Build::Evaluation::ResolvedImport&gt; ^ ImportsIncludingDuplicates { System::Collections::Generic::IList&lt;Microsoft::Build::Evaluation::ResolvedImport&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ImportsIncludingDuplicates : System.Collections.Generic.IList&lt;Microsoft.Build.Evaluation.ResolvedImport&gt;" Usage="Microsoft.Build.Evaluation.Project.ImportsIncludingDuplicates" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Microsoft.Build.Evaluation.ResolvedImport&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fb927-719">如果多次导入某个导入文件，则此列表将包含重复导入。</span><span class="sxs-lookup"><span data-stu-id="fb927-719">This list will contain duplicate imports if an import is imported multiple times.</span></span> <span data-ttu-id="fb927-720">但是，在计算中仅使用第一个导入。</span><span class="sxs-lookup"><span data-stu-id="fb927-720">However, only the first import was used in evaluation.</span></span></summary>
        <value><span data-ttu-id="fb927-721">重复导入的列表。</span><span class="sxs-lookup"><span data-stu-id="fb927-721">A list of duplicate imports.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsBuildEnabled">
      <MemberSignature Language="C#" Value="public bool IsBuildEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsBuildEnabled" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.IsBuildEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property IsBuildEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsBuildEnabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsBuildEnabled : bool with get, set" Usage="Microsoft.Build.Evaluation.Project.IsBuildEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="msbuild-16;msbuild-16-netcore">
          <AttributeName Language="C#">[get: System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="msbuild-16;msbuild-16-netcore">
          <AttributeName Language="C#">[set: System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fb927-722">这会控制是否为此项目启用目标/任务的生成。</span><span class="sxs-lookup"><span data-stu-id="fb927-722">This controls whether or not the building of targets/tasks is enabled for this project.</span></span>  <span data-ttu-id="fb927-723">这是为了安全起见，主机需要严格控制允许哪些项目运行目标/任务。</span><span class="sxs-lookup"><span data-stu-id="fb927-723">This is for security purposes in case a host wants to closely control which projects it allows to run targets/tasks.</span></span>  <span data-ttu-id="fb927-724">默认情况下，对于新创建的项目，我们将使用父项目集合中的任何设置。</span><span class="sxs-lookup"><span data-stu-id="fb927-724">By default, for a newly created project, we will use whatever setting is in the parent project collection.</span></span>
<span data-ttu-id="fb927-725">当禁用生成时，此类的生成方法将失败。</span><span class="sxs-lookup"><span data-stu-id="fb927-725">When build is disabled, the Build method on this class will fail.</span></span> <span data-ttu-id="fb927-726">但是，如果主机已创建 ProjectInstance，它仍可生成。</span><span class="sxs-lookup"><span data-stu-id="fb927-726">However if the host has already created a ProjectInstance, it can still build it.</span></span> <span data-ttu-id="fb927-727">（可以随时对此过程执行类似检查。）</span><span class="sxs-lookup"><span data-stu-id="fb927-727">(It is free to put a similar check around where it does this.)</span></span></summary>
        <value><span data-ttu-id="fb927-728"><see langword="true" /> 如果可以生成此项目的目标和任务，则为; 否则为。否则为 <see langword="false" /> 。</span><span class="sxs-lookup"><span data-stu-id="fb927-728"><see langword="true" /> if the targets and tasks of this project can be built; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fb927-729">可用于安全目的。</span><span class="sxs-lookup"><span data-stu-id="fb927-729">Can be used for security purposes.</span></span> <span data-ttu-id="fb927-730">默认情况下，新项目具有与包含它的父项目集合相同的 IsBuildEnabled 设置。</span><span class="sxs-lookup"><span data-stu-id="fb927-730">By default, a new project has the same IsBuildEnabled setting as the parent project collection that contains it.</span></span> <span data-ttu-id="fb927-731">当 IsBuildEnabled 为 false 时，此项目上的生成方法将失败。</span><span class="sxs-lookup"><span data-stu-id="fb927-731">When IsBuildEnabled is false, the Build method on this project fails.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDirty">
      <MemberSignature Language="C#" Value="public bool IsDirty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDirty" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.IsDirty" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsDirty As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsDirty { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsDirty : bool" Usage="Microsoft.Build.Evaluation.Project.IsDirty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fb927-732">此项目是否已更新，以至于需要重新计算。</span><span class="sxs-lookup"><span data-stu-id="fb927-732">Whether this project is dirty such that it needs reevaluation.</span></span>
<span data-ttu-id="fb927-733">这可能是因为它的基础 XML（由于这个项目或其他项目）更改了主项目的 XML 或导入的文件；或者是因为它的工具集可能发生了变化。</span><span class="sxs-lookup"><span data-stu-id="fb927-733">This may be because its underlying XML has changed (either through this project or another) either the XML of the main project or an imported file; or because its toolset may have changed.</span></span></summary>
        <value><span data-ttu-id="fb927-734"><see langword="true" /> 如果此项目已修改以便必须重新计算，则为;否则为 <see langword="false" /> 。</span><span class="sxs-lookup"><span data-stu-id="fb927-734"><see langword="true" /> if this project has been modified so that it must be reevaluated; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fb927-735">修改项目时，必须在基础项目源代码（包括对导入文件的更改）时重新计算项目。</span><span class="sxs-lookup"><span data-stu-id="fb927-735">A project is modified and must be reevaluated when the underlying project source code, including changes to imported files.</span></span> <span data-ttu-id="fb927-736">如果项目工具集发生更改，则还必须重新计算项目的修改。</span><span class="sxs-lookup"><span data-stu-id="fb927-736">A project is also modified must be reevaluated if the project tool set changes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemDefinitions">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;string,Microsoft.Build.Evaluation.ProjectItemDefinition&gt; ItemDefinitions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;string, class Microsoft.Build.Evaluation.ProjectItemDefinition&gt; ItemDefinitions" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.ItemDefinitions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ItemDefinitions As IDictionary(Of String, ProjectItemDefinition)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IDictionary&lt;System::String ^, Microsoft::Build::Evaluation::ProjectItemDefinition ^&gt; ^ ItemDefinitions { System::Collections::Generic::IDictionary&lt;System::String ^, Microsoft::Build::Evaluation::ProjectItemDefinition ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ItemDefinitions : System.Collections.Generic.IDictionary&lt;string, Microsoft.Build.Evaluation.ProjectItemDefinition&gt;" Usage="Microsoft.Build.Evaluation.Project.ItemDefinitions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[get: System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,Microsoft.Build.Evaluation.ProjectItemDefinition&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fb927-737">此项目中项定义的只读字典。</span><span class="sxs-lookup"><span data-stu-id="fb927-737">Read-only dictionary of item definitions in this project.</span></span>
<span data-ttu-id="fb927-738">按项目类型键控</span><span class="sxs-lookup"><span data-stu-id="fb927-738">Keyed by item type</span></span></summary>
        <value><span data-ttu-id="fb927-739">此项目中的项定义的字典，按项类型进行键控。</span><span class="sxs-lookup"><span data-stu-id="fb927-739">A dictionary of item definitions in this project, keyed by item type.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Items">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectItem&gt; Items { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;class Microsoft.Build.Evaluation.ProjectItem&gt; Items" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.Items" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Items As ICollection(Of ProjectItem)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::ICollection&lt;Microsoft::Build::Evaluation::ProjectItem ^&gt; ^ Items { System::Collections::Generic::ICollection&lt;Microsoft::Build::Evaluation::ProjectItem ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Items : System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectItem&gt;" Usage="Microsoft.Build.Evaluation.Project.Items" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[get: System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectItem&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fb927-740">此项目中的项，在项类型组内排序</span><span class="sxs-lookup"><span data-stu-id="fb927-740">Items in this project, ordered within groups of item types</span></span></summary>
        <value><span data-ttu-id="fb927-741">针对此项目中的所有项的枚举器，在项类型组中进行排序。</span><span class="sxs-lookup"><span data-stu-id="fb927-741">An enumerator over all items in this project, ordered within groups of item types.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemsIgnoringCondition">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectItem&gt; ItemsIgnoringCondition { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;class Microsoft.Build.Evaluation.ProjectItem&gt; ItemsIgnoringCondition" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.ItemsIgnoringCondition" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ItemsIgnoringCondition As ICollection(Of ProjectItem)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::ICollection&lt;Microsoft::Build::Evaluation::ProjectItem ^&gt; ^ ItemsIgnoringCondition { System::Collections::Generic::ICollection&lt;Microsoft::Build::Evaluation::ProjectItem ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ItemsIgnoringCondition : System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectItem&gt;" Usage="Microsoft.Build.Evaluation.Project.ItemsIgnoringCondition" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="msbuild-15;msbuild-15-netcore;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[get: System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectItem&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fb927-742">此项目中的项（在项类型组内排序），包括条件计算结果为 false 的项，或者包含在本身的条件计算结果为 false 的项组中的项。</span><span class="sxs-lookup"><span data-stu-id="fb927-742">Items in this project, ordered within groups of item types, including items whose conditions evaluated to false, or that were contained within item groups who themselves had conditioned evaluated to false.</span></span>
<span data-ttu-id="fb927-743">这对于想要显示所有项的主机非常有用，即使它们可能不是当前配置中的生成的一部分。</span><span class="sxs-lookup"><span data-stu-id="fb927-743">This is useful for hosts that wish to display all items, even if they might not be part of the build in the current configuration.</span></span></summary>
        <value><span data-ttu-id="fb927-744">此项目中的所有项（在项类型组中排序）的枚举器（包括其条件计算结果为 false 的项），或者包含在其条件计算结果为的项组中 <see langword="false" /> 。</span><span class="sxs-lookup"><span data-stu-id="fb927-744">An enumerator over all items in this project, ordered within groups of item types, including items whose conditions evaluate to false, or are contained within item groups whose condition evaluates to <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fb927-745">可用于显示所有项，即使它们不是当前配置中的生成的一部分。</span><span class="sxs-lookup"><span data-stu-id="fb927-745">Can be used to display all items, even if they are not part of the build in the current configuration.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemTypes">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;string&gt; ItemTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;string&gt; ItemTypes" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.ItemTypes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ItemTypes As ICollection(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::ICollection&lt;System::String ^&gt; ^ ItemTypes { System::Collections::Generic::ICollection&lt;System::String ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ItemTypes : System.Collections.Generic.ICollection&lt;string&gt;" Usage="Microsoft.Build.Evaluation.Project.ItemTypes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[get: System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fb927-746">此项目中的项类型。</span><span class="sxs-lookup"><span data-stu-id="fb927-746">Item types in this project.</span></span>
<span data-ttu-id="fb927-747">这是一个有序集合。</span><span class="sxs-lookup"><span data-stu-id="fb927-747">This is an ordered collection.</span></span></summary>
        <value><span data-ttu-id="fb927-748">此项目中的所有项类型的枚举器。</span><span class="sxs-lookup"><span data-stu-id="fb927-748">An enumerator over all item types in this project.</span></span> <span data-ttu-id="fb927-749">这是一个有序集合。</span><span class="sxs-lookup"><span data-stu-id="fb927-749">This is an ordered collection.</span></span></value>
        <remarks>To be added.</remarks>
        <comments><span data-ttu-id="fb927-750">数据.ItemTypes 是 Tvalue&gt;.keycollection，因此不需要任何额外的只读保护</span><span class="sxs-lookup"><span data-stu-id="fb927-750">data.ItemTypes is a KeyCollection, so it doesn't need any additional read-only protection</span></span></comments>
      </Docs>
    </Member>
    <Member MemberName="LastEvaluationId">
      <MemberSignature Language="C#" Value="public int LastEvaluationId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LastEvaluationId" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.LastEvaluationId" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LastEvaluationId As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int LastEvaluationId { int get(); };" />
      <MemberSignature Language="F#" Value="member this.LastEvaluationId : int" Usage="Microsoft.Build.Evaluation.Project.LastEvaluationId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fb927-751">此项目的最后一个计算的 ID。</span><span class="sxs-lookup"><span data-stu-id="fb927-751">The ID of the last evaluation for this Project.</span></span>
<span data-ttu-id="fb927-752">项目始终在构造时进行计算，随后还可以通过 <see cref="M:Microsoft.Build.Evaluation.Project.ReevaluateIfNecessary" /> 进行多次计算</span><span class="sxs-lookup"><span data-stu-id="fb927-752">A project is always evaluated upon construction and can subsequently get evaluated multiple times via <see cref="M:Microsoft.Build.Evaluation.Project.ReevaluateIfNecessary" /></span></span>
            
<span data-ttu-id="fb927-753">它是一个任意的数字，当重新计算此项目时，这个数字会发生变化。</span><span class="sxs-lookup"><span data-stu-id="fb927-753">It is an arbitrary number that changes when this project reevaluates.</span></span>
<span data-ttu-id="fb927-754">主机不知道某个时间间隔内是否确实发生了某个计算，但它们可以将此数字与以前存储的值进行比较以确定，如果是这样，也许就会决定更新自己的状态。</span><span class="sxs-lookup"><span data-stu-id="fb927-754">Hosts don't know whether an evaluation actually happened in an interval, but they can compare this number to their previously stored value to find out, and if so perhaps decide to update their own state.</span></span>
<span data-ttu-id="fb927-755">请注意，数字可能不会单调地增加。</span><span class="sxs-lookup"><span data-stu-id="fb927-755">Note that the number may not increase monotonically.</span></span>
            
<span data-ttu-id="fb927-756">此数字对应于</span><span class="sxs-lookup"><span data-stu-id="fb927-756">This number corresponds to the</span></span> <seealso cref="P:Microsoft.Build.Framework.BuildEventContext.EvaluationId" /> <span data-ttu-id="fb927-757">并可用于将计算日志记录事件连接回项目实例。</span><span class="sxs-lookup"><span data-stu-id="fb927-757">and can be used to connect evaluation logging events back to the Project instance.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MarkDirty">
      <MemberSignature Language="C#" Value="public void MarkDirty ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void MarkDirty() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.MarkDirty" />
      <MemberSignature Language="VB.NET" Value="Public Sub MarkDirty ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void MarkDirty();" />
      <MemberSignature Language="F#" Value="member this.MarkDirty : unit -&gt; unit" Usage="project.MarkDirty " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fb927-758">调用它以强制将项目标记为已更新，需要重新计算。</span><span class="sxs-lookup"><span data-stu-id="fb927-758">Called to forcibly mark the project as dirty requiring reevaluation.</span></span> <span data-ttu-id="fb927-759">通常情况下，此设置不是必需的；影响此项目的所有编辑内容都将自动将其标记为已更新。</span><span class="sxs-lookup"><span data-stu-id="fb927-759">Generally this is not necessary to set; all edits affecting this project will automatically make it dirty.</span></span> <span data-ttu-id="fb927-760">但在某些情况下，有必要将项目直接标记为已更新。</span><span class="sxs-lookup"><span data-stu-id="fb927-760">However there are potential corner cases where it is necessary to mark the project dirty directly.</span></span> <span data-ttu-id="fb927-761">例如，如果项目的导入限于磁盘上的现有文件，并且该文件在计算期间不存在，则当某个用户随后创建该文件时，该项目将无法知道重新计算会起作用。</span><span class="sxs-lookup"><span data-stu-id="fb927-761">For example, if the project has an import conditioned on a file existing on disk, and the file did not exist at evaluation time, then someone subsequently creates that file, the project cannot know that reevaluation would be productive.</span></span>
<span data-ttu-id="fb927-762">在这种情况下，主机可以帮助我们，显式设置已更新标志，这样 <see cref="M:Microsoft.Build.Evaluation.Project.ReevaluateIfNecessary">ReevaluateIfNecessary()</see> 就会识别出确实需要进行的计算。</span><span class="sxs-lookup"><span data-stu-id="fb927-762">In such a case the host can help us by setting the dirty flag explicitly so that <see cref="M:Microsoft.Build.Evaluation.Project.ReevaluateIfNecessary">ReevaluateIfNecessary()</see> will recognize an evaluation is indeed necessary.</span></span>
<span data-ttu-id="fb927-763">不会将基础项目文件标记为需要保存。</span><span class="sxs-lookup"><span data-stu-id="fb927-763">Does not mark the underlying project file as requiring saving.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fb927-764">很少需要显式调用此方法，因为影响项目的所有编辑会自动将其标记为已修改。</span><span class="sxs-lookup"><span data-stu-id="fb927-764">It is seldom necessary to call this method explicitly, because all edits affecting a project automatically mark it as modified.</span></span>  
  
 <span data-ttu-id="fb927-765">但有时，必须调用此方法。</span><span class="sxs-lookup"><span data-stu-id="fb927-765">Sometimes, however, this method must be called.</span></span> <span data-ttu-id="fb927-766">例如，项目可能有一个导入元素，其条件依赖于磁盘上存在的文件。</span><span class="sxs-lookup"><span data-stu-id="fb927-766">For example, a project may have an Import element whose condition depends on a file that exists on a disk.</span></span> <span data-ttu-id="fb927-767">如果该文件不存在于计算时，并且在计算后创建，则该项目必须显式标记为已修改。</span><span class="sxs-lookup"><span data-stu-id="fb927-767">If that file does not exist at evaluation time, and it is created after evaluation, then the project must be explicitly marked as modified.</span></span>  
  
 <span data-ttu-id="fb927-768"><xref:Microsoft.Build.Evaluation.Project.ReevaluateIfNecessary%2A>方法使用此属性来确定是否需要进行评估。</span><span class="sxs-lookup"><span data-stu-id="fb927-768">The <xref:Microsoft.Build.Evaluation.Project.ReevaluateIfNecessary%2A> method uses this property to determine if an evaluation is necessary.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProjectCollection">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Evaluation.ProjectCollection ProjectCollection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Build.Evaluation.ProjectCollection ProjectCollection" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.ProjectCollection" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProjectCollection As ProjectCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Build::Evaluation::ProjectCollection ^ ProjectCollection { Microsoft::Build::Evaluation::ProjectCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ProjectCollection : Microsoft.Build.Evaluation.ProjectCollection" Usage="Microsoft.Build.Evaluation.Project.ProjectCollection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[get: System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Evaluation.ProjectCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fb927-769">获取或设置包含此项目的项目集合。</span><span class="sxs-lookup"><span data-stu-id="fb927-769">Gets or sets the project collection which contains this project.</span></span>
<span data-ttu-id="fb927-770">决不能为 null。</span><span class="sxs-lookup"><span data-stu-id="fb927-770">Can never be null.</span></span>
<span data-ttu-id="fb927-771">不能修改。</span><span class="sxs-lookup"><span data-stu-id="fb927-771">Cannot be modified.</span></span></summary>
        <value><span data-ttu-id="fb927-772">包含此项目的项目集合，它绝不会 <see langword="null" /> 。</span><span class="sxs-lookup"><span data-stu-id="fb927-772">The project collection that contains this project, which is never <see langword="null" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProjectFileLocation">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Construction.ElementLocation ProjectFileLocation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Build.Construction.ElementLocation ProjectFileLocation" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.ProjectFileLocation" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProjectFileLocation As ElementLocation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Build::Construction::ElementLocation ^ ProjectFileLocation { Microsoft::Build::Construction::ElementLocation ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ProjectFileLocation : Microsoft.Build.Construction.ElementLocation" Usage="Microsoft.Build.Evaluation.Project.ProjectFileLocation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Construction.ElementLocation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fb927-773">原始文件本身的位置，其中没有任何特定内容。</span><span class="sxs-lookup"><span data-stu-id="fb927-773">Location of the originating file itself, not any specific content within it.</span></span>
<span data-ttu-id="fb927-774">如果未对文件命名一个名称，则返回空位置。</span><span class="sxs-lookup"><span data-stu-id="fb927-774">If the file has not been given a name, returns an empty location.</span></span></summary>
        <value><span data-ttu-id="fb927-775">原始文件位置，或者，如果没有为文件指定名称，则为空位置。</span><span class="sxs-lookup"><span data-stu-id="fb927-775">The originating file location, or an empty location if the file has not been given a name.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Properties">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectProperty&gt; Properties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;class Microsoft.Build.Evaluation.ProjectProperty&gt; Properties" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.Properties" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Properties As ICollection(Of ProjectProperty)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::ICollection&lt;Microsoft::Build::Evaluation::ProjectProperty ^&gt; ^ Properties { System::Collections::Generic::ICollection&lt;Microsoft::Build::Evaluation::ProjectProperty ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Properties : System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectProperty&gt;" Usage="Microsoft.Build.Evaluation.Project.Properties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[get: System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectProperty&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fb927-776">此项目中的属性。</span><span class="sxs-lookup"><span data-stu-id="fb927-776">Properties in this project.</span></span>
<span data-ttu-id="fb927-777">由于已发生计算，因此这是一个无序集合。</span><span class="sxs-lookup"><span data-stu-id="fb927-777">Since evaluation has occurred, this is an unordered collection.</span></span></summary>
        <value><span data-ttu-id="fb927-778">此项目中的所有属性的枚举器。</span><span class="sxs-lookup"><span data-stu-id="fb927-778">An enumerator over all properties in this project.</span></span> <span data-ttu-id="fb927-779">由于属性按其出现的顺序进行计算，因此这是一个无序集合。</span><span class="sxs-lookup"><span data-stu-id="fb927-779">Since properties are evaluated as they appear, this is an unordered collection.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReevaluateIfNecessary">
      <MemberSignature Language="C#" Value="public void ReevaluateIfNecessary ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ReevaluateIfNecessary() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.ReevaluateIfNecessary" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReevaluateIfNecessary ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ReevaluateIfNecessary();" />
      <MemberSignature Language="F#" Value="member this.ReevaluateIfNecessary : unit -&gt; unit" Usage="project.ReevaluateIfNecessary " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fb927-780">如果项目已更新，请重新计算项目，使其进入可查询状态。</span><span class="sxs-lookup"><span data-stu-id="fb927-780">Reevaluate the project to get it into a queryable state, if it's dirty.</span></span>
<span data-ttu-id="fb927-781">这合并了之前通过编辑此项目对支持的 XML 进行的所有更改。</span><span class="sxs-lookup"><span data-stu-id="fb927-781">This incorporates all changes previously made to the backing XML by editing this project.</span></span>
<span data-ttu-id="fb927-782">如果计算失败，将引发 InvalidProjectFileException。</span><span class="sxs-lookup"><span data-stu-id="fb927-782">Throws InvalidProjectFileException if the evaluation fails.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fb927-783">仅当项目标记为已修改时才会重新计算。</span><span class="sxs-lookup"><span data-stu-id="fb927-783">The project is reevaluated only if it is marked as modified.</span></span> <span data-ttu-id="fb927-784">重新评估合并了对项目源代码所做的所有更改。</span><span class="sxs-lookup"><span data-stu-id="fb927-784">Reevaluation incorporates all changes made to the project source code.</span></span>  
  
 <span data-ttu-id="fb927-785">如果计算失败，将引发 Microsoft.build.buildengine.invalidprojectfileexception。</span><span class="sxs-lookup"><span data-stu-id="fb927-785">Throws InvalidProjectFileException if the evaluation fails.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReevaluateIfNecessary">
      <MemberSignature Language="C#" Value="public void ReevaluateIfNecessary (Microsoft.Build.Evaluation.Context.EvaluationContext evaluationContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ReevaluateIfNecessary(class Microsoft.Build.Evaluation.Context.EvaluationContext evaluationContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.ReevaluateIfNecessary(Microsoft.Build.Evaluation.Context.EvaluationContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReevaluateIfNecessary (evaluationContext As EvaluationContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ReevaluateIfNecessary(Microsoft::Build::Evaluation::Context::EvaluationContext ^ evaluationContext);" />
      <MemberSignature Language="F#" Value="member this.ReevaluateIfNecessary : Microsoft.Build.Evaluation.Context.EvaluationContext -&gt; unit" Usage="project.ReevaluateIfNecessary evaluationContext" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="evaluationContext" Type="Microsoft.Build.Evaluation.Context.EvaluationContext" Index="0" FrameworkAlternate="msbuild-15;msbuild-15-netcore;msbuild-16;msbuild-16-netcore" />
      </Parameters>
      <Docs>
        <param name="evaluationContext"><span data-ttu-id="fb927-786">要使用的 <see cref="T:Microsoft.Build.Evaluation.Context.EvaluationContext" />。</span><span class="sxs-lookup"><span data-stu-id="fb927-786">The <see cref="T:Microsoft.Build.Evaluation.Context.EvaluationContext" /> to use.</span></span> <span data-ttu-id="fb927-787">请参见<see cref="T:Microsoft.Build.Evaluation.Context.EvaluationContext" /></span><span class="sxs-lookup"><span data-stu-id="fb927-787">See <see cref="T:Microsoft.Build.Evaluation.Context.EvaluationContext" /></span></span></param>
        <summary><span data-ttu-id="fb927-788">请参见<see cref="M:Microsoft.Build.Evaluation.Project.ReevaluateIfNecessary" /></span><span class="sxs-lookup"><span data-stu-id="fb927-788">See <see cref="M:Microsoft.Build.Evaluation.Project.ReevaluateIfNecessary" /></span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveGlobalProperty">
      <MemberSignature Language="C#" Value="public bool RemoveGlobalProperty (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool RemoveGlobalProperty(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.RemoveGlobalProperty(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoveGlobalProperty (name As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool RemoveGlobalProperty(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.RemoveGlobalProperty : string -&gt; bool" Usage="project.RemoveGlobalProperty name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="fb927-789">要移除的全局属性的名称。</span><span class="sxs-lookup"><span data-stu-id="fb927-789">The name of the global property to be removed.</span></span></param>
        <summary><span data-ttu-id="fb927-790">删除一个全局属性。</span><span class="sxs-lookup"><span data-stu-id="fb927-790">Removes a global property.</span></span>
<span data-ttu-id="fb927-791">如果已设置，则返回 true，并将项目标记为需要重新计算。</span><span class="sxs-lookup"><span data-stu-id="fb927-791">If it was set, returns true, and marks the project as requiring reevaluation.</span></span></summary>
        <returns><span data-ttu-id="fb927-792">如果设置了全局属性的值，则为 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="fb927-792"><see langword="true" /> if the value of the global property was set.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveItem">
      <MemberSignature Language="C#" Value="public bool RemoveItem (Microsoft.Build.Evaluation.ProjectItem item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool RemoveItem(class Microsoft.Build.Evaluation.ProjectItem item) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.RemoveItem(Microsoft.Build.Evaluation.ProjectItem)" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoveItem (item As ProjectItem) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool RemoveItem(Microsoft::Build::Evaluation::ProjectItem ^ item);" />
      <MemberSignature Language="F#" Value="member this.RemoveItem : Microsoft.Build.Evaluation.ProjectItem -&gt; bool" Usage="project.RemoveItem item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="Microsoft.Build.Evaluation.ProjectItem" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="fb927-793">要移除的项。</span><span class="sxs-lookup"><span data-stu-id="fb927-793">The item to be removed.</span></span></param>
        <summary><span data-ttu-id="fb927-794">从项目中移除一个项。</span><span class="sxs-lookup"><span data-stu-id="fb927-794">Removes an item from the project.</span></span>
<span data-ttu-id="fb927-795">项必须与此项目相关联。</span><span class="sxs-lookup"><span data-stu-id="fb927-795">Item must be associated with this project.</span></span>
<span data-ttu-id="fb927-796">项不能源自于导入的文件。</span><span class="sxs-lookup"><span data-stu-id="fb927-796">Item must not originate from an imported file.</span></span>
<span data-ttu-id="fb927-797">如果该项存在于此计算的项目中，则返回 true，否则返回 false。</span><span class="sxs-lookup"><span data-stu-id="fb927-797">Returns true if the item was in this evaluated project, otherwise false.</span></span>
<span data-ttu-id="fb927-798">为方便起见，如果父项组为空，则它也会被删除。</span><span class="sxs-lookup"><span data-stu-id="fb927-798">As a convenience, if the parent item group becomes empty, it is also removed.</span></span>
<span data-ttu-id="fb927-799">如果项源自通配符或分号分隔的表达式，则先将该表达式扩展为多个项。</span><span class="sxs-lookup"><span data-stu-id="fb927-799">If the item originated from a wildcard or semicolon separated expression, expands that expression into multiple items first.</span></span>
<span data-ttu-id="fb927-800">更新已计算的项目，但在重新计算之前不会影响项目中的其他内容。</span><span class="sxs-lookup"><span data-stu-id="fb927-800">Updates the evaluated project, but does not affect anything else in the project until reevaluation.</span></span> <span data-ttu-id="fb927-801">例如，如果删除了一个类型为“i”的项，则在重新计算之前，将不会修改从“@(i)”计算得出的“j”。</span><span class="sxs-lookup"><span data-stu-id="fb927-801">For example, if an item of type "i" is removed, "j" which is evaluated from "@(i)" will not be modified until reevaluation.</span></span>
<span data-ttu-id="fb927-802">当然，这是一种很方便的方法，在重新计算之前，它不一定会使项目处于完全一致的状态。</span><span class="sxs-lookup"><span data-stu-id="fb927-802">This is a convenience that it is understood does not necessarily leave the project in a perfectly self consistent state until reevaluation.</span></span></summary>
        <returns><span data-ttu-id="fb927-803">如果此项存在于此计算的项目中，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="fb927-803"><see langword="true" /> if the item is present in this evaluated project; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="fb927-804">此方法通常会返回 true，原因是，如果请求的项不存在，则此方法会引发异常。</span><span class="sxs-lookup"><span data-stu-id="fb927-804">Normally this method returns true, since if the requested item is not present, the method throws an exception.</span></span> <span data-ttu-id="fb927-805">不过，如果该项仅存在于 ItemsIgnoringCondition 集合中，则此方法将返回 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="fb927-805">If the item is present only in the ItemsIgnoringCondition collection, however, the method returns <see langword="false" />.</span></span></returns>
        <remarks><span data-ttu-id="fb927-806">通常，这将返回 true，因为如果项不在项目中，则会引发。</span><span class="sxs-lookup"><span data-stu-id="fb927-806">Normally this will return true, since if the item isn't in the project, it will throw.</span></span>
<span data-ttu-id="fb927-807">异常是删除仅在 ItemsIgnoringCondition 中的项。</span><span class="sxs-lookup"><span data-stu-id="fb927-807">The exception is removing an item that was only in ItemsIgnoringCondition.</span></span></remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveItems">
      <MemberSignature Language="C#" Value="public void RemoveItems (System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Evaluation.ProjectItem&gt; items);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveItems(class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Evaluation.ProjectItem&gt; items) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.RemoveItems(System.Collections.Generic.IEnumerable{Microsoft.Build.Evaluation.ProjectItem})" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveItems (items As IEnumerable(Of ProjectItem))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveItems(System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Evaluation::ProjectItem ^&gt; ^ items);" />
      <MemberSignature Language="F#" Value="member this.RemoveItems : seq&lt;Microsoft.Build.Evaluation.ProjectItem&gt; -&gt; unit" Usage="project.RemoveItems items" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="items" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Evaluation.ProjectItem&gt;" />
      </Parameters>
      <Docs>
        <param name="items"><span data-ttu-id="fb927-808">要移除的项。</span><span class="sxs-lookup"><span data-stu-id="fb927-808">The items to be removed.</span></span></param>
        <summary><span data-ttu-id="fb927-809">从项目中移除所有指定的项。</span><span class="sxs-lookup"><span data-stu-id="fb927-809">Removes all the specified items from the project.</span></span>
<span data-ttu-id="fb927-810">与此项目无关的项目将被跳过。</span><span class="sxs-lookup"><span data-stu-id="fb927-810">Items that are not associated with this project are skipped.</span></span></summary>
        <remarks><span data-ttu-id="fb927-811">删除一个项目可能会导致对后备 XML 进行扩展，这可能会在下一项)  (解除关联。</span><span class="sxs-lookup"><span data-stu-id="fb927-811">Removing one item could cause the backing XML to be expanded, which could zombie (disassociate) the next item.</span></span>
<span data-ttu-id="fb927-812">为了使调用方可以轻松使用这种情况，如果项未与此项目相关联，则只需跳过它。</span><span class="sxs-lookup"><span data-stu-id="fb927-812">To make this case easy for the caller, if an item is not associated with this project it is simply skipped.</span></span></remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveProperty">
      <MemberSignature Language="C#" Value="public bool RemoveProperty (Microsoft.Build.Evaluation.ProjectProperty property);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool RemoveProperty(class Microsoft.Build.Evaluation.ProjectProperty property) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.RemoveProperty(Microsoft.Build.Evaluation.ProjectProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoveProperty (property As ProjectProperty) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool RemoveProperty(Microsoft::Build::Evaluation::ProjectProperty ^ property);" />
      <MemberSignature Language="F#" Value="member this.RemoveProperty : Microsoft.Build.Evaluation.ProjectProperty -&gt; bool" Usage="project.RemoveProperty property" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="Microsoft.Build.Evaluation.ProjectProperty" />
      </Parameters>
      <Docs>
        <param name="property"><span data-ttu-id="fb927-813">要删除的属性。</span><span class="sxs-lookup"><span data-stu-id="fb927-813">The property to remove.</span></span></param>
        <summary><span data-ttu-id="fb927-814">删除指定属性。</span><span class="sxs-lookup"><span data-stu-id="fb927-814">Removes the specified property.</span></span>
<span data-ttu-id="fb927-815">属性必须与此项目相关联。</span><span class="sxs-lookup"><span data-stu-id="fb927-815">Property must be associated with this project.</span></span>
<span data-ttu-id="fb927-816">属性不能源自于导入的文件。</span><span class="sxs-lookup"><span data-stu-id="fb927-816">Property must not originate from an imported file.</span></span>
<span data-ttu-id="fb927-817">如果该属性存在于此计算的项目中，则返回 true，否则返回 false。</span><span class="sxs-lookup"><span data-stu-id="fb927-817">Returns true if the property was in this evaluated project, otherwise false.</span></span>
<span data-ttu-id="fb927-818">为方便起见，如果父属性组为空，则它也会被删除。</span><span class="sxs-lookup"><span data-stu-id="fb927-818">As a convenience, if the parent property group becomes empty, it is also removed.</span></span>
<span data-ttu-id="fb927-819">更新已计算的项目，但在重新计算之前不会影响项目中的其他内容。</span><span class="sxs-lookup"><span data-stu-id="fb927-819">Updates the evaluated project, but does not affect anything else in the project until reevaluation.</span></span> <span data-ttu-id="fb927-820">例如，如果删除了“p”，则会将其从计算的项目中删除，但在重新计算之前，将不会修改从“$(p)”计算得出的“q”。</span><span class="sxs-lookup"><span data-stu-id="fb927-820">For example, if "p" is removed, it will be removed from the evaluated project, but "q" which is evaluated from "$(p)" will not be modified until reevaluation.</span></span>
<span data-ttu-id="fb927-821">当然，这是一种很方便的方法，它不一定会使项目处于完全一致的状态。</span><span class="sxs-lookup"><span data-stu-id="fb927-821">This is a convenience that it is understood does not necessarily leave the project in a perfectly self consistent state.</span></span></summary>
        <returns><span data-ttu-id="fb927-822">如果此属性存在于此计算的项目中，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="fb927-822"><see langword="true" /> if the property is present in this evaluated project; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fb927-823">如果包含该属性的属性组为空，则它也将被删除。</span><span class="sxs-lookup"><span data-stu-id="fb927-823">If the property group containing the property becomes empty, it is also removed.</span></span>  
  
 <span data-ttu-id="fb927-824">项目已更新，但在重新评估之前不会进行进一步的评估。</span><span class="sxs-lookup"><span data-stu-id="fb927-824">The project is updated, but no further evaluation occurs until reevaluation.</span></span> <span data-ttu-id="fb927-825">例如，如果删除了 "p"，则在重新评估之前，不会修改从 "$ (p) 计算得到的" q "。</span><span class="sxs-lookup"><span data-stu-id="fb927-825">For example, if "p" is removed, "q" which is evaluated from "$(p)" is not modified until reevaluation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Save">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="fb927-826">使用默认的字符编码将项目保存到文件系统上（如果项目已修改）。</span><span class="sxs-lookup"><span data-stu-id="fb927-826">Saves the project to the file system, if modified, using the default character encoding.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public void Save ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Save() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.Save" />
      <MemberSignature Language="VB.NET" Value="Public Sub Save ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Save();" />
      <MemberSignature Language="F#" Value="member this.Save : unit -&gt; unit" Usage="project.Save " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fb927-827">将项目保存到文件系统（如果项目被标记为已更新）。</span><span class="sxs-lookup"><span data-stu-id="fb927-827">Save the project to the file system, if dirty.</span></span>
<span data-ttu-id="fb927-828">使用默认编码。</span><span class="sxs-lookup"><span data-stu-id="fb927-828">Uses the default encoding.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public void Save (System.IO.TextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Save(class System.IO.TextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.Save(System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Save (writer As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Save(System::IO::TextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="member this.Save : System.IO.TextWriter -&gt; unit" Usage="project.Save writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="fb927-829">要将项目保存到的文本编写器。</span><span class="sxs-lookup"><span data-stu-id="fb927-829">The text writer to save the project to.</span></span></param>
        <summary><span data-ttu-id="fb927-830">将项目保存到提供的 TextWriter 中（无论项目是否被标记为已更新）。</span><span class="sxs-lookup"><span data-stu-id="fb927-830">Save the project to the provided TextWriter, whether or not it is dirty.</span></span>
<span data-ttu-id="fb927-831">使用 TextWriter 的编码。</span><span class="sxs-lookup"><span data-stu-id="fb927-831">Uses the encoding of the TextWriter.</span></span>
<span data-ttu-id="fb927-832">清除“已更新”标志。</span><span class="sxs-lookup"><span data-stu-id="fb927-832">Clears the Dirty flag.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public void Save (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Save(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.Save(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Save (path As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Save(System::String ^ path);" />
      <MemberSignature Language="F#" Value="member this.Save : string -&gt; unit" Usage="project.Save path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="fb927-833">项目源代码的路径。</span><span class="sxs-lookup"><span data-stu-id="fb927-833">The path to the project source code.</span></span></param>
        <summary><span data-ttu-id="fb927-834">将项目保存到文件系统（如果项目被标记为已更新，或者路径异常）。</span><span class="sxs-lookup"><span data-stu-id="fb927-834">Save the project to the file system, if dirty or the path is different.</span></span>
<span data-ttu-id="fb927-835">使用默认编码。</span><span class="sxs-lookup"><span data-stu-id="fb927-835">Uses the default encoding.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public void Save (System.Text.Encoding encoding);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Save(class System.Text.Encoding encoding) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.Save(System.Text.Encoding)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Save (encoding As Encoding)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Save(System::Text::Encoding ^ encoding);" />
      <MemberSignature Language="F#" Value="member this.Save : System.Text.Encoding -&gt; unit" Usage="project.Save encoding" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="encoding" Type="System.Text.Encoding" />
      </Parameters>
      <Docs>
        <param name="encoding"><span data-ttu-id="fb927-836">用于保存项目的字符编码。</span><span class="sxs-lookup"><span data-stu-id="fb927-836">The character encoding used to save the project.</span></span></param>
        <summary><span data-ttu-id="fb927-837">将项目保存到文件系统（如果项目被标记为已更新）。</span><span class="sxs-lookup"><span data-stu-id="fb927-837">Save the project to the file system, if dirty.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public void Save (string path, System.Text.Encoding encoding);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Save(string path, class System.Text.Encoding encoding) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.Save(System.String,System.Text.Encoding)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Save (path As String, encoding As Encoding)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Save(System::String ^ path, System::Text::Encoding ^ encoding);" />
      <MemberSignature Language="F#" Value="member this.Save : string * System.Text.Encoding -&gt; unit" Usage="project.Save (path, encoding)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="encoding" Type="System.Text.Encoding" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="fb927-838">项目源代码的路径。</span><span class="sxs-lookup"><span data-stu-id="fb927-838">The path to the project source code.</span></span></param>
        <param name="encoding"><span data-ttu-id="fb927-839">用于保存项目的字符编码。</span><span class="sxs-lookup"><span data-stu-id="fb927-839">The character encoding used to save the project.</span></span></param>
        <summary><span data-ttu-id="fb927-840">将项目保存到文件系统（如果项目被标记为已更新，或者路径异常）。</span><span class="sxs-lookup"><span data-stu-id="fb927-840">Save the project to the file system, if dirty or the path is different.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveLogicalProject">
      <MemberSignature Language="C#" Value="public void SaveLogicalProject (System.IO.TextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SaveLogicalProject(class System.IO.TextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.SaveLogicalProject(System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SaveLogicalProject (writer As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SaveLogicalProject(System::IO::TextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="member this.SaveLogicalProject : System.IO.TextWriter -&gt; unit" Usage="project.SaveLogicalProject writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="fb927-841">用于保存项目文件的编写器。</span><span class="sxs-lookup"><span data-stu-id="fb927-841">The writer that saves the project file.</span></span></param>
        <summary><span data-ttu-id="fb927-842">保存“逻辑”或“预处理”项目文件，该文件包括所有导入的文件，就如同这些文件构成了单个文件一样。</span><span class="sxs-lookup"><span data-stu-id="fb927-842">Saves a "logical" or "preprocessed" project file, that includes all the imported files as if they formed a single file.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetGlobalProperty">
      <MemberSignature Language="C#" Value="public bool SetGlobalProperty (string name, string escapedValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool SetGlobalProperty(string name, string escapedValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.SetGlobalProperty(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SetGlobalProperty (name As String, escapedValue As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool SetGlobalProperty(System::String ^ name, System::String ^ escapedValue);" />
      <MemberSignature Language="F#" Value="member this.SetGlobalProperty : string * string -&gt; bool" Usage="project.SetGlobalProperty (name, escapedValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="escapedValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="fb927-843">要设置的全局属性的名称。</span><span class="sxs-lookup"><span data-stu-id="fb927-843">The name of the global property to set.</span></span></param>
        <param name="escapedValue"><span data-ttu-id="fb927-844">全局属性的新值。</span><span class="sxs-lookup"><span data-stu-id="fb927-844">The new value of the global property.</span></span></param>
        <summary><span data-ttu-id="fb927-845">在计算项目之后更改一个全局属性。</span><span class="sxs-lookup"><span data-stu-id="fb927-845">Change a global property after the project has been evaluated.</span></span>
<span data-ttu-id="fb927-846">如果值发生更改，则会将项目标记为需要重新计算。</span><span class="sxs-lookup"><span data-stu-id="fb927-846">If the value changes, this makes the project require reevaluation.</span></span>
<span data-ttu-id="fb927-847">如果值发生更改，则返回 true，否则返回 False。</span><span class="sxs-lookup"><span data-stu-id="fb927-847">If the value changes, returns true, otherwise false.</span></span></summary>
        <returns><span data-ttu-id="fb927-848">如果值发生更改，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="fb927-848"><see langword="true" /> if the value changes; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetProperty">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Evaluation.ProjectProperty SetProperty (string name, string unevaluatedValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Build.Evaluation.ProjectProperty SetProperty(string name, string unevaluatedValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.SetProperty(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SetProperty (name As String, unevaluatedValue As String) As ProjectProperty" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Build::Evaluation::ProjectProperty ^ SetProperty(System::String ^ name, System::String ^ unevaluatedValue);" />
      <MemberSignature Language="F#" Value="member this.SetProperty : string * string -&gt; Microsoft.Build.Evaluation.ProjectProperty" Usage="project.SetProperty (name, unevaluatedValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Evaluation.ProjectProperty</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="unevaluatedValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="fb927-849">要设置的属性的名称。</span><span class="sxs-lookup"><span data-stu-id="fb927-849">The name of the property to set.</span></span></param>
        <param name="unevaluatedValue"><span data-ttu-id="fb927-850">属性的新的未计算值。</span><span class="sxs-lookup"><span data-stu-id="fb927-850">The new unevaluated value of the property.</span></span></param>
        <summary><span data-ttu-id="fb927-851">设置或添加具有指定名称和值的属性。</span><span class="sxs-lookup"><span data-stu-id="fb927-851">Set or add a property with the specified name and value.</span></span>
<span data-ttu-id="fb927-852">如果集合中已存在同名的任何属性，但它不是源自于导入的文件，则覆盖该属性的值。</span><span class="sxs-lookup"><span data-stu-id="fb927-852">Overwrites the value of any property with the same name already in the collection if it did not originate in an imported file.</span></span>
<span data-ttu-id="fb927-853">如果没有这样的现有属性，则使用以下启发式方法：更新最后一个具有指定名称的现有属性，该属性本身或其属性组（如果有的话）没有任何条件，并且位于此项目文件中，而不是位于导入的文件中。</span><span class="sxs-lookup"><span data-stu-id="fb927-853">If there is no such existing property, uses this heuristic: Updates the last existing property with the specified name that has no condition on itself or its property group, if any, and is in this project file rather than an imported file.</span></span>
<span data-ttu-id="fb927-854">否则，在不含条件的第一个属性组中添加一个新属性，如果需要，在现有的最后一个属性组后或在项目开头创建一个属性组。</span><span class="sxs-lookup"><span data-stu-id="fb927-854">Otherwise, adds a new property in the first property group without a condition, creating a property group if necessary after the last existing property group, else at the start of the project.</span></span>
<span data-ttu-id="fb927-855">返回属性集。</span><span class="sxs-lookup"><span data-stu-id="fb927-855">Returns the property set.</span></span>
<span data-ttu-id="fb927-856">尽力计算：展开所有属性。</span><span class="sxs-lookup"><span data-stu-id="fb927-856">Evaluates on a best-effort basis: -expands with all properties.</span></span> <span data-ttu-id="fb927-857">可以使用在新属性下的 XML 中定义的属性，尽管在实际计算中不会使用它们。</span><span class="sxs-lookup"><span data-stu-id="fb927-857">Properties that are defined in the XML below the new property may be used, even though in a real evaluation they would not be.</span></span>
<span data-ttu-id="fb927-858">-仅会计算此属性。</span><span class="sxs-lookup"><span data-stu-id="fb927-858">-only this property is evaluated.</span></span> <span data-ttu-id="fb927-859">其他依赖于其值的任何内容不受影响。</span><span class="sxs-lookup"><span data-stu-id="fb927-859">Anything else that would depend on its value is not affected.</span></span>
<span data-ttu-id="fb927-860">当然，这是一种很方便的方法，在重新计算之前，它不一定会使项目处于完全一致的状态。</span><span class="sxs-lookup"><span data-stu-id="fb927-860">This is a convenience that it is understood does not necessarily leave the project in a perfectly self consistent state until reevaluation.</span></span></summary>
        <returns><span data-ttu-id="fb927-861">属性。</span><span class="sxs-lookup"><span data-stu-id="fb927-861">The property.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fb927-862">如果没有具有给定名称的属性，将更新具有给定名称的最后一个现有属性，该属性对自身或其属性组没有任何条件，除非该属性源自于导入的文件。</span><span class="sxs-lookup"><span data-stu-id="fb927-862">If there is no property with the given name, updates the last existing property with the given name that has no condition on itself or its property group, unless it originated in an imported file.</span></span>  
  
 <span data-ttu-id="fb927-863">否则，将在第一个属性组中添加新属性，而不返回条件，如果需要，请在最后一个现有属性组之后创建属性组，否则在项目开始时创建一个属性组。</span><span class="sxs-lookup"><span data-stu-id="fb927-863">Otherwise, adds a new property in the first property group without a condition, creating a property group if necessary after the last existing property group, else at the start of the project.</span></span>  
  
 <span data-ttu-id="fb927-864">评估会尽力进行。</span><span class="sxs-lookup"><span data-stu-id="fb927-864">Evaluation takes place on a best-effort basis.</span></span> <span data-ttu-id="fb927-865">使用新属性在项目源中定义的属性可用于计算。</span><span class="sxs-lookup"><span data-stu-id="fb927-865">Properties that are defined in the project source following the new property may be used for evaluation.</span></span> <span data-ttu-id="fb927-866">仅计算此属性。</span><span class="sxs-lookup"><span data-stu-id="fb927-866">Only this property is evaluated.</span></span> <span data-ttu-id="fb927-867">可能依赖于它的其他属性不受影响。</span><span class="sxs-lookup"><span data-stu-id="fb927-867">Other properties that might depend on it are not affected.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SkipEvaluation">
      <MemberSignature Language="C#" Value="public bool SkipEvaluation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SkipEvaluation" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.SkipEvaluation" />
      <MemberSignature Language="VB.NET" Value="Public Property SkipEvaluation As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SkipEvaluation { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.SkipEvaluation : bool with get, set" Usage="Microsoft.Build.Evaluation.Project.SkipEvaluation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="msbuild-16;msbuild-16-netcore">
          <AttributeName Language="C#">[get: System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="msbuild-16;msbuild-16-netcore">
          <AttributeName Language="C#">[set: System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fb927-868">是否临时禁用 ReevaluateIfNecessary。</span><span class="sxs-lookup"><span data-stu-id="fb927-868">Whether ReevaluateIfNecessary is temporarily disabled.</span></span>
<span data-ttu-id="fb927-869">当宿主希望对项目进行大量读写操作并希望临时牺牲准确性以换取性能，则可以使用此标志。</span><span class="sxs-lookup"><span data-stu-id="fb927-869">This is useful when the host expects to make a number of reads and writes to the project, and wants to temporarily sacrifice correctness for performance.</span></span></summary>
        <value><span data-ttu-id="fb927-870">确定是否临时禁用 ReevaluateIfNecessary 的标志。</span><span class="sxs-lookup"><span data-stu-id="fb927-870">A flag that determines whether ReevaluateIfNecessary is temporarily disabled.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SubToolsetVersion">
      <MemberSignature Language="C#" Value="public string SubToolsetVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SubToolsetVersion" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.SubToolsetVersion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SubToolsetVersion As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SubToolsetVersion { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SubToolsetVersion : string" Usage="Microsoft.Build.Evaluation.Project.SubToolsetVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fb927-871">与 ToolsVersion 结合使用的子工具集版本用于确定此项目的工具集属性。</span><span class="sxs-lookup"><span data-stu-id="fb927-871">The sub-toolset version that, combined with the ToolsVersion, was used to determine the toolset properties for this project.</span></span></summary>
        <value><span data-ttu-id="fb927-872">SubToolsetVersion 属性值，如果该属性不存在，则为空字符串。</span><span class="sxs-lookup"><span data-stu-id="fb927-872">The SubToolsetVersion attribute value, or an empty string if the attribute is not present.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Targets">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;string,Microsoft.Build.Execution.ProjectTargetInstance&gt; Targets { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;string, class Microsoft.Build.Execution.ProjectTargetInstance&gt; Targets" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.Targets" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Targets As IDictionary(Of String, ProjectTargetInstance)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IDictionary&lt;System::String ^, Microsoft::Build::Execution::ProjectTargetInstance ^&gt; ^ Targets { System::Collections::Generic::IDictionary&lt;System::String ^, Microsoft::Build::Execution::ProjectTargetInstance ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Targets : System.Collections.Generic.IDictionary&lt;string, Microsoft.Build.Execution.ProjectTargetInstance&gt;" Usage="Microsoft.Build.Evaluation.Project.Targets" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="msbuild-15;msbuild-15-netcore;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[get: System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,Microsoft.Build.Execution.ProjectTargetInstance&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fb927-873">项目中的目标。</span><span class="sxs-lookup"><span data-stu-id="fb927-873">Targets in the project.</span></span> <span data-ttu-id="fb927-874">字典的关键是目标的名称。</span><span class="sxs-lookup"><span data-stu-id="fb927-874">The key to the dictionary is the target's name.</span></span>
<span data-ttu-id="fb927-875">此集合中不包括重写的目标。</span><span class="sxs-lookup"><span data-stu-id="fb927-875">Overridden targets are not included in this collection.</span></span>
<span data-ttu-id="fb927-876">此集合为只读。</span><span class="sxs-lookup"><span data-stu-id="fb927-876">This collection is read-only.</span></span></summary>
        <value><span data-ttu-id="fb927-877">此项目中所有目标的只读字典，按目标名称进行键控。</span><span class="sxs-lookup"><span data-stu-id="fb927-877">A read-only dictionary of all targets in this project, keyed by target name.</span></span> <span data-ttu-id="fb927-878">此集合中不包括重写的目标。</span><span class="sxs-lookup"><span data-stu-id="fb927-878">Overridden targets are not included in this collection.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ThrowInsteadOfSplittingItemElement">
      <MemberSignature Language="C#" Value="public bool ThrowInsteadOfSplittingItemElement { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ThrowInsteadOfSplittingItemElement" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.ThrowInsteadOfSplittingItemElement" />
      <MemberSignature Language="VB.NET" Value="Public Property ThrowInsteadOfSplittingItemElement As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ThrowInsteadOfSplittingItemElement { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ThrowInsteadOfSplittingItemElement : bool with get, set" Usage="Microsoft.Build.Evaluation.Project.ThrowInsteadOfSplittingItemElement" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="msbuild-16;msbuild-16-netcore">
          <AttributeName Language="C#">[get: System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="msbuild-16;msbuild-16-netcore">
          <AttributeName Language="C#">[set: System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fb927-879">如果 include 包含 glob、对项或属性的引用或多个项值，则某些项操作会将项元素拆分为多个元素。</span><span class="sxs-lookup"><span data-stu-id="fb927-879">Certain item operations split the item element in multiple elements if the include contains globs, references to items or properties, or multiple item values.</span></span>
            
<span data-ttu-id="fb927-880">可以展开项元素的项操作如下：- <see cref="M:Microsoft.Build.Evaluation.Project.RemoveItem(Microsoft.Build.Evaluation.ProjectItem)" />
             - <see cref="M:Microsoft.Build.Evaluation.Project.RemoveItems(System.Collections.Generic.IEnumerable{Microsoft.Build.Evaluation.ProjectItem})" />
             - <see cref="M:Microsoft.Build.Evaluation.Project.AddItem(System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})" />
             - <see cref="M:Microsoft.Build.Evaluation.Project.AddItemFast(System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})" />
             - <see cref="M:Microsoft.Build.Evaluation.ProjectItem.ChangeItemType(System.String)" />
             - <see cref="M:Microsoft.Build.Evaluation.ProjectItem.Rename(System.String)" />
             - <see cref="M:Microsoft.Build.Evaluation.ProjectItem.RemoveMetadata(System.String)" />
             - <see cref="M:Microsoft.Build.Evaluation.ProjectItem.SetMetadataValue(System.String,System.String)" />
             - <see cref="M:Microsoft.Build.Evaluation.ProjectItem.SetMetadataValue(System.String,System.String,System.Boolean)" /></span><span class="sxs-lookup"><span data-stu-id="fb927-880">The items operations that may expand item elements are: - <see cref="M:Microsoft.Build.Evaluation.Project.RemoveItem(Microsoft.Build.Evaluation.ProjectItem)" />
             - <see cref="M:Microsoft.Build.Evaluation.Project.RemoveItems(System.Collections.Generic.IEnumerable{Microsoft.Build.Evaluation.ProjectItem})" />
             - <see cref="M:Microsoft.Build.Evaluation.Project.AddItem(System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})" />
             - <see cref="M:Microsoft.Build.Evaluation.Project.AddItemFast(System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})" />
             - <see cref="M:Microsoft.Build.Evaluation.ProjectItem.ChangeItemType(System.String)" />
             - <see cref="M:Microsoft.Build.Evaluation.ProjectItem.Rename(System.String)" />
             - <see cref="M:Microsoft.Build.Evaluation.ProjectItem.RemoveMetadata(System.String)" />
             - <see cref="M:Microsoft.Build.Evaluation.ProjectItem.SetMetadataValue(System.String,System.String)" />
             - <see cref="M:Microsoft.Build.Evaluation.ProjectItem.SetMetadataValue(System.String,System.String,System.Boolean)" /></span></span>
             
<span data-ttu-id="fb927-881">如果将此属性设置为 true，则上一个项操作将引发 <exception cref="T:System.InvalidOperationException" /> 而不是展开项元素。</span><span class="sxs-lookup"><span data-stu-id="fb927-881">When this property is set to true, the previous item operations throw an <exception cref="T:System.InvalidOperationException" /> instead of expanding the item element.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToolsVersion">
      <MemberSignature Language="C#" Value="public string ToolsVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ToolsVersion" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.ToolsVersion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ToolsVersion As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ToolsVersion { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ToolsVersion : string" Usage="Microsoft.Build.Evaluation.Project.ToolsVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fb927-882">计算此项目所使用的工具版本（如果有）。</span><span class="sxs-lookup"><span data-stu-id="fb927-882">The tools version this project was evaluated with, if any.</span></span>
<span data-ttu-id="fb927-883">不一定与 Project 标记上的工具版本相同（如果有）；它可能已在外部指定，例如使用 /tv 开关。</span><span class="sxs-lookup"><span data-stu-id="fb927-883">Not necessarily the same as the tools version on the Project tag, if any; it may have been externally specified, for example with a /tv switch.</span></span>
<span data-ttu-id="fb927-884">Project 标记上的实际工具版本可以从 <see cref="P:Microsoft.Build.Evaluation.Project.Xml">Xml.ToolsVersion</see> 获取。</span><span class="sxs-lookup"><span data-stu-id="fb927-884">The actual tools version on the Project tag, can be gotten from <see cref="P:Microsoft.Build.Evaluation.Project.Xml">Xml.ToolsVersion</see>.</span></span>
<span data-ttu-id="fb927-885">项目一经创建，就不能更改。</span><span class="sxs-lookup"><span data-stu-id="fb927-885">Cannot be changed once the project has been created.</span></span></summary>
        <value><span data-ttu-id="fb927-886">计算此项目所用的工具版本（如果有）。</span><span class="sxs-lookup"><span data-stu-id="fb927-886">The tools version that this project was evaluated with, if any.</span></span></value>
        <remarks><span data-ttu-id="fb927-887">按构造设置。</span><span class="sxs-lookup"><span data-stu-id="fb927-887">Set by construction.</span></span></remarks>
      </Docs>
    </Member>
    <Member MemberName="Xml">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Construction.ProjectRootElement Xml { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Build.Construction.ProjectRootElement Xml" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.Xml" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Xml As ProjectRootElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Build::Construction::ProjectRootElement ^ Xml { Microsoft::Build::Construction::ProjectRootElement ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Xml : Microsoft.Build.Construction.ProjectRootElement" Usage="Microsoft.Build.Evaluation.Project.Xml" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[get: System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Construction.ProjectRootElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fb927-888">支持的 XML 属性。</span><span class="sxs-lookup"><span data-stu-id="fb927-888">The backing Xml project.</span></span>
<span data-ttu-id="fb927-889">绝不能为 null</span><span class="sxs-lookup"><span data-stu-id="fb927-889">Can never be null</span></span></summary>
        <value><span data-ttu-id="fb927-890">与此项目关联的根项目，不能为 <see langword="null" /> 。</span><span class="sxs-lookup"><span data-stu-id="fb927-890">The root project associated with this project, which can never be <see langword="null" />.</span></span></value>
        <remarks><span data-ttu-id="fb927-891">此处没有资源库，因为没有任何意义。</span><span class="sxs-lookup"><span data-stu-id="fb927-891">There is no setter here as that doesn't make sense.</span></span> <span data-ttu-id="fb927-892">如果有新的 ProjectRootElement，请将其评估为新项目。</span><span class="sxs-lookup"><span data-stu-id="fb927-892">If you have a new ProjectRootElement, evaluate it into a new Project.</span></span></remarks>
      </Docs>
    </Member>
  </Members>
</Type>
