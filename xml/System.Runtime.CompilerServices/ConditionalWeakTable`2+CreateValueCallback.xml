<Type Name="ConditionalWeakTable&lt;TKey,TValue&gt;+CreateValueCallback" FullName="System.Runtime.CompilerServices.ConditionalWeakTable&lt;TKey,TValue&gt;+CreateValueCallback">
  <Metadata><Meta Name="ms.openlocfilehash" Value="7e48138833e95f8dc2712a415a05e68c00a32747" /><Meta Name="ms.sourcegitcommit" Value="9a0316374d19cc78674994106d073aa5ef1bd5f3" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="11/10/2020" /><Meta Name="ms.locfileid" Value="94454261" /></Metadata><TypeSignature Language="C#" Value="public delegate TValue ConditionalWeakTable&lt;TKey,TValue&gt;.CreateValueCallback(TKey key) where TKey : class where TValue : class;" />
  <TypeSignature Language="ILAsm" Value=".class nested public auto ansi sealed ConditionalWeakTable`2/CreateValueCallback&lt;class TKey, class TValue&gt; extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.CompilerServices.ConditionalWeakTable`2.CreateValueCallback" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Function ConditionalWeakTable(Of TKey, TValue).CreateValueCallback(key As TKey) As TValue " />
  <TypeSignature Language="C++ CLI" Value="public:  where TKey : class where TValue : classdelegate TValue ConditionalWeakTable&lt;TKey, TValue&gt;::CreateValueCallback(TKey key);" />
  <TypeSignature Language="F#" Value="type ConditionalWeakTable&lt;'Key, 'Value (requires 'Key : null and 'Value : null)&gt;.CreateValueCallback = delegate of 'Key -&gt; 'Value" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="mscorlib" FromVersion="4.0.0.0" To="System.Runtime" ToVersion="0.0.0.0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0" />
    <TypeForwarding From="System.Dynamic.Runtime" FromVersion="4.0.10.0" To="System.Runtime" ToVersion="4.0.20.0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1" />
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.Runtime" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
    <TypeForwarding From="System.Dynamic.Runtime" FromVersion="5.0.0.0" To="System.Runtime" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
    <TypeForwarding From="System.Dynamic.Runtime" FromVersion="4.1.0.0" To="System.Runtime" ToVersion="4.2.0.0" FrameworkAlternate="netcore-2.0" />
    <TypeForwarding From="System.Dynamic.Runtime" FromVersion="4.1.1.0" To="System.Runtime" ToVersion="4.2.1.0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0" />
    <TypeForwarding From="System.Dynamic.Runtime" FromVersion="4.1.2.0" To="System.Runtime" ToVersion="4.2.2.0" FrameworkAlternate="netcore-3.1" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="key" Type="TKey" />
  </Parameters>
  <ReturnValue>
    <ReturnType>TValue</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="key"><span data-ttu-id="d1669-101">属于要创建的值的键。</span><span class="sxs-lookup"><span data-stu-id="d1669-101">The key that belongs to the value to create.</span></span></param>
    <summary><span data-ttu-id="d1669-102">表示一种方法，用于创建作为键/值对的一部分添加到 <see cref="T:System.Runtime.CompilerServices.ConditionalWeakTable`2" /> 对象的非默认值。</span><span class="sxs-lookup"><span data-stu-id="d1669-102">Represents a method that creates a non-default value to add as part of a key/value pair to a <see cref="T:System.Runtime.CompilerServices.ConditionalWeakTable`2" /> object.</span></span></summary>
    <returns><span data-ttu-id="d1669-103">一个引用类型的实例，该类型表示要附加到指定键的值。</span><span class="sxs-lookup"><span data-stu-id="d1669-103">An instance of a reference type that represents the value to attach to the specified key.</span></span></returns>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d1669-104"><xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.CreateValueCallback>委托封装一个回调方法， <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetValue%2A?displayProperty=nameWithType> 当在对象中找不到传递给方法的键时，该方法将调用此方法 <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> 。</span><span class="sxs-lookup"><span data-stu-id="d1669-104">The <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.CreateValueCallback> delegate encapsulates a callback method that is invoked by the <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetValue%2A?displayProperty=nameWithType> method when the key passed to the method is not found in the <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> object.</span></span> <span data-ttu-id="d1669-105"><xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetValue%2A>方法传递回调方法密钥，该密钥表示要向其动态附加属性值的托管对象。</span><span class="sxs-lookup"><span data-stu-id="d1669-105">The <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetValue%2A> method passes the callback method the key that represents a managed object to which a property value is to be dynamically attached.</span></span> <span data-ttu-id="d1669-106">方法负责将属性值返回到其调用方，进而将键/值对添加到表中。</span><span class="sxs-lookup"><span data-stu-id="d1669-106">The method is responsible for returning the property value to its caller, which, in turn, adds the key/value pair to the table.</span></span>  
  
 <span data-ttu-id="d1669-107"><xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.CreateValueCallback>方法用于返回可附加到指定键的引用类型的实例。</span><span class="sxs-lookup"><span data-stu-id="d1669-107">The <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.CreateValueCallback> method is used to return an instance of a reference type that can be attached to the specified key.</span></span> <span data-ttu-id="d1669-108">它允许使用非默认值初始化该实例。</span><span class="sxs-lookup"><span data-stu-id="d1669-108">It enables that instance to be initialized using non-default values.</span></span> <span data-ttu-id="d1669-109">如果在表中找不到该键，则 <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetOrCreateValue%2A?displayProperty=nameWithType> 方法添加一个键/值对，其中使用默认值初始化值。</span><span class="sxs-lookup"><span data-stu-id="d1669-109">If the key is not found in the table, the <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetOrCreateValue%2A?displayProperty=nameWithType> method adds a key/value pair in which the value is initialized using default values.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d1669-110">下面的示例定义了一个 `MainClass` 类和一个 `MainInfo` 类。</span><span class="sxs-lookup"><span data-stu-id="d1669-110">The following example defines a `MainClass` class and a `MainInfo` class.</span></span> <span data-ttu-id="d1669-111">`MainInfo` 提供有关实例的信息 `MainClass` 。</span><span class="sxs-lookup"><span data-stu-id="d1669-111">`MainInfo` provides information about the `MainClass` instance.</span></span> <span data-ttu-id="d1669-112">它还定义了 `Shared` `CreateAttachedValue` 可分配给 <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.CreateValueCallback> 委托并传递给方法的 Visual Basic) 方法中的静态 (<xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetValue%2A> 。</span><span class="sxs-lookup"><span data-stu-id="d1669-112">It also defines a static (`Shared` in Visual Basic) `CreateAttachedValue` method that can be assigned to the <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.CreateValueCallback> delegate and passed to the <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetValue%2A> method.</span></span> <span data-ttu-id="d1669-113">该示例调用 <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetValue%2A> 方法，将 `MainClass` 对象及其相应的对象添加 `MainInfo` 到 <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> 表中。</span><span class="sxs-lookup"><span data-stu-id="d1669-113">The example calls the <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetValue%2A> method to add a `MainClass` object and its corresponding `MainInfo` object to a <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> table.</span></span> <span data-ttu-id="d1669-114">该示例还演示了对和方法的调用， <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.Add%2A> <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetOrCreateValue%2A> 以便向表中添加键/值对，并对方法的调用以 <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.TryGetValue%2A> 检索属于现有键的值。</span><span class="sxs-lookup"><span data-stu-id="d1669-114">The example also illustrates calls to the <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.Add%2A> and <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetOrCreateValue%2A> methods to add key/value pairs to the table, and a call to the <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.TryGetValue%2A> method to retrieve the value that belongs to an existing key.</span></span>  
  
 [!code-csharp[System.Runtime.CompilerServices.ConditionalWeakTable.GetValue#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.compilerservices.conditionalweaktable.getvalue/cs/getvalue1.cs#1)]
 [!code-vb[System.Runtime.CompilerServices.ConditionalWeakTable.GetValue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.compilerservices.conditionalweaktable.getvalue/vb/getvalue1.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.GetValue(`0,System.Runtime.CompilerServices.ConditionalWeakTable{`0,`1}.CreateValueCallback)" />
  </Docs>
</Type>
