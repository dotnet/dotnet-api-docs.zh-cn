<Type Name="RuntimeWrappedException" FullName="System.Runtime.CompilerServices.RuntimeWrappedException">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e742d26dcd8891dc7a4d80f0a637732c765c7405" /><Meta Name="ms.sourcegitcommit" Value="a8ca33e500a87229bed50d12e09b1347df519648" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="10/09/2020" /><Meta Name="ms.locfileid" Value="91922899" /></Metadata><TypeSignature Language="C#" Value="public sealed class RuntimeWrappedException : Exception" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit RuntimeWrappedException extends System.Exception" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-2.0;netstandard-2.1" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.CompilerServices.RuntimeWrappedException" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class RuntimeWrappedException&#xA;Inherits Exception" />
  <TypeSignature Language="C++ CLI" Value="public ref class RuntimeWrappedException sealed : Exception" />
  <TypeSignature Language="F#" Value="type RuntimeWrappedException = class&#xA;    inherit Exception" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit RuntimeWrappedException extends System.Exception" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="mscorlib" FromVersion="4.0.0.0" To="System.Runtime" ToVersion="0.0.0.0" FrameworkAlternate="net-5.0" />
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.Runtime" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Exception</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName Language="C#">[System.Serializable]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Serializable&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="885a0-101">包装不是从 <see cref="T:System.Exception" /> 类派生的异常。</span><span class="sxs-lookup"><span data-stu-id="885a0-101">Wraps an exception that does not derive from the <see cref="T:System.Exception" /> class.</span></span> <span data-ttu-id="885a0-102">此类不能被继承。</span><span class="sxs-lookup"><span data-stu-id="885a0-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="885a0-103">某些语言（如 c + +）允许你引发任何托管类型的异常。</span><span class="sxs-lookup"><span data-stu-id="885a0-103">Some languages, such as C++, allow you to throw exceptions of any managed type.</span></span>  <span data-ttu-id="885a0-104">其他语言（如 Microsoft c # 和 Visual Basic）要求每个引发的异常都是从 <xref:System.Exception> 类派生的。</span><span class="sxs-lookup"><span data-stu-id="885a0-104">Other languages, such as Microsoft C# and Visual Basic, require that every thrown exception be derived from the <xref:System.Exception> class.</span></span>  <span data-ttu-id="885a0-105">为了保持语言之间的兼容性，公共语言运行时 (CLR) 包装对象中不是从派生的对象 <xref:System.Exception> <xref:System.Runtime.CompilerServices.RuntimeWrappedException> 。</span><span class="sxs-lookup"><span data-stu-id="885a0-105">To maintain compatibility between languages, the common language runtime (CLR) wraps objects that do not derive from <xref:System.Exception> in a <xref:System.Runtime.CompilerServices.RuntimeWrappedException> object.</span></span>  
  
 <span data-ttu-id="885a0-106">您可以使用 <xref:System.Runtime.CompilerServices.RuntimeCompatibilityAttribute> 类来指定异常是否应显示在程序集的 catch 块内部和异常筛选器中。</span><span class="sxs-lookup"><span data-stu-id="885a0-106">You can use the <xref:System.Runtime.CompilerServices.RuntimeCompatibilityAttribute> class to specify whether exceptions should appear wrapped inside catch blocks and exception filters for an assembly.</span></span>  <span data-ttu-id="885a0-107">许多语言编译器（包括 Microsoft c # 和 Visual Basic 编译器）默认应用此属性以指定换行行为。</span><span class="sxs-lookup"><span data-stu-id="885a0-107">Many language compilers, including the Microsoft C# and Visual Basic compilers, apply this attribute by default to specify the wrapping behavior.</span></span>  
  
 <span data-ttu-id="885a0-108">请注意，即使你使用 <xref:System.Runtime.CompilerServices.RuntimeCompatibilityAttribute> 类指定不需要包装异常，运行时仍会对异常进行包装。</span><span class="sxs-lookup"><span data-stu-id="885a0-108">Note that the runtime still wraps exceptions even if you use the <xref:System.Runtime.CompilerServices.RuntimeCompatibilityAttribute> class to specify that you do not want them wrapped.</span></span>  <span data-ttu-id="885a0-109">在这种情况下，只会在 catch 块或异常筛选器内解包异常。</span><span class="sxs-lookup"><span data-stu-id="885a0-109">In this case, exceptions are unwrapped only inside catch blocks or exception filters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="885a0-110">下面的代码示例演示如何 <xref:System.String> 在 c + + 中将对象作为异常引发，并使用对象捕获该对象 <xref:System.Runtime.CompilerServices.RuntimeWrappedException> 。</span><span class="sxs-lookup"><span data-stu-id="885a0-110">The following code example demonstrates how to throw a <xref:System.String> object as an exception in C++ and catch it using a <xref:System.Runtime.CompilerServices.RuntimeWrappedException> object.</span></span>  
  
 [!code-cpp[System.Runtime.CompilerServices.RuntimeWrappedException#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Runtime.CompilerServices.RuntimeWrappedException/cpp/sample.cpp#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RuntimeWrappedException (object thrownObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object thrownObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.RuntimeWrappedException.#ctor(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (thrownObject As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RuntimeWrappedException(System::Object ^ thrownObject);" />
      <MemberSignature Language="F#" Value="new System.Runtime.CompilerServices.RuntimeWrappedException : obj -&gt; System.Runtime.CompilerServices.RuntimeWrappedException" Usage="new System.Runtime.CompilerServices.RuntimeWrappedException thrownObject" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="thrownObject" Type="System.Object" Index="0" FrameworkAlternate="net-5.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="thrownObject"><span data-ttu-id="885a0-111">进行包装时发生异常。</span><span class="sxs-lookup"><span data-stu-id="885a0-111">The exception getting wrapped.</span></span></param>
        <summary><span data-ttu-id="885a0-112">初始化包含内部异常对象的 <see cref="T:System.Runtime.CompilerServices.RuntimeWrappedException" /> 的新实例。</span><span class="sxs-lookup"><span data-stu-id="885a0-112">Initializes a new instance of the <see cref="T:System.Runtime.CompilerServices.RuntimeWrappedException" /> that contains the inner exception object.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetObjectData">
      <MemberSignature Language="C#" Value="public override void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.RuntimeWrappedException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub GetObjectData (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="override this.GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit" Usage="runtimeWrappedException.GetObjectData (info, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.Security.SecurityCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecurityCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info"><span data-ttu-id="885a0-113">存放有关所引发异常的序列化对象数据的 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="885a0-113">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object that holds the serialized object data about the exception being thrown.</span></span></param>
        <param name="context"><span data-ttu-id="885a0-114"><see cref="T:System.Runtime.Serialization.StreamingContext" /> 对象，该对象包含有关源或目标的上下文信息。</span><span class="sxs-lookup"><span data-stu-id="885a0-114">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> object that contains contextual information about the source or destination.</span></span></param>
        <summary><span data-ttu-id="885a0-115">使用有关异常的信息设置 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="885a0-115">Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object with information about the exception.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="885a0-116"><xref:System.Runtime.CompilerServices.RuntimeWrappedException.GetObjectData%2A>方法 <xref:System.Runtime.Serialization.SerializationInfo> 使用针对序列化的所有异常对象数据设置对象。</span><span class="sxs-lookup"><span data-stu-id="885a0-116">The <xref:System.Runtime.CompilerServices.RuntimeWrappedException.GetObjectData%2A> method sets a <xref:System.Runtime.Serialization.SerializationInfo> object with all the exception object data targeted for serialization.</span></span> <span data-ttu-id="885a0-117">在反序列化期间，将从通过流传输的 `SerializationInfo` 中重新构造异常。</span><span class="sxs-lookup"><span data-stu-id="885a0-117">During deserialization, the exception is reconstituted from the `SerializationInfo` transmitted over the stream.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="885a0-118"><paramref name="info" /> 参数为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="885a0-118">The <paramref name="info" /> parameter is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WrappedException">
      <MemberSignature Language="C#" Value="public object WrappedException { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object WrappedException" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.CompilerServices.RuntimeWrappedException.WrappedException" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property WrappedException As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ WrappedException { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.WrappedException : obj" Usage="System.Runtime.CompilerServices.RuntimeWrappedException.WrappedException" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="885a0-119">获取由 <see cref="T:System.Runtime.CompilerServices.RuntimeWrappedException" /> 对象包装的对象。</span><span class="sxs-lookup"><span data-stu-id="885a0-119">Gets the object that was wrapped by the <see cref="T:System.Runtime.CompilerServices.RuntimeWrappedException" /> object.</span></span></summary>
        <value><span data-ttu-id="885a0-120">由 <see cref="T:System.Runtime.CompilerServices.RuntimeWrappedException" /> 对象包装的对象。</span><span class="sxs-lookup"><span data-stu-id="885a0-120">The object that was wrapped by the <see cref="T:System.Runtime.CompilerServices.RuntimeWrappedException" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="885a0-121"><xref:System.Runtime.CompilerServices.RuntimeWrappedException.WrappedException%2A>属性获取一个对象，该对象是一种语言引发的异常，该语言允许不是从类派生的异常 <xref:System.Exception> 。</span><span class="sxs-lookup"><span data-stu-id="885a0-121">The <xref:System.Runtime.CompilerServices.RuntimeWrappedException.WrappedException%2A> property gets an object that was thrown as an exception from a language that allows exceptions that do not derive from the <xref:System.Exception> class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
