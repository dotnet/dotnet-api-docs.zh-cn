<Type Name="Unsafe" FullName="System.Runtime.CompilerServices.Unsafe">
  <Metadata><Meta Name="ms.openlocfilehash" Value="f18cb859b4106092ed49b17b9cc78628dd42d42e" /><Meta Name="ms.sourcegitcommit" Value="9f423345753728e8cad38d4a22663a109e69ea91" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="03/04/2021" /><Meta Name="ms.locfileid" Value="102076416" /></Metadata><TypeSignature Language="C#" Value="public static class Unsafe" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit Unsafe extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.CompilerServices.Unsafe" />
  <TypeSignature Language="VB.NET" Value="Public Class Unsafe" />
  <TypeSignature Language="C++ CLI" Value="public ref class Unsafe abstract sealed" />
  <TypeSignature Language="F#" Value="type Unsafe = class" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.CompilerServices.Unsafe</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
    <AssemblyVersion>4.0.3.0</AssemblyVersion>
    <AssemblyVersion>4.0.4.0</AssemblyVersion>
    <AssemblyVersion>4.0.4.1</AssemblyVersion>
    <AssemblyVersion>4.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.6.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="85935-101">包含用于操作指针的通用低级别功能。</span><span class="sxs-lookup"><span data-stu-id="85935-101">Contains generic, low-level functionality for manipulating pointers.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Add&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static void* Add&lt;T&gt; (void* source, int elementOffset);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void* Add&lt;T&gt;(void* source, int32 elementOffset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.Unsafe.Add``1(System.Void*,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static void* Add(void* source, int elementOffset);" />
      <MemberSignature Language="F#" Value="static member Add : nativeptr&lt;unit&gt; * int -&gt; nativeptr&lt;unit&gt;" Usage="System.Runtime.CompilerServices.Unsafe.Add (source, elementOffset)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.CompilerServices.Unsafe</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.1</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.6.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void*</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Void*" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;net-5.0;netcore-3.0;netcore-3.1" />
        <Parameter Name="elementOffset" Type="System.Int32" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;net-5.0;netcore-3.0;netcore-3.1" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="85935-102">Void 指针的类型。</span><span class="sxs-lookup"><span data-stu-id="85935-102">The type of void pointer.</span></span></typeparam>
        <param name="source"><span data-ttu-id="85935-103">要添加偏移量的 void 指针。</span><span class="sxs-lookup"><span data-stu-id="85935-103">The void pointer to add the offset to.</span></span></param>
        <param name="elementOffset"><span data-ttu-id="85935-104">要增加的偏移量。</span><span class="sxs-lookup"><span data-stu-id="85935-104">The offset to add.</span></span></param>
        <summary><span data-ttu-id="85935-105">向给定 void 指针添加元素偏移量。</span><span class="sxs-lookup"><span data-stu-id="85935-105">Adds an element offset to the given void pointer.</span></span></summary>
        <returns><span data-ttu-id="85935-106">一个新的 void 指针，反映了向指定指针增加的偏移量。</span><span class="sxs-lookup"><span data-stu-id="85935-106">A new void pointer that reflects the addition of offset to the specified pointer.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static ref T Add&lt;T&gt; (ref T source, int elementOffset);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T Add&lt;T&gt;(!!T&amp; source, int32 elementOffset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.Unsafe.Add``1(``0@,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Add(Of T) (ByRef source As T, elementOffset As Integer) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static T % Add(T % source, int elementOffset);" />
      <MemberSignature Language="F#" Value="static member Add : 'T * int -&gt; 'T" Usage="System.Runtime.CompilerServices.Unsafe.Add (source, elementOffset)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.CompilerServices.Unsafe</AssemblyName>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.1</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.6.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue RefType="Ref">
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="T" RefType="ref" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;net-5.0;netcore-1.1;netcore-3.0;netcore-3.1" />
        <Parameter Name="elementOffset" Type="System.Int32" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;net-5.0;netcore-1.1;netcore-3.0;netcore-3.1" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="85935-107">引用的类型。</span><span class="sxs-lookup"><span data-stu-id="85935-107">The type of reference.</span></span></typeparam>
        <param name="source"><span data-ttu-id="85935-108">要为其增加偏移量的引用。</span><span class="sxs-lookup"><span data-stu-id="85935-108">The reference to add the offset to.</span></span></param>
        <param name="elementOffset"><span data-ttu-id="85935-109">要增加的偏移量。</span><span class="sxs-lookup"><span data-stu-id="85935-109">The offset to add.</span></span></param>
        <summary><span data-ttu-id="85935-110">向给定引用添加元素偏移量。</span><span class="sxs-lookup"><span data-stu-id="85935-110">Adds an element offset to the given reference.</span></span></summary>
        <returns><span data-ttu-id="85935-111">新引用，用于反映向指针添加的偏移量。</span><span class="sxs-lookup"><span data-stu-id="85935-111">A new reference that reflects the addition of offset to pointer.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static ref T Add&lt;T&gt; (ref T source, IntPtr elementOffset);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T Add&lt;T&gt;(!!T&amp; source, native int elementOffset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.Unsafe.Add``1(``0@,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Add(Of T) (ByRef source As T, elementOffset As IntPtr) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static T % Add(T % source, IntPtr elementOffset);" />
      <MemberSignature Language="F#" Value="static member Add : 'T * nativeint -&gt; 'T" Usage="System.Runtime.CompilerServices.Unsafe.Add (source, elementOffset)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.CompilerServices.Unsafe</AssemblyName>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.1</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.6.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue RefType="Ref">
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="T" RefType="ref" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;net-5.0;netcore-3.0;netcore-3.1" />
        <Parameter Name="elementOffset" Type="System.IntPtr" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;net-5.0;netcore-3.0;netcore-3.1" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="85935-112">引用的类型。</span><span class="sxs-lookup"><span data-stu-id="85935-112">The type of reference.</span></span></typeparam>
        <param name="source"><span data-ttu-id="85935-113">要为其增加偏移量的引用。</span><span class="sxs-lookup"><span data-stu-id="85935-113">The reference to add the offset to.</span></span></param>
        <param name="elementOffset"><span data-ttu-id="85935-114">要增加的偏移量。</span><span class="sxs-lookup"><span data-stu-id="85935-114">The offset to add.</span></span></param>
        <summary><span data-ttu-id="85935-115">向给定引用添加元素偏移量。</span><span class="sxs-lookup"><span data-stu-id="85935-115">Adds an element offset to the given reference.</span></span></summary>
        <returns><span data-ttu-id="85935-116">新引用，用于反映向指针添加的偏移量。</span><span class="sxs-lookup"><span data-stu-id="85935-116">A new reference that reflects the addition of offset to pointer.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddByteOffset&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static ref T AddByteOffset&lt;T&gt; (ref T source, IntPtr byteOffset);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T AddByteOffset&lt;T&gt;(!!T&amp; source, native int byteOffset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.Unsafe.AddByteOffset``1(``0@,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AddByteOffset(Of T) (ByRef source As T, byteOffset As IntPtr) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static T % AddByteOffset(T % source, IntPtr byteOffset);" />
      <MemberSignature Language="F#" Value="static member AddByteOffset : 'T * nativeint -&gt; 'T" Usage="System.Runtime.CompilerServices.Unsafe.AddByteOffset (source, byteOffset)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.CompilerServices.Unsafe</AssemblyName>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.1</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.6.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue RefType="Ref">
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="T" RefType="ref" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;net-5.0;netcore-3.0;netcore-3.1" />
        <Parameter Name="byteOffset" Type="System.IntPtr" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;net-5.0;netcore-3.0;netcore-3.1" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="85935-117">引用的类型。</span><span class="sxs-lookup"><span data-stu-id="85935-117">The type of reference.</span></span></typeparam>
        <param name="source"><span data-ttu-id="85935-118">要为其增加偏移量的引用。</span><span class="sxs-lookup"><span data-stu-id="85935-118">The reference to add the offset to.</span></span></param>
        <param name="byteOffset"><span data-ttu-id="85935-119">要增加的偏移量。</span><span class="sxs-lookup"><span data-stu-id="85935-119">The offset to add.</span></span></param>
        <summary><span data-ttu-id="85935-120">向给定引用添加字节偏移量。</span><span class="sxs-lookup"><span data-stu-id="85935-120">Adds a byte offset to the given reference.</span></span></summary>
        <returns><span data-ttu-id="85935-121">新引用，用于反映向指针添加的字节偏移量。</span><span class="sxs-lookup"><span data-stu-id="85935-121">A new reference that reflects the addition of byte offset to pointer.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AreSame&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static bool AreSame&lt;T&gt; (ref T left, ref T right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool AreSame&lt;T&gt;(!!T&amp; left, !!T&amp; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.Unsafe.AreSame``1(``0@,``0@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AreSame(Of T) (ByRef left As T, ByRef right As T) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static bool AreSame(T % left, T % right);" />
      <MemberSignature Language="F#" Value="static member AreSame : 'T * 'T -&gt; bool" Usage="System.Runtime.CompilerServices.Unsafe.AreSame (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.CompilerServices.Unsafe</AssemblyName>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.1</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.6.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="left" Type="T" RefType="ref" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;net-5.0;netcore-1.1;netcore-3.0;netcore-3.1" />
        <Parameter Name="right" Type="T" RefType="ref" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;net-5.0;netcore-1.1;netcore-3.0;netcore-3.1" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="85935-122">引用的类型。</span><span class="sxs-lookup"><span data-stu-id="85935-122">The type of reference.</span></span></typeparam>
        <param name="left"><span data-ttu-id="85935-123">要比较的第一个引用。</span><span class="sxs-lookup"><span data-stu-id="85935-123">The first reference to compare.</span></span></param>
        <param name="right"><span data-ttu-id="85935-124">要比较的第二个引用。</span><span class="sxs-lookup"><span data-stu-id="85935-124">The second reference to compare.</span></span></param>
        <summary><span data-ttu-id="85935-125">确定指定的引用是否指向相同的位置。</span><span class="sxs-lookup"><span data-stu-id="85935-125">Determines whether the specified references point to the same location.</span></span></summary>
        <returns><span data-ttu-id="85935-126">如果 <paramref name="left" /> 和 <paramref name="right" /> 指向相同的位置，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="85935-126"><see langword="true" /> if <paramref name="left" /> and <paramref name="right" /> point to the same location; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="As&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T As&lt;T&gt; (object o) where T : class;" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;netcore-1.0;netcore-1.1;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T As&lt;class T&gt;(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.Unsafe.As``1(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function As(Of T As Class) (o As Object) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : class static T As(System::Object ^ o);" />
      <MemberSignature Language="F#" Value="static member As : obj -&gt; 'T (requires 'T : null)" Usage="System.Runtime.CompilerServices.Unsafe.As o" />
      <MemberSignature Language="C#" Value="public static T? As&lt;T&gt; (object? o) where T : class;" FrameworkAlternate="net-5.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.CompilerServices.Unsafe</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.1</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.6.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="85935-127">对象将转换为的类型。</span><span class="sxs-lookup"><span data-stu-id="85935-127">The type which the object will be cast to.</span></span></typeparam>
        <param name="o"><span data-ttu-id="85935-128">要强制转换的对象。</span><span class="sxs-lookup"><span data-stu-id="85935-128">The object to cast.</span></span></param>
        <summary><span data-ttu-id="85935-129">将给定对象强制转换为指定类型。</span><span class="sxs-lookup"><span data-stu-id="85935-129">Casts the given object to the specified type.</span></span></summary>
        <returns><span data-ttu-id="85935-130">原始对象，强制转换为给定类型。</span><span class="sxs-lookup"><span data-stu-id="85935-130">The original object, casted to the given type.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="As&lt;TFrom,TTo&gt;">
      <MemberSignature Language="C#" Value="public static ref TTo As&lt;TFrom,TTo&gt; (ref TFrom source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TTo As&lt;TFrom, TTo&gt;(!!TFrom&amp; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.Unsafe.As``2(``0@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function As(Of TFrom, TTo) (ByRef source As TFrom) As TTo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TFrom, typename TTo&gt;&#xA; static TTo % As(TFrom % source);" />
      <MemberSignature Language="F#" Value="static member As : 'From -&gt; 'o" Usage="System.Runtime.CompilerServices.Unsafe.As source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.CompilerServices.Unsafe</AssemblyName>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.1</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.6.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue RefType="Ref">
        <ReturnType>TTo</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TFrom" />
        <TypeParameter Name="TTo" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="TFrom" RefType="ref" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;net-5.0;netcore-1.1;netcore-3.0;netcore-3.1" />
      </Parameters>
      <Docs>
        <typeparam name="TFrom"><span data-ttu-id="85935-131">对重新解释的引用的类型。</span><span class="sxs-lookup"><span data-stu-id="85935-131">The type of reference to reinterpret.</span></span></typeparam>
        <typeparam name="TTo"><span data-ttu-id="85935-132">引用的所需类型。</span><span class="sxs-lookup"><span data-stu-id="85935-132">The desired type of the reference.</span></span></typeparam>
        <param name="source"><span data-ttu-id="85935-133">要重新解释的引用。</span><span class="sxs-lookup"><span data-stu-id="85935-133">The reference to reinterpret.</span></span></param>
        <summary><span data-ttu-id="85935-134">将给定引用重新解释为对 <typeparamref name="TTo" /> 类型的值的引用。</span><span class="sxs-lookup"><span data-stu-id="85935-134">Reinterprets the given reference as a reference to a value of type <typeparamref name="TTo" />.</span></span></summary>
        <returns><span data-ttu-id="85935-135">对 <typeparamref name="TTo" /> 类型的值的引用。</span><span class="sxs-lookup"><span data-stu-id="85935-135">A reference to a value of type <typeparamref name="TTo" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AsPointer&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static void* AsPointer&lt;T&gt; (ref T value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void* AsPointer&lt;T&gt;(!!T&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.Unsafe.AsPointer``1(``0@)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static void* AsPointer(T % value);" />
      <MemberSignature Language="F#" Value="static member AsPointer : 'T -&gt; nativeptr&lt;unit&gt;" Usage="System.Runtime.CompilerServices.Unsafe.AsPointer value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.CompilerServices.Unsafe</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.1</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.6.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void*</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="T" RefType="ref" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="85935-136">对象的类型。</span><span class="sxs-lookup"><span data-stu-id="85935-136">The type of object.</span></span></typeparam>
        <param name="value"><span data-ttu-id="85935-137">已获取其指针的对象。</span><span class="sxs-lookup"><span data-stu-id="85935-137">The object whose pointer is obtained.</span></span></param>
        <summary><span data-ttu-id="85935-138">返回指向给定 by-ref 参数的指针。</span><span class="sxs-lookup"><span data-stu-id="85935-138">Returns a pointer to the given by-ref parameter.</span></span></summary>
        <returns><span data-ttu-id="85935-139">指向给定值的指针。</span><span class="sxs-lookup"><span data-stu-id="85935-139">A pointer to the given value.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AsRef&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static ref T AsRef&lt;T&gt; (void* source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T AsRef&lt;T&gt;(void* source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.Unsafe.AsRef``1(System.Void*)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static T % AsRef(void* source);" />
      <MemberSignature Language="F#" Value="static member AsRef : nativeptr&lt;unit&gt; -&gt; 'T" Usage="System.Runtime.CompilerServices.Unsafe.AsRef source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.CompilerServices.Unsafe</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.1</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.6.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue RefType="Ref">
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Void*" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="85935-140">解释的位置的类型。</span><span class="sxs-lookup"><span data-stu-id="85935-140">The type of the interpreted location.</span></span></typeparam>
        <param name="source"><span data-ttu-id="85935-141">要引用的值的位置。</span><span class="sxs-lookup"><span data-stu-id="85935-141">The location of the value to reference.</span></span></param>
        <summary><span data-ttu-id="85935-142">将给定位置重新解释为对 <typeparamref name="T" /> 类型的值的引用。</span><span class="sxs-lookup"><span data-stu-id="85935-142">Reinterprets the given location as a reference to a value of type <typeparamref name="T" />.</span></span></summary>
        <returns><span data-ttu-id="85935-143">对 <typeparamref name="T" /> 类型的值的引用。</span><span class="sxs-lookup"><span data-stu-id="85935-143">A reference to a value of type <typeparamref name="T" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AsRef&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static ref T AsRef&lt;T&gt; (ref T source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T AsRef&lt;T&gt;([in]!!T&amp; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.Unsafe.AsRef``1(``0@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AsRef(Of T) (ByRef source As T) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static T % AsRef(T % source);" />
      <MemberSignature Language="F#" Value="static member AsRef : 'T -&gt; 'T" Usage="System.Runtime.CompilerServices.Unsafe.AsRef source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.CompilerServices.Unsafe</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.1</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.6.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue RefType="Ref">
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="T" RefType="ref" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;net-5.0;netcore-3.0;netcore-3.1" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="85935-144">引用的类型。</span><span class="sxs-lookup"><span data-stu-id="85935-144">The type of reference.</span></span></typeparam>
        <param name="source"><span data-ttu-id="85935-145">要重新解释的只读引用。</span><span class="sxs-lookup"><span data-stu-id="85935-145">The read-only reference to reinterpret.</span></span></param>
        <summary><span data-ttu-id="85935-146">将给定只读引用重新解释为引用。</span><span class="sxs-lookup"><span data-stu-id="85935-146">Reinterprets the given read-only reference as a reference.</span></span></summary>
        <returns><span data-ttu-id="85935-147">对 <typeparamref name="T" /> 类型的值的引用。</span><span class="sxs-lookup"><span data-stu-id="85935-147">A reference to a value of type <typeparamref name="T" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ByteOffset&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static IntPtr ByteOffset&lt;T&gt; (ref T origin, ref T target);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int ByteOffset&lt;T&gt;(!!T&amp; origin, !!T&amp; target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.Unsafe.ByteOffset``1(``0@,``0@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ByteOffset(Of T) (ByRef origin As T, ByRef target As T) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static IntPtr ByteOffset(T % origin, T % target);" />
      <MemberSignature Language="F#" Value="static member ByteOffset : 'T * 'T -&gt; nativeint" Usage="System.Runtime.CompilerServices.Unsafe.ByteOffset (origin, target)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.CompilerServices.Unsafe</AssemblyName>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.1</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.6.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="origin" Type="T" RefType="ref" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;net-5.0;netcore-3.0;netcore-3.1" />
        <Parameter Name="target" Type="T" RefType="ref" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;net-5.0;netcore-3.0;netcore-3.1" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="85935-148">引用的类型。</span><span class="sxs-lookup"><span data-stu-id="85935-148">The type of reference.</span></span></typeparam>
        <param name="origin"><span data-ttu-id="85935-149">对源的引用。</span><span class="sxs-lookup"><span data-stu-id="85935-149">The reference to origin.</span></span></param>
        <param name="target"><span data-ttu-id="85935-150">对目标的引用。</span><span class="sxs-lookup"><span data-stu-id="85935-150">The reference to target.</span></span></param>
        <summary><span data-ttu-id="85935-151">确定给定引用从源到目标的字节偏移量。</span><span class="sxs-lookup"><span data-stu-id="85935-151">Determines the byte offset from origin to target from the given references.</span></span></summary>
        <returns><span data-ttu-id="85935-152">从源到目标的字节偏移量，即 <paramref name="target" /> - <paramref name="origin" />。</span><span class="sxs-lookup"><span data-stu-id="85935-152">Byte offset from origin to target i.e. <paramref name="target" /> - <paramref name="origin" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Copy&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static void Copy&lt;T&gt; (void* destination, ref T source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Copy&lt;T&gt;(void* destination, !!T&amp; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.Unsafe.Copy``1(System.Void*,``0@)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static void Copy(void* destination, T % source);" />
      <MemberSignature Language="F#" Value="static member Copy : nativeptr&lt;unit&gt; * 'T -&gt; unit" Usage="System.Runtime.CompilerServices.Unsafe.Copy (destination, source)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.CompilerServices.Unsafe</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.1</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.6.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="destination" Type="System.Void*" />
        <Parameter Name="source" Type="T" RefType="ref" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="85935-153">要复制的值的类型。</span><span class="sxs-lookup"><span data-stu-id="85935-153">The type of value to copy.</span></span></typeparam>
        <param name="destination"><span data-ttu-id="85935-154">要复制到其中的位置。</span><span class="sxs-lookup"><span data-stu-id="85935-154">The location to copy to.</span></span></param>
        <param name="source"><span data-ttu-id="85935-155">对要复制的值的引用。</span><span class="sxs-lookup"><span data-stu-id="85935-155">A reference to the value to copy.</span></span></param>
        <summary><span data-ttu-id="85935-156">将 <typeparamref name="T" /> 类型的值复制到给定位置。</span><span class="sxs-lookup"><span data-stu-id="85935-156">Copies a value of type <typeparamref name="T" /> to the given location.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Copy&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static void Copy&lt;T&gt; (ref T destination, void* source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Copy&lt;T&gt;(!!T&amp; destination, void* source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.Unsafe.Copy``1(``0@,System.Void*)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static void Copy(T % destination, void* source);" />
      <MemberSignature Language="F#" Value="static member Copy : 'T * nativeptr&lt;unit&gt; -&gt; unit" Usage="System.Runtime.CompilerServices.Unsafe.Copy (destination, source)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.CompilerServices.Unsafe</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.1</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.6.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="destination" Type="T" RefType="ref" />
        <Parameter Name="source" Type="System.Void*" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="85935-157">要复制的值的类型。</span><span class="sxs-lookup"><span data-stu-id="85935-157">The type of value to copy.</span></span></typeparam>
        <param name="destination"><span data-ttu-id="85935-158">要复制到其中的位置。</span><span class="sxs-lookup"><span data-stu-id="85935-158">The location to copy to.</span></span></param>
        <param name="source"><span data-ttu-id="85935-159">指向要复制的值的指针。</span><span class="sxs-lookup"><span data-stu-id="85935-159">A pointer to the value to copy.</span></span></param>
        <summary><span data-ttu-id="85935-160">将 <typeparamref name="T" /> 类型的值复制到给定位置。</span><span class="sxs-lookup"><span data-stu-id="85935-160">Copies a value of type <typeparamref name="T" /> to the given location.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyBlock">
      <MemberSignature Language="C#" Value="public static void CopyBlock (ref byte destination, ref byte source, uint byteCount);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CopyBlock(unsigned int8&amp; destination, unsigned int8&amp; source, unsigned int32 byteCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.Unsafe.CopyBlock(System.Byte@,System.Byte@,System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub CopyBlock (ByRef destination As Byte, ByRef source As Byte, byteCount As UInteger)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void CopyBlock(System::Byte % destination, System::Byte % source, System::UInt32 byteCount);" />
      <MemberSignature Language="F#" Value="static member CopyBlock : byte * byte * uint32 -&gt; unit" Usage="System.Runtime.CompilerServices.Unsafe.CopyBlock (destination, source, byteCount)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.CompilerServices.Unsafe</AssemblyName>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.1</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.6.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Byte" RefType="ref" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;net-5.0;netcore-3.0;netcore-3.1" />
        <Parameter Name="source" Type="System.Byte" RefType="ref" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;net-5.0;netcore-3.0;netcore-3.1" />
        <Parameter Name="byteCount" Type="System.UInt32" Index="2" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;net-5.0;netcore-3.0;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="destination"><span data-ttu-id="85935-161">要复制到其中的目标地址。</span><span class="sxs-lookup"><span data-stu-id="85935-161">The destination address to copy to.</span></span></param>
        <param name="source"><span data-ttu-id="85935-162">要从其中进行复制的源地址。</span><span class="sxs-lookup"><span data-stu-id="85935-162">The source address to copy from.</span></span></param>
        <param name="byteCount"><span data-ttu-id="85935-163">要复制的字节数。</span><span class="sxs-lookup"><span data-stu-id="85935-163">The number of bytes to copy.</span></span></param>
        <summary><span data-ttu-id="85935-164">将字节从源地址复制到目标地址。</span><span class="sxs-lookup"><span data-stu-id="85935-164">Copies bytes from the source address to the destination address.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyBlock">
      <MemberSignature Language="C#" Value="public static void CopyBlock (void* destination, void* source, uint byteCount);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CopyBlock(void* destination, void* source, unsigned int32 byteCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.Unsafe.CopyBlock(System.Void*,System.Void*,System.UInt32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void CopyBlock(void* destination, void* source, System::UInt32 byteCount);" />
      <MemberSignature Language="F#" Value="static member CopyBlock : nativeptr&lt;unit&gt; * nativeptr&lt;unit&gt; * uint32 -&gt; unit" Usage="System.Runtime.CompilerServices.Unsafe.CopyBlock (destination, source, byteCount)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.CompilerServices.Unsafe</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.1</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.6.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Void*" />
        <Parameter Name="source" Type="System.Void*" />
        <Parameter Name="byteCount" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="destination"><span data-ttu-id="85935-165">要复制到其中的目标地址。</span><span class="sxs-lookup"><span data-stu-id="85935-165">The destination address to copy to.</span></span></param>
        <param name="source"><span data-ttu-id="85935-166">要从其中进行复制的源地址。</span><span class="sxs-lookup"><span data-stu-id="85935-166">The source address to copy from.</span></span></param>
        <param name="byteCount"><span data-ttu-id="85935-167">要复制的字节数。</span><span class="sxs-lookup"><span data-stu-id="85935-167">The number of bytes to copy.</span></span></param>
        <summary><span data-ttu-id="85935-168">将字节从源地址复制到目标地址。</span><span class="sxs-lookup"><span data-stu-id="85935-168">Copies bytes from the source address to the destination address.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyBlockUnaligned">
      <MemberSignature Language="C#" Value="public static void CopyBlockUnaligned (ref byte destination, ref byte source, uint byteCount);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CopyBlockUnaligned(unsigned int8&amp; destination, unsigned int8&amp; source, unsigned int32 byteCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.Unsafe.CopyBlockUnaligned(System.Byte@,System.Byte@,System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub CopyBlockUnaligned (ByRef destination As Byte, ByRef source As Byte, byteCount As UInteger)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void CopyBlockUnaligned(System::Byte % destination, System::Byte % source, System::UInt32 byteCount);" />
      <MemberSignature Language="F#" Value="static member CopyBlockUnaligned : byte * byte * uint32 -&gt; unit" Usage="System.Runtime.CompilerServices.Unsafe.CopyBlockUnaligned (destination, source, byteCount)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.CompilerServices.Unsafe</AssemblyName>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.1</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.6.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Byte" RefType="ref" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;net-5.0;netcore-3.0;netcore-3.1" />
        <Parameter Name="source" Type="System.Byte" RefType="ref" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;net-5.0;netcore-3.0;netcore-3.1" />
        <Parameter Name="byteCount" Type="System.UInt32" Index="2" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;net-5.0;netcore-3.0;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="destination"><span data-ttu-id="85935-169">要复制到其中的目标地址。</span><span class="sxs-lookup"><span data-stu-id="85935-169">The destination address to copy to.</span></span></param>
        <param name="source"><span data-ttu-id="85935-170">要从其中进行复制的源地址。</span><span class="sxs-lookup"><span data-stu-id="85935-170">The source address to copy from.</span></span></param>
        <param name="byteCount"><span data-ttu-id="85935-171">要复制的字节数。</span><span class="sxs-lookup"><span data-stu-id="85935-171">The number of bytes to copy.</span></span></param>
        <summary><span data-ttu-id="85935-172">将字节从源地址复制到目标地址，无需假设地址的结构依赖对齐方式。</span><span class="sxs-lookup"><span data-stu-id="85935-172">Copies bytes from the source address to the destination address without assuming architecture dependent alignment of the addresses.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyBlockUnaligned">
      <MemberSignature Language="C#" Value="public static void CopyBlockUnaligned (void* destination, void* source, uint byteCount);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CopyBlockUnaligned(void* destination, void* source, unsigned int32 byteCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.Unsafe.CopyBlockUnaligned(System.Void*,System.Void*,System.UInt32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void CopyBlockUnaligned(void* destination, void* source, System::UInt32 byteCount);" />
      <MemberSignature Language="F#" Value="static member CopyBlockUnaligned : nativeptr&lt;unit&gt; * nativeptr&lt;unit&gt; * uint32 -&gt; unit" Usage="System.Runtime.CompilerServices.Unsafe.CopyBlockUnaligned (destination, source, byteCount)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.CompilerServices.Unsafe</AssemblyName>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.1</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.6.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Void*" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;net-5.0;netcore-3.0;netcore-3.1" />
        <Parameter Name="source" Type="System.Void*" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;net-5.0;netcore-3.0;netcore-3.1" />
        <Parameter Name="byteCount" Type="System.UInt32" Index="2" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;net-5.0;netcore-3.0;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="destination"><span data-ttu-id="85935-173">要复制到其中的目标地址。</span><span class="sxs-lookup"><span data-stu-id="85935-173">The destination address to copy to.</span></span></param>
        <param name="source"><span data-ttu-id="85935-174">要从其中进行复制的源地址。</span><span class="sxs-lookup"><span data-stu-id="85935-174">The source address to copy from.</span></span></param>
        <param name="byteCount"><span data-ttu-id="85935-175">要复制的字节数。</span><span class="sxs-lookup"><span data-stu-id="85935-175">The number of bytes to copy.</span></span></param>
        <summary><span data-ttu-id="85935-176">将字节从源地址复制到目标地址，无需假设地址的结构依赖对齐方式。</span><span class="sxs-lookup"><span data-stu-id="85935-176">Copies bytes from the source address to the destination address without assuming architecture dependent alignment of the addresses.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InitBlock">
      <MemberSignature Language="C#" Value="public static void InitBlock (ref byte startAddress, byte value, uint byteCount);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void InitBlock(unsigned int8&amp; startAddress, unsigned int8 value, unsigned int32 byteCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.Unsafe.InitBlock(System.Byte@,System.Byte,System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub InitBlock (ByRef startAddress As Byte, value As Byte, byteCount As UInteger)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void InitBlock(System::Byte % startAddress, System::Byte value, System::UInt32 byteCount);" />
      <MemberSignature Language="F#" Value="static member InitBlock : byte * byte * uint32 -&gt; unit" Usage="System.Runtime.CompilerServices.Unsafe.InitBlock (startAddress, value, byteCount)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.CompilerServices.Unsafe</AssemblyName>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.1</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.6.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startAddress" Type="System.Byte" RefType="ref" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;net-5.0;netcore-3.0;netcore-3.1" />
        <Parameter Name="value" Type="System.Byte" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;net-5.0;netcore-3.0;netcore-3.1" />
        <Parameter Name="byteCount" Type="System.UInt32" Index="2" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;net-5.0;netcore-3.0;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="startAddress"><span data-ttu-id="85935-177">要初始化的内存块的起始地址。</span><span class="sxs-lookup"><span data-stu-id="85935-177">The address of the start of the memory block to initialize.</span></span></param>
        <param name="value"><span data-ttu-id="85935-178">块的初始化值。</span><span class="sxs-lookup"><span data-stu-id="85935-178">The value to initialize the block to.</span></span></param>
        <param name="byteCount"><span data-ttu-id="85935-179">要初始化的字节数。</span><span class="sxs-lookup"><span data-stu-id="85935-179">The number of bytes to initialize.</span></span></param>
        <summary><span data-ttu-id="85935-180">在给定位置使用给定的初始值初始化内存块。</span><span class="sxs-lookup"><span data-stu-id="85935-180">Initializes a block of memory at the given location with a given initial value.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InitBlock">
      <MemberSignature Language="C#" Value="public static void InitBlock (void* startAddress, byte value, uint byteCount);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void InitBlock(void* startAddress, unsigned int8 value, unsigned int32 byteCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.Unsafe.InitBlock(System.Void*,System.Byte,System.UInt32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void InitBlock(void* startAddress, System::Byte value, System::UInt32 byteCount);" />
      <MemberSignature Language="F#" Value="static member InitBlock : nativeptr&lt;unit&gt; * byte * uint32 -&gt; unit" Usage="System.Runtime.CompilerServices.Unsafe.InitBlock (startAddress, value, byteCount)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.CompilerServices.Unsafe</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.1</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.6.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startAddress" Type="System.Void*" />
        <Parameter Name="value" Type="System.Byte" />
        <Parameter Name="byteCount" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="startAddress"><span data-ttu-id="85935-181">要初始化的内存块的起始地址。</span><span class="sxs-lookup"><span data-stu-id="85935-181">The address of the start of the memory block to initialize.</span></span></param>
        <param name="value"><span data-ttu-id="85935-182">块的初始化值。</span><span class="sxs-lookup"><span data-stu-id="85935-182">The value to initialize the block to.</span></span></param>
        <param name="byteCount"><span data-ttu-id="85935-183">要初始化的字节数。</span><span class="sxs-lookup"><span data-stu-id="85935-183">The number of bytes to initialize.</span></span></param>
        <summary><span data-ttu-id="85935-184">在给定位置使用给定的初始值初始化内存块。</span><span class="sxs-lookup"><span data-stu-id="85935-184">Initializes a block of memory at the given location with a given initial value.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InitBlockUnaligned">
      <MemberSignature Language="C#" Value="public static void InitBlockUnaligned (ref byte startAddress, byte value, uint byteCount);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void InitBlockUnaligned(unsigned int8&amp; startAddress, unsigned int8 value, unsigned int32 byteCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.Unsafe.InitBlockUnaligned(System.Byte@,System.Byte,System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub InitBlockUnaligned (ByRef startAddress As Byte, value As Byte, byteCount As UInteger)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void InitBlockUnaligned(System::Byte % startAddress, System::Byte value, System::UInt32 byteCount);" />
      <MemberSignature Language="F#" Value="static member InitBlockUnaligned : byte * byte * uint32 -&gt; unit" Usage="System.Runtime.CompilerServices.Unsafe.InitBlockUnaligned (startAddress, value, byteCount)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.CompilerServices.Unsafe</AssemblyName>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.1</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.6.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startAddress" Type="System.Byte" RefType="ref" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;net-5.0;netcore-3.0;netcore-3.1" />
        <Parameter Name="value" Type="System.Byte" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;net-5.0;netcore-3.0;netcore-3.1" />
        <Parameter Name="byteCount" Type="System.UInt32" Index="2" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;net-5.0;netcore-3.0;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="startAddress"><span data-ttu-id="85935-185">要初始化的内存块的起始地址。</span><span class="sxs-lookup"><span data-stu-id="85935-185">The address of the start of the memory block to initialize.</span></span></param>
        <param name="value"><span data-ttu-id="85935-186">块的初始化值。</span><span class="sxs-lookup"><span data-stu-id="85935-186">The value to initialize the block to.</span></span></param>
        <param name="byteCount"><span data-ttu-id="85935-187">要初始化的字节数。</span><span class="sxs-lookup"><span data-stu-id="85935-187">The number of bytes to initialize.</span></span></param>
        <summary><span data-ttu-id="85935-188">在给定位置使用给定的初始值初始化内存块，无需假设地址的结构依赖对齐方式。</span><span class="sxs-lookup"><span data-stu-id="85935-188">Initializes a block of memory at the given location with a given initial value without assuming architecture dependent alignment of the address.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InitBlockUnaligned">
      <MemberSignature Language="C#" Value="public static void InitBlockUnaligned (void* startAddress, byte value, uint byteCount);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void InitBlockUnaligned(void* startAddress, unsigned int8 value, unsigned int32 byteCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.Unsafe.InitBlockUnaligned(System.Void*,System.Byte,System.UInt32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void InitBlockUnaligned(void* startAddress, System::Byte value, System::UInt32 byteCount);" />
      <MemberSignature Language="F#" Value="static member InitBlockUnaligned : nativeptr&lt;unit&gt; * byte * uint32 -&gt; unit" Usage="System.Runtime.CompilerServices.Unsafe.InitBlockUnaligned (startAddress, value, byteCount)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.CompilerServices.Unsafe</AssemblyName>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.1</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.6.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startAddress" Type="System.Void*" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;net-5.0;netcore-3.0;netcore-3.1" />
        <Parameter Name="value" Type="System.Byte" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;net-5.0;netcore-3.0;netcore-3.1" />
        <Parameter Name="byteCount" Type="System.UInt32" Index="2" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;net-5.0;netcore-3.0;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="startAddress"><span data-ttu-id="85935-189">要初始化的内存块的起始地址。</span><span class="sxs-lookup"><span data-stu-id="85935-189">The address of the start of the memory block to initialize.</span></span></param>
        <param name="value"><span data-ttu-id="85935-190">块的初始化值。</span><span class="sxs-lookup"><span data-stu-id="85935-190">The value to initialize the block to.</span></span></param>
        <param name="byteCount"><span data-ttu-id="85935-191">要初始化的字节数。</span><span class="sxs-lookup"><span data-stu-id="85935-191">The number of bytes to initialize.</span></span></param>
        <summary><span data-ttu-id="85935-192">在给定位置使用给定的初始值初始化内存块，无需假设地址的结构依赖对齐方式。</span><span class="sxs-lookup"><span data-stu-id="85935-192">Initializes a block of memory at the given location with a given initial value without assuming architecture dependent alignment of the address.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAddressGreaterThan&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static bool IsAddressGreaterThan&lt;T&gt; (ref T left, ref T right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsAddressGreaterThan&lt;T&gt;(!!T&amp; left, !!T&amp; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.Unsafe.IsAddressGreaterThan``1(``0@,``0@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsAddressGreaterThan(Of T) (ByRef left As T, ByRef right As T) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static bool IsAddressGreaterThan(T % left, T % right);" />
      <MemberSignature Language="F#" Value="static member IsAddressGreaterThan : 'T * 'T -&gt; bool" Usage="System.Runtime.CompilerServices.Unsafe.IsAddressGreaterThan (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.CompilerServices.Unsafe</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.1</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.6.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="left" Type="T" RefType="ref" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;net-5.0;netcore-3.0;netcore-3.1" />
        <Parameter Name="right" Type="T" RefType="ref" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;net-5.0;netcore-3.0;netcore-3.1" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="85935-193">引用的类型。</span><span class="sxs-lookup"><span data-stu-id="85935-193">The type of the reference.</span></span></typeparam>
        <param name="left"><span data-ttu-id="85935-194">要比较的第一个值。</span><span class="sxs-lookup"><span data-stu-id="85935-194">The first value to compare.</span></span></param>
        <param name="right"><span data-ttu-id="85935-195">要比较的第二个值。</span><span class="sxs-lookup"><span data-stu-id="85935-195">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="85935-196">返回一个值，该值指示指定的引用是否大于另一个指定的引用。</span><span class="sxs-lookup"><span data-stu-id="85935-196">Returns a value that indicates whether a specified reference is greater than another specified reference.</span></span></summary>
        <returns><span data-ttu-id="85935-197">如果 <see langword="true" /> 大于 <paramref name="left" />，则为 <paramref name="right" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="85935-197"><see langword="true" /> if <paramref name="left" /> is greater than <paramref name="right" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAddressLessThan&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static bool IsAddressLessThan&lt;T&gt; (ref T left, ref T right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsAddressLessThan&lt;T&gt;(!!T&amp; left, !!T&amp; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.Unsafe.IsAddressLessThan``1(``0@,``0@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsAddressLessThan(Of T) (ByRef left As T, ByRef right As T) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static bool IsAddressLessThan(T % left, T % right);" />
      <MemberSignature Language="F#" Value="static member IsAddressLessThan : 'T * 'T -&gt; bool" Usage="System.Runtime.CompilerServices.Unsafe.IsAddressLessThan (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.CompilerServices.Unsafe</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.1</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.6.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="left" Type="T" RefType="ref" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;net-5.0;netcore-3.0;netcore-3.1" />
        <Parameter Name="right" Type="T" RefType="ref" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;net-5.0;netcore-3.0;netcore-3.1" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="85935-198">引用的类型。</span><span class="sxs-lookup"><span data-stu-id="85935-198">The type of the reference.</span></span></typeparam>
        <param name="left"><span data-ttu-id="85935-199">要比较的第一个值。</span><span class="sxs-lookup"><span data-stu-id="85935-199">The first value to compare.</span></span></param>
        <param name="right"><span data-ttu-id="85935-200">要比较的第二个值。</span><span class="sxs-lookup"><span data-stu-id="85935-200">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="85935-201">返回一个值，该值指示指定的引用是否小于另一个指定的引用。</span><span class="sxs-lookup"><span data-stu-id="85935-201">Returns a value that indicates whether a specified reference is less than another specified reference.</span></span></summary>
        <returns><span data-ttu-id="85935-202">如果 <paramref name="left" /> 小于 <paramref name="right" />，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="85935-202"><see langword="true" /> if <paramref name="left" /> is less than <paramref name="right" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNullRef&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static bool IsNullRef&lt;T&gt; (ref T source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsNullRef&lt;T&gt;(!!T&amp; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.Unsafe.IsNullRef``1(``0@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsNullRef(Of T) (ByRef source As T) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static bool IsNullRef(T % source);" />
      <MemberSignature Language="F#" Value="static member IsNullRef : 'T -&gt; bool" Usage="System.Runtime.CompilerServices.Unsafe.IsNullRef source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.CompilerServices.Unsafe</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="T" RefType="ref" Index="0" FrameworkAlternate="net-5.0" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="source">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NullRef&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static ref T NullRef&lt;T&gt; ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T NullRef&lt;T&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.Unsafe.NullRef``1" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function NullRef(Of T) () As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static T % NullRef();" />
      <MemberSignature Language="F#" Value="static member NullRef : unit -&gt; 'T" Usage="System.Runtime.CompilerServices.Unsafe.NullRef " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.CompilerServices.Unsafe</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Read&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T Read&lt;T&gt; (void* source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T Read&lt;T&gt;(void* source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.Unsafe.Read``1(System.Void*)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static T Read(void* source);" />
      <MemberSignature Language="F#" Value="static member Read : nativeptr&lt;unit&gt; -&gt; 'T" Usage="System.Runtime.CompilerServices.Unsafe.Read source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.CompilerServices.Unsafe</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.1</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.6.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Void*" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="85935-203">要读取的类型。</span><span class="sxs-lookup"><span data-stu-id="85935-203">The type to read.</span></span></typeparam>
        <param name="source"><span data-ttu-id="85935-204">要从中读取的位置。</span><span class="sxs-lookup"><span data-stu-id="85935-204">The location to read from.</span></span></param>
        <summary><span data-ttu-id="85935-205">从给定位置读取 <typeparamref name="T" /> 类型的值。</span><span class="sxs-lookup"><span data-stu-id="85935-205">Reads a value of type <typeparamref name="T" /> from the given location.</span></span></summary>
        <returns><span data-ttu-id="85935-206">从给定位置读取的 <typeparamref name="T" /> 类型的对象。</span><span class="sxs-lookup"><span data-stu-id="85935-206">An object of type <typeparamref name="T" /> read from the given location.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadUnaligned&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T ReadUnaligned&lt;T&gt; (ref byte source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T ReadUnaligned&lt;T&gt;(unsigned int8&amp; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.Unsafe.ReadUnaligned``1(System.Byte@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReadUnaligned(Of T) (ByRef source As Byte) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static T ReadUnaligned(System::Byte % source);" />
      <MemberSignature Language="F#" Value="static member ReadUnaligned : byte -&gt; 'T" Usage="System.Runtime.CompilerServices.Unsafe.ReadUnaligned source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.CompilerServices.Unsafe</AssemblyName>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.1</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.6.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Byte" RefType="ref" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;net-5.0;netcore-3.0;netcore-3.1" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="85935-207">要读取的类型。</span><span class="sxs-lookup"><span data-stu-id="85935-207">The type to read.</span></span></typeparam>
        <param name="source"><span data-ttu-id="85935-208">要从中读取的位置。</span><span class="sxs-lookup"><span data-stu-id="85935-208">The location to read from.</span></span></param>
        <summary><span data-ttu-id="85935-209">从给定位置读取 <typeparamref name="T" /> 类型的值，无需假设地址的结构依赖对齐方式。</span><span class="sxs-lookup"><span data-stu-id="85935-209">Reads a value of type <typeparamref name="T" /> from the given location without assuming architecture dependent alignment of the addresses.</span></span></summary>
        <returns><span data-ttu-id="85935-210">从给定位置读取的 <typeparamref name="T" /> 类型的对象。</span><span class="sxs-lookup"><span data-stu-id="85935-210">An object of type <typeparamref name="T" /> read from the given location.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadUnaligned&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T ReadUnaligned&lt;T&gt; (void* source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T ReadUnaligned&lt;T&gt;(void* source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.Unsafe.ReadUnaligned``1(System.Void*)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static T ReadUnaligned(void* source);" />
      <MemberSignature Language="F#" Value="static member ReadUnaligned : nativeptr&lt;unit&gt; -&gt; 'T" Usage="System.Runtime.CompilerServices.Unsafe.ReadUnaligned source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.CompilerServices.Unsafe</AssemblyName>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.1</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.6.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Void*" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;net-5.0;netcore-3.0;netcore-3.1" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="85935-211">要读取的类型。</span><span class="sxs-lookup"><span data-stu-id="85935-211">The type to read.</span></span></typeparam>
        <param name="source"><span data-ttu-id="85935-212">要从中读取的位置。</span><span class="sxs-lookup"><span data-stu-id="85935-212">The location to read from.</span></span></param>
        <summary><span data-ttu-id="85935-213">从给定位置读取 <typeparamref name="T" /> 类型的值，无需假设地址的结构依赖对齐方式。</span><span class="sxs-lookup"><span data-stu-id="85935-213">Reads a value of type <typeparamref name="T" /> from the given location without assuming architecture dependent alignment of the addresses.</span></span></summary>
        <returns><span data-ttu-id="85935-214">从给定位置读取的 <typeparamref name="T" /> 类型的对象。</span><span class="sxs-lookup"><span data-stu-id="85935-214">An object of type <typeparamref name="T" /> read from the given location.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SizeOf&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static int SizeOf&lt;T&gt; ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 SizeOf&lt;T&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.Unsafe.SizeOf``1" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SizeOf(Of T) () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static int SizeOf();" />
      <MemberSignature Language="F#" Value="static member SizeOf : unit -&gt; int" Usage="System.Runtime.CompilerServices.Unsafe.SizeOf " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.CompilerServices.Unsafe</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.1</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.6.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="T"><span data-ttu-id="85935-215">要检索其大小的对象的类型。</span><span class="sxs-lookup"><span data-stu-id="85935-215">The type of object whose size is retrieved.</span></span></typeparam>
        <summary><span data-ttu-id="85935-216">返回给定类型参数的对象的大小。</span><span class="sxs-lookup"><span data-stu-id="85935-216">Returns the size of an object of the given type parameter.</span></span></summary>
        <returns><span data-ttu-id="85935-217"><typeparamref name="T" /> 类型的对象大小。</span><span class="sxs-lookup"><span data-stu-id="85935-217">The size of an object of type <typeparamref name="T" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SkipInit&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static void SkipInit&lt;T&gt; (out T value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SkipInit&lt;T&gt;([out] !!T&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.Unsafe.SkipInit``1(``0@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SkipInit(Of T) (ByRef value As T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static void SkipInit([Runtime::InteropServices::Out] T % value);" />
      <MemberSignature Language="F#" Value="static member SkipInit : 'T -&gt; unit" Usage="System.Runtime.CompilerServices.Unsafe.SkipInit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.CompilerServices.Unsafe</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="T" RefType="out" Index="0" FrameworkAlternate="net-5.0" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="85935-218">未初始化对象的类型。</span><span class="sxs-lookup"><span data-stu-id="85935-218">The type of the uninitialized object.</span></span></typeparam>
        <param name="value"><span data-ttu-id="85935-219">未初始化的对象。</span><span class="sxs-lookup"><span data-stu-id="85935-219">The uninitialized object.</span></span></param>
        <summary><span data-ttu-id="85935-220">跳过给定值的明确赋值规则。</span><span class="sxs-lookup"><span data-stu-id="85935-220">Bypasses definite assignment rules for a given value.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Subtract&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static void* Subtract&lt;T&gt; (void* source, int elementOffset);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void* Subtract&lt;T&gt;(void* source, int32 elementOffset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.Unsafe.Subtract``1(System.Void*,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static void* Subtract(void* source, int elementOffset);" />
      <MemberSignature Language="F#" Value="static member Subtract : nativeptr&lt;unit&gt; * int -&gt; nativeptr&lt;unit&gt;" Usage="System.Runtime.CompilerServices.Unsafe.Subtract (source, elementOffset)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.CompilerServices.Unsafe</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.1</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.6.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void*</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Void*" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;net-5.0;netcore-3.0;netcore-3.1" />
        <Parameter Name="elementOffset" Type="System.Int32" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;net-5.0;netcore-3.0;netcore-3.1" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="85935-221">Void 指针的类型。</span><span class="sxs-lookup"><span data-stu-id="85935-221">The type of the void pointer.</span></span></typeparam>
        <param name="source"><span data-ttu-id="85935-222">要从中减去偏移量的 void 指针。</span><span class="sxs-lookup"><span data-stu-id="85935-222">The void pointer to subtract the offset from.</span></span></param>
        <param name="elementOffset"><span data-ttu-id="85935-223">要减去的偏移量。</span><span class="sxs-lookup"><span data-stu-id="85935-223">The offset to subtract.</span></span></param>
        <summary><span data-ttu-id="85935-224">从给定的 void 指针减去元素偏移量。</span><span class="sxs-lookup"><span data-stu-id="85935-224">Subtracts an element offset from the given void pointer.</span></span></summary>
        <returns><span data-ttu-id="85935-225">一个新的 void 指针，反映了从指定指针减去的偏移量。</span><span class="sxs-lookup"><span data-stu-id="85935-225">A new void pointer that reflects the subtraction of offset from the specified pointer.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Subtract&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static ref T Subtract&lt;T&gt; (ref T source, int elementOffset);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T Subtract&lt;T&gt;(!!T&amp; source, int32 elementOffset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.Unsafe.Subtract``1(``0@,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Subtract(Of T) (ByRef source As T, elementOffset As Integer) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static T % Subtract(T % source, int elementOffset);" />
      <MemberSignature Language="F#" Value="static member Subtract : 'T * int -&gt; 'T" Usage="System.Runtime.CompilerServices.Unsafe.Subtract (source, elementOffset)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.CompilerServices.Unsafe</AssemblyName>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.1</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.6.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue RefType="Ref">
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="T" RefType="ref" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;net-5.0;netcore-1.1;netcore-3.0;netcore-3.1" />
        <Parameter Name="elementOffset" Type="System.Int32" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;net-5.0;netcore-1.1;netcore-3.0;netcore-3.1" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="85935-226">引用的类型。</span><span class="sxs-lookup"><span data-stu-id="85935-226">The type of reference.</span></span></typeparam>
        <param name="source"><span data-ttu-id="85935-227">要从中减去偏移量的引用。</span><span class="sxs-lookup"><span data-stu-id="85935-227">The reference to subtract the offset from.</span></span></param>
        <param name="elementOffset"><span data-ttu-id="85935-228">要减去的偏移量。</span><span class="sxs-lookup"><span data-stu-id="85935-228">The offset to subtract.</span></span></param>
        <summary><span data-ttu-id="85935-229">从给定引用减去元素偏移量。</span><span class="sxs-lookup"><span data-stu-id="85935-229">Subtracts an element offset from the given reference.</span></span></summary>
        <returns><span data-ttu-id="85935-230">新引用，用于反映从指针减去的偏移量。</span><span class="sxs-lookup"><span data-stu-id="85935-230">A new reference that reflects the subtraction of offset from pointer.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Subtract&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static ref T Subtract&lt;T&gt; (ref T source, IntPtr elementOffset);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T Subtract&lt;T&gt;(!!T&amp; source, native int elementOffset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.Unsafe.Subtract``1(``0@,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Subtract(Of T) (ByRef source As T, elementOffset As IntPtr) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static T % Subtract(T % source, IntPtr elementOffset);" />
      <MemberSignature Language="F#" Value="static member Subtract : 'T * nativeint -&gt; 'T" Usage="System.Runtime.CompilerServices.Unsafe.Subtract (source, elementOffset)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.CompilerServices.Unsafe</AssemblyName>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.1</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.6.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue RefType="Ref">
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="T" RefType="ref" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;net-5.0;netcore-3.0;netcore-3.1" />
        <Parameter Name="elementOffset" Type="System.IntPtr" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;net-5.0;netcore-3.0;netcore-3.1" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="85935-231">引用的类型。</span><span class="sxs-lookup"><span data-stu-id="85935-231">The type of reference.</span></span></typeparam>
        <param name="source"><span data-ttu-id="85935-232">要从中减去偏移量的引用。</span><span class="sxs-lookup"><span data-stu-id="85935-232">The reference to subtract the offset from.</span></span></param>
        <param name="elementOffset"><span data-ttu-id="85935-233">要减去的偏移量。</span><span class="sxs-lookup"><span data-stu-id="85935-233">The offset to subtract.</span></span></param>
        <summary><span data-ttu-id="85935-234">从给定引用减去元素偏移量。</span><span class="sxs-lookup"><span data-stu-id="85935-234">Subtracts an element offset from the given reference.</span></span></summary>
        <returns><span data-ttu-id="85935-235">新引用，用于反映从指针减去的偏移量。</span><span class="sxs-lookup"><span data-stu-id="85935-235">A new reference that reflects the subtraction of offset from pointer.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SubtractByteOffset&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static ref T SubtractByteOffset&lt;T&gt; (ref T source, IntPtr byteOffset);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T SubtractByteOffset&lt;T&gt;(!!T&amp; source, native int byteOffset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.Unsafe.SubtractByteOffset``1(``0@,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SubtractByteOffset(Of T) (ByRef source As T, byteOffset As IntPtr) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static T % SubtractByteOffset(T % source, IntPtr byteOffset);" />
      <MemberSignature Language="F#" Value="static member SubtractByteOffset : 'T * nativeint -&gt; 'T" Usage="System.Runtime.CompilerServices.Unsafe.SubtractByteOffset (source, byteOffset)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.CompilerServices.Unsafe</AssemblyName>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.1</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.6.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue RefType="Ref">
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="T" RefType="ref" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;net-5.0;netcore-3.0;netcore-3.1" />
        <Parameter Name="byteOffset" Type="System.IntPtr" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;net-5.0;netcore-3.0;netcore-3.1" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="85935-236">引用的类型。</span><span class="sxs-lookup"><span data-stu-id="85935-236">The type of reference.</span></span></typeparam>
        <param name="source"><span data-ttu-id="85935-237">要从中减去偏移量的引用。</span><span class="sxs-lookup"><span data-stu-id="85935-237">The reference to subtract the offset from.</span></span></param>
        <param name="byteOffset"><span data-ttu-id="85935-238">要减去的偏移量。</span><span class="sxs-lookup"><span data-stu-id="85935-238">The offset to subtract.</span></span></param>
        <summary><span data-ttu-id="85935-239">从给定引用减去字节偏移量。</span><span class="sxs-lookup"><span data-stu-id="85935-239">Subtracts a byte offset from the given reference.</span></span></summary>
        <returns><span data-ttu-id="85935-240">新引用，用于反映从指针减去的字节偏移量。</span><span class="sxs-lookup"><span data-stu-id="85935-240">A new reference that reflects the subtraction of byte offset from pointer.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Unbox&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static ref T Unbox&lt;T&gt; (object box) where T : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T Unbox&lt;struct .ctor (class System.ValueType) T&gt;(object box) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.Unsafe.Unbox``1(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Unbox(Of T As Structure) (box As Object) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : value class static T % Unbox(System::Object ^ box);" />
      <MemberSignature Language="F#" Value="static member Unbox : obj -&gt; 'T (requires 'T : struct)" Usage="System.Runtime.CompilerServices.Unsafe.Unbox box" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.CompilerServices.Unsafe</AssemblyName>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.6.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue RefType="Ref">
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="box" Type="System.Object" Index="0" FrameworkAlternate="dotnet-plat-ext-3.0;netcore-3.0;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="85935-241">要取消装箱的类型。</span><span class="sxs-lookup"><span data-stu-id="85935-241">The type to be unboxed.</span></span></typeparam>
        <param name="box"><span data-ttu-id="85935-242">要取消装箱的值。</span><span class="sxs-lookup"><span data-stu-id="85935-242">The value to unbox.</span></span></param>
        <summary><span data-ttu-id="85935-243">将 <see langword="mutable ref" /> 返回到装箱值。</span><span class="sxs-lookup"><span data-stu-id="85935-243">Returns a <see langword="mutable ref" /> to a boxed value.</span></span></summary>
        <returns><span data-ttu-id="85935-244"><see langword="mutable ref" /> 到装箱值 <paramref name="box" />。</span><span class="sxs-lookup"><span data-stu-id="85935-244">A <see langword="mutable ref" /> to the boxed value <paramref name="box" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  

<span data-ttu-id="85935-245">`Unbox<T>`方法只是 IL 取消[装箱](xref:System.Reflection.Emit.OpCodes.Unbox)指令的包装器。</span><span class="sxs-lookup"><span data-stu-id="85935-245">The `Unbox<T>` method is simply a wrapper for the IL [unbox](xref:System.Reflection.Emit.OpCodes.Unbox) instruction.</span></span> <span data-ttu-id="85935-246">它可作为性能优化。</span><span class="sxs-lookup"><span data-stu-id="85935-246">It is useful as a performance optimization.</span></span> <span data-ttu-id="85935-247">每当 <xref:System.Object> 需要使用值类型的不同值重复调用的 API 时，可以重复使用同一个 box 对象，而不是每次创建一个新的。</span><span class="sxs-lookup"><span data-stu-id="85935-247">Whenever an API that takes an <xref:System.Object> needs to be called repeatedly with different values of a value type, the same box object can be reused rather than a new one created each time.</span></span>

<span data-ttu-id="85935-248">此 `Unbox<T>` 方法具有一个不由语言编译器强制执行的重要使用约束，这是调用方的责任。</span><span class="sxs-lookup"><span data-stu-id="85935-248">The `Unbox<T>` method has an important usage constraint that is not enforced by language compilers and that is the responsibility of the caller.</span></span> <span data-ttu-id="85935-249">IL `unbox` 指令返回可变性托管指针。</span><span class="sxs-lookup"><span data-stu-id="85935-249">The IL `unbox` instruction returns a controlled-mutability managed pointer.</span></span> <span data-ttu-id="85935-250">由于 .NET 和 .NET 语言编译器不能表示此约束，因此该 `Unbox<T>` 方法返回普通可变 `ref T` 。</span><span class="sxs-lookup"><span data-stu-id="85935-250">Because .NET and .NET language compilers cannot represent this constraint, the `Unbox<T>` method returns a normal mutable `ref T`.</span></span> <span data-ttu-id="85935-251">不过，开发人员 **不得** 改变返回的引用，除非它们确实 `T` 是可变结构类型。</span><span class="sxs-lookup"><span data-stu-id="85935-251">However developers **must not** mutate the returned reference unless they are certain that `T` is a mutable struct type.</span></span> <span data-ttu-id="85935-252">例如，因为数值基元（如） <xref:System.Int32> 不是可变结构类型，所以以下代码不支持：</span><span class="sxs-lookup"><span data-stu-id="85935-252">For example, because the numeric primitives such as <xref:System.Int32> are not mutable struct types, the following code is not suppported:</span></span>

```csharp
Unsafe.Unbox<int>(obj) = 30;
```

<span data-ttu-id="85935-253">相反，类型（如） <xref:System.Drawing.Point?<displayProperty=nameWithType> 是具有公共属性 setter 的可变结构，因此支持以下代码：</span><span class="sxs-lookup"><span data-stu-id="85935-253">In contrast, a type such as <xref:System.Drawing.Point?<displayProperty=nameWithType> is a mutable struct with public property setters, so the following code is supported:</span></span>

```csharp
Unsafe.Unbox<System.Drawing.Point>(obj).X = 50;
```

<span data-ttu-id="85935-254">有关详细信息，请参阅 1.8.1.2.2 ( "muttability 托管指针" ) 和 4.32 ( "取消装箱值类型"，将装箱的值类型转换为其原始格式 ") 在[ECMA-335：公共语言基础结构 (CLI) ](https://www.ecma-international.org/publications-and-standards/standards/ecma-335/)</span><span class="sxs-lookup"><span data-stu-id="85935-254">For more information, see sections III.1.8.1.2.2 ("Controlled-muttability managed pointers") and III.4.32 ("unbox -- convert boxed value type to its raw form") in [ECMA-335: Common Language Infrastructure (CLI)](https://www.ecma-international.org/publications-and-standards/standards/ecma-335/).</span></span>

         ]]></format>
        </remarks>
        <exception cref="T:System.NullReferenceException"><span data-ttu-id="85935-255"><paramref name="box" /> 为 <see langword="null" />，<typeparamref name="T" /> 是不可为 null 的值类型。</span><span class="sxs-lookup"><span data-stu-id="85935-255"><paramref name="box" /> is <see langword="null" />, and <typeparamref name="T" /> is a non-nullable value type.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="85935-256"><paramref name="box" /> 不是装箱的值类型。</span><span class="sxs-lookup"><span data-stu-id="85935-256"><paramref name="box" /> is not a boxed value type.</span></span>
         
<span data-ttu-id="85935-257">- 或 -</span><span class="sxs-lookup"><span data-stu-id="85935-257">-or-</span></span>

<span data-ttu-id="85935-258"><paramref name="box" /> 不是装箱的 <typeparamref name="T" />。</span><span class="sxs-lookup"><span data-stu-id="85935-258"><paramref name="box" /> is not a boxed <typeparamref name="T" />.</span></span></exception>
        <exception cref="T:System.TypeLoadException"><span data-ttu-id="85935-259">找不到 <typeparamref name="T" />。</span><span class="sxs-lookup"><span data-stu-id="85935-259"><typeparamref name="T" /> cannot be found.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Write&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static void Write&lt;T&gt; (void* destination, T value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Write&lt;T&gt;(void* destination, !!T value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.Unsafe.Write``1(System.Void*,``0)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static void Write(void* destination, T value);" />
      <MemberSignature Language="F#" Value="static member Write : nativeptr&lt;unit&gt; * 'T -&gt; unit" Usage="System.Runtime.CompilerServices.Unsafe.Write (destination, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.CompilerServices.Unsafe</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.1</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.6.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="destination" Type="System.Void*" />
        <Parameter Name="value" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="85935-260">要写入的值的类型。</span><span class="sxs-lookup"><span data-stu-id="85935-260">The type of value to write.</span></span></typeparam>
        <param name="destination"><span data-ttu-id="85935-261">要写入到其中的位置。</span><span class="sxs-lookup"><span data-stu-id="85935-261">The location to write to.</span></span></param>
        <param name="value"><span data-ttu-id="85935-262">要写入的值。</span><span class="sxs-lookup"><span data-stu-id="85935-262">The value to write.</span></span></param>
        <summary><span data-ttu-id="85935-263">将 <typeparamref name="T" /> 类型的值写入给定位置。</span><span class="sxs-lookup"><span data-stu-id="85935-263">Writes a value of type <typeparamref name="T" /> to the given location.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteUnaligned&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static void WriteUnaligned&lt;T&gt; (ref byte destination, T value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteUnaligned&lt;T&gt;(unsigned int8&amp; destination, !!T value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.Unsafe.WriteUnaligned``1(System.Byte@,``0)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteUnaligned(Of T) (ByRef destination As Byte, value As T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static void WriteUnaligned(System::Byte % destination, T value);" />
      <MemberSignature Language="F#" Value="static member WriteUnaligned : byte * 'T -&gt; unit" Usage="System.Runtime.CompilerServices.Unsafe.WriteUnaligned (destination, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.CompilerServices.Unsafe</AssemblyName>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.1</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.6.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="destination" Type="System.Byte" RefType="ref" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;net-5.0;netcore-3.0;netcore-3.1" />
        <Parameter Name="value" Type="T" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;net-5.0;netcore-3.0;netcore-3.1" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="85935-264">要写入的值的类型。</span><span class="sxs-lookup"><span data-stu-id="85935-264">The type of value to write.</span></span></typeparam>
        <param name="destination"><span data-ttu-id="85935-265">要写入到其中的位置。</span><span class="sxs-lookup"><span data-stu-id="85935-265">The location to write to.</span></span></param>
        <param name="value"><span data-ttu-id="85935-266">要写入的值。</span><span class="sxs-lookup"><span data-stu-id="85935-266">The value to write.</span></span></param>
        <summary><span data-ttu-id="85935-267">将 <typeparamref name="T" /> 类型的值写入给定位置，无需假设地址的结构依赖对齐方式。</span><span class="sxs-lookup"><span data-stu-id="85935-267">Writes a value of type <typeparamref name="T" /> to the given location without assuming architecture dependent alignment of the addresses.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteUnaligned&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static void WriteUnaligned&lt;T&gt; (void* destination, T value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteUnaligned&lt;T&gt;(void* destination, !!T value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.Unsafe.WriteUnaligned``1(System.Void*,``0)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static void WriteUnaligned(void* destination, T value);" />
      <MemberSignature Language="F#" Value="static member WriteUnaligned : nativeptr&lt;unit&gt; * 'T -&gt; unit" Usage="System.Runtime.CompilerServices.Unsafe.WriteUnaligned (destination, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.CompilerServices.Unsafe</AssemblyName>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.1</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.6.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="destination" Type="System.Void*" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;net-5.0;netcore-3.0;netcore-3.1" />
        <Parameter Name="value" Type="T" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;net-5.0;netcore-3.0;netcore-3.1" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="85935-268">要写入的值的类型。</span><span class="sxs-lookup"><span data-stu-id="85935-268">The type of value to write.</span></span></typeparam>
        <param name="destination"><span data-ttu-id="85935-269">要写入到其中的位置。</span><span class="sxs-lookup"><span data-stu-id="85935-269">The location to write to.</span></span></param>
        <param name="value"><span data-ttu-id="85935-270">要写入的值。</span><span class="sxs-lookup"><span data-stu-id="85935-270">The value to write.</span></span></param>
        <summary><span data-ttu-id="85935-271">将 <typeparamref name="T" /> 类型的值写入给定位置，无需假设地址的结构依赖对齐方式。</span><span class="sxs-lookup"><span data-stu-id="85935-271">Writes a value of type <typeparamref name="T" /> to the given location without assuming architecture dependent alignment of the addresses.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
