<Type Name="RuntimeCompatibilityAttribute" FullName="System.Runtime.CompilerServices.RuntimeCompatibilityAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="ebaddcfe931aa23868bf7cd14d04044bd86a5a07" /><Meta Name="ms.sourcegitcommit" Value="b6b9d5f3f9c7eb43f14a8a1a68d044603cb8ed73" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="05/18/2020" /><Meta Name="ms.locfileid" Value="83527442" /></Metadata><TypeSignature Language="C#" Value="public sealed class RuntimeCompatibilityAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit RuntimeCompatibilityAttribute extends System.Attribute" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.CompilerServices.RuntimeCompatibilityAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class RuntimeCompatibilityAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class RuntimeCompatibilityAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type RuntimeCompatibilityAttribute = class&#xA;    inherit Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit RuntimeCompatibilityAttribute extends System.Attribute" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="mscorlib" FromVersion="4.0.0.0" To="System.Runtime" ToVersion="0.0.0.0" FrameworkAlternate="dotnet-uwp-10.0" />
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.Runtime" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Assembly, AllowMultiple=false, Inherited=false)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="f5cff-101">指定是否使用 <see cref="T:System.Exception" /> 对象包装不是从 <see cref="T:System.Runtime.CompilerServices.RuntimeWrappedException" /> 类派生的异常。</span><span class="sxs-lookup"><span data-stu-id="f5cff-101">Specifies whether to wrap exceptions that do not derive from the <see cref="T:System.Exception" /> class with a <see cref="T:System.Runtime.CompilerServices.RuntimeWrappedException" /> object.</span></span> <span data-ttu-id="f5cff-102">无法继承此类。</span><span class="sxs-lookup"><span data-stu-id="f5cff-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f5cff-103">某些语言（如C++）允许你引发任何类型的异常。</span><span class="sxs-lookup"><span data-stu-id="f5cff-103">Some languages, such as C++, allow you to throw exceptions of any type.</span></span>  <span data-ttu-id="f5cff-104">其他语言（如 Microsoft C#和 Visual Basic）要求每个引发的异常都从 <xref:System.Exception> 类派生。</span><span class="sxs-lookup"><span data-stu-id="f5cff-104">Other languages, such as Microsoft C# and Visual Basic, require that every thrown exception be derived from the <xref:System.Exception> class.</span></span>  <span data-ttu-id="f5cff-105">为了保持语言之间的兼容性，公共语言运行时（CLR）将不是派生自 <xref:System.Runtime.CompilerServices.RuntimeWrappedException> 对象中 <xref:System.Exception> 的对象包装。</span><span class="sxs-lookup"><span data-stu-id="f5cff-105">To maintain compatibility between languages, the common language runtime (CLR) wraps objects that do not derive from <xref:System.Exception> in a <xref:System.Runtime.CompilerServices.RuntimeWrappedException> object.</span></span>  
  
 <span data-ttu-id="f5cff-106">您可以使用 <xref:System.Runtime.CompilerServices.RuntimeCompatibilityAttribute> 类指定异常是否应显示在程序集的 catch 块内部和异常筛选器中。</span><span class="sxs-lookup"><span data-stu-id="f5cff-106">You can use the <xref:System.Runtime.CompilerServices.RuntimeCompatibilityAttribute> class to specify whether exceptions should appear wrapped inside catch blocks and exception filters for an assembly.</span></span>  <span data-ttu-id="f5cff-107">许多语言编译器（包括 Microsoft C#和 Visual Basic 编译器）默认应用此属性以指定换行行为。</span><span class="sxs-lookup"><span data-stu-id="f5cff-107">Many language compilers, including the Microsoft C# and Visual Basic compilers, apply this attribute by default to specify the wrapping behavior.</span></span>  
  
 <span data-ttu-id="f5cff-108">请注意，即使你使用 <xref:System.Runtime.CompilerServices.RuntimeCompatibilityAttribute> 类指定你不希望包装异常，运行时仍会对异常进行包装。</span><span class="sxs-lookup"><span data-stu-id="f5cff-108">Note that the runtime still wraps exceptions even if you use the <xref:System.Runtime.CompilerServices.RuntimeCompatibilityAttribute> class to specify that you do not want them wrapped.</span></span>  <span data-ttu-id="f5cff-109">在这种情况下，只会在 catch 块或异常筛选器内解包异常。</span><span class="sxs-lookup"><span data-stu-id="f5cff-109">In this case, exceptions are unwrapped only inside catch blocks or exception filters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f5cff-110">下面的代码示例演示如何将 <xref:System.Runtime.CompilerServices.RuntimeCompatibilityAttribute> 类应用于引发 <xref:System.String> 对象作为中C++的异常的程序集，并使用 <xref:System.Runtime.CompilerServices.RuntimeWrappedException> 对象捕获该对象。</span><span class="sxs-lookup"><span data-stu-id="f5cff-110">The following code example demonstrates how to apply the <xref:System.Runtime.CompilerServices.RuntimeCompatibilityAttribute> class to an assembly that throws a <xref:System.String> object as an exception in C++ and catches it using a <xref:System.Runtime.CompilerServices.RuntimeWrappedException> object.</span></span>  
  
 [!code-cpp[System.Runtime.CompilerServices.RuntimeWrappedException#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Runtime.CompilerServices.RuntimeWrappedException/cpp/sample.cpp#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RuntimeCompatibilityAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.RuntimeCompatibilityAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RuntimeCompatibilityAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f5cff-111">初始化 <see cref="T:System.Runtime.CompilerServices.RuntimeCompatibilityAttribute" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="f5cff-111">Initializes a new instance of the <see cref="T:System.Runtime.CompilerServices.RuntimeCompatibilityAttribute" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f5cff-112">下面的代码示例将 <xref:System.Runtime.CompilerServices.RuntimeCompatibilityAttribute> 特性应用于程序集，以禁用异常包装。</span><span class="sxs-lookup"><span data-stu-id="f5cff-112">The following code example applies the <xref:System.Runtime.CompilerServices.RuntimeCompatibilityAttribute> attribute to an assembly to disable exception wrapping.</span></span>  
  
 [!code-cpp[System.Runtime.CompilerServices.RuntimeCompatibilityAttribute#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Runtime.CompilerServices.RuntimeCompatibilityAttribute/cpp/sample.cpp#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WrapNonExceptionThrows">
      <MemberSignature Language="C#" Value="public bool WrapNonExceptionThrows { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool WrapNonExceptionThrows" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.CompilerServices.RuntimeCompatibilityAttribute.WrapNonExceptionThrows" />
      <MemberSignature Language="VB.NET" Value="Public Property WrapNonExceptionThrows As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool WrapNonExceptionThrows { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.WrapNonExceptionThrows : bool with get, set" Usage="System.Runtime.CompilerServices.RuntimeCompatibilityAttribute.WrapNonExceptionThrows" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f5cff-113">获取或设置一个值，该值指示是否使用 <see cref="T:System.Exception" /> 对象包装不是从 <see cref="T:System.Runtime.CompilerServices.RuntimeWrappedException" /> 类派生的异常。</span><span class="sxs-lookup"><span data-stu-id="f5cff-113">Gets or sets a value that indicates whether to wrap exceptions that do not derive from the <see cref="T:System.Exception" /> class with a <see cref="T:System.Runtime.CompilerServices.RuntimeWrappedException" /> object.</span></span></summary>
        <value><span data-ttu-id="f5cff-114">如果不是从 <see cref="T:System.Exception" /> 类派生的异常应包装在 <see cref="T:System.Runtime.CompilerServices.RuntimeWrappedException" /> 对象中，则返回 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="f5cff-114"><see langword="true" /> if exceptions that do not derive from the <see cref="T:System.Exception" /> class should appear wrapped with a <see cref="T:System.Runtime.CompilerServices.RuntimeWrappedException" /> object; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f5cff-115">下面的代码示例将 <xref:System.Runtime.CompilerServices.RuntimeCompatibilityAttribute> 特性应用于程序集，以禁用异常包装。</span><span class="sxs-lookup"><span data-stu-id="f5cff-115">The following code example applies the <xref:System.Runtime.CompilerServices.RuntimeCompatibilityAttribute> attribute to an assembly to disable exception wrapping.</span></span>  
  
 [!code-cpp[System.Runtime.CompilerServices.RuntimeCompatibilityAttribute#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Runtime.CompilerServices.RuntimeCompatibilityAttribute/cpp/sample.cpp#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
