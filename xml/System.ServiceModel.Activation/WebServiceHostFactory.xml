<Type Name="WebServiceHostFactory" FullName="System.ServiceModel.Activation.WebServiceHostFactory">
  <Metadata><Meta Name="ms.openlocfilehash" Value="68e65f40f2a565ef33a53ab34f3f90c9b5563cea" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="70443183" /></Metadata><TypeSignature Language="C#" Value="public class WebServiceHostFactory : System.ServiceModel.Activation.ServiceHostFactory" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WebServiceHostFactory extends System.ServiceModel.Activation.ServiceHostFactory" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Activation.WebServiceHostFactory" />
  <TypeSignature Language="VB.NET" Value="Public Class WebServiceHostFactory&#xA;Inherits ServiceHostFactory" />
  <TypeSignature Language="C++ CLI" Value="public ref class WebServiceHostFactory : System::ServiceModel::Activation::ServiceHostFactory" />
  <TypeSignature Language="F#" Value="type WebServiceHostFactory = class&#xA;    inherit ServiceHostFactory" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Web</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ServiceModel.Activation.ServiceHostFactory</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>一个工厂，在可动态创建主机实例以响应传入消息的托管宿主环境中提供 <see cref="T:System.ServiceModel.Web.WebServiceHost" /> 的实例。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 支持动态激活的托管宿主环境包括 Internet 信息服务 (IIS) 和 Windows 进程激活服务 (WAS)。  
  
 如果已实现 <xref:System.ServiceModel.Web.WebServiceHost> 的自定义派生，还应考虑实现派生自 <xref:System.ServiceModel.Activation.WebServiceHostFactory> 类的工厂。  
  
   
  
## Examples  
 下面的示例演示如何从 <xref:System.ServiceModel.Activation.WebServiceHostFactory> 派生类。  
  
  
  
 必须在 .SVC 文件中指定派生的 Web 服务主机工厂，才能使用此工厂。 下面的示例介绍 .svc 文件中所使用的语法。  
  
```  
<%@ServiceHost language=c# Service="Microsoft.Samples.MyWCFService" Factory="Microsoft.Samples.MyWebServiceHostFactory" %>  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebServiceHostFactory ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Activation.WebServiceHostFactory.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WebServiceHostFactory();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.ServiceModel.Activation.WebServiceHostFactory" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 不直接调用此方法。 可在动态激活服务时调用此方法。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateServiceHost">
      <MemberSignature Language="C#" Value="protected override System.ServiceModel.ServiceHost CreateServiceHost (Type serviceType, Uri[] baseAddresses);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.ServiceModel.ServiceHost CreateServiceHost(class System.Type serviceType, class System.Uri[] baseAddresses) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Activation.WebServiceHostFactory.CreateServiceHost(System.Type,System.Uri[])" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateServiceHost (serviceType As Type, baseAddresses As Uri()) As ServiceHost" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::ServiceModel::ServiceHost ^ CreateServiceHost(Type ^ serviceType, cli::array &lt;Uri ^&gt; ^ baseAddresses);" />
      <MemberSignature Language="F#" Value="override this.CreateServiceHost : Type * Uri[] -&gt; System.ServiceModel.ServiceHost" Usage="webServiceHostFactory.CreateServiceHost (serviceType, baseAddresses)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.ServiceHost</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceType" Type="System.Type" />
        <Parameter Name="baseAddresses" Type="System.Uri[]" />
      </Parameters>
      <Docs>
        <param name="serviceType">要创建的服务主机的类型。</param>
        <param name="baseAddresses">该服务的基址的数组。</param>
        <summary>使用指定基址创建指定的 <see cref="T:System.ServiceModel.Web.WebServiceHost" /> 派生类的实例。</summary>
        <returns><see cref="T:System.ServiceModel.ServiceHost" /> 派生类的实例。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 重写此方法以创建所需的服务主机类型，并执行任何所需的处理。  
  
   
  
## Examples  
 下面的示例介绍此方法的基本实现。  
  
  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
