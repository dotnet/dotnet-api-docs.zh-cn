<Type Name="LoadOptions" FullName="System.Xml.Linq.LoadOptions">
  <Metadata><Meta Name="ms.openlocfilehash" Value="9095a0e47740f5b82af6584e29baab3287dd722c" /><Meta Name="ms.sourcegitcommit" Value="13a6cb6fba7e05947f15d8d6cc802703ae9c21d5" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/18/2020" /><Meta Name="ms.locfileid" Value="90799289" /></Metadata><TypeSignature Language="C#" Value="public enum LoadOptions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed LoadOptions extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Linq.LoadOptions" />
  <TypeSignature Language="VB.NET" Value="Public Enum LoadOptions" />
  <TypeSignature Language="C++ CLI" Value="public enum class LoadOptions" />
  <TypeSignature Language="F#" Value="type LoadOptions = " />
  <AssemblyInfo>
    <AssemblyName>System.Xml.XDocument</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.Linq</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="System.Xml.Linq" FromVersion="4.0.0.0" To="System.Xml.XDocument" ToVersion="0.0.0.0" FrameworkAlternate="dotnet-uwp-10.0" />
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.Xml.XDocument" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName Language="C#">[System.Flags]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Flags&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="41681-101">指定分析 XML 时的加载选项。</span><span class="sxs-lookup"><span data-stu-id="41681-101">Specifies load options when parsing XML.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41681-102">如果在加载时保留空白，则 XML 树中所有无意义的空白都将按原样具体化在 XML 树中。</span><span class="sxs-lookup"><span data-stu-id="41681-102">If you preserve white space when loading, all insignificant white space in the XML tree is materialized in the XML tree as is.</span></span> <span data-ttu-id="41681-103">如果不保留空白，则放弃所有无意义的空白。</span><span class="sxs-lookup"><span data-stu-id="41681-103">If you do not preserve white space, then all insignificant white space is discarded.</span></span>  
  
 <span data-ttu-id="41681-104">如果设置了 SetBaseUri 和 SetLineInfo 标志，则会对性能产生负面影响。</span><span class="sxs-lookup"><span data-stu-id="41681-104">There is a performance penalty if you set the SetBaseUri and the SetLineInfo flags.</span></span>  
  
 <span data-ttu-id="41681-105">在加载 XML 文档后，基本 URI 和行信息立即准确无误。</span><span class="sxs-lookup"><span data-stu-id="41681-105">The base URI and the line information are accurate immediately after loading the XML document.</span></span> <span data-ttu-id="41681-106">如果在加载文档后修改 XML 树，则基本 URI 和行信息可能会变得毫无意义。</span><span class="sxs-lookup"><span data-stu-id="41681-106">If you modify the XML tree after loading the document, the base URI and line information may become meaningless.</span></span>  
  
 <span data-ttu-id="41681-107">如果基础没有 <xref:System.Xml.XmlReader> 基 URI 或行信息，则设置 SetBaseUri 和 SetLineInfo 标志将不起作用。</span><span class="sxs-lookup"><span data-stu-id="41681-107">If the underlying <xref:System.Xml.XmlReader> does not have base URI or line information, setting the SetBaseUri and the SetLineInfo flags will have no effect.</span></span>  
  
 <span data-ttu-id="41681-108">此类型使你能够控制在加载或分析时 LINQ to XML 处理空白的方式。</span><span class="sxs-lookup"><span data-stu-id="41681-108">This type allows you to control how LINQ to XML handles white space when loading or parsing.</span></span> <span data-ttu-id="41681-109">有关详细信息，请参阅 [在加载或分析 XML 时保留空白](/dotnet/standard/linq/preserve-white-space-loading-parsing-xml) ，并 [在序列化时保留空白区域](/dotnet/standard/linq/preserve-white-space-serializing)。</span><span class="sxs-lookup"><span data-stu-id="41681-109">For more information, see [Preserve white space while loading or parsing XML](/dotnet/standard/linq/preserve-white-space-loading-parsing-xml) and [Preserve white space while serializing](/dotnet/standard/linq/preserve-white-space-serializing).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="41681-110">此示例从文件中加载一个小型 XML 树，并将选项设置为设置基 URI 和保留行信息。</span><span class="sxs-lookup"><span data-stu-id="41681-110">This example loads a small XML tree from a file, setting the options to set base URI and retain line information.</span></span> <span data-ttu-id="41681-111">然后，它添加另一个不包含行信息的元素。</span><span class="sxs-lookup"><span data-stu-id="41681-111">It then adds another element that does not have line information.</span></span> <span data-ttu-id="41681-112">然后打印树中每个元素的行信息。</span><span class="sxs-lookup"><span data-stu-id="41681-112">It then prints the line information for each element in the tree.</span></span>  
  
```csharp  
string markup = @"<Root>  
    <Child1 />  
    <Child2 />  
    <Child4 />  
</Root>";  
  
File.WriteAllText("Test.xml", markup);  
  
XElement po = XElement.Load("Test.xml",  
    LoadOptions.SetBaseUri | LoadOptions.SetLineInfo);  
  
// add a node to the tree.  
// the newly added node will not have line information.  
po.Element("Child2").AddAfterSelf(new XElement("Child3"));  
  
string[] splitUri = po.BaseUri.Split('/');  
Console.WriteLine("BaseUri: {0}", splitUri[splitUri.Length - 1]);  
Console.WriteLine();  
Console.WriteLine("{0}{1}{2}",  
    "Element Name".PadRight(20),  
    "Line".PadRight(5),  
    "Position");  
Console.WriteLine("{0}{1}{2}",  
    "------------".PadRight(20),  
    "----".PadRight(5),  
    "--------");  
foreach (XElement e in po.DescendantsAndSelf())  
    Console.WriteLine("{0}{1}{2}",  
        ("".PadRight(e.Ancestors().Count() * 2) + e.Name).PadRight(20),  
        ((IXmlLineInfo)e).HasLineInfo() ?  
            ((IXmlLineInfo)e).LineNumber.ToString().PadRight(5) :  
            "",  
        ((IXmlLineInfo)e).HasLineInfo() ?  
            ((IXmlLineInfo)e).LinePosition.ToString() :  
            "No Line Information");  
```  
  
```vb  
Dim markup As String = _  
    "<Root>" + Environment.NewLine & _  
    "    <Child1 />" + Environment.NewLine & _  
    "    <Child2 />" + Environment.NewLine & _  
    "    <Child4 />" + Environment.NewLine & _  
    "</Root>"  
  
File.WriteAllText("Test.xml", markup)  
  
Dim po As XElement = XElement.Load("Test.xml", LoadOptions.SetBaseUri Or LoadOptions.SetLineInfo)  
  
' add a node to the tree.  
' the newly added node will not have line information.  
po.Element("Child2").AddAfterSelf(New XElement("Child3"))  
  
Dim splitUri() As String = po.BaseUri.Split("/"c)  
Console.WriteLine("BaseUri: {0}", splitUri(splitUri.Length - 1))  
Console.WriteLine()  
Console.WriteLine("{0}{1}{2}", _  
    "Element Name".PadRight(20), _  
    "Line".PadRight(5), _  
    "Position")  
Console.WriteLine("{0}{1}{2}", _  
    "------------".PadRight(20), _  
    "----".PadRight(5), _  
    "--------")  
For Each e As XElement In po.DescendantsAndSelf()  
    Console.WriteLine("{0}{1}{2}", _  
        ("".PadRight(e.Ancestors().Count() * 2) & e.Name.ToString).PadRight(20), _  
        IIf(DirectCast(e, IXmlLineInfo).HasLineInfo(), _  
            DirectCast(e, IXmlLineInfo).LineNumber.ToString().PadRight(5), _  
            ""), _  
        IIf(DirectCast(e, IXmlLineInfo).HasLineInfo(), _  
            DirectCast(e, IXmlLineInfo).LinePosition.ToString(), _  
            "No Line Information"))  
Next  
```  
  
 <span data-ttu-id="41681-113">该示例产生下面的输出：</span><span class="sxs-lookup"><span data-stu-id="41681-113">This example produces the following output:</span></span>  
  
```  
BaseUri: Test.xml  
  
Element Name        Line Position  
------------        ---- --------  
Root                1    2  
  Child1            2    6  
  Child2            3    6  
  Child3            No Line Information  
  Child4            4    6  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Xml.Linq.SaveOptions" />
    <related type="Article" href="/dotnet/standard/linq/linq-xml-overview"><span data-ttu-id="41681-114">LINQ to XML 概述</span><span class="sxs-lookup"><span data-stu-id="41681-114">LINQ to XML overview</span></span></related>
    <related type="Article" href="/dotnet/standard/linq/program-nodes"><span data-ttu-id="41681-115">通过节点进行编程</span><span class="sxs-lookup"><span data-stu-id="41681-115">Programming with nodes</span></span></related>
  </Docs>
  <Members>
    <Member MemberName="None">
      <MemberSignature Language="C#" Value="None" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Xml.Linq.LoadOptions None = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.Xml.Linq.LoadOptions.None" />
      <MemberSignature Language="VB.NET" Value="None" />
      <MemberSignature Language="C++ CLI" Value="None" />
      <MemberSignature Language="F#" Value="None = 0" Usage="System.Xml.Linq.LoadOptions.None" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Linq.LoadOptions</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary><span data-ttu-id="41681-116">不保留无关紧要的空白，也不加载基 URI 和行信息。</span><span class="sxs-lookup"><span data-stu-id="41681-116">Does not preserve insignificant white space or load base URI and line information.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="PreserveWhitespace">
      <MemberSignature Language="C#" Value="PreserveWhitespace" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Xml.Linq.LoadOptions PreserveWhitespace = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Xml.Linq.LoadOptions.PreserveWhitespace" />
      <MemberSignature Language="VB.NET" Value="PreserveWhitespace" />
      <MemberSignature Language="C++ CLI" Value="PreserveWhitespace" />
      <MemberSignature Language="F#" Value="PreserveWhitespace = 1" Usage="System.Xml.Linq.LoadOptions.PreserveWhitespace" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Linq.LoadOptions</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary><span data-ttu-id="41681-117">分析时保留无关紧要的空白。</span><span class="sxs-lookup"><span data-stu-id="41681-117">Preserves insignificant white space while parsing.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="SetBaseUri">
      <MemberSignature Language="C#" Value="SetBaseUri" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Xml.Linq.LoadOptions SetBaseUri = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.Xml.Linq.LoadOptions.SetBaseUri" />
      <MemberSignature Language="VB.NET" Value="SetBaseUri" />
      <MemberSignature Language="C++ CLI" Value="SetBaseUri" />
      <MemberSignature Language="F#" Value="SetBaseUri = 2" Usage="System.Xml.Linq.LoadOptions.SetBaseUri" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Linq.LoadOptions</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary><span data-ttu-id="41681-118">从 <see cref="T:System.Xml.XmlReader" /> 请求基 URI 信息，并通过 <see cref="P:System.Xml.Linq.XObject.BaseUri" /> 属性使此信息可用。</span><span class="sxs-lookup"><span data-stu-id="41681-118">Requests the base URI information from the <see cref="T:System.Xml.XmlReader" />, and makes it available via the <see cref="P:System.Xml.Linq.XObject.BaseUri" /> property.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="SetLineInfo">
      <MemberSignature Language="C#" Value="SetLineInfo" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Xml.Linq.LoadOptions SetLineInfo = int32(4)" />
      <MemberSignature Language="DocId" Value="F:System.Xml.Linq.LoadOptions.SetLineInfo" />
      <MemberSignature Language="VB.NET" Value="SetLineInfo" />
      <MemberSignature Language="C++ CLI" Value="SetLineInfo" />
      <MemberSignature Language="F#" Value="SetLineInfo = 4" Usage="System.Xml.Linq.LoadOptions.SetLineInfo" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Linq.LoadOptions</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary><span data-ttu-id="41681-119">从 <see cref="T:System.Xml.XmlReader" /> 请求行信息并通过 <see cref="T:System.Xml.Linq.XObject" /> 上的属性使此信息可用。</span><span class="sxs-lookup"><span data-stu-id="41681-119">Requests the line information from the <see cref="T:System.Xml.XmlReader" /> and makes it available via properties on <see cref="T:System.Xml.Linq.XObject" />.</span></span></summary>
      </Docs>
    </Member>
  </Members>
</Type>
