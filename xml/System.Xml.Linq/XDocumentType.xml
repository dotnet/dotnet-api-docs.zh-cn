<Type Name="XDocumentType" FullName="System.Xml.Linq.XDocumentType">
  <Metadata><Meta Name="ms.openlocfilehash" Value="296cac3f796a2ce74ebd4966fd44d415d60bc8b9" /><Meta Name="ms.sourcegitcommit" Value="5484acfd78fc29edb48fc1ca6925046c4672954a" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/16/2020" /><Meta Name="ms.locfileid" Value="90704449" /></Metadata><TypeSignature Language="C#" Value="public class XDocumentType : System.Xml.Linq.XNode" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XDocumentType extends System.Xml.Linq.XNode" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Linq.XDocumentType" />
  <TypeSignature Language="VB.NET" Value="Public Class XDocumentType&#xA;Inherits XNode" />
  <TypeSignature Language="C++ CLI" Value="public ref class XDocumentType : System::Xml::Linq::XNode" />
  <TypeSignature Language="F#" Value="type XDocumentType = class&#xA;    inherit XNode" />
  <AssemblyInfo>
    <AssemblyName>System.Xml.XDocument</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.Linq</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="System.Xml.Linq" FromVersion="4.0.0.0" To="System.Xml.XDocument" ToVersion="0.0.0.0" FrameworkAlternate="dotnet-uwp-10.0" />
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.Xml.XDocument" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Xml.Linq.XNode</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="fc7c3-101">表示 XML 文档类型定义 (DTD)。</span><span class="sxs-lookup"><span data-stu-id="fc7c3-101">Represents an XML Document Type Definition (DTD).</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc7c3-102">在 XML 中 (DTD) 的数据类型定义是一种执行以下操作的方法：</span><span class="sxs-lookup"><span data-stu-id="fc7c3-102">Data Type Definitions (DTD) in XML are a way to do the following:</span></span>  
  
-   <span data-ttu-id="fc7c3-103">在有限范围内验证 XML 树。</span><span class="sxs-lookup"><span data-stu-id="fc7c3-103">Validate XML trees to a limited extent.</span></span>  
  
-   <span data-ttu-id="fc7c3-104">展开 "实体"，它是一种文本替换形式。</span><span class="sxs-lookup"><span data-stu-id="fc7c3-104">Expand entities, which is a form of text replacement.</span></span>  
  
-   <span data-ttu-id="fc7c3-105">提供默认属性。</span><span class="sxs-lookup"><span data-stu-id="fc7c3-105">Supply default attributes.</span></span>  
  
 <span data-ttu-id="fc7c3-106">此类表示 DTD 的 XML 概念。</span><span class="sxs-lookup"><span data-stu-id="fc7c3-106">This class represents the XML concept of a DTD.</span></span>  
  
 <span data-ttu-id="fc7c3-107">中的 DTD 支持 [!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)] 是有限的。</span><span class="sxs-lookup"><span data-stu-id="fc7c3-107">DTD support in [!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)] is limited.</span></span>  
  
 [!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)] <span data-ttu-id="fc7c3-108">默认情况下将展开内部实体，但它将不解析外部实体引用，除非 <xref:System.Xml.XmlReader> 使用关联的 <xref:System.Xml.XmlResolver> 来加载 XML 树。</span><span class="sxs-lookup"><span data-stu-id="fc7c3-108">will expand internal entities by default, but it will not resolve external entity references unless an <xref:System.Xml.XmlReader> with an associated <xref:System.Xml.XmlResolver> is used to load the XML tree.</span></span>  
  
 [!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)] <span data-ttu-id="fc7c3-109">不会对照 DTD 验证文档，但你可以根据需要使用验证 <xref:System.Xml.XmlReader> 来执行 dtd 验证。</span><span class="sxs-lookup"><span data-stu-id="fc7c3-109">will not validate a document against a DTD, but you can use a validating <xref:System.Xml.XmlReader> to perform DTD validation if necessary.</span></span>  
  
 <span data-ttu-id="fc7c3-110">若要 [!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)] 针对 XML 架构验证树，请使用 <xref:System.Xml.Schema.Extensions.Validate%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="fc7c3-110">To validate an [!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)] tree against an XML schema, use the <xref:System.Xml.Schema.Extensions.Validate%2A> method.</span></span>  
  
 <span data-ttu-id="fc7c3-111">当文档包含 DTD 中定义的实体引用时，将在创建 XML 树时展开这些引用。</span><span class="sxs-lookup"><span data-stu-id="fc7c3-111">When a document contains entity references that are defined in a DTD, the references are expanded upon creation of the XML tree.</span></span> <span data-ttu-id="fc7c3-112">但是，在序列化或保存 XML 树时，会保留扩展实体的内容;实体引用不是。</span><span class="sxs-lookup"><span data-stu-id="fc7c3-112">However, when you serialize or save the XML tree, the content of the expanded entities is preserved; the entity references are not.</span></span>  
  
 <span data-ttu-id="fc7c3-113">DTD 中的默认属性将具体化为 XML 树中的常规属性。</span><span class="sxs-lookup"><span data-stu-id="fc7c3-113">Default attributes from the DTD will be materialized as regular attributes in the XML tree.</span></span> <span data-ttu-id="fc7c3-114">在从 DTD 中具体化默认属性后，无法确定该属性是否为 DTD 中的默认属性。</span><span class="sxs-lookup"><span data-stu-id="fc7c3-114">After a default attribute from the DTD is materialized, there is no way to determine that the attribute was a default attribute from the DTD.</span></span>  
  
 <span data-ttu-id="fc7c3-115">您可以使用包含内部 DTD 的 XML 文档填充 XML 树。</span><span class="sxs-lookup"><span data-stu-id="fc7c3-115">You can populate an XML tree with an XML document that contains an internal DTD.</span></span> <span data-ttu-id="fc7c3-116">然后，XML 树将包含一个 <xref:System.Xml.Linq.XDocument.DocumentType%2A> 节点。</span><span class="sxs-lookup"><span data-stu-id="fc7c3-116">The XML tree will then contain a <xref:System.Xml.Linq.XDocument.DocumentType%2A> node.</span></span> <span data-ttu-id="fc7c3-117">序列化或保存树时，内部 DTD 也将作为文档的一部分进行保存。</span><span class="sxs-lookup"><span data-stu-id="fc7c3-117">When you serialize or save the tree, the internal DTD will also be saved as part of the document.</span></span>  
  
 ]]></format>
    </remarks>
    <related type="Article" href="/dotnet/standard/linq/linq-xml-overview"><span data-ttu-id="fc7c3-118">LINQ to XML 概述</span><span class="sxs-lookup"><span data-stu-id="fc7c3-118">LINQ to XML overview</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="fc7c3-119">初始化 <see cref="T:System.Xml.Linq.XDocumentType" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="fc7c3-119">Initializes a new instance of the <see cref="T:System.Xml.Linq.XDocumentType" /> class.</span></span></summary>
        <related type="Article" href="/dotnet/standard/linq/linq-xml-overview"><span data-ttu-id="fc7c3-120">LINQ to XML 概述</span><span class="sxs-lookup"><span data-stu-id="fc7c3-120">LINQ to XML overview</span></span></related>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XDocumentType (System.Xml.Linq.XDocumentType other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.Linq.XDocumentType other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Linq.XDocumentType.#ctor(System.Xml.Linq.XDocumentType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (other As XDocumentType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XDocumentType(System::Xml::Linq::XDocumentType ^ other);" />
      <MemberSignature Language="F#" Value="new System.Xml.Linq.XDocumentType : System.Xml.Linq.XDocumentType -&gt; System.Xml.Linq.XDocumentType" Usage="new System.Xml.Linq.XDocumentType other" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="other" Type="System.Xml.Linq.XDocumentType" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="fc7c3-121">要从其复制的 <see cref="T:System.Xml.Linq.XDocumentType" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="fc7c3-121">An <see cref="T:System.Xml.Linq.XDocumentType" /> object to copy from.</span></span></param>
        <summary><span data-ttu-id="fc7c3-122">从其他 <see cref="T:System.Xml.Linq.XDocumentType" /> 对象初始化 <see cref="T:System.Xml.Linq.XDocumentType" /> 类的实例。</span><span class="sxs-lookup"><span data-stu-id="fc7c3-122">Initializes an instance of the <see cref="T:System.Xml.Linq.XDocumentType" /> class from another <see cref="T:System.Xml.Linq.XDocumentType" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc7c3-123">此构造函数主要在创建 XML 树的深层副本时在内部使用。</span><span class="sxs-lookup"><span data-stu-id="fc7c3-123">This constructor is primarily used internally when making a deep copy of an XML tree.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/standard/linq/linq-xml-overview"><span data-ttu-id="fc7c3-124">LINQ to XML 概述</span><span class="sxs-lookup"><span data-stu-id="fc7c3-124">LINQ to XML overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XDocumentType (string name, string publicId, string systemId, string internalSubset);" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, string publicId, string systemId, string internalSubset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Linq.XDocumentType.#ctor(System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, publicId As String, systemId As String, internalSubset As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XDocumentType(System::String ^ name, System::String ^ publicId, System::String ^ systemId, System::String ^ internalSubset);" />
      <MemberSignature Language="F#" Value="new System.Xml.Linq.XDocumentType : string * string * string * string -&gt; System.Xml.Linq.XDocumentType" Usage="new System.Xml.Linq.XDocumentType (name, publicId, systemId, internalSubset)" />
      <MemberSignature Language="C#" Value="public XDocumentType (string name, string? publicId, string? systemId, string internalSubset);" FrameworkAlternate="net-5.0" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="publicId" Type="System.String" />
        <Parameter Name="systemId" Type="System.String" />
        <Parameter Name="internalSubset" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="fc7c3-125">一个包含 DTD 的限定名的 <see cref="T:System.String" />，此名称与 XML 文档的根元素的限定名相同。</span><span class="sxs-lookup"><span data-stu-id="fc7c3-125">A <see cref="T:System.String" /> that contains the qualified name of the DTD, which is the same as the qualified name of the root element of the XML document.</span></span></param>
        <param name="publicId"><span data-ttu-id="fc7c3-126">一个 <see cref="T:System.String" />，其中包含外部公共 DTD 的公共标识符。</span><span class="sxs-lookup"><span data-stu-id="fc7c3-126">A <see cref="T:System.String" /> that contains the public identifier of an external public DTD.</span></span></param>
        <param name="systemId"><span data-ttu-id="fc7c3-127">一个 <see cref="T:System.String" />，其中包含外部专用 DTD 的系统标识符。</span><span class="sxs-lookup"><span data-stu-id="fc7c3-127">A <see cref="T:System.String" /> that contains the system identifier of an external private DTD.</span></span></param>
        <param name="internalSubset"><span data-ttu-id="fc7c3-128">一个 <see cref="T:System.String" />，其中包含内部 DTD 的内部子集。</span><span class="sxs-lookup"><span data-stu-id="fc7c3-128">A <see cref="T:System.String" /> that contains the internal subset for an internal DTD.</span></span></param>
        <summary><span data-ttu-id="fc7c3-129">初始化 <see cref="T:System.Xml.Linq.XDocumentType" /> 类的实例。</span><span class="sxs-lookup"><span data-stu-id="fc7c3-129">Initializes an instance of the <see cref="T:System.Xml.Linq.XDocumentType" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="fc7c3-130">下面的示例创建一个具有内部 DTD 的文档。</span><span class="sxs-lookup"><span data-stu-id="fc7c3-130">The following example creates a document with an internal DTD.</span></span> <span data-ttu-id="fc7c3-131">当创建对象时 <xref:System.Xml.Linq.XDocumentType> ，它将指定 DTD 的限定名称 (Pubs) ，并指定包含内部子集的字符串。</span><span class="sxs-lookup"><span data-stu-id="fc7c3-131">When it creates the <xref:System.Xml.Linq.XDocumentType> object, it specifies the qualified name of the DTD (Pubs), and a string that contains the internal subset.</span></span> <span data-ttu-id="fc7c3-132">由于文档不使用公共或专用外部 DTD，因此 `publicId` 和 `systemId` 设置为 `null` 。</span><span class="sxs-lookup"><span data-stu-id="fc7c3-132">Because the document does not use a public or private external DTD, the `publicId` and `systemId` are set to `null`.</span></span>  
  
```csharp  
string internalSubset = @"<!ELEMENT Pubs (Book+)>  
<!ELEMENT Book (Title, Author)>  
<!ELEMENT Title (#PCDATA)>  
<!ELEMENT Author (#PCDATA)>";  
  
string target = "xml-stylesheet";  
string data = "href=\"mystyle.css\" title=\"Compact\" type=\"text/css\"";  
  
XDocument doc = new XDocument(  
    new XComment("This is a comment."),  
    new XProcessingInstruction(target, data),  
    new XDocumentType("Pubs", null, null, internalSubset),  
    new XElement("Pubs",   
        new XElement("Book",  
            new XElement("Title", "Artifacts of Roman Civilization"),  
            new XElement("Author", "Moreno, Jordao")  
        ),  
        new XElement("Book",  
            new XElement("Title", "Midieval Tools and Implements"),  
            new XElement("Author", "Gazit, Inbar")  
        )  
    ),  
    new XComment("This is another comment.")  
);  
doc.Declaration = new XDeclaration("1.0", "utf-8", "true");  
  
Console.WriteLine(doc);  
```  
  
```vb  
Dim internalSubset = _  
    "<!ELEMENT Pubs (Book+)>" & Environment.NewLine & _  
    "<!ELEMENT Book (Title, Author)>" & Environment.NewLine & _  
    "<!ELEMENT Title (#PCDATA)>" & Environment.NewLine & _  
    "<!ELEMENT Author (#PCDATA)>"  
  
Dim doc As XDocument = _  
    <?xml version="1.0" encoding="utf-8" standalone="yes"?>  
    <!--This is a comment.-->  
    <?xml-stylesheet href="mystyle.css" title="Compact" type="text/css"?>  
    <Pubs>  
        <Book>  
            <Title>Artifacts of Roman Civilization</Title>  
            <Author>Moreno, Jordao</Author>  
        </Book>  
        <Book>  
            <Title>Midieval Tools and Implements</Title>  
            <Author>Gazit, Inbar</Author>  
        </Book>  
    </Pubs>  
    <!--This is another comment.-->  
  
doc.FirstNode.NextNode.AddAfterSelf(new XDocumentType("Pubs", Nothing, Nothing, internalSubset))  
  
Console.WriteLine(doc)  
```  
  
 <span data-ttu-id="fc7c3-133">该示例产生下面的输出：</span><span class="sxs-lookup"><span data-stu-id="fc7c3-133">This example produces the following output:</span></span>  
  
```xml  
<!--This is a comment.-->  
<?xml-stylesheet href="mystyle.css" title="Compact" type="text/css"?>  
<!DOCTYPE Pubs [<!ELEMENT Pubs (Book+)>  
<!ELEMENT Book (Title, Author)>  
<!ELEMENT Title (#PCDATA)>  
<!ELEMENT Author (#PCDATA)>]>  
<Pubs>  
  <Book>  
    <Title>Artifacts of Roman Civilization</Title>  
    <Author>Moreno, Jordao</Author>  
  </Book>  
  <Book>  
    <Title>Midieval Tools and Implements</Title>  
    <Author>Gazit, Inbar</Author>  
  </Book>  
</Pubs>  
<!--This is another comment.-->  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/standard/linq/linq-xml-overview"><span data-ttu-id="fc7c3-134">LINQ to XML 概述</span><span class="sxs-lookup"><span data-stu-id="fc7c3-134">LINQ to XML overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="InternalSubset">
      <MemberSignature Language="C#" Value="public string InternalSubset { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string InternalSubset" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Linq.XDocumentType.InternalSubset" />
      <MemberSignature Language="VB.NET" Value="Public Property InternalSubset As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ InternalSubset { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.InternalSubset : string with get, set" Usage="System.Xml.Linq.XDocumentType.InternalSubset" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fc7c3-135">获取或设置此文档类型定义 (DTD) 的内部子集。</span><span class="sxs-lookup"><span data-stu-id="fc7c3-135">Gets or sets the internal subset for this Document Type Definition (DTD).</span></span></summary>
        <value><span data-ttu-id="fc7c3-136">一个 <see cref="T:System.String" />，其中包含此文档类型定义的 (DTD) 的内部子集。</span><span class="sxs-lookup"><span data-stu-id="fc7c3-136">A <see cref="T:System.String" /> that contains the internal subset for this Document Type Definition (DTD).</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="fc7c3-137">下面的示例创建一个包含内部子集的包含 DTD 的文档。</span><span class="sxs-lookup"><span data-stu-id="fc7c3-137">The following example creates a document with a DTD that contains an internal subset.</span></span>  
  
```csharp  
string internalSubset = @"<!ELEMENT Pubs (Book+)>  
<!ELEMENT Book (Title, Author)>  
<!ELEMENT Title (#PCDATA)>  
<!ELEMENT Author (#PCDATA)>";  
  
string target = "xml-stylesheet";  
string data = "href=\"mystyle.css\" title=\"Compact\" type=\"text/css\"";  
  
XDocument doc = new XDocument(  
    new XComment("This is a comment."),  
    new XProcessingInstruction(target, data),  
    new XDocumentType("Pubs", null, null, internalSubset),  
    new XElement("Pubs",   
        new XElement("Book",  
            new XElement("Title", "Artifacts of Roman Civilization"),  
            new XElement("Author", "Moreno, Jordao")  
        ),  
        new XElement("Book",  
            new XElement("Title", "Midieval Tools and Implements"),  
            new XElement("Author", "Gazit, Inbar")  
        )  
    ),  
    new XComment("This is another comment.")  
);  
doc.Declaration = new XDeclaration("1.0", "utf-8", "true");  
  
Console.WriteLine(doc.DocumentType.InternalSubset);  
```  
  
```vb  
Dim internalSubset = _  
    "<!ELEMENT Pubs (Book+)>" & Environment.NewLine & _  
    "<!ELEMENT Book (Title, Author)>" & Environment.NewLine & _  
    "<!ELEMENT Title (#PCDATA)>" & Environment.NewLine & _  
    "<!ELEMENT Author (#PCDATA)>"  
  
Dim doc As XDocument = _  
    <?xml version="1.0" encoding="utf-8" standalone="yes"?>  
    <!--This is a comment.-->  
    <?xml-stylesheet href='mystyle.css' title='Compact' type='text/css'?>  
    <Pubs>  
        <Book>  
            <Title>Artifacts of Roman Civilization</Title>  
            <Author>Moreno, Jordao</Author>  
        </Book>  
        <Book>  
            <Title>Midieval Tools and Implements</Title>  
            <Author>Gazit, Inbar</Author>  
        </Book>  
    </Pubs>  
    <!--This is another comment.-->  
  
doc.FirstNode.AddAfterSelf(new XDocumentType("Pubs", Nothing, Nothing, internalSubset))  
  
Console.WriteLine(doc.DocumentType.InternalSubset)  
```  
  
 <span data-ttu-id="fc7c3-138">该示例产生下面的输出：</span><span class="sxs-lookup"><span data-stu-id="fc7c3-138">This example produces the following output:</span></span>  
  
```  
<!ELEMENT Pubs (Book+)>  
<!ELEMENT Book (Title, Author)>  
<!ELEMENT Title (#PCDATA)>  
<!ELEMENT Author (#PCDATA)>  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/standard/linq/linq-xml-overview"><span data-ttu-id="fc7c3-139">LINQ to XML 概述</span><span class="sxs-lookup"><span data-stu-id="fc7c3-139">LINQ to XML overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Linq.XDocumentType.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Xml.Linq.XDocumentType.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fc7c3-140">获取或设置此文档类型定义 (DTD) 的名称。</span><span class="sxs-lookup"><span data-stu-id="fc7c3-140">Gets or sets the name for this Document Type Definition (DTD).</span></span></summary>
        <value><span data-ttu-id="fc7c3-141">一个 <see cref="T:System.String" />，其中包含此文档类型定义的 (DTD) 的名称。</span><span class="sxs-lookup"><span data-stu-id="fc7c3-141">A <see cref="T:System.String" /> that contains the name for this Document Type Definition (DTD).</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="fc7c3-142">下面的示例创建一个包含 DTD 的 XML 文档。</span><span class="sxs-lookup"><span data-stu-id="fc7c3-142">The following example creates an XML document that contains a DTD.</span></span> <span data-ttu-id="fc7c3-143">创建文档后，它将使用此属性检索 DTD 的限定名称。</span><span class="sxs-lookup"><span data-stu-id="fc7c3-143">After creating the document, it retrieves the qualified name of the DTD using this property.</span></span>  
  
```csharp  
string internalSubset = @"<!ELEMENT Pubs (Book+)>  
<!ELEMENT Book (Title, Author)>  
<!ELEMENT Title (#PCDATA)>  
<!ELEMENT Author (#PCDATA)>";  
  
string target = "xml-stylesheet";  
string data = "href=\"mystyle.css\" title=\"Compact\" type=\"text/css\"";  
  
XDocument doc = new XDocument(  
    new XComment("This is a comment."),  
    new XProcessingInstruction(target, data),  
    new XDocumentType("Pubs", null, null, internalSubset),  
    new XElement("Pubs",   
        new XElement("Book",  
            new XElement("Title", "Artifacts of Roman Civilization"),  
            new XElement("Author", "Moreno, Jordao")  
        ),  
        new XElement("Book",  
            new XElement("Title", "Midieval Tools and Implements"),  
            new XElement("Author", "Gazit, Inbar")  
        )  
    ),  
    new XComment("This is another comment.")  
);  
doc.Declaration = new XDeclaration("1.0", "utf-8", "true");  
  
Console.WriteLine(doc.DocumentType.Name);  
```  
  
```vb  
Dim internalSubset = _  
    "<!ELEMENT Pubs (Book+)>" & Environment.NewLine & _  
    "<!ELEMENT Book (Title, Author)>" & Environment.NewLine & _  
    "<!ELEMENT Title (#PCDATA)>" & Environment.NewLine & _  
    "<!ELEMENT Author (#PCDATA)>"  
  
Dim doc As XDocument = _  
    <?xml version="1.0" encoding="utf-8" standalone="yes"?>  
    <!--This is a comment.-->  
    <?xml-stylesheet href='mystyle.css' title='Compact' type='text/css'?>  
    <Pubs>  
        <Book>  
            <Title>Artifacts of Roman Civilization</Title>  
            <Author>Moreno, Jordao</Author>  
            </Book>  
        <Book>  
            <Title>Midieval Tools and Implements</Title>  
            <Author>Gazit, Inbar</Author>  
        </Book>  
    </Pubs>  
    <!--This is another comment.-->  
  
doc.FirstNode.AddAfterSelf(new XDocumentType("Pubs", Nothing, Nothing, internalSubset))  
  
Console.WriteLine(doc.DocumentType.Name)  
```  
  
 <span data-ttu-id="fc7c3-144">该示例产生下面的输出：</span><span class="sxs-lookup"><span data-stu-id="fc7c3-144">This example produces the following output:</span></span>  
  
```  
Pubs  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/standard/linq/linq-xml-overview"><span data-ttu-id="fc7c3-145">LINQ to XML 概述</span><span class="sxs-lookup"><span data-stu-id="fc7c3-145">LINQ to XML overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="NodeType">
      <MemberSignature Language="C#" Value="public override System.Xml.XmlNodeType NodeType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.XmlNodeType NodeType" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Linq.XDocumentType.NodeType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property NodeType As XmlNodeType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::XmlNodeType NodeType { System::Xml::XmlNodeType get(); };" />
      <MemberSignature Language="F#" Value="member this.NodeType : System.Xml.XmlNodeType" Usage="System.Xml.Linq.XDocumentType.NodeType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNodeType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fc7c3-146">获取此节点的节点类型。</span><span class="sxs-lookup"><span data-stu-id="fc7c3-146">Gets the node type for this node.</span></span></summary>
        <value><span data-ttu-id="fc7c3-147">节点类型。</span><span class="sxs-lookup"><span data-stu-id="fc7c3-147">The node type.</span></span> <span data-ttu-id="fc7c3-148">对于 <see cref="T:System.Xml.Linq.XDocumentType" /> 对象，此值为 <see cref="F:System.Xml.XmlNodeType.DocumentType" />。</span><span class="sxs-lookup"><span data-stu-id="fc7c3-148">For <see cref="T:System.Xml.Linq.XDocumentType" /> objects, this value is <see cref="F:System.Xml.XmlNodeType.DocumentType" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc7c3-149">由于派生自的所有类都 <xref:System.Xml.Linq.XObject> 包含一个 <xref:System.Xml.Linq.XObject.NodeType%2A> 属性，因此你可以编写对的具体子类的集合进行操作的代码 <xref:System.Xml.Linq.XObject> 。</span><span class="sxs-lookup"><span data-stu-id="fc7c3-149">Because all classes that derive from <xref:System.Xml.Linq.XObject> contain a <xref:System.Xml.Linq.XObject.NodeType%2A> property, you can write code that operates on collections of concrete subclass of <xref:System.Xml.Linq.XObject>.</span></span> <span data-ttu-id="fc7c3-150">然后，你的代码可以测试集合中每个节点的节点类型。</span><span class="sxs-lookup"><span data-stu-id="fc7c3-150">Your code can then test for the node type of each node in the collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fc7c3-151">下面的示例演示如何使用此属性检索对象的节点类型 <xref:System.Xml.Linq.XDocumentType> 。</span><span class="sxs-lookup"><span data-stu-id="fc7c3-151">The following example shows the use of this property to retrieve the node type for an <xref:System.Xml.Linq.XDocumentType> object.</span></span>  
  
```csharp  
string internalSubset = @"<!ELEMENT Pubs (Book+)>  
<!ELEMENT Book (Title, Author)>  
<!ELEMENT Title (#PCDATA)>  
<!ELEMENT Author (#PCDATA)>";  
  
string target = "xml-stylesheet";  
string data = "href=\"mystyle.css\" title=\"Compact\" type=\"text/css\"";  
  
XDocument doc = new XDocument(  
    new XComment("This is a comment."),  
    new XProcessingInstruction(target, data),  
    new XDocumentType("Pubs", null, null, internalSubset),  
    new XElement("Pubs",   
        new XElement("Book",  
            new XElement("Title", "Artifacts of Roman Civilization"),  
            new XElement("Author", "Moreno, Jordao")  
        ),  
        new XElement("Book",  
            new XElement("Title", "Midieval Tools and Implements"),  
            new XElement("Author", "Gazit, Inbar")  
        )  
    ),  
    new XComment("This is another comment.")  
);  
doc.Declaration = new XDeclaration("1.0", "utf-8", "true");  
  
Console.WriteLine(doc.DocumentType.NodeType);  
```  
  
```vb  
Dim internalSubset = _  
    "<!ELEMENT Pubs (Book+)>" & Environment.NewLine & _  
    "<!ELEMENT Book (Title, Author)>" & Environment.NewLine & _  
    "<!ELEMENT Title (#PCDATA)>" & Environment.NewLine & _  
    "<!ELEMENT Author (#PCDATA)>"  
  
Dim doc As XDocument = _   
    <?xml version="1.0" encoding="utf-8" standalone="yes"?>  
    <!--This is a comment.-->  
    <?xml-stylesheet href='mystyle.css' title='Compact' type='text/css'?>  
    <Pubs>  
        <Book>  
            <Title>Artifacts of Roman Civilization</Title>  
            <Author>Moreno, Jordao</Author>  
        </Book>  
        <Book>  
            <Title>Midieval Tools and Implements</Title>  
            <Author>Gazit, Inbar</Author>  
        </Book>  
    </Pubs>  
    <!--This is another comment.-->  
  
doc.FirstNode.AddAfterSelf(new XDocumentType("Pubs", Nothing, Nothing, internalSubset))  
  
Console.WriteLine(doc.DocumentType.NodeType.ToString())  
```  
  
 <span data-ttu-id="fc7c3-152">该示例产生下面的输出：</span><span class="sxs-lookup"><span data-stu-id="fc7c3-152">This example produces the following output:</span></span>  
  
```  
DocumentType  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/standard/linq/linq-xml-overview"><span data-ttu-id="fc7c3-153">LINQ to XML 概述</span><span class="sxs-lookup"><span data-stu-id="fc7c3-153">LINQ to XML overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="PublicId">
      <MemberSignature Language="C#" Value="public string PublicId { get; set; }" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".property instance string PublicId" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Linq.XDocumentType.PublicId" />
      <MemberSignature Language="VB.NET" Value="Public Property PublicId As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PublicId { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PublicId : string with get, set" Usage="System.Xml.Linq.XDocumentType.PublicId" />
      <MemberSignature Language="C#" Value="public string? PublicId { get; set; }" FrameworkAlternate="net-5.0" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fc7c3-154">获取或设置此文档类型定义 (DTD) 的公共标识符。</span><span class="sxs-lookup"><span data-stu-id="fc7c3-154">Gets or sets the public identifier for this Document Type Definition (DTD).</span></span></summary>
        <value><span data-ttu-id="fc7c3-155">一个 <see cref="T:System.String" />，其中包含此文档类型定义 (DTD) 的公共标识符。</span><span class="sxs-lookup"><span data-stu-id="fc7c3-155">A <see cref="T:System.String" /> that contains the public identifier for this Document Type Definition (DTD).</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc7c3-156">如果 XML 文档使用外部公共 DTD，则此属性将包含外部 DTD 的公共标识符。</span><span class="sxs-lookup"><span data-stu-id="fc7c3-156">If an XML document uses an external public DTD, this property will contain the public identifier of the external DTD.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/standard/linq/linq-xml-overview"><span data-ttu-id="fc7c3-157">LINQ to XML 概述</span><span class="sxs-lookup"><span data-stu-id="fc7c3-157">LINQ to XML overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="SystemId">
      <MemberSignature Language="C#" Value="public string SystemId { get; set; }" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".property instance string SystemId" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Linq.XDocumentType.SystemId" />
      <MemberSignature Language="VB.NET" Value="Public Property SystemId As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SystemId { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SystemId : string with get, set" Usage="System.Xml.Linq.XDocumentType.SystemId" />
      <MemberSignature Language="C#" Value="public string? SystemId { get; set; }" FrameworkAlternate="net-5.0" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fc7c3-158">获取或设置此文档类型定义 (DTD) 的系统标识符。</span><span class="sxs-lookup"><span data-stu-id="fc7c3-158">Gets or sets the system identifier for this Document Type Definition (DTD).</span></span></summary>
        <value><span data-ttu-id="fc7c3-159">一个 <see cref="T:System.String" />，其中包含此文档类型定义 (DTD) 的系统标识符。</span><span class="sxs-lookup"><span data-stu-id="fc7c3-159">A <see cref="T:System.String" /> that contains the system identifier for this Document Type Definition (DTD).</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc7c3-160">如果 XML 文档使用外部专用 DTD，此属性将包含外部 DTD 的专用标识符。</span><span class="sxs-lookup"><span data-stu-id="fc7c3-160">If an XML document uses an external private DTD, this property will contain the private identifier of the external DTD.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fc7c3-161">下面的示例创建一个引用外部专用 DTD 的 XML 文档。</span><span class="sxs-lookup"><span data-stu-id="fc7c3-161">The following example creates an XML document that refers to an external private DTD.</span></span> <span data-ttu-id="fc7c3-162">DTD 没有内部子集。</span><span class="sxs-lookup"><span data-stu-id="fc7c3-162">The DTD does not have an internal subset.</span></span> <span data-ttu-id="fc7c3-163">对 <xref:System.Xml.Linq.XDocumentType> 构造函数的调用反映了外部专用 DTD 的使用。</span><span class="sxs-lookup"><span data-stu-id="fc7c3-163">The call to the <xref:System.Xml.Linq.XDocumentType> constructor reflects the use of the external private DTD.</span></span> <span data-ttu-id="fc7c3-164">它通过 `null` 内部子集。</span><span class="sxs-lookup"><span data-stu-id="fc7c3-164">It passes `null` for the internal subset.</span></span>  
  
```csharp  
string pubsDtd =  
@"<!ELEMENT Pubs (Book+)>  
<!ELEMENT Book (Title, Author)>  
<!ELEMENT Title (#PCDATA)>  
<!ELEMENT Author (#PCDATA)>";  
File.WriteAllText("Pubs.dtd", pubsDtd);  
  
string target = "xml-stylesheet";  
string data = "href=\"mystyle.css\" title=\"Compact\" type=\"text/css\"";  
  
XDocument doc = new XDocument(  
    new XDocumentType("Pubs", null, "Pubs.dtd", null),  
    new XElement("Pubs",   
        new XElement("Book",  
            new XElement("Title", "Artifacts of Roman Civilization"),  
            new XElement("Author", "Moreno, Jordao")  
        ),  
        new XElement("Book",  
            new XElement("Title", "Midieval Tools and Implements"),  
            new XElement("Author", "Gazit, Inbar")  
        )  
    ),  
    new XComment("This is another comment.")  
);  
doc.Declaration = new XDeclaration("1.0", "utf-8", "true");  
doc.Save("Pubs.xml");  
  
// Validate Pubs.xml against Pubs.dtd.  
XmlReaderSettings xrs = new XmlReaderSettings();  
xrs.ProhibitDtd = false;  
xrs.ValidationType = ValidationType.DTD;  
xrs.ConformanceLevel = ConformanceLevel.Auto;  
XmlReader xr = XmlReader.Create("Pubs.xml", xrs);  
XDocument doc2 = XDocument.Load(xr);  
  
XDocumentType dt = doc2.Document.DocumentType;  
Console.WriteLine("SystemId:{0}", dt.SystemId);  
```  
  
```vb  
Dim pubsDtd As String = _   
    "<!ELEMENT Pubs (Book+)>" & Environment.NewLine & _  
    "<!ELEMENT Book (Title, Author)>" & Environment.NewLine & _  
    "<!ELEMENT Title (#PCDATA)>" & Environment.NewLine & _  
    "<!ELEMENT Author (#PCDATA)>"  
File.WriteAllText("Pubs.dtd", pubsDtd)  
  
Dim target As String = "xml-stylesheet"  
Dim data As String = "href='mystyle.css' title='Compact' type='text/css'"  
  
Dim doc As XDocument = _  
    <?xml version='1.0'?>  
    <Pubs>  
        <Book>  
            <Title>Artifacts of Roman Civilization</Title>  
            <Author>Moreno, Jordao</Author>  
        </Book>  
        <Book>  
            <Title>Midieval Tools and Implements</Title>  
            <Author>Gazit, Inbar</Author>  
        </Book>  
    </Pubs>  
    <!--This is another comment.-->  
  
doc _  
.FirstNode _  
.AddBeforeSelf(New XDocumentType("Pubs", Nothing, "Pubs.dtd", Nothing))  
  
doc.Declaration = New XDeclaration("1.0", "utf-8", "true")  
doc.Save("Pubs.xml")  
  
' Validate Pubs.xml against Pubs.dtd.  
Dim xrs As XmlReaderSettings = New XmlReaderSettings()  
xrs.ProhibitDtd = False  
xrs.ValidationType = ValidationType.DTD  
xrs.ConformanceLevel = ConformanceLevel.Auto  
Dim xr As XmlReader = XmlReader.Create("Pubs.xml", xrs)  
Dim doc2 As XDocument = XDocument.Load(xr)  
  
Dim dt As XDocumentType = doc2.Document.DocumentType  
Console.WriteLine("SystemId:{0}", dt.SystemId)  
```  
  
 <span data-ttu-id="fc7c3-165">该示例产生下面的输出：</span><span class="sxs-lookup"><span data-stu-id="fc7c3-165">This example produces the following output:</span></span>  
  
```  
SystemId:Pubs.dtd  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/standard/linq/linq-xml-overview"><span data-ttu-id="fc7c3-166">LINQ to XML 概述</span><span class="sxs-lookup"><span data-stu-id="fc7c3-166">LINQ to XML overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="WriteTo">
      <MemberSignature Language="C#" Value="public override void WriteTo (System.Xml.XmlWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteTo(class System.Xml.XmlWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Linq.XDocumentType.WriteTo(System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteTo (writer As XmlWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteTo(System::Xml::XmlWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.WriteTo : System.Xml.XmlWriter -&gt; unit" Usage="xDocumentType.WriteTo writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="fc7c3-167">此方法将写入其中的 <see cref="T:System.Xml.XmlWriter" />。</span><span class="sxs-lookup"><span data-stu-id="fc7c3-167">An <see cref="T:System.Xml.XmlWriter" /> into which this method will write.</span></span></param>
        <summary><span data-ttu-id="fc7c3-168">将此 <see cref="T:System.Xml.Linq.XDocumentType" /> 写入到 <see cref="T:System.Xml.XmlWriter" />。</span><span class="sxs-lookup"><span data-stu-id="fc7c3-168">Write this <see cref="T:System.Xml.Linq.XDocumentType" /> to an <see cref="T:System.Xml.XmlWriter" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc7c3-169">此方法主要由将 XML 树写入到的方法在内部使用 <xref:System.Xml.XmlWriter> 。</span><span class="sxs-lookup"><span data-stu-id="fc7c3-169">This method is primarily used internally by the methods that write an XML tree to an <xref:System.Xml.XmlWriter>.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/standard/linq/linq-xml-overview"><span data-ttu-id="fc7c3-170">LINQ to XML 概述</span><span class="sxs-lookup"><span data-stu-id="fc7c3-170">LINQ to XML overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="WriteToAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task WriteToAsync (System.Xml.XmlWriter writer, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task WriteToAsync(class System.Xml.XmlWriter writer, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Linq.XDocumentType.WriteToAsync(System.Xml.XmlWriter,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function WriteToAsync (writer As XmlWriter, cancellationToken As CancellationToken) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task ^ WriteToAsync(System::Xml::XmlWriter ^ writer, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="override this.WriteToAsync : System.Xml.XmlWriter * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="xDocumentType.WriteToAsync (writer, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="fc7c3-171">要将此 <see cref="T:System.Xml.Linq.XDocumentType" /> 写入到的编写器。</span><span class="sxs-lookup"><span data-stu-id="fc7c3-171">The writer to write this <see cref="T:System.Xml.Linq.XDocumentType" /> to.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="fc7c3-172">可用于请求异步操作取消的标志。</span><span class="sxs-lookup"><span data-stu-id="fc7c3-172">A token that can be used to request cancellation of the asynchronous operation.</span></span></param>
        <summary><span data-ttu-id="fc7c3-173">将此 <see cref="T:System.Xml.Linq.XDocumentType" /> 写入到指定的 <see cref="T:System.Xml.XmlWriter" />。</span><span class="sxs-lookup"><span data-stu-id="fc7c3-173">Writes this <see cref="T:System.Xml.Linq.XDocumentType" /> to the specified <see cref="T:System.Xml.XmlWriter" />.</span></span></summary>
        <returns><span data-ttu-id="fc7c3-174">表示异步写入操作的任务。</span><span class="sxs-lookup"><span data-stu-id="fc7c3-174">A task representing the asynchronous write operation.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
