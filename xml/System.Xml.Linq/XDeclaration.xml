<Type Name="XDeclaration" FullName="System.Xml.Linq.XDeclaration">
  <Metadata><Meta Name="ms.openlocfilehash" Value="24e40895380511437c5fa145f459acf3a4ca0392" /><Meta Name="ms.sourcegitcommit" Value="201bc7d7971e1c472a1df08dfeef528a60cec311" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/09/2020" /><Meta Name="ms.locfileid" Value="89596680" /></Metadata><TypeSignature Language="C#" Value="public class XDeclaration" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XDeclaration extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Linq.XDeclaration" />
  <TypeSignature Language="VB.NET" Value="Public Class XDeclaration" />
  <TypeSignature Language="C++ CLI" Value="public ref class XDeclaration" />
  <TypeSignature Language="F#" Value="type XDeclaration = class" />
  <AssemblyInfo>
    <AssemblyName>System.Xml.XDocument</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.Linq</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="System.Xml.Linq" FromVersion="4.0.0.0" To="System.Xml.XDocument" ToVersion="0.0.0.0" FrameworkAlternate="dotnet-uwp-10.0" />
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.Xml.XDocument" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="3a958-101">表示 XML 声明。</span><span class="sxs-lookup"><span data-stu-id="3a958-101">Represents an XML declaration.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3a958-102">XML 声明用于声明 XML 版本、编码以及 XML 文档是否是独立的。</span><span class="sxs-lookup"><span data-stu-id="3a958-102">An XML declaration is used to declare the XML version, the encoding, and whether or not the XML document is standalone.</span></span> <span data-ttu-id="3a958-103">此类表示 XML 声明的 XML 概念。</span><span class="sxs-lookup"><span data-stu-id="3a958-103">This class represents the XML concept of an XML declaration.</span></span>  
  
 <span data-ttu-id="3a958-104">与在 XML 标准中一样，声明与文档相关联。</span><span class="sxs-lookup"><span data-stu-id="3a958-104">Just as in the XML standard, declarations are associated with a document.</span></span> <span data-ttu-id="3a958-105">创建文档时，可以选择为文档指定声明。</span><span class="sxs-lookup"><span data-stu-id="3a958-105">When you create a document, you have the option to specify the declaration for the document.</span></span> <span data-ttu-id="3a958-106"><xref:System.Xml.Linq.XDocument>类包含 <xref:System.Xml.Linq.XDocument.Declaration%2A> 属性，该属性允许您设置或获取声明。</span><span class="sxs-lookup"><span data-stu-id="3a958-106">The <xref:System.Xml.Linq.XDocument> class contains the <xref:System.Xml.Linq.XDocument.Declaration%2A> property, which allows you to set or get the declaration.</span></span> <span data-ttu-id="3a958-107">有关如何使用 XML 声明序列化 XML 树的信息，请参阅 [使用 Xml 声明进行序列化](/dotnet/standard/linq/serialize-xml-declaration)。</span><span class="sxs-lookup"><span data-stu-id="3a958-107">For information about how to serialize an XML tree with an XML declaration, see [Serialize with an XML Declaration](/dotnet/standard/linq/serialize-xml-declaration).</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.Xml.Linq.XDocument.Declaration" />
    <related type="Article" href="/dotnet/standard/linq/linq-xml-overview"><span data-ttu-id="3a958-108">LINQ to XML 概述</span><span class="sxs-lookup"><span data-stu-id="3a958-108">LINQ to XML overview</span></span></related>
    <related type="Article" href="/dotnet/standard/linq/read-write-encoded-document"><span data-ttu-id="3a958-109">如何读取和写入编码文档</span><span class="sxs-lookup"><span data-stu-id="3a958-109">How to read and write an encoded document</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="3a958-110">初始化 <see cref="T:System.Xml.Linq.XDeclaration" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="3a958-110">Initializes a new instance of the <see cref="T:System.Xml.Linq.XDeclaration" /> class.</span></span></summary>
        <altmember cref="M:System.Xml.Linq.XDeclaration.ToString" />
        <related type="Article" href="/dotnet/standard/linq/linq-xml-overview"><span data-ttu-id="3a958-111">LINQ to XML 概述</span><span class="sxs-lookup"><span data-stu-id="3a958-111">LINQ to XML overview</span></span></related>
        <related type="Article" href="/dotnet/standard/linq/read-write-encoded-document"><span data-ttu-id="3a958-112">如何读取和写入编码文档</span><span class="sxs-lookup"><span data-stu-id="3a958-112">How to read and write an encoded document</span></span></related>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XDeclaration (System.Xml.Linq.XDeclaration other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.Linq.XDeclaration other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Linq.XDeclaration.#ctor(System.Xml.Linq.XDeclaration)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (other As XDeclaration)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XDeclaration(System::Xml::Linq::XDeclaration ^ other);" />
      <MemberSignature Language="F#" Value="new System.Xml.Linq.XDeclaration : System.Xml.Linq.XDeclaration -&gt; System.Xml.Linq.XDeclaration" Usage="new System.Xml.Linq.XDeclaration other" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="other" Type="System.Xml.Linq.XDeclaration" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="3a958-113">用于初始化此 <see cref="T:System.Xml.Linq.XDeclaration" /> 对象的 <see cref="T:System.Xml.Linq.XDeclaration" />。</span><span class="sxs-lookup"><span data-stu-id="3a958-113">The <see cref="T:System.Xml.Linq.XDeclaration" /> used to initialize this <see cref="T:System.Xml.Linq.XDeclaration" /> object.</span></span></param>
        <summary><span data-ttu-id="3a958-114">从其他 <see cref="T:System.Xml.Linq.XDeclaration" /> 对象初始化 <see cref="T:System.Xml.Linq.XDeclaration" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="3a958-114">Initializes a new instance of the <see cref="T:System.Xml.Linq.XDeclaration" /> class from another <see cref="T:System.Xml.Linq.XDeclaration" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3a958-115">此构造函数主要用于内部使用，以生成 XML 树的深层副本。</span><span class="sxs-lookup"><span data-stu-id="3a958-115">This constructor is primarily used internally to make a deep copy of an XML tree.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Xml.Linq.XDeclaration.ToString" />
        <related type="Article" href="/dotnet/standard/linq/linq-xml-overview"><span data-ttu-id="3a958-116">LINQ to XML 概述</span><span class="sxs-lookup"><span data-stu-id="3a958-116">LINQ to XML overview</span></span></related>
        <related type="Article" href="/dotnet/standard/linq/read-write-encoded-document"><span data-ttu-id="3a958-117">如何读取和写入编码文档</span><span class="sxs-lookup"><span data-stu-id="3a958-117">How to read and write an encoded document</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XDeclaration (string version, string encoding, string standalone);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string version, string encoding, string standalone) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Linq.XDeclaration.#ctor(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (version As String, encoding As String, standalone As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XDeclaration(System::String ^ version, System::String ^ encoding, System::String ^ standalone);" />
      <MemberSignature Language="F#" Value="new System.Xml.Linq.XDeclaration : string * string * string -&gt; System.Xml.Linq.XDeclaration" Usage="new System.Xml.Linq.XDeclaration (version, encoding, standalone)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="version" Type="System.String" />
        <Parameter Name="encoding" Type="System.String" />
        <Parameter Name="standalone" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="version"><span data-ttu-id="3a958-118">XML 的版本，通常为"1.0"。</span><span class="sxs-lookup"><span data-stu-id="3a958-118">The version of the XML, usually "1.0".</span></span></param>
        <param name="encoding"><span data-ttu-id="3a958-119">XML 文档的编码。</span><span class="sxs-lookup"><span data-stu-id="3a958-119">The encoding for the XML document.</span></span></param>
        <param name="standalone"><span data-ttu-id="3a958-120">包含"yes"或"no"的字符串，用来指定 XML 是独立的还是需要解析外部实体。</span><span class="sxs-lookup"><span data-stu-id="3a958-120">A string containing "yes" or "no" that specifies whether the XML is standalone or requires external entities to be resolved.</span></span></param>
        <summary><span data-ttu-id="3a958-121">使用指定的版本、编码和独立状态初始化 <see cref="T:System.Xml.Linq.XDeclaration" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="3a958-121">Initializes a new instance of the <see cref="T:System.Xml.Linq.XDeclaration" /> class with the specified version, encoding, and standalone status.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="3a958-122">下面的示例创建一个包含声明的文档。</span><span class="sxs-lookup"><span data-stu-id="3a958-122">The following example creates a document that contains a declaration.</span></span>  
  
```csharp  
XDocument doc = new XDocument(  
    new XDeclaration("1.0", "utf-8", "yes"),  
    new XComment("This is a comment"),  
    new XElement("Root", "content")  
);  
doc.Save("Root.xml");  
  
Console.WriteLine(File.ReadAllText("Root.xml"));  
```  
  
```vb  
Dim doc As XDocument = _   
        <?xml version="1.0" encoding="utf-8" standalone="yes"?>  
            <!--This is a comment-->  
            <Root>content</Root>  
  
doc.Save("Root.xml")  
  
Console.WriteLine(File.ReadAllText("Root.xml"))  
```  
  
 <span data-ttu-id="3a958-123">该示例产生下面的输出：</span><span class="sxs-lookup"><span data-stu-id="3a958-123">This example produces the following output:</span></span>  
  
```xml  
<?xml version="1.0" encoding="utf-8" standalone="yes"?>  
<!--This is a comment-->  
<Root>content</Root>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Xml.Linq.XDeclaration.ToString" />
        <related type="Article" href="/dotnet/standard/linq/linq-xml-overview"><span data-ttu-id="3a958-124">LINQ to XML 概述</span><span class="sxs-lookup"><span data-stu-id="3a958-124">LINQ to XML overview</span></span></related>
        <related type="Article" href="/dotnet/standard/linq/read-write-encoded-document"><span data-ttu-id="3a958-125">如何读取和写入编码文档</span><span class="sxs-lookup"><span data-stu-id="3a958-125">How to read and write an encoded document</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Encoding">
      <MemberSignature Language="C#" Value="public string Encoding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Encoding" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Linq.XDeclaration.Encoding" />
      <MemberSignature Language="VB.NET" Value="Public Property Encoding As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Encoding { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Encoding : string with get, set" Usage="System.Xml.Linq.XDeclaration.Encoding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3a958-126">获取或设置此文档的编码。</span><span class="sxs-lookup"><span data-stu-id="3a958-126">Gets or sets the encoding for this document.</span></span></summary>
        <value><span data-ttu-id="3a958-127">一个包含此文档的代码页名称的 <see cref="T:System.String" />。</span><span class="sxs-lookup"><span data-stu-id="3a958-127">A <see cref="T:System.String" /> containing the code page name for this document.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3a958-128">由 <xref:System.Text.Encoding.WebName%2A> 返回的任何值都是有效值。</span><span class="sxs-lookup"><span data-stu-id="3a958-128">Any value returned by <xref:System.Text.Encoding.WebName%2A> is a valid value.</span></span>  
  
 <span data-ttu-id="3a958-129">如果读取编码的文档，则此属性将设置为代码页名称。</span><span class="sxs-lookup"><span data-stu-id="3a958-129">If you read an encoded document, then this property will be set to the code page name.</span></span>  
  
 <span data-ttu-id="3a958-130">如果将此属性设置为有效的代码页名称，则在序列化时，LINQ to XML 将使用指定的编码进行序列化。</span><span class="sxs-lookup"><span data-stu-id="3a958-130">If you set this property to a valid code page name, then when serializing, LINQ to XML will serialize with the specified encoding.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3a958-131">下面的示例创建两个文档，一个文档使用 utf-8 编码，另一个使用 utf-16 编码。</span><span class="sxs-lookup"><span data-stu-id="3a958-131">The following example creates two documents, one with utf-8 encoding, and one with utf-16 encoding.</span></span> <span data-ttu-id="3a958-132">然后，该示例加载这两个文档并将编码输出到控制台。</span><span class="sxs-lookup"><span data-stu-id="3a958-132">It then loads the documents and prints the encoding to the console.</span></span>  
  
```csharp  
Console.WriteLine("Creating a document with utf-8 encoding");  
XDocument encodedDoc8 = new XDocument(  
    new XDeclaration("1.0", "utf-8", "yes"),  
    new XElement("Root", "Content")  
);  
encodedDoc8.Save("EncodedUtf8.xml");  
Console.WriteLine("Encoding is:{0}", encodedDoc8.Declaration.Encoding);  
Console.WriteLine();  
  
Console.WriteLine("Creating a document with utf-16 encoding");  
XDocument encodedDoc16 = new XDocument(  
    new XDeclaration("1.0", "utf-16", "yes"),  
    new XElement("Root", "Content")  
);  
encodedDoc16.Save("EncodedUtf16.xml");  
Console.WriteLine("Encoding is:{0}", encodedDoc16.Declaration.Encoding);  
Console.WriteLine();  
  
XDocument newDoc8 = XDocument.Load("EncodedUtf8.xml");  
Console.WriteLine("Encoded document:");  
Console.WriteLine(File.ReadAllText("EncodedUtf8.xml"));  
Console.WriteLine();  
Console.WriteLine("Encoding of loaded document is:{0}", newDoc8.Declaration.Encoding);  
Console.WriteLine();  
  
XDocument newDoc16 = XDocument.Load("EncodedUtf16.xml");  
Console.WriteLine("Encoded document:");  
Console.WriteLine(File.ReadAllText("EncodedUtf16.xml"));  
Console.WriteLine();  
Console.WriteLine("Encoding of loaded document is:{0}", newDoc16.Declaration.Encoding);  
```  
  
```vb  
Console.WriteLine("Creating a document with utf-8 encoding")  
Dim encodedDoc8 As XDocument = _   
        <?xml version="1.0" encoding="utf-8" standalone="yes"?>  
            <Root>Content</Root>  
encodedDoc8.Save("EncodedUtf8.xml")  
Console.WriteLine("Encoding is:{0}", encodedDoc8.Declaration.Encoding)  
Console.WriteLine()  
  
Console.WriteLine("Creating a document with utf-16 encoding")  
Dim encodedDoc16 As XDocument = _   
        <?xml version="1.0" encoding="utf-16" standalone="yes"?>  
            <Root>Content</Root>  
  
encodedDoc16.Save("EncodedUtf16.xml")  
Console.WriteLine("Encoding is:{0}", encodedDoc16.Declaration.Encoding)  
Console.WriteLine()  
  
Dim newDoc8 As XDocument = XDocument.Load("EncodedUtf8.xml")  
Console.WriteLine("Encoded document:")  
Console.WriteLine(File.ReadAllText("EncodedUtf8.xml"))  
Console.WriteLine()  
Console.WriteLine("Encoding of loaded document is:{0}", newDoc8.Declaration.Encoding)  
Console.WriteLine()  
  
Dim newDoc16 As XDocument = XDocument.Load("EncodedUtf16.xml")  
Console.WriteLine("Encoded document:")  
Console.WriteLine(File.ReadAllText("EncodedUtf16.xml"))  
Console.WriteLine()  
Console.WriteLine("Encoding of loaded document is:{0}", newDoc16.Declaration.Encoding)  
```  
  
 <span data-ttu-id="3a958-133">该示例产生下面的输出：</span><span class="sxs-lookup"><span data-stu-id="3a958-133">This example produces the following output:</span></span>  
  
```  
Creating a document with utf-8 encoding  
Encoding is:utf-8  
  
Creating a document with utf-16 encoding  
Encoding is:utf-16  
  
Encoded document:  
<?xml version="1.0" encoding="utf-8" standalone="yes"?>  
<Root>Content</Root>  
  
Encoding of loaded document is:utf-8  
  
Encoded document:  
<?xml version="1.0" encoding="utf-16" standalone="yes"?>  
<Root>Content</Root>  
  
Encoding of loaded document is:utf-16  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Xml.Linq.XDeclaration.ToString" />
        <related type="Article" href="/dotnet/standard/linq/linq-xml-overview"><span data-ttu-id="3a958-134">LINQ to XML 概述</span><span class="sxs-lookup"><span data-stu-id="3a958-134">LINQ to XML overview</span></span></related>
        <related type="Article" href="/dotnet/standard/linq/read-write-encoded-document"><span data-ttu-id="3a958-135">如何读取和写入编码文档</span><span class="sxs-lookup"><span data-stu-id="3a958-135">How to read and write an encoded document</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Standalone">
      <MemberSignature Language="C#" Value="public string Standalone { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Standalone" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Linq.XDeclaration.Standalone" />
      <MemberSignature Language="VB.NET" Value="Public Property Standalone As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Standalone { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Standalone : string with get, set" Usage="System.Xml.Linq.XDeclaration.Standalone" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3a958-136">获取或设置此文档的独立属性。</span><span class="sxs-lookup"><span data-stu-id="3a958-136">Gets or sets the standalone property for this document.</span></span></summary>
        <value><span data-ttu-id="3a958-137">一个包含此文档的独立属性的 <see cref="T:System.String" />。</span><span class="sxs-lookup"><span data-stu-id="3a958-137">A <see cref="T:System.String" /> containing the standalone property for this document.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3a958-138">独立的有效值为 "是" 或 "否"。</span><span class="sxs-lookup"><span data-stu-id="3a958-138">The valid values for standalone are "yes" or "no".</span></span> <span data-ttu-id="3a958-139">不会强制执行这些值。</span><span class="sxs-lookup"><span data-stu-id="3a958-139">These values are not enforced.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3a958-140">下面的示例使用此属性来打印声明的独立属性。</span><span class="sxs-lookup"><span data-stu-id="3a958-140">The following example uses this property to print the standalone property of a declaration.</span></span>  
  
```csharp  
XDeclaration xd = new XDeclaration("1.0", "utf-8", "yes");  
Console.WriteLine(xd.Version);  
Console.WriteLine(xd.Encoding);  
Console.WriteLine(xd.Standalone);  
```  
  
```vb  
Dim xd As XDeclaration = New XDeclaration("1.0", "utf-8", "yes")  
Console.WriteLine(xd.Version)  
Console.WriteLine(xd.Encoding)  
Console.WriteLine(xd.Standalone)  
```  
  
 <span data-ttu-id="3a958-141">该示例产生下面的输出：</span><span class="sxs-lookup"><span data-stu-id="3a958-141">This example produces the following output:</span></span>  
  
```  
1.0  
utf-8  
yes  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xml.Linq.XDeclaration.Version" />
        <related type="Article" href="/dotnet/standard/linq/linq-xml-overview"><span data-ttu-id="3a958-142">LINQ to XML 概述</span><span class="sxs-lookup"><span data-stu-id="3a958-142">LINQ to XML overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Linq.XDeclaration.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="xDeclaration.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3a958-143">提供声明作为已格式化的字符串。</span><span class="sxs-lookup"><span data-stu-id="3a958-143">Provides the declaration as a formatted string.</span></span></summary>
        <returns><span data-ttu-id="3a958-144">一个 <see cref="T:System.String" />，其中包含已格式化的 XML 字符串。</span><span class="sxs-lookup"><span data-stu-id="3a958-144">A <see cref="T:System.String" /> that contains the formatted XML string.</span></span></returns>
        <remarks>To be added.</remarks>
        <related type="Article" href="/dotnet/standard/linq/linq-xml-overview"><span data-ttu-id="3a958-145">LINQ to XML 概述</span><span class="sxs-lookup"><span data-stu-id="3a958-145">LINQ to XML overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Version">
      <MemberSignature Language="C#" Value="public string Version { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Version" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Linq.XDeclaration.Version" />
      <MemberSignature Language="VB.NET" Value="Public Property Version As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Version { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Version : string with get, set" Usage="System.Xml.Linq.XDeclaration.Version" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3a958-146">获取或设置此文档的版本属性。</span><span class="sxs-lookup"><span data-stu-id="3a958-146">Gets or sets the version property for this document.</span></span></summary>
        <value><span data-ttu-id="3a958-147">一个包含此文档的版本属性的 <see cref="T:System.String" />。</span><span class="sxs-lookup"><span data-stu-id="3a958-147">A <see cref="T:System.String" /> containing the version property for this document.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3a958-148">该值通常为 "1.0"。</span><span class="sxs-lookup"><span data-stu-id="3a958-148">The value is usually "1.0".</span></span> <span data-ttu-id="3a958-149">此值不是强制性的。</span><span class="sxs-lookup"><span data-stu-id="3a958-149">This value is not enforced.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3a958-150">下面的示例使用此属性来打印声明的 version 属性。</span><span class="sxs-lookup"><span data-stu-id="3a958-150">The following example uses this property to print the version property of a declaration.</span></span>  
  
```csharp  
XDeclaration xd = new XDeclaration("1.0", "utf-8", "yes");  
Console.WriteLine(xd.Version);  
Console.WriteLine(xd.Encoding);  
Console.WriteLine(xd.Standalone);  
```  
  
```vb  
Dim xd As XDeclaration = New XDeclaration("1.0", "utf-8", "yes")  
Console.WriteLine(xd.Version)  
Console.WriteLine(xd.Encoding)  
Console.WriteLine(xd.Standalone)  
```  
  
 <span data-ttu-id="3a958-151">该示例产生下面的输出：</span><span class="sxs-lookup"><span data-stu-id="3a958-151">This example produces the following output:</span></span>  
  
```  
1.0  
utf-8  
yes  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xml.Linq.XDeclaration.Standalone" />
        <related type="Article" href="/dotnet/standard/linq/linq-xml-overview"><span data-ttu-id="3a958-152">LINQ to XML 概述</span><span class="sxs-lookup"><span data-stu-id="3a958-152">LINQ to XML overview</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>
