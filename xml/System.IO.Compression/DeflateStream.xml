<Type Name="DeflateStream" FullName="System.IO.Compression.DeflateStream">
  <Metadata><Meta Name="ms.openlocfilehash" Value="b099aca75a697ac2eac6f5e99a4e855586cf47e1" /><Meta Name="ms.sourcegitcommit" Value="11d168140aa8fade0768c2a9dde3e3bcacfdfb7d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="05/27/2020" /><Meta Name="ms.locfileid" Value="83959455" /></Metadata><TypeSignature Language="C#" Value="public class DeflateStream : System.IO.Stream" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DeflateStream extends System.IO.Stream" />
  <TypeSignature Language="DocId" Value="T:System.IO.Compression.DeflateStream" />
  <TypeSignature Language="VB.NET" Value="Public Class DeflateStream&#xA;Inherits Stream" />
  <TypeSignature Language="C++ CLI" Value="public ref class DeflateStream : System::IO::Stream" />
  <TypeSignature Language="F#" Value="type DeflateStream = class&#xA;    inherit Stream" />
  <AssemblyInfo>
    <AssemblyName>System.IO.Compression</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="System" FromVersion="4.0.0.0" To="System.IO.Compression" ToVersion="0.0.0.0" FrameworkAlternate="dotnet-uwp-10.0" />
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.IO.Compression" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
    <TypeForwarding From="System.IO.Compression" FromVersion="4.0.0.0" To="System" ToVersion="4.0.0.0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;xamarinmac-3.0" />
    <TypeForwarding From="System.IO.Compression" FromVersion="4.2.0.0" To="System" ToVersion="4.0.0.0" FrameworkAlternate="netframework-4.7.2;netframework-4.8" />
    <TypeForwarding From="System.IO.Compression" FromVersion="2.0.5.0" To="System" ToVersion="2.0.5.0" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.IO.Stream</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="a83f6-101">提供使用 Deflate 算法压缩和解压缩流的方法和属性。</span><span class="sxs-lookup"><span data-stu-id="a83f6-101">Provides methods and properties for compressing and decompressing streams by using the Deflate algorithm.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a83f6-102">此类表示 Deflate 算法，它是一种用于无损文件压缩和解压缩的行业标准算法。</span><span class="sxs-lookup"><span data-stu-id="a83f6-102">This class represents the Deflate algorithm, which is an industry-standard algorithm for lossless file compression and decompression.</span></span> <span data-ttu-id="a83f6-103">从 [!INCLUDE[net_v45](~/includes/net-v45-md.md)]开始，<xref:System.IO.Compression.DeflateStream> 类使用 zlib 库。</span><span class="sxs-lookup"><span data-stu-id="a83f6-103">Starting with the [!INCLUDE[net_v45](~/includes/net-v45-md.md)], the <xref:System.IO.Compression.DeflateStream> class uses the zlib library.</span></span> <span data-ttu-id="a83f6-104">因此，它提供了更好的压缩算法，在大多数情况下，它比在早期版本的 .NET Framework 中提供的压缩文件更小。</span><span class="sxs-lookup"><span data-stu-id="a83f6-104">As a result, it provides a better compression algorithm and, in most cases, a smaller compressed file than it provides in earlier versions of the .NET Framework.</span></span>  
  
 <span data-ttu-id="a83f6-105">此类本质上不提供将文件添加到 zip 存档或从 zip 存档中提取文件的功能。</span><span class="sxs-lookup"><span data-stu-id="a83f6-105">This class does not inherently provide functionality for adding files to or extracting files from zip archives.</span></span> <span data-ttu-id="a83f6-106">若要使用 zip 存档，请使用 <xref:System.IO.Compression.ZipArchive> 和 <xref:System.IO.Compression.ZipArchiveEntry> 类。</span><span class="sxs-lookup"><span data-stu-id="a83f6-106">To work with zip archives, use the <xref:System.IO.Compression.ZipArchive> and the <xref:System.IO.Compression.ZipArchiveEntry> classes.</span></span>  
  
 <span data-ttu-id="a83f6-107"><xref:System.IO.Compression.DeflateStream> 类使用与 <xref:System.IO.Compression.GZipStream> 类使用的 gzip 数据格式相同的压缩算法。</span><span class="sxs-lookup"><span data-stu-id="a83f6-107">The <xref:System.IO.Compression.DeflateStream> class uses the same compression algorithm as the gzip data format used by the <xref:System.IO.Compression.GZipStream> class.</span></span>  
  
 <span data-ttu-id="a83f6-108"><xref:System.IO.Compression.DeflateStream> 和 <xref:System.IO.Compression.GZipStream> 中的压缩功能作为流公开。</span><span class="sxs-lookup"><span data-stu-id="a83f6-108">The compression functionality in <xref:System.IO.Compression.DeflateStream> and <xref:System.IO.Compression.GZipStream> is exposed as a stream.</span></span> <span data-ttu-id="a83f6-109">数据逐字节读取，因此不能执行多个传递来确定压缩整个文件或大型数据块的最佳方法。</span><span class="sxs-lookup"><span data-stu-id="a83f6-109">Data is read on a byte-by-byte basis, so it is not possible to perform multiple passes to determine the best method for compressing entire files or large blocks of data.</span></span> <span data-ttu-id="a83f6-110"><xref:System.IO.Compression.DeflateStream> 和 <xref:System.IO.Compression.GZipStream> 类最适用于未压缩的数据源。</span><span class="sxs-lookup"><span data-stu-id="a83f6-110">The <xref:System.IO.Compression.DeflateStream> and <xref:System.IO.Compression.GZipStream> classes are best used on uncompressed sources of data.</span></span> <span data-ttu-id="a83f6-111">如果源数据已压缩，使用这些类实际上可能会增加流的大小。</span><span class="sxs-lookup"><span data-stu-id="a83f6-111">If the source data is already compressed, using these classes may actually increase the size of the stream.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a83f6-112">下面的示例演示如何使用 <xref:System.IO.Compression.DeflateStream> 类压缩和解压缩文件的目录。</span><span class="sxs-lookup"><span data-stu-id="a83f6-112">The following example shows how to use the <xref:System.IO.Compression.DeflateStream> class to compress and decompress a directory of files.</span></span>  
  
 [!code-csharp[IO.Compression.Deflate1#1](~/samples/snippets/csharp/VS_Snippets_CLR/IO.Compression.Deflate1/CS/deflatetest.cs#1)]
 [!code-vb[IO.Compression.Deflate1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IO.Compression.Deflate1/VB/deflatetest.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a83f6-113">初始化 <see cref="T:System.IO.Compression.DeflateStream" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="a83f6-113">Initializes a new instance of the <see cref="T:System.IO.Compression.DeflateStream" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a83f6-114">使用 <xref:System.IO.Compression.DeflateStream> 类压缩大于 4 GB 的文件将导致异常。</span><span class="sxs-lookup"><span data-stu-id="a83f6-114">Using the <xref:System.IO.Compression.DeflateStream> class to compress a file larger than 4 GB will cause an exception.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DeflateStream (System.IO.Stream stream, System.IO.Compression.CompressionLevel compressionLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream stream, valuetype System.IO.Compression.CompressionLevel compressionLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.DeflateStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionLevel)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (stream As Stream, compressionLevel As CompressionLevel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DeflateStream(System::IO::Stream ^ stream, System::IO::Compression::CompressionLevel compressionLevel);" />
      <MemberSignature Language="F#" Value="new System.IO.Compression.DeflateStream : System.IO.Stream * System.IO.Compression.CompressionLevel -&gt; System.IO.Compression.DeflateStream" Usage="new System.IO.Compression.DeflateStream (stream, compressionLevel)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="compressionLevel" Type="System.IO.Compression.CompressionLevel" Index="1" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="stream"><span data-ttu-id="a83f6-115">要压缩的流。</span><span class="sxs-lookup"><span data-stu-id="a83f6-115">The stream to compress.</span></span></param>
        <param name="compressionLevel"><span data-ttu-id="a83f6-116">压缩流时，指示是否要强调速度或压缩效率的枚举值之一。</span><span class="sxs-lookup"><span data-stu-id="a83f6-116">One of the enumeration values that indicates whether to emphasize speed or compression efficiency when compressing the stream.</span></span></param>
        <summary><span data-ttu-id="a83f6-117">用指定的流和压缩级别初始化 <see cref="T:System.IO.Compression.DeflateStream" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="a83f6-117">Initializes a new instance of the <see cref="T:System.IO.Compression.DeflateStream" /> class by using the specified stream and compression level.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a83f6-118">当您想要指定压缩效率或速度对于 <xref:System.IO.Compression.DeflateStream> 类的实例是否更重要时，可以使用此构造函数。</span><span class="sxs-lookup"><span data-stu-id="a83f6-118">You use this constructor when you want to specify whether compression efficiency or speed is more important for an instance of the <xref:System.IO.Compression.DeflateStream> class.</span></span>  
  
 <span data-ttu-id="a83f6-119">此构造函数重载使用压缩模式 <xref:System.IO.Compression.CompressionMode.Compress>。</span><span class="sxs-lookup"><span data-stu-id="a83f6-119">This constructor overload uses the compression mode <xref:System.IO.Compression.CompressionMode.Compress>.</span></span> <span data-ttu-id="a83f6-120">若要将压缩模式设置为另一个值，请使用 <xref:System.IO.Compression.DeflateStream.%23ctor%28System.IO.Stream%2CSystem.IO.Compression.CompressionMode%29> 或 <xref:System.IO.Compression.DeflateStream.%23ctor%28System.IO.Stream%2CSystem.IO.Compression.CompressionMode%2CSystem.Boolean%29> 重载。</span><span class="sxs-lookup"><span data-stu-id="a83f6-120">To set the compression mode to another value, use the <xref:System.IO.Compression.DeflateStream.%23ctor%28System.IO.Stream%2CSystem.IO.Compression.CompressionMode%29> or <xref:System.IO.Compression.DeflateStream.%23ctor%28System.IO.Stream%2CSystem.IO.Compression.CompressionMode%2CSystem.Boolean%29> overload.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a83f6-121">下面的示例演示如何在创建 <xref:System.IO.Compression.DeflateStream> 对象时设置压缩级别。</span><span class="sxs-lookup"><span data-stu-id="a83f6-121">The following example shows how to set the compression level when creating a <xref:System.IO.Compression.DeflateStream> object.</span></span>  
  
 [!code-csharp[System.IO.Compression.DeflateStream#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.compression.deflatestream/cs/program1.cs#1)]
 [!code-vb[System.IO.Compression.DeflateStream#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.compression.deflatestream/vb/program1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a83f6-122"><paramref name="stream" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="a83f6-122"><paramref name="stream" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a83f6-123">流不支持写入操作，如压缩。</span><span class="sxs-lookup"><span data-stu-id="a83f6-123">The stream does not support write operations such as compression.</span></span> <span data-ttu-id="a83f6-124">（流对象上的 <see cref="P:System.IO.Stream.CanWrite" /> 属性是 <see langword="false" />。）</span><span class="sxs-lookup"><span data-stu-id="a83f6-124">(The <see cref="P:System.IO.Stream.CanWrite" /> property on the stream object is <see langword="false" />.)</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DeflateStream (System.IO.Stream stream, System.IO.Compression.CompressionMode mode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream stream, valuetype System.IO.Compression.CompressionMode mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.DeflateStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionMode)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (stream As Stream, mode As CompressionMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DeflateStream(System::IO::Stream ^ stream, System::IO::Compression::CompressionMode mode);" />
      <MemberSignature Language="F#" Value="new System.IO.Compression.DeflateStream : System.IO.Stream * System.IO.Compression.CompressionMode -&gt; System.IO.Compression.DeflateStream" Usage="new System.IO.Compression.DeflateStream (stream, mode)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="mode" Type="System.IO.Compression.CompressionMode" />
      </Parameters>
      <Docs>
        <param name="stream"><span data-ttu-id="a83f6-125">要压缩或解压缩的流。</span><span class="sxs-lookup"><span data-stu-id="a83f6-125">The stream to compress or decompress.</span></span></param>
        <param name="mode"><span data-ttu-id="a83f6-126">指示是要压缩还是解压缩流的枚举值之一。</span><span class="sxs-lookup"><span data-stu-id="a83f6-126">One of the enumeration values that indicates whether to compress or decompress the stream.</span></span></param>
        <summary><span data-ttu-id="a83f6-127">用指定的流和压缩模式初始化 <see cref="T:System.IO.Compression.DeflateStream" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="a83f6-127">Initializes a new instance of the <see cref="T:System.IO.Compression.DeflateStream" /> class by using the specified stream and compression mode.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a83f6-128">默认情况下，<xref:System.IO.Compression.DeflateStream> 拥有基础流，因此关闭流也会关闭基础流。</span><span class="sxs-lookup"><span data-stu-id="a83f6-128">By default, <xref:System.IO.Compression.DeflateStream> owns the underlying stream, so closing the stream also closes the underlying stream.</span></span> <span data-ttu-id="a83f6-129">请注意，基础流的状态可能会影响流的可用性。</span><span class="sxs-lookup"><span data-stu-id="a83f6-129">Note that the state of the underlying stream can affect the usability of the stream.</span></span> <span data-ttu-id="a83f6-130">此外，不执行显式检查，因此在创建新实例时不会引发其他异常。</span><span class="sxs-lookup"><span data-stu-id="a83f6-130">Also, no explicit checks are performed, so no additional exceptions are thrown when the new instance is created.</span></span>  
  
 <span data-ttu-id="a83f6-131">如果创建的 <xref:System.IO.Compression.DeflateStream> 类的实例的 `mode` 参数等于 `Compress`，则会立即插入标头信息。</span><span class="sxs-lookup"><span data-stu-id="a83f6-131">If an instance of the <xref:System.IO.Compression.DeflateStream> class is created with the `mode` parameter equal to `Compress`, header information is inserted immediately.</span></span> <span data-ttu-id="a83f6-132">如果没有进一步的操作，流将显示为有效的、空的压缩文件。</span><span class="sxs-lookup"><span data-stu-id="a83f6-132">If no further action occurs, the stream appears as a valid, empty, compressed file.</span></span>  
  
 <span data-ttu-id="a83f6-133">使用 <xref:System.IO.Compression.DeflateStream> 类压缩大于 4 GB 的文件会引发异常。</span><span class="sxs-lookup"><span data-stu-id="a83f6-133">Using the <xref:System.IO.Compression.DeflateStream> class to compress a file larger than 4 GB raises an exception.</span></span>  
  
 <span data-ttu-id="a83f6-134">默认情况下，在 <xref:System.IO.Compression.CompressionMode.Compress>压缩模式时，压缩级别设置为 <xref:System.IO.Compression.CompressionLevel.Optimal>。</span><span class="sxs-lookup"><span data-stu-id="a83f6-134">By default, the compression level is set to <xref:System.IO.Compression.CompressionLevel.Optimal> when the compression mode is <xref:System.IO.Compression.CompressionMode.Compress>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a83f6-135">下面的示例演示如何使用 <xref:System.IO.Compression.DeflateStream> 类压缩和解压缩文件。</span><span class="sxs-lookup"><span data-stu-id="a83f6-135">The following example shows how to use the <xref:System.IO.Compression.DeflateStream> class to compress and decompress a file.</span></span>  
  
 [!code-csharp[IO.Compression.Deflate1#1](~/samples/snippets/csharp/VS_Snippets_CLR/IO.Compression.Deflate1/CS/deflatetest.cs#1)]
 [!code-vb[IO.Compression.Deflate1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IO.Compression.Deflate1/VB/deflatetest.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a83f6-136"><paramref name="stream" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="a83f6-136"><paramref name="stream" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a83f6-137"><paramref name="mode" /> 不是有效的 <see cref="T:System.IO.Compression.CompressionMode" /> 值。</span><span class="sxs-lookup"><span data-stu-id="a83f6-137"><paramref name="mode" /> is not a valid <see cref="T:System.IO.Compression.CompressionMode" /> value.</span></span>  
  
<span data-ttu-id="a83f6-138">- 或 -</span><span class="sxs-lookup"><span data-stu-id="a83f6-138">-or-</span></span> 
 <span data-ttu-id="a83f6-139"><see cref="T:System.IO.Compression.CompressionMode" /> 为 <see cref="F:System.IO.Compression.CompressionMode.Compress" />，而 <see cref="P:System.IO.Stream.CanWrite" /> 为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a83f6-139"><see cref="T:System.IO.Compression.CompressionMode" /> is <see cref="F:System.IO.Compression.CompressionMode.Compress" /> and <see cref="P:System.IO.Stream.CanWrite" /> is <see langword="false" />.</span></span>  
  
<span data-ttu-id="a83f6-140">- 或 -</span><span class="sxs-lookup"><span data-stu-id="a83f6-140">-or-</span></span> 
 <span data-ttu-id="a83f6-141"><see cref="T:System.IO.Compression.CompressionMode" /> 为 <see cref="F:System.IO.Compression.CompressionMode.Decompress" />，而 <see cref="P:System.IO.Stream.CanRead" /> 为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a83f6-141"><see cref="T:System.IO.Compression.CompressionMode" /> is <see cref="F:System.IO.Compression.CompressionMode.Decompress" /> and <see cref="P:System.IO.Stream.CanRead" /> is <see langword="false" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DeflateStream (System.IO.Stream stream, System.IO.Compression.CompressionLevel compressionLevel, bool leaveOpen);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream stream, valuetype System.IO.Compression.CompressionLevel compressionLevel, bool leaveOpen) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.DeflateStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionLevel,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (stream As Stream, compressionLevel As CompressionLevel, leaveOpen As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DeflateStream(System::IO::Stream ^ stream, System::IO::Compression::CompressionLevel compressionLevel, bool leaveOpen);" />
      <MemberSignature Language="F#" Value="new System.IO.Compression.DeflateStream : System.IO.Stream * System.IO.Compression.CompressionLevel * bool -&gt; System.IO.Compression.DeflateStream" Usage="new System.IO.Compression.DeflateStream (stream, compressionLevel, leaveOpen)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="compressionLevel" Type="System.IO.Compression.CompressionLevel" Index="1" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="leaveOpen" Type="System.Boolean" Index="2" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="stream"><span data-ttu-id="a83f6-142">要压缩的流。</span><span class="sxs-lookup"><span data-stu-id="a83f6-142">The stream to compress.</span></span></param>
        <param name="compressionLevel"><span data-ttu-id="a83f6-143">压缩流时，指示是否要强调速度或压缩效率的枚举值之一。</span><span class="sxs-lookup"><span data-stu-id="a83f6-143">One of the enumeration values that indicates whether to emphasize speed or compression efficiency when compressing the stream.</span></span></param>
        <param name="leaveOpen"><span data-ttu-id="a83f6-144">如果在释放 <see cref="T:System.IO.Compression.DeflateStream" /> 对象之后打开流对象，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a83f6-144"><see langword="true" /> to leave the stream object open after disposing the <see cref="T:System.IO.Compression.DeflateStream" /> object; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="a83f6-145">使用指定的流和压缩级别，初始化 <see cref="T:System.IO.Compression.DeflateStream" /> 类的新实例，有选择性的打开流。</span><span class="sxs-lookup"><span data-stu-id="a83f6-145">Initializes a new instance of the <see cref="T:System.IO.Compression.DeflateStream" /> class by using the specified stream and compression level, and optionally leaves the stream open.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a83f6-146">若要指定压缩效率或速度对于 <xref:System.IO.Compression.DeflateStream> 类的实例是否更重要，以及在释放 <xref:System.IO.Compression.DeflateStream> 对象后是否将流对象保持打开状态，请使用此构造函数。</span><span class="sxs-lookup"><span data-stu-id="a83f6-146">You use this constructor when you want to specify whether compression efficiency or speed is more important for an instance of the <xref:System.IO.Compression.DeflateStream> class, and whether to leave the stream object open after disposing the <xref:System.IO.Compression.DeflateStream> object.</span></span>  
  
 <span data-ttu-id="a83f6-147">此构造函数重载使用压缩模式 <xref:System.IO.Compression.CompressionMode.Compress>。</span><span class="sxs-lookup"><span data-stu-id="a83f6-147">This constructor overload uses the compression mode <xref:System.IO.Compression.CompressionMode.Compress>.</span></span> <span data-ttu-id="a83f6-148">若要将压缩模式设置为另一个值，请使用 <xref:System.IO.Compression.DeflateStream.%23ctor%28System.IO.Stream%2CSystem.IO.Compression.CompressionMode%29> 或 <xref:System.IO.Compression.DeflateStream.%23ctor%28System.IO.Stream%2CSystem.IO.Compression.CompressionMode%2CSystem.Boolean%29> 重载。</span><span class="sxs-lookup"><span data-stu-id="a83f6-148">To set the compression mode to another value, use the <xref:System.IO.Compression.DeflateStream.%23ctor%28System.IO.Stream%2CSystem.IO.Compression.CompressionMode%29> or <xref:System.IO.Compression.DeflateStream.%23ctor%28System.IO.Stream%2CSystem.IO.Compression.CompressionMode%2CSystem.Boolean%29> overload.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a83f6-149">下面的示例演示如何在创建 <xref:System.IO.Compression.DeflateStream> 对象时设置压缩级别，以及如何使流保持打开状态。</span><span class="sxs-lookup"><span data-stu-id="a83f6-149">The following example shows how to set the compression level when creating a <xref:System.IO.Compression.DeflateStream> object and how to leave the stream open.</span></span>  
  
 [!code-csharp[System.IO.Compression.DeflateStream#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.compression.deflatestream/cs/program2.cs#2)]
 [!code-vb[System.IO.Compression.DeflateStream#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.compression.deflatestream/vb/program2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a83f6-150"><paramref name="stream" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="a83f6-150"><paramref name="stream" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a83f6-151">流不支持写入操作，如压缩。</span><span class="sxs-lookup"><span data-stu-id="a83f6-151">The stream does not support write operations such as compression.</span></span> <span data-ttu-id="a83f6-152">（流对象上的 <see cref="P:System.IO.Stream.CanWrite" /> 属性是 <see langword="false" />。）</span><span class="sxs-lookup"><span data-stu-id="a83f6-152">(The <see cref="P:System.IO.Stream.CanWrite" /> property on the stream object is <see langword="false" />.)</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DeflateStream (System.IO.Stream stream, System.IO.Compression.CompressionMode mode, bool leaveOpen);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream stream, valuetype System.IO.Compression.CompressionMode mode, bool leaveOpen) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.DeflateStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionMode,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (stream As Stream, mode As CompressionMode, leaveOpen As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DeflateStream(System::IO::Stream ^ stream, System::IO::Compression::CompressionMode mode, bool leaveOpen);" />
      <MemberSignature Language="F#" Value="new System.IO.Compression.DeflateStream : System.IO.Stream * System.IO.Compression.CompressionMode * bool -&gt; System.IO.Compression.DeflateStream" Usage="new System.IO.Compression.DeflateStream (stream, mode, leaveOpen)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="mode" Type="System.IO.Compression.CompressionMode" />
        <Parameter Name="leaveOpen" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="stream"><span data-ttu-id="a83f6-153">要压缩或解压缩的流。</span><span class="sxs-lookup"><span data-stu-id="a83f6-153">The stream to compress or decompress.</span></span></param>
        <param name="mode"><span data-ttu-id="a83f6-154">指示是要压缩还是解压缩流的枚举值之一。</span><span class="sxs-lookup"><span data-stu-id="a83f6-154">One of the enumeration values that indicates whether to compress or decompress the stream.</span></span></param>
        <param name="leaveOpen"><span data-ttu-id="a83f6-155">如果在释放 <see cref="T:System.IO.Compression.DeflateStream" /> 对象之后打开流，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a83f6-155"><see langword="true" /> to leave the stream open after disposing the <see cref="T:System.IO.Compression.DeflateStream" /> object; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="a83f6-156">使用指定的流和压缩模式，初始化 <see cref="T:System.IO.Compression.DeflateStream" /> 类的新实例，有选择性的打开流。</span><span class="sxs-lookup"><span data-stu-id="a83f6-156">Initializes a new instance of the <see cref="T:System.IO.Compression.DeflateStream" /> class by using the specified stream and compression mode, and optionally leaves the stream open.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a83f6-157">默认情况下，<xref:System.IO.Compression.DeflateStream> 拥有基础流，因此关闭流也会关闭基础流。</span><span class="sxs-lookup"><span data-stu-id="a83f6-157">By default, <xref:System.IO.Compression.DeflateStream> owns the underlying stream, so closing the stream also closes the underlying stream.</span></span> <span data-ttu-id="a83f6-158">请注意，基础流的状态可能会影响流的可用性。</span><span class="sxs-lookup"><span data-stu-id="a83f6-158">Note that the state of the underlying stream can affect the usability of the stream.</span></span> <span data-ttu-id="a83f6-159">此外，不执行显式检查，因此在创建新实例时不会引发其他异常。</span><span class="sxs-lookup"><span data-stu-id="a83f6-159">Also, no explicit checks are performed, so no additional exceptions are thrown when the new instance is created.</span></span>  
  
 <span data-ttu-id="a83f6-160">如果创建的 <xref:System.IO.Compression.DeflateStream> 类的实例的 `mode` 参数等于 `Compress`，则会立即插入标头信息。</span><span class="sxs-lookup"><span data-stu-id="a83f6-160">If an instance of the <xref:System.IO.Compression.DeflateStream> class is created with the `mode` parameter equal to `Compress`, header information is inserted immediately.</span></span> <span data-ttu-id="a83f6-161">如果没有进一步的操作，流将显示为有效的、空的压缩文件。</span><span class="sxs-lookup"><span data-stu-id="a83f6-161">If no further action occurs, the stream appears as a valid, empty, compressed file.</span></span>  
  
 <span data-ttu-id="a83f6-162">使用 <xref:System.IO.Compression.DeflateStream> 类压缩大于 4 GB 的文件会引发异常。</span><span class="sxs-lookup"><span data-stu-id="a83f6-162">Using the <xref:System.IO.Compression.DeflateStream> class to compress a file larger than 4 GB raises an exception.</span></span>  
  
 <span data-ttu-id="a83f6-163">默认情况下，在 <xref:System.IO.Compression.CompressionMode.Compress>压缩模式时，压缩级别设置为 <xref:System.IO.Compression.CompressionLevel.Optimal>。</span><span class="sxs-lookup"><span data-stu-id="a83f6-163">By default, the compression level is set to <xref:System.IO.Compression.CompressionLevel.Optimal> when the compression mode is <xref:System.IO.Compression.CompressionMode.Compress>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a83f6-164">下面的代码示例演示如何使用 <xref:System.IO.Compression.DeflateStream> 类压缩和解压缩文件。</span><span class="sxs-lookup"><span data-stu-id="a83f6-164">The following code example shows how to use the <xref:System.IO.Compression.DeflateStream> class to compress and decompress a file.</span></span>  
  
 [!code-csharp[IO.Compression.Deflate1#1](~/samples/snippets/csharp/VS_Snippets_CLR/IO.Compression.Deflate1/CS/deflatetest.cs#1)]
 [!code-vb[IO.Compression.Deflate1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IO.Compression.Deflate1/VB/deflatetest.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a83f6-165"><paramref name="stream" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="a83f6-165"><paramref name="stream" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a83f6-166"><paramref name="mode" /> 不是有效的 <see cref="T:System.IO.Compression.CompressionMode" /> 值。</span><span class="sxs-lookup"><span data-stu-id="a83f6-166"><paramref name="mode" /> is not a valid <see cref="T:System.IO.Compression.CompressionMode" /> value.</span></span>  
  
<span data-ttu-id="a83f6-167">- 或 -</span><span class="sxs-lookup"><span data-stu-id="a83f6-167">-or-</span></span> 
 <span data-ttu-id="a83f6-168"><see cref="T:System.IO.Compression.CompressionMode" /> 为 <see cref="F:System.IO.Compression.CompressionMode.Compress" />，而 <see cref="P:System.IO.Stream.CanWrite" /> 为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a83f6-168"><see cref="T:System.IO.Compression.CompressionMode" /> is <see cref="F:System.IO.Compression.CompressionMode.Compress" /> and <see cref="P:System.IO.Stream.CanWrite" /> is <see langword="false" />.</span></span>  
  
<span data-ttu-id="a83f6-169">- 或 -</span><span class="sxs-lookup"><span data-stu-id="a83f6-169">-or-</span></span> 
 <span data-ttu-id="a83f6-170"><see cref="T:System.IO.Compression.CompressionMode" /> 为 <see cref="F:System.IO.Compression.CompressionMode.Decompress" />，而 <see cref="P:System.IO.Stream.CanRead" /> 为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a83f6-170"><see cref="T:System.IO.Compression.CompressionMode" /> is <see cref="F:System.IO.Compression.CompressionMode.Decompress" /> and <see cref="P:System.IO.Stream.CanRead" /> is <see langword="false" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BaseStream">
      <MemberSignature Language="C#" Value="public System.IO.Stream BaseStream { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.Stream BaseStream" />
      <MemberSignature Language="DocId" Value="P:System.IO.Compression.DeflateStream.BaseStream" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BaseStream As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Stream ^ BaseStream { System::IO::Stream ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.BaseStream : System.IO.Stream" Usage="System.IO.Compression.DeflateStream.BaseStream" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a83f6-171">获取对基础流的引用。</span><span class="sxs-lookup"><span data-stu-id="a83f6-171">Gets a reference to the underlying stream.</span></span></summary>
        <value><span data-ttu-id="a83f6-172">表示基础流的流对象。</span><span class="sxs-lookup"><span data-stu-id="a83f6-172">A stream object that represents the underlying stream.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="a83f6-173">基础流已关闭。</span><span class="sxs-lookup"><span data-stu-id="a83f6-173">The underlying stream is closed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BeginRead">
      <MemberSignature Language="C#" Value="public override IAsyncResult BeginRead (byte[] buffer, int offset, int count, AsyncCallback asyncCallback, object asyncState);" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-2.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IAsyncResult BeginRead(unsigned int8[] buffer, int32 offset, int32 count, class System.AsyncCallback asyncCallback, object asyncState) cil managed" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-2.1" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.DeflateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function BeginRead (buffer As Byte(), offset As Integer, count As Integer, asyncCallback As AsyncCallback, asyncState As Object) As IAsyncResult" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-2.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override IAsyncResult ^ BeginRead(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count, AsyncCallback ^ asyncCallback, System::Object ^ asyncState);" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-2.1" />
      <MemberSignature Language="F#" Value="override this.BeginRead : byte[] * int * int * AsyncCallback * obj -&gt; IAsyncResult" Usage="deflateStream.BeginRead (buffer, offset, count, asyncCallback, asyncState)" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-2.1" />
      <MemberSignature Language="C#" Value="public override IAsyncResult BeginRead (byte[] array, int offset, int count, AsyncCallback asyncCallback, object asyncState);" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IAsyncResult BeginRead(unsigned int8[] array, int32 offset, int32 count, class System.AsyncCallback asyncCallback, object asyncState) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function BeginRead (array As Byte(), offset As Integer, count As Integer, asyncCallback As AsyncCallback, asyncState As Object) As IAsyncResult" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override IAsyncResult ^ BeginRead(cli::array &lt;System::Byte&gt; ^ array, int offset, int count, AsyncCallback ^ asyncCallback, System::Object ^ asyncState);" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0" />
      <MemberSignature Language="F#" Value="override this.BeginRead : byte[] * int * int * AsyncCallback * obj -&gt; IAsyncResult" Usage="deflateStream.BeginRead (array, offset, count, asyncCallback, asyncState)" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0" />
      <MemberSignature Language="C#" Value="public override IAsyncResult BeginRead (byte[] buffer, int offset, int count, AsyncCallback cback, object state);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IAsyncResult BeginRead(unsigned int8[] buffer, int32 offset, int32 count, class System.AsyncCallback cback, object state) cil managed" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function BeginRead (buffer As Byte(), offset As Integer, count As Integer, cback As AsyncCallback, state As Object) As IAsyncResult" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override IAsyncResult ^ BeginRead(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count, AsyncCallback ^ cback, System::Object ^ state);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="override this.BeginRead : byte[] * int * int * AsyncCallback * obj -&gt; IAsyncResult" Usage="deflateStream.BeginRead (buffer, offset, count, cback, state)" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="array" Type="System.Byte[]" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0" />
        <Parameter Name="offset" Type="System.Int32" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="count" Type="System.Int32" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="cback" Type="System.AsyncCallback" Index="3" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="asyncState" Type="System.Object" Index="4" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="state" Type="System.Object" Index="4" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="a83f6-174">将数据读入的字节数组。</span><span class="sxs-lookup"><span data-stu-id="a83f6-174">The byte array to read the data into.</span></span></param>
        <param name="array"><span data-ttu-id="a83f6-175">将数据读入的字节数组。</span><span class="sxs-lookup"><span data-stu-id="a83f6-175">The byte array to read the data into.</span></span></param>
        <param name="offset"><span data-ttu-id="a83f6-176"><paramref name="array" /> 中的字节偏移量，从该偏移量开始读取流中的数据。</span><span class="sxs-lookup"><span data-stu-id="a83f6-176">The byte offset in <paramref name="array" /> at which to begin reading data from the stream.</span></span></param>
        <param name="count"><span data-ttu-id="a83f6-177">要读取的最大字节数。</span><span class="sxs-lookup"><span data-stu-id="a83f6-177">The maximum number of bytes to read.</span></span></param>
        <param name="asyncCallback"><span data-ttu-id="a83f6-178">可选的异步回调，在完成读取操作时调用。</span><span class="sxs-lookup"><span data-stu-id="a83f6-178">An optional asynchronous callback, to be called when the read operation is complete.</span></span></param>
        <param name="cback"><span data-ttu-id="a83f6-179">可选的异步回调，在完成读取操作时调用。</span><span class="sxs-lookup"><span data-stu-id="a83f6-179">An optional asynchronous callback, to be called when the read operation is complete.</span></span></param>
        <param name="asyncState"><span data-ttu-id="a83f6-180">用户提供的对象，用于将此特定异步读取请求与其他请求区分开来。</span><span class="sxs-lookup"><span data-stu-id="a83f6-180">A user-provided object that distinguishes this particular asynchronous read request from other requests.</span></span></param>
        <param name="state"><span data-ttu-id="a83f6-181">用户提供的对象，用于将此特定异步读取请求与其他请求区分开来。</span><span class="sxs-lookup"><span data-stu-id="a83f6-181">A user-provided object that distinguishes this particular asynchronous read request from other requests.</span></span></param>
        <summary><span data-ttu-id="a83f6-182">开始执行异步读取操作。</span><span class="sxs-lookup"><span data-stu-id="a83f6-182">Begins an asynchronous read operation.</span></span> <span data-ttu-id="a83f6-183">（请考虑改用 <see cref="M:System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)" /> 方法。）</span><span class="sxs-lookup"><span data-stu-id="a83f6-183">(Consider using the <see cref="M:System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)" /> method instead.)</span></span></summary>
        <returns><span data-ttu-id="a83f6-184">表示异步读取操作（可能仍处于挂起状态）的对象。</span><span class="sxs-lookup"><span data-stu-id="a83f6-184">An  object that represents the asynchronous read operation, which could still be pending.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a83f6-185">从 [!INCLUDE[net_v45](~/includes/net-v45-md.md)]开始，你可以通过使用 <xref:System.IO.Stream.ReadAsync%2A> 方法执行异步读取操作。</span><span class="sxs-lookup"><span data-stu-id="a83f6-185">Starting with the [!INCLUDE[net_v45](~/includes/net-v45-md.md)], you can perform asynchronous read operations by using the <xref:System.IO.Stream.ReadAsync%2A> method.</span></span> <span data-ttu-id="a83f6-186"><xref:System.IO.Compression.DeflateStream.BeginRead%2A> 方法仍在 [!INCLUDE[net_v45](~/includes/net-v45-md.md)] 中可用以支持旧版代码;不过，您可以使用新的异步方法更轻松地实现异步 i/o 操作。</span><span class="sxs-lookup"><span data-stu-id="a83f6-186">The <xref:System.IO.Compression.DeflateStream.BeginRead%2A> method is still available in the [!INCLUDE[net_v45](~/includes/net-v45-md.md)] to support legacy code; however, you can implement asynchronous I/O operations more easily by using the new async methods.</span></span> <span data-ttu-id="a83f6-187">有关详细信息，请参阅[异步文件 I/O](/dotnet/standard/io/asynchronous-file-i-o)。</span><span class="sxs-lookup"><span data-stu-id="a83f6-187">For more information, see [Asynchronous File I/O](/dotnet/standard/io/asynchronous-file-i-o).</span></span>
  
 <span data-ttu-id="a83f6-188">将 <xref:System.IAsyncResult> 返回值传递到流的 <xref:System.IO.Compression.DeflateStream.EndRead%2A> 方法，以确定读取的字节数，以及释放用于读取的操作系统资源。</span><span class="sxs-lookup"><span data-stu-id="a83f6-188">Pass the <xref:System.IAsyncResult> return value to the <xref:System.IO.Compression.DeflateStream.EndRead%2A> method of the stream to determine how many bytes were read and to release operating system resources used for reading.</span></span> <span data-ttu-id="a83f6-189">为此，可以使用 <xref:System.IO.Compression.DeflateStream.BeginRead%2A> 调用的相同代码，也可以在传递给 <xref:System.IO.Compression.DeflateStream.BeginRead%2A>的回调中执行此操作。</span><span class="sxs-lookup"><span data-stu-id="a83f6-189">You can do this either by using the same code that called <xref:System.IO.Compression.DeflateStream.BeginRead%2A> or in a callback passed to <xref:System.IO.Compression.DeflateStream.BeginRead%2A>.</span></span>  
  
 <span data-ttu-id="a83f6-190">发出异步读取或写入操作时，将更新流中的当前位置，而不是在 i/o 操作完成时进行更新。</span><span class="sxs-lookup"><span data-stu-id="a83f6-190">The current position in the stream is updated when the asynchronous read or write operation is issued, not when the I/O operation completes.</span></span>  
  
 <span data-ttu-id="a83f6-191">多个同时进行的异步请求会导致不确定请求完成顺序。</span><span class="sxs-lookup"><span data-stu-id="a83f6-191">Multiple simultaneous asynchronous requests render the request completion order uncertain.</span></span>  
  
 <span data-ttu-id="a83f6-192">使用 <xref:System.IO.Compression.DeflateStream.CanRead%2A> 属性来确定当前 <xref:System.IO.Compression.DeflateStream> 对象是否支持读取。</span><span class="sxs-lookup"><span data-stu-id="a83f6-192">Use the <xref:System.IO.Compression.DeflateStream.CanRead%2A> property to determine whether the current <xref:System.IO.Compression.DeflateStream> object supports reading.</span></span>  
  
 <span data-ttu-id="a83f6-193">如果流已关闭或传递的参数无效，则会立即从 <xref:System.IO.Compression.DeflateStream.BeginRead%2A>引发异常。</span><span class="sxs-lookup"><span data-stu-id="a83f6-193">If a stream is closed or you pass an invalid argument, exceptions are thrown immediately from <xref:System.IO.Compression.DeflateStream.BeginRead%2A>.</span></span> <span data-ttu-id="a83f6-194">在异步读取请求期间发生的错误（例如，i/o 请求过程中的磁盘故障）会在线程池线程上发生，并在调用 <xref:System.IO.Compression.DeflateStream.EndRead%2A>时引发异常。</span><span class="sxs-lookup"><span data-stu-id="a83f6-194">Errors that occur during an asynchronous read request, such as a disk failure during the I/O request, occur on the thread pool thread and throw exceptions when calling <xref:System.IO.Compression.DeflateStream.EndRead%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="a83f6-195">尝试异步读取超过了流的结尾，或者发生了磁盘错误。</span><span class="sxs-lookup"><span data-stu-id="a83f6-195">The method tried to read asynchronously past the end of the stream, or a disk error occurred.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a83f6-196">一个或多个自变量无效。</span><span class="sxs-lookup"><span data-stu-id="a83f6-196">One or more of the arguments is invalid.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="a83f6-197">在流关闭后调用方法。</span><span class="sxs-lookup"><span data-stu-id="a83f6-197">Methods were called after the stream was closed.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="a83f6-198">当前 <see cref="T:System.IO.Compression.DeflateStream" /> 实现不支持读取操作。</span><span class="sxs-lookup"><span data-stu-id="a83f6-198">The current <see cref="T:System.IO.Compression.DeflateStream" /> implementation does not support the read operation.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a83f6-199">无法完成此调用。</span><span class="sxs-lookup"><span data-stu-id="a83f6-199">This call cannot be completed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BeginWrite">
      <MemberSignature Language="C#" Value="public override IAsyncResult BeginWrite (byte[] array, int offset, int count, AsyncCallback asyncCallback, object asyncState);" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IAsyncResult BeginWrite(unsigned int8[] array, int32 offset, int32 count, class System.AsyncCallback asyncCallback, object asyncState) cil managed" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.DeflateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function BeginWrite (array As Byte(), offset As Integer, count As Integer, asyncCallback As AsyncCallback, asyncState As Object) As IAsyncResult" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override IAsyncResult ^ BeginWrite(cli::array &lt;System::Byte&gt; ^ array, int offset, int count, AsyncCallback ^ asyncCallback, System::Object ^ asyncState);" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1" />
      <MemberSignature Language="F#" Value="override this.BeginWrite : byte[] * int * int * AsyncCallback * obj -&gt; IAsyncResult" Usage="deflateStream.BeginWrite (array, offset, count, asyncCallback, asyncState)" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1" />
      <MemberSignature Language="C#" Value="public override IAsyncResult BeginWrite (byte[] buffer, int offset, int count, AsyncCallback cback, object state);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IAsyncResult BeginWrite(unsigned int8[] buffer, int32 offset, int32 count, class System.AsyncCallback cback, object state) cil managed" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function BeginWrite (buffer As Byte(), offset As Integer, count As Integer, cback As AsyncCallback, state As Object) As IAsyncResult" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override IAsyncResult ^ BeginWrite(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count, AsyncCallback ^ cback, System::Object ^ state);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="override this.BeginWrite : byte[] * int * int * AsyncCallback * obj -&gt; IAsyncResult" Usage="deflateStream.BeginWrite (buffer, offset, count, cback, state)" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Byte[]" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="buffer" Type="System.Byte[]" Index="0" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="offset" Type="System.Int32" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="count" Type="System.Int32" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" Index="3" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="cback" Type="System.AsyncCallback" Index="3" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="asyncState" Type="System.Object" Index="4" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="state" Type="System.Object" Index="4" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="a83f6-200">要从中写入数据的缓冲区。</span><span class="sxs-lookup"><span data-stu-id="a83f6-200">The buffer to write data from.</span></span></param>
        <param name="buffer"><span data-ttu-id="a83f6-201">要从中写入数据的缓冲区。</span><span class="sxs-lookup"><span data-stu-id="a83f6-201">The buffer to write data from.</span></span></param>
        <param name="offset"><span data-ttu-id="a83f6-202"><paramref name="buffer" /> 中的字节偏移量，从此处开始写入。</span><span class="sxs-lookup"><span data-stu-id="a83f6-202">The byte offset in <paramref name="buffer" /> to begin writing from.</span></span></param>
        <param name="count"><span data-ttu-id="a83f6-203">要写入的最大字节数。</span><span class="sxs-lookup"><span data-stu-id="a83f6-203">The maximum number of bytes to write.</span></span></param>
        <param name="asyncCallback"><span data-ttu-id="a83f6-204">可选的异步回调，在完成写入操作时调用。</span><span class="sxs-lookup"><span data-stu-id="a83f6-204">An optional asynchronous callback, to be called when the write operation is complete.</span></span></param>
        <param name="cback"><span data-ttu-id="a83f6-205">可选的异步回调，在完成写入操作时调用。</span><span class="sxs-lookup"><span data-stu-id="a83f6-205">An optional asynchronous callback, to be called when the write operation is complete.</span></span></param>
        <param name="asyncState"><span data-ttu-id="a83f6-206">用户提供的对象，用于将此特定异步写入请求与其他请求区分开来。</span><span class="sxs-lookup"><span data-stu-id="a83f6-206">A user-provided object that distinguishes this particular asynchronous write request from other requests.</span></span></param>
        <param name="state"><span data-ttu-id="a83f6-207">用户提供的对象，用于将此特定异步写入请求与其他请求区分开来。</span><span class="sxs-lookup"><span data-stu-id="a83f6-207">A user-provided object that distinguishes this particular asynchronous write request from other requests.</span></span></param>
        <summary><span data-ttu-id="a83f6-208">开始执行异步写入操作。</span><span class="sxs-lookup"><span data-stu-id="a83f6-208">Begins an asynchronous write operation.</span></span> <span data-ttu-id="a83f6-209">（请考虑改用 <see cref="M:System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)" /> 方法。）</span><span class="sxs-lookup"><span data-stu-id="a83f6-209">(Consider using the <see cref="M:System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)" /> method instead.)</span></span></summary>
        <returns><span data-ttu-id="a83f6-210">表示异步写入操作（可能仍处于挂起状态）的对象。</span><span class="sxs-lookup"><span data-stu-id="a83f6-210">An object that represents the asynchronous write operation, which could still be pending.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a83f6-211">从 [!INCLUDE[net_v45](~/includes/net-v45-md.md)]开始，可以通过使用 <xref:System.IO.Stream.WriteAsync%2A> 方法执行异步写入操作。</span><span class="sxs-lookup"><span data-stu-id="a83f6-211">Starting with the [!INCLUDE[net_v45](~/includes/net-v45-md.md)], you can perform asynchronous write operations by using the <xref:System.IO.Stream.WriteAsync%2A> method.</span></span> <span data-ttu-id="a83f6-212"><xref:System.IO.Compression.DeflateStream.BeginWrite%2A> 方法仍在 [!INCLUDE[net_v45](~/includes/net-v45-md.md)] 中可用以支持旧版代码;不过，您可以使用新的异步方法更轻松地实现异步 i/o 操作。</span><span class="sxs-lookup"><span data-stu-id="a83f6-212">The <xref:System.IO.Compression.DeflateStream.BeginWrite%2A> method is still available in the [!INCLUDE[net_v45](~/includes/net-v45-md.md)] to support legacy code; however, you can implement asynchronous I/O operations more easily by using the new async methods.</span></span> <span data-ttu-id="a83f6-213">有关详细信息，请参阅[异步文件 I/O](/dotnet/standard/io/asynchronous-file-i-o)。</span><span class="sxs-lookup"><span data-stu-id="a83f6-213">For more information, see [Asynchronous File I/O](/dotnet/standard/io/asynchronous-file-i-o).</span></span>
  
 <span data-ttu-id="a83f6-214">将当前方法返回的 <xref:System.IAsyncResult> 对象传递到 <xref:System.IO.Compression.DeflateStream.EndWrite%2A>，以确保写入完成并适当地释放资源。</span><span class="sxs-lookup"><span data-stu-id="a83f6-214">Pass the <xref:System.IAsyncResult> object returned by the current method to <xref:System.IO.Compression.DeflateStream.EndWrite%2A> to ensure that the write completes and frees resources appropriately.</span></span> <span data-ttu-id="a83f6-215">为此，可以使用 <xref:System.IO.Compression.DeflateStream.BeginWrite%2A> 调用的相同代码，也可以在传递给 <xref:System.IO.Compression.DeflateStream.BeginWrite%2A>的回调中执行此操作。</span><span class="sxs-lookup"><span data-stu-id="a83f6-215">You can do this either by using the same code that called <xref:System.IO.Compression.DeflateStream.BeginWrite%2A> or in a callback passed to <xref:System.IO.Compression.DeflateStream.BeginWrite%2A>.</span></span> <span data-ttu-id="a83f6-216">如果在异步写入操作过程中发生错误，则在使用此方法返回的 <xref:System.IAsyncResult> 调用 <xref:System.IO.Compression.DeflateStream.EndWrite%2A> 之前，将不会引发异常。</span><span class="sxs-lookup"><span data-stu-id="a83f6-216">If an error occurs during an asynchronous write operation, an exception will not be thrown until <xref:System.IO.Compression.DeflateStream.EndWrite%2A> is called with the <xref:System.IAsyncResult> returned by this method.</span></span>  
  
 <span data-ttu-id="a83f6-217">如果流可写，则在流的末尾写入会扩展流。</span><span class="sxs-lookup"><span data-stu-id="a83f6-217">If a stream is writable, writing at the end of the stream expands the stream.</span></span>  
  
 <span data-ttu-id="a83f6-218">发出异步读取或写入操作时，将更新流中的当前位置，而不是在 i/o 操作完成时进行更新。</span><span class="sxs-lookup"><span data-stu-id="a83f6-218">The current position in the stream is updated when you issue the asynchronous read or write operation, not when the I/O operation completes.</span></span> <span data-ttu-id="a83f6-219">多个同时进行的异步请求会导致不确定请求完成顺序。</span><span class="sxs-lookup"><span data-stu-id="a83f6-219">Multiple simultaneous asynchronous requests render the request completion order uncertain.</span></span>  
  
 <span data-ttu-id="a83f6-220">使用 <xref:System.IO.Compression.DeflateStream.CanWrite%2A> 属性来确定当前 <xref:System.IO.Compression.DeflateStream> 对象是否支持写入。</span><span class="sxs-lookup"><span data-stu-id="a83f6-220">Use the <xref:System.IO.Compression.DeflateStream.CanWrite%2A> property to determine whether the current <xref:System.IO.Compression.DeflateStream> object supports writing.</span></span>  
  
 <span data-ttu-id="a83f6-221">如果流已关闭或传递的参数无效，则会立即从 <xref:System.IO.Compression.DeflateStream.BeginWrite%2A>引发异常。</span><span class="sxs-lookup"><span data-stu-id="a83f6-221">If a stream is closed or you pass an invalid argument, exceptions are thrown immediately from <xref:System.IO.Compression.DeflateStream.BeginWrite%2A>.</span></span> <span data-ttu-id="a83f6-222">在异步写入请求期间发生的错误（例如，i/o 请求过程中的磁盘故障）会在线程池线程上发生，并在调用 <xref:System.IO.Compression.DeflateStream.EndWrite%2A>时引发异常。</span><span class="sxs-lookup"><span data-stu-id="a83f6-222">Errors that occur during an asynchronous write request, such as a disk failure during the I/O request, occur on the thread pool thread and throw exceptions when calling <xref:System.IO.Compression.DeflateStream.EndWrite%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="a83f6-223">尝试异步写入超过流的结尾的方法或发生错误的磁盘。</span><span class="sxs-lookup"><span data-stu-id="a83f6-223">The method tried to write asynchronously past the end of the stream, or a disk error occurred.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a83f6-224">一个或多个自变量无效。</span><span class="sxs-lookup"><span data-stu-id="a83f6-224">One or more of the arguments is invalid.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="a83f6-225">在流关闭后调用方法。</span><span class="sxs-lookup"><span data-stu-id="a83f6-225">Methods were called after the stream was closed.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="a83f6-226">当前 <see cref="T:System.IO.Compression.DeflateStream" /> 实现不支持写入操作。</span><span class="sxs-lookup"><span data-stu-id="a83f6-226">The current <see cref="T:System.IO.Compression.DeflateStream" /> implementation does not support the write operation.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a83f6-227">由于流已关闭，因此无法执行写入操作。</span><span class="sxs-lookup"><span data-stu-id="a83f6-227">The write operation cannot be performed because the stream is closed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CanRead">
      <MemberSignature Language="C#" Value="public override bool CanRead { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanRead" />
      <MemberSignature Language="DocId" Value="P:System.IO.Compression.DeflateStream.CanRead" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanRead As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanRead { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanRead : bool" Usage="System.IO.Compression.DeflateStream.CanRead" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a83f6-228">获取一个值，该值指示流是否支持在解压缩文件的过程中读取文件。</span><span class="sxs-lookup"><span data-stu-id="a83f6-228">Gets a value indicating whether the stream supports reading while decompressing a file.</span></span></summary>
        <value><span data-ttu-id="a83f6-229">如果 <see cref="T:System.IO.Compression.CompressionMode" /> 值为 <see langword="Decompress" /> 而且基础流已打开并支持读取，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a83f6-229"><see langword="true" /> if the <see cref="T:System.IO.Compression.CompressionMode" /> value is <see langword="Decompress" />, and the underlying stream is opened and supports reading; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanSeek">
      <MemberSignature Language="C#" Value="public override bool CanSeek { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanSeek" />
      <MemberSignature Language="DocId" Value="P:System.IO.Compression.DeflateStream.CanSeek" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanSeek As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanSeek { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanSeek : bool" Usage="System.IO.Compression.DeflateStream.CanSeek" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a83f6-230">获取一个值，该值指示流是否支持查找。</span><span class="sxs-lookup"><span data-stu-id="a83f6-230">Gets a value indicating whether the stream supports seeking.</span></span></summary>
        <value><span data-ttu-id="a83f6-231">所有情况下均为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a83f6-231"><see langword="false" /> in all cases.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanWrite">
      <MemberSignature Language="C#" Value="public override bool CanWrite { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanWrite" />
      <MemberSignature Language="DocId" Value="P:System.IO.Compression.DeflateStream.CanWrite" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanWrite As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanWrite { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanWrite : bool" Usage="System.IO.Compression.DeflateStream.CanWrite" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a83f6-232">获取一个值，该值指示流是否支持写入。</span><span class="sxs-lookup"><span data-stu-id="a83f6-232">Gets a value indicating whether the stream supports writing.</span></span></summary>
        <value><span data-ttu-id="a83f6-233">如果 <see cref="T:System.IO.Compression.CompressionMode" /> 值为 <see langword="Compress" /> 而且基础流未关闭并支持写入，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a83f6-233"><see langword="true" /> if the <see cref="T:System.IO.Compression.CompressionMode" /> value is <see langword="Compress" />, and the underlying stream supports writing and is not closed; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public override void CopyTo (System.IO.Stream destination, int bufferSize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void CopyTo(class System.IO.Stream destination, int32 bufferSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.DeflateStream.CopyTo(System.IO.Stream,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub CopyTo (destination As Stream, bufferSize As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void CopyTo(System::IO::Stream ^ destination, int bufferSize);" />
      <MemberSignature Language="F#" Value="override this.CopyTo : System.IO.Stream * int -&gt; unit" Usage="deflateStream.CopyTo (destination, bufferSize)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.IO.Stream" Index="0" FrameworkAlternate="netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="bufferSize" Type="System.Int32" Index="1" FrameworkAlternate="netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="destination"><span data-ttu-id="a83f6-234">向其中复制当前 Deflate 流的内容的流。</span><span class="sxs-lookup"><span data-stu-id="a83f6-234">The stream to which the contents of the current Deflate stream will be copied.</span></span></param>
        <param name="bufferSize"><span data-ttu-id="a83f6-235">缓冲区的大小。</span><span class="sxs-lookup"><span data-stu-id="a83f6-235">The size of the buffer.</span></span> <span data-ttu-id="a83f6-236">此值必须大于零。</span><span class="sxs-lookup"><span data-stu-id="a83f6-236">This value must be greater than zero.</span></span> <span data-ttu-id="a83f6-237">默认大小为 81920。</span><span class="sxs-lookup"><span data-stu-id="a83f6-237">The default size is 81920.</span></span></param>
        <summary><span data-ttu-id="a83f6-238">使用指定的缓冲区大小，从当前 Deflate 流中读取字节并将其写入到另一流中。</span><span class="sxs-lookup"><span data-stu-id="a83f6-238">Reads the bytes from the current Deflate stream and writes them to another stream, using a specified buffer size.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="a83f6-239">复制从当前 Deflate 流中的当前位置开始，复制操作完成后，不会重置目标流的位置。</span><span class="sxs-lookup"><span data-stu-id="a83f6-239">Copying begins at the current position in the current Deflate stream and does not reset the position of the destination stream after the copy operation is complete.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyToAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task CopyToAsync (System.IO.Stream destination, int bufferSize, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task CopyToAsync(class System.IO.Stream destination, int32 bufferSize, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.DeflateStream.CopyToAsync(System.IO.Stream,System.Int32,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CopyToAsync (destination As Stream, bufferSize As Integer, cancellationToken As CancellationToken) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task ^ CopyToAsync(System::IO::Stream ^ destination, int bufferSize, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="override this.CopyToAsync : System.IO.Stream * int * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="deflateStream.CopyToAsync (destination, bufferSize, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.IO.Stream" Index="0" FrameworkAlternate="netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="bufferSize" Type="System.Int32" Index="1" FrameworkAlternate="netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="2" FrameworkAlternate="netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="destination"><span data-ttu-id="a83f6-240">向其中复制当前 Deflate 流的内容的流。</span><span class="sxs-lookup"><span data-stu-id="a83f6-240">The stream to which the contents of the current Deflate stream will be copied.</span></span></param>
        <param name="bufferSize"><span data-ttu-id="a83f6-241">缓冲区的大小（以字节为单位）。</span><span class="sxs-lookup"><span data-stu-id="a83f6-241">The size, in bytes, of the buffer.</span></span> <span data-ttu-id="a83f6-242">此值必须大于零。</span><span class="sxs-lookup"><span data-stu-id="a83f6-242">This value must be greater than zero.</span></span> <span data-ttu-id="a83f6-243">默认大小为 81920。</span><span class="sxs-lookup"><span data-stu-id="a83f6-243">The default size is 81920.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="a83f6-244">要监视的取消请求标记。</span><span class="sxs-lookup"><span data-stu-id="a83f6-244">The token to monitor for cancellation requests.</span></span> <span data-ttu-id="a83f6-245">默认值是 <see cref="P:System.Threading.CancellationToken.None" />。</span><span class="sxs-lookup"><span data-stu-id="a83f6-245">The default value is <see cref="P:System.Threading.CancellationToken.None" />.</span></span></param>
        <summary><span data-ttu-id="a83f6-246">使用指定的缓冲区大小，从当前 Deflate 流中异步读取字节并将其写入到另一流中。</span><span class="sxs-lookup"><span data-stu-id="a83f6-246">Asynchronously reads the bytes from the current Deflate stream and writes them to another stream, using a specified buffer size.</span></span></summary>
        <returns><span data-ttu-id="a83f6-247">表示异步复制操作的任务。</span><span class="sxs-lookup"><span data-stu-id="a83f6-247">A task that represents the asynchronous copy operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="a83f6-248">利用 `CopyToAsync` 方法，你可以在不阻塞主线程的情况下执行占用大量资源的 i/o 操作。</span><span class="sxs-lookup"><span data-stu-id="a83f6-248">The `CopyToAsync` method enables you to perform resource-intensive I/O operations without blocking the main thread.</span></span> <span data-ttu-id="a83f6-249">在 [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] 应用或 [!INCLUDE[desktop_appname](~/includes/desktop-appname-md.md)] 应用中一个耗时的流操作可能阻塞 UI 线程并让您的应用看起来好像不工作时，这种性能的考虑就显得尤为重要了。</span><span class="sxs-lookup"><span data-stu-id="a83f6-249">This performance consideration is particularly important in a [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] app or [!INCLUDE[desktop_appname](~/includes/desktop-appname-md.md)] app where a time-consuming stream operation can block the UI thread and make your app appear as if it is not working.</span></span> <span data-ttu-id="a83f6-250">异步方法与 Visual Basic 和C#中的 `async` 和 `await` 关键字结合使用。</span><span class="sxs-lookup"><span data-stu-id="a83f6-250">The async methods are used in conjunction with the `async` and `await` keywords in Visual Basic and C#.</span></span>

<span data-ttu-id="a83f6-251">如果在操作完成前取消该操作，则返回的任务将包含 <xref:System.Threading.Tasks.Task.Status?displayProperty=nameWithType> 属性的 <xref:System.Threading.Tasks.TaskStatus.Canceled?displayProperty=nameWithType> 值。</span><span class="sxs-lookup"><span data-stu-id="a83f6-251">If the operation is canceled before it completes, the returned task contains the <xref:System.Threading.Tasks.TaskStatus.Canceled?displayProperty=nameWithType> value for the <xref:System.Threading.Tasks.Task.Status?displayProperty=nameWithType> property.</span></span>

<span data-ttu-id="a83f6-252">复制从当前 Deflate 流中的当前位置开始。</span><span class="sxs-lookup"><span data-stu-id="a83f6-252">Copying begins at the current position in the current Deflate stream.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.DeflateStream.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="deflateStream.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="a83f6-253">如果为 <see langword="true" />，则托管及非托管资源都释放；如果为 <see langword="false" />，则仅释放非托管资源。</span><span class="sxs-lookup"><span data-stu-id="a83f6-253"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="a83f6-254">释放 <see cref="T:System.IO.Compression.DeflateStream" /> 使用的非托管资源，并选择性地释放托管资源。</span><span class="sxs-lookup"><span data-stu-id="a83f6-254">Releases the unmanaged resources used by the <see cref="T:System.IO.Compression.DeflateStream" /> and optionally releases the managed resources.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a83f6-255">此方法由 public <xref:System.ComponentModel.Component.Dispose%2A> 方法和 <xref:System.Object.Finalize%2A> 方法调用。</span><span class="sxs-lookup"><span data-stu-id="a83f6-255">This method is called by the public <xref:System.ComponentModel.Component.Dispose%2A> method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="a83f6-256"><xref:System.ComponentModel.Component.Dispose%2A> 调用受保护的 <xref:System.IO.Compression.DeflateStream.Dispose%2A> 方法，并将 `disposing` 参数设置为 `true`。</span><span class="sxs-lookup"><span data-stu-id="a83f6-256"><xref:System.ComponentModel.Component.Dispose%2A> invokes the protected <xref:System.IO.Compression.DeflateStream.Dispose%2A> method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="a83f6-257"><xref:System.Object.Finalize%2A> 调用 `disposing` 设置为 `false`的 <xref:System.IO.Compression.DeflateStream.Dispose%2A>。</span><span class="sxs-lookup"><span data-stu-id="a83f6-257"><xref:System.Object.Finalize%2A> invokes <xref:System.IO.Compression.DeflateStream.Dispose%2A> with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="a83f6-258">当 `disposing` 参数为 `true` 时，此方法释放该 <xref:System.IO.Compression.DeflateStream> 引用的、由任何托管对象持有的全部资源。</span><span class="sxs-lookup"><span data-stu-id="a83f6-258">When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.IO.Compression.DeflateStream> references.</span></span> <span data-ttu-id="a83f6-259">此方法将调用每个被引用对象的 <xref:System.ComponentModel.Component.Dispose%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="a83f6-259">This method invokes the <xref:System.ComponentModel.Component.Dispose%2A> method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="a83f6-260">
            <see cref="M:System.ComponentModel.Component.Dispose" /> 可以由其他对象多次调用。</span><span class="sxs-lookup"><span data-stu-id="a83f6-260">
            <see cref="M:System.ComponentModel.Component.Dispose" /> can be called multiple times by other objects.</span></span> <span data-ttu-id="a83f6-261"><see cref="M:System.IO.Compression.DeflateStream.Dispose(System.Boolean)" /> 重写时，请注意不要引用先前在调用 <see cref="M:System.ComponentModel.Component.Dispose" />之前已释放的对象。</span><span class="sxs-lookup"><span data-stu-id="a83f6-261">When overriding <see cref="M:System.IO.Compression.DeflateStream.Dispose(System.Boolean)" /> be careful not to reference objects that have been previously disposed of in an earlier call to <see cref="M:System.ComponentModel.Component.Dispose" />.</span></span> <span data-ttu-id="a83f6-262">有关如何实现 <see cref="M:System.IO.Compression.DeflateStream.Dispose(System.Boolean)" />的详细信息，请参阅[实现 Dispose 方法](/dotnet/standard/garbage-collection/implementing-dispose)。</span><span class="sxs-lookup"><span data-stu-id="a83f6-262">For more information about how to implement <see cref="M:System.IO.Compression.DeflateStream.Dispose(System.Boolean)" />, see [Implementing a Dispose Method](/dotnet/standard/garbage-collection/implementing-dispose).</span></span>  
  
<span data-ttu-id="a83f6-263">有关 <see cref="M:System.ComponentModel.Component.Dispose" /> 和 <see cref="M:System.Object.Finalize" />的详细信息，请参阅[清理非托管资源](/dotnet/standard/garbage-collection/unmanaged)。</span><span class="sxs-lookup"><span data-stu-id="a83f6-263">For more information about <see cref="M:System.ComponentModel.Component.Dispose" /> and <see cref="M:System.Object.Finalize" />, see [Cleaning Up Unmanaged Resources](/dotnet/standard/garbage-collection/unmanaged).</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="DisposeAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.ValueTask DisposeAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.Threading.Tasks.ValueTask DisposeAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.DeflateStream.DisposeAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function DisposeAsync () As ValueTask" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::ValueTask DisposeAsync();" />
      <MemberSignature Language="F#" Value="override this.DisposeAsync : unit -&gt; System.Threading.Tasks.ValueTask" Usage="deflateStream.DisposeAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a83f6-264">异步释放 <see cref="T:System.IO.Compression.DeflateStream" /> 使用的非托管资源。</span><span class="sxs-lookup"><span data-stu-id="a83f6-264">Asynchronously releases the unmanaged resources used by the <see cref="T:System.IO.Compression.DeflateStream" />.</span></span></summary>
        <returns><span data-ttu-id="a83f6-265">一个表示异步释放操作的任务。</span><span class="sxs-lookup"><span data-stu-id="a83f6-265">A task that represents the asynchronous dispose operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="a83f6-266">使用 `DisposeAsync` 方法，您可以在不阻塞主线程的情况下执行占用大量资源的释放操作。</span><span class="sxs-lookup"><span data-stu-id="a83f6-266">The `DisposeAsync` method enables you to perform a resource-intensive dispose operation without blocking the main thread.</span></span> <span data-ttu-id="a83f6-267">在 [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] 应用或 [!INCLUDE[desktop_appname](~/includes/desktop-appname-md.md)] 应用中一个耗时的流操作可能阻塞 UI 线程并让您的应用看起来好像不工作时，这种性能的考虑就显得尤为重要了。</span><span class="sxs-lookup"><span data-stu-id="a83f6-267">This performance consideration is particularly important in a [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] app or [!INCLUDE[desktop_appname](~/includes/desktop-appname-md.md)] app where a time-consuming stream operation can block the UI thread and make your app appear as if it is not working.</span></span> <span data-ttu-id="a83f6-268">异步方法与 Visual Basic 和C#中的 `async` 和 `await` 关键字结合使用。</span><span class="sxs-lookup"><span data-stu-id="a83f6-268">The async methods are used in conjunction with the `async` and `await` keywords in Visual Basic and C#.</span></span>

<span data-ttu-id="a83f6-269">此方法通过将任何更改写入后备存储并关闭流以释放资源来释放 Deflate 流。</span><span class="sxs-lookup"><span data-stu-id="a83f6-269">This method disposes the Deflate stream by writing any changes to the backing store and closing the stream to release resources.</span></span>

<span data-ttu-id="a83f6-270">调用 `DisposeAsync` 允许出于其他目的重新分配 <xref:System.IO.Compression.DeflateStream> 所使用的资源。</span><span class="sxs-lookup"><span data-stu-id="a83f6-270">Calling `DisposeAsync` allows the resources used by the <xref:System.IO.Compression.DeflateStream> to be reallocated for other purposes.</span></span> <span data-ttu-id="a83f6-271">有关详细信息，请参阅[清理非托管资源](/dotnet/standard/garbage-collection/unmanaged)。</span><span class="sxs-lookup"><span data-stu-id="a83f6-271">For more information, see [Cleaning Up Unmanaged Resources](/dotnet/standard/garbage-collection/unmanaged).</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndRead">
      <MemberSignature Language="C#" Value="public override int EndRead (IAsyncResult asyncResult);" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 EndRead(class System.IAsyncResult asyncResult) cil managed" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.DeflateStream.EndRead(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function EndRead (asyncResult As IAsyncResult) As Integer" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int EndRead(IAsyncResult ^ asyncResult);" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1" />
      <MemberSignature Language="F#" Value="override this.EndRead : IAsyncResult -&gt; int" Usage="deflateStream.EndRead asyncResult" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1" />
      <MemberSignature Language="C#" Value="public override int EndRead (IAsyncResult async_result);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 EndRead(class System.IAsyncResult async_result) cil managed" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function EndRead (async_result As IAsyncResult) As Integer" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int EndRead(IAsyncResult ^ async_result);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="override this.EndRead : IAsyncResult -&gt; int" Usage="deflateStream.EndRead async_result" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="async_result" Type="System.IAsyncResult" Index="0" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="asyncResult"><span data-ttu-id="a83f6-272">对要完成的挂起异步请求的引用。</span><span class="sxs-lookup"><span data-stu-id="a83f6-272">The reference to the pending asynchronous request to finish.</span></span></param>
        <param name="async_result"><span data-ttu-id="a83f6-273">对要完成的挂起异步请求的引用。</span><span class="sxs-lookup"><span data-stu-id="a83f6-273">The reference to the pending asynchronous request to finish.</span></span></param>
        <summary><span data-ttu-id="a83f6-274">等待挂起的异步读取操作完成。</span><span class="sxs-lookup"><span data-stu-id="a83f6-274">Waits for the pending asynchronous read to complete.</span></span> <span data-ttu-id="a83f6-275">（请考虑改用 <see cref="M:System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)" /> 方法。）</span><span class="sxs-lookup"><span data-stu-id="a83f6-275">(Consider using the <see cref="M:System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)" /> method instead.)</span></span></summary>
        <returns><span data-ttu-id="a83f6-276">从流中读取的字节数，介于 0（零）和你请求的字节数之间。</span><span class="sxs-lookup"><span data-stu-id="a83f6-276">The number of bytes read from the stream, between 0 (zero) and the number of bytes you requested.</span></span> <span data-ttu-id="a83f6-277"><see cref="T:System.IO.Compression.DeflateStream" /> 仅在流的末尾返回零 (0)；否则将一直阻塞，只到至少有一个字节可用。</span><span class="sxs-lookup"><span data-stu-id="a83f6-277"><see cref="T:System.IO.Compression.DeflateStream" /> returns 0 only at the end of the stream; otherwise, it blocks until at least one byte is available.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a83f6-278">从 [!INCLUDE[net_v45](~/includes/net-v45-md.md)]开始，你可以通过使用 <xref:System.IO.Stream.ReadAsync%2A> 方法执行异步读取操作。</span><span class="sxs-lookup"><span data-stu-id="a83f6-278">Starting with the [!INCLUDE[net_v45](~/includes/net-v45-md.md)], you can perform asynchronous read operations by using the <xref:System.IO.Stream.ReadAsync%2A> method.</span></span> <span data-ttu-id="a83f6-279"><xref:System.IO.Compression.DeflateStream.EndRead%2A> 方法仍在 [!INCLUDE[net_v45](~/includes/net-v45-md.md)] 中可用以支持旧版代码;不过，您可以使用新的异步方法更轻松地实现异步 i/o 操作。</span><span class="sxs-lookup"><span data-stu-id="a83f6-279">The <xref:System.IO.Compression.DeflateStream.EndRead%2A> method is still available in the [!INCLUDE[net_v45](~/includes/net-v45-md.md)] to support legacy code; however, you can implement asynchronous I/O operations more easily by using the new async methods.</span></span> <span data-ttu-id="a83f6-280">有关详细信息，请参阅[异步文件 I/O](/dotnet/standard/io/asynchronous-file-i-o)。</span><span class="sxs-lookup"><span data-stu-id="a83f6-280">For more information, see [Asynchronous File I/O](/dotnet/standard/io/asynchronous-file-i-o).</span></span>
  
 <span data-ttu-id="a83f6-281">调用此方法以确定从流中读取的字节数。</span><span class="sxs-lookup"><span data-stu-id="a83f6-281">Call this method to determine how many bytes were read from the stream.</span></span> <span data-ttu-id="a83f6-282">可以调用此方法一次，以返回对 <xref:System.IO.Compression.DeflateStream.BeginRead%2A> 和 <xref:System.IO.Compression.DeflateStream.EndRead%2A>的调用之间的读取字节量。</span><span class="sxs-lookup"><span data-stu-id="a83f6-282">This method can be called once to return the amount of bytes read between calls to <xref:System.IO.Compression.DeflateStream.BeginRead%2A> and <xref:System.IO.Compression.DeflateStream.EndRead%2A>.</span></span>  
  
 <span data-ttu-id="a83f6-283">此方法将一直阻塞，直到 I/O 操作已完成。</span><span class="sxs-lookup"><span data-stu-id="a83f6-283">This method blocks until the I/O operation has completed.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a83f6-284"><paramref name="asyncResult" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="a83f6-284"><paramref name="asyncResult" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a83f6-285"><paramref name="asyncResult" /> 不源于当前流的 <see cref="M:System.IO.Compression.DeflateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="a83f6-285"><paramref name="asyncResult" /> did not originate from a <see cref="M:System.IO.Compression.DeflateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> method on the current stream.</span></span></exception>
        <exception cref="T:System.SystemException"><span data-ttu-id="a83f6-286">在调用 <see cref="M:System.Threading.WaitHandle.WaitOne" /> 期间引发了异常。</span><span class="sxs-lookup"><span data-stu-id="a83f6-286">An exception was thrown during a call to <see cref="M:System.Threading.WaitHandle.WaitOne" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a83f6-287">结束调用无效，原因是该流的异步读取操作尚未完成。</span><span class="sxs-lookup"><span data-stu-id="a83f6-287">The end call is invalid because asynchronous read operations for this stream are not yet complete.</span></span>

<span data-ttu-id="a83f6-288">- 或 -</span><span class="sxs-lookup"><span data-stu-id="a83f6-288">-or-</span></span>

<span data-ttu-id="a83f6-289">此流为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="a83f6-289">The stream is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="EndWrite">
      <MemberSignature Language="C#" Value="public override void EndWrite (IAsyncResult asyncResult);" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void EndWrite(class System.IAsyncResult asyncResult) cil managed" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.DeflateStream.EndWrite(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub EndWrite (asyncResult As IAsyncResult)" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void EndWrite(IAsyncResult ^ asyncResult);" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1" />
      <MemberSignature Language="F#" Value="override this.EndWrite : IAsyncResult -&gt; unit" Usage="deflateStream.EndWrite asyncResult" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1" />
      <MemberSignature Language="C#" Value="public override void EndWrite (IAsyncResult async_result);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void EndWrite(class System.IAsyncResult async_result) cil managed" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub EndWrite (async_result As IAsyncResult)" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void EndWrite(IAsyncResult ^ async_result);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="override this.EndWrite : IAsyncResult -&gt; unit" Usage="deflateStream.EndWrite async_result" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="async_result" Type="System.IAsyncResult" Index="0" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="asyncResult"><span data-ttu-id="a83f6-290">对未完成的异步 I/O 请求的引用。</span><span class="sxs-lookup"><span data-stu-id="a83f6-290">A reference to the outstanding asynchronous I/O request.</span></span></param>
        <param name="async_result"><span data-ttu-id="a83f6-291">对未完成的异步 I/O 请求的引用。</span><span class="sxs-lookup"><span data-stu-id="a83f6-291">A reference to the outstanding asynchronous I/O request.</span></span></param>
        <summary><span data-ttu-id="a83f6-292">结束执行异步写入操作。</span><span class="sxs-lookup"><span data-stu-id="a83f6-292">Ends an asynchronous write operation.</span></span> <span data-ttu-id="a83f6-293">（请考虑改用 <see cref="M:System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)" /> 方法。）</span><span class="sxs-lookup"><span data-stu-id="a83f6-293">(Consider using the <see cref="M:System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)" /> method instead.)</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a83f6-294">从 [!INCLUDE[net_v45](~/includes/net-v45-md.md)]开始，可以通过使用 <xref:System.IO.Stream.WriteAsync%2A> 方法执行异步写入操作。</span><span class="sxs-lookup"><span data-stu-id="a83f6-294">Starting with the [!INCLUDE[net_v45](~/includes/net-v45-md.md)], you can perform asynchronous write operations by using the <xref:System.IO.Stream.WriteAsync%2A> method.</span></span> <span data-ttu-id="a83f6-295"><xref:System.IO.Compression.DeflateStream.EndWrite%2A> 方法仍在 [!INCLUDE[net_v45](~/includes/net-v45-md.md)] 中可用以支持旧版代码;不过，您可以使用新的异步方法更轻松地实现异步 i/o 操作。</span><span class="sxs-lookup"><span data-stu-id="a83f6-295">The <xref:System.IO.Compression.DeflateStream.EndWrite%2A> method is still available in the [!INCLUDE[net_v45](~/includes/net-v45-md.md)] to support legacy code; however, you can implement asynchronous I/O operations more easily by using the new async methods.</span></span> <span data-ttu-id="a83f6-296">有关详细信息，请参阅[异步文件 I/O](/dotnet/standard/io/asynchronous-file-i-o)。</span><span class="sxs-lookup"><span data-stu-id="a83f6-296">For more information, see [Asynchronous File I/O](/dotnet/standard/io/asynchronous-file-i-o).</span></span>
  
 <span data-ttu-id="a83f6-297">对于每次调用 <xref:System.IO.Compression.DeflateStream.BeginWrite%2A> 方法，只需调用一次 <xref:System.IO.Compression.DeflateStream.EndWrite%2A>。</span><span class="sxs-lookup"><span data-stu-id="a83f6-297"><xref:System.IO.Compression.DeflateStream.EndWrite%2A> must be called only once for every call to the <xref:System.IO.Compression.DeflateStream.BeginWrite%2A> method.</span></span>  
  
 <span data-ttu-id="a83f6-298">此方法将一直阻塞，直到 I/O 操作已完成。</span><span class="sxs-lookup"><span data-stu-id="a83f6-298">This method blocks until the I/O operation has completed.</span></span> <span data-ttu-id="a83f6-299">在异步写入请求期间发生的错误（例如，i/o 请求过程中的磁盘故障）将在线程池线程上发生，并在调用 <xref:System.IO.Compression.DeflateStream.EndWrite%2A>时变为可见。</span><span class="sxs-lookup"><span data-stu-id="a83f6-299">Errors that occur during an asynchronous write request, such as a disk failure during the I/O request, occur on the thread pool thread and become visible upon a call to <xref:System.IO.Compression.DeflateStream.EndWrite%2A>.</span></span> <span data-ttu-id="a83f6-300">调用 <xref:System.IO.Compression.DeflateStream.EndWrite%2A>时，线程池线程引发的异常将不可见。</span><span class="sxs-lookup"><span data-stu-id="a83f6-300">Exceptions thrown by the thread pool thread will not be visible when calling <xref:System.IO.Compression.DeflateStream.EndWrite%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a83f6-301"><paramref name="asyncResult" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="a83f6-301"><paramref name="asyncResult" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a83f6-302"><paramref name="asyncResult" /> 不源于当前流的 <see cref="M:System.IO.Compression.DeflateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="a83f6-302"><paramref name="asyncResult" /> did not originate from a <see cref="M:System.IO.Compression.DeflateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> method on the current stream.</span></span></exception>
        <exception cref="T:System.Exception"><span data-ttu-id="a83f6-303">在调用 <see cref="M:System.Threading.WaitHandle.WaitOne" /> 期间引发了异常。</span><span class="sxs-lookup"><span data-stu-id="a83f6-303">An exception was thrown during a call to <see cref="M:System.Threading.WaitHandle.WaitOne" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a83f6-304">此流为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="a83f6-304">The stream is <see langword="null" />.</span></span>

<span data-ttu-id="a83f6-305">- 或 -</span><span class="sxs-lookup"><span data-stu-id="a83f6-305">-or-</span></span>

<span data-ttu-id="a83f6-306">结束写入调用无效。</span><span class="sxs-lookup"><span data-stu-id="a83f6-306">The end write call is invalid.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public override void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.DeflateStream.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Flush();" />
      <MemberSignature Language="F#" Value="override this.Flush : unit -&gt; unit" Usage="deflateStream.Flush " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a83f6-307">此方法的当前实现没有任何功能。</span><span class="sxs-lookup"><span data-stu-id="a83f6-307">The current implementation of this method has no functionality.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a83f6-308">如果压缩模式设置为 <xref:System.IO.Compression.CompressionMode.Compress>，则刷新内部缓冲区。</span><span class="sxs-lookup"><span data-stu-id="a83f6-308">Flushes the internal buffer if the compression mode is set to <xref:System.IO.Compression.CompressionMode.Compress>.</span></span>
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="a83f6-309">流已关闭。</span><span class="sxs-lookup"><span data-stu-id="a83f6-309">The stream is closed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="FlushAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task FlushAsync (System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task FlushAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.DeflateStream.FlushAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function FlushAsync (cancellationToken As CancellationToken) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task ^ FlushAsync(System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="override this.FlushAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="deflateStream.FlushAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="0" FrameworkAlternate="netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"><span data-ttu-id="a83f6-310">要监视的取消请求标记。</span><span class="sxs-lookup"><span data-stu-id="a83f6-310">The token to monitor for cancellation requests.</span></span> <span data-ttu-id="a83f6-311">默认值是 <see cref="P:System.Threading.CancellationToken.None" />。</span><span class="sxs-lookup"><span data-stu-id="a83f6-311">The default value is <see cref="P:System.Threading.CancellationToken.None" />.</span></span></param>
        <summary><span data-ttu-id="a83f6-312">异步清理此 Deflate 流的所有缓冲区，并使所有缓冲数据写入基础设备，并且监控取消请求。</span><span class="sxs-lookup"><span data-stu-id="a83f6-312">Asynchronously clears all buffers for this Deflate stream, causes any buffered data to be written to the underlying device, and monitors cancellation requests.</span></span></summary>
        <returns><span data-ttu-id="a83f6-313">表示异步刷新操作的任务。</span><span class="sxs-lookup"><span data-stu-id="a83f6-313">A task that represents the asynchronous flush operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="a83f6-314">如果在操作完成前取消该操作，则返回的任务将包含 <xref:System.Threading.Tasks.Task.Status?displayProperty=nameWithType> 属性的 <xref:System.Threading.Tasks.TaskStatus.Canceled?displayProperty=nameWithType> 值。</span><span class="sxs-lookup"><span data-stu-id="a83f6-314">If the operation is canceled before it completes, the returned task contains the <xref:System.Threading.Tasks.TaskStatus.Canceled?displayProperty=nameWithType> value for the <xref:System.Threading.Tasks.Task.Status?displayProperty=nameWithType> property.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Length">
      <MemberSignature Language="C#" Value="public override long Length { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 Length" />
      <MemberSignature Language="DocId" Value="P:System.IO.Compression.DeflateStream.Length" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Length As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property long Length { long get(); };" />
      <MemberSignature Language="F#" Value="member this.Length : int64" Usage="System.IO.Compression.DeflateStream.Length" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a83f6-315">此属性不受支持，并且总是引发 <see cref="T:System.NotSupportedException" />。</span><span class="sxs-lookup"><span data-stu-id="a83f6-315">This property is not supported and always throws a <see cref="T:System.NotSupportedException" />.</span></span></summary>
        <value><span data-ttu-id="a83f6-316">一个长值。</span><span class="sxs-lookup"><span data-stu-id="a83f6-316">A long value.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="a83f6-317">此流中不支持此属性。</span><span class="sxs-lookup"><span data-stu-id="a83f6-317">This property is not supported on this stream.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Position">
      <MemberSignature Language="C#" Value="public override long Position { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 Position" />
      <MemberSignature Language="DocId" Value="P:System.IO.Compression.DeflateStream.Position" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Position As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property long Position { long get(); void set(long value); };" />
      <MemberSignature Language="F#" Value="member this.Position : int64 with get, set" Usage="System.IO.Compression.DeflateStream.Position" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a83f6-318">此属性不受支持，并且总是引发 <see cref="T:System.NotSupportedException" />。</span><span class="sxs-lookup"><span data-stu-id="a83f6-318">This property is not supported and always throws a <see cref="T:System.NotSupportedException" />.</span></span></summary>
        <value><span data-ttu-id="a83f6-319">一个长值。</span><span class="sxs-lookup"><span data-stu-id="a83f6-319">A long value.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="a83f6-320">此流中不支持此属性。</span><span class="sxs-lookup"><span data-stu-id="a83f6-320">This property is not supported on this stream.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public override int Read (Span&lt;byte&gt; buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 Read(valuetype System.Span`1&lt;unsigned int8&gt; buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.DeflateStream.Read(System.Span{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Read (buffer As Span(Of Byte)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int Read(Span&lt;System::Byte&gt; buffer);" />
      <MemberSignature Language="F#" Value="override this.Read : Span&lt;byte&gt; -&gt; int" Usage="deflateStream.Read buffer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Span&lt;System.Byte&gt;" Index="0" FrameworkAlternate="netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="a83f6-321">内存的区域。</span><span class="sxs-lookup"><span data-stu-id="a83f6-321">A region of memory.</span></span> <span data-ttu-id="a83f6-322">当此方法返回时，此区域的内容将替换为从当前源读取的字节。</span><span class="sxs-lookup"><span data-stu-id="a83f6-322">When this method returns, the contents of this region are replaced by the bytes read from the current source.</span></span></param>
        <summary><span data-ttu-id="a83f6-323">将当前 Deflate 流中的一个字节序列读取到某字节范围，并按读取的字节数向前移动 Deflate 流中的位置。</span><span class="sxs-lookup"><span data-stu-id="a83f6-323">Reads a sequence of bytes from the current Deflate stream into a byte span and advances the position within the Deflate stream by the number of bytes read.</span></span></summary>
        <returns><span data-ttu-id="a83f6-324">读入缓冲区中的总字节数。</span><span class="sxs-lookup"><span data-stu-id="a83f6-324">The total number of bytes read into the buffer.</span></span> <span data-ttu-id="a83f6-325">如果很多字节当前不可用，则这可小于在缓冲区中分配的字节数；如果已到达流结尾，则为零 (0)。</span><span class="sxs-lookup"><span data-stu-id="a83f6-325">This can be less than the number of bytes allocated in the buffer if that many bytes are not currently available, or zero (0) if the end of the stream has been reached.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="a83f6-326">使用 <xref:System.IO.Compression.DeflateStream.CanRead%2A> 属性可确定当前实例是否支持读取。</span><span class="sxs-lookup"><span data-stu-id="a83f6-326">Use the <xref:System.IO.Compression.DeflateStream.CanRead%2A> property to determine whether the current instance supports reading.</span></span> <span data-ttu-id="a83f6-327">使用 <xref:System.IO.Compression.DeflateStream.ReadAsync%2A> 方法从当前流中异步读取。</span><span class="sxs-lookup"><span data-stu-id="a83f6-327">Use the <xref:System.IO.Compression.DeflateStream.ReadAsync%2A> method to read asynchronously from the current stream.</span></span>

<span data-ttu-id="a83f6-328">此方法从当前流中读取最多 `buffer.Length` 个字节，并将它们存储在 `buffer`中。</span><span class="sxs-lookup"><span data-stu-id="a83f6-328">This method read a maximum of `buffer.Length` bytes from the current stream and store them in `buffer`.</span></span> <span data-ttu-id="a83f6-329">Deflate 流中的当前位置由读取的字节数提前，但是，如果发生异常，则 Deflate 流中的当前位置将保持不变。</span><span class="sxs-lookup"><span data-stu-id="a83f6-329">The current position within the Deflate stream is advanced by the number of bytes read; however, if an exception occurs, the current position within the Deflate stream remains unchanged.</span></span> <span data-ttu-id="a83f6-330">如果没有数据可用，则此方法将被阻止，直到至少有一个字节的数据可供读取。</span><span class="sxs-lookup"><span data-stu-id="a83f6-330">This method will block until at least one byte of data can be read, in the event that no data is available.</span></span> <span data-ttu-id="a83f6-331">仅当流中没有更多的数据，并且不需要更多的数据时（例如闭合套接字或文件尾），`Read` 才返回0。</span><span class="sxs-lookup"><span data-stu-id="a83f6-331">`Read` returns 0 only when there is no more data in the stream and no more is expected (such as a closed socket or end of file).</span></span> <span data-ttu-id="a83f6-332">即使尚未到达流的末尾，方法也可以随意返回比所请求的字节更少的字节。</span><span class="sxs-lookup"><span data-stu-id="a83f6-332">The method is free to return fewer bytes than requested even if the end of the stream has not been reached.</span></span>

 <span data-ttu-id="a83f6-333">使用 <xref:System.IO.BinaryReader> 读取基元数据类型。</span><span class="sxs-lookup"><span data-stu-id="a83f6-333">Use <xref:System.IO.BinaryReader> for reading primitive data types.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public override int Read (byte[] array, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 Read(unsigned int8[] array, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.DeflateStream.Read(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Read (array As Byte(), offset As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int Read(cli::array &lt;System::Byte&gt; ^ array, int offset, int count);" />
      <MemberSignature Language="F#" Value="override this.Read : byte[] * int * int -&gt; int" Usage="deflateStream.Read (array, offset, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="a83f6-334">用于存储解压缩的字节的数组。</span><span class="sxs-lookup"><span data-stu-id="a83f6-334">The array to store decompressed bytes.</span></span></param>
        <param name="offset"><span data-ttu-id="a83f6-335"><paramref name="array" /> 中的字节偏移量，将在此处放置读取的字节。</span><span class="sxs-lookup"><span data-stu-id="a83f6-335">The byte offset in <paramref name="array" /> at which the read bytes will be placed.</span></span></param>
        <param name="count"><span data-ttu-id="a83f6-336">最多要读取的解压缩字节数。</span><span class="sxs-lookup"><span data-stu-id="a83f6-336">The maximum number of decompressed bytes to read.</span></span></param>
        <summary><span data-ttu-id="a83f6-337">将若干解压缩的字节读入指定的字节数组。</span><span class="sxs-lookup"><span data-stu-id="a83f6-337">Reads a number of decompressed bytes into the specified byte array.</span></span></summary>
        <returns><span data-ttu-id="a83f6-338">已读入到字节数组中的字节数。</span><span class="sxs-lookup"><span data-stu-id="a83f6-338">The number of bytes that were read into the byte array.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a83f6-339">下面的示例演示如何使用 <xref:System.IO.Compression.DeflateStream.Read%2A> 和 <xref:System.IO.Compression.DeflateStream.Write%2A> 方法压缩和解压缩字节。</span><span class="sxs-lookup"><span data-stu-id="a83f6-339">The following example shows how to compress and decompress bytes by using the <xref:System.IO.Compression.DeflateStream.Read%2A> and <xref:System.IO.Compression.DeflateStream.Write%2A> methods.</span></span>  
  
 [!code-csharp[System.IO.Compression.DeflateStream#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.compression.deflatestream/cs/program3.cs#3)]
 [!code-vb[System.IO.Compression.DeflateStream#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.compression.deflatestream/vb/program3.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a83f6-340"><paramref name="array" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="a83f6-340"><paramref name="array" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a83f6-341">创建对象时 <see cref="T:System.IO.Compression.CompressionMode" /> 值是 <see langword="Compress" />。</span><span class="sxs-lookup"><span data-stu-id="a83f6-341">The <see cref="T:System.IO.Compression.CompressionMode" /> value was <see langword="Compress" /> when the object was created.</span></span>  
  
<span data-ttu-id="a83f6-342">- 或 -</span><span class="sxs-lookup"><span data-stu-id="a83f6-342">-or-</span></span> 
<span data-ttu-id="a83f6-343">基础流不支持读取。</span><span class="sxs-lookup"><span data-stu-id="a83f6-343">The underlying stream does not support reading.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="a83f6-344"><paramref name="offset" /> 或 <paramref name="count" /> 小于零。</span><span class="sxs-lookup"><span data-stu-id="a83f6-344"><paramref name="offset" /> or <paramref name="count" /> is less than zero.</span></span>  
  
<span data-ttu-id="a83f6-345">- 或 -</span><span class="sxs-lookup"><span data-stu-id="a83f6-345">-or-</span></span> 
 <span data-ttu-id="a83f6-346"><paramref name="array" /> 长度减去索引起始点小于 <paramref name="count" />。</span><span class="sxs-lookup"><span data-stu-id="a83f6-346"><paramref name="array" /> length minus the index starting point is less than <paramref name="count" />.</span></span></exception>
        <exception cref="T:System.IO.InvalidDataException"><span data-ttu-id="a83f6-347">数据的格式无效。</span><span class="sxs-lookup"><span data-stu-id="a83f6-347">The data is in an invalid format.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="a83f6-348">流已关闭。</span><span class="sxs-lookup"><span data-stu-id="a83f6-348">The stream is closed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReadAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.ValueTask&lt;int&gt; ReadAsync (Memory&lt;byte&gt; buffer, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.Threading.Tasks.ValueTask`1&lt;int32&gt; ReadAsync(valuetype System.Memory`1&lt;unsigned int8&gt; buffer, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.DeflateStream.ReadAsync(System.Memory{System.Byte},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadAsync (buffer As Memory(Of Byte), Optional cancellationToken As CancellationToken = null) As ValueTask(Of Integer)" />
      <MemberSignature Language="F#" Value="override this.ReadAsync : Memory&lt;byte&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.ValueTask&lt;int&gt;" Usage="deflateStream.ReadAsync (buffer, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Memory&lt;System.Byte&gt;" Index="0" FrameworkAlternate="netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="a83f6-349">要将数据写入的内存区域。</span><span class="sxs-lookup"><span data-stu-id="a83f6-349">The region of memory to write the data into.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="a83f6-350">要监视的取消请求标记。</span><span class="sxs-lookup"><span data-stu-id="a83f6-350">The token to monitor for cancellation requests.</span></span> <span data-ttu-id="a83f6-351">默认值是 <see cref="P:System.Threading.CancellationToken.None" />。</span><span class="sxs-lookup"><span data-stu-id="a83f6-351">The default value is <see cref="P:System.Threading.CancellationToken.None" />.</span></span></param>
        <summary><span data-ttu-id="a83f6-352">从当前 Deflate 流异步读取字节的序列，将其写入字节内存范围，按读取的字节数向前移动 Deflate 流中的位置，并监视取消请求。</span><span class="sxs-lookup"><span data-stu-id="a83f6-352">Asynchronously reads a sequence of bytes from the current Deflate stream, writes them to a byte memory range, advances the position within the Deflate stream by the number of bytes read, and monitors cancellation requests.</span></span></summary>
        <returns><span data-ttu-id="a83f6-353">一个表示异步读取操作并将读取的总字节数包装到缓冲区中的任务。</span><span class="sxs-lookup"><span data-stu-id="a83f6-353">A task that represents the asynchronous read operation, which wraps the total number of bytes read into the buffer.</span></span> <span data-ttu-id="a83f6-354">如果很多字节当前不可用，则结果值可小于在缓冲区中分配的字节数；如果已到达 Deflate 流结尾，则结果值可以为 0（零）。</span><span class="sxs-lookup"><span data-stu-id="a83f6-354">The result value can be less than the number of bytes allocated in the buffer if that many bytes are not currently available, or it can be 0 (zero) if the end of the Deflate stream has been reached.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="a83f6-355">利用 `ReadAsync` 方法，你可以在不阻塞主线程的情况下执行占用大量资源的 i/o 操作。</span><span class="sxs-lookup"><span data-stu-id="a83f6-355">The `ReadAsync` method enables you to perform resource-intensive I/O operations without blocking the main thread.</span></span> <span data-ttu-id="a83f6-356">在 [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] 应用或 [!INCLUDE[desktop_appname](~/includes/desktop-appname-md.md)] 应用中一个耗时的流操作可能阻塞 UI 线程并让您的应用看起来好像不工作时，这种性能的考虑就显得尤为重要了。</span><span class="sxs-lookup"><span data-stu-id="a83f6-356">This performance consideration is particularly important in a [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] app or [!INCLUDE[desktop_appname](~/includes/desktop-appname-md.md)] app where a time-consuming stream operation can block the UI thread and make your app appear as if it is not working.</span></span> <span data-ttu-id="a83f6-357">异步方法与 Visual Basic 和C#中的 `async` 和 `await` 关键字结合使用。</span><span class="sxs-lookup"><span data-stu-id="a83f6-357">The async methods are used in conjunction with the `async` and `await` keywords in Visual Basic and C#.</span></span>

<span data-ttu-id="a83f6-358">使用 <xref:System.IO.Compression.DeflateStream.CanRead%2A> 属性可确定当前实例是否支持读取。</span><span class="sxs-lookup"><span data-stu-id="a83f6-358">Use the <xref:System.IO.Compression.DeflateStream.CanRead%2A> property to determine whether the current instance supports reading.</span></span>

<span data-ttu-id="a83f6-359">如果在操作完成前取消该操作，则返回的任务将包含 <xref:System.Threading.Tasks.Task.Status?displayProperty=nameWithType> 属性的 <xref:System.Threading.Tasks.TaskStatus.Canceled?displayProperty=nameWithType> 值。</span><span class="sxs-lookup"><span data-stu-id="a83f6-359">If the operation is canceled before it completes, the returned task contains the <xref:System.Threading.Tasks.TaskStatus.Canceled?displayProperty=nameWithType> value for the <xref:System.Threading.Tasks.Task.Status?displayProperty=nameWithType> property.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task&lt;int&gt; ReadAsync (byte[] array, int offset, int count, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task`1&lt;int32&gt; ReadAsync(unsigned int8[] array, int32 offset, int32 count, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.DeflateStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadAsync (array As Byte(), offset As Integer, count As Integer, cancellationToken As CancellationToken) As Task(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task&lt;int&gt; ^ ReadAsync(cli::array &lt;System::Byte&gt; ^ array, int offset, int count, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="override this.ReadAsync : byte[] * int * int * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;int&gt;" Usage="deflateStream.ReadAsync (array, offset, count, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Byte[]" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="offset" Type="System.Int32" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="count" Type="System.Int32" Index="2" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="3" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="a83f6-360">数据写入的缓冲区。</span><span class="sxs-lookup"><span data-stu-id="a83f6-360">The buffer to write the data into.</span></span></param>
        <param name="offset"><span data-ttu-id="a83f6-361"><paramref name="array" /> 中的字节偏移量，从该偏移量开始写入从 Deflate 流中读取的数据。</span><span class="sxs-lookup"><span data-stu-id="a83f6-361">The byte offset in <paramref name="array" /> at which to begin writing data from the Deflate stream.</span></span></param>
        <param name="count"><span data-ttu-id="a83f6-362">要读取的最大字节数。</span><span class="sxs-lookup"><span data-stu-id="a83f6-362">The maximum number of bytes to read.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="a83f6-363">要监视的取消请求标记。</span><span class="sxs-lookup"><span data-stu-id="a83f6-363">The token to monitor for cancellation requests.</span></span> <span data-ttu-id="a83f6-364">默认值是 <see cref="P:System.Threading.CancellationToken.None" />。</span><span class="sxs-lookup"><span data-stu-id="a83f6-364">The default value is <see cref="P:System.Threading.CancellationToken.None" />.</span></span></param>
        <summary><span data-ttu-id="a83f6-365">从当前 Deflate 流异步读取字节的序列，将其写入字节数组，按读取的字节数向前移动 Deflate 流中的位置，并监视取消请求。</span><span class="sxs-lookup"><span data-stu-id="a83f6-365">Asynchronously reads a sequence of bytes from the current Deflate stream, writes them to a byte array, advances the position within the Deflate stream by the number of bytes read, and monitors cancellation requests.</span></span></summary>
        <returns><span data-ttu-id="a83f6-366">一个表示异步读取操作（将读取的总字节数包装到 <paramref name="array" /> 中）的任务。</span><span class="sxs-lookup"><span data-stu-id="a83f6-366">A task that represents the asynchronous read operation, which wraps the total number of bytes read into the <paramref name="array" />.</span></span> <span data-ttu-id="a83f6-367">如果当前可用字节数少于所请求的字节数，则该结果值可小于所请求的字节数；如果已到达 Deflate 流结尾时，则为 0（零）。</span><span class="sxs-lookup"><span data-stu-id="a83f6-367">The result value can be less than the number of bytes requested if the number of bytes currently available is less than the requested number, or it can be 0 (zero) if the end of the Deflate stream has been reached.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[
  
## Remarks

<span data-ttu-id="a83f6-368">利用 `ReadAsync` 方法，你可以在不阻塞主线程的情况下执行占用大量资源的 i/o 操作。</span><span class="sxs-lookup"><span data-stu-id="a83f6-368">The `ReadAsync` method enables you to perform resource-intensive I/O operations without blocking the main thread.</span></span> <span data-ttu-id="a83f6-369">在 [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] 应用或 [!INCLUDE[desktop_appname](~/includes/desktop-appname-md.md)] 应用中一个耗时的流操作可能阻塞 UI 线程并让您的应用看起来好像不工作时，这种性能的考虑就显得尤为重要了。</span><span class="sxs-lookup"><span data-stu-id="a83f6-369">This performance consideration is particularly important in a [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] app or [!INCLUDE[desktop_appname](~/includes/desktop-appname-md.md)] app where a time-consuming stream operation can block the UI thread and make your app appear as if it is not working.</span></span> <span data-ttu-id="a83f6-370">异步方法与 Visual Basic 和C#中的 `async` 和 `await` 关键字结合使用。</span><span class="sxs-lookup"><span data-stu-id="a83f6-370">The async methods are used in conjunction with the `async` and `await` keywords in Visual Basic and C#.</span></span>

<span data-ttu-id="a83f6-371">使用 <xref:System.IO.Compression.DeflateStream.CanRead%2A> 属性可确定当前实例是否支持读取。</span><span class="sxs-lookup"><span data-stu-id="a83f6-371">Use the <xref:System.IO.Compression.DeflateStream.CanRead%2A> property to determine whether the current instance supports reading.</span></span>

<span data-ttu-id="a83f6-372">如果在操作完成前取消该操作，则返回的任务将包含 <xref:System.Threading.Tasks.Task.Status?displayProperty=nameWithType> 属性的 <xref:System.Threading.Tasks.TaskStatus.Canceled?displayProperty=nameWithType> 值。</span><span class="sxs-lookup"><span data-stu-id="a83f6-372">If the operation is canceled before it completes, the returned task contains the <xref:System.Threading.Tasks.TaskStatus.Canceled?displayProperty=nameWithType> value for the <xref:System.Threading.Tasks.Task.Status?displayProperty=nameWithType> property.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadByte">
      <MemberSignature Language="C#" Value="public override int ReadByte ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 ReadByte() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.DeflateStream.ReadByte" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadByte () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int ReadByte();" />
      <MemberSignature Language="F#" Value="override this.ReadByte : unit -&gt; int" Usage="deflateStream.ReadByte " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a83f6-373">从 Deflate 流中读取一个字节，并将流内的位置向前提升一个字节，或者如果已到达 Deflate 流结尾，则返回 -1。</span><span class="sxs-lookup"><span data-stu-id="a83f6-373">Reads a byte from the Deflate stream and advances the position within the stream by one byte, or returns -1 if at the end of the Deflate stream.</span></span></summary>
        <returns><span data-ttu-id="a83f6-374">强制转换为 <see cref="T:System.Int32" /> 的无符号字节，如果到达流的末尾，则为 -1。</span><span class="sxs-lookup"><span data-stu-id="a83f6-374">The unsigned byte cast to an <see cref="T:System.Int32" />, or -1 if at the end of the stream.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="a83f6-375">使用 <xref:System.IO.Compression.DeflateStream.CanRead%2A> 属性可确定当前实例是否支持读取。</span><span class="sxs-lookup"><span data-stu-id="a83f6-375">Use the <xref:System.IO.Compression.DeflateStream.CanRead%2A> property to determine whether the current instance supports reading.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Seek">
      <MemberSignature Language="C#" Value="public override long Seek (long offset, System.IO.SeekOrigin origin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int64 Seek(int64 offset, valuetype System.IO.SeekOrigin origin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.DeflateStream.Seek(System.Int64,System.IO.SeekOrigin)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Seek (offset As Long, origin As SeekOrigin) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override long Seek(long offset, System::IO::SeekOrigin origin);" />
      <MemberSignature Language="F#" Value="override this.Seek : int64 * System.IO.SeekOrigin -&gt; int64" Usage="deflateStream.Seek (offset, origin)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.Int64" />
        <Parameter Name="origin" Type="System.IO.SeekOrigin" />
      </Parameters>
      <Docs>
        <param name="offset"><span data-ttu-id="a83f6-376">流中的位置。</span><span class="sxs-lookup"><span data-stu-id="a83f6-376">The location in the stream.</span></span></param>
        <param name="origin"><span data-ttu-id="a83f6-377"><see cref="T:System.IO.SeekOrigin" /> 值之一。</span><span class="sxs-lookup"><span data-stu-id="a83f6-377">One of the <see cref="T:System.IO.SeekOrigin" /> values.</span></span></param>
        <summary><span data-ttu-id="a83f6-378">此操作不受支持，它总是引发 <see cref="T:System.NotSupportedException" />。</span><span class="sxs-lookup"><span data-stu-id="a83f6-378">This operation is not supported and always throws a <see cref="T:System.NotSupportedException" />.</span></span></summary>
        <returns><span data-ttu-id="a83f6-379">一个长值。</span><span class="sxs-lookup"><span data-stu-id="a83f6-379">A long value.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="a83f6-380">此流中不支持此属性。</span><span class="sxs-lookup"><span data-stu-id="a83f6-380">This property is not supported on this stream.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SetLength">
      <MemberSignature Language="C#" Value="public override void SetLength (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void SetLength(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.DeflateStream.SetLength(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub SetLength (value As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void SetLength(long value);" />
      <MemberSignature Language="F#" Value="override this.SetLength : int64 -&gt; unit" Usage="deflateStream.SetLength value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="a83f6-381">流的长度。</span><span class="sxs-lookup"><span data-stu-id="a83f6-381">The length of the stream.</span></span></param>
        <summary><span data-ttu-id="a83f6-382">此操作不受支持，它总是引发 <see cref="T:System.NotSupportedException" />。</span><span class="sxs-lookup"><span data-stu-id="a83f6-382">This operation is not supported and always throws a <see cref="T:System.NotSupportedException" />.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="a83f6-383">此流中不支持此属性。</span><span class="sxs-lookup"><span data-stu-id="a83f6-383">This property is not supported on this stream.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (ReadOnlySpan&lt;byte&gt; buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.DeflateStream.Write(System.ReadOnlySpan{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (buffer As ReadOnlySpan(Of Byte))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(ReadOnlySpan&lt;System::Byte&gt; buffer);" />
      <MemberSignature Language="F#" Value="override this.Write : ReadOnlySpan&lt;byte&gt; -&gt; unit" Usage="deflateStream.Write buffer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.ReadOnlySpan&lt;System.Byte&gt;" Index="0" FrameworkAlternate="netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="a83f6-384">内存的区域。</span><span class="sxs-lookup"><span data-stu-id="a83f6-384">A region of memory.</span></span> <span data-ttu-id="a83f6-385">此方法将此区域的内容复制到当前 Deflate 流。</span><span class="sxs-lookup"><span data-stu-id="a83f6-385">This method copies the contents of this region to the current Deflate stream.</span></span></param>
        <summary><span data-ttu-id="a83f6-386">将字节序列写入当前 Deflate 流，并按写入的字节数将 Deflate 流内的当前位置向前移动。</span><span class="sxs-lookup"><span data-stu-id="a83f6-386">Writes a sequence of bytes to the current Deflate stream and advances the current position within this Deflate stream by the number of bytes written.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="a83f6-387">使用 <xref:System.IO.Compression.DeflateStream.CanWrite%2A> 属性可确定当前实例是否支持写入。</span><span class="sxs-lookup"><span data-stu-id="a83f6-387">Use the <xref:System.IO.Compression.DeflateStream.CanWrite%2A> property to determine whether the current instance supports writing.</span></span> <span data-ttu-id="a83f6-388">使用 <xref:System.IO.Compression.DeflateStream.WriteAsync%2A> 方法异步写入当前流。</span><span class="sxs-lookup"><span data-stu-id="a83f6-388">Use the <xref:System.IO.Compression.DeflateStream.WriteAsync%2A> method to write asynchronously to the current stream.</span></span>

<span data-ttu-id="a83f6-389">如果写入操作成功，Deflate 流中的位置将按写入的字节数向前移动。</span><span class="sxs-lookup"><span data-stu-id="a83f6-389">If the write operation is successful, the position within the Deflate stream advances by the number of bytes written.</span></span> <span data-ttu-id="a83f6-390">如果发生异常，则 Deflate 流中的位置将保持不变。</span><span class="sxs-lookup"><span data-stu-id="a83f6-390">If an exception occurs, the position within the Deflate stream remains unchanged.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (byte[] array, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(unsigned int8[] array, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.DeflateStream.Write(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (array As Byte(), offset As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(cli::array &lt;System::Byte&gt; ^ array, int offset, int count);" />
      <MemberSignature Language="F#" Value="override this.Write : byte[] * int * int -&gt; unit" Usage="deflateStream.Write (array, offset, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="a83f6-391">包含要压缩的数据的缓冲区。</span><span class="sxs-lookup"><span data-stu-id="a83f6-391">The buffer that contains the data to compress.</span></span></param>
        <param name="offset"><span data-ttu-id="a83f6-392"><paramref name="array" /> 中的字节偏移量，将在此处读取字节。</span><span class="sxs-lookup"><span data-stu-id="a83f6-392">The byte offset in <paramref name="array" /> from which the bytes will be read.</span></span></param>
        <param name="count"><span data-ttu-id="a83f6-393">要写入的最大字节数。</span><span class="sxs-lookup"><span data-stu-id="a83f6-393">The maximum number of bytes to write.</span></span></param>
        <summary><span data-ttu-id="a83f6-394">从指定的字节数组中将压缩的字节写入基础流。</span><span class="sxs-lookup"><span data-stu-id="a83f6-394">Writes compressed bytes to the underlying stream from the specified byte array.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a83f6-395">下面的示例演示如何使用 <xref:System.IO.Compression.DeflateStream.Read%2A> 和 <xref:System.IO.Compression.DeflateStream.Write%2A> 方法压缩和解压缩字节。</span><span class="sxs-lookup"><span data-stu-id="a83f6-395">The following example shows how to compress and decompress bytes by using the <xref:System.IO.Compression.DeflateStream.Read%2A> and <xref:System.IO.Compression.DeflateStream.Write%2A> methods.</span></span>  
  
 [!code-csharp[System.IO.Compression.DeflateStream#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.compression.deflatestream/cs/program3.cs#3)]
 [!code-vb[System.IO.Compression.DeflateStream#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.compression.deflatestream/vb/program3.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.ValueTask WriteAsync (ReadOnlyMemory&lt;byte&gt; buffer, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.Threading.Tasks.ValueTask WriteAsync(valuetype System.ReadOnlyMemory`1&lt;unsigned int8&gt; buffer, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.DeflateStream.WriteAsync(System.ReadOnlyMemory{System.Byte},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function WriteAsync (buffer As ReadOnlyMemory(Of Byte), Optional cancellationToken As CancellationToken = null) As ValueTask" />
      <MemberSignature Language="F#" Value="override this.WriteAsync : ReadOnlyMemory&lt;byte&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.ValueTask" Usage="deflateStream.WriteAsync (buffer, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.ReadOnlyMemory&lt;System.Byte&gt;" Index="0" FrameworkAlternate="netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="a83f6-396">从中写入数据的内存区域。</span><span class="sxs-lookup"><span data-stu-id="a83f6-396">The region of memory to write data from.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="a83f6-397">要监视的取消请求标记。</span><span class="sxs-lookup"><span data-stu-id="a83f6-397">The token to monitor for cancellation requests.</span></span> <span data-ttu-id="a83f6-398">默认值是 <see cref="P:System.Threading.CancellationToken.None" />。</span><span class="sxs-lookup"><span data-stu-id="a83f6-398">The default value is <see cref="P:System.Threading.CancellationToken.None" />.</span></span></param>
        <summary><span data-ttu-id="a83f6-399">从指定的只读内存区域中，将压缩的字节异步写入基础 Deflate 流。</span><span class="sxs-lookup"><span data-stu-id="a83f6-399">Asynchronously writes compressed bytes to the underlying Deflate stream from the specified read-only memory region.</span></span></summary>
        <returns><span data-ttu-id="a83f6-400">表示异步写入操作的任务。</span><span class="sxs-lookup"><span data-stu-id="a83f6-400">A task that represents the asynchronous write operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="a83f6-401">利用 `WriteAsync` 方法，你可以在不阻塞主线程的情况下执行占用大量资源的 i/o 操作。</span><span class="sxs-lookup"><span data-stu-id="a83f6-401">The `WriteAsync` method enables you to perform resource-intensive I/O operations without blocking the main thread.</span></span> <span data-ttu-id="a83f6-402">在 [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] 应用或 [!INCLUDE[desktop_appname](~/includes/desktop-appname-md.md)] 应用中一个耗时的流操作可能阻塞 UI 线程并让您的应用看起来好像不工作时，这种性能的考虑就显得尤为重要了。</span><span class="sxs-lookup"><span data-stu-id="a83f6-402">This performance consideration is particularly important in a [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] app or [!INCLUDE[desktop_appname](~/includes/desktop-appname-md.md)] app where a time-consuming stream operation can block the UI thread and make your app appear as if it is not working.</span></span> <span data-ttu-id="a83f6-403">异步方法与 Visual Basic 和C#中的 `async` 和 `await` 关键字结合使用。</span><span class="sxs-lookup"><span data-stu-id="a83f6-403">The async methods are used in conjunction with the `async` and `await` keywords in Visual Basic and C#.</span></span>

<span data-ttu-id="a83f6-404">使用 <xref:System.IO.Compression.DeflateStream.CanWrite%2A> 属性可确定当前实例是否支持写入。</span><span class="sxs-lookup"><span data-stu-id="a83f6-404">Use the <xref:System.IO.Compression.DeflateStream.CanWrite%2A> property to determine whether the current instance supports writing.</span></span>

<span data-ttu-id="a83f6-405">如果在操作完成前取消该操作，则返回的任务将包含 <xref:System.Threading.Tasks.Task.Status?displayProperty=nameWithType> 属性的 <xref:System.Threading.Tasks.TaskStatus.Canceled?displayProperty=nameWithType> 值。</span><span class="sxs-lookup"><span data-stu-id="a83f6-405">If the operation is canceled before it completes, the returned task contains the <xref:System.Threading.Tasks.TaskStatus.Canceled?displayProperty=nameWithType> value for the <xref:System.Threading.Tasks.Task.Status?displayProperty=nameWithType> property.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task WriteAsync (byte[] array, int offset, int count, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task WriteAsync(unsigned int8[] array, int32 offset, int32 count, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.DeflateStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function WriteAsync (array As Byte(), offset As Integer, count As Integer, cancellationToken As CancellationToken) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task ^ WriteAsync(cli::array &lt;System::Byte&gt; ^ array, int offset, int count, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="override this.WriteAsync : byte[] * int * int * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="deflateStream.WriteAsync (array, offset, count, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Byte[]" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="offset" Type="System.Int32" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="count" Type="System.Int32" Index="2" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="3" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="a83f6-406">包含要压缩的数据的缓冲区。</span><span class="sxs-lookup"><span data-stu-id="a83f6-406">The buffer that contains the data to compress.</span></span></param>
        <param name="offset"><span data-ttu-id="a83f6-407"><paramref name="array" /> 中从零开始的字节偏移量，从该偏移量开始将字节复制到 Deflate 流。</span><span class="sxs-lookup"><span data-stu-id="a83f6-407">The zero-based byte offset in <paramref name="array" /> from which to begin copying bytes to the Deflate stream.</span></span></param>
        <param name="count"><span data-ttu-id="a83f6-408">要写入的最大字节数。</span><span class="sxs-lookup"><span data-stu-id="a83f6-408">The maximum number of bytes to write.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="a83f6-409">要监视的取消请求标记。</span><span class="sxs-lookup"><span data-stu-id="a83f6-409">The token to monitor for cancellation requests.</span></span> <span data-ttu-id="a83f6-410">默认值是 <see cref="P:System.Threading.CancellationToken.None" />。</span><span class="sxs-lookup"><span data-stu-id="a83f6-410">The default value is <see cref="P:System.Threading.CancellationToken.None" />.</span></span></param>
        <summary><span data-ttu-id="a83f6-411">从指定的字节数组中，将压缩的字节异步写入基础 Deflate 流。</span><span class="sxs-lookup"><span data-stu-id="a83f6-411">Asynchronously writes compressed bytes to the underlying Deflate stream from the specified byte array.</span></span></summary>
        <returns><span data-ttu-id="a83f6-412">表示异步写入操作的任务。</span><span class="sxs-lookup"><span data-stu-id="a83f6-412">A task that represents the asynchronous write operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="a83f6-413">利用 `WriteAsync` 方法，你可以在不阻塞主线程的情况下执行占用大量资源的 i/o 操作。</span><span class="sxs-lookup"><span data-stu-id="a83f6-413">The `WriteAsync` method enables you to perform resource-intensive I/O operations without blocking the main thread.</span></span> <span data-ttu-id="a83f6-414">在 [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] 应用或 [!INCLUDE[desktop_appname](~/includes/desktop-appname-md.md)] 应用中一个耗时的流操作可能阻塞 UI 线程并让您的应用看起来好像不工作时，这种性能的考虑就显得尤为重要了。</span><span class="sxs-lookup"><span data-stu-id="a83f6-414">This performance consideration is particularly important in a [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] app or [!INCLUDE[desktop_appname](~/includes/desktop-appname-md.md)] app where a time-consuming stream operation can block the UI thread and make your app appear as if it is not working.</span></span> <span data-ttu-id="a83f6-415">异步方法与 Visual Basic 和C#中的 `async` 和 `await` 关键字结合使用。</span><span class="sxs-lookup"><span data-stu-id="a83f6-415">The async methods are used in conjunction with the `async` and `await` keywords in Visual Basic and C#.</span></span>

<span data-ttu-id="a83f6-416">使用 <xref:System.IO.Compression.DeflateStream.CanWrite%2A> 属性可确定当前实例是否支持写入。</span><span class="sxs-lookup"><span data-stu-id="a83f6-416">Use the <xref:System.IO.Compression.DeflateStream.CanWrite%2A> property to determine whether the current instance supports writing.</span></span>

<span data-ttu-id="a83f6-417">如果在操作完成前取消该操作，则返回的任务将包含 <xref:System.Threading.Tasks.Task.Status?displayProperty=nameWithType> 属性的 <xref:System.Threading.Tasks.TaskStatus.Canceled?displayProperty=nameWithType> 值。</span><span class="sxs-lookup"><span data-stu-id="a83f6-417">If the operation is canceled before it completes, the returned task contains the <xref:System.Threading.Tasks.TaskStatus.Canceled?displayProperty=nameWithType> value for the <xref:System.Threading.Tasks.Task.Status?displayProperty=nameWithType> property.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
