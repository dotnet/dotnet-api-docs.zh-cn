<Type Name="ZipFileExtensions" FullName="System.IO.Compression.ZipFileExtensions">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e4f27393519fd2a92472c17093cd9a37acb10ef9" /><Meta Name="ms.sourcegitcommit" Value="9f423345753728e8cad38d4a22663a109e69ea91" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="03/04/2021" /><Meta Name="ms.locfileid" Value="102091496" /></Metadata><TypeSignature Language="C#" Value="public static class ZipFileExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit ZipFileExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.IO.Compression.ZipFileExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module ZipFileExtensions" />
  <TypeSignature Language="C++ CLI" Value="public ref class ZipFileExtensions abstract sealed" />
  <TypeSignature Language="F#" Value="type ZipFileExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>System.IO.Compression.ZipFile</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.0.3.0</AssemblyVersion>
    <AssemblyVersion>4.0.4.0</AssemblyVersion>
    <AssemblyVersion>4.0.5.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.IO.Compression.FileSystem</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.IO.Compression.ZipFile" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1">
      <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>为 <see cref="T:System.IO.Compression.ZipArchive" /> 和 <see cref="T:System.IO.Compression.ZipArchiveEntry" /> 类提供扩展方法。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[

[!INCLUDE[remarks](~/includes/remarks/System.IO.Compression/ZipFileExtensions/ZipFileExtensions.md)]

      ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName="CreateEntryFromFile">
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.ZipFile</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>通过压缩并将其添加到邮编存档的存档文件。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateEntryFromFile">
      <MemberSignature Language="C#" Value="public static System.IO.Compression.ZipArchiveEntry CreateEntryFromFile (this System.IO.Compression.ZipArchive destination, string sourceFileName, string entryName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Compression.ZipArchiveEntry CreateEntryFromFile(class System.IO.Compression.ZipArchive destination, string sourceFileName, string entryName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.ZipFileExtensions.CreateEntryFromFile(System.IO.Compression.ZipArchive,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CreateEntryFromFile (destination As ZipArchive, sourceFileName As String, entryName As String) As ZipArchiveEntry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::IO::Compression::ZipArchiveEntry ^ CreateEntryFromFile(System::IO::Compression::ZipArchive ^ destination, System::String ^ sourceFileName, System::String ^ entryName);" />
      <MemberSignature Language="F#" Value="static member CreateEntryFromFile : System.IO.Compression.ZipArchive * string * string -&gt; System.IO.Compression.ZipArchiveEntry" Usage="System.IO.Compression.ZipFileExtensions.CreateEntryFromFile (destination, sourceFileName, entryName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.ZipFile</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.FileSystem</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Compression.ZipArchiveEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.IO.Compression.ZipArchive" RefType="this" />
        <Parameter Name="sourceFileName" Type="System.String" />
        <Parameter Name="entryName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="destination">要添加该文件的 zip 存档。</param>
        <param name="sourceFileName">待存档的文件的路径。 可以指定相对或绝对路径。 相对路径被解释为相对于当前工作目录。</param>
        <param name="entryName">要在 zip 存档中生成的输入的名称。</param>
        <summary>通过压缩并将其添加到邮编存档的存档文件。</summary>
        <returns>zip 存档中新项的包装。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 存档中的新条目包含由指定的文件的内容 `sourceFileName` 。 如果存档中已存在具有指定名称 () 的条目，则将 `entryName` 使用相同的名称创建另一个条目。 <xref:System.IO.Compression.ZipArchiveEntry.LastWriteTime%2A>项的属性设置为上次文件系统上的文件更改时间。  
  
 当 `ZipArchiveMode.Update` 存在时，条目的大小限制将限制为 <xref:System.Int32.MaxValue?displayProperty=nameWithType> 。 此限制是因为更新模式 <xref:System.IO.MemoryStream> 在内部使用，以允许在更新存档时所需的查找，并且 <xref:System.IO.MemoryStream> 最大大小等于 int 的大小。  
   
  
## Examples  
 下面的示例演示如何从现有文件在 zip 存档中创建新条目。  
  
 [!code-csharp[System.IO.Compression.ZipArchive#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.compression.ziparchive/cs/program3.cs#3)]
 [!code-vb[System.IO.Compression.ZipArchive#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.compression.ziparchive/vb/program3.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="sourceFileName" /> 为 <see cref="F:System.String.Empty" />，仅包含空格，或者包含至少一个无效字符。  
  
- 或 - 
 <paramref name="entryName" /> 为 <see cref="F:System.String.Empty" />。</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="sourceFileName" /> 或 <paramref name="entryName" /> 为 <see langword="null" />。</exception>
        <exception cref="T:System.IO.PathTooLongException">在 <paramref name="sourceFileName" /> 内，指定的路径、文件名或者两者都超出了系统定义的最大长度。</exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><paramref name="sourceFileName" /> 无效（例如，它位于未映射的驱动器上）。</exception>
        <exception cref="T:System.IO.IOException">无法打开由 <paramref name="sourceFileName" /> 指定的文件，或文件太大，无法更新（当前限制为 <see cref="F:System.Int32.MaxValue" />）。</exception>
        <exception cref="T:System.UnauthorizedAccessException"><paramref name="sourceFileName" /> 指定目录。  
  
- 或 - 
调用方没有访问 <paramref name="sourceFileName" /> 指定的文件的权限。</exception>
        <exception cref="T:System.IO.FileNotFoundException">未找到 <paramref name="sourceFileName" /> 指定的文件。</exception>
        <exception cref="T:System.NotSupportedException"><paramref name="sourceFileName" /> 参数格式无效。  
  
- 或 - 
zip 存档不支持写入。</exception>
        <exception cref="T:System.ObjectDisposedException">zip 存档已释放。</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateEntryFromFile">
      <MemberSignature Language="C#" Value="public static System.IO.Compression.ZipArchiveEntry CreateEntryFromFile (this System.IO.Compression.ZipArchive destination, string sourceFileName, string entryName, System.IO.Compression.CompressionLevel compressionLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Compression.ZipArchiveEntry CreateEntryFromFile(class System.IO.Compression.ZipArchive destination, string sourceFileName, string entryName, valuetype System.IO.Compression.CompressionLevel compressionLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.ZipFileExtensions.CreateEntryFromFile(System.IO.Compression.ZipArchive,System.String,System.String,System.IO.Compression.CompressionLevel)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CreateEntryFromFile (destination As ZipArchive, sourceFileName As String, entryName As String, compressionLevel As CompressionLevel) As ZipArchiveEntry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::IO::Compression::ZipArchiveEntry ^ CreateEntryFromFile(System::IO::Compression::ZipArchive ^ destination, System::String ^ sourceFileName, System::String ^ entryName, System::IO::Compression::CompressionLevel compressionLevel);" />
      <MemberSignature Language="F#" Value="static member CreateEntryFromFile : System.IO.Compression.ZipArchive * string * string * System.IO.Compression.CompressionLevel -&gt; System.IO.Compression.ZipArchiveEntry" Usage="System.IO.Compression.ZipFileExtensions.CreateEntryFromFile (destination, sourceFileName, entryName, compressionLevel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.ZipFile</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.FileSystem</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Compression.ZipArchiveEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.IO.Compression.ZipArchive" RefType="this" />
        <Parameter Name="sourceFileName" Type="System.String" />
        <Parameter Name="entryName" Type="System.String" />
        <Parameter Name="compressionLevel" Type="System.IO.Compression.CompressionLevel" />
      </Parameters>
      <Docs>
        <param name="destination">要添加该文件的 zip 存档。</param>
        <param name="sourceFileName">待存档的文件的路径。 可以指定相对或绝对路径。 相对路径被解释为相对于当前工作目录。</param>
        <param name="entryName">要在 zip 存档中生成的输入的名称。</param>
        <param name="compressionLevel">指示创建项时是否强调速度或压缩有效性的枚举值之一。</param>
        <summary>通过使用指定压缩级别压缩并将其添加到邮编存档的存档文件。</summary>
        <returns>zip 存档中新项的包装。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 存档中的新条目包含由指定的文件的内容 `sourceFileName` 。 如果存档中已存在具有指定名称 () 的条目，则将 `entryName` 使用相同的名称创建另一个条目。 <xref:System.IO.Compression.ZipArchiveEntry.LastWriteTime%2A>项的属性设置为上次文件系统上的文件更改时间。  
  
 当 `ZipArchiveMode.Update` 存在时，条目的大小限制将限制为 <xref:System.Int32.MaxValue?displayProperty=nameWithType> 。 此限制是因为更新模式 <xref:System.IO.MemoryStream> 在内部使用，以允许在更新存档时所需的查找，并且 <xref:System.IO.MemoryStream> 最大大小等于 int 的大小。  
  
## Examples  
 下面的示例演示如何从现有文件在 zip 存档中创建新条目，并指定压缩级别。  
  
 [!code-csharp[System.IO.Compression.ZipArchive#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.compression.ziparchive/cs/program4.cs#4)]
 [!code-vb[System.IO.Compression.ZipArchive#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.compression.ziparchive/vb/program4.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="sourceFileName" /> 为 <see cref="F:System.String.Empty" />，仅包含空格，或者包含至少一个无效字符。  
  
- 或 - 
 <paramref name="entryName" /> 为 <see cref="F:System.String.Empty" />。</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="sourceFileName" /> 或 <paramref name="entryName" /> 为 <see langword="null" />。</exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><paramref name="sourceFileName" /> 无效（例如，它位于未映射的驱动器上）。</exception>
        <exception cref="T:System.IO.PathTooLongException">在 <paramref name="sourceFileName" /> 内，指定的路径、文件名或者两者都超出了系统定义的最大长度。</exception>
        <exception cref="T:System.IO.IOException">无法打开由 <paramref name="sourceFileName" /> 指定的文件，或文件太大，无法更新（当前限制为 <see cref="F:System.Int32.MaxValue" />）。</exception>
        <exception cref="T:System.UnauthorizedAccessException"><paramref name="sourceFileName" /> 指定目录。  
  
- 或 - 
调用方没有访问 <paramref name="sourceFileName" /> 指定的文件的权限。</exception>
        <exception cref="T:System.IO.FileNotFoundException">未找到 <paramref name="sourceFileName" /> 指定的文件。</exception>
        <exception cref="T:System.NotSupportedException"><paramref name="sourceFileName" /> 参数格式无效。  
  
- 或 - 
zip 存档不支持写入。</exception>
        <exception cref="T:System.ObjectDisposedException">zip 存档已释放。</exception>
      </Docs>
    </Member>
    <Member MemberName="ExtractToDirectory">
      <MemberSignature Language="C#" Value="public static void ExtractToDirectory (this System.IO.Compression.ZipArchive source, string destinationDirectoryName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ExtractToDirectory(class System.IO.Compression.ZipArchive source, string destinationDirectoryName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.ZipFileExtensions.ExtractToDirectory(System.IO.Compression.ZipArchive,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub ExtractToDirectory (source As ZipArchive, destinationDirectoryName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void ExtractToDirectory(System::IO::Compression::ZipArchive ^ source, System::String ^ destinationDirectoryName);" />
      <MemberSignature Language="F#" Value="static member ExtractToDirectory : System.IO.Compression.ZipArchive * string -&gt; unit" Usage="System.IO.Compression.ZipFileExtensions.ExtractToDirectory (source, destinationDirectoryName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.ZipFile</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.FileSystem</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.IO.Compression.ZipArchive" RefType="this" />
        <Parameter Name="destinationDirectoryName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="source">从中提取文件的 zip 存档。</param>
        <param name="destinationDirectoryName">要在其中放置解压缩的文件的目录路径。 可以指定相对或绝对路径。 相对路径被解释为相对于当前工作目录。</param>
        <summary>将 zip 存档中的所有文件都解压缩到文件系统的一个目录下。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法创建指定的目录 `destinationDirectoryName` 。 如果目标目录已存在，则此方法不会覆盖它;它会引发 <xref:System.IO.IOException> 异常。 方法还创建在 zip 存档中反映层次结构的子目录。 如果在提取过程中出现错误，存档将保持部分提取。 每个提取的文件与指定的目录的相对路径相同， `destinationDirectoryName` 因为其源条目必须是存档的根。  
  
   
  
## Examples  
 下面的示例演示如何从现有文件在 zip 存档中创建新条目，并将存档提取到新目录。 若要编译器此代码示例，必须 `System.IO.Compression` `System.IO.Compression.FileSystem` 在项目中引用和程序集。  
  
 [!code-csharp[System.IO.Compression.ZipArchive#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.compression.ziparchive/cs/program3.cs#3)]
 [!code-vb[System.IO.Compression.ZipArchive#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.compression.ziparchive/vb/program3.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="destinationDirectoryName" /> 为 <see cref="F:System.String.Empty" />，仅包含空格，或者包含至少一个无效字符。</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="destinationDirectoryName" /> 为 <see langword="null" />。</exception>
        <exception cref="T:System.IO.PathTooLongException">指定路径的长度超出系统定义的最大长度。</exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">指定的路径无效（例如，它位于未映射的驱动器上）。</exception>
        <exception cref="T:System.IO.IOException"><paramref name="destinationDirectoryName" /> 指定的目录已存在。  
  
- 或 - 
一个在存档中的输入名称是 <see cref="F:System.String.Empty" />，仅包含空白或包含至少一个无效字符。  
  
- 或 - 
从存档中解压缩一个条目将在 <paramref name="destinationDirectoryName" /> 指定的目录之外创建一个文件。 （例如，如果该输入名称包括父目录访问器，则这可能发生。） 
- 或 - 
存档中的两个或多个条目名相同。</exception>
        <exception cref="T:System.UnauthorizedAccessException">调用方没有写入目标目录所需的权限。</exception>
        <exception cref="T:System.NotSupportedException"><paramref name="destinationDirectoryName" /> 包含无效格式。</exception>
        <exception cref="T:System.IO.InvalidDataException">存档条目无法找到或已损坏。  
  
 - 或 -  
  
 使用了一种不支持的压缩方法压缩存档条目。</exception>
      </Docs>
    </Member>
    <Member MemberName="ExtractToDirectory">
      <MemberSignature Language="C#" Value="public static void ExtractToDirectory (this System.IO.Compression.ZipArchive source, string destinationDirectoryName, bool overwriteFiles);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ExtractToDirectory(class System.IO.Compression.ZipArchive source, string destinationDirectoryName, bool overwriteFiles) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.ZipFileExtensions.ExtractToDirectory(System.IO.Compression.ZipArchive,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub ExtractToDirectory (source As ZipArchive, destinationDirectoryName As String, overwriteFiles As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void ExtractToDirectory(System::IO::Compression::ZipArchive ^ source, System::String ^ destinationDirectoryName, bool overwriteFiles);" />
      <MemberSignature Language="F#" Value="static member ExtractToDirectory : System.IO.Compression.ZipArchive * string * bool -&gt; unit" Usage="System.IO.Compression.ZipFileExtensions.ExtractToDirectory (source, destinationDirectoryName, overwriteFiles)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.ZipFile</AssemblyName>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.FileSystem</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.IO.Compression.ZipArchive" RefType="this" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="destinationDirectoryName" Type="System.String" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="overwriteFiles" Type="System.Boolean" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="source">要提取的 <see cref="T:System.IO.Compression.ZipArchive" />。</param>
        <param name="destinationDirectoryName">文件系统上指向目标目录的路径。 路径可以是相对路径或绝对路径。 相对路径被解释为相对于当前工作目录。</param>
        <param name="overwriteFiles">要表示覆盖现有文件，则为 <see langword="true" />；否则为 <see langword="false" />。</param>
        <summary>将存档中的所有文件都解压缩到文件系统的一个目录下。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[
## Remarks
 指定的目录可能已存在。 此方法将创建指定的目录和所有子目录（如有必要）。

 如果提取存档时出现错误，存档将保持部分提取。
 
 系统将提取每个条目，以便提取的文件与存档的根具有相同的相对路径 `destinationDirectoryName` 。
 
 如果要存档的文件包含无效的上次修改时间，则将使用) 1980 年1月1日午夜 (午夜以 Zip 时间戳格式表示的第一个日期和时间。
 
          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="destinationArchiveFileName" /> 是一个长度为零的字符串，仅包含空格，或包含一个或多个由 <see cref="F:System.IO.Path.InvalidPathChars" /> 定义的无效字符。</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="destinationArchiveFileName" /> 为 <see langword="null" />。</exception>
        <exception cref="T:System.IO.PathTooLongException">指定的路径和/或文件名超过了系统定义的最大长度。</exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">指定的路径无效（例如，它位于未映射的驱动器上）。</exception>
        <exception cref="T:System.IO.IOException"><see cref="T:System.IO.Compression.ZipArchiveEntry" /> 的名称的长度为零，仅包含空格，或包含一个或多个由 <see cref="F:System.IO.Path.InvalidPathChars" /> 定义的无效字符。

- 或 -

解压缩 <see cref="T:System.IO.Compression.ZipArchiveEntry" /> 会导致目标文件位于 <paramref name="destinationArchiveFileName" /> 之外（例如，如果项名称包含父目录访问器）。

- 或 -

<see cref="T:System.IO.Compression.ZipArchiveEntry" /> 与一个已从同一存档中解压缩的项同名。</exception>
        <exception cref="T:System.UnauthorizedAccessException">调用方没有所要求的权限。</exception>
        <exception cref="T:System.NotSupportedException"><paramref name="destinationArchiveFileName" /> 的格式无效。</exception>
        <exception cref="T:System.IO.InvalidDataException"><see cref="T:System.IO.Compression.ZipArchiveEntry" /> 未找到或已损坏。

- 或 -

<see cref="T:System.IO.Compression.ZipArchiveEntry" /> 已经通过使用一种不被支持的压缩方法压缩。</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ExtractToFile">
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.ZipFile</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>将 zip 存档中的条目解压到文件下。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ExtractToFile">
      <MemberSignature Language="C#" Value="public static void ExtractToFile (this System.IO.Compression.ZipArchiveEntry source, string destinationFileName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ExtractToFile(class System.IO.Compression.ZipArchiveEntry source, string destinationFileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.ZipFileExtensions.ExtractToFile(System.IO.Compression.ZipArchiveEntry,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub ExtractToFile (source As ZipArchiveEntry, destinationFileName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void ExtractToFile(System::IO::Compression::ZipArchiveEntry ^ source, System::String ^ destinationFileName);" />
      <MemberSignature Language="F#" Value="static member ExtractToFile : System.IO.Compression.ZipArchiveEntry * string -&gt; unit" Usage="System.IO.Compression.ZipFileExtensions.ExtractToFile (source, destinationFileName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.ZipFile</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.FileSystem</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.IO.Compression.ZipArchiveEntry" RefType="this" />
        <Parameter Name="destinationFileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="source">要从其中解压缩文件的 zip 存档条目。</param>
        <param name="destinationFileName">从条目内容创建的文件的路径。 可以指定相对或绝对路径。 相对路径被解释为相对于当前工作目录。</param>
        <summary>将 zip 存档中的条目解压到文件下。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果目标文件已存在，则此方法不会覆盖它;它会引发 <xref:System.IO.IOException> 异常。 若要覆盖现有文件，请改为使用 <xref:System.IO.Compression.ZipFileExtensions.ExtractToFile%28System.IO.Compression.ZipArchiveEntry%2CSystem.String%2CSystem.Boolean%29> 方法重载。  
  
 文件的上次写入时间被设置为最后一次更改 zip 存档中的条目的时间;此值存储在属性中 <xref:System.IO.Compression.ZipArchiveEntry.LastWriteTime%2A> 。  
  
 不能使用此方法提取目录;请改用 <xref:System.IO.Compression.ZipFileExtensions.ExtractToDirectory%2A> 方法。  
  
   
  
## Examples  
 下面的示例演示如何遍历 zip 存档文件的内容，并提取扩展名为 .txt 的文件。  
  
 [!code-csharp[System.IO.Compression.ZipArchive#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.compression.ziparchive/cs/program1.cs#1)]
 [!code-vb[System.IO.Compression.ZipArchive#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.compression.ziparchive/vb/program1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="destinationFileName" /> 是一个长度为零的字符串，仅包含空格，或包含一个或多个由 <see cref="F:System.IO.Path.InvalidPathChars" /> 定义的无效字符。  
  
- 或 - 
 <paramref name="destinationFileName" /> 指定目录。</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="destinationFileName" /> 为 <see langword="null" />。</exception>
        <exception cref="T:System.IO.PathTooLongException">指定的路径和/或文件名超过了系统定义的最大长度。</exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">指定的路径无效（例如，它位于未映射的驱动器上）。</exception>
        <exception cref="T:System.IO.IOException"><paramref name="destinationFileName" /> 已存在。  
  
- 或 - 
出现 I/O 错误。  
  
- 或 - 
该条目当前处于打开状态，可以写入。  
  
- 或 - 
该条目已从存档中删除。</exception>
        <exception cref="T:System.UnauthorizedAccessException">调用方没有创建新文件所需的权限。</exception>
        <exception cref="T:System.IO.InvalidDataException">该输入从存档中缺失，或损坏且无法读取。  
  
 - 或 -  
  
 已经通过使用一种不受支持的压缩方法压缩该条目。</exception>
        <exception cref="T:System.ObjectDisposedException">已释放该条目所属的 zip 存档。</exception>
        <exception cref="T:System.NotSupportedException"><paramref name="destinationFileName" /> 的格式无效。  
  
- 或 - 
该条目的 zip 存档是在 <see cref="F:System.IO.Compression.ZipArchiveMode.Create" /> 模式中打开的，不允许检索条目。</exception>
      </Docs>
    </Member>
    <Member MemberName="ExtractToFile">
      <MemberSignature Language="C#" Value="public static void ExtractToFile (this System.IO.Compression.ZipArchiveEntry source, string destinationFileName, bool overwrite);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ExtractToFile(class System.IO.Compression.ZipArchiveEntry source, string destinationFileName, bool overwrite) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.ZipFileExtensions.ExtractToFile(System.IO.Compression.ZipArchiveEntry,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub ExtractToFile (source As ZipArchiveEntry, destinationFileName As String, overwrite As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void ExtractToFile(System::IO::Compression::ZipArchiveEntry ^ source, System::String ^ destinationFileName, bool overwrite);" />
      <MemberSignature Language="F#" Value="static member ExtractToFile : System.IO.Compression.ZipArchiveEntry * string * bool -&gt; unit" Usage="System.IO.Compression.ZipFileExtensions.ExtractToFile (source, destinationFileName, overwrite)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.ZipFile</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.FileSystem</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.IO.Compression.ZipArchiveEntry" RefType="this" />
        <Parameter Name="destinationFileName" Type="System.String" />
        <Parameter Name="overwrite" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="source">要从其中解压缩文件的 zip 存档条目。</param>
        <param name="destinationFileName">从条目内容创建的文件的路径。 可以指定相对或绝对路径。 相对路径被解释为相对于当前工作目录。</param>
        <param name="overwrite">如果覆盖与目标文件同名的现有文件，则为 <see langword="true" />；否则为 <see langword="false" />。</param>
        <summary>将 zip 存档中的条目解压缩到文件下，并可选择覆盖具有相同名称的现有文件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 文件的上次写入时间被设置为最后一次更改 zip 存档中的条目的时间;此值存储在属性中 <xref:System.IO.Compression.ZipArchiveEntry.LastWriteTime%2A> 。  
  
 不能使用此方法提取目录;请改用 <xref:System.IO.Compression.ZipFileExtensions.ExtractToDirectory%2A> 方法。  
  
   
  
## Examples  
 下面的示例演示如何遍历 zip 存档文件的内容，并提取扩展名为 .txt 的文件。 它将覆盖目标文件夹中具有相同名称的现有文件。 若要编译器此代码示例，必须 `System.IO.Compression` `System.IO.Compression.FileSystem` 在项目中引用和程序集。  
  
 [!code-csharp[System.IO.Compression.ZipArchive#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.compression.ziparchive/cs/program2.cs#2)]
 [!code-vb[System.IO.Compression.ZipArchive#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.compression.ziparchive/vb/program2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="destinationFileName" /> 是一个长度为零的字符串，仅包含空格，或包含一个或多个由 <see cref="F:System.IO.Path.InvalidPathChars" /> 定义的无效字符。  
  
- 或 - 
 <paramref name="destinationFileName" /> 指定目录。</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="destinationFileName" /> 为 <see langword="null" />。</exception>
        <exception cref="T:System.IO.PathTooLongException">指定的路径和/或文件名超过了系统定义的最大长度。</exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">指定的路径无效（例如，它位于未映射的驱动器上）。</exception>
        <exception cref="T:System.IO.IOException"><paramref name="destinationFileName" /> 已存在，且 <paramref name="overwrite" /> 是 <see langword="false" />。  
  
- 或 - 
出现 I/O 错误。  
  
- 或 - 
该条目当前处于打开状态，可以写入。  
  
- 或 - 
该条目已从存档中删除。</exception>
        <exception cref="T:System.UnauthorizedAccessException">调用方没有创建新文件所需的权限。</exception>
        <exception cref="T:System.IO.InvalidDataException">存档中缺少该条目，或者该条目已损坏且无法读取。  
  
 - 或 -  
  
 已经通过使用一种不受支持的压缩方法压缩该条目。</exception>
        <exception cref="T:System.ObjectDisposedException">已释放该条目所属的 zip 存档。</exception>
        <exception cref="T:System.NotSupportedException"><paramref name="destinationFileName" /> 的格式无效。  
  
- 或 - 
该条目的 zip 存档是在 <see cref="F:System.IO.Compression.ZipArchiveMode.Create" /> 模式中打开的，不允许检索条目。</exception>
      </Docs>
    </Member>
  </Members>
</Type>
