<Type Name="XPathExpression" FullName="System.Xml.XPath.XPathExpression">
  <Metadata><Meta Name="ms.openlocfilehash" Value="ba5998dc816d5f5cb35ac22178871afce8c16f64" /><Meta Name="ms.sourcegitcommit" Value="53b005dec6dcff97c7bac97cf446d9ae6bda93f0" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/24/2020" /><Meta Name="ms.locfileid" Value="91207462" /></Metadata><TypeSignature Language="C#" Value="public abstract class XPathExpression" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit XPathExpression extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Xml.XPath.XPathExpression" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class XPathExpression" />
  <TypeSignature Language="C++ CLI" Value="public ref class XPathExpression abstract" />
  <TypeSignature Language="F#" Value="type XPathExpression = class" />
  <AssemblyInfo>
    <AssemblyName>System.Xml.XPath</AssemblyName>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.Xml.ReaderWriter" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
    <TypeForwarding From="System.Xml.XPath" FromVersion="5.0.0.0" To="System.Xml.ReaderWriter" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
    <TypeForwarding From="System.Xml.XPath" FromVersion="4.1.0.0" To="System.Xml.ReaderWriter" ToVersion="4.2.0.0" FrameworkAlternate="netcore-2.0" />
    <TypeForwarding From="System.Xml.XPath" FromVersion="4.1.1.0" To="System.Xml.ReaderWriter" ToVersion="4.2.1.0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0" />
    <TypeForwarding From="System.Xml.XPath" FromVersion="4.1.2.0" To="System.Xml.ReaderWriter" ToVersion="4.2.2.0" FrameworkAlternate="netcore-3.1" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="071f4-101">提供一个类型化的类，表示已编译的 XPath 表达式。</span><span class="sxs-lookup"><span data-stu-id="071f4-101">Provides a typed class that represents a compiled XPath expression.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="071f4-102">此类作为类的方法的结果返回 <xref:System.Xml.XPath.XPathNavigator.Compile%2A> <xref:System.Xml.XPath.XPathNavigator> 。</span><span class="sxs-lookup"><span data-stu-id="071f4-102">This class is returned as the result of the <xref:System.Xml.XPath.XPathNavigator.Compile%2A> method of the <xref:System.Xml.XPath.XPathNavigator> class.</span></span> <span data-ttu-id="071f4-103">它是类的、、 <xref:System.Xml.XPath.XPathNavigator.Evaluate%2A> <xref:System.Xml.XPath.XPathNavigator.Matches%2A> <xref:System.Xml.XPath.XPathNavigator.Select%2A> 和方法的参数 <xref:System.Xml.XPath.XPathNavigator.SelectSingleNode%2A> <xref:System.Xml.XPath.XPathNavigator> 。</span><span class="sxs-lookup"><span data-stu-id="071f4-103">It is a parameter to the <xref:System.Xml.XPath.XPathNavigator.Evaluate%2A>, <xref:System.Xml.XPath.XPathNavigator.Matches%2A>, <xref:System.Xml.XPath.XPathNavigator.Select%2A>, and <xref:System.Xml.XPath.XPathNavigator.SelectSingleNode%2A> methods of the <xref:System.Xml.XPath.XPathNavigator> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="071f4-104">下面的示例演示如何使用 XPath 返回类型确定如何处理 XPath 表达式。</span><span class="sxs-lookup"><span data-stu-id="071f4-104">The following example shows how to use the XPath return type to determine how to process the XPath expression.</span></span>  
  
 [!code-cpp[XPathExpression.ReturnType#1](~/samples/snippets/cpp/VS_Snippets_Data/XPathExpression.ReturnType/CPP/returntype.cpp#1)]
 [!code-csharp[XPathExpression.ReturnType#1](~/samples/snippets/csharp/VS_Snippets_Data/XPathExpression.ReturnType/CS/returntype.cs#1)]
 [!code-vb[XPathExpression.ReturnType#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XPathExpression.ReturnType/VB/returntype.vb#1)]  
  
 <span data-ttu-id="071f4-105">该示例使用 `contosoBooks.xml` 文件作为输入。</span><span class="sxs-lookup"><span data-stu-id="071f4-105">The example takes the `contosoBooks.xml` file as input.</span></span>  
  
```xml  
  
<?xml version="1.0" encoding="utf-8" ?>  
<bookstore xmlns="http://www.contoso.com/books">  
    <book genre="autobiography" publicationdate="1981-03-22" ISBN="1-861003-11-0">  
        <title>The Autobiography of Benjamin Franklin</title>  
        <author>  
            <first-name>Benjamin</first-name>  
            <last-name>Franklin</last-name>  
        </author>  
        <price>8.99</price>  
    </book>  
    <book genre="novel" publicationdate="1967-11-17" ISBN="0-201-63361-2">  
        <title>The Confidence Man</title>  
        <author>  
            <first-name>Herman</first-name>  
            <last-name>Melville</last-name>  
        </author>  
        <price>11.99</price>  
    </book>  
    <book genre="philosophy" publicationdate="1991-02-15" ISBN="1-861001-57-6">  
        <title>The Gorgias</title>  
        <author>  
            <name>Plato</name>  
        </author>  
        <price>9.99</price>  
    </book>  
</bookstore>  
  
```  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para><span data-ttu-id="071f4-106">从类继承时 <see cref="T:System.Xml.XPath.XPathExpression" /> ，必须重写以下成员：</span><span class="sxs-lookup"><span data-stu-id="071f4-106">When you inherit from the <see cref="T:System.Xml.XPath.XPathExpression" /> class, you must override the following members:</span></span> 
-   <see cref="M:System.Xml.XPath.XPathExpression.AddSort(System.Object,System.Collections.IComparer)" /><see cref="M:System.Xml.XPath.XPathExpression.AddSort(System.Object,System.Xml.XPath.XmlSortOrder,System.Xml.XPath.XmlCaseOrder,System.String,System.Xml.XPath.XmlDataType)" />  
  
-   <see cref="M:System.Xml.XPath.XPathExpression.Clone" />  
  
-   <see cref="P:System.Xml.XPath.XPathExpression.Expression" />  
  
-   <see cref="P:System.Xml.XPath.XPathExpression.ReturnType" />  
  
-   <see cref="M:System.Xml.XPath.XPathExpression.SetContext(System.Xml.IXmlNamespaceResolver)" />  
  <span data-ttu-id="071f4-107">
-   <see cref="M:System.Xml.XPath.XPathExpression.SetContext(System.Xml.XmlNamespaceManager)" />.</span><span class="sxs-lookup"><span data-stu-id="071f4-107">
-   <see cref="M:System.Xml.XPath.XPathExpression.SetContext(System.Xml.XmlNamespaceManager)" />.</span></span></para></block>
  </Docs>
  <Members>
    <MemberGroup MemberName="AddSort">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="071f4-108">当在派生类中重写时，对 XPath 表达式选择的节点排序。</span><span class="sxs-lookup"><span data-stu-id="071f4-108">When overridden in a derived class, sorts the nodes selected by the XPath expression.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddSort">
      <MemberSignature Language="C#" Value="public abstract void AddSort (object expr, System.Collections.IComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddSort(object expr, class System.Collections.IComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XPath.XPathExpression.AddSort(System.Object,System.Collections.IComparer)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub AddSort (expr As Object, comparer As IComparer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void AddSort(System::Object ^ expr, System::Collections::IComparer ^ comparer);" />
      <MemberSignature Language="F#" Value="abstract member AddSort : obj * System.Collections.IComparer -&gt; unit" Usage="xPathExpression.AddSort (expr, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expr" Type="System.Object" />
        <Parameter Name="comparer" Type="System.Collections.IComparer" />
      </Parameters>
      <Docs>
        <param name="expr"><span data-ttu-id="071f4-109">一个表示排序关键字的对象。</span><span class="sxs-lookup"><span data-stu-id="071f4-109">An object representing the sort key.</span></span> <span data-ttu-id="071f4-110">这可以是节点的 <see langword="string" /> 值，还可以是具有已编译 XPath 表达式的 <see cref="T:System.Xml.XPath.XPathExpression" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="071f4-110">This can be the <see langword="string" /> value of the node or an <see cref="T:System.Xml.XPath.XPathExpression" /> object with a compiled XPath expression.</span></span></param>
        <param name="comparer"><span data-ttu-id="071f4-111"><see cref="T:System.Collections.IComparer" /> 对象，为比较两个对象的等效性提供特定的数据类型比较。</span><span class="sxs-lookup"><span data-stu-id="071f4-111">An <see cref="T:System.Collections.IComparer" /> object that provides the specific data type comparisons for comparing two objects for equivalence.</span></span></param>
        <summary><span data-ttu-id="071f4-112">当在派生类中重写时，按指定的 <see cref="T:System.Collections.IComparer" /> 对象对 XPath 表达式选择的节点排序。</span><span class="sxs-lookup"><span data-stu-id="071f4-112">When overridden in a derived class, sorts the nodes selected by the XPath expression according to the specified <see cref="T:System.Collections.IComparer" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="071f4-113">使用 <xref:System.Xml.XPath.XPathExpression.AddSort%2A> 方法，用户可以按其数据类型而不是字符串或数字对对象进行排序。</span><span class="sxs-lookup"><span data-stu-id="071f4-113">The <xref:System.Xml.XPath.XPathExpression.AddSort%2A> method enables users to sort objects by their data type instead of by string or number.</span></span> <span data-ttu-id="071f4-114"><xref:System.Collections.IComparer>对象提供方法的实现 <xref:System.Collections.IComparer.Compare%2A> ，该方法支持对用户定义的类进行排序。</span><span class="sxs-lookup"><span data-stu-id="071f4-114">The <xref:System.Collections.IComparer> object provides an implementation of the <xref:System.Collections.IComparer.Compare%2A> method that supports sorting on user-defined classes.</span></span>  
  
 <span data-ttu-id="071f4-115">在下面的示例中，书籍按 ISBN 编号排序，其中 `isbn` 是实现接口的对象 <xref:System.Collections.IComparer> 。</span><span class="sxs-lookup"><span data-stu-id="071f4-115">In the following example, the books are sorted by ISBN number, where `isbn` is an object that implements the <xref:System.Collections.IComparer> interface.</span></span>  
  
```vb  
Dim expression As XPathExpression = navigator.Compile("bookstore/book")  
Dim isbn As ISBN = New ISBN()  
expression.AddSort("@ISBN", (IComparer)isbn)  
```  
  
```csharp  
XPathExpression expression = navigator.Compile("bookstore/book");  
ISBN isbn = new ISBN();  
expression.AddSort("@ISBN", (IComparer)isbn);  
```  
  
 <span data-ttu-id="071f4-116">以下是使用方法时要考虑的重要注意事项 <xref:System.Xml.XPath.XPathExpression.AddSort%2A> 。</span><span class="sxs-lookup"><span data-stu-id="071f4-116">The following are important notes to consider when using the <xref:System.Xml.XPath.XPathExpression.AddSort%2A> method.</span></span>  
  
-   <span data-ttu-id="071f4-117">添加排序的顺序提供排序键顺序。</span><span class="sxs-lookup"><span data-stu-id="071f4-117">The order in which the sorts are added provides the sort key order.</span></span>  
  
-   <span data-ttu-id="071f4-118">如果 <xref:System.Xml.XPath.XPathExpression> 或排序关键字需要命名空间解析，则必须使用 <xref:System.Xml.XPath.XPathExpression.SetContext%2A> 方法来提供 <xref:System.Xml.XmlNamespaceManager> 命名空间解析。</span><span class="sxs-lookup"><span data-stu-id="071f4-118">If the <xref:System.Xml.XPath.XPathExpression> or the sort key requires namespace resolution, you must use the <xref:System.Xml.XPath.XPathExpression.SetContext%2A> method to provide an <xref:System.Xml.XmlNamespaceManager> for namespace resolution.</span></span>  
  
-   <span data-ttu-id="071f4-119">如果不 <xref:System.Xml.XPath.XPathExpression> 包含前缀，则假定命名空间统一资源标识符 (URI) 为空命名空间。</span><span class="sxs-lookup"><span data-stu-id="071f4-119">If the <xref:System.Xml.XPath.XPathExpression> does not include a prefix, it is assumed that the namespace Uniform Resource Identifier (URI) is the empty namespace.</span></span> <span data-ttu-id="071f4-120">如果 XML 包含默认命名空间，则仍必须使用方法， <xref:System.Xml.XPath.XPathExpression.SetContext%2A> 并提供一个 <xref:System.Xml.XmlNamespaceManager> ，其中包含用于处理默认命名空间的前缀和命名空间 URI。</span><span class="sxs-lookup"><span data-stu-id="071f4-120">If your XML includes a default namespace, you must still use the <xref:System.Xml.XPath.XPathExpression.SetContext%2A> method and provide an <xref:System.Xml.XmlNamespaceManager> that contains a prefix and namespace URI to handle the default namespace.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XPath.XPathException"><span data-ttu-id="071f4-121"><see cref="T:System.Xml.XPath.XPathExpression" /> 或排序关键字包括前缀，并且未提供 <see cref="T:System.Xml.XmlNamespaceManager" /> 或未在所提供的 <see cref="T:System.Xml.XmlNamespaceManager" /> 中找到该前缀。</span><span class="sxs-lookup"><span data-stu-id="071f4-121">The <see cref="T:System.Xml.XPath.XPathExpression" /> or sort key includes a prefix and either an <see cref="T:System.Xml.XmlNamespaceManager" /> is not provided, or the prefix cannot be found in the supplied <see cref="T:System.Xml.XmlNamespaceManager" />.</span></span></exception>
        <altmember cref="T:System.Collections.IComparer" />
        <altmember cref="T:System.Xml.XmlNamespaceManager" />
        <altmember cref="M:System.Collections.IComparer.Compare(System.Object,System.Object)" />
        <altmember cref="M:System.Xml.XPath.XPathExpression.SetContext(System.Xml.XmlNamespaceManager)" />
      </Docs>
    </Member>
    <Member MemberName="AddSort">
      <MemberSignature Language="C#" Value="public abstract void AddSort (object expr, System.Xml.XPath.XmlSortOrder order, System.Xml.XPath.XmlCaseOrder caseOrder, string lang, System.Xml.XPath.XmlDataType dataType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddSort(object expr, valuetype System.Xml.XPath.XmlSortOrder order, valuetype System.Xml.XPath.XmlCaseOrder caseOrder, string lang, valuetype System.Xml.XPath.XmlDataType dataType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XPath.XPathExpression.AddSort(System.Object,System.Xml.XPath.XmlSortOrder,System.Xml.XPath.XmlCaseOrder,System.String,System.Xml.XPath.XmlDataType)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub AddSort (expr As Object, order As XmlSortOrder, caseOrder As XmlCaseOrder, lang As String, dataType As XmlDataType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void AddSort(System::Object ^ expr, System::Xml::XPath::XmlSortOrder order, System::Xml::XPath::XmlCaseOrder caseOrder, System::String ^ lang, System::Xml::XPath::XmlDataType dataType);" />
      <MemberSignature Language="F#" Value="abstract member AddSort : obj * System.Xml.XPath.XmlSortOrder * System.Xml.XPath.XmlCaseOrder * string * System.Xml.XPath.XmlDataType -&gt; unit" Usage="xPathExpression.AddSort (expr, order, caseOrder, lang, dataType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expr" Type="System.Object" />
        <Parameter Name="order" Type="System.Xml.XPath.XmlSortOrder" />
        <Parameter Name="caseOrder" Type="System.Xml.XPath.XmlCaseOrder" />
        <Parameter Name="lang" Type="System.String" />
        <Parameter Name="dataType" Type="System.Xml.XPath.XmlDataType" />
      </Parameters>
      <Docs>
        <param name="expr"><span data-ttu-id="071f4-122">一个表示排序关键字的对象。</span><span class="sxs-lookup"><span data-stu-id="071f4-122">An object representing the sort key.</span></span> <span data-ttu-id="071f4-123">这可以是节点的 <see langword="string" /> 值，还可以是具有已编译 XPath 表达式的 <see cref="T:System.Xml.XPath.XPathExpression" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="071f4-123">This can be the <see langword="string" /> value of the node or an <see cref="T:System.Xml.XPath.XPathExpression" /> object with a compiled XPath expression.</span></span></param>
        <param name="order"><span data-ttu-id="071f4-124">一个 <see cref="T:System.Xml.XPath.XmlSortOrder" /> 值，它指示排序顺序。</span><span class="sxs-lookup"><span data-stu-id="071f4-124">An <see cref="T:System.Xml.XPath.XmlSortOrder" /> value indicating the sort order.</span></span></param>
        <param name="caseOrder"><span data-ttu-id="071f4-125">一个 <see cref="T:System.Xml.XPath.XmlCaseOrder" /> 值，它指示大写字母和小写字母的排序方式。</span><span class="sxs-lookup"><span data-stu-id="071f4-125">An <see cref="T:System.Xml.XPath.XmlCaseOrder" /> value indicating how to sort uppercase and lowercase letters.</span></span></param>
        <param name="lang"><span data-ttu-id="071f4-126">要用于比较的语言。</span><span class="sxs-lookup"><span data-stu-id="071f4-126">The language to use for comparison.</span></span> <span data-ttu-id="071f4-127">使用 <see cref="T:System.Globalization.CultureInfo" /> 类，该类可传递到适用于语言类型（例如，“us-en”表示美国英语）的 <see cref="Overload:System.String.Compare" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="071f4-127">Uses the <see cref="T:System.Globalization.CultureInfo" /> class that can be passed to the <see cref="Overload:System.String.Compare" /> method for the language types, for example, "us-en" for U.S. English.</span></span> <span data-ttu-id="071f4-128">如果指定了空的字符串，则使用系统环境来确定 <see cref="T:System.Globalization.CultureInfo" />。</span><span class="sxs-lookup"><span data-stu-id="071f4-128">If an empty string is specified, the system environment is used to determine the <see cref="T:System.Globalization.CultureInfo" />.</span></span></param>
        <param name="dataType"><span data-ttu-id="071f4-129">一个 <see cref="T:System.Xml.XPath.XmlDataType" /> 值，它指示数据类型的排序顺序。</span><span class="sxs-lookup"><span data-stu-id="071f4-129">An <see cref="T:System.Xml.XPath.XmlDataType" /> value indicating the sort order for the data type.</span></span></param>
        <summary><span data-ttu-id="071f4-130">当在派生类中被重写时，根据所提供的参数对 XPath 表达式所选的节点进行排序。</span><span class="sxs-lookup"><span data-stu-id="071f4-130">When overridden in a derived class, sorts the nodes selected by the XPath expression according to the supplied parameters.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
-   <span data-ttu-id="071f4-131">添加排序的顺序提供排序键顺序。</span><span class="sxs-lookup"><span data-stu-id="071f4-131">The order in which the sorts are added provides the sort key order.</span></span>  
  
-   <span data-ttu-id="071f4-132">如果 <xref:System.Xml.XPath.XPathExpression> 或排序关键字需要命名空间解析，则必须使用 <xref:System.Xml.XPath.XPathExpression.SetContext%2A> 方法来提供 <xref:System.Xml.XmlNamespaceManager> 命名空间解析。</span><span class="sxs-lookup"><span data-stu-id="071f4-132">If the <xref:System.Xml.XPath.XPathExpression> or the sort key requires namespace resolution, you must use the <xref:System.Xml.XPath.XPathExpression.SetContext%2A> method to provide an <xref:System.Xml.XmlNamespaceManager> for namespace resolution.</span></span>  
  
-   <span data-ttu-id="071f4-133">如果不 <xref:System.Xml.XPath.XPathExpression> 包含前缀，则假定命名空间统一资源标识符 (URI) 为空命名空间。</span><span class="sxs-lookup"><span data-stu-id="071f4-133">If the <xref:System.Xml.XPath.XPathExpression> does not include a prefix, it is assumed that the namespace Uniform Resource Identifier (URI) is the empty namespace.</span></span> <span data-ttu-id="071f4-134">如果 XML 包含默认命名空间，则仍必须使用方法， <xref:System.Xml.XPath.XPathExpression.SetContext%2A> 并提供一个 <xref:System.Xml.XmlNamespaceManager> ，其中包含用于处理默认命名空间的前缀和命名空间 URI。</span><span class="sxs-lookup"><span data-stu-id="071f4-134">If your XML includes a default namespace, you must still use the <xref:System.Xml.XPath.XPathExpression.SetContext%2A> method and provide an <xref:System.Xml.XmlNamespaceManager> that contains a prefix and namespace URI to handle the default namespace.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="071f4-135">下面的示例演示如何按价格以降序对书籍文档进行排序。</span><span class="sxs-lookup"><span data-stu-id="071f4-135">The following example shows how to sort the books document by price in descending order.</span></span>  
  
 [!code-vb[XPathXMLExamples#4](~/samples/snippets/visualbasic/VS_Snippets_Data/XPathXMLExamples/vb/xpathexpression.addsort.vb#4)]  
  
 [!code-csharp[XPathXMLExamples#5](~/samples/snippets/csharp/VS_Snippets_Data/XPathXMLExamples/cs/xpathexpression.addsort.cs#5)]  
  
 <span data-ttu-id="071f4-136">该示例使用 `books.xml` 文件作为输入。</span><span class="sxs-lookup"><span data-stu-id="071f4-136">The example takes the `books.xml` file as input.</span></span>  
  
```xml  
  
<?xml version="1.0" encoding="utf-8" ?>   
<bookstore>  
    <book genre="autobiography" publicationdate="1981-03-22" ISBN="1-861003-11-0">  
        <title>The Autobiography of Benjamin Franklin</title>  
        <author>  
            <first-name>Benjamin</first-name>  
            <last-name>Franklin</last-name>  
        </author>  
        <price>8.99</price>  
    </book>  
    <book genre="novel" publicationdate="1967-11-17" ISBN="0-201-63361-2">  
        <title>The Confidence Man</title>  
        <author>  
            <first-name>Herman</first-name>  
            <last-name>Melville</last-name>  
        </author>  
        <price>11.99</price>  
    </book>  
    <book genre="philosophy" publicationdate="1991-02-15" ISBN="1-861001-57-6">  
        <title>The Gorgias</title>  
        <author>  
            <name>Plato</name>  
        </author>  
        <price>9.99</price>  
    </book>  
</bookstore>  
  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XPath.XPathException"><span data-ttu-id="071f4-137"><see cref="T:System.Xml.XPath.XPathExpression" /> 或排序关键字包括前缀，并且未提供 <see cref="T:System.Xml.XmlNamespaceManager" /> 或未在所提供的 <see cref="T:System.Xml.XmlNamespaceManager" /> 中找到该前缀。</span><span class="sxs-lookup"><span data-stu-id="071f4-137">The <see cref="T:System.Xml.XPath.XPathExpression" /> or sort key includes a prefix and either an <see cref="T:System.Xml.XmlNamespaceManager" /> is not provided, or the prefix cannot be found in the supplied <see cref="T:System.Xml.XmlNamespaceManager" />.</span></span></exception>
        <altmember cref="T:System.Xml.XPath.XmlSortOrder" />
        <altmember cref="T:System.Xml.XPath.XmlCaseOrder" />
        <altmember cref="T:System.Xml.XPath.XmlDataType" />
        <altmember cref="T:System.Xml.XmlNamespaceManager" />
        <altmember cref="T:System.Globalization.CultureInfo" />
        <altmember cref="Overload:System.String.Compare" />
        <altmember cref="M:System.Xml.XPath.XPathExpression.SetContext(System.Xml.XmlNamespaceManager)" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=148089"><span data-ttu-id="071f4-138">传递给 XPathExpression 的字符串中的命名空间前缀。 AddSort</span><span class="sxs-lookup"><span data-stu-id="071f4-138">Namespace Prefix in String Passed to XPathExpression.AddSort</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public abstract System.Xml.XPath.XPathExpression Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XPath.XPathExpression Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XPath.XPathExpression.Clone" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Clone () As XPathExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Xml::XPath::XPathExpression ^ Clone();" />
      <MemberSignature Language="F#" Value="abstract member Clone : unit -&gt; System.Xml.XPath.XPathExpression" Usage="xPathExpression.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XPath.XPathExpression</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="071f4-139">当在派生类中重写时，获取此 <see cref="T:System.Xml.XPath.XPathExpression" /> 的复本。</span><span class="sxs-lookup"><span data-stu-id="071f4-139">When overridden in a derived class, returns a clone of this <see cref="T:System.Xml.XPath.XPathExpression" />.</span></span></summary>
        <returns><span data-ttu-id="071f4-140">一个新 <see cref="T:System.Xml.XPath.XPathExpression" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="071f4-140">A new <see cref="T:System.Xml.XPath.XPathExpression" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="071f4-141">当在派生类中重写时， <xref:System.Xml.XPath.XPathExpression.Clone%2A> 方法将返回此 <xref:System.Xml.XPath.XPathExpression> 对象的具有与此对象相同的状态的克隆 <xref:System.Xml.XPath.XPathExpression> 。</span><span class="sxs-lookup"><span data-stu-id="071f4-141">When overridden in a derived class, the <xref:System.Xml.XPath.XPathExpression.Clone%2A> method returns a clone of this <xref:System.Xml.XPath.XPathExpression> object with the same state as this <xref:System.Xml.XPath.XPathExpression> object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Compile">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="071f4-142">编译指定的 XPath 表达式，并且返回表示 XPath 表达式的 <see cref="T:System.Xml.XPath.XPathExpression" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="071f4-142">Compiles the XPath expression specified and returns an <see cref="T:System.Xml.XPath.XPathExpression" /> object that represents the XPath expression.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Compile">
      <MemberSignature Language="C#" Value="public static System.Xml.XPath.XPathExpression Compile (string xpath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XPath.XPathExpression Compile(string xpath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XPath.XPathExpression.Compile(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Compile (xpath As String) As XPathExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XPath::XPathExpression ^ Compile(System::String ^ xpath);" />
      <MemberSignature Language="F#" Value="static member Compile : string -&gt; System.Xml.XPath.XPathExpression" Usage="System.Xml.XPath.XPathExpression.Compile xpath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.XPath.XPathExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xpath" Type="System.String" Index="0" FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="xpath"><span data-ttu-id="071f4-143">XPath 表达式。</span><span class="sxs-lookup"><span data-stu-id="071f4-143">An XPath expression.</span></span></param>
        <summary><span data-ttu-id="071f4-144">编译指定的 XPath 表达式并返回表示 XPath 表达式的 <see cref="T:System.Xml.XPath.XPathExpression" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="071f4-144">Compiles the XPath expression specified and returns an <see cref="T:System.Xml.XPath.XPathExpression" /> object representing the XPath expression.</span></span></summary>
        <returns><span data-ttu-id="071f4-145">一个 <see cref="T:System.Xml.XPath.XPathExpression" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="071f4-145">An <see cref="T:System.Xml.XPath.XPathExpression" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="071f4-146">计算 XPath 表达式以生成以下结果类型之一。</span><span class="sxs-lookup"><span data-stu-id="071f4-146">An XPath expression is evaluated to yield one of the following result types.</span></span>  
  
-   <xref:System.Xml.XPath.XPathResultType.NodeSet>  
  
-   <xref:System.Xml.XPath.XPathResultType.Boolean>  
  
-   <xref:System.Xml.XPath.XPathResultType.Number>  
  
-   <xref:System.Xml.XPath.XPathResultType.String>  
  
> [!NOTE]
>  <span data-ttu-id="071f4-147">如果在 XPath 表达式中指定的用户定义函数的参数数目无效 (或在 XPath 表达式中指定了未实现的用户定义函数) ，则仅在运行时出现异常。</span><span class="sxs-lookup"><span data-stu-id="071f4-147">If a user-defined function with an invalid number of arguments (or an unimplemented user-defined function) is specified in the XPath expression, an exception occurs only at run time.</span></span> <span data-ttu-id="071f4-148">在编译时不检查用户定义的函数，并且仅当执行计算表达式时，用户定义函数产生的异常才会出现。</span><span class="sxs-lookup"><span data-stu-id="071f4-148">User-defined functions are not checked at compile time and exceptions that result from user-defined functions occur only if execution evaluates the expression.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="071f4-149">下面的示例演示如何使用 XPath 返回类型确定如何处理 XPath 表达式。</span><span class="sxs-lookup"><span data-stu-id="071f4-149">The following example shows how to use the XPath return type to determine how to process the XPath expression.</span></span> <span data-ttu-id="071f4-150">该示例使用 <xref:System.Xml.XPath.XPathExpression.Compile%2A> 方法返回新的 <xref:System.Xml.XPath.XPathExpression> 对象。</span><span class="sxs-lookup"><span data-stu-id="071f4-150">The example uses the <xref:System.Xml.XPath.XPathExpression.Compile%2A> method to return the new <xref:System.Xml.XPath.XPathExpression> objects.</span></span>  
  
 [!code-cpp[XPathExpression.ReturnType#1](~/samples/snippets/cpp/VS_Snippets_Data/XPathExpression.ReturnType/CPP/returntype.cpp#1)]
 [!code-csharp[XPathExpression.ReturnType#1](~/samples/snippets/csharp/VS_Snippets_Data/XPathExpression.ReturnType/CS/returntype.cs#1)]
 [!code-vb[XPathExpression.ReturnType#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XPathExpression.ReturnType/VB/returntype.vb#1)]  
  
 <span data-ttu-id="071f4-151">该示例使用 `contosoBooks.xml` 文件作为输入。</span><span class="sxs-lookup"><span data-stu-id="071f4-151">The example takes the `contosoBooks.xml` file as input.</span></span>  
  
```xml  
  
<?xml version="1.0" encoding="utf-8" ?>  
<bookstore xmlns="http://www.contoso.com/books">  
    <book genre="autobiography" publicationdate="1981-03-22" ISBN="1-861003-11-0">  
        <title>The Autobiography of Benjamin Franklin</title>  
        <author>  
            <first-name>Benjamin</first-name>  
            <last-name>Franklin</last-name>  
        </author>  
        <price>8.99</price>  
    </book>  
    <book genre="novel" publicationdate="1967-11-17" ISBN="0-201-63361-2">  
        <title>The Confidence Man</title>  
        <author>  
            <first-name>Herman</first-name>  
            <last-name>Melville</last-name>  
        </author>  
        <price>11.99</price>  
    </book>  
    <book genre="philosophy" publicationdate="1991-02-15" ISBN="1-861001-57-6">  
        <title>The Gorgias</title>  
        <author>  
            <name>Plato</name>  
        </author>  
        <price>9.99</price>  
    </book>  
</bookstore>  
  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="071f4-152">XPath 表达式参数不是有效的 XPath 表达式。</span><span class="sxs-lookup"><span data-stu-id="071f4-152">The XPath expression parameter is not a valid XPath expression.</span></span></exception>
        <exception cref="T:System.Xml.XPath.XPathException"><span data-ttu-id="071f4-153">XPath 表达式无效。</span><span class="sxs-lookup"><span data-stu-id="071f4-153">The XPath expression is not valid.</span></span></exception>
        <altmember cref="T:System.Xml.XPath.XPathResultType" />
      </Docs>
    </Member>
    <Member MemberName="Compile">
      <MemberSignature Language="C#" Value="public static System.Xml.XPath.XPathExpression Compile (string xpath, System.Xml.IXmlNamespaceResolver? nsResolver);" FrameworkAlternate="net-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XPath.XPathExpression Compile(string xpath, class System.Xml.IXmlNamespaceResolver nsResolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XPath.XPathExpression.Compile(System.String,System.Xml.IXmlNamespaceResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Compile (xpath As String, nsResolver As IXmlNamespaceResolver) As XPathExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XPath::XPathExpression ^ Compile(System::String ^ xpath, System::Xml::IXmlNamespaceResolver ^ nsResolver);" />
      <MemberSignature Language="F#" Value="static member Compile : string * System.Xml.IXmlNamespaceResolver -&gt; System.Xml.XPath.XPathExpression" Usage="System.Xml.XPath.XPathExpression.Compile (xpath, nsResolver)" />
      <MemberSignature Language="C#" Value="public static System.Xml.XPath.XPathExpression Compile (string xpath, System.Xml.IXmlNamespaceResolver nsResolver);" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XPath.XPathExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xpath" Type="System.String" Index="0" FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="nsResolver" Type="System.Xml.IXmlNamespaceResolver" Index="1" FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="xpath"><span data-ttu-id="071f4-154">XPath 表达式。</span><span class="sxs-lookup"><span data-stu-id="071f4-154">An XPath expression.</span></span></param>
        <param name="nsResolver"><span data-ttu-id="071f4-155">实现用于命名空间解析的 <see cref="T:System.Xml.IXmlNamespaceResolver" /> 接口的对象。</span><span class="sxs-lookup"><span data-stu-id="071f4-155">An object that implements the <see cref="T:System.Xml.IXmlNamespaceResolver" /> interface for namespace resolution.</span></span></param>
        <summary><span data-ttu-id="071f4-156">使用用于命名空间解析的 <see cref="T:System.Xml.IXmlNamespaceResolver" /> 对象编译指定的 XPath 表达式，并且返回表示 XPath 表达式的 <see cref="T:System.Xml.XPath.XPathExpression" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="071f4-156">Compiles the specified XPath expression, with the <see cref="T:System.Xml.IXmlNamespaceResolver" /> object specified for namespace resolution, and returns an <see cref="T:System.Xml.XPath.XPathExpression" /> object that represents the XPath expression.</span></span></summary>
        <returns><span data-ttu-id="071f4-157">一个 <see cref="T:System.Xml.XPath.XPathExpression" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="071f4-157">An <see cref="T:System.Xml.XPath.XPathExpression" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="071f4-158">计算 XPath 表达式以生成以下结果类型之一。</span><span class="sxs-lookup"><span data-stu-id="071f4-158">An XPath expression is evaluated to yield one of the following result types.</span></span>  
  
-   <xref:System.Xml.XPath.XPathResultType.NodeSet>  
  
-   <xref:System.Xml.XPath.XPathResultType.Boolean>  
  
-   <xref:System.Xml.XPath.XPathResultType.Number>  
  
-   <xref:System.Xml.XPath.XPathResultType.String>  
  
> [!NOTE]
>  <span data-ttu-id="071f4-159">如果在 XPath 表达式中指定的用户定义函数的参数数目无效 (或在 XPath 表达式中指定了未实现的用户定义函数) ，则仅在运行时出现异常。</span><span class="sxs-lookup"><span data-stu-id="071f4-159">If a user-defined function with an invalid number of arguments (or an unimplemented user-defined function) is specified in the XPath expression, an exception occurs only at run-time.</span></span> <span data-ttu-id="071f4-160">不会在编译时检查用户定义的函数，并且仅当执行计算表达式时才会出现用户定义函数引发的异常。</span><span class="sxs-lookup"><span data-stu-id="071f4-160">User-defined functions are not checked at compile time and exceptions resulting from user-defined functions occur only if execution evaluates the expression.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="071f4-161"><xref:System.Xml.XPath.XPathExpression>在一个步骤中，通过将 <xref:System.Xml.Xsl.XsltContext> 实现的 <xref:System.Xml.IXmlNamespaceResolver> 作为参数传递给此方法，无法在一个步骤中编译 with 自定义上下文。</span><span class="sxs-lookup"><span data-stu-id="071f4-161">It is not possible to compile a <xref:System.Xml.XPath.XPathExpression> with a custom context in one step by passing an <xref:System.Xml.Xsl.XsltContext>, which implements <xref:System.Xml.IXmlNamespaceResolver>, as an argument to this method.</span></span> <span data-ttu-id="071f4-162">若要将 <xref:System.Xml.XPath.XPathExpression> 与自定义上下文一起使用，必须在 <xref:System.Xml.XPath.XPathExpression.SetContext%2A> 编译表达式后调用方法。</span><span class="sxs-lookup"><span data-stu-id="071f4-162">To use a <xref:System.Xml.XPath.XPathExpression> with a custom context, you must call the <xref:System.Xml.XPath.XPathExpression.SetContext%2A> method after compiling the expression.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="071f4-163">XPath 表达式参数不是有效的 XPath 表达式。</span><span class="sxs-lookup"><span data-stu-id="071f4-163">The XPath expression parameter is not a valid XPath expression.</span></span></exception>
        <exception cref="T:System.Xml.XPath.XPathException"><span data-ttu-id="071f4-164">XPath 表达式无效。</span><span class="sxs-lookup"><span data-stu-id="071f4-164">The XPath expression is not valid.</span></span></exception>
        <altmember cref="T:System.Xml.IXmlNamespaceResolver" />
        <altmember cref="T:System.Xml.XPath.XPathResultType" />
        <altmember cref="Overload:System.Xml.XPath.XPathExpression.SetContext" />
      </Docs>
    </Member>
    <Member MemberName="Expression">
      <MemberSignature Language="C#" Value="public abstract string Expression { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Expression" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XPath.XPathExpression.Expression" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Expression As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ Expression { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Expression : string" Usage="System.Xml.XPath.XPathExpression.Expression" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="071f4-165">当在派生类中重写时，获取 <see cref="T:System.Xml.XPath.XPathExpression" /> 的 <see langword="string" /> 表示形式。</span><span class="sxs-lookup"><span data-stu-id="071f4-165">When overridden in a derived class, gets a <see langword="string" /> representation of the <see cref="T:System.Xml.XPath.XPathExpression" />.</span></span></summary>
        <value><span data-ttu-id="071f4-166"><see langword="string" /> 的 <see cref="T:System.Xml.XPath.XPathExpression" /> 表示形式。</span><span class="sxs-lookup"><span data-stu-id="071f4-166">A <see langword="string" /> representation of the <see cref="T:System.Xml.XPath.XPathExpression" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReturnType">
      <MemberSignature Language="C#" Value="public abstract System.Xml.XPath.XPathResultType ReturnType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.XPath.XPathResultType ReturnType" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XPath.XPathExpression.ReturnType" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property ReturnType As XPathResultType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Xml::XPath::XPathResultType ReturnType { System::Xml::XPath::XPathResultType get(); };" />
      <MemberSignature Language="F#" Value="member this.ReturnType : System.Xml.XPath.XPathResultType" Usage="System.Xml.XPath.XPathExpression.ReturnType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XPath.XPathResultType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="071f4-167">当在派生类中重写时，获取 XPath 表达式的结果类型。</span><span class="sxs-lookup"><span data-stu-id="071f4-167">When overridden in a derived class, gets the result type of the XPath expression.</span></span></summary>
        <value><span data-ttu-id="071f4-168"><see cref="T:System.Xml.XPath.XPathResultType" /> 值，该值表示 XPath 表达式的结果类型。</span><span class="sxs-lookup"><span data-stu-id="071f4-168">An <see cref="T:System.Xml.XPath.XPathResultType" /> value representing the result type of the XPath expression.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="071f4-169">下面的示例演示如何使用 XPath 返回类型确定如何处理 XPath 表达式。</span><span class="sxs-lookup"><span data-stu-id="071f4-169">The following example shows how to use the XPath return type to determine how to process the XPath expression.</span></span>  
  
 [!code-cpp[XPathExpression.ReturnType#1](~/samples/snippets/cpp/VS_Snippets_Data/XPathExpression.ReturnType/CPP/returntype.cpp#1)]
 [!code-csharp[XPathExpression.ReturnType#1](~/samples/snippets/csharp/VS_Snippets_Data/XPathExpression.ReturnType/CS/returntype.cs#1)]
 [!code-vb[XPathExpression.ReturnType#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XPathExpression.ReturnType/VB/returntype.vb#1)]  
  
 <span data-ttu-id="071f4-170">该示例使用 `contosoBooks.xml` 文件作为输入。</span><span class="sxs-lookup"><span data-stu-id="071f4-170">The example takes the `contosoBooks.xml` file as input.</span></span>  
  
```xml  
  
<?xml version="1.0" encoding="utf-8" ?>  
<bookstore xmlns="http://www.contoso.com/books">  
    <book genre="autobiography" publicationdate="1981-03-22" ISBN="1-861003-11-0">  
        <title>The Autobiography of Benjamin Franklin</title>  
        <author>  
            <first-name>Benjamin</first-name>  
            <last-name>Franklin</last-name>  
        </author>  
        <price>8.99</price>  
    </book>  
    <book genre="novel" publicationdate="1967-11-17" ISBN="0-201-63361-2">  
        <title>The Confidence Man</title>  
        <author>  
            <first-name>Herman</first-name>  
            <last-name>Melville</last-name>  
        </author>  
        <price>11.99</price>  
    </book>  
    <book genre="philosophy" publicationdate="1991-02-15" ISBN="1-861001-57-6">  
        <title>The Gorgias</title>  
        <author>  
            <name>Plato</name>  
        </author>  
        <price>9.99</price>  
    </book>  
</bookstore>  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XPath.XPathResultType" />
      </Docs>
    </Member>
    <MemberGroup MemberName="SetContext">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="071f4-171">在派生类中被重写时，指定要用于命名空间解析的 <see cref="T:System.Xml.IXmlNamespaceResolver" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="071f4-171">When overridden in a derived class, specifies the <see cref="T:System.Xml.IXmlNamespaceResolver" /> object to use for namespace resolution.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetContext">
      <MemberSignature Language="C#" Value="public abstract void SetContext (System.Xml.IXmlNamespaceResolver nsResolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetContext(class System.Xml.IXmlNamespaceResolver nsResolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XPath.XPathExpression.SetContext(System.Xml.IXmlNamespaceResolver)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub SetContext (nsResolver As IXmlNamespaceResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void SetContext(System::Xml::IXmlNamespaceResolver ^ nsResolver);" />
      <MemberSignature Language="F#" Value="abstract member SetContext : System.Xml.IXmlNamespaceResolver -&gt; unit" Usage="xPathExpression.SetContext nsResolver" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nsResolver" Type="System.Xml.IXmlNamespaceResolver" Index="0" FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="nsResolver"><span data-ttu-id="071f4-172">实现 <see cref="T:System.Xml.IXmlNamespaceResolver" /> 接口以用于命名空间解析的对象。</span><span class="sxs-lookup"><span data-stu-id="071f4-172">An object that implements the <see cref="T:System.Xml.IXmlNamespaceResolver" /> interface to use for namespace resolution.</span></span></param>
        <summary><span data-ttu-id="071f4-173">在派生类中被重写时，指定要用于命名空间解析的 <see cref="T:System.Xml.IXmlNamespaceResolver" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="071f4-173">When overridden in a derived class, specifies the <see cref="T:System.Xml.IXmlNamespaceResolver" /> object to use for namespace resolution.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="071f4-174">使用实现接口的类（如类）支持命名空间解析 <xref:System.Xml.IXmlNamespaceResolver> <xref:System.Xml.XmlNamespaceManager> 。</span><span class="sxs-lookup"><span data-stu-id="071f4-174">Namespace resolution is supported using classes that implement the <xref:System.Xml.IXmlNamespaceResolver> interface, such as the <xref:System.Xml.XmlNamespaceManager> class.</span></span> <span data-ttu-id="071f4-175">将 <xref:System.Xml.XmlNamespaceManager> 前缀和命名空间统一资源标识符存储 (URI) 映射。</span><span class="sxs-lookup"><span data-stu-id="071f4-175">The <xref:System.Xml.XmlNamespaceManager> stores prefix and namespace Uniform Resource Identifier (URI) mappings.</span></span> <span data-ttu-id="071f4-176">如果 <xref:System.Xml.XPath.XPathExpression> 需要命名空间解析，则必须将前缀和命名空间 URI 对添加到对象（例如 <xref:System.Xml.XmlNamespaceManager> 实现接口的类）， <xref:System.Xml.IXmlNamespaceResolver> 并且 <xref:System.Xml.XPath.XPathExpression.SetContext%2A> 必须调用方法以指定用于 <xref:System.Xml.IXmlNamespaceResolver> 命名空间解析的接口对象。</span><span class="sxs-lookup"><span data-stu-id="071f4-176">If the <xref:System.Xml.XPath.XPathExpression> requires namespace resolution, the prefix and namespace URI pair must be added to an object, such as the <xref:System.Xml.XmlNamespaceManager> class, which implements the <xref:System.Xml.IXmlNamespaceResolver> interface, and the <xref:System.Xml.XPath.XPathExpression.SetContext%2A> method must be called to specify the <xref:System.Xml.IXmlNamespaceResolver> interface object to use for namespace resolution.</span></span>  
  
 <span data-ttu-id="071f4-177">以下是使用方法时要考虑的重要注意事项 <xref:System.Xml.XPath.XPathExpression.SetContext%2A> 。</span><span class="sxs-lookup"><span data-stu-id="071f4-177">The following are important notes to consider when using the <xref:System.Xml.XPath.XPathExpression.SetContext%2A> method.</span></span>  
  
-   <span data-ttu-id="071f4-178">如果不 <xref:System.Xml.XPath.XPathExpression> 包含前缀，则假定命名空间 URI 为空命名空间。</span><span class="sxs-lookup"><span data-stu-id="071f4-178">If the <xref:System.Xml.XPath.XPathExpression> does not include a prefix, it is assumed that the namespace URI is the empty namespace.</span></span> <span data-ttu-id="071f4-179">如果 XML 包含默认命名空间，仍必须使用 <xref:System.Xml.XPath.XPathExpression.SetContext%2A> 方法，并提供一个对象，该对象包含用于处理默认命名空间的前缀和命名空间 URI。</span><span class="sxs-lookup"><span data-stu-id="071f4-179">If your XML includes a default namespace, you must still use the <xref:System.Xml.XPath.XPathExpression.SetContext%2A> method and provide an object that contains a prefix and namespace URI to handle the default namespace.</span></span>  
  
-   <span data-ttu-id="071f4-180">你还可以 <xref:System.Xml.IXmlNamespaceResolver> <xref:System.Xml.XPath.XPathExpression.Compile%2A> 在创建对象时向方法提供用于命名空间解析的接口对象 <xref:System.Xml.XPath.XPathExpression> 。</span><span class="sxs-lookup"><span data-stu-id="071f4-180">You can also supply an <xref:System.Xml.IXmlNamespaceResolver> interface object for namespace resolution to the <xref:System.Xml.XPath.XPathExpression.Compile%2A> method when you create your <xref:System.Xml.XPath.XPathExpression> object.</span></span>  
  
-   <span data-ttu-id="071f4-181"><xref:System.Xml.XPath.XPathExpression.SetContext%2A> 接受 <xref:System.Xml.Xsl.XsltContext> 作为命名空间解析程序，以便您可以实现自定义上下文并基于和使用函数和 <xref:System.Xml.Xsl.IXsltContextFunction> 变量 <xref:System.Xml.Xsl.IXsltContextVariable> 。</span><span class="sxs-lookup"><span data-stu-id="071f4-181"><xref:System.Xml.XPath.XPathExpression.SetContext%2A> accepts <xref:System.Xml.Xsl.XsltContext> as a namespace resolver, so you can implement a custom context and use functions and variables based on <xref:System.Xml.Xsl.IXsltContextFunction> and <xref:System.Xml.Xsl.IXsltContextVariable>.</span></span> <span data-ttu-id="071f4-182">XPath 表达式将执行它们。</span><span class="sxs-lookup"><span data-stu-id="071f4-182">The XPath expression will execute them.</span></span> <span data-ttu-id="071f4-183">有关详细信息，请参阅 [用户定义的函数和变量](/dotnet/standard/data/xml/user-defined-functions-and-variables)。</span><span class="sxs-lookup"><span data-stu-id="071f4-183">For more information, see [User Defined Functions and Variables](/dotnet/standard/data/xml/user-defined-functions-and-variables).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="071f4-184">下面的示例演示如何使用 XPath 返回类型确定如何处理 XPath 表达式，以及如何使用 <xref:System.Xml.XPath.XPathExpression.SetContext%2A> 方法来提供 <xref:System.Xml.XmlNamespaceManager> 用于命名空间解析的对象。</span><span class="sxs-lookup"><span data-stu-id="071f4-184">The following example shows how to use the XPath return type to determine how to process the XPath expression, and how to use the <xref:System.Xml.XPath.XPathExpression.SetContext%2A> method to provide an <xref:System.Xml.XmlNamespaceManager> object for namespace resolution.</span></span>  
  
 [!code-cpp[XPathExpression.ReturnType#1](~/samples/snippets/cpp/VS_Snippets_Data/XPathExpression.ReturnType/CPP/returntype.cpp#1)]
 [!code-csharp[XPathExpression.ReturnType#1](~/samples/snippets/csharp/VS_Snippets_Data/XPathExpression.ReturnType/CS/returntype.cs#1)]
 [!code-vb[XPathExpression.ReturnType#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XPathExpression.ReturnType/VB/returntype.vb#1)]  
  
 <span data-ttu-id="071f4-185">该示例使用 `contosoBooks.xml` 文件作为输入。</span><span class="sxs-lookup"><span data-stu-id="071f4-185">The example takes the `contosoBooks.xml` file as input.</span></span>  
  
```xml  
  
<?xml version="1.0" encoding="utf-8" ?>  
<bookstore xmlns="http://www.contoso.com/books">  
    <book genre="autobiography" publicationdate="1981-03-22" ISBN="1-861003-11-0">  
        <title>The Autobiography of Benjamin Franklin</title>  
        <author>  
            <first-name>Benjamin</first-name>  
            <last-name>Franklin</last-name>  
        </author>  
        <price>8.99</price>  
    </book>  
    <book genre="novel" publicationdate="1967-11-17" ISBN="0-201-63361-2">  
        <title>The Confidence Man</title>  
        <author>  
            <first-name>Herman</first-name>  
            <last-name>Melville</last-name>  
        </author>  
        <price>11.99</price>  
    </book>  
    <book genre="philosophy" publicationdate="1991-02-15" ISBN="1-861001-57-6">  
        <title>The Gorgias</title>  
        <author>  
            <name>Plato</name>  
        </author>  
        <price>9.99</price>  
    </book>  
</bookstore>  
  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XPath.XPathException"><span data-ttu-id="071f4-186"><see cref="T:System.Xml.IXmlNamespaceResolver" /> 对象参数不派生自 <see cref="T:System.Xml.IXmlNamespaceResolver" />。</span><span class="sxs-lookup"><span data-stu-id="071f4-186">The <see cref="T:System.Xml.IXmlNamespaceResolver" /> object parameter is not derived from <see cref="T:System.Xml.IXmlNamespaceResolver" />.</span></span></exception>
        <altmember cref="M:System.Xml.XPath.XPathExpression.SetContext(System.Xml.XmlNamespaceManager)" />
        <altmember cref="T:System.Xml.IXmlNamespaceResolver" />
        <altmember cref="M:System.Xml.XPath.XPathExpression.Compile(System.String,System.Xml.IXmlNamespaceResolver)" />
        <related type="Article" href="/dotnet/standard/data/xml/user-defined-functions-and-variables"><span data-ttu-id="071f4-187">用户定义的函数和变量</span><span class="sxs-lookup"><span data-stu-id="071f4-187">User Defined Functions and Variables</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="SetContext">
      <MemberSignature Language="C#" Value="public abstract void SetContext (System.Xml.XmlNamespaceManager nsManager);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetContext(class System.Xml.XmlNamespaceManager nsManager) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XPath.XPathExpression.SetContext(System.Xml.XmlNamespaceManager)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub SetContext (nsManager As XmlNamespaceManager)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void SetContext(System::Xml::XmlNamespaceManager ^ nsManager);" />
      <MemberSignature Language="F#" Value="abstract member SetContext : System.Xml.XmlNamespaceManager -&gt; unit" Usage="xPathExpression.SetContext nsManager" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nsManager" Type="System.Xml.XmlNamespaceManager" />
      </Parameters>
      <Docs>
        <param name="nsManager"><span data-ttu-id="071f4-188">要用于命名空间解析的 <see cref="T:System.Xml.XmlNamespaceManager" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="071f4-188">An <see cref="T:System.Xml.XmlNamespaceManager" /> object to use for namespace resolution.</span></span></param>
        <summary><span data-ttu-id="071f4-189">在派生类中被重写时，指定要用于命名空间解析的 <see cref="T:System.Xml.XmlNamespaceManager" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="071f4-189">When overridden in a derived class, specifies the <see cref="T:System.Xml.XmlNamespaceManager" /> object to use for namespace resolution.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="071f4-190">使用将 <xref:System.Xml.XmlNamespaceManager> 前缀和命名空间统一资源标识符存储 (URI) 映射的类支持命名空间解析。</span><span class="sxs-lookup"><span data-stu-id="071f4-190">Namespace resolution is supported using the <xref:System.Xml.XmlNamespaceManager> class which stores prefix and namespace Uniform Resource Identifier (URI) mappings.</span></span> <span data-ttu-id="071f4-191">如果 <xref:System.Xml.XPath.XPathExpression> 需要命名空间解析，则必须将前缀和命名空间 URI 对添加到 <xref:System.Xml.XmlNamespaceManager> 对象中，并且 <xref:System.Xml.XPath.XPathExpression.SetContext%2A> 必须调用方法以指定 <xref:System.Xml.XmlNamespaceManager> 要用于命名空间解析的对象。</span><span class="sxs-lookup"><span data-stu-id="071f4-191">If the <xref:System.Xml.XPath.XPathExpression> requires namespace resolution, the prefix and namespace URI pair must be added to the <xref:System.Xml.XmlNamespaceManager> object and the <xref:System.Xml.XPath.XPathExpression.SetContext%2A> method must be called to specify the <xref:System.Xml.XmlNamespaceManager> object to use for namespace resolution.</span></span>  
  
 <span data-ttu-id="071f4-192">以下是使用方法时要考虑的重要注意事项 <xref:System.Xml.XPath.XPathExpression.SetContext%2A> 。</span><span class="sxs-lookup"><span data-stu-id="071f4-192">The following are important notes to consider when using the <xref:System.Xml.XPath.XPathExpression.SetContext%2A> method.</span></span>  
  
-   <span data-ttu-id="071f4-193">如果不 <xref:System.Xml.XPath.XPathExpression> 包含前缀，则假定命名空间 URI 为空命名空间。</span><span class="sxs-lookup"><span data-stu-id="071f4-193">If the <xref:System.Xml.XPath.XPathExpression> does not include a prefix, it is assumed that the namespace URI is the empty namespace.</span></span> <span data-ttu-id="071f4-194">如果 XML 包含默认命名空间，仍必须使用 <xref:System.Xml.XPath.XPathExpression.SetContext%2A> 方法，并提供一个 <xref:System.Xml.XmlNamespaceManager> 对象，该对象包含用于处理默认命名空间的前缀和命名空间 URI。</span><span class="sxs-lookup"><span data-stu-id="071f4-194">If your XML includes a default namespace, you must still use the <xref:System.Xml.XPath.XPathExpression.SetContext%2A> method and provide an <xref:System.Xml.XmlNamespaceManager> object that contains a prefix and namespace URI to handle the default namespace.</span></span>  
  
-   <span data-ttu-id="071f4-195">你还可以 <xref:System.Xml.IXmlNamespaceResolver> <xref:System.Xml.XPath.XPathExpression.Compile%2A> 在创建对象时向方法提供用于命名空间解析的对象 <xref:System.Xml.XPath.XPathExpression> 。</span><span class="sxs-lookup"><span data-stu-id="071f4-195">You can also supply an <xref:System.Xml.IXmlNamespaceResolver> object for namespace resolution to the <xref:System.Xml.XPath.XPathExpression.Compile%2A> method when you create your <xref:System.Xml.XPath.XPathExpression> object.</span></span>  
  
-   <span data-ttu-id="071f4-196"><xref:System.Xml.XPath.XPathExpression.SetContext%2A> 接受 <xref:System.Xml.Xsl.XsltContext> 作为命名空间解析程序，以便您可以实现自定义上下文并基于和使用函数和 <xref:System.Xml.Xsl.IXsltContextFunction> 变量 <xref:System.Xml.Xsl.IXsltContextVariable> 。</span><span class="sxs-lookup"><span data-stu-id="071f4-196"><xref:System.Xml.XPath.XPathExpression.SetContext%2A> accepts <xref:System.Xml.Xsl.XsltContext> as a namespace resolver, so you can implement a custom context and use functions and variables based on <xref:System.Xml.Xsl.IXsltContextFunction> and <xref:System.Xml.Xsl.IXsltContextVariable>.</span></span> <span data-ttu-id="071f4-197">XPath 表达式将执行它们。</span><span class="sxs-lookup"><span data-stu-id="071f4-197">The XPath expression will execute them.</span></span> <span data-ttu-id="071f4-198">有关详细信息，请参阅 [用户定义的函数和变量](/dotnet/standard/data/xml/user-defined-functions-and-variables)。</span><span class="sxs-lookup"><span data-stu-id="071f4-198">For more information, see [User Defined Functions and Variables](/dotnet/standard/data/xml/user-defined-functions-and-variables).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="071f4-199">下面的示例演示如何使用 XPath 返回类型确定如何处理 XPath 表达式，以及如何使用 <xref:System.Xml.XPath.XPathExpression.SetContext%2A> 方法来提供 <xref:System.Xml.XmlNamespaceManager> 用于命名空间解析的对象。</span><span class="sxs-lookup"><span data-stu-id="071f4-199">The following example shows how to use the XPath return type to determine how to process the XPath expression, and how to use the <xref:System.Xml.XPath.XPathExpression.SetContext%2A> method to provide an <xref:System.Xml.XmlNamespaceManager> object for namespace resolution.</span></span>  
  
 [!code-cpp[XPathExpression.ReturnType#1](~/samples/snippets/cpp/VS_Snippets_Data/XPathExpression.ReturnType/CPP/returntype.cpp#1)]
 [!code-csharp[XPathExpression.ReturnType#1](~/samples/snippets/csharp/VS_Snippets_Data/XPathExpression.ReturnType/CS/returntype.cs#1)]
 [!code-vb[XPathExpression.ReturnType#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XPathExpression.ReturnType/VB/returntype.vb#1)]  
  
 <span data-ttu-id="071f4-200">该示例使用 `contosoBooks.xml` 文件作为输入。</span><span class="sxs-lookup"><span data-stu-id="071f4-200">The example takes the `contosoBooks.xml` file as input.</span></span>  
  
```xml  
  
<?xml version="1.0" encoding="utf-8" ?>  
<bookstore xmlns="http://www.contoso.com/books">  
    <book genre="autobiography" publicationdate="1981-03-22" ISBN="1-861003-11-0">  
        <title>The Autobiography of Benjamin Franklin</title>  
        <author>  
            <first-name>Benjamin</first-name>  
            <last-name>Franklin</last-name>  
        </author>  
        <price>8.99</price>  
    </book>  
    <book genre="novel" publicationdate="1967-11-17" ISBN="0-201-63361-2">  
        <title>The Confidence Man</title>  
        <author>  
            <first-name>Herman</first-name>  
            <last-name>Melville</last-name>  
        </author>  
        <price>11.99</price>  
    </book>  
    <book genre="philosophy" publicationdate="1991-02-15" ISBN="1-861001-57-6">  
        <title>The Gorgias</title>  
        <author>  
            <name>Plato</name>  
        </author>  
        <price>9.99</price>  
    </book>  
</bookstore>  
  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XPath.XPathException"><span data-ttu-id="071f4-201"><see cref="T:System.Xml.XmlNamespaceManager" /> 对象参数不是从 <see cref="T:System.Xml.XmlNamespaceManager" /> 类派生的。</span><span class="sxs-lookup"><span data-stu-id="071f4-201">The <see cref="T:System.Xml.XmlNamespaceManager" /> object parameter is not derived from the <see cref="T:System.Xml.XmlNamespaceManager" /> class.</span></span></exception>
        <altmember cref="T:System.Xml.XmlNamespaceManager" />
        <altmember cref="M:System.Xml.XPath.XPathExpression.SetContext(System.Xml.IXmlNamespaceResolver)" />
        <altmember cref="T:System.Xml.IXmlNamespaceResolver" />
        <altmember cref="M:System.Xml.XPath.XPathExpression.Compile(System.String,System.Xml.IXmlNamespaceResolver)" />
        <related type="Article" href="/dotnet/standard/data/xml/user-defined-functions-and-variables"><span data-ttu-id="071f4-202">用户定义的函数和变量</span><span class="sxs-lookup"><span data-stu-id="071f4-202">User Defined Functions and Variables</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>
