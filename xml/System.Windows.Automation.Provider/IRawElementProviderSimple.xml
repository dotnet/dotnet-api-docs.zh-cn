<Type Name="IRawElementProviderSimple" FullName="System.Windows.Automation.Provider.IRawElementProviderSimple">
  <Metadata><Meta Name="ms.openlocfilehash" Value="00e744e4d24c8b7b20e26d6fe2ebb3555bbed2c8" /><Meta Name="ms.sourcegitcommit" Value="9f423345753728e8cad38d4a22663a109e69ea91" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="03/04/2021" /><Meta Name="ms.locfileid" Value="102081549" /></Metadata><TypeSignature Language="C#" Value="public interface IRawElementProviderSimple" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IRawElementProviderSimple" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Automation.Provider.IRawElementProviderSimple" />
  <TypeSignature Language="VB.NET" Value="Public Interface IRawElementProviderSimple" />
  <TypeSignature Language="C++ CLI" Value="public interface class IRawElementProviderSimple" />
  <TypeSignature Language="F#" Value="type IRawElementProviderSimple = interface" />
  <AssemblyInfo>
    <AssemblyName>UIAutomationProvider</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName Language="C#">[System.Runtime.InteropServices.ComVisible(true)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.ComVisible(true)&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName Language="C#">[System.Runtime.InteropServices.Guid("d6dd68d1-86fd-4332-8666-9abedea2d24c")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.Guid("d6dd68d1-86fd-4332-8666-9abedea2d24c")&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName Language="C#">[System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>提供公开 UI 元素基本信息的方法和属性。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此接口可在 UI 自动化提供程序上实现，用于简单元素（如按钮）。 它还可在为已具有默认提供程序的元素提供附加属性或控件模式或覆盖现有属性或控件模式的提供程序上实现。  
  
 复杂元素的提供程序必须实现 <xref:System.Windows.Automation.Provider.IRawElementProviderFragment> 或 <xref:System.Windows.Automation.Provider.IRawElementProviderFragmentRoot> 。  
  
 ]]></format>
    </remarks>
    <related type="Article" href="/dotnet/framework/ui-automation/ui-automation-providers-overview">UI 自动化提供程序概述</related>
    <related type="Article" href="/dotnet/framework/ui-automation/server-side-ui-automation-provider-implementation">服务器端 UI 自动化提供程序实现</related>
    <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms771658(v=vs.90)">简单提供程序示例</related>
    <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms771502(v=vs.90)">片段提供程序示例</related>
  </Docs>
  <Members>
    <Member MemberName="GetPatternProvider">
      <MemberSignature Language="C#" Value="public object GetPatternProvider (int patternId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetPatternProvider(int32 patternId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Provider.IRawElementProviderSimple.GetPatternProvider(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPatternProvider (patternId As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetPatternProvider(int patternId);" />
      <MemberSignature Language="F#" Value="abstract member GetPatternProvider : int -&gt; obj" Usage="iRawElementProviderSimple.GetPatternProvider patternId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="patternId" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="patternId">模式的标识符。</param>
        <summary>检索一个对象，该对象在 UI 自动化元素上提供对控件模式的支持。</summary>
        <returns>实现模式接口的对象；如果不支持模式，则为 <see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的示例演示 <xref:System.Windows.Automation.Provider.IRawElementProviderSimple.GetPatternProvider%2A> 仅支持的提供程序的实现 <xref:System.Windows.Automation.InvokePattern> 。  
  
 [!code-csharp[UIAProvider_snip#101](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAProvider_snip/CSharp/FragmentRoot.cs#101)]
 [!code-vb[UIAProvider_snip#101](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAProvider_snip/VisualBasic/FragmentRoot.vb#101)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/ui-automation/ui-automation-providers-overview">UI 自动化提供程序概述</related>
        <related type="Article" href="/dotnet/framework/ui-automation/server-side-ui-automation-provider-implementation">服务器端 UI 自动化提供程序实现</related>
      </Docs>
    </Member>
    <Member MemberName="GetPropertyValue">
      <MemberSignature Language="C#" Value="public object GetPropertyValue (int propertyId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetPropertyValue(int32 propertyId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Provider.IRawElementProviderSimple.GetPropertyValue(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPropertyValue (propertyId As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetPropertyValue(int propertyId);" />
      <MemberSignature Language="F#" Value="abstract member GetPropertyValue : int -&gt; obj" Usage="iRawElementProviderSimple.GetPropertyValue propertyId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyId" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="propertyId">属性标识符。</param>
        <summary>检索 UI 自动化提供程序支持的某个属性的值。</summary>
        <returns>属性值；如果此提供程序不支持该属性，则为 <see langword="null" />；如果根本不支持该属性，则为 <see cref="F:System.Windows.Automation.AutomationElementIdentifiers.NotSupported" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 仅当提供程序 <xref:System.Windows.Automation.AutomationElementIdentifiers.NotSupported> 显式隐藏属性值并且请求不会传递给其他提供程序时，提供程序才应返回。  
  
   
  
## Examples  
 下面的代码示例演示 <xref:System.Windows.Automation.Provider.IRawElementProviderSimple.GetPropertyValue%2A> 自定义按钮控件的实现。  
  
 [!code-csharp[UIAProvider_snip#102](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAProvider_snip/CSharp/FragmentRoot.cs#102)]
 [!code-vb[UIAProvider_snip#102](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAProvider_snip/VisualBasic/FragmentRoot.vb#102)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/ui-automation/ui-automation-providers-overview">UI 自动化提供程序概述</related>
        <related type="Article" href="/dotnet/framework/ui-automation/server-side-ui-automation-provider-implementation">服务器端 UI 自动化提供程序实现</related>
      </Docs>
    </Member>
    <Member MemberName="HostRawElementProvider">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.Provider.IRawElementProviderSimple HostRawElementProvider { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Automation.Provider.IRawElementProviderSimple HostRawElementProvider" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.Provider.IRawElementProviderSimple.HostRawElementProvider" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HostRawElementProvider As IRawElementProviderSimple" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Automation::Provider::IRawElementProviderSimple ^ HostRawElementProvider { System::Windows::Automation::Provider::IRawElementProviderSimple ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.HostRawElementProvider : System.Windows.Automation.Provider.IRawElementProviderSimple" Usage="System.Windows.Automation.Provider.IRawElementProviderSimple.HostRawElementProvider" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Provider.IRawElementProviderSimple</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取此元素的基本提供程序。</summary>
        <value>基本提供程序，或 <see langword="null" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此属性是自定义控件的窗口的 UI 自动化提供程序。 UI 自动化将此提供程序与窗口中承载的控件的提供程序实现一起使用。 例如，元素的运行时标识符是从宿主提供程序获取的。  
  
 宿主提供程序在以下任何情况下都必须返回：  
  
-   此元素是片段的根。  
  
-   元素是一个简单的元素，如按钮。  
  
-   提供程序是一个重定位占位符。  
  
 在其他情况下，属性应返回 `null` 。  
  
   
  
## Examples  
 下面的示例代码演示了 <xref:System.Windows.Automation.Provider.IRawElementProviderSimple.HostRawElementProvider%2A> 在 Windows 窗体中承载的片段根的的实现。  
  
 [!code-csharp[UIAProvider_snip#103](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAProvider_snip/CSharp/FragmentRoot.cs#103)]
 [!code-vb[UIAProvider_snip#103](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAProvider_snip/VisualBasic/FragmentRoot.vb#103)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/ui-automation/ui-automation-providers-overview">UI 自动化提供程序概述</related>
        <related type="Article" href="/dotnet/framework/ui-automation/server-side-ui-automation-provider-implementation">服务器端 UI 自动化提供程序实现</related>
      </Docs>
    </Member>
    <Member MemberName="ProviderOptions">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.Provider.ProviderOptions ProviderOptions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Automation.Provider.ProviderOptions ProviderOptions" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.Provider.IRawElementProviderSimple.ProviderOptions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProviderOptions As ProviderOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Automation::Provider::ProviderOptions ProviderOptions { System::Windows::Automation::Provider::ProviderOptions get(); };" />
      <MemberSignature Language="F#" Value="member this.ProviderOptions : System.Windows.Automation.Provider.ProviderOptions" Usage="System.Windows.Automation.Provider.IRawElementProviderSimple.ProviderOptions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Provider.ProviderOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个值，该值指定 UI 自动化提供程序的特征；例如，该程序是客户端还是服务器端提供程序。</summary>
        <value><see cref="F:System.Windows.Automation.Provider.ProviderOptions.ClientSideProvider" /> 或 <see cref="F:System.Windows.Automation.Provider.ProviderOptions.ServerSideProvider" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 UI 自动化将不同类型的提供程序视为不同的。 例如，来自服务器端提供程序的事件将广播到所有侦听 UI 自动化客户端进程，但来自客户端提供程序的事件保留在该客户端进程中。  
  
   
  
## Examples  
 下面的代码示例演示了 <xref:System.Windows.Automation.Provider.IRawElementProviderSimple.ProviderOptions%2A> 服务器端 UI 自动化提供程序的实现。  
  
 [!code-csharp[UIAProvider_snip#104](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAProvider_snip/CSharp/FragmentRoot.cs#104)]
 [!code-vb[UIAProvider_snip#104](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAProvider_snip/VisualBasic/FragmentRoot.vb#104)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/ui-automation/ui-automation-providers-overview">UI 自动化提供程序概述</related>
        <related type="Article" href="/dotnet/framework/ui-automation/server-side-ui-automation-provider-implementation">服务器端 UI 自动化提供程序实现</related>
      </Docs>
    </Member>
  </Members>
</Type>
