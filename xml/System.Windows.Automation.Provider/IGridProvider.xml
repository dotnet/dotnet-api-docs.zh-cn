<Type Name="IGridProvider" FullName="System.Windows.Automation.Provider.IGridProvider">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e424388da39c3d69313be2f96171e1508bdefd32" /><Meta Name="ms.sourcegitcommit" Value="11d168140aa8fade0768c2a9dde3e3bcacfdfb7d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="05/27/2020" /><Meta Name="ms.locfileid" Value="83957613" /></Metadata><TypeSignature Language="C#" Value="public interface IGridProvider" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IGridProvider" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Automation.Provider.IGridProvider" />
  <TypeSignature Language="VB.NET" Value="Public Interface IGridProvider" />
  <TypeSignature Language="C++ CLI" Value="public interface class IGridProvider" />
  <TypeSignature Language="F#" Value="type IGridProvider = interface" />
  <AssemblyInfo>
    <AssemblyName>UIAutomationProvider</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.Guid("b17d6187-0907-464b-a168-0ef17a1572b1")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="76713-101">公开一些方法和属性，UI 自动化客户端可通过这些方法和属性访问充当某个子元素集合的容器的控件。</span><span class="sxs-lookup"><span data-stu-id="76713-101">Exposes methods and properties to support UI Automation client access to controls that act as containers for a collection of child elements.</span></span> <span data-ttu-id="76713-102">此元素的子级必须实现 <see cref="T:System.Windows.Automation.Provider.IGridItemProvider" />，而且必须使用键盘在可以进行遍历的一个二维逻辑坐标系统中组织（即，UI 自动化客户端可以移动到相邻控件）。</span><span class="sxs-lookup"><span data-stu-id="76713-102">The children of this element must implement <see cref="T:System.Windows.Automation.Provider.IGridItemProvider" /> and be organized in a two-dimensional logical coordinate system that can be traversed (that is, a UI Automation client can move to adjacent controls) by using the keyboard.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76713-103">在必须支持 <xref:System.Windows.Automation.GridPattern> 控件模式的 UI 自动化提供程序上实现。</span><span class="sxs-lookup"><span data-stu-id="76713-103">Implemented on a UI Automation provider that must support the <xref:System.Windows.Automation.GridPattern> control pattern.</span></span>  
  
 <span data-ttu-id="76713-104"><xref:System.Windows.Automation.Provider.IGridProvider> 不会启用网格的主动操作；必须实现 <xref:System.Windows.Automation.Provider.ITransformProvider> 以启用此功能。</span><span class="sxs-lookup"><span data-stu-id="76713-104"><xref:System.Windows.Automation.Provider.IGridProvider> does not enable active manipulation of a grid; <xref:System.Windows.Automation.Provider.ITransformProvider> must be implemented to enable this functionality.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Automation.GridPattern" />
    <related type="Article" href="/dotnet/framework/ui-automation/ui-automation-control-patterns-overview"><span data-ttu-id="76713-105">UI 自动化控件模式概述</span><span class="sxs-lookup"><span data-stu-id="76713-105">UI Automation Control Patterns Overview</span></span></related>
    <related type="Article" href="/dotnet/framework/ui-automation/server-side-ui-automation-provider-implementation"><span data-ttu-id="76713-106">服务器端 UI 自动化提供程序实现</span><span class="sxs-lookup"><span data-stu-id="76713-106">Server-side UI Automation Provider Implementation</span></span></related>
    <related type="Article" href="/dotnet/framework/ui-automation/client-side-ui-automation-provider-implementation"><span data-ttu-id="76713-107">客户端 UI 自动化提供程序实现</span><span class="sxs-lookup"><span data-stu-id="76713-107">Client-side UI Automation Provider Implementation</span></span></related>
    <related type="Article" href="/dotnet/framework/ui-automation/support-control-patterns-in-a-ui-automation-provider"><span data-ttu-id="76713-108">在 UI 自动化提供程序中支持控件模式</span><span class="sxs-lookup"><span data-stu-id="76713-108">Support Control Patterns in a UI Automation Provider</span></span></related>
    <related type="Article" href="https://msdn.microsoft.com/library/234d11a0-7ce7-4309-8989-2f4720e02f78"><span data-ttu-id="76713-109">实现 UI 自动化 Grid 控件模式</span><span class="sxs-lookup"><span data-stu-id="76713-109">Implementing the UI Automation Grid Control Pattern</span></span></related>
  </Docs>
  <Members>
    <Member MemberName="ColumnCount">
      <MemberSignature Language="C#" Value="public int ColumnCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ColumnCount" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.Provider.IGridProvider.ColumnCount" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ColumnCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ColumnCount { int get(); };" />
      <MemberSignature Language="F#" Value="member this.ColumnCount : int" Usage="System.Windows.Automation.Provider.IGridProvider.ColumnCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76713-110">获取网格中的总列数。</span><span class="sxs-lookup"><span data-stu-id="76713-110">Gets the total number of columns in a grid.</span></span></summary>
        <value><span data-ttu-id="76713-111">网格中的总列数。</span><span class="sxs-lookup"><span data-stu-id="76713-111">The total number of columns in a grid.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76713-112">隐藏的行和列（具体取决于提供程序实现）可在 [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] 树中加载，因此将在 <xref:System.Windows.Automation.GridPattern.GridPatternInformation.RowCount%2A> 和 <xref:System.Windows.Automation.GridPattern.GridPatternInformation.ColumnCount%2A> 属性中反映出来。</span><span class="sxs-lookup"><span data-stu-id="76713-112">Hidden rows and columns, depending on the provider implementation, can be loaded in the [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] tree and will therefore be reflected in the <xref:System.Windows.Automation.GridPattern.GridPatternInformation.RowCount%2A> and <xref:System.Windows.Automation.GridPattern.GridPatternInformation.ColumnCount%2A> properties.</span></span> <span data-ttu-id="76713-113">如果尚未加载隐藏的行和列，则不会对其进行计数。</span><span class="sxs-lookup"><span data-stu-id="76713-113">If the hidden rows and columns have not yet been loaded they will not be counted.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="76713-114">下面的示例代码返回属性值。</span><span class="sxs-lookup"><span data-stu-id="76713-114">The following example code returns the property value.</span></span>  
  
 [!code-csharp[UIAMiscPatternProviders_snip#102](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAMiscPatternProviders_snip/CSharp/CustomGrid.cs#102)]
 [!code-vb[UIAMiscPatternProviders_snip#102](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAMiscPatternProviders_snip/visualbasic/customgrid.vb#102)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/234d11a0-7ce7-4309-8989-2f4720e02f78"><span data-ttu-id="76713-115">实现 UI 自动化 Grid 控件模式</span><span class="sxs-lookup"><span data-stu-id="76713-115">Implementing the UI Automation Grid Control Pattern</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetItem">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.Provider.IRawElementProviderSimple GetItem (int row, int column);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Automation.Provider.IRawElementProviderSimple GetItem(int32 row, int32 column) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Provider.IGridProvider.GetItem(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetItem (row As Integer, column As Integer) As IRawElementProviderSimple" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Automation::Provider::IRawElementProviderSimple ^ GetItem(int row, int column);" />
      <MemberSignature Language="F#" Value="abstract member GetItem : int * int -&gt; System.Windows.Automation.Provider.IRawElementProviderSimple" Usage="iGridProvider.GetItem (row, column)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Provider.IRawElementProviderSimple</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="row" Type="System.Int32" />
        <Parameter Name="column" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="row"><span data-ttu-id="76713-116">相关行的序号。</span><span class="sxs-lookup"><span data-stu-id="76713-116">The ordinal number of the row of interest.</span></span></param>
        <param name="column"><span data-ttu-id="76713-117">相关列的序号。</span><span class="sxs-lookup"><span data-stu-id="76713-117">The ordinal number of the column of interest.</span></span></param>
        <summary><span data-ttu-id="76713-118">检索指定单元格的 UI 自动化提供程序。</span><span class="sxs-lookup"><span data-stu-id="76713-118">Retrieves the UI Automation provider for the specified cell.</span></span></summary>
        <returns><span data-ttu-id="76713-119">指定单元格的 UI 自动化提供程序。</span><span class="sxs-lookup"><span data-stu-id="76713-119">The UI Automation provider for the specified cell.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
-   <span data-ttu-id="76713-120">网格坐标从零开始，左上方（或右上角单元格，具体取决于区域设置）的坐标为（0，0）。</span><span class="sxs-lookup"><span data-stu-id="76713-120">Grid coordinates are zero-based with the upper left (or upper right cell depending on locale) having coordinates (0,0).</span></span>  
  
-   <span data-ttu-id="76713-121">如果单元格为空，则必须仍返回 UI 自动化提供程序，以便支持该单元格的 <xref:System.Windows.Automation.Provider.IGridItemProvider.ContainingGrid%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="76713-121">If a cell is empty a UI Automation provider must still be returned in order to support the <xref:System.Windows.Automation.Provider.IGridItemProvider.ContainingGrid%2A> property for that cell.</span></span> <span data-ttu-id="76713-122">当网格中的子元素的布局类似于未对齐的数组时，可能会出现这种情况。</span><span class="sxs-lookup"><span data-stu-id="76713-122">This is possible when the layout of child elements in the grid is similar to a ragged array.</span></span>  
  
 <span data-ttu-id="76713-123">![显示不规则布局的 Windows 资源管理器视图。](~/add/media/uia-gridpattern-ragged-array.PNG "显示未对齐布局的 Windows 资源管理器视图。")</span><span class="sxs-lookup"><span data-stu-id="76713-123">![Windows Explorer view showing ragged layout.](~/add/media/uia-gridpattern-ragged-array.PNG "Windows Explorer view showing ragged layout.")</span></span>  
<span data-ttu-id="76713-124">坐标为空的 Grid 控件的示例</span><span class="sxs-lookup"><span data-stu-id="76713-124">Example of a Grid Control with Empty Coordinates</span></span>  
  
-   <span data-ttu-id="76713-125">隐藏的行和列（具体取决于提供程序实现）可在 [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] 树中加载，因此将在 <xref:System.Windows.Automation.Provider.IGridProvider.RowCount%2A> 和 <xref:System.Windows.Automation.Provider.IGridProvider.ColumnCount%2A> 属性中反映出来。</span><span class="sxs-lookup"><span data-stu-id="76713-125">Hidden rows and columns, depending on the provider implementation, can be loaded in the [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] tree and will therefore be reflected in the <xref:System.Windows.Automation.Provider.IGridProvider.RowCount%2A> and <xref:System.Windows.Automation.Provider.IGridProvider.ColumnCount%2A> properties.</span></span> <span data-ttu-id="76713-126">如果尚未加载隐藏的行和列，则不应对它们进行计数。</span><span class="sxs-lookup"><span data-stu-id="76713-126">If the hidden rows and columns have not yet been loaded they should not be counted.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="76713-127">下面的代码是此方法的一个示例实现，该实现返回一个表示指定位置的项的对象。</span><span class="sxs-lookup"><span data-stu-id="76713-127">The following code is an example implementation of this method that returns an object representing the item at the specified location.</span></span>  
  
 [!code-csharp[UIAMiscPatternProviders_snip#101](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAMiscPatternProviders_snip/CSharp/CustomGrid.cs#101)]
 [!code-vb[UIAMiscPatternProviders_snip#101](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAMiscPatternProviders_snip/visualbasic/customgrid.vb#101)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/234d11a0-7ce7-4309-8989-2f4720e02f78"><span data-ttu-id="76713-128">实现 UI 自动化 Grid 控件模式</span><span class="sxs-lookup"><span data-stu-id="76713-128">Implementing the UI Automation Grid Control Pattern</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="RowCount">
      <MemberSignature Language="C#" Value="public int RowCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 RowCount" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.Provider.IGridProvider.RowCount" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RowCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int RowCount { int get(); };" />
      <MemberSignature Language="F#" Value="member this.RowCount : int" Usage="System.Windows.Automation.Provider.IGridProvider.RowCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76713-129">获取网格中的总行数。</span><span class="sxs-lookup"><span data-stu-id="76713-129">Gets the total number of rows in a grid.</span></span></summary>
        <value><span data-ttu-id="76713-130">网格中的总行数。</span><span class="sxs-lookup"><span data-stu-id="76713-130">The total number of rows in a grid.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76713-131">隐藏的行和列（具体取决于提供程序实现）可以在逻辑树中加载，因此将反映在 <xref:System.Windows.Automation.GridPattern.GridPatternInformation.RowCount%2A> 和 <xref:System.Windows.Automation.GridPattern.GridPatternInformation.ColumnCount%2A> 属性中。</span><span class="sxs-lookup"><span data-stu-id="76713-131">Hidden rows and columns, depending on the provider implementation, can be loaded in the logical tree and will therefore be reflected in the <xref:System.Windows.Automation.GridPattern.GridPatternInformation.RowCount%2A> and <xref:System.Windows.Automation.GridPattern.GridPatternInformation.ColumnCount%2A> properties.</span></span> <span data-ttu-id="76713-132">如果尚未加载隐藏的行和列，则不会对其进行计数。</span><span class="sxs-lookup"><span data-stu-id="76713-132">If the hidden rows and columns have not yet been loaded they will not be counted.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="76713-133">下面的示例代码返回属性值。</span><span class="sxs-lookup"><span data-stu-id="76713-133">The following example code returns the property value.</span></span>  
  
 [!code-csharp[UIAMiscPatternProviders_snip#103](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAMiscPatternProviders_snip/CSharp/CustomGrid.cs#103)]
 [!code-vb[UIAMiscPatternProviders_snip#103](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAMiscPatternProviders_snip/visualbasic/customgrid.vb#103)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/234d11a0-7ce7-4309-8989-2f4720e02f78"><span data-ttu-id="76713-134">实现 UI 自动化 Grid 控件模式</span><span class="sxs-lookup"><span data-stu-id="76713-134">Implementing the UI Automation Grid Control Pattern</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>
