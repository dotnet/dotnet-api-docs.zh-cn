<Type Name="IRangeValueProvider" FullName="System.Windows.Automation.Provider.IRangeValueProvider">
  <Metadata><Meta Name="ms.openlocfilehash" Value="fc5aef3926efb6514cd1bbd2b99184b73efcffde" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86704637" /></Metadata><TypeSignature Language="C#" Value="public interface IRangeValueProvider" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IRangeValueProvider" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Automation.Provider.IRangeValueProvider" />
  <TypeSignature Language="VB.NET" Value="Public Interface IRangeValueProvider" />
  <TypeSignature Language="C++ CLI" Value="public interface class IRangeValueProvider" />
  <TypeSignature Language="F#" Value="type IRangeValueProvider = interface" />
  <AssemblyInfo>
    <AssemblyName>UIAutomationProvider</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName Language="C#">[System.Runtime.InteropServices.ComVisible(true)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.ComVisible(true)&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName Language="C#">[System.Runtime.InteropServices.Guid("36dc7aef-33e6-4691-afe1-2be7274b3d33")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.Guid("36dc7aef-33e6-4691-afe1-2be7274b3d33")&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName Language="C#">[System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="15b7c-101">公开一些方法和属性，以支持 UI 自动化客户端访问可在一定范围内设置为值的控件。</span><span class="sxs-lookup"><span data-stu-id="15b7c-101">Exposes methods and properties to support UI Automation client access to controls that can be set to a value within a range.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15b7c-102">在必须支持控件模式的 UI 自动化提供程序上实现 <xref:System.Windows.Automation.RangeValuePattern> 。</span><span class="sxs-lookup"><span data-stu-id="15b7c-102">Implemented on a UI Automation provider that must support the <xref:System.Windows.Automation.RangeValuePattern> control pattern.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Automation.RangeValuePattern" />
    <related type="Article" href="/dotnet/framework/ui-automation/ui-automation-control-patterns-overview"><span data-ttu-id="15b7c-103">UI 自动化控件模式概述</span><span class="sxs-lookup"><span data-stu-id="15b7c-103">UI Automation Control Patterns Overview</span></span></related>
    <related type="Article" href="/dotnet/framework/ui-automation/server-side-ui-automation-provider-implementation"><span data-ttu-id="15b7c-104">服务器端 UI 自动化提供程序实现</span><span class="sxs-lookup"><span data-stu-id="15b7c-104">Server-side UI Automation Provider Implementation</span></span></related>
    <related type="Article" href="/dotnet/framework/ui-automation/client-side-ui-automation-provider-implementation"><span data-ttu-id="15b7c-105">客户端 UI 自动化提供程序实现</span><span class="sxs-lookup"><span data-stu-id="15b7c-105">Client-side UI Automation Provider Implementation</span></span></related>
    <related type="Article" href="/dotnet/framework/ui-automation/support-control-patterns-in-a-ui-automation-provider"><span data-ttu-id="15b7c-106">在 UI 自动化提供程序中支持控件模式</span><span class="sxs-lookup"><span data-stu-id="15b7c-106">Support Control Patterns in a UI Automation Provider</span></span></related>
    <related type="Article" href="/dotnet/framework/ui-automation/implementing-the-ui-automation-rangevalue-control-pattern"><span data-ttu-id="15b7c-107">实现 UI 自动化 RangeValue 控件模式</span><span class="sxs-lookup"><span data-stu-id="15b7c-107">Implementing the UI Automation RangeValue Control Pattern</span></span></related>
  </Docs>
  <Members>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.Provider.IRangeValueProvider.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="System.Windows.Automation.Provider.IRangeValueProvider.IsReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="15b7c-108">获取一个值，该值指定控件的值是否是只读的。</span><span class="sxs-lookup"><span data-stu-id="15b7c-108">Gets a value that specifies whether the value of a control is read-only.</span></span></summary>
        <value><span data-ttu-id="15b7c-109">如果值为只读，则为 <see langword="true" />；如果它可以修改，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="15b7c-109"><see langword="true" /> if the value is read-only; <see langword="false" /> if it can be modified.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="15b7c-110">下面的示例演示此方法对于非只读控件的实现。</span><span class="sxs-lookup"><span data-stu-id="15b7c-110">The following example shows an implementation of this method for a control that is not read-only.</span></span>  
  
 [!code-csharp[UIAIRangeValueProvider_snip#IsReadOnly](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAIRangeValueProvider_snip/CSharp/RangeValueFragment.cs#isreadonly)]
 [!code-vb[UIAIRangeValueProvider_snip#IsReadOnly](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAIRangeValueProvider_snip/visualbasic/rangevaluefragment.vb#isreadonly)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/ui-automation/implementing-the-ui-automation-rangevalue-control-pattern"><span data-ttu-id="15b7c-111">实现 UI 自动化 RangeValue 控件模式</span><span class="sxs-lookup"><span data-stu-id="15b7c-111">Implementing the UI Automation RangeValue Control Pattern</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="LargeChange">
      <MemberSignature Language="C#" Value="public double LargeChange { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 LargeChange" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.Provider.IRangeValueProvider.LargeChange" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LargeChange As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double LargeChange { double get(); };" />
      <MemberSignature Language="F#" Value="member this.LargeChange : double" Usage="System.Windows.Automation.Provider.IRangeValueProvider.LargeChange" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="15b7c-112">获取一个值，当发生大更改时（例如按下了 Page Down 键），会将 <see cref="P:System.Windows.Automation.Provider.IRangeValueProvider.Value" /> 属性加上该值或从中减去该值。</span><span class="sxs-lookup"><span data-stu-id="15b7c-112">Gets the value that is added to or subtracted from the <see cref="P:System.Windows.Automation.Provider.IRangeValueProvider.Value" /> property when a large change is made, such as with the PAGE DOWN key.</span></span></summary>
        <value><span data-ttu-id="15b7c-113"><see langword="Nothing" />如果控件不支持，则为 Visual Basic) 中 (控件支持的大更改值 <see cref="P:System.Windows.Automation.Provider.IRangeValueProvider.LargeChange" /> 。</span><span class="sxs-lookup"><span data-stu-id="15b7c-113">The large-change value supported by the control or null (<see langword="Nothing" /> in Visual Basic) if the control does not support <see cref="P:System.Windows.Automation.Provider.IRangeValueProvider.LargeChange" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="15b7c-114">下面的示例演示此方法对于具有较大更改值5.0 的控件的实现。</span><span class="sxs-lookup"><span data-stu-id="15b7c-114">The following example shows an implementation of this method for a control that has a large change value of 5.0.</span></span>  
  
 [!code-csharp[UIAIRangeValueProvider_snip#LargeChange](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAIRangeValueProvider_snip/CSharp/RangeValueFragment.cs#largechange)]
 [!code-vb[UIAIRangeValueProvider_snip#LargeChange](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAIRangeValueProvider_snip/visualbasic/rangevaluefragment.vb#largechange)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Automation.Provider.IRangeValueProvider.SmallChange" />
        <related type="Article" href="/dotnet/framework/ui-automation/implementing-the-ui-automation-rangevalue-control-pattern"><span data-ttu-id="15b7c-115">实现 UI 自动化 RangeValue 控件模式</span><span class="sxs-lookup"><span data-stu-id="15b7c-115">Implementing the UI Automation RangeValue Control Pattern</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Maximum">
      <MemberSignature Language="C#" Value="public double Maximum { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Maximum" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.Provider.IRangeValueProvider.Maximum" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Maximum As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Maximum { double get(); };" />
      <MemberSignature Language="F#" Value="member this.Maximum : double" Usage="System.Windows.Automation.Provider.IRangeValueProvider.Maximum" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="15b7c-116">获取控件支持的最大范围值。</span><span class="sxs-lookup"><span data-stu-id="15b7c-116">Gets the maximum range value supported by the control.</span></span></summary>
        <value><span data-ttu-id="15b7c-117">控件支持的最大值; 如果控件不支持，则为 null (<see langword="Nothing" /> Visual Basic) <see cref="P:System.Windows.Automation.Provider.IRangeValueProvider.Maximum" /> 。</span><span class="sxs-lookup"><span data-stu-id="15b7c-117">The maximum value supported by the control or null (<see langword="Nothing" /> in Visual Basic) if the control does not support <see cref="P:System.Windows.Automation.Provider.IRangeValueProvider.Maximum" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="15b7c-118">下面的示例演示此方法对于其最大值为255.0 的控件的实现。</span><span class="sxs-lookup"><span data-stu-id="15b7c-118">The following example shows an implementation of this method for a control that has a maximum value of 255.0.</span></span>  
  
 [!code-csharp[UIAIRangeValueProvider_snip#Maximum](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAIRangeValueProvider_snip/CSharp/RangeValueFragment.cs#maximum)]
 [!code-vb[UIAIRangeValueProvider_snip#Maximum](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAIRangeValueProvider_snip/visualbasic/rangevaluefragment.vb#maximum)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Automation.Provider.IRangeValueProvider.Minimum" />
        <related type="Article" href="/dotnet/framework/ui-automation/implementing-the-ui-automation-rangevalue-control-pattern"><span data-ttu-id="15b7c-119">实现 UI 自动化 RangeValue 控件模式</span><span class="sxs-lookup"><span data-stu-id="15b7c-119">Implementing the UI Automation RangeValue Control Pattern</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Minimum">
      <MemberSignature Language="C#" Value="public double Minimum { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Minimum" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.Provider.IRangeValueProvider.Minimum" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Minimum As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Minimum { double get(); };" />
      <MemberSignature Language="F#" Value="member this.Minimum : double" Usage="System.Windows.Automation.Provider.IRangeValueProvider.Minimum" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="15b7c-120">获取控件支持的最小范围值。</span><span class="sxs-lookup"><span data-stu-id="15b7c-120">Gets the minimum range value supported by the control.</span></span></summary>
        <value><span data-ttu-id="15b7c-121">控件支持的最小值; 如果控件不支持，则为 null (<see langword="Nothing" /> Visual Basic) <see cref="P:System.Windows.Automation.Provider.IRangeValueProvider.Minimum" /> 。</span><span class="sxs-lookup"><span data-stu-id="15b7c-121">The minimum value supported by the control or null (<see langword="Nothing" /> in Visual Basic) if the control does not support <see cref="P:System.Windows.Automation.Provider.IRangeValueProvider.Minimum" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="15b7c-122">下面的示例演示此方法对于最小值为0.0 的控件的实现。</span><span class="sxs-lookup"><span data-stu-id="15b7c-122">The following example shows an implementation of this method for a control that has a minimum value of 0.0.</span></span>  
  
 [!code-csharp[UIAIRangeValueProvider_snip#Minimum](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAIRangeValueProvider_snip/CSharp/RangeValueFragment.cs#minimum)]
 [!code-vb[UIAIRangeValueProvider_snip#Minimum](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAIRangeValueProvider_snip/visualbasic/rangevaluefragment.vb#minimum)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Automation.Provider.IRangeValueProvider.Maximum" />
        <related type="Article" href="/dotnet/framework/ui-automation/implementing-the-ui-automation-rangevalue-control-pattern"><span data-ttu-id="15b7c-123">实现 UI 自动化 RangeValue 控件模式</span><span class="sxs-lookup"><span data-stu-id="15b7c-123">Implementing the UI Automation RangeValue Control Pattern</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="SetValue">
      <MemberSignature Language="C#" Value="public void SetValue (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetValue(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Provider.IRangeValueProvider.SetValue(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetValue (value As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetValue(double value);" />
      <MemberSignature Language="F#" Value="abstract member SetValue : double -&gt; unit" Usage="iRangeValueProvider.SetValue value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="15b7c-124">要设置的值。</span><span class="sxs-lookup"><span data-stu-id="15b7c-124">The value to set.</span></span></param>
        <summary><span data-ttu-id="15b7c-125">设置控件的值。</span><span class="sxs-lookup"><span data-stu-id="15b7c-125">Sets the value of the control.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15b7c-126">设置的实际值取决于控件实现。</span><span class="sxs-lookup"><span data-stu-id="15b7c-126">The actual value set depends on the control implementation.</span></span> <span data-ttu-id="15b7c-127">控件可以 `value` 向上或向下舍入请求。</span><span class="sxs-lookup"><span data-stu-id="15b7c-127">The control may round the requested `value` up or down.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="15b7c-128">下面的示例演示了此方法对自定义控件的一种可能实现。</span><span class="sxs-lookup"><span data-stu-id="15b7c-128">The following example shows one possible implementation of this method for a custom control.</span></span> <span data-ttu-id="15b7c-129">自定义控件通过其基本颜色的 alpha 值显示其范围值。</span><span class="sxs-lookup"><span data-stu-id="15b7c-129">The custom control displays its range value through the alpha value of its base color.</span></span>  
  
 [!code-csharp[UIAIRangeValueProvider_snip#SetValue](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAIRangeValueProvider_snip/CSharp/RangeValueFragment.cs#setvalue)]
 [!code-vb[UIAIRangeValueProvider_snip#SetValue](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAIRangeValueProvider_snip/visualbasic/rangevaluefragment.vb#setvalue)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="15b7c-130">当 <paramref name="value" /> 小于控件的最小值或大于控件的最大值时。</span><span class="sxs-lookup"><span data-stu-id="15b7c-130">When <paramref name="value" /> is less than the minimum or greater than the maximum value of the control.</span></span></exception>
        <related type="Article" href="/dotnet/framework/ui-automation/implementing-the-ui-automation-rangevalue-control-pattern"><span data-ttu-id="15b7c-131">实现 UI 自动化 RangeValue 控件模式</span><span class="sxs-lookup"><span data-stu-id="15b7c-131">Implementing the UI Automation RangeValue Control Pattern</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="SmallChange">
      <MemberSignature Language="C#" Value="public double SmallChange { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 SmallChange" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.Provider.IRangeValueProvider.SmallChange" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SmallChange As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double SmallChange { double get(); };" />
      <MemberSignature Language="F#" Value="member this.SmallChange : double" Usage="System.Windows.Automation.Provider.IRangeValueProvider.SmallChange" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="15b7c-132">获取一个值，当发生小更改时（例如按下了某个箭头键），会将 <see cref="P:System.Windows.Automation.Provider.IRangeValueProvider.Value" /> 属性加上该值或从中减去该值。</span><span class="sxs-lookup"><span data-stu-id="15b7c-132">Gets the value that is added to or subtracted from the <see cref="P:System.Windows.Automation.Provider.IRangeValueProvider.Value" /> property when a small change is made, such as with an arrow key.</span></span></summary>
        <value><span data-ttu-id="15b7c-133">小更改值; 如果控件不支持，则为 <see langword="Nothing" /> Visual Basic) 中的 null (<see cref="P:System.Windows.Automation.Provider.IRangeValueProvider.SmallChange" /> 。</span><span class="sxs-lookup"><span data-stu-id="15b7c-133">The small-change value or null (<see langword="Nothing" /> in Visual Basic) if the control does not support <see cref="P:System.Windows.Automation.Provider.IRangeValueProvider.SmallChange" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="15b7c-134">下面的示例演示了此方法对于具有小更改值1.0 的控件的实现。</span><span class="sxs-lookup"><span data-stu-id="15b7c-134">The following example shows an implementation of this method for a control that has a small change value of 1.0.</span></span>  
  
 [!code-csharp[UIAIRangeValueProvider_snip#SmallChange](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAIRangeValueProvider_snip/CSharp/RangeValueFragment.cs#smallchange)]
 [!code-vb[UIAIRangeValueProvider_snip#SmallChange](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAIRangeValueProvider_snip/visualbasic/rangevaluefragment.vb#smallchange)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Automation.Provider.IRangeValueProvider.LargeChange" />
        <related type="Article" href="/dotnet/framework/ui-automation/implementing-the-ui-automation-rangevalue-control-pattern"><span data-ttu-id="15b7c-135">实现 UI 自动化 RangeValue 控件模式</span><span class="sxs-lookup"><span data-stu-id="15b7c-135">Implementing the UI Automation RangeValue Control Pattern</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public double Value { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Value" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.Provider.IRangeValueProvider.Value" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Value As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Value { double get(); };" />
      <MemberSignature Language="F#" Value="member this.Value : double" Usage="System.Windows.Automation.Provider.IRangeValueProvider.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="15b7c-136">获取控件的值。</span><span class="sxs-lookup"><span data-stu-id="15b7c-136">Gets the value of the control.</span></span></summary>
        <value><span data-ttu-id="15b7c-137">如果控件不支持，则为中的控件的值，如果 Visual Basic) ，则为 null (<see langword="Nothing" /> <see cref="P:System.Windows.Automation.Provider.IRangeValueProvider.Value" /> 。</span><span class="sxs-lookup"><span data-stu-id="15b7c-137">The value of the control or null (<see langword="Nothing" /> in Visual Basic) if the control does not support <see cref="P:System.Windows.Automation.Provider.IRangeValueProvider.Value" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="15b7c-138">下面的示例演示如何为自定义控件实现此方法。</span><span class="sxs-lookup"><span data-stu-id="15b7c-138">The following example shows an implementation of this method for a custom control.</span></span> <span data-ttu-id="15b7c-139">出于本示例的目的，自定义控件通过其基本颜色的 alpha 设置来显示值。</span><span class="sxs-lookup"><span data-stu-id="15b7c-139">For the purposes of this sample, the custom control displays the value through the alpha setting of its base color.</span></span>  
  
 [!code-csharp[UIAIRangeValueProvider_snip#Value](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAIRangeValueProvider_snip/CSharp/RangeValueFragment.cs#value)]
 [!code-vb[UIAIRangeValueProvider_snip#Value](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAIRangeValueProvider_snip/visualbasic/rangevaluefragment.vb#value)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Automation.Provider.IRangeValueProvider.SetValue(System.Double)" />
        <related type="Article" href="/dotnet/framework/ui-automation/implementing-the-ui-automation-rangevalue-control-pattern"><span data-ttu-id="15b7c-140">实现 UI 自动化 RangeValue 控件模式</span><span class="sxs-lookup"><span data-stu-id="15b7c-140">Implementing the UI Automation RangeValue Control Pattern</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>
