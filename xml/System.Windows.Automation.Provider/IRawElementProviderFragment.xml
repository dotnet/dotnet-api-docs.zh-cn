<Type Name="IRawElementProviderFragment" FullName="System.Windows.Automation.Provider.IRawElementProviderFragment">
  <Metadata><Meta Name="ms.openlocfilehash" Value="cf9146d0bb840afc9aeb5df47a19cbfde16235ff" /><Meta Name="ms.sourcegitcommit" Value="9f423345753728e8cad38d4a22663a109e69ea91" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="03/04/2021" /><Meta Name="ms.locfileid" Value="102081668" /></Metadata><TypeSignature Language="C#" Value="public interface IRawElementProviderFragment : System.Windows.Automation.Provider.IRawElementProviderSimple" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IRawElementProviderFragment implements class System.Windows.Automation.Provider.IRawElementProviderSimple" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Automation.Provider.IRawElementProviderFragment" />
  <TypeSignature Language="VB.NET" Value="Public Interface IRawElementProviderFragment&#xA;Implements IRawElementProviderSimple" />
  <TypeSignature Language="C++ CLI" Value="public interface class IRawElementProviderFragment : System::Windows::Automation::Provider::IRawElementProviderSimple" />
  <TypeSignature Language="F#" Value="type IRawElementProviderFragment = interface&#xA;    interface IRawElementProviderSimple" />
  <AssemblyInfo>
    <AssemblyName>UIAutomationProvider</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Windows.Automation.Provider.IRawElementProviderSimple</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName Language="C#">[System.Runtime.InteropServices.ComVisible(true)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.ComVisible(true)&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName Language="C#">[System.Runtime.InteropServices.Guid("f7063da8-8359-439c-9297-bbc5299a7d87")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.Guid("f7063da8-8359-439c-9297-bbc5299a7d87")&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName Language="C#">[System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="8a6dc-101">公开用户界面 (UI) 元素的方法和属性，这些元素是多于一个层次深度的结构的一部分，例如列表框或列表项。</span><span class="sxs-lookup"><span data-stu-id="8a6dc-101">Exposes methods and properties on user interface (UI) elements that are part of a structure more than one level deep, such as a list box or a list item.</span></span> <span data-ttu-id="8a6dc-102">由 UI 自动化提供程序实现。</span><span class="sxs-lookup"><span data-stu-id="8a6dc-102">Implemented by UI Automation providers.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a6dc-103">片段的根节点必须支持 <xref:System.Windows.Automation.Provider.IRawElementProviderFragmentRoot> 继承自的接口 <xref:System.Windows.Automation.Provider.IRawElementProviderFragment> 。</span><span class="sxs-lookup"><span data-stu-id="8a6dc-103">The root node of the fragment must support the <xref:System.Windows.Automation.Provider.IRawElementProviderFragmentRoot> interface, which inherits from <xref:System.Windows.Automation.Provider.IRawElementProviderFragment>.</span></span>  
  
 ]]></format>
    </remarks>
    <related type="Article" href="/dotnet/framework/ui-automation/ui-automation-providers-overview"><span data-ttu-id="8a6dc-104">UI 自动化提供程序概述</span><span class="sxs-lookup"><span data-stu-id="8a6dc-104">UI Automation Providers Overview</span></span></related>
    <related type="Article" href="/dotnet/framework/ui-automation/server-side-ui-automation-provider-implementation"><span data-ttu-id="8a6dc-105">服务器端 UI 自动化提供程序实现</span><span class="sxs-lookup"><span data-stu-id="8a6dc-105">Server-side UI Automation Provider Implementation</span></span></related>
    <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms771502(v=vs.90)"><span data-ttu-id="8a6dc-106">片段提供程序示例</span><span class="sxs-lookup"><span data-stu-id="8a6dc-106">Fragment Provider Sample</span></span></related>
  </Docs>
  <Members>
    <Member MemberName="BoundingRectangle">
      <MemberSignature Language="C#" Value="public System.Windows.Rect BoundingRectangle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Rect BoundingRectangle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.Provider.IRawElementProviderFragment.BoundingRectangle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BoundingRectangle As Rect" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Rect BoundingRectangle { System::Windows::Rect get(); };" />
      <MemberSignature Language="F#" Value="member this.BoundingRectangle : System.Windows.Rect" Usage="System.Windows.Automation.Provider.IRawElementProviderFragment.BoundingRectangle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Rect</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8a6dc-107">获取此元素的边框。</span><span class="sxs-lookup"><span data-stu-id="8a6dc-107">Gets the bounding rectangle of this element.</span></span></summary>
        <value><span data-ttu-id="8a6dc-108">以屏幕坐标形式表示的边框。</span><span class="sxs-lookup"><span data-stu-id="8a6dc-108">The bounding rectangle, in screen coordinates.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a6dc-109">如果元素部分被遮住或部分在屏幕之外，则不需要进行剪切。</span><span class="sxs-lookup"><span data-stu-id="8a6dc-109">No clipping is required if the element is partly obscured or partly off-screen.</span></span> <span data-ttu-id="8a6dc-110"><xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.IsOffscreen%2A>应将属性设置为指示矩形是否实际可见。</span><span class="sxs-lookup"><span data-stu-id="8a6dc-110">The <xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.IsOffscreen%2A> property should be set to indicate whether the rectangle is actually visible.</span></span>  
  
 <span data-ttu-id="8a6dc-111">并非边界矩形内的所有点都是可单击的。</span><span class="sxs-lookup"><span data-stu-id="8a6dc-111">Not all points within the bounding rectangle are necessarily clickable.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8a6dc-112">在下面的示例代码中，边框的内部状态保留在中 <xref:System.Drawing.Rectangle?displayProperty=nameWithType> ，后者在返回之前将转换为 <xref:System.Windows.Rect?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="8a6dc-112">In the following example code, the internal state of the bounding rectangle is kept in a <xref:System.Drawing.Rectangle?displayProperty=nameWithType>, which is converted to a <xref:System.Windows.Rect?displayProperty=nameWithType> before being returned.</span></span>  
  
 [!code-csharp[UIAFragmentProvider_snip#104](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAFragmentProvider_snip/CSharp/ListItemFragment.cs#104)]
 [!code-vb[UIAFragmentProvider_snip#104](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAFragmentProvider_snip/VisualBasic/ListItemFragment.vb#104)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/ui-automation/server-side-ui-automation-provider-implementation"><span data-ttu-id="8a6dc-113">服务器端 UI 自动化提供程序实现</span><span class="sxs-lookup"><span data-stu-id="8a6dc-113">Server-side UI Automation Provider Implementation</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="FragmentRoot">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.Provider.IRawElementProviderFragmentRoot FragmentRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Automation.Provider.IRawElementProviderFragmentRoot FragmentRoot" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.Provider.IRawElementProviderFragment.FragmentRoot" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FragmentRoot As IRawElementProviderFragmentRoot" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Automation::Provider::IRawElementProviderFragmentRoot ^ FragmentRoot { System::Windows::Automation::Provider::IRawElementProviderFragmentRoot ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FragmentRoot : System.Windows.Automation.Provider.IRawElementProviderFragmentRoot" Usage="System.Windows.Automation.Provider.IRawElementProviderFragment.FragmentRoot" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Provider.IRawElementProviderFragmentRoot</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8a6dc-114">检索该片段的根节点。</span><span class="sxs-lookup"><span data-stu-id="8a6dc-114">Retrieves the root node of the fragment.</span></span></summary>
        <value><span data-ttu-id="8a6dc-115">根节点</span><span class="sxs-lookup"><span data-stu-id="8a6dc-115">The root node.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a6dc-116">实现的提供程序 <xref:System.Windows.Automation.Provider.IRawElementProviderFragmentRoot> 应返回自身。</span><span class="sxs-lookup"><span data-stu-id="8a6dc-116">A provider that implements <xref:System.Windows.Automation.Provider.IRawElementProviderFragmentRoot> should return itself.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8a6dc-117">下面的代码示例演示片段中某个元素的实现，例如列表框中的列表项。</span><span class="sxs-lookup"><span data-stu-id="8a6dc-117">The following code example shows an implementation for an element in a fragment, such as a list item within a list box.</span></span>  
  
 [!code-csharp[UIAFragmentProvider_snip#105](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAFragmentProvider_snip/CSharp/ListItemFragment.cs#105)]
 [!code-vb[UIAFragmentProvider_snip#105](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAFragmentProvider_snip/VisualBasic/ListItemFragment.vb#105)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/ui-automation/server-side-ui-automation-provider-implementation"><span data-ttu-id="8a6dc-118">服务器端 UI 自动化提供程序实现</span><span class="sxs-lookup"><span data-stu-id="8a6dc-118">Server-side UI Automation Provider Implementation</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetEmbeddedFragmentRoots">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.Provider.IRawElementProviderSimple[] GetEmbeddedFragmentRoots ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Automation.Provider.IRawElementProviderSimple[] GetEmbeddedFragmentRoots() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Provider.IRawElementProviderFragment.GetEmbeddedFragmentRoots" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEmbeddedFragmentRoots () As IRawElementProviderSimple()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Windows::Automation::Provider::IRawElementProviderSimple ^&gt; ^ GetEmbeddedFragmentRoots();" />
      <MemberSignature Language="F#" Value="abstract member GetEmbeddedFragmentRoots : unit -&gt; System.Windows.Automation.Provider.IRawElementProviderSimple[]" Usage="iRawElementProviderFragment.GetEmbeddedFragmentRoots " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Provider.IRawElementProviderSimple[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8a6dc-119">检索以当前元素为根的 UI 自动化元素树中嵌入的片段根的数组。</span><span class="sxs-lookup"><span data-stu-id="8a6dc-119">Retrieves an array of fragment roots that are embedded in the UI Automation element tree rooted at the current element.</span></span></summary>
        <returns><span data-ttu-id="8a6dc-120">根片段的数组，或者 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="8a6dc-120">An array of root fragments, or <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a6dc-121">仅当当前元素承载另一个 UI 自动化框架时，此方法才返回片段的数组。</span><span class="sxs-lookup"><span data-stu-id="8a6dc-121">This method returns an array of fragments only if the current element is hosting another UI Automation framework.</span></span> <span data-ttu-id="8a6dc-122">大多数提供程序返回 `null` 。</span><span class="sxs-lookup"><span data-stu-id="8a6dc-122">Most providers return `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/ui-automation/server-side-ui-automation-provider-implementation"><span data-ttu-id="8a6dc-123">服务器端 UI 自动化提供程序实现</span><span class="sxs-lookup"><span data-stu-id="8a6dc-123">Server-side UI Automation Provider Implementation</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetRuntimeId">
      <MemberSignature Language="C#" Value="public int[] GetRuntimeId ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32[] GetRuntimeId() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Provider.IRawElementProviderFragment.GetRuntimeId" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRuntimeId () As Integer()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;int&gt; ^ GetRuntimeId();" />
      <MemberSignature Language="F#" Value="abstract member GetRuntimeId : unit -&gt; int[]" Usage="iRawElementProviderFragment.GetRuntimeId " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8a6dc-124">检索元素的运行时标识符。</span><span class="sxs-lookup"><span data-stu-id="8a6dc-124">Retrieves the runtime identifier of an element.</span></span></summary>
        <returns><span data-ttu-id="8a6dc-125">元素的唯一运行时标识符。</span><span class="sxs-lookup"><span data-stu-id="8a6dc-125">The unique run-time identifier of the element.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a6dc-126">`null`对于对应于窗口句柄的元素，实现应返回。</span><span class="sxs-lookup"><span data-stu-id="8a6dc-126">Implementations should return `null` for an element that corresponds to a window handle.</span></span> <span data-ttu-id="8a6dc-127">其他元素应返回一个数组，该数组包含 <xref:System.Windows.Automation.Provider.AutomationInteropProvider.AppendRuntimeId> ，后跟一个在片段中唯一的值。</span><span class="sxs-lookup"><span data-stu-id="8a6dc-127">Other elements should return an array that contains <xref:System.Windows.Automation.Provider.AutomationInteropProvider.AppendRuntimeId>, followed by a value that is unique within the fragment.</span></span>  
  
 <span data-ttu-id="8a6dc-128">提供商负责确保片段中的唯一性;例如，列表中的每一项都必须单独进行编号。</span><span class="sxs-lookup"><span data-stu-id="8a6dc-128">It is the provider's responsibility to ensure uniqueness within the fragment; for example, each item in a list must be individually numbered.</span></span> <span data-ttu-id="8a6dc-129">UI 自动化引擎通过转换值来确保标识符在所有实例中都是唯一的 <xref:System.Windows.Automation.Provider.AutomationInteropProvider.AppendRuntimeId> 。</span><span class="sxs-lookup"><span data-stu-id="8a6dc-129">The UI Automation engine ensures that the identifier is unique among all instances, by translating the <xref:System.Windows.Automation.Provider.AutomationInteropProvider.AppendRuntimeId> value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8a6dc-130">下面的示例代码演示了此方法的实现，该元素由片段内的元素（如列表框中的项）来实现。</span><span class="sxs-lookup"><span data-stu-id="8a6dc-130">The following example code shows an implementation of this method by an element within a fragment, such as an item within a list box.</span></span> <span data-ttu-id="8a6dc-131">该项在此片段的此实例中具有自己的唯一标识符，并且 <xref:System.Windows.Automation.Provider.AutomationInteropProvider.AppendRuntimeId> 值可确保方法返回的标识符在 UI 自动化树中是唯一的。</span><span class="sxs-lookup"><span data-stu-id="8a6dc-131">The item has its own unique identifier within this instance of the fragment, and the <xref:System.Windows.Automation.Provider.AutomationInteropProvider.AppendRuntimeId> value ensures that the identifier returned by the method is unique in the UI Automation tree.</span></span>  
  
 [!code-csharp[UIAFragmentProvider_snip#101](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAFragmentProvider_snip/CSharp/ListItemFragment.cs#101)]
 [!code-vb[UIAFragmentProvider_snip#101](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAFragmentProvider_snip/VisualBasic/ListItemFragment.vb#101)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/ui-automation/server-side-ui-automation-provider-implementation"><span data-ttu-id="8a6dc-132">服务器端 UI 自动化提供程序实现</span><span class="sxs-lookup"><span data-stu-id="8a6dc-132">Server-side UI Automation Provider Implementation</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Navigate">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.Provider.IRawElementProviderFragment Navigate (System.Windows.Automation.Provider.NavigateDirection direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Automation.Provider.IRawElementProviderFragment Navigate(valuetype System.Windows.Automation.Provider.NavigateDirection direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Provider.IRawElementProviderFragment.Navigate(System.Windows.Automation.Provider.NavigateDirection)" />
      <MemberSignature Language="VB.NET" Value="Public Function Navigate (direction As NavigateDirection) As IRawElementProviderFragment" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Automation::Provider::IRawElementProviderFragment ^ Navigate(System::Windows::Automation::Provider::NavigateDirection direction);" />
      <MemberSignature Language="F#" Value="abstract member Navigate : System.Windows.Automation.Provider.NavigateDirection -&gt; System.Windows.Automation.Provider.IRawElementProviderFragment" Usage="iRawElementProviderFragment.Navigate direction" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Provider.IRawElementProviderFragment</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="direction" Type="System.Windows.Automation.Provider.NavigateDirection" />
      </Parameters>
      <Docs>
        <param name="direction"><span data-ttu-id="8a6dc-133">导航方向。</span><span class="sxs-lookup"><span data-stu-id="8a6dc-133">The direction in which to navigate.</span></span></param>
        <summary><span data-ttu-id="8a6dc-134">按指定方向在树中检索 UI 自动化元素。</span><span class="sxs-lookup"><span data-stu-id="8a6dc-134">Retrieves the UI Automation element in a specified direction within the tree.</span></span></summary>
        <returns><span data-ttu-id="8a6dc-135">指定方向中的元素；如果该方向中没有任何元素，则为 <see langword="null" /></span><span class="sxs-lookup"><span data-stu-id="8a6dc-135">The element in the specified direction, or <see langword="null" /> if there is no element in that direction</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a6dc-136">UI 自动化服务器的此方法的实现定义 UI 自动化元素树的结构。</span><span class="sxs-lookup"><span data-stu-id="8a6dc-136">The UI Automation server's implementations of this method define the structure of the UI Automation element tree.</span></span>  
  
 <span data-ttu-id="8a6dc-137">导航必须向上、向下到第一个和最后一个子对象，并向下一个和上一个同级节点（如果适用）。</span><span class="sxs-lookup"><span data-stu-id="8a6dc-137">Navigation must be supported upward to the parent, downward to the first and last child, and laterally to the next and previous siblings, as applicable.</span></span>  
  
 <span data-ttu-id="8a6dc-138">每个子节点都只有一个父节点，并且必须置于从父节点到达的同级的链（ <xref:System.Windows.Automation.Provider.NavigateDirection.FirstChild> 和） <xref:System.Windows.Automation.Provider.NavigateDirection.LastChild> 。</span><span class="sxs-lookup"><span data-stu-id="8a6dc-138">Each child node has only one parent and must be placed in the chain of siblings reached from the parent by <xref:System.Windows.Automation.Provider.NavigateDirection.FirstChild> and <xref:System.Windows.Automation.Provider.NavigateDirection.LastChild>.</span></span>  
  
 <span data-ttu-id="8a6dc-139">同级之间的关系必须在这两个方向相同：如果 A 是 B <xref:System.Windows.Automation.Provider.NavigateDirection.PreviousSibling> ，则 B 是 A <xref:System.Windows.Automation.Provider.NavigateDirection.NextSibling> 。</span><span class="sxs-lookup"><span data-stu-id="8a6dc-139">Relationships among siblings must be identical in both directions: if A is B's <xref:System.Windows.Automation.Provider.NavigateDirection.PreviousSibling>, then B is A's <xref:System.Windows.Automation.Provider.NavigateDirection.NextSibling>.</span></span> <span data-ttu-id="8a6dc-140">没有 <xref:System.Windows.Automation.Provider.NavigateDirection.FirstChild> <xref:System.Windows.Automation.Provider.NavigateDirection.PreviousSibling> ，且没有 <xref:System.Windows.Automation.Provider.NavigateDirection.LastChild> <xref:System.Windows.Automation.Provider.NavigateDirection.NextSibling> 。</span><span class="sxs-lookup"><span data-stu-id="8a6dc-140">A <xref:System.Windows.Automation.Provider.NavigateDirection.FirstChild> has no <xref:System.Windows.Automation.Provider.NavigateDirection.PreviousSibling>, and a <xref:System.Windows.Automation.Provider.NavigateDirection.LastChild> has no <xref:System.Windows.Automation.Provider.NavigateDirection.NextSibling>.</span></span>  
  
 <span data-ttu-id="8a6dc-141">片段根不支持导航到父级或同级;片段根间的导航由默认的窗口提供程序进行处理。</span><span class="sxs-lookup"><span data-stu-id="8a6dc-141">Fragment roots do not enable navigation to a parent or siblings; navigation among fragment roots is handled by the default window providers.</span></span> <span data-ttu-id="8a6dc-142">片段中的元素必须仅导航到该片段内的其他元素。</span><span class="sxs-lookup"><span data-stu-id="8a6dc-142">Elements in fragments must navigate only to other elements within that fragment.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8a6dc-143">下面的示例代码演示了的实现， <xref:System.Windows.Automation.Provider.IRawElementProviderFragment.Navigate%2A> 它具有一个子元素。</span><span class="sxs-lookup"><span data-stu-id="8a6dc-143">The following example code shows the implementation of <xref:System.Windows.Automation.Provider.IRawElementProviderFragment.Navigate%2A> by a fragment root that has a single child element.</span></span> <span data-ttu-id="8a6dc-144">由于实现元素是一个片段根元素，因此它不允许导航到父元素或同级元素。</span><span class="sxs-lookup"><span data-stu-id="8a6dc-144">Because the implementing element is a fragment root, it does not enable navigation to a parent element or sibling elements.</span></span>  
  
 [!code-csharp[UIAProvider_snip#105](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAProvider_snip/CSharp/FragmentRoot.cs#105)]
 [!code-vb[UIAProvider_snip#105](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAProvider_snip/VisualBasic/FragmentRoot.vb#105)]  
  
 <span data-ttu-id="8a6dc-145">下面的示例演示一个实现，该实现表示列表框中的单个项。</span><span class="sxs-lookup"><span data-stu-id="8a6dc-145">The following example shows an implementation by a fragment that represents a single item within a list box.</span></span> <span data-ttu-id="8a6dc-146">在这种情况下，元素允许导航到其父级和同级，但不允许导航到任何子级。</span><span class="sxs-lookup"><span data-stu-id="8a6dc-146">In this case, the element enables navigation to its parent and siblings, but not to any children.</span></span>  
  
 [!code-csharp[UIAFragmentProvider_snip#103](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAFragmentProvider_snip/CSharp/ListItemFragment.cs#103)]
 [!code-vb[UIAFragmentProvider_snip#103](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAFragmentProvider_snip/VisualBasic/ListItemFragment.vb#103)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/ui-automation/server-side-ui-automation-provider-implementation"><span data-ttu-id="8a6dc-147">服务器端 UI 自动化提供程序实现</span><span class="sxs-lookup"><span data-stu-id="8a6dc-147">Server-side UI Automation Provider Implementation</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="SetFocus">
      <MemberSignature Language="C#" Value="public void SetFocus ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetFocus() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Provider.IRawElementProviderFragment.SetFocus" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetFocus ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetFocus();" />
      <MemberSignature Language="F#" Value="abstract member SetFocus : unit -&gt; unit" Usage="iRawElementProviderFragment.SetFocus " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8a6dc-148">将焦点设置到此元素。</span><span class="sxs-lookup"><span data-stu-id="8a6dc-148">Sets the focus to this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a6dc-149">在调用此方法之前，UI 自动化框架将确保承载此片段的接口部分已获得焦点。</span><span class="sxs-lookup"><span data-stu-id="8a6dc-149">The UI Automation framework will ensure that the part of the interface that hosts this fragment is already focused before calling this method.</span></span> <span data-ttu-id="8a6dc-150">你的实现应仅更新其内部焦点状态;例如，通过重新绘制列表项以显示其具有焦点。</span><span class="sxs-lookup"><span data-stu-id="8a6dc-150">Your implementation should update only its internal focus state; for example, by repainting a list item to show that it has the focus.</span></span> <span data-ttu-id="8a6dc-151">如果你更愿意，UI 自动化不会集中于父窗口，则 <xref:System.Windows.Automation.Provider.ProviderOptions.ProviderOwnsSetFocus> <xref:System.Windows.Automation.Provider.ProviderOptions> 为片段根设置选项。</span><span class="sxs-lookup"><span data-stu-id="8a6dc-151">If you prefer that UI Automation not focus the parent window, set the <xref:System.Windows.Automation.Provider.ProviderOptions.ProviderOwnsSetFocus> option in <xref:System.Windows.Automation.Provider.ProviderOptions> for the fragment root.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/ui-automation/server-side-ui-automation-provider-implementation"><span data-ttu-id="8a6dc-152">服务器端 UI 自动化提供程序实现</span><span class="sxs-lookup"><span data-stu-id="8a6dc-152">Server-side UI Automation Provider Implementation</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>
