<Type Name="EntityPropertyMappingAttribute" FullName="System.Data.Services.Common.EntityPropertyMappingAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="88b5c9a23250cad550807e0df5e7f33b92363c45" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86860421" /></Metadata><TypeSignature Language="C#" Value="public sealed class EntityPropertyMappingAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit EntityPropertyMappingAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Data.Services.Common.EntityPropertyMappingAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class EntityPropertyMappingAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class EntityPropertyMappingAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type EntityPropertyMappingAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Services.Client</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.AttributeUsage(System.AttributeTargets.Class, AllowMultiple=true, Inherited=true)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.AttributeUsage(System.AttributeTargets.Class, AllowMultiple=true, Inherited=true)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="93a20-101">指定实体类型的属性与 WCF Data Services 返回的源中某项的元素之间自定义映射的特性。</span><span class="sxs-lookup"><span data-stu-id="93a20-101">Attribute that specifies a custom mapping between properties of an entity type and elements of an entry in a feed returned by WCF Data Services.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93a20-102"><xref:System.Data.Services.Common.EntityPropertyMappingAttribute>用于在反射提供程序的数据模型中定义自定义源映射。</span><span class="sxs-lookup"><span data-stu-id="93a20-102">The <xref:System.Data.Services.Common.EntityPropertyMappingAttribute> is used to define custom feed mapping in the data model of a reflection provider.</span></span> <span data-ttu-id="93a20-103">当用于生成类的元数据指示在数据模型中定义自定义源映射时，此属性也应用于生成的客户端数据服务类。</span><span class="sxs-lookup"><span data-stu-id="93a20-103">This attribute is also applied to generated client data service classes when the metadata used to generate the classes indicates that custom feed mappings are defined in the data model.</span></span> <span data-ttu-id="93a20-104">此信息是确保客户端可以创建和使用支持自定义源的消息所必需的。</span><span class="sxs-lookup"><span data-stu-id="93a20-104">This information is necessary to make sure that the client can create and consume messages that support custom feeds.</span></span> <span data-ttu-id="93a20-105">有关详细信息，请参阅 [源自定义](/dotnet/framework/data/wcf/feed-customization-wcf-data-services)。</span><span class="sxs-lookup"><span data-stu-id="93a20-105">For more information, see [Feed Customization](/dotnet/framework/data/wcf/feed-customization-wcf-data-services).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="93a20-106">在下面的示例中，该类型的两个属性 `Order` 都映射到现有源元素。</span><span class="sxs-lookup"><span data-stu-id="93a20-106">In the following example, both properties of the `Order` type are mapped to existing feed elements.</span></span> <span data-ttu-id="93a20-107">`Product` 类型的 `Item` 属性映射到单独的命名空间中的自定义源特性。</span><span class="sxs-lookup"><span data-stu-id="93a20-107">The `Product` property of the `Item` type is mapped to a custom feed attribute in a separate namespace.</span></span>  
  
 [!code-csharp[Astoria Custom Feeds#CustomIQueryableFeeds](~/samples/snippets/csharp/VS_Snippets_Misc/astoria_custom_feeds/cs/orderitems.svc.cs#customiqueryablefeeds)]
 [!code-vb[Astoria Custom Feeds#CustomIQueryableFeeds](~/samples/snippets/visualbasic/VS_Snippets_Misc/astoria_custom_feeds/vb/orderitems.svc.vb#customiqueryablefeeds)]  
  
 <span data-ttu-id="93a20-108">上面的示例为 URI `http://myservice/OrderItems.svc/Orders(0)?$expand=Items` 返回以下结果。</span><span class="sxs-lookup"><span data-stu-id="93a20-108">The previous example returns the following result for the URI `http://myservice/OrderItems.svc/Orders(0)?$expand=Items`.</span></span>  
  
 [!code-xml[Astoria Custom Feeds#IQueryableFeedResultInline](~/samples/snippets/xml/VS_Snippets_Misc/astoria_custom_feeds/xml/iqueryablefeedresultinline.xml#iqueryablefeedresultinline)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="/dotnet/framework/data/wcf/create-a-data-service-using-rp-wcf-data-services"><span data-ttu-id="93a20-109">如何：使用反射提供程序创建数据服务（WCF 数据服务）</span><span class="sxs-lookup"><span data-stu-id="93a20-109">How to: Create a Data Service Using the Reflection Provider (WCF Data Services)</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="93a20-110">创建 <see cref="T:System.Data.Services.Common.EntityPropertyMappingAttribute" /> 的新实例。</span><span class="sxs-lookup"><span data-stu-id="93a20-110">Creates a new instance of the <see cref="T:System.Data.Services.Common.EntityPropertyMappingAttribute" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EntityPropertyMappingAttribute (string sourcePath, System.Data.Services.Common.SyndicationItemProperty targetSyndicationItem, System.Data.Services.Common.SyndicationTextContentKind targetTextContentKind, bool keepInContent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string sourcePath, valuetype System.Data.Services.Common.SyndicationItemProperty targetSyndicationItem, valuetype System.Data.Services.Common.SyndicationTextContentKind targetTextContentKind, bool keepInContent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Common.EntityPropertyMappingAttribute.#ctor(System.String,System.Data.Services.Common.SyndicationItemProperty,System.Data.Services.Common.SyndicationTextContentKind,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (sourcePath As String, targetSyndicationItem As SyndicationItemProperty, targetTextContentKind As SyndicationTextContentKind, keepInContent As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EntityPropertyMappingAttribute(System::String ^ sourcePath, System::Data::Services::Common::SyndicationItemProperty targetSyndicationItem, System::Data::Services::Common::SyndicationTextContentKind targetTextContentKind, bool keepInContent);" />
      <MemberSignature Language="F#" Value="new System.Data.Services.Common.EntityPropertyMappingAttribute : string * System.Data.Services.Common.SyndicationItemProperty * System.Data.Services.Common.SyndicationTextContentKind * bool -&gt; System.Data.Services.Common.EntityPropertyMappingAttribute" Usage="new System.Data.Services.Common.EntityPropertyMappingAttribute (sourcePath, targetSyndicationItem, targetTextContentKind, keepInContent)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="sourcePath" Type="System.String" />
        <Parameter Name="targetSyndicationItem" Type="System.Data.Services.Common.SyndicationItemProperty" />
        <Parameter Name="targetTextContentKind" Type="System.Data.Services.Common.SyndicationTextContentKind" />
        <Parameter Name="keepInContent" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="sourcePath"><span data-ttu-id="93a20-111">映射到源项中指定属性的实体类型的属性名称（以字符串形式表示）。</span><span class="sxs-lookup"><span data-stu-id="93a20-111">The name of the property, as string, of the entity type that is mapped to the specified property of the feed item.</span></span></param>
        <param name="targetSyndicationItem"><span data-ttu-id="93a20-112">一个 <see cref="T:System.Data.Services.Common.SyndicationItemProperty" /> 值，该值表示属性所映射到的源中的元素。</span><span class="sxs-lookup"><span data-stu-id="93a20-112">A <see cref="T:System.Data.Services.Common.SyndicationItemProperty" /> value that represents the element in the feed to which to map the property.</span></span> <span data-ttu-id="93a20-113">如果 <see cref="P:System.Data.Services.Common.EntityPropertyMappingAttribute.TargetPath" /> 不为 <see langword="null" />，则必须将此值设置为 <c>None</c>。</span><span class="sxs-lookup"><span data-stu-id="93a20-113">This value must be set to <c>None</c> if the <see cref="P:System.Data.Services.Common.EntityPropertyMappingAttribute.TargetPath" /> is not <see langword="null" />.</span></span></param>
        <param name="targetTextContentKind"><span data-ttu-id="93a20-114">一个 <see cref="P:System.Data.Services.Common.EntityPropertyMappingAttribute.TargetTextContentKind" /> 值，该值标识要在源中显示的内容的格式。</span><span class="sxs-lookup"><span data-stu-id="93a20-114">A <see cref="P:System.Data.Services.Common.EntityPropertyMappingAttribute.TargetTextContentKind" /> value that identifies the format of the content to display in the feed.</span></span></param>
        <param name="keepInContent"><span data-ttu-id="93a20-115">布尔值，如果要映射的属性应同时出现在其映射到的位置和源的内容部分中，则为 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="93a20-115">Boolean value that is <see langword="true" /> when the property being mapped should appear both in its mapped-to location and in the content section of the feed.</span></span></param>
        <summary><span data-ttu-id="93a20-116">创建 <see cref="T:System.Data.Services.Common.EntityPropertyMappingAttribute" /> 的新实例。</span><span class="sxs-lookup"><span data-stu-id="93a20-116">Creates a new instance of the <see cref="T:System.Data.Services.Common.EntityPropertyMappingAttribute" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EntityPropertyMappingAttribute (string sourcePath, string targetPath, string targetNamespacePrefix, string targetNamespaceUri, bool keepInContent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string sourcePath, string targetPath, string targetNamespacePrefix, string targetNamespaceUri, bool keepInContent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Common.EntityPropertyMappingAttribute.#ctor(System.String,System.String,System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (sourcePath As String, targetPath As String, targetNamespacePrefix As String, targetNamespaceUri As String, keepInContent As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EntityPropertyMappingAttribute(System::String ^ sourcePath, System::String ^ targetPath, System::String ^ targetNamespacePrefix, System::String ^ targetNamespaceUri, bool keepInContent);" />
      <MemberSignature Language="F#" Value="new System.Data.Services.Common.EntityPropertyMappingAttribute : string * string * string * string * bool -&gt; System.Data.Services.Common.EntityPropertyMappingAttribute" Usage="new System.Data.Services.Common.EntityPropertyMappingAttribute (sourcePath, targetPath, targetNamespacePrefix, targetNamespaceUri, keepInContent)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="sourcePath" Type="System.String" />
        <Parameter Name="targetPath" Type="System.String" />
        <Parameter Name="targetNamespacePrefix" Type="System.String" />
        <Parameter Name="targetNamespaceUri" Type="System.String" />
        <Parameter Name="keepInContent" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="sourcePath"><span data-ttu-id="93a20-117">映射到源中指定属性的实体类型的属性名称（以字符串形式表示）。</span><span class="sxs-lookup"><span data-stu-id="93a20-117">The name of the property of the entity type, as string, that is mapped to the specified property in the feed.</span></span></param>
        <param name="targetPath"><span data-ttu-id="93a20-118">属性将映射到的结果源中的目标的名称（以字符串形式表示）。</span><span class="sxs-lookup"><span data-stu-id="93a20-118">The name of the target, as string, in the resulting feed to which the property is mapped.</span></span></param>
        <param name="targetNamespacePrefix"><span data-ttu-id="93a20-119">此参数与 <paramref name="targetNamespaceUri" /> 一起指定 <paramref name="targetPath" /> 元素所在的命名空间。</span><span class="sxs-lookup"><span data-stu-id="93a20-119">This parameter, together with <paramref name="targetNamespaceUri" />, specifies the namespace in which the <paramref name="targetPath" /> element exists.</span></span></param>
        <param name="targetNamespaceUri"><span data-ttu-id="93a20-120">指定由 <c>targetName</c> 属性指定的元素的命名空间 URI（以字符串形式表示）。</span><span class="sxs-lookup"><span data-stu-id="93a20-120">Specifies the namespace URI of the element, as string, specified by the <c>targetName</c> property.</span></span></param>
        <param name="keepInContent"><span data-ttu-id="93a20-121">布尔值，如果要映射的属性应同时出现在其映射到的位置和源的内容部分中，则为 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="93a20-121">Boolean value that is <see langword="true" /> when the property being mapped should appear both in its mapped-to location and in the content section of the feed.</span></span></param>
        <summary><span data-ttu-id="93a20-122">创建 <see cref="T:System.Data.Services.Common.EntityPropertyMappingAttribute" /> 的实例以将属性映射到自定义源元素。</span><span class="sxs-lookup"><span data-stu-id="93a20-122">Creates an instance of the <see cref="T:System.Data.Services.Common.EntityPropertyMappingAttribute" /> to map a property to a custom feed element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93a20-123">如果既 `targetNamespacePrefix` `targetNamespaceUri` 未指定也未指定，则 `targetName` 会将置于默认命名空间中。</span><span class="sxs-lookup"><span data-stu-id="93a20-123">If neither `targetNamespacePrefix` nor `targetNamespaceUri` are specified, the `targetName` will be put in the default namespace.</span></span> <span data-ttu-id="93a20-124">如果 `targetNamespacePrefix` 未指定，则自动生成前缀。</span><span class="sxs-lookup"><span data-stu-id="93a20-124">If `targetNamespacePrefix` is not specified, a prefix is autogenerated.</span></span> <span data-ttu-id="93a20-125">如果 `targetNamespacePrefix` 指定了，但 `targetNamespaceUri` 未指定，则构造时将引发异常。</span><span class="sxs-lookup"><span data-stu-id="93a20-125">If `targetNamespacePrefix` is specified, but `targetNamespaceUri` is not specified, an exception is thrown at construction time.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KeepInContent">
      <MemberSignature Language="C#" Value="public bool KeepInContent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool KeepInContent" />
      <MemberSignature Language="DocId" Value="P:System.Data.Services.Common.EntityPropertyMappingAttribute.KeepInContent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property KeepInContent As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool KeepInContent { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.KeepInContent : bool" Usage="System.Data.Services.Common.EntityPropertyMappingAttribute.KeepInContent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="93a20-126">获取一个布尔值，该值指示是否应在源的内容部分和映射位置都出现同一属性值。</span><span class="sxs-lookup"><span data-stu-id="93a20-126">Gets a Boolean value that indicates whether a property value should be repeated both in the content section of the feed and in the mapped location.</span></span></summary>
        <value><span data-ttu-id="93a20-127">一个 <see cref="T:System.Boolean" /> 值，如果该属性映射到源中的这两个位置，则该值为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="93a20-127">A <see cref="T:System.Boolean" /> value that is <see langword="true" /> when the property is mapped into both locations in the feed; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93a20-128">当的值 <xref:System.Data.Services.Common.EntityPropertyMappingAttribute.KeepInContent%2A> 为时 `true` ，源将与 [!INCLUDE[ssAstoria](~/includes/ssastoria-md.md)] 使用协议版本1.0 的客户端应用程序向后兼容。</span><span class="sxs-lookup"><span data-stu-id="93a20-128">When the value of <xref:System.Data.Services.Common.EntityPropertyMappingAttribute.KeepInContent%2A> is `true`, the feed is backward compatible with [!INCLUDE[ssAstoria](~/includes/ssastoria-md.md)] client applications that use protocol version 1.0.</span></span> <span data-ttu-id="93a20-129">如果的值 <xref:System.Data.Services.Common.EntityPropertyMappingAttribute.KeepInContent%2A> 为 `false` ，则数据服务使用的协议版本必须为2.0 或更高版本。</span><span class="sxs-lookup"><span data-stu-id="93a20-129">When the value of <xref:System.Data.Services.Common.EntityPropertyMappingAttribute.KeepInContent%2A> is `false`, the protocol version used by the data service must be 2.0 or later versions.</span></span> <span data-ttu-id="93a20-130">有关详细信息，请参阅 [数据服务版本控制](/dotnet/framework/data/wcf/data-service-versioning-wcf-data-services)。</span><span class="sxs-lookup"><span data-stu-id="93a20-130">For more information, see [Data Service Versioning](/dotnet/framework/data/wcf/data-service-versioning-wcf-data-services).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SourcePath">
      <MemberSignature Language="C#" Value="public string SourcePath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SourcePath" />
      <MemberSignature Language="DocId" Value="P:System.Data.Services.Common.EntityPropertyMappingAttribute.SourcePath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SourcePath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SourcePath { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SourcePath : string" Usage="System.Data.Services.Common.EntityPropertyMappingAttribute.SourcePath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="93a20-131">获取将映射到源的指定元素的联合项的属性名称。</span><span class="sxs-lookup"><span data-stu-id="93a20-131">Gets the name of the property of the syndication item that will be mapped to the specified element of the feed.</span></span></summary>
        <value><span data-ttu-id="93a20-132">包含属性名称的字符串值。</span><span class="sxs-lookup"><span data-stu-id="93a20-132">String value that contains property name.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93a20-133"><xref:System.Data.Services.Common.EntityPropertyMappingAttribute.SourcePath%2A> 属性无法直接引用复杂类型。</span><span class="sxs-lookup"><span data-stu-id="93a20-133">The <xref:System.Data.Services.Common.EntityPropertyMappingAttribute.SourcePath%2A> property cannot directly reference a complex type.</span></span> <span data-ttu-id="93a20-134">对于复杂类型，必须使用路径表达式，在此路径表达式中，使用反斜杠 (`/`) 字符分隔属性名称。</span><span class="sxs-lookup"><span data-stu-id="93a20-134">For complex types, you must use a path expression where property names are separated by a backslash (`/`) character.</span></span> <span data-ttu-id="93a20-135">例如，对于 `Person` 具有整数属性 `Age` 和复杂属性的实体类型，允许使用以下值 `Address` ：</span><span class="sxs-lookup"><span data-stu-id="93a20-135">For example, the following values are permitted for an entity type `Person` with an integer property `Age` and a complex property `Address`:</span></span>  
  
-   `Age`  
  
-   `Address/Street`  
  
 <span data-ttu-id="93a20-136">不能将 <xref:System.Data.Services.Common.EntityPropertyMappingAttribute.SourcePath%2A> 属性设置为包含空格或在属性名称中无效的任何其他字符的值。</span><span class="sxs-lookup"><span data-stu-id="93a20-136">The <xref:System.Data.Services.Common.EntityPropertyMappingAttribute.SourcePath%2A> property cannot be set to a value that contains a space or any other character that is not valid in a property name.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TargetNamespacePrefix">
      <MemberSignature Language="C#" Value="public string TargetNamespacePrefix { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TargetNamespacePrefix" />
      <MemberSignature Language="DocId" Value="P:System.Data.Services.Common.EntityPropertyMappingAttribute.TargetNamespacePrefix" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TargetNamespacePrefix As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TargetNamespacePrefix { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TargetNamespacePrefix : string" Usage="System.Data.Services.Common.EntityPropertyMappingAttribute.TargetNamespacePrefix" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="93a20-137">获取一个字符串值，该值与 <see cref="P:System.Data.Services.Common.EntityPropertyMappingAttribute.TargetNamespaceUri" /> 一起指定 <see cref="P:System.Data.Services.Common.EntityPropertyMappingAttribute.TargetPath" /> 元素所在的命名空间。</span><span class="sxs-lookup"><span data-stu-id="93a20-137">Gets a string value that, together with <see cref="P:System.Data.Services.Common.EntityPropertyMappingAttribute.TargetNamespaceUri" />, specifies the namespace in which the <see cref="P:System.Data.Services.Common.EntityPropertyMappingAttribute.TargetPath" /> element exists.</span></span></summary>
        <value><span data-ttu-id="93a20-138">包含目标命名空间前缀的字符串值。</span><span class="sxs-lookup"><span data-stu-id="93a20-138">String value that contains the target namespace prefix.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93a20-139">如果既 <xref:System.Data.Services.Common.EntityPropertyMappingAttribute.TargetNamespacePrefix%2A> <xref:System.Data.Services.Common.EntityPropertyMappingAttribute.TargetNamespaceUri%2A> 未指定也未指定，则 <xref:System.Data.Services.Common.EntityPropertyMappingAttribute.TargetPath%2A> 会将置于默认命名空间中。</span><span class="sxs-lookup"><span data-stu-id="93a20-139">If neither <xref:System.Data.Services.Common.EntityPropertyMappingAttribute.TargetNamespacePrefix%2A> nor <xref:System.Data.Services.Common.EntityPropertyMappingAttribute.TargetNamespaceUri%2A> are specified, the <xref:System.Data.Services.Common.EntityPropertyMappingAttribute.TargetPath%2A> will be put in the default namespace.</span></span> <span data-ttu-id="93a20-140">如果 <xref:System.Data.Services.Common.EntityPropertyMappingAttribute.TargetNamespacePrefix%2A> 未指定，则自动生成前缀。</span><span class="sxs-lookup"><span data-stu-id="93a20-140">If <xref:System.Data.Services.Common.EntityPropertyMappingAttribute.TargetNamespacePrefix%2A> is not specified, a prefix is autogenerated.</span></span> <span data-ttu-id="93a20-141">如果 <xref:System.Data.Services.Common.EntityPropertyMappingAttribute.TargetNamespacePrefix%2A> 指定了，但 <xref:System.Data.Services.Common.EntityPropertyMappingAttribute.TargetNamespaceUri%2A> 未指定，则构造时将引发异常。</span><span class="sxs-lookup"><span data-stu-id="93a20-141">If <xref:System.Data.Services.Common.EntityPropertyMappingAttribute.TargetNamespacePrefix%2A> is specified, but <xref:System.Data.Services.Common.EntityPropertyMappingAttribute.TargetNamespaceUri%2A> is not specified, an exception is thrown at construction time.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TargetNamespaceUri">
      <MemberSignature Language="C#" Value="public string TargetNamespaceUri { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TargetNamespaceUri" />
      <MemberSignature Language="DocId" Value="P:System.Data.Services.Common.EntityPropertyMappingAttribute.TargetNamespaceUri" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TargetNamespaceUri As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TargetNamespaceUri { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TargetNamespaceUri : string" Usage="System.Data.Services.Common.EntityPropertyMappingAttribute.TargetNamespaceUri" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="93a20-142">获取一个字符串值，该值指定由 <see cref="P:System.Data.Services.Common.EntityPropertyMappingAttribute.TargetPath" /> 属性指定的元素的命名空间 URI。</span><span class="sxs-lookup"><span data-stu-id="93a20-142">Gets a string value that specifies the namespace URI of the element specified by the <see cref="P:System.Data.Services.Common.EntityPropertyMappingAttribute.TargetPath" /> property.</span></span></summary>
        <value><span data-ttu-id="93a20-143">包含命名空间 URI 的字符串。</span><span class="sxs-lookup"><span data-stu-id="93a20-143">String that contains the namespace URI.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93a20-144">如果映射到非联合元素/属性，则此属性是目标元素/属性的命名空间。</span><span class="sxs-lookup"><span data-stu-id="93a20-144">If mapping to non-syndication element/attribute, this property is the namespace for the target element/attribute.</span></span>  
  
 <span data-ttu-id="93a20-145">如果既 <xref:System.Data.Services.Common.EntityPropertyMappingAttribute.TargetNamespacePrefix%2A> <xref:System.Data.Services.Common.EntityPropertyMappingAttribute.TargetNamespaceUri%2A> 未指定也未指定，则 <xref:System.Data.Services.Common.EntityPropertyMappingAttribute.TargetPath%2A> 会将置于默认命名空间中。</span><span class="sxs-lookup"><span data-stu-id="93a20-145">If neither <xref:System.Data.Services.Common.EntityPropertyMappingAttribute.TargetNamespacePrefix%2A> nor <xref:System.Data.Services.Common.EntityPropertyMappingAttribute.TargetNamespaceUri%2A> are specified, the <xref:System.Data.Services.Common.EntityPropertyMappingAttribute.TargetPath%2A> will be put in the default namespace.</span></span> <span data-ttu-id="93a20-146">如果 <xref:System.Data.Services.Common.EntityPropertyMappingAttribute.TargetNamespacePrefix%2A> 未指定，则自动生成前缀。</span><span class="sxs-lookup"><span data-stu-id="93a20-146">If <xref:System.Data.Services.Common.EntityPropertyMappingAttribute.TargetNamespacePrefix%2A> is not specified, a prefix is autogenerated.</span></span> <span data-ttu-id="93a20-147">如果 <xref:System.Data.Services.Common.EntityPropertyMappingAttribute.TargetNamespacePrefix%2A> 指定了，但 <xref:System.Data.Services.Common.EntityPropertyMappingAttribute.TargetNamespaceUri%2A> 未指定，则构造时将引发异常。</span><span class="sxs-lookup"><span data-stu-id="93a20-147">If <xref:System.Data.Services.Common.EntityPropertyMappingAttribute.TargetNamespacePrefix%2A> is specified, but <xref:System.Data.Services.Common.EntityPropertyMappingAttribute.TargetNamespaceUri%2A> is not specified, an exception is thrown at construction time.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TargetPath">
      <MemberSignature Language="C#" Value="public string TargetPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TargetPath" />
      <MemberSignature Language="DocId" Value="P:System.Data.Services.Common.EntityPropertyMappingAttribute.TargetPath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TargetPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TargetPath { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TargetPath : string" Usage="System.Data.Services.Common.EntityPropertyMappingAttribute.TargetPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="93a20-148">获取属性将映射到的源中的自定义目标的名称。</span><span class="sxs-lookup"><span data-stu-id="93a20-148">Gets the name of the custom target in the feed to which the property is mapped.</span></span></summary>
        <value><span data-ttu-id="93a20-149">带有目标 XML 元素或特性的字符串值。</span><span class="sxs-lookup"><span data-stu-id="93a20-149">String value with target XML element or attribute.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93a20-150"><xref:System.Data.Services.Common.EntityPropertyMappingAttribute.TargetPath%2A>设置属性时， <xref:System.Data.Services.Common.EntityPropertyMappingAttribute.TargetNamespaceUri%2A> <xref:System.Data.Services.Common.EntityPropertyMappingAttribute.TargetNamespacePrefix%2A> 还必须设置和属性。</span><span class="sxs-lookup"><span data-stu-id="93a20-150">When the <xref:System.Data.Services.Common.EntityPropertyMappingAttribute.TargetPath%2A> property is set, the <xref:System.Data.Services.Common.EntityPropertyMappingAttribute.TargetNamespaceUri%2A> and <xref:System.Data.Services.Common.EntityPropertyMappingAttribute.TargetNamespacePrefix%2A> properties must also be set.</span></span>  
  
 <span data-ttu-id="93a20-151">如果属性的值为以外的任何值，则的值 <xref:System.Data.Services.Common.EntityPropertyMappingAttribute.TargetPath%2A> 必须 `null` `Nothing` 在 Visual Basic) 中 (<xref:System.Data.Services.Common.EntityPropertyMappingAttribute.TargetSyndicationItem%2A> <xref:System.Data.Services.Common.SyndicationItemProperty.CustomProperty> 。</span><span class="sxs-lookup"><span data-stu-id="93a20-151">The value of <xref:System.Data.Services.Common.EntityPropertyMappingAttribute.TargetPath%2A> must be `null` (`Nothing` in Visual Basic) when the value of the <xref:System.Data.Services.Common.EntityPropertyMappingAttribute.TargetSyndicationItem%2A> property is anything other than <xref:System.Data.Services.Common.SyndicationItemProperty.CustomProperty>.</span></span>  
  
 <span data-ttu-id="93a20-152"><xref:System.Data.Services.Common.EntityPropertyMappingAttribute.TargetPath%2A> 必须是一个路径表达式，其中的嵌套元素由反斜杠分隔 (`/`) 和属性由 () 指定指定 `@` 。</span><span class="sxs-lookup"><span data-stu-id="93a20-152"><xref:System.Data.Services.Common.EntityPropertyMappingAttribute.TargetPath%2A> must be a path expression in which nested elements are separated by a backslash (`/`) and attributes are specified by an ampersand (`@`).</span></span> <span data-ttu-id="93a20-153">在以下示例中，字符串 `UnitsInStock/@ReorderLevel` 将属性值映射到根项元素的 `ReorderLevel` 子元素上的 `UnitsInStock` 特性。</span><span class="sxs-lookup"><span data-stu-id="93a20-153">In the following example, the string `UnitsInStock/@ReorderLevel` maps a property value to an attribute named `ReorderLevel` on a child element named `UnitsInStock` of the root entry element.</span></span>  
  
 [!code-xml[Astoria Custom Feeds#EdmFeedMappedToAttributeSpecific](~/samples/snippets/xml/VS_Snippets_Misc/astoria_custom_feeds/xml/northwind.csdl#edmfeedmappedtoattributespecific)]  
  
 <span data-ttu-id="93a20-154"><xref:System.Data.Services.Common.EntityPropertyMappingAttribute.TargetPath%2A>属性不能包含空格。</span><span class="sxs-lookup"><span data-stu-id="93a20-154">The <xref:System.Data.Services.Common.EntityPropertyMappingAttribute.TargetPath%2A> property cannot contain white space.</span></span>  
  
 <span data-ttu-id="93a20-155"><xref:System.Data.Services.Common.EntityPropertyMappingAttribute.TargetPath%2A>属性未表示为真正的 XPath 表达式，但指定的元素和属性名称必须表示格式正确的 XML 元素和特性。</span><span class="sxs-lookup"><span data-stu-id="93a20-155">The <xref:System.Data.Services.Common.EntityPropertyMappingAttribute.TargetPath%2A> property is not expressed as a true XPath expression, but the specified element and attribute names must represent well-formed XML elements and attributes.</span></span> <span data-ttu-id="93a20-156">如果数据服务已初始化，则无效值将导致出现异常。</span><span class="sxs-lookup"><span data-stu-id="93a20-156">An invalid value will cause an exception to occur when the data service is initialized.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TargetSyndicationItem">
      <MemberSignature Language="C#" Value="public System.Data.Services.Common.SyndicationItemProperty TargetSyndicationItem { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.Services.Common.SyndicationItemProperty TargetSyndicationItem" />
      <MemberSignature Language="DocId" Value="P:System.Data.Services.Common.EntityPropertyMappingAttribute.TargetSyndicationItem" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TargetSyndicationItem As SyndicationItemProperty" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Services::Common::SyndicationItemProperty TargetSyndicationItem { System::Data::Services::Common::SyndicationItemProperty get(); };" />
      <MemberSignature Language="F#" Value="member this.TargetSyndicationItem : System.Data.Services.Common.SyndicationItemProperty" Usage="System.Data.Services.Common.EntityPropertyMappingAttribute.TargetSyndicationItem" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Services.Common.SyndicationItemProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="93a20-157">获取 <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> 类的属性。</span><span class="sxs-lookup"><span data-stu-id="93a20-157">Gets a property on the <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> class.</span></span></summary>
        <value><span data-ttu-id="93a20-158"><see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="93a20-158">A <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93a20-159">如果映射到联合元素，则此属性为联合项的名称。</span><span class="sxs-lookup"><span data-stu-id="93a20-159">If mapping to syndication element, this property is the name of the syndication item.</span></span>  
  
 <span data-ttu-id="93a20-160">如果不为 null，则必须将此值设置为 `None` <xref:System.Data.Services.Common.EntityPropertyMappingAttribute.TargetPath%2A> 。</span><span class="sxs-lookup"><span data-stu-id="93a20-160">This value must be set to `None` if the <xref:System.Data.Services.Common.EntityPropertyMappingAttribute.TargetPath%2A> is not null.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TargetTextContentKind">
      <MemberSignature Language="C#" Value="public System.Data.Services.Common.SyndicationTextContentKind TargetTextContentKind { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.Services.Common.SyndicationTextContentKind TargetTextContentKind" />
      <MemberSignature Language="DocId" Value="P:System.Data.Services.Common.EntityPropertyMappingAttribute.TargetTextContentKind" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TargetTextContentKind As SyndicationTextContentKind" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Services::Common::SyndicationTextContentKind TargetTextContentKind { System::Data::Services::Common::SyndicationTextContentKind get(); };" />
      <MemberSignature Language="F#" Value="member this.TargetTextContentKind : System.Data.Services.Common.SyndicationTextContentKind" Usage="System.Data.Services.Common.EntityPropertyMappingAttribute.TargetTextContentKind" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Services.Common.SyndicationTextContentKind</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="93a20-161">获取由 <see cref="T:System.Data.Services.Common.EntityPropertyMappingAttribute" /> 映射的属性的内容类型。</span><span class="sxs-lookup"><span data-stu-id="93a20-161">Gets the type of content of the property mapped by <see cref="T:System.Data.Services.Common.EntityPropertyMappingAttribute" />.</span></span></summary>
        <value><span data-ttu-id="93a20-162">一个标识源元素中的内容类型的字符串。</span><span class="sxs-lookup"><span data-stu-id="93a20-162">A string that identifies the type of content in the feed element.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93a20-163">如果映射到联合内容，则此属性为联合项的内容类型。</span><span class="sxs-lookup"><span data-stu-id="93a20-163">If mapping to syndication content, this property is the content type of syndication item.</span></span>  
  
 <span data-ttu-id="93a20-164">为 <xref:System.Data.Services.Common.SyndicationTextContentKind.Xhtml> 特性指定值 <xref:System.Data.Services.Common.EntityPropertyMappingAttribute.TargetTextContentKind%2A> 时，必须确保该属性值包含格式正确的 XML。</span><span class="sxs-lookup"><span data-stu-id="93a20-164">When you specify a value of <xref:System.Data.Services.Common.SyndicationTextContentKind.Xhtml> for the <xref:System.Data.Services.Common.EntityPropertyMappingAttribute.TargetTextContentKind%2A> attribute, you must ensure that the property value contains properly formatted XML.</span></span> <span data-ttu-id="93a20-165">数据服务返回值，但不执行任何转换。</span><span class="sxs-lookup"><span data-stu-id="93a20-165">The data service returns the value without performing any transformations.</span></span> <span data-ttu-id="93a20-166">还必须确保返回的 XML 中任何 XML 元素前缀在映射的源中定义了命名空间 URI 和前缀。</span><span class="sxs-lookup"><span data-stu-id="93a20-166">You must also ensure that any XML element prefixes in the returned XML have a namespace URI and prefix defined in the mapped feed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
