<Type Name="RIPEMD160Managed" FullName="System.Security.Cryptography.RIPEMD160Managed">
  <Metadata><Meta Name="ms.openlocfilehash" Value="0e583403f7de586af91d66116374914efaab237a" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86751372" /></Metadata><TypeSignature Language="C#" Value="public class RIPEMD160Managed : System.Security.Cryptography.RIPEMD160" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit RIPEMD160Managed extends System.Security.Cryptography.RIPEMD160" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.RIPEMD160Managed" />
  <TypeSignature Language="VB.NET" Value="Public Class RIPEMD160Managed&#xA;Inherits RIPEMD160" />
  <TypeSignature Language="C++ CLI" Value="public ref class RIPEMD160Managed : System::Security::Cryptography::RIPEMD160" />
  <TypeSignature Language="F#" Value="type RIPEMD160Managed = class&#xA;    inherit RIPEMD160" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.Cryptography.RIPEMD160</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.InteropServices.ComVisible(true)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.ComVisible(true)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="e5b1f-101">使用托管库计算输入数据的 <see cref="T:System.Security.Cryptography.RIPEMD160" /> 哈希值。</span><span class="sxs-lookup"><span data-stu-id="e5b1f-101">Computes the <see cref="T:System.Security.Cryptography.RIPEMD160" /> hash for the input data using the managed library.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e5b1f-102">RIPEMD-160 是160位的加密哈希函数。</span><span class="sxs-lookup"><span data-stu-id="e5b1f-102">RIPEMD-160 is a 160-bit cryptographic hash function.</span></span> <span data-ttu-id="e5b1f-103">它旨在作为128位哈希函数 MD4、MD5 和 RIPEMD 的安全替换。</span><span class="sxs-lookup"><span data-stu-id="e5b1f-103">It is intended for use as a secure replacement for the 128-bit hash functions MD4, MD5, and RIPEMD.</span></span> <span data-ttu-id="e5b1f-104">RIPEMD 是在欧盟项目的框架中开发的准备好 (争用完整性基元评估，1988-1992) 。</span><span class="sxs-lookup"><span data-stu-id="e5b1f-104">RIPEMD was developed in the framework of the EU project RIPE (RACE Integrity Primitives Evaluation, 1988-1992).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e5b1f-105"><xref:System.Security.Cryptography.RIPEMD160Managed> 已被安全哈希算法 SHA-256 和 SHA-512 及其派生类取代。</span><span class="sxs-lookup"><span data-stu-id="e5b1f-105"><xref:System.Security.Cryptography.RIPEMD160Managed> has been superseded by the Secure Hash Algorithms SHA-256 and SHA-512 and their derived classes.</span></span> <span data-ttu-id="e5b1f-106"><xref:System.Security.Cryptography.SHA256Managed> 与 <xref:System.Security.Cryptography.SHA512Managed> 相比，提供更好的安全性和性能 <xref:System.Security.Cryptography.RIPEMD160Managed> 。</span><span class="sxs-lookup"><span data-stu-id="e5b1f-106"><xref:System.Security.Cryptography.SHA256Managed> and <xref:System.Security.Cryptography.SHA512Managed> offer better security and performance than <xref:System.Security.Cryptography.RIPEMD160Managed>.</span></span> <span data-ttu-id="e5b1f-107"><xref:System.Security.Cryptography.RIPEMD160Managed>仅用于与旧版应用程序和数据兼容。</span><span class="sxs-lookup"><span data-stu-id="e5b1f-107">Use <xref:System.Security.Cryptography.RIPEMD160Managed> only for compatibility with legacy applications and data.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e5b1f-108">下面的代码示例演示如何使用类对文件进行编码 <xref:System.Security.Cryptography.RIPEMD160Managed> ，以及如何对文件进行解码。</span><span class="sxs-lookup"><span data-stu-id="e5b1f-108">The following code example shows how to encode a file using the <xref:System.Security.Cryptography.RIPEMD160Managed> class and then how to decode the file.</span></span>  
  
 [!code-cpp[RIPEMD160#1](~/samples/snippets/cpp/VS_Snippets_CLR/RIPEMD160/CPP/ripemd160.cpp#1)]
 [!code-csharp[RIPEMD160#1](~/samples/snippets/csharp/VS_Snippets_CLR/RIPEMD160/CS/ripemd160.cs#1)]
 [!code-vb[RIPEMD160#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/RIPEMD160/vb/ripemd160.vb#1)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="/dotnet/standard/security/cryptographic-services"><span data-ttu-id="e5b1f-109">加密服务</span><span class="sxs-lookup"><span data-stu-id="e5b1f-109">Cryptographic Services</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RIPEMD160Managed ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.RIPEMD160Managed.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RIPEMD160Managed();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e5b1f-110">初始化 <see cref="T:System.Security.Cryptography.RIPEMD160" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="e5b1f-110">Initializes a new instance of the <see cref="T:System.Security.Cryptography.RIPEMD160" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e5b1f-111">哈希值用作表示大量数据的固定大小的唯一值。</span><span class="sxs-lookup"><span data-stu-id="e5b1f-111">The hash is used as a unique value of fixed size representing a large amount of data.</span></span> <span data-ttu-id="e5b1f-112">当且仅当相应的数据也匹配时，两组数据的哈希才会匹配。</span><span class="sxs-lookup"><span data-stu-id="e5b1f-112">Hashes of two sets of data should match if and only if the corresponding data also matches.</span></span> <span data-ttu-id="e5b1f-113">对数据的小更改会导致哈希中的大量无法预测的更改。</span><span class="sxs-lookup"><span data-stu-id="e5b1f-113">Small changes to the data result in large unpredictable changes in the hash.</span></span>  
  
 <span data-ttu-id="e5b1f-114">算法的哈希大小 <xref:System.Security.Cryptography.RIPEMD160> 为160位。</span><span class="sxs-lookup"><span data-stu-id="e5b1f-114">The hash size for the <xref:System.Security.Cryptography.RIPEMD160> algorithm is 160 bits.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e5b1f-115">下面的代码示例计算 <xref:System.Security.Cryptography.RIPEMD160Managed> 目录中所有文件的类哈希值。</span><span class="sxs-lookup"><span data-stu-id="e5b1f-115">The following code example computes the <xref:System.Security.Cryptography.RIPEMD160Managed> class hash for all files in a directory.</span></span>  
  
 [!code-cpp[RIPEMD160#1](~/samples/snippets/cpp/VS_Snippets_CLR/RIPEMD160/CPP/ripemd160.cpp#1)]
 [!code-csharp[RIPEMD160#1](~/samples/snippets/csharp/VS_Snippets_CLR/RIPEMD160/CS/ripemd160.cs#1)]
 [!code-vb[RIPEMD160#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/RIPEMD160/vb/ripemd160.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e5b1f-116">此策略不符合 FIPS 算法。</span><span class="sxs-lookup"><span data-stu-id="e5b1f-116">The policy is not compliant with the FIPS algorithm.</span></span></exception>
        <related type="Article" href="/dotnet/standard/security/cryptographic-services"><span data-ttu-id="e5b1f-117">加密服务</span><span class="sxs-lookup"><span data-stu-id="e5b1f-117">Cryptographic Services</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="HashCore">
      <MemberSignature Language="C#" Value="protected override void HashCore (byte[] rgb, int ibStart, int cbSize);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void HashCore(unsigned int8[] rgb, int32 ibStart, int32 cbSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.RIPEMD160Managed.HashCore(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub HashCore (rgb As Byte(), ibStart As Integer, cbSize As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void HashCore(cli::array &lt;System::Byte&gt; ^ rgb, int ibStart, int cbSize);" />
      <MemberSignature Language="F#" Value="override this.HashCore : byte[] * int * int -&gt; unit" Usage="rIPEMD160Managed.HashCore (rgb, ibStart, cbSize)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rgb" Type="System.Byte[]" />
        <Parameter Name="ibStart" Type="System.Int32" />
        <Parameter Name="cbSize" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="rgb"><span data-ttu-id="e5b1f-118">输入数据。</span><span class="sxs-lookup"><span data-stu-id="e5b1f-118">The input data.</span></span></param>
        <param name="ibStart"><span data-ttu-id="e5b1f-119">字节数组中的偏移量，从该位置开始使用数据。</span><span class="sxs-lookup"><span data-stu-id="e5b1f-119">The offset into the byte array from which to begin using data.</span></span></param>
        <param name="cbSize"><span data-ttu-id="e5b1f-120">数组中用作数据的字节数。</span><span class="sxs-lookup"><span data-stu-id="e5b1f-120">The number of bytes in the array to use as data.</span></span></param>
        <summary><span data-ttu-id="e5b1f-121">当在派生类中重写时，将写入对象的数据路由到 <see cref="T:System.Security.Cryptography.RIPEMD160" /> 哈希算法以计算哈希值。</span><span class="sxs-lookup"><span data-stu-id="e5b1f-121">When overridden in a derived class, routes data written to the object into the <see cref="T:System.Security.Cryptography.RIPEMD160" /> hash algorithm for computing the hash.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e5b1f-122">应用程序代码不会调用此方法。</span><span class="sxs-lookup"><span data-stu-id="e5b1f-122">This method is not called by application code.</span></span>  
  
 <span data-ttu-id="e5b1f-123">此抽象方法执行哈希计算。</span><span class="sxs-lookup"><span data-stu-id="e5b1f-123">This abstract method performs the hash computation.</span></span> <span data-ttu-id="e5b1f-124">对加密流对象的每次写入都通过此方法传递数据。</span><span class="sxs-lookup"><span data-stu-id="e5b1f-124">Every write to the cryptographic stream object passes the data through this method.</span></span> <span data-ttu-id="e5b1f-125">对于每个数据块，此方法将更新哈希对象的状态，以便在数据流的末尾返回正确的哈希值。</span><span class="sxs-lookup"><span data-stu-id="e5b1f-125">For each block of data, this method updates the state of the hash object so a correct hash value is returned at the end of the data stream.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Security.Cryptography.HashAlgorithm" />
        <related type="Article" href="/dotnet/standard/security/cryptographic-services"><span data-ttu-id="e5b1f-126">加密服务</span><span class="sxs-lookup"><span data-stu-id="e5b1f-126">Cryptographic Services</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="HashFinal">
      <MemberSignature Language="C#" Value="protected override byte[] HashFinal ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance unsigned int8[] HashFinal() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.RIPEMD160Managed.HashFinal" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function HashFinal () As Byte()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override cli::array &lt;System::Byte&gt; ^ HashFinal();" />
      <MemberSignature Language="F#" Value="override this.HashFinal : unit -&gt; byte[]" Usage="rIPEMD160Managed.HashFinal " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e5b1f-127">当在派生类中重写时，在加密流对象处理完最后的数据后完成哈希计算。</span><span class="sxs-lookup"><span data-stu-id="e5b1f-127">When overridden in a derived class, finalizes the hash computation after the last data is processed by the cryptographic stream object.</span></span></summary>
        <returns><span data-ttu-id="e5b1f-128">字节数组中计算所得的哈希代码。</span><span class="sxs-lookup"><span data-stu-id="e5b1f-128">The computed hash code in a byte array.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e5b1f-129">应用程序代码不会调用此方法。</span><span class="sxs-lookup"><span data-stu-id="e5b1f-129">This method is not called by application code.</span></span> <span data-ttu-id="e5b1f-130">此方法完成所有部分计算，并返回数据流的正确哈希值。</span><span class="sxs-lookup"><span data-stu-id="e5b1f-130">This method finalizes any partial computation and returns the correct hash value of the data stream.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/standard/security/cryptographic-services"><span data-ttu-id="e5b1f-131">加密服务</span><span class="sxs-lookup"><span data-stu-id="e5b1f-131">Cryptographic Services</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public override void Initialize ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Initialize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.RIPEMD160Managed.Initialize" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Initialize ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Initialize();" />
      <MemberSignature Language="F#" Value="override this.Initialize : unit -&gt; unit" Usage="rIPEMD160Managed.Initialize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e5b1f-132">使用托管库初始化 <see cref="T:System.Security.Cryptography.RIPEMD160Managed" /> 类的实例。</span><span class="sxs-lookup"><span data-stu-id="e5b1f-132">Initializes an instance of the <see cref="T:System.Security.Cryptography.RIPEMD160Managed" /> class using the managed library.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e5b1f-133">RIPEMD-160 是160位的加密哈希函数。</span><span class="sxs-lookup"><span data-stu-id="e5b1f-133">RIPEMD-160 is a 160-bit cryptographic hash function.</span></span> <span data-ttu-id="e5b1f-134">它旨在作为128位哈希函数 MD4、MD5 和 RIPEMD 的安全替换。</span><span class="sxs-lookup"><span data-stu-id="e5b1f-134">It is intended for use as a secure replacement for the 128-bit hash functions MD4, MD5, and RIPEMD.</span></span> <span data-ttu-id="e5b1f-135">RIPEMD 是在欧盟项目的框架中开发的准备好 (争用完整性基元评估，1988-1992) 。</span><span class="sxs-lookup"><span data-stu-id="e5b1f-135">RIPEMD was developed in the framework of the EU project RIPE (RACE Integrity Primitives Evaluation, 1988-1992).</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/standard/security/cryptographic-services"><span data-ttu-id="e5b1f-136">加密服务</span><span class="sxs-lookup"><span data-stu-id="e5b1f-136">Cryptographic Services</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>
