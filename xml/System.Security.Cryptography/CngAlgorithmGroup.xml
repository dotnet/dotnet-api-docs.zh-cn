<Type Name="CngAlgorithmGroup" FullName="System.Security.Cryptography.CngAlgorithmGroup">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e8d0f940fd27bf599caf2cc9353c79e13038c073" /><Meta Name="ms.sourcegitcommit" Value="943c8cdbe5b47c6c296a6f4b73038bbd43da0dd2" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="02/12/2021" /><Meta Name="ms.locfileid" Value="100295333" /></Metadata><TypeSignature Language="C#" Value="public sealed class CngAlgorithmGroup : IEquatable&lt;System.Security.Cryptography.CngAlgorithmGroup&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit CngAlgorithmGroup extends System.Object implements class System.IEquatable`1&lt;class System.Security.Cryptography.CngAlgorithmGroup&gt;" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;net-5.0;netcore-1.0;netcore-1.1;netcore-3.0;netcore-3.1" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.CngAlgorithmGroup" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class CngAlgorithmGroup&#xA;Implements IEquatable(Of CngAlgorithmGroup)" />
  <TypeSignature Language="C++ CLI" Value="public ref class CngAlgorithmGroup sealed : IEquatable&lt;System::Security::Cryptography::CngAlgorithmGroup ^&gt;" />
  <TypeSignature Language="F#" Value="type CngAlgorithmGroup = class&#xA;    interface IEquatable&lt;CngAlgorithmGroup&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit CngAlgorithmGroup extends System.Object implements class System.IEquatable`1&lt;class System.Security.Cryptography.CngAlgorithmGroup&gt;" FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.3.0.0</AssemblyVersion>
    <AssemblyVersion>4.3.1.0</AssemblyVersion>
    <AssemblyVersion>4.3.2.0</AssemblyVersion>
    <AssemblyVersion>4.3.3.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Core</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.Security.Cryptography.CngAlgorithmGroup&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName Language="C#">[System.Serializable]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Serializable&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="5523f-101">封装加密算法组的名称。</span><span class="sxs-lookup"><span data-stu-id="5523f-101">Encapsulates the name of an encryption algorithm group.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5523f-102"><xref:System.Security.Cryptography.CngAlgorithmGroup>类是一个实用工具类。</span><span class="sxs-lookup"><span data-stu-id="5523f-102">The <xref:System.Security.Cryptography.CngAlgorithmGroup> class is a utility class.</span></span> <span data-ttu-id="5523f-103">它由静态属性、比较方法和用于定义算法组名称的私有、内部维护的字符串组成。</span><span class="sxs-lookup"><span data-stu-id="5523f-103">It consists of static properties, comparison methods, and a private, internally maintained string that defines an algorithm group name.</span></span>  
  
 <span data-ttu-id="5523f-104">静态属性返回 <xref:System.Security.Cryptography.CngAlgorithmGroup> 对象。</span><span class="sxs-lookup"><span data-stu-id="5523f-104">The static properties return <xref:System.Security.Cryptography.CngAlgorithmGroup> objects.</span></span> <span data-ttu-id="5523f-105">每个对象的内部字符串都初始化为与静态属性的名称相对应的算法组名称。</span><span class="sxs-lookup"><span data-stu-id="5523f-105">Each object's internal string is initialized to the algorithm group name that corresponds to the name of the static property.</span></span>  
  
 <span data-ttu-id="5523f-106">你还可以使用此类为静态属性未涵盖的算法组创建对象。</span><span class="sxs-lookup"><span data-stu-id="5523f-106">You can also use this class to create objects for algorithm groups that are not covered by the static properties.</span></span>  
  
 <span data-ttu-id="5523f-107">下一代加密技术 (CNG) 类 (如 <xref:System.Security.Cryptography.CngKey>) 返回 <xref:System.Security.Cryptography.CngAlgorithmGroup> 对象。</span><span class="sxs-lookup"><span data-stu-id="5523f-107">Several Cryptography Next Generation (CNG) classes (such as <xref:System.Security.Cryptography.CngKey>) return <xref:System.Security.Cryptography.CngAlgorithmGroup> objects.</span></span> <span data-ttu-id="5523f-108">接收对象的类 <xref:System.Security.Cryptography.CngAlgorithm> 可以通过调用对象的属性来检索嵌入的算法组名称 <xref:System.Security.Cryptography.CngKey.AlgorithmGroup%2A> 。</span><span class="sxs-lookup"><span data-stu-id="5523f-108">Classes that receive <xref:System.Security.Cryptography.CngAlgorithm> objects can retrieve the embedded algorithm group name by calling the object's <xref:System.Security.Cryptography.CngKey.AlgorithmGroup%2A> property.</span></span>  
  
 <span data-ttu-id="5523f-109">因此，用作 <xref:System.Security.Cryptography.CngAlgorithmGroup> 已知算法组的枚举。</span><span class="sxs-lookup"><span data-stu-id="5523f-109">Therefore, <xref:System.Security.Cryptography.CngAlgorithmGroup> serves as an enumeration of well-known algorithm groups.</span></span> <span data-ttu-id="5523f-110">使用强类型化的值而不是字符串，可以指定算法组的名称。</span><span class="sxs-lookup"><span data-stu-id="5523f-110">It lets you specify an algorithm group name by using a strongly typed value instead of a string.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CngAlgorithmGroup (string algorithmGroup);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string algorithmGroup) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.CngAlgorithmGroup.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (algorithmGroup As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CngAlgorithmGroup(System::String ^ algorithmGroup);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.CngAlgorithmGroup : string -&gt; System.Security.Cryptography.CngAlgorithmGroup" Usage="new System.Security.Cryptography.CngAlgorithmGroup algorithmGroup" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
        <AssemblyVersion>4.3.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="algorithmGroup" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="algorithmGroup"><span data-ttu-id="5523f-111">要初始化的算法组的名称。</span><span class="sxs-lookup"><span data-stu-id="5523f-111">The name of the algorithm group to initialize.</span></span></param>
        <summary><span data-ttu-id="5523f-112">初始化 <see cref="T:System.Security.Cryptography.CngAlgorithmGroup" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="5523f-112">Initializes a new instance of the <see cref="T:System.Security.Cryptography.CngAlgorithmGroup" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5523f-113">类的实例 <xref:System.Security.Cryptography.CngAlgorithmGroup> 在内部维护参数指定的算法组名称 `algorithmGroup` 。</span><span class="sxs-lookup"><span data-stu-id="5523f-113">Instances of the <xref:System.Security.Cryptography.CngAlgorithmGroup> class internally maintain the algorithm group name that is specified by the `algorithmGroup` parameter.</span></span>  
  
 <span data-ttu-id="5523f-114">此构造函数的主要目的是提供一种方法，用于为 <xref:System.Security.Cryptography.CngAlgorithmGroup> 不是由类的静态属性表示的算法组创建对象 <xref:System.Security.Cryptography.CngAlgorithmGroup> 。</span><span class="sxs-lookup"><span data-stu-id="5523f-114">The primary purpose of this constructor is to provide a method for creating <xref:System.Security.Cryptography.CngAlgorithmGroup> objects for algorithm groups that are not represented by the static properties of the <xref:System.Security.Cryptography.CngAlgorithmGroup> class.</span></span> <span data-ttu-id="5523f-115">此容量使未来 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 版本、service pack 和第三方开发人员能够添加新的算法组，这些组可以像当前可用的算法组一样进行访问。</span><span class="sxs-lookup"><span data-stu-id="5523f-115">This capacity enables future [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] releases, service packs, and third-party developers to add new algorithm groups, which can be accessed just like the algorithm groups that are currently available.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="5523f-116"><paramref name="algorithmGroup" /> 参数为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="5523f-116">The <paramref name="algorithmGroup" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="5523f-117"><paramref name="algorithmGroup" /> 参数的长度为 0（零）。</span><span class="sxs-lookup"><span data-stu-id="5523f-117">The <paramref name="algorithmGroup" /> parameter length is 0 (zero).</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AlgorithmGroup">
      <MemberSignature Language="C#" Value="public string AlgorithmGroup { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AlgorithmGroup" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.CngAlgorithmGroup.AlgorithmGroup" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AlgorithmGroup As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ AlgorithmGroup { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AlgorithmGroup : string" Usage="System.Security.Cryptography.CngAlgorithmGroup.AlgorithmGroup" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
        <AssemblyVersion>4.3.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5523f-118">获取当前 <see cref="T:System.Security.Cryptography.CngAlgorithm" /> 对象指定的算法组的名称。</span><span class="sxs-lookup"><span data-stu-id="5523f-118">Gets the name of the algorithm group that the current <see cref="T:System.Security.Cryptography.CngAlgorithm" /> object specifies.</span></span></summary>
        <value><span data-ttu-id="5523f-119">嵌入的算法组名称。</span><span class="sxs-lookup"><span data-stu-id="5523f-119">The embedded algorithm group name.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DiffieHellman">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.CngAlgorithmGroup DiffieHellman { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Security.Cryptography.CngAlgorithmGroup DiffieHellman" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.CngAlgorithmGroup.DiffieHellman" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property DiffieHellman As CngAlgorithmGroup" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Security::Cryptography::CngAlgorithmGroup ^ DiffieHellman { System::Security::Cryptography::CngAlgorithmGroup ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DiffieHellman : System.Security.Cryptography.CngAlgorithmGroup" Usage="System.Security.Cryptography.CngAlgorithmGroup.DiffieHellman" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
        <AssemblyVersion>4.3.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.CngAlgorithmGroup</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5523f-120">获取一个指定 Diffie-Hellman 算法系列的 <see cref="T:System.Security.Cryptography.CngAlgorithmGroup" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="5523f-120">Gets a <see cref="T:System.Security.Cryptography.CngAlgorithmGroup" /> object that specifies the Diffie-Hellman family of algorithms.</span></span></summary>
        <value><span data-ttu-id="5523f-121">一个指定 Diffie-Hellman 算法系列的对象。</span><span class="sxs-lookup"><span data-stu-id="5523f-121">An object that specifies the Diffie-Hellman family of algorithms.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dsa">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.CngAlgorithmGroup Dsa { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Security.Cryptography.CngAlgorithmGroup Dsa" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.CngAlgorithmGroup.Dsa" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Dsa As CngAlgorithmGroup" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Security::Cryptography::CngAlgorithmGroup ^ Dsa { System::Security::Cryptography::CngAlgorithmGroup ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Dsa : System.Security.Cryptography.CngAlgorithmGroup" Usage="System.Security.Cryptography.CngAlgorithmGroup.Dsa" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
        <AssemblyVersion>4.3.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.CngAlgorithmGroup</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5523f-122">获取一个指定数字签名算法 (DSA) 算法系列的 <see cref="T:System.Security.Cryptography.CngAlgorithmGroup" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="5523f-122">Gets a <see cref="T:System.Security.Cryptography.CngAlgorithmGroup" /> object that specifies the Digital Signature Algorithm (DSA) family of algorithms.</span></span></summary>
        <value><span data-ttu-id="5523f-123">一个指定 DSA 算法系列的对象。</span><span class="sxs-lookup"><span data-stu-id="5523f-123">An object that specifies the DSA family of algorithms.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ECDiffieHellman">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.CngAlgorithmGroup ECDiffieHellman { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Security.Cryptography.CngAlgorithmGroup ECDiffieHellman" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.CngAlgorithmGroup.ECDiffieHellman" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ECDiffieHellman As CngAlgorithmGroup" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Security::Cryptography::CngAlgorithmGroup ^ ECDiffieHellman { System::Security::Cryptography::CngAlgorithmGroup ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ECDiffieHellman : System.Security.Cryptography.CngAlgorithmGroup" Usage="System.Security.Cryptography.CngAlgorithmGroup.ECDiffieHellman" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
        <AssemblyVersion>4.3.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.CngAlgorithmGroup</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5523f-124">获取一个指定椭圆曲线 Diffie-Hellman (ECDH) 算法系列的 <see cref="T:System.Security.Cryptography.CngAlgorithmGroup" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="5523f-124">Gets a <see cref="T:System.Security.Cryptography.CngAlgorithmGroup" /> object that specifies the Elliptic Curve Diffie-Hellman (ECDH) family of algorithms.</span></span></summary>
        <value><span data-ttu-id="5523f-125">一个指定 ECDH 算法系列的对象。</span><span class="sxs-lookup"><span data-stu-id="5523f-125">An object that specifies the ECDH family of algorithms.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ECDsa">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.CngAlgorithmGroup ECDsa { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Security.Cryptography.CngAlgorithmGroup ECDsa" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.CngAlgorithmGroup.ECDsa" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ECDsa As CngAlgorithmGroup" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Security::Cryptography::CngAlgorithmGroup ^ ECDsa { System::Security::Cryptography::CngAlgorithmGroup ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ECDsa : System.Security.Cryptography.CngAlgorithmGroup" Usage="System.Security.Cryptography.CngAlgorithmGroup.ECDsa" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
        <AssemblyVersion>4.3.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.CngAlgorithmGroup</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5523f-126">获取一个指定椭圆曲线数字签名算法 (ECDSA) 算法系列的 <see cref="T:System.Security.Cryptography.CngAlgorithmGroup" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="5523f-126">Gets a <see cref="T:System.Security.Cryptography.CngAlgorithmGroup" /> object that specifies the Elliptic Curve Digital Signature Algorithm (ECDSA) family of algorithms.</span></span></summary>
        <value><span data-ttu-id="5523f-127">一个指定 ECDSA 算法系列的对象。</span><span class="sxs-lookup"><span data-stu-id="5523f-127">An object that specifies the ECDSA family of algorithms.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="5523f-128">比较两个 <see cref="T:System.Security.Cryptography.CngAlgorithmGroup" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="5523f-128">Compares two <see cref="T:System.Security.Cryptography.CngAlgorithmGroup" /> objects.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netcore-1.0;netcore-1.1;netcore-3.0;netcore-3.1;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.CngAlgorithmGroup.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="cngAlgorithmGroup.Equals obj" />
      <MemberSignature Language="C#" Value="public override bool Equals (object? obj);" FrameworkAlternate="dotnet-plat-ext-5.0;net-5.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
        <AssemblyVersion>4.3.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="5523f-129">要与当前的 <see cref="T:System.Security.Cryptography.CngAlgorithmGroup" /> 对象进行比较的对象。</span><span class="sxs-lookup"><span data-stu-id="5523f-129">An object to be compared to the current <see cref="T:System.Security.Cryptography.CngAlgorithmGroup" /> object.</span></span></param>
        <summary><span data-ttu-id="5523f-130">将指定的对象与当前的 <see cref="T:System.Security.Cryptography.CngAlgorithmGroup" /> 对象进行比较。</span><span class="sxs-lookup"><span data-stu-id="5523f-130">Compares the specified object to the current <see cref="T:System.Security.Cryptography.CngAlgorithmGroup" /> object.</span></span></summary>
        <returns><span data-ttu-id="5523f-131">如果 <paramref name="obj" /> 参数是一个 <see cref="T:System.Security.Cryptography.CngAlgorithmGroup" />，而且它指定的算法组与当前对象的算法组相同，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="5523f-131"><see langword="true" /> if the <paramref name="obj" /> parameter is a <see cref="T:System.Security.Cryptography.CngAlgorithmGroup" /> that specifies the same algorithm group as the current object; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (System.Security.Cryptography.CngAlgorithmGroup other);" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netcore-1.0;netcore-1.1;netcore-3.0;netcore-3.1;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(class System.Security.Cryptography.CngAlgorithmGroup other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.CngAlgorithmGroup.Equals(System.Security.Cryptography.CngAlgorithmGroup)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As CngAlgorithmGroup) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(System::Security::Cryptography::CngAlgorithmGroup ^ other);" />
      <MemberSignature Language="F#" Value="override this.Equals : System.Security.Cryptography.CngAlgorithmGroup -&gt; bool" Usage="cngAlgorithmGroup.Equals other" />
      <MemberSignature Language="C#" Value="public bool Equals (System.Security.Cryptography.CngAlgorithmGroup? other);" FrameworkAlternate="dotnet-plat-ext-5.0;net-5.0" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
        <AssemblyVersion>4.3.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Security.Cryptography.CngAlgorithmGroup" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="5523f-132">要与当前的 <see cref="T:System.Security.Cryptography.CngAlgorithmGroup" /> 对象进行比较的对象。</span><span class="sxs-lookup"><span data-stu-id="5523f-132">An object to be compared to the current <see cref="T:System.Security.Cryptography.CngAlgorithmGroup" /> object.</span></span></param>
        <summary><span data-ttu-id="5523f-133">将指定的 <see cref="T:System.Security.Cryptography.CngAlgorithmGroup" /> 对象与当前的 <see cref="T:System.Security.Cryptography.CngAlgorithmGroup" /> 对象进行比较。</span><span class="sxs-lookup"><span data-stu-id="5523f-133">Compares the specified <see cref="T:System.Security.Cryptography.CngAlgorithmGroup" /> object to the current <see cref="T:System.Security.Cryptography.CngAlgorithmGroup" /> object.</span></span></summary>
        <returns><span data-ttu-id="5523f-134">如果 <paramref name="other" /> 参数指定的算法组与当前对象的算法组相同，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="5523f-134"><see langword="true" /> if the <paramref name="other" /> parameter specifies the same algorithm group as the current object; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.CngAlgorithmGroup.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="cngAlgorithmGroup.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
        <AssemblyVersion>4.3.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="5523f-135">为当前 <see cref="T:System.Security.Cryptography.CngAlgorithmGroup" /> 对象中嵌入的算法组名称生成一个哈希值。</span><span class="sxs-lookup"><span data-stu-id="5523f-135">Generates a hash value for the algorithm group name that is embedded in the current <see cref="T:System.Security.Cryptography.CngAlgorithmGroup" /> object.</span></span></summary>
        <returns><span data-ttu-id="5523f-136">嵌入的算法组名称的哈希值。</span><span class="sxs-lookup"><span data-stu-id="5523f-136">The hash value of the embedded algorithm group name.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Security.Cryptography.CngAlgorithmGroup left, System.Security.Cryptography.CngAlgorithmGroup right);" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netcore-1.0;netcore-1.1;netcore-3.0;netcore-3.1;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(class System.Security.Cryptography.CngAlgorithmGroup left, class System.Security.Cryptography.CngAlgorithmGroup right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.CngAlgorithmGroup.op_Equality(System.Security.Cryptography.CngAlgorithmGroup,System.Security.Cryptography.CngAlgorithmGroup)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (left As CngAlgorithmGroup, right As CngAlgorithmGroup) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Security::Cryptography::CngAlgorithmGroup ^ left, System::Security::Cryptography::CngAlgorithmGroup ^ right);" />
      <MemberSignature Language="F#" Value="static member ( = ) : System.Security.Cryptography.CngAlgorithmGroup * System.Security.Cryptography.CngAlgorithmGroup -&gt; bool" Usage="left = right" />
      <MemberSignature Language="C#" Value="public static bool operator == (System.Security.Cryptography.CngAlgorithmGroup? left, System.Security.Cryptography.CngAlgorithmGroup? right);" FrameworkAlternate="dotnet-plat-ext-5.0;net-5.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
        <AssemblyVersion>4.3.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Security.Cryptography.CngAlgorithmGroup" />
        <Parameter Name="right" Type="System.Security.Cryptography.CngAlgorithmGroup" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="5523f-137">一个指定某一算法组的对象。</span><span class="sxs-lookup"><span data-stu-id="5523f-137">An object that specifies an algorithm group.</span></span></param>
        <param name="right"><span data-ttu-id="5523f-138">要与 <paramref name="left" /> 参数标识的对象进行比较的另一个对象。</span><span class="sxs-lookup"><span data-stu-id="5523f-138">A second object, to be compared to the object that is identified by the <paramref name="left" /> parameter.</span></span></param>
        <summary><span data-ttu-id="5523f-139">确定两个 <see cref="T:System.Security.Cryptography.CngAlgorithmGroup" /> 对象指定的是否是同一算法组。</span><span class="sxs-lookup"><span data-stu-id="5523f-139">Determines whether two <see cref="T:System.Security.Cryptography.CngAlgorithmGroup" /> objects specify the same algorithm group.</span></span></summary>
        <returns><span data-ttu-id="5523f-140">如果两个对象指定的是同一算法组，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="5523f-140"><see langword="true" /> if the two objects specify the same algorithm group; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Security.Cryptography.CngAlgorithmGroup left, System.Security.Cryptography.CngAlgorithmGroup right);" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netcore-1.0;netcore-1.1;netcore-3.0;netcore-3.1;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(class System.Security.Cryptography.CngAlgorithmGroup left, class System.Security.Cryptography.CngAlgorithmGroup right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.CngAlgorithmGroup.op_Inequality(System.Security.Cryptography.CngAlgorithmGroup,System.Security.Cryptography.CngAlgorithmGroup)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (left As CngAlgorithmGroup, right As CngAlgorithmGroup) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Security::Cryptography::CngAlgorithmGroup ^ left, System::Security::Cryptography::CngAlgorithmGroup ^ right);" />
      <MemberSignature Language="F#" Value="static member op_Inequality : System.Security.Cryptography.CngAlgorithmGroup * System.Security.Cryptography.CngAlgorithmGroup -&gt; bool" Usage="System.Security.Cryptography.CngAlgorithmGroup.op_Inequality (left, right)" />
      <MemberSignature Language="C#" Value="public static bool operator != (System.Security.Cryptography.CngAlgorithmGroup? left, System.Security.Cryptography.CngAlgorithmGroup? right);" FrameworkAlternate="dotnet-plat-ext-5.0;net-5.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
        <AssemblyVersion>4.3.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Security.Cryptography.CngAlgorithmGroup" />
        <Parameter Name="right" Type="System.Security.Cryptography.CngAlgorithmGroup" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="5523f-141">一个指定某一算法组的对象。</span><span class="sxs-lookup"><span data-stu-id="5523f-141">An object that specifies an algorithm group.</span></span></param>
        <param name="right"><span data-ttu-id="5523f-142">要与 <paramref name="left" /> 参数标识的对象进行比较的另一个对象。</span><span class="sxs-lookup"><span data-stu-id="5523f-142">A second object, to be compared to the object that is identified by the <paramref name="left" /> parameter.</span></span></param>
        <summary><span data-ttu-id="5523f-143">确定两个 <see cref="T:System.Security.Cryptography.CngAlgorithmGroup" /> 对象是否未指定同一算法组。</span><span class="sxs-lookup"><span data-stu-id="5523f-143">Determines whether two <see cref="T:System.Security.Cryptography.CngAlgorithmGroup" /> objects do not specify the same algorithm group.</span></span></summary>
        <returns><span data-ttu-id="5523f-144">如果两个对象指定的不是同一算法组，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="5523f-144"><see langword="true" /> if the two objects do not specify the same algorithm group; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Rsa">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.CngAlgorithmGroup Rsa { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Security.Cryptography.CngAlgorithmGroup Rsa" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.CngAlgorithmGroup.Rsa" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Rsa As CngAlgorithmGroup" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Security::Cryptography::CngAlgorithmGroup ^ Rsa { System::Security::Cryptography::CngAlgorithmGroup ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Rsa : System.Security.Cryptography.CngAlgorithmGroup" Usage="System.Security.Cryptography.CngAlgorithmGroup.Rsa" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
        <AssemblyVersion>4.3.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.CngAlgorithmGroup</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5523f-145">获取一个指定 Rivest-Shamir-Adleman (RSA) 算法系列的 <see cref="T:System.Security.Cryptography.CngAlgorithmGroup" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="5523f-145">Gets a <see cref="T:System.Security.Cryptography.CngAlgorithmGroup" /> object that specifies the Rivest-Shamir-Adleman (RSA) family of algorithms.</span></span></summary>
        <value><span data-ttu-id="5523f-146">一个指定 RSA 算法系列的对象。</span><span class="sxs-lookup"><span data-stu-id="5523f-146">An object that specifies the RSA family of algorithms.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.CngAlgorithmGroup.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="cngAlgorithmGroup.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
        <AssemblyVersion>4.3.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="5523f-147">获取当前 <see cref="T:System.Security.Cryptography.CngAlgorithm" /> 对象指定的算法组的名称。</span><span class="sxs-lookup"><span data-stu-id="5523f-147">Gets the name of the algorithm group that the current <see cref="T:System.Security.Cryptography.CngAlgorithm" /> object specifies.</span></span></summary>
        <returns><span data-ttu-id="5523f-148">嵌入的算法组名称。</span><span class="sxs-lookup"><span data-stu-id="5523f-148">The embedded algorithm group name.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
