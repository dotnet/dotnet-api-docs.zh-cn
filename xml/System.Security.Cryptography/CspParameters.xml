<Type Name="CspParameters" FullName="System.Security.Cryptography.CspParameters">
  <Metadata><Meta Name="ms.openlocfilehash" Value="910e544b2d9340b8e248dfd902177cdb17487e5c" /><Meta Name="ms.sourcegitcommit" Value="a8ca33e500a87229bed50d12e09b1347df519648" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="10/09/2020" /><Meta Name="ms.locfileid" Value="91917323" /></Metadata><TypeSignature Language="C#" Value="public sealed class CspParameters" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit CspParameters extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.CspParameters" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class CspParameters" />
  <TypeSignature Language="C++ CLI" Value="public ref class CspParameters sealed" />
  <TypeSignature Language="F#" Value="type CspParameters = class" />
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="mscorlib" FromVersion="4.0.0.0" To="System.Security.Cryptography.Csp" ToVersion="0.0.0.0" FrameworkAlternate="net-5.0" />
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.Security.Cryptography.Csp" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName Language="C#">[System.Runtime.InteropServices.ComVisible(true)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.ComVisible(true)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="ae0c5-101">包含一些参数，这些参数传递到指定加密计算的加密服务提供程序 (CSP)。</span><span class="sxs-lookup"><span data-stu-id="ae0c5-101">Contains parameters that are passed to the cryptographic service provider (CSP) that performs cryptographic computations.</span></span> <span data-ttu-id="ae0c5-102">此类不能被继承。</span><span class="sxs-lookup"><span data-stu-id="ae0c5-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ae0c5-103"><xref:System.Security.Cryptography.CspParameters>类表示一些参数，可以将这些参数传递给托管的加密类，这些类在内部使用 Microsoft 加密服务提供程序 (csp) 从非托管的 Microsoft 加密 API (CAPI) 。</span><span class="sxs-lookup"><span data-stu-id="ae0c5-103">The <xref:System.Security.Cryptography.CspParameters> class represents parameters that you can pass to managed cryptography classes that internally use Microsoft Cryptographic Service Providers (CSPs) from the unmanaged Microsoft Cryptography API (CAPI).</span></span> <span data-ttu-id="ae0c5-104">名称以 "CryptoServiceProvider" 结尾的类是对应 CSP 的托管代码包装。</span><span class="sxs-lookup"><span data-stu-id="ae0c5-104">Classes with names ending in "CryptoServiceProvider" are managed code wrappers for the corresponding CSP.</span></span>  
  
 <span data-ttu-id="ae0c5-105">使用 <xref:System.Security.Cryptography.CspParameters> 类来执行以下操作：</span><span class="sxs-lookup"><span data-stu-id="ae0c5-105">Use the <xref:System.Security.Cryptography.CspParameters> class to do the following:</span></span>  
  
-   <span data-ttu-id="ae0c5-106">通过向或属性传递提供程序类型来指定特定 <xref:System.Security.Cryptography.CspParameters.ProviderType> CSP <xref:System.Security.Cryptography.CspParameters.ProviderName> 。</span><span class="sxs-lookup"><span data-stu-id="ae0c5-106">Specify a particular CSP by passing the provider type to the <xref:System.Security.Cryptography.CspParameters.ProviderType> or <xref:System.Security.Cryptography.CspParameters.ProviderName> property.</span></span>  <span data-ttu-id="ae0c5-107">还可以使用构造函数的重载来指定 CSP。</span><span class="sxs-lookup"><span data-stu-id="ae0c5-107">You can also specify a CSP using an overload of the constructor.</span></span>  
  
-   <span data-ttu-id="ae0c5-108">创建可存储加密密钥的密钥容器。</span><span class="sxs-lookup"><span data-stu-id="ae0c5-108">Create a key container where you can store cryptographic keys.</span></span>  <span data-ttu-id="ae0c5-109">密钥容器提供了持久保存加密密钥并使其免受恶意第三方攻击的最安全方式。</span><span class="sxs-lookup"><span data-stu-id="ae0c5-109">Key containers provide the most secure way to persist cryptographic keys and keep them secret from malicious third parties.</span></span>  <span data-ttu-id="ae0c5-110">有关创建密钥容器的详细信息，请参阅 [如何：将非对称密钥存储在密钥容器中](/dotnet/standard/security/how-to-store-asymmetric-keys-in-a-key-container)。</span><span class="sxs-lookup"><span data-stu-id="ae0c5-110">For more information about creating key containers, see [How to: Store Asymmetric Keys in a Key Container](/dotnet/standard/security/how-to-store-asymmetric-keys-in-a-key-container).</span></span>  
  
-   <span data-ttu-id="ae0c5-111">使用属性指定是创建非对称签名密钥还是非对称交换密钥 <xref:System.Security.Cryptography.CspParameters.KeyNumber> 。</span><span class="sxs-lookup"><span data-stu-id="ae0c5-111">Specify whether to create an asymmetric signature key or an asymmetric exchange key using the <xref:System.Security.Cryptography.CspParameters.KeyNumber> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ae0c5-112">下面的代码示例使用类创建一个密钥容器 <xref:System.Security.Cryptography.CspParameters> ，并将该密钥保存到容器中。</span><span class="sxs-lookup"><span data-stu-id="ae0c5-112">The following code example creates a key container using the <xref:System.Security.Cryptography.CspParameters> class and saves the key in the container.</span></span>  
  
 [!code-cpp[capikey#1](~/samples/snippets/cpp/VS_Snippets_CLR/capikey/CPP/capikey.cpp#1)]
 [!code-csharp[capikey#1](~/samples/snippets/csharp/VS_Snippets_CLR/capikey/CS/capikey.cs#1)]
 [!code-vb[capikey#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/capikey/VB/capikey.vb#1)]  
  
 <span data-ttu-id="ae0c5-113">下面的代码示例使用 <xref:System.Security.Cryptography.CspParameters> 类来选择智能卡加密服务提供程序。</span><span class="sxs-lookup"><span data-stu-id="ae0c5-113">The following code example uses the <xref:System.Security.Cryptography.CspParameters> class to select a Smart Card Cryptographic Service Provider.</span></span>  <span data-ttu-id="ae0c5-114">然后，使用智能卡对数据进行签名和验证。</span><span class="sxs-lookup"><span data-stu-id="ae0c5-114">It then signs and verifies data using the smart card.</span></span>  
  
 [!code-cpp[Cryptography.SmartCardCSP#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.SmartCardCSP/CPP/Cryptography.SmartCardCSP.cpp#1)]
 [!code-csharp[Cryptography.SmartCardCSP#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.SmartCardCSP/CS/example.cs#1)]
 [!code-vb[Cryptography.SmartCardCSP#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.SmartCardCSP/VB/example.vb#1)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="/dotnet/standard/security/cryptographic-services"><span data-ttu-id="ae0c5-115">加密服务</span><span class="sxs-lookup"><span data-stu-id="ae0c5-115">Cryptographic Services</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ae0c5-116">初始化 <see cref="T:System.Security.Cryptography.CspParameters" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="ae0c5-116">Initializes a new instance of the <see cref="T:System.Security.Cryptography.CspParameters" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CspParameters ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.CspParameters.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CspParameters();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ae0c5-117">初始化 <see cref="T:System.Security.Cryptography.CspParameters" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="ae0c5-117">Initializes a new instance of the <see cref="T:System.Security.Cryptography.CspParameters" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ae0c5-118">这种形式的将 <xref:System.Security.Cryptography.CspParameters.%23ctor%2A> <xref:System.Security.Cryptography.CspParameters.ProviderType> 字段初始化为的值 `24` ，该值指定 PROV_RSA_AES 提供程序。</span><span class="sxs-lookup"><span data-stu-id="ae0c5-118">This form of <xref:System.Security.Cryptography.CspParameters.%23ctor%2A> initializes the <xref:System.Security.Cryptography.CspParameters.ProviderType> field to a value of `24`, which specifies the PROV_RSA_AES provider.</span></span>  <span data-ttu-id="ae0c5-119">此默认提供程序与算法兼容 <xref:System.Security.Cryptography.Aes> 。</span><span class="sxs-lookup"><span data-stu-id="ae0c5-119">This default provider is compatible with the <xref:System.Security.Cryptography.Aes> algorithm.</span></span>  
  
 <span data-ttu-id="ae0c5-120">有关其他提供程序类型的信息，请参见 <xref:System.Security.Cryptography.CspParameters.ProviderType> 字段。</span><span class="sxs-lookup"><span data-stu-id="ae0c5-120">For information about other provider types, see the <xref:System.Security.Cryptography.CspParameters.ProviderType> field.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ae0c5-121">下面的代码示例使用类创建一个密钥容器 <xref:System.Security.Cryptography.CspParameters> ，并将该密钥保存到容器中。</span><span class="sxs-lookup"><span data-stu-id="ae0c5-121">The following code example creates a key container using the <xref:System.Security.Cryptography.CspParameters> class and saves the key in the container.</span></span>  
  
 [!code-cpp[capikey#1](~/samples/snippets/cpp/VS_Snippets_CLR/capikey/CPP/capikey.cpp#1)]
 [!code-csharp[capikey#1](~/samples/snippets/csharp/VS_Snippets_CLR/capikey/CS/capikey.cs#1)]
 [!code-vb[capikey#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/capikey/VB/capikey.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/standard/security/cryptographic-services"><span data-ttu-id="ae0c5-122">加密服务</span><span class="sxs-lookup"><span data-stu-id="ae0c5-122">Cryptographic Services</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CspParameters (int dwTypeIn);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 dwTypeIn) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.CspParameters.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (dwTypeIn As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CspParameters(int dwTypeIn);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.CspParameters : int -&gt; System.Security.Cryptography.CspParameters" Usage="new System.Security.Cryptography.CspParameters dwTypeIn" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="dwTypeIn" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="dwTypeIn"><span data-ttu-id="ae0c5-123">指定要创建的提供程序类型的提供程序类型代码。</span><span class="sxs-lookup"><span data-stu-id="ae0c5-123">A provider type code that specifies the kind of provider to create.</span></span></param>
        <summary><span data-ttu-id="ae0c5-124">使用指定的提供程序类型代码初始化 <see cref="T:System.Security.Cryptography.CspParameters" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="ae0c5-124">Initializes a new instance of the <see cref="T:System.Security.Cryptography.CspParameters" /> class with the specified provider type code.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ae0c5-125">使用 <xref:System.Security.Cryptography.CspParameters.%23ctor%2A> 构造函数通过传递表示提供程序的数值来指定提供程序类型。</span><span class="sxs-lookup"><span data-stu-id="ae0c5-125">Use the <xref:System.Security.Cryptography.CspParameters.%23ctor%2A> constructor to specify a provider type by passing a numeric value that represents that provider.</span></span>  <span data-ttu-id="ae0c5-126">Wincrypt.h 头文件中定义了表示默认提供程序类型的数值：</span><span class="sxs-lookup"><span data-stu-id="ae0c5-126">The numeric values that represent the default provider types are defined in the WinCrypt.h header file:</span></span>  
  
-   <span data-ttu-id="ae0c5-127">若要指定与算法兼容的提供程序 <xref:System.Security.Cryptography.RSA> ，请将值传递 `1` 给 `dwTypeIn` 参数。</span><span class="sxs-lookup"><span data-stu-id="ae0c5-127">To specify a provider compatible with the <xref:System.Security.Cryptography.RSA> algorithm, pass a value of `1` to the `dwTypeIn` parameter.</span></span>  
  
-   <span data-ttu-id="ae0c5-128">若要指定与算法兼容的提供程序 <xref:System.Security.Cryptography.DSA> ，请将值传递 `13` 给 `dwTypeIn` 参数。</span><span class="sxs-lookup"><span data-stu-id="ae0c5-128">To specify a provider compatible with the <xref:System.Security.Cryptography.DSA> algorithm, pass a value of `13` to the `dwTypeIn` parameter.</span></span>  
  
 <span data-ttu-id="ae0c5-129">有关其他提供程序类型值的信息，请参见 <xref:System.Security.Cryptography.CspParameters.ProviderType> 字段。</span><span class="sxs-lookup"><span data-stu-id="ae0c5-129">For information about other provider type values, see the <xref:System.Security.Cryptography.CspParameters.ProviderType> field.</span></span>  <span data-ttu-id="ae0c5-130">有关默认提供程序类型及其行为的详细信息，请参阅 MSDN library 中的 Microsoft 加密 API (CAPI) 文档。</span><span class="sxs-lookup"><span data-stu-id="ae0c5-130">For more information about the default provider types and their behaviors, see the Microsoft Cryptography API (CAPI) documentation in the MSDN library.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ae0c5-131">下面的代码示例使用类创建一个密钥容器 <xref:System.Security.Cryptography.CspParameters> ，并将该密钥保存到容器中。</span><span class="sxs-lookup"><span data-stu-id="ae0c5-131">The following code example creates a key container using the <xref:System.Security.Cryptography.CspParameters> class and saves the key in the container.</span></span>  
  
 [!code-cpp[capikey#1](~/samples/snippets/cpp/VS_Snippets_CLR/capikey/CPP/capikey.cpp#1)]
 [!code-csharp[capikey#1](~/samples/snippets/csharp/VS_Snippets_CLR/capikey/CS/capikey.cs#1)]
 [!code-vb[capikey#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/capikey/VB/capikey.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/standard/security/cryptographic-services"><span data-ttu-id="ae0c5-132">加密服务</span><span class="sxs-lookup"><span data-stu-id="ae0c5-132">Cryptographic Services</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CspParameters (int dwTypeIn, string strProviderNameIn);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 dwTypeIn, string strProviderNameIn) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.CspParameters.#ctor(System.Int32,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (dwTypeIn As Integer, strProviderNameIn As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CspParameters(int dwTypeIn, System::String ^ strProviderNameIn);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.CspParameters : int * string -&gt; System.Security.Cryptography.CspParameters" Usage="new System.Security.Cryptography.CspParameters (dwTypeIn, strProviderNameIn)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="dwTypeIn" Type="System.Int32" />
        <Parameter Name="strProviderNameIn" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="dwTypeIn"><span data-ttu-id="ae0c5-133">指定要创建的提供程序类型的提供程序类型代码。</span><span class="sxs-lookup"><span data-stu-id="ae0c5-133">A provider type code that specifies the kind of provider to create.</span></span></param>
        <param name="strProviderNameIn"><span data-ttu-id="ae0c5-134">提供程序名称。</span><span class="sxs-lookup"><span data-stu-id="ae0c5-134">A provider name.</span></span></param>
        <summary><span data-ttu-id="ae0c5-135">使用指定的提供程序类型代码和名称初始化 <see cref="T:System.Security.Cryptography.CspParameters" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="ae0c5-135">Initializes a new instance of the <see cref="T:System.Security.Cryptography.CspParameters" /> class with the specified provider type code and name.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ae0c5-136">使用 <xref:System.Security.Cryptography.CspParameters.%23ctor%2A> 构造函数指定提供程序类型和名称。</span><span class="sxs-lookup"><span data-stu-id="ae0c5-136">Use the <xref:System.Security.Cryptography.CspParameters.%23ctor%2A> constructor to specify a provider type and name.</span></span>  
  
 <span data-ttu-id="ae0c5-137">通过传递表示所需提供程序类型的数字值来指定提供程序类型。</span><span class="sxs-lookup"><span data-stu-id="ae0c5-137">Specify a provider type by passing a numeric value that represents the desired provider type.</span></span>  <span data-ttu-id="ae0c5-138">Wincrypt.h 头文件中定义了表示默认提供程序类型的数值：</span><span class="sxs-lookup"><span data-stu-id="ae0c5-138">The numeric values that represent the default provider types are defined in the WinCrypt.h header file:</span></span>  
  
-   <span data-ttu-id="ae0c5-139">若要指定与算法兼容的提供程序 <xref:System.Security.Cryptography.RSA> ，请将值传递 `1` 给 `dwTypeIn` 参数。</span><span class="sxs-lookup"><span data-stu-id="ae0c5-139">To specify a provider compatible with the <xref:System.Security.Cryptography.RSA> algorithm, pass a value of `1` to the `dwTypeIn` parameter.</span></span>  
  
-   <span data-ttu-id="ae0c5-140">若要指定与算法兼容的提供程序 <xref:System.Security.Cryptography.DSA> ，请将值传递 `13` 给 `dwTypeIn` 参数。</span><span class="sxs-lookup"><span data-stu-id="ae0c5-140">To specify a provider compatible with the <xref:System.Security.Cryptography.DSA> algorithm, pass a value of `13` to the `dwTypeIn` parameter.</span></span>  
  
 <span data-ttu-id="ae0c5-141">有关其他提供程序类型值的信息，请参见 <xref:System.Security.Cryptography.CspParameters.ProviderType> 字段。</span><span class="sxs-lookup"><span data-stu-id="ae0c5-141">For information about other provider type values, see the <xref:System.Security.Cryptography.CspParameters.ProviderType> field.</span></span>  <span data-ttu-id="ae0c5-142">有关默认提供程序类型及其行为的详细信息，请参阅 MSDN library 中的 Microsoft 加密 API (CAPI) 文档。</span><span class="sxs-lookup"><span data-stu-id="ae0c5-142">For more information about the default provider types and their behaviors, see the Microsoft Cryptography API (CAPI) documentation in the MSDN library.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ae0c5-143">下面的代码示例使用 <xref:System.Security.Cryptography.CspParameters> 类来选择智能卡加密服务提供程序。</span><span class="sxs-lookup"><span data-stu-id="ae0c5-143">The following code example uses the <xref:System.Security.Cryptography.CspParameters> class to select a Smart Card Cryptographic Service Provider.</span></span>  <span data-ttu-id="ae0c5-144">然后，使用智能卡对数据进行签名和验证。</span><span class="sxs-lookup"><span data-stu-id="ae0c5-144">It then signs and verifies data using the smart card.</span></span>  
  
 [!code-cpp[Cryptography.SmartCardCSP#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.SmartCardCSP/CPP/Cryptography.SmartCardCSP.cpp#1)]
 [!code-csharp[Cryptography.SmartCardCSP#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.SmartCardCSP/CS/example.cs#1)]
 [!code-vb[Cryptography.SmartCardCSP#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.SmartCardCSP/VB/example.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/standard/security/cryptographic-services"><span data-ttu-id="ae0c5-145">加密服务</span><span class="sxs-lookup"><span data-stu-id="ae0c5-145">Cryptographic Services</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CspParameters (int dwTypeIn, string strProviderNameIn, string strContainerNameIn);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 dwTypeIn, string strProviderNameIn, string strContainerNameIn) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.CspParameters.#ctor(System.Int32,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (dwTypeIn As Integer, strProviderNameIn As String, strContainerNameIn As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CspParameters(int dwTypeIn, System::String ^ strProviderNameIn, System::String ^ strContainerNameIn);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.CspParameters : int * string * string -&gt; System.Security.Cryptography.CspParameters" Usage="new System.Security.Cryptography.CspParameters (dwTypeIn, strProviderNameIn, strContainerNameIn)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="dwTypeIn" Type="System.Int32" />
        <Parameter Name="strProviderNameIn" Type="System.String" />
        <Parameter Name="strContainerNameIn" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="dwTypeIn"><span data-ttu-id="ae0c5-146">指定要创建的提供程序类型的提供程序类型代码。</span><span class="sxs-lookup"><span data-stu-id="ae0c5-146">The provider type code that specifies the kind of provider to create.</span></span></param>
        <param name="strProviderNameIn"><span data-ttu-id="ae0c5-147">提供程序名称。</span><span class="sxs-lookup"><span data-stu-id="ae0c5-147">A provider name.</span></span></param>
        <param name="strContainerNameIn"><span data-ttu-id="ae0c5-148">容器名称。</span><span class="sxs-lookup"><span data-stu-id="ae0c5-148">A container name.</span></span></param>
        <summary><span data-ttu-id="ae0c5-149">使用指定的提供程序类型代码和名称以及指定的容器名称初始化 <see cref="T:System.Security.Cryptography.CspParameters" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="ae0c5-149">Initializes a new instance of the <see cref="T:System.Security.Cryptography.CspParameters" /> class with the specified provider type code and name, and the specified container name.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ae0c5-150">使用 <xref:System.Security.Cryptography.CspParameters.%23ctor%2A> 构造函数指定提供程序类型、提供程序名称和容器名称。</span><span class="sxs-lookup"><span data-stu-id="ae0c5-150">Use the <xref:System.Security.Cryptography.CspParameters.%23ctor%2A> constructor to specify a provider type, a provider name, and a container name.</span></span>  
  
 <span data-ttu-id="ae0c5-151">可以使用容器名称检索该容器中的密钥。</span><span class="sxs-lookup"><span data-stu-id="ae0c5-151">You can use the container name to retrieve a key within that container.</span></span>  
  
 <span data-ttu-id="ae0c5-152">通过传递表示所需提供程序类型的数字值来指定提供程序类型。</span><span class="sxs-lookup"><span data-stu-id="ae0c5-152">Specify a provider type by passing a numeric value that represents the desired provider type.</span></span>  <span data-ttu-id="ae0c5-153">Wincrypt.h 头文件中定义了表示默认提供程序类型的数值：</span><span class="sxs-lookup"><span data-stu-id="ae0c5-153">The numeric values that represent the default provider types are defined in the WinCrypt.h header file:</span></span>  
  
-   <span data-ttu-id="ae0c5-154">若要指定与算法兼容的提供程序 <xref:System.Security.Cryptography.RSA> ，请将值传递 `1` 给 `dwTypeIn` 参数。</span><span class="sxs-lookup"><span data-stu-id="ae0c5-154">To specify a provider compatible with the <xref:System.Security.Cryptography.RSA> algorithm, pass a value of `1` to the `dwTypeIn` parameter.</span></span>  
  
-   <span data-ttu-id="ae0c5-155">若要指定与算法兼容的提供程序 <xref:System.Security.Cryptography.DSA> ，请将值传递 `13` 给 `dwTypeIn` 参数。</span><span class="sxs-lookup"><span data-stu-id="ae0c5-155">To specify a provider compatible with the <xref:System.Security.Cryptography.DSA> algorithm, pass a value of `13` to the `dwTypeIn` parameter.</span></span>  
  
 <span data-ttu-id="ae0c5-156">有关其他提供程序类型值的信息，请参见 <xref:System.Security.Cryptography.CspParameters.ProviderType> 字段。</span><span class="sxs-lookup"><span data-stu-id="ae0c5-156">For information about other provider type values, see the <xref:System.Security.Cryptography.CspParameters.ProviderType> field.</span></span>  <span data-ttu-id="ae0c5-157">有关默认提供程序类型及其行为的详细信息，请参阅 MSDN library 中的 Microsoft 加密 API (CAPI) 文档。</span><span class="sxs-lookup"><span data-stu-id="ae0c5-157">For more information about the default provider types and their behaviors, see the Microsoft Cryptography API (CAPI) documentation in the MSDN library.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/standard/security/cryptographic-services"><span data-ttu-id="ae0c5-158">加密服务</span><span class="sxs-lookup"><span data-stu-id="ae0c5-158">Cryptographic Services</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CspParameters (int providerType, string providerName, string keyContainerName, System.Security.AccessControl.CryptoKeySecurity cryptoKeySecurity, IntPtr parentWindowHandle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 providerType, string providerName, string keyContainerName, class System.Security.AccessControl.CryptoKeySecurity cryptoKeySecurity, native int parentWindowHandle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.CspParameters.#ctor(System.Int32,System.String,System.String,System.Security.AccessControl.CryptoKeySecurity,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (providerType As Integer, providerName As String, keyContainerName As String, cryptoKeySecurity As CryptoKeySecurity, parentWindowHandle As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CspParameters(int providerType, System::String ^ providerName, System::String ^ keyContainerName, System::Security::AccessControl::CryptoKeySecurity ^ cryptoKeySecurity, IntPtr parentWindowHandle);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.CspParameters : int * string * string * System.Security.AccessControl.CryptoKeySecurity * nativeint -&gt; System.Security.Cryptography.CspParameters" Usage="new System.Security.Cryptography.CspParameters (providerType, providerName, keyContainerName, cryptoKeySecurity, parentWindowHandle)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="providerType" Type="System.Int32" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="providerName" Type="System.String" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="keyContainerName" Type="System.String" Index="2" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="cryptoKeySecurity" Type="System.Security.AccessControl.CryptoKeySecurity" Index="3" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="parentWindowHandle" Type="System.IntPtr" Index="4" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="providerType"><span data-ttu-id="ae0c5-159">指定要创建的提供程序类型的提供程序类型代码。</span><span class="sxs-lookup"><span data-stu-id="ae0c5-159">The provider type code that specifies the kind of provider to create.</span></span></param>
        <param name="providerName"><span data-ttu-id="ae0c5-160">提供程序名称。</span><span class="sxs-lookup"><span data-stu-id="ae0c5-160">A provider name.</span></span></param>
        <param name="keyContainerName"><span data-ttu-id="ae0c5-161">容器名称。</span><span class="sxs-lookup"><span data-stu-id="ae0c5-161">A container name.</span></span></param>
        <param name="cryptoKeySecurity"><span data-ttu-id="ae0c5-162">表示容器的访问权限及审核规则的对象。</span><span class="sxs-lookup"><span data-stu-id="ae0c5-162">An object that represents access rights and audit rules for the container.</span></span></param>
        <param name="parentWindowHandle"><span data-ttu-id="ae0c5-163">智能卡密码对话框的父级窗口的句柄。</span><span class="sxs-lookup"><span data-stu-id="ae0c5-163">A handle to the parent window for a smart card password dialog.</span></span></param>
        <summary><span data-ttu-id="ae0c5-164">使用提供程序类型、提供程序名称、容器名称、访问信息以及非托管智能卡密码对话框的句柄初始化 <see cref="T:System.Security.Cryptography.CspParameters" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="ae0c5-164">Initializes a new instance of the <see cref="T:System.Security.Cryptography.CspParameters" /> class using a provider type, a provider name, a container name, access information, and a handle to an unmanaged smart card password dialog.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ae0c5-165">可以使用容器名称检索该容器中的密钥。</span><span class="sxs-lookup"><span data-stu-id="ae0c5-165">You can use the container name to retrieve a key within that container.</span></span>  
  
 <span data-ttu-id="ae0c5-166">通过传递表示所需提供程序类型的数字值来指定提供程序类型。</span><span class="sxs-lookup"><span data-stu-id="ae0c5-166">Specify a provider type by passing a numeric value that represents the desired provider type.</span></span>  <span data-ttu-id="ae0c5-167">Wincrypt.h 头文件中定义了表示默认提供程序类型的数值：</span><span class="sxs-lookup"><span data-stu-id="ae0c5-167">The numeric values that represent the default provider types are defined in the WinCrypt.h header file:</span></span>  
  
-   <span data-ttu-id="ae0c5-168">若要指定与算法兼容的提供程序 <xref:System.Security.Cryptography.RSA> ，请将值传递 `1` 给 `dwTypeIn` 参数。</span><span class="sxs-lookup"><span data-stu-id="ae0c5-168">To specify a provider compatible with the <xref:System.Security.Cryptography.RSA> algorithm, pass a value of `1` to the `dwTypeIn` parameter.</span></span>  
  
-   <span data-ttu-id="ae0c5-169">若要指定与算法兼容的提供程序 <xref:System.Security.Cryptography.DSA> ，请将值传递 `13` 给 `dwTypeIn` 参数。</span><span class="sxs-lookup"><span data-stu-id="ae0c5-169">To specify a provider compatible with the <xref:System.Security.Cryptography.DSA> algorithm, pass a value of `13` to the `dwTypeIn` parameter.</span></span>  
  
 <span data-ttu-id="ae0c5-170">有关其他提供程序类型值的信息，请参见 <xref:System.Security.Cryptography.CspParameters.ProviderType> 字段。</span><span class="sxs-lookup"><span data-stu-id="ae0c5-170">For information about other provider type values, see the <xref:System.Security.Cryptography.CspParameters.ProviderType> field.</span></span>  <span data-ttu-id="ae0c5-171">有关默认提供程序类型及其行为的详细信息，请参阅 MSDN library 中的 Microsoft 加密 API (CAPI) 文档。</span><span class="sxs-lookup"><span data-stu-id="ae0c5-171">For more information about the default provider types and their behaviors, see the Microsoft Cryptography API (CAPI) documentation in the MSDN library.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CspParameters (int providerType, string providerName, string keyContainerName, System.Security.AccessControl.CryptoKeySecurity cryptoKeySecurity, System.Security.SecureString keyPassword);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 providerType, string providerName, string keyContainerName, class System.Security.AccessControl.CryptoKeySecurity cryptoKeySecurity, class System.Security.SecureString keyPassword) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.CspParameters.#ctor(System.Int32,System.String,System.String,System.Security.AccessControl.CryptoKeySecurity,System.Security.SecureString)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (providerType As Integer, providerName As String, keyContainerName As String, cryptoKeySecurity As CryptoKeySecurity, keyPassword As SecureString)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CspParameters(int providerType, System::String ^ providerName, System::String ^ keyContainerName, System::Security::AccessControl::CryptoKeySecurity ^ cryptoKeySecurity, System::Security::SecureString ^ keyPassword);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.CspParameters : int * string * string * System.Security.AccessControl.CryptoKeySecurity * System.Security.SecureString -&gt; System.Security.Cryptography.CspParameters" Usage="new System.Security.Cryptography.CspParameters (providerType, providerName, keyContainerName, cryptoKeySecurity, keyPassword)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="providerType" Type="System.Int32" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="providerName" Type="System.String" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="keyContainerName" Type="System.String" Index="2" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="cryptoKeySecurity" Type="System.Security.AccessControl.CryptoKeySecurity" Index="3" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="keyPassword" Type="System.Security.SecureString" Index="4" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="providerType"><span data-ttu-id="ae0c5-172">指定要创建的提供程序类型的提供程序类型代码。</span><span class="sxs-lookup"><span data-stu-id="ae0c5-172">The provider type code that specifies the kind of provider to create.</span></span></param>
        <param name="providerName"><span data-ttu-id="ae0c5-173">提供程序名称。</span><span class="sxs-lookup"><span data-stu-id="ae0c5-173">A provider name.</span></span></param>
        <param name="keyContainerName"><span data-ttu-id="ae0c5-174">容器名称。</span><span class="sxs-lookup"><span data-stu-id="ae0c5-174">A container name.</span></span></param>
        <param name="cryptoKeySecurity"><span data-ttu-id="ae0c5-175">表示容器的访问权限及审核规则的对象。</span><span class="sxs-lookup"><span data-stu-id="ae0c5-175">An object that represents access rights and audit rules for a container.</span></span></param>
        <param name="keyPassword"><span data-ttu-id="ae0c5-176">与智能卡密钥相关的密码。</span><span class="sxs-lookup"><span data-stu-id="ae0c5-176">A password associated with a smart card key.</span></span></param>
        <summary><span data-ttu-id="ae0c5-177">使用提供程序类型、提供程序名称、容器名称、访问信息以及与智能卡密钥相关的密码初始化 <see cref="T:System.Security.Cryptography.CspParameters" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="ae0c5-177">Initializes a new instance of the <see cref="T:System.Security.Cryptography.CspParameters" /> class using a provider type, a provider name, a container name, access information, and a password associated with a smart card key.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ae0c5-178">可以使用容器名称检索该容器中的密钥。</span><span class="sxs-lookup"><span data-stu-id="ae0c5-178">You can use the container name to retrieve a key within that container.</span></span>  
  
 <span data-ttu-id="ae0c5-179">通过传递表示所需提供程序类型的数字值来指定提供程序类型。</span><span class="sxs-lookup"><span data-stu-id="ae0c5-179">Specify a provider type by passing a numeric value that represents the desired provider type.</span></span>  <span data-ttu-id="ae0c5-180">Wincrypt.h 头文件中定义了表示默认提供程序类型的数值：</span><span class="sxs-lookup"><span data-stu-id="ae0c5-180">The numeric values that represent the default provider types are defined in the WinCrypt.h header file:</span></span>  
  
-   <span data-ttu-id="ae0c5-181">若要指定与算法兼容的提供程序 <xref:System.Security.Cryptography.RSA> ，请将值传递 `1` 给 `dwTypeIn` 参数。</span><span class="sxs-lookup"><span data-stu-id="ae0c5-181">To specify a provider compatible with the <xref:System.Security.Cryptography.RSA> algorithm, pass a value of `1` to the `dwTypeIn` parameter.</span></span>  
  
-   <span data-ttu-id="ae0c5-182">若要指定与算法兼容的提供程序 <xref:System.Security.Cryptography.DSA> ，请将值传递 `13` 给 `dwTypeIn` 参数。</span><span class="sxs-lookup"><span data-stu-id="ae0c5-182">To specify a provider compatible with the <xref:System.Security.Cryptography.DSA> algorithm, pass a value of `13` to the `dwTypeIn` parameter.</span></span>  
  
 <span data-ttu-id="ae0c5-183">有关其他提供程序类型值的信息，请参见 <xref:System.Security.Cryptography.CspParameters.ProviderType> 字段。</span><span class="sxs-lookup"><span data-stu-id="ae0c5-183">For information about other provider type values, see the <xref:System.Security.Cryptography.CspParameters.ProviderType> field.</span></span>  <span data-ttu-id="ae0c5-184">有关默认提供程序类型及其行为的详细信息，请参阅 MSDN library 中的 Microsoft 加密 API (CAPI) 文档。</span><span class="sxs-lookup"><span data-stu-id="ae0c5-184">For more information about the default provider types and their behaviors, see the Microsoft Cryptography API (CAPI) documentation in the MSDN library.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CryptoKeySecurity">
      <MemberSignature Language="C#" Value="public System.Security.AccessControl.CryptoKeySecurity CryptoKeySecurity { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.AccessControl.CryptoKeySecurity CryptoKeySecurity" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.CspParameters.CryptoKeySecurity" />
      <MemberSignature Language="VB.NET" Value="Public Property CryptoKeySecurity As CryptoKeySecurity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::AccessControl::CryptoKeySecurity ^ CryptoKeySecurity { System::Security::AccessControl::CryptoKeySecurity ^ get(); void set(System::Security::AccessControl::CryptoKeySecurity ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CryptoKeySecurity : System.Security.AccessControl.CryptoKeySecurity with get, set" Usage="System.Security.Cryptography.CspParameters.CryptoKeySecurity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.AccessControl.CryptoKeySecurity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ae0c5-185">获取或设置表示容器访问权限及审核规则的 <see cref="T:System.Security.AccessControl.CryptoKeySecurity" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="ae0c5-185">Gets or sets a <see cref="T:System.Security.AccessControl.CryptoKeySecurity" /> object that represents access rights and audit rules for a container.</span></span></summary>
        <value><span data-ttu-id="ae0c5-186">表示容器访问权限及审核规则的 <see cref="T:System.Security.AccessControl.CryptoKeySecurity" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="ae0c5-186">A <see cref="T:System.Security.AccessControl.CryptoKeySecurity" /> object that represents access rights and audit rules for a container.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ae0c5-187">使用 <xref:System.Security.Cryptography.CspParameters.CryptoKeySecurity%2A> 属性指定一个 <xref:System.Security.AccessControl.CryptoKeySecurity> 对象，该对象管理 (dacl) 和系统访问控制列表 (sacl) 为容器创建随机访问控制列表。</span><span class="sxs-lookup"><span data-stu-id="ae0c5-187">Use the <xref:System.Security.Cryptography.CspParameters.CryptoKeySecurity%2A> property to specify a <xref:System.Security.AccessControl.CryptoKeySecurity> object that manages the creation of discretionary access control lists (DACLS) and system access control lists (SACLS) for a container.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Flags">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.CspProviderFlags Flags { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.Cryptography.CspProviderFlags Flags" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.CspParameters.Flags" />
      <MemberSignature Language="VB.NET" Value="Public Property Flags As CspProviderFlags" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::CspProviderFlags Flags { System::Security::Cryptography::CspProviderFlags get(); void set(System::Security::Cryptography::CspProviderFlags value); };" />
      <MemberSignature Language="F#" Value="member this.Flags : System.Security.Cryptography.CspProviderFlags with get, set" Usage="System.Security.Cryptography.CspParameters.Flags" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.CspProviderFlags</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ae0c5-188">表示修改加密服务提供程序 (CSP) 的行为的 <see cref="T:System.Security.Cryptography.CspParameters" /> 的标志。</span><span class="sxs-lookup"><span data-stu-id="ae0c5-188">Represents the flags for <see cref="T:System.Security.Cryptography.CspParameters" /> that modify the behavior of the cryptographic service provider (CSP).</span></span></summary>
        <value><span data-ttu-id="ae0c5-189">枚举值或枚举值的按位组合。</span><span class="sxs-lookup"><span data-stu-id="ae0c5-189">An enumeration value, or a bitwise combination of enumeration values.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ae0c5-190">值不是有效的枚举值。</span><span class="sxs-lookup"><span data-stu-id="ae0c5-190">Value is not a valid enumeration value.</span></span></exception>
        <related type="Article" href="/dotnet/standard/security/cryptographic-services"><span data-ttu-id="ae0c5-191">加密服务</span><span class="sxs-lookup"><span data-stu-id="ae0c5-191">Cryptographic Services</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="KeyContainerName">
      <MemberSignature Language="C#" Value="public string KeyContainerName;" />
      <MemberSignature Language="ILAsm" Value=".field public string KeyContainerName" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.CspParameters.KeyContainerName" />
      <MemberSignature Language="VB.NET" Value="Public KeyContainerName As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ KeyContainerName;" />
      <MemberSignature Language="F#" Value="val mutable KeyContainerName : string" Usage="System.Security.Cryptography.CspParameters.KeyContainerName" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ae0c5-192">表示 <see cref="T:System.Security.Cryptography.CspParameters" /> 的密钥容器名称。</span><span class="sxs-lookup"><span data-stu-id="ae0c5-192">Represents the key container name for <see cref="T:System.Security.Cryptography.CspParameters" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ae0c5-193">使用 <xref:System.Security.Cryptography.CspParameters.KeyContainerName> 字段指定密钥容器的名称。</span><span class="sxs-lookup"><span data-stu-id="ae0c5-193">Use the <xref:System.Security.Cryptography.CspParameters.KeyContainerName> field to specify a name for your key container.</span></span>  <span data-ttu-id="ae0c5-194">可以使用容器名称检索该容器中的持久性密钥。</span><span class="sxs-lookup"><span data-stu-id="ae0c5-194">You can use the container name to retrieve the persisted key within that container.</span></span>  
  
 <span data-ttu-id="ae0c5-195">有关创建密钥容器的详细信息，请参阅 [如何：将非对称密钥存储在密钥容器中](/dotnet/standard/security/how-to-store-asymmetric-keys-in-a-key-container)。</span><span class="sxs-lookup"><span data-stu-id="ae0c5-195">For more information about creating key containers, see [How to: Store Asymmetric Keys in a Key Container](/dotnet/standard/security/how-to-store-asymmetric-keys-in-a-key-container).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ae0c5-196">下面的代码示例使用类创建一个密钥容器 <xref:System.Security.Cryptography.CspParameters> ，并将该密钥保存到容器中。</span><span class="sxs-lookup"><span data-stu-id="ae0c5-196">The following code example creates a key container using the <xref:System.Security.Cryptography.CspParameters> class and saves the key in the container.</span></span>  
  
 [!code-cpp[capikey#1](~/samples/snippets/cpp/VS_Snippets_CLR/capikey/CPP/capikey.cpp#1)]
 [!code-csharp[capikey#1](~/samples/snippets/csharp/VS_Snippets_CLR/capikey/CS/capikey.cs#1)]
 [!code-vb[capikey#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/capikey/VB/capikey.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/standard/security/cryptographic-services"><span data-ttu-id="ae0c5-197">加密服务</span><span class="sxs-lookup"><span data-stu-id="ae0c5-197">Cryptographic Services</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="KeyNumber">
      <MemberSignature Language="C#" Value="public int KeyNumber;" />
      <MemberSignature Language="ILAsm" Value=".field public int32 KeyNumber" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.CspParameters.KeyNumber" />
      <MemberSignature Language="VB.NET" Value="Public KeyNumber As Integer " />
      <MemberSignature Language="C++ CLI" Value="public: int KeyNumber;" />
      <MemberSignature Language="F#" Value="val mutable KeyNumber : int" Usage="System.Security.Cryptography.CspParameters.KeyNumber" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ae0c5-198">指定非对称密钥被创建为签名密钥还是交换密钥。</span><span class="sxs-lookup"><span data-stu-id="ae0c5-198">Specifies whether an asymmetric key is created as a signature key or an exchange key.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ae0c5-199"><xref:System.Security.Cryptography.CspParameters.KeyNumber> <xref:System.Security.Cryptography.CspKeyContainerInfo.KeyNumber%2A> 当使用对象初始化对象时，字段将初始化属性 <xref:System.Security.Cryptography.CspKeyContainerInfo> <xref:System.Security.Cryptography.CspParameters> 。</span><span class="sxs-lookup"><span data-stu-id="ae0c5-199">The <xref:System.Security.Cryptography.CspParameters.KeyNumber> field initializes the <xref:System.Security.Cryptography.CspKeyContainerInfo.KeyNumber%2A> property when you initialize a <xref:System.Security.Cryptography.CspKeyContainerInfo> object with a <xref:System.Security.Cryptography.CspParameters> object.</span></span>  
  
 <span data-ttu-id="ae0c5-200">交换密钥是一个非对称密钥对，用于加密会话密钥，以便可以安全地存储和与其他用户交换会话密钥。</span><span class="sxs-lookup"><span data-stu-id="ae0c5-200">An exchange key is an asymmetric key pair used to encrypt session keys so that they can be safely stored and exchanged with other users.</span></span>  <span data-ttu-id="ae0c5-201">你可以使用 <xref:System.Security.Cryptography.KeyNumber.Exchange> () 值 `1` 来指定交换密钥。</span><span class="sxs-lookup"><span data-stu-id="ae0c5-201">You can use the <xref:System.Security.Cryptography.KeyNumber.Exchange> value (`1`) to specify an exchange key.</span></span>  <span data-ttu-id="ae0c5-202">此值对应于 `AT_KEYEXCHANGE` 非托管的 Microsoft 加密 API (CAPI) 中使用的值。</span><span class="sxs-lookup"><span data-stu-id="ae0c5-202">This value corresponds to the `AT_KEYEXCHANGE` value used in the unmanaged Microsoft Cryptographic API (CAPI).</span></span>  
  
 <span data-ttu-id="ae0c5-203">签名密钥是一个非对称密钥对，用于对数字签名的消息或文件进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="ae0c5-203">A signature key is an asymmetric key pair used for authenticating digitally signed messages or files.</span></span>  <span data-ttu-id="ae0c5-204">您可以使用 <xref:System.Security.Cryptography.KeyNumber.Signature> () 值 `2` 来指定签名密钥。</span><span class="sxs-lookup"><span data-stu-id="ae0c5-204">You can use the <xref:System.Security.Cryptography.KeyNumber.Signature> value (`2`) to specify a signature key.</span></span>  <span data-ttu-id="ae0c5-205">此值对应于 `AT_SIGNATURE` CAPI 中使用的值。</span><span class="sxs-lookup"><span data-stu-id="ae0c5-205">This value corresponds to the `AT_SIGNATURE` value used in CAPI.</span></span>  
  
 <span data-ttu-id="ae0c5-206">默认情况下，该 <xref:System.Security.Cryptography.CspParameters.KeyNumber> 字段指定一个交换密钥。</span><span class="sxs-lookup"><span data-stu-id="ae0c5-206">By default, the <xref:System.Security.Cryptography.CspParameters.KeyNumber> field specifies an exchange key.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ae0c5-207">下面的代码示例演示如何使用 <xref:System.Security.Cryptography.KeyNumber> 枚举为对象指定密钥类型 <xref:System.Security.Cryptography.RSACryptoServiceProvider> 。</span><span class="sxs-lookup"><span data-stu-id="ae0c5-207">The following code example demonstrates how to use the <xref:System.Security.Cryptography.KeyNumber> enumeration to specify a key type for an <xref:System.Security.Cryptography.RSACryptoServiceProvider> object.</span></span>  
  
 [!code-cpp[Cryptography.KeyNumber#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.KeyNumber/cpp/sample.cpp#1)]
 [!code-csharp[Cryptography.KeyNumber#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.KeyNumber/CS/sample.cs#1)]
 [!code-vb[Cryptography.KeyNumber#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.KeyNumber/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/standard/security/cryptographic-services"><span data-ttu-id="ae0c5-208">加密服务</span><span class="sxs-lookup"><span data-stu-id="ae0c5-208">Cryptographic Services</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="KeyPassword">
      <MemberSignature Language="C#" Value="public System.Security.SecureString KeyPassword { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.SecureString KeyPassword" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.CspParameters.KeyPassword" />
      <MemberSignature Language="VB.NET" Value="Public Property KeyPassword As SecureString" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::SecureString ^ KeyPassword { System::Security::SecureString ^ get(); void set(System::Security::SecureString ^ value); };" />
      <MemberSignature Language="F#" Value="member this.KeyPassword : System.Security.SecureString with get, set" Usage="System.Security.Cryptography.CspParameters.KeyPassword" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-2.1">
          <AttributeName Language="C#">[System.CLSCompliant(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.CLSCompliant(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.SecureString</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ae0c5-209">获取或设置与智能卡密钥相关的密码。</span><span class="sxs-lookup"><span data-stu-id="ae0c5-209">Gets or sets a password associated with a smart card key.</span></span></summary>
        <value><span data-ttu-id="ae0c5-210">与智能卡密钥相关的密码。</span><span class="sxs-lookup"><span data-stu-id="ae0c5-210">A password associated with a smart card key.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ae0c5-211">使用 <xref:System.Security.Cryptography.CspParameters.KeyPassword%2A> 属性提供智能卡密钥的密码。</span><span class="sxs-lookup"><span data-stu-id="ae0c5-211">Use the <xref:System.Security.Cryptography.CspParameters.KeyPassword%2A> property to supply a password for a smart card key.</span></span>  <span data-ttu-id="ae0c5-212">使用此属性指定密码时，不会向用户显示密码对话框。</span><span class="sxs-lookup"><span data-stu-id="ae0c5-212">When you specify a password using this property, a password dialog box will not be presented to the user.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ParentWindowHandle">
      <MemberSignature Language="C#" Value="public IntPtr ParentWindowHandle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ParentWindowHandle" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.CspParameters.ParentWindowHandle" />
      <MemberSignature Language="VB.NET" Value="Public Property ParentWindowHandle As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property IntPtr ParentWindowHandle { IntPtr get(); void set(IntPtr value); };" />
      <MemberSignature Language="F#" Value="member this.ParentWindowHandle : nativeint with get, set" Usage="System.Security.Cryptography.CspParameters.ParentWindowHandle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ae0c5-213">获取或设置智能卡密码对话框的非托管父级窗口的句柄。</span><span class="sxs-lookup"><span data-stu-id="ae0c5-213">Gets or sets a handle to the unmanaged parent window for a smart card password dialog box.</span></span></summary>
        <value><span data-ttu-id="ae0c5-214">智能卡密码对话框的父级窗口的句柄。</span><span class="sxs-lookup"><span data-stu-id="ae0c5-214">A handle to the parent window for a smart card password dialog box.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ae0c5-215">使用 <xref:System.Security.Cryptography.CspParameters.ParentWindowHandle%2A> 属性指定智能卡密码对话框的非托管父窗口的句柄。</span><span class="sxs-lookup"><span data-stu-id="ae0c5-215">Use the <xref:System.Security.Cryptography.CspParameters.ParentWindowHandle%2A> property to specify a handle to the unmanaged parent window for a smart card password dialog box.</span></span>  <span data-ttu-id="ae0c5-216">指定使用此属性的句柄时，将向用户显示一个智能卡密码对话框。</span><span class="sxs-lookup"><span data-stu-id="ae0c5-216">When you specify a handle using this property, a smart card password dialog box will be presented to the user.</span></span>  
  
 <span data-ttu-id="ae0c5-217">可以通过使用属性显式指定密码来避免显示智能卡密码对话框 <xref:System.Security.Cryptography.CspParameters.KeyPassword%2A> 。</span><span class="sxs-lookup"><span data-stu-id="ae0c5-217">You can avoid presenting a smart card password dialog box by explicitly specifying a password by using the <xref:System.Security.Cryptography.CspParameters.KeyPassword%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProviderName">
      <MemberSignature Language="C#" Value="public string ProviderName;" />
      <MemberSignature Language="ILAsm" Value=".field public string ProviderName" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.CspParameters.ProviderName" />
      <MemberSignature Language="VB.NET" Value="Public ProviderName As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ ProviderName;" />
      <MemberSignature Language="F#" Value="val mutable ProviderName : string" Usage="System.Security.Cryptography.CspParameters.ProviderName" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ae0c5-218">表示 <see cref="T:System.Security.Cryptography.CspParameters" /> 的提供程序名称。</span><span class="sxs-lookup"><span data-stu-id="ae0c5-218">Represents the provider name for <see cref="T:System.Security.Cryptography.CspParameters" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ae0c5-219">有关提供程序名称的详细信息，请参阅 MSDN library 中的 Microsoft 加密 API (CAPI) 文档。</span><span class="sxs-lookup"><span data-stu-id="ae0c5-219">See the Microsoft Cryptography API (CAPI) documentation in the MSDN library for details on provider names.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/standard/security/cryptographic-services"><span data-ttu-id="ae0c5-220">加密服务</span><span class="sxs-lookup"><span data-stu-id="ae0c5-220">Cryptographic Services</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ProviderType">
      <MemberSignature Language="C#" Value="public int ProviderType;" />
      <MemberSignature Language="ILAsm" Value=".field public int32 ProviderType" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.CspParameters.ProviderType" />
      <MemberSignature Language="VB.NET" Value="Public ProviderType As Integer " />
      <MemberSignature Language="C++ CLI" Value="public: int ProviderType;" />
      <MemberSignature Language="F#" Value="val mutable ProviderType : int" Usage="System.Security.Cryptography.CspParameters.ProviderType" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ae0c5-221">表示 <see cref="T:System.Security.Cryptography.CspParameters" /> 的提供程序类型代码。</span><span class="sxs-lookup"><span data-stu-id="ae0c5-221">Represents the provider type code for <see cref="T:System.Security.Cryptography.CspParameters" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ae0c5-222">使用 <xref:System.Security.Cryptography.CspParameters.ProviderType> 字段通过传递表示提供程序的数值来指定提供程序类型。</span><span class="sxs-lookup"><span data-stu-id="ae0c5-222">Use the <xref:System.Security.Cryptography.CspParameters.ProviderType> field to specify a provider type by passing a numeric value that represents that provider.</span></span>  <span data-ttu-id="ae0c5-223">Wincrypt.h 头文件中定义了表示默认提供程序类型的数值：</span><span class="sxs-lookup"><span data-stu-id="ae0c5-223">The numeric values that represent the default provider types are defined in the WinCrypt.h header file:</span></span>  
  
-   <span data-ttu-id="ae0c5-224">若要指定与类兼容的提供程序 <xref:System.Security.Cryptography.RSA> ，请传递值 `1` 。</span><span class="sxs-lookup"><span data-stu-id="ae0c5-224">To specify a provider compatible with the <xref:System.Security.Cryptography.RSA> class, pass a value of `1`.</span></span>  
  
-   <span data-ttu-id="ae0c5-225">若要指定与类兼容的提供程序 <xref:System.Security.Cryptography.DSA> ，请传递值 `13` 。</span><span class="sxs-lookup"><span data-stu-id="ae0c5-225">To specify a provider compatible with the <xref:System.Security.Cryptography.DSA> class, pass a value of `13`.</span></span>  
  
 <span data-ttu-id="ae0c5-226">下表列出了在 Wincrypt.h 头文件中定义的提供程序类型及其相应的数值。</span><span class="sxs-lookup"><span data-stu-id="ae0c5-226">The following table lists the provider types and their corresponding numeric values defined in the WinCrypt.h header file.</span></span>  
  
|<span data-ttu-id="ae0c5-227">提供程序类型</span><span class="sxs-lookup"><span data-stu-id="ae0c5-227">Provider Type</span></span>|<span data-ttu-id="ae0c5-228">数值</span><span class="sxs-lookup"><span data-stu-id="ae0c5-228">Numeric Value</span></span>|  
|-------------------|-------------------|  
|`PROV_RSA_FULL`|<span data-ttu-id="ae0c5-229">1</span><span class="sxs-lookup"><span data-stu-id="ae0c5-229">1</span></span>|  
|`PROV_RSA_SIG`|<span data-ttu-id="ae0c5-230">2</span><span class="sxs-lookup"><span data-stu-id="ae0c5-230">2</span></span>|  
|`PROV_DSS`|<span data-ttu-id="ae0c5-231">3</span><span class="sxs-lookup"><span data-stu-id="ae0c5-231">3</span></span>|  
|`PROV_FORTEZZA`|<span data-ttu-id="ae0c5-232">4</span><span class="sxs-lookup"><span data-stu-id="ae0c5-232">4</span></span>|  
|`PROV_MS_EXCHANGE`|<span data-ttu-id="ae0c5-233">5</span><span class="sxs-lookup"><span data-stu-id="ae0c5-233">5</span></span>|  
|`PROV_SSL`|<span data-ttu-id="ae0c5-234">6</span><span class="sxs-lookup"><span data-stu-id="ae0c5-234">6</span></span>|  
|`PROV_RSA_SCHANNEL`|<span data-ttu-id="ae0c5-235">12</span><span class="sxs-lookup"><span data-stu-id="ae0c5-235">12</span></span>|  
|`PROV_DSS_DH`|<span data-ttu-id="ae0c5-236">13</span><span class="sxs-lookup"><span data-stu-id="ae0c5-236">13</span></span>|  
|`PROV_EC_ECDSA_SIG`|<span data-ttu-id="ae0c5-237">14</span><span class="sxs-lookup"><span data-stu-id="ae0c5-237">14</span></span>|  
|`PROV_EC_ECNRA_SIG`|<span data-ttu-id="ae0c5-238">15</span><span class="sxs-lookup"><span data-stu-id="ae0c5-238">15</span></span>|  
|`PROV_EC_ECDSA_FULL`|<span data-ttu-id="ae0c5-239">16</span><span class="sxs-lookup"><span data-stu-id="ae0c5-239">16</span></span>|  
|`PROV_EC_ECNRA_FULL`|<span data-ttu-id="ae0c5-240">17</span><span class="sxs-lookup"><span data-stu-id="ae0c5-240">17</span></span>|  
|`PROV_DH_SCHANNEL`|<span data-ttu-id="ae0c5-241">18</span><span class="sxs-lookup"><span data-stu-id="ae0c5-241">18</span></span>|  
|`PROV_SPYRUS_LYNKS`|<span data-ttu-id="ae0c5-242">20</span><span class="sxs-lookup"><span data-stu-id="ae0c5-242">20</span></span>|  
|`PROV_RNG`|<span data-ttu-id="ae0c5-243">21</span><span class="sxs-lookup"><span data-stu-id="ae0c5-243">21</span></span>|  
|`PROV_INTEL_SEC`|<span data-ttu-id="ae0c5-244">22</span><span class="sxs-lookup"><span data-stu-id="ae0c5-244">22</span></span>|  
|`PROV_REPLACE_OWF`|<span data-ttu-id="ae0c5-245">23</span><span class="sxs-lookup"><span data-stu-id="ae0c5-245">23</span></span>|  
|`PROV_RSA_AES`|<span data-ttu-id="ae0c5-246">24</span><span class="sxs-lookup"><span data-stu-id="ae0c5-246">24</span></span>|  
  
 <span data-ttu-id="ae0c5-247">有关默认提供程序类型及其行为的详细信息，请参阅 MSDN library 中的 Microsoft 加密 API (CAPI) 文档。</span><span class="sxs-lookup"><span data-stu-id="ae0c5-247">For more information about the default provider types and their behaviors, see the Microsoft Cryptography API (CAPI) documentation in the MSDN library.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/standard/security/cryptographic-services"><span data-ttu-id="ae0c5-248">加密服务</span><span class="sxs-lookup"><span data-stu-id="ae0c5-248">Cryptographic Services</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>
