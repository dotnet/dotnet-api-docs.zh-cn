<Type Name="HKDF" FullName="System.Security.Cryptography.HKDF">
  <Metadata><Meta Name="ms.openlocfilehash" Value="3c6d6f0f2476daa06d1036946cc26240f8c3d261" /><Meta Name="ms.sourcegitcommit" Value="53b005dec6dcff97c7bac97cf446d9ae6bda93f0" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/24/2020" /><Meta Name="ms.locfileid" Value="91207562" /></Metadata><TypeSignature Language="C#" Value="public static class HKDF" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit HKDF extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.HKDF" />
  <TypeSignature Language="VB.NET" Value="Public Class HKDF" />
  <TypeSignature Language="C++ CLI" Value="public ref class HKDF abstract sealed" />
  <TypeSignature Language="F#" Value="type HKDF = class" />
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.Versioning.UnsupportedOSPlatform("browser")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.Versioning.UnsupportedOSPlatform("browser")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>RFC5869 基于 HMAC 的提取和扩展密钥派生 (HKDF)</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[

## Remarks

在输入密钥材料已是一个统一的随机位字符串的情况下，HKDF 标准允许跳过提取阶段并将主密钥直接用作伪随机密钥。
有关详细信息，请参阅 <a href="https://tools.ietf.org/html/rfc5869">RFC5869</a> 。

          ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="DeriveKey">
      <MemberSignature Language="C#" Value="public static byte[] DeriveKey (System.Security.Cryptography.HashAlgorithmName hashAlgorithmName, byte[] ikm, int outputLength, byte[]? salt = default, byte[]? info = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] DeriveKey(valuetype System.Security.Cryptography.HashAlgorithmName hashAlgorithmName, unsigned int8[] ikm, int32 outputLength, unsigned int8[] salt, unsigned int8[] info) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.HKDF.DeriveKey(System.Security.Cryptography.HashAlgorithmName,System.Byte[],System.Int32,System.Byte[],System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DeriveKey (hashAlgorithmName As HashAlgorithmName, ikm As Byte(), outputLength As Integer, Optional salt As Byte() = Nothing, Optional info As Byte() = Nothing) As Byte()" />
      <MemberSignature Language="F#" Value="static member DeriveKey : System.Security.Cryptography.HashAlgorithmName * byte[] * int * byte[] * byte[] -&gt; byte[]" Usage="System.Security.Cryptography.HKDF.DeriveKey (hashAlgorithmName, ikm, outputLength, salt, info)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hashAlgorithmName" Type="System.Security.Cryptography.HashAlgorithmName" />
        <Parameter Name="ikm" Type="System.Byte[]" />
        <Parameter Name="outputLength" Type="System.Int32" />
        <Parameter Name="salt" Type="System.Byte[]" />
        <Parameter Name="info" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="hashAlgorithmName">用于 HMAC 操作的哈希算法。</param>
        <param name="ikm">输入密钥内容。</param>
        <param name="outputLength">输出密钥内容的长度。</param>
        <param name="salt">可选的盐值（非机密随机值）。 如果没有提供，则默认为与指定的哈希算法输出长度相同的字节数组。</param>
        <param name="info">可选的上下文和应用程序具体信息。</param>
        <summary>执行密钥派生 HKDF 展开和提取功能。</summary>
        <returns>输出密钥内容。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeriveKey">
      <MemberSignature Language="C#" Value="public static void DeriveKey (System.Security.Cryptography.HashAlgorithmName hashAlgorithmName, ReadOnlySpan&lt;byte&gt; ikm, Span&lt;byte&gt; output, ReadOnlySpan&lt;byte&gt; salt, ReadOnlySpan&lt;byte&gt; info);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DeriveKey(valuetype System.Security.Cryptography.HashAlgorithmName hashAlgorithmName, valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; ikm, valuetype System.Span`1&lt;unsigned int8&gt; output, valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; salt, valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; info) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.HKDF.DeriveKey(System.Security.Cryptography.HashAlgorithmName,System.ReadOnlySpan{System.Byte},System.Span{System.Byte},System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub DeriveKey (hashAlgorithmName As HashAlgorithmName, ikm As ReadOnlySpan(Of Byte), output As Span(Of Byte), salt As ReadOnlySpan(Of Byte), info As ReadOnlySpan(Of Byte))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DeriveKey(System::Security::Cryptography::HashAlgorithmName hashAlgorithmName, ReadOnlySpan&lt;System::Byte&gt; ikm, Span&lt;System::Byte&gt; output, ReadOnlySpan&lt;System::Byte&gt; salt, ReadOnlySpan&lt;System::Byte&gt; info);" />
      <MemberSignature Language="F#" Value="static member DeriveKey : System.Security.Cryptography.HashAlgorithmName * ReadOnlySpan&lt;byte&gt; * Span&lt;byte&gt; * ReadOnlySpan&lt;byte&gt; * ReadOnlySpan&lt;byte&gt; -&gt; unit" Usage="System.Security.Cryptography.HKDF.DeriveKey (hashAlgorithmName, ikm, output, salt, info)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hashAlgorithmName" Type="System.Security.Cryptography.HashAlgorithmName" />
        <Parameter Name="ikm" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="output" Type="System.Span&lt;System.Byte&gt;" />
        <Parameter Name="salt" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="info" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="hashAlgorithmName">用于 HMAC 操作的哈希算法。</param>
        <param name="ikm">输入密钥内容。</param>
        <param name="output">表示输出密钥内容的输出缓冲区。</param>
        <param name="salt">盐值（非机密随机值）。</param>
        <param name="info">上下文和应用程序具体信息（可以为空跨度）。</param>
        <summary>执行密钥派生 HKDF 展开和提取功能。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Expand">
      <MemberSignature Language="C#" Value="public static byte[] Expand (System.Security.Cryptography.HashAlgorithmName hashAlgorithmName, byte[] prk, int outputLength, byte[]? info = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] Expand(valuetype System.Security.Cryptography.HashAlgorithmName hashAlgorithmName, unsigned int8[] prk, int32 outputLength, unsigned int8[] info) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.HKDF.Expand(System.Security.Cryptography.HashAlgorithmName,System.Byte[],System.Int32,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Expand (hashAlgorithmName As HashAlgorithmName, prk As Byte(), outputLength As Integer, Optional info As Byte() = Nothing) As Byte()" />
      <MemberSignature Language="F#" Value="static member Expand : System.Security.Cryptography.HashAlgorithmName * byte[] * int * byte[] -&gt; byte[]" Usage="System.Security.Cryptography.HKDF.Expand (hashAlgorithmName, prk, outputLength, info)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hashAlgorithmName" Type="System.Security.Cryptography.HashAlgorithmName" />
        <Parameter Name="prk" Type="System.Byte[]" />
        <Parameter Name="outputLength" Type="System.Int32" />
        <Parameter Name="info" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="hashAlgorithmName">用于 HMAC 操作的哈希算法。</param>
        <param name="prk">至少与指定哈希算法的输出字节数组（通常为展开步骤的输出）相同的伪随机密钥。</param>
        <param name="outputLength">输出密钥内容的长度。</param>
        <param name="info">可选的上下文和应用程序具体信息。</param>
        <summary>执行 HKDF 扩展功能，请参阅 <a href="https://tools.ietf.org/html/rfc5869#section-2.3">RFC5869</a> 的 2.3 节。</summary>
        <returns>输出密钥内容。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Expand">
      <MemberSignature Language="C#" Value="public static void Expand (System.Security.Cryptography.HashAlgorithmName hashAlgorithmName, ReadOnlySpan&lt;byte&gt; prk, Span&lt;byte&gt; output, ReadOnlySpan&lt;byte&gt; info);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Expand(valuetype System.Security.Cryptography.HashAlgorithmName hashAlgorithmName, valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; prk, valuetype System.Span`1&lt;unsigned int8&gt; output, valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; info) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.HKDF.Expand(System.Security.Cryptography.HashAlgorithmName,System.ReadOnlySpan{System.Byte},System.Span{System.Byte},System.ReadOnlySpan{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Expand (hashAlgorithmName As HashAlgorithmName, prk As ReadOnlySpan(Of Byte), output As Span(Of Byte), info As ReadOnlySpan(Of Byte))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Expand(System::Security::Cryptography::HashAlgorithmName hashAlgorithmName, ReadOnlySpan&lt;System::Byte&gt; prk, Span&lt;System::Byte&gt; output, ReadOnlySpan&lt;System::Byte&gt; info);" />
      <MemberSignature Language="F#" Value="static member Expand : System.Security.Cryptography.HashAlgorithmName * ReadOnlySpan&lt;byte&gt; * Span&lt;byte&gt; * ReadOnlySpan&lt;byte&gt; -&gt; unit" Usage="System.Security.Cryptography.HKDF.Expand (hashAlgorithmName, prk, output, info)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hashAlgorithmName" Type="System.Security.Cryptography.HashAlgorithmName" />
        <Parameter Name="prk" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="output" Type="System.Span&lt;System.Byte&gt;" />
        <Parameter Name="info" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="hashAlgorithmName">用于 HMAC 操作的哈希算法。</param>
        <param name="prk">至少与指定哈希算法的输出字节数组（通常为展开步骤的输出）相同的伪随机密钥。</param>
        <param name="output">用于接收输出密钥内容的目标缓冲区。</param>
        <param name="info">上下文和应用程序具体信息（可以为空跨度）。</param>
        <summary>执行 HKDF 扩展功能。 请参阅 <a href="https://tools.ietf.org/html/rfc5869#section-2.3">RFC5869</a> 的 2.3 节。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Extract">
      <MemberSignature Language="C#" Value="public static byte[] Extract (System.Security.Cryptography.HashAlgorithmName hashAlgorithmName, byte[] ikm, byte[]? salt = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] Extract(valuetype System.Security.Cryptography.HashAlgorithmName hashAlgorithmName, unsigned int8[] ikm, unsigned int8[] salt) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.HKDF.Extract(System.Security.Cryptography.HashAlgorithmName,System.Byte[],System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Extract (hashAlgorithmName As HashAlgorithmName, ikm As Byte(), Optional salt As Byte() = Nothing) As Byte()" />
      <MemberSignature Language="F#" Value="static member Extract : System.Security.Cryptography.HashAlgorithmName * byte[] * byte[] -&gt; byte[]" Usage="System.Security.Cryptography.HKDF.Extract (hashAlgorithmName, ikm, salt)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hashAlgorithmName" Type="System.Security.Cryptography.HashAlgorithmName" />
        <Parameter Name="ikm" Type="System.Byte[]" />
        <Parameter Name="salt" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="hashAlgorithmName">用于 HMAC 操作的哈希算法。</param>
        <param name="ikm">输入密钥内容。</param>
        <param name="salt">可选的盐值（非机密随机值）。 如果没有提供，则默认为与指定的哈希算法输出长度相同的字节数组。</param>
        <summary>执行 HKDF 提取功能。
请参阅 <a href="https://tools.ietf.org/html/rfc5869#section-2.2">RFC5869</a> 的 2.2 节。</summary>
        <returns>伪随机密钥 (prk)。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Extract">
      <MemberSignature Language="C#" Value="public static int Extract (System.Security.Cryptography.HashAlgorithmName hashAlgorithmName, ReadOnlySpan&lt;byte&gt; ikm, ReadOnlySpan&lt;byte&gt; salt, Span&lt;byte&gt; prk);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Extract(valuetype System.Security.Cryptography.HashAlgorithmName hashAlgorithmName, valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; ikm, valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; salt, valuetype System.Span`1&lt;unsigned int8&gt; prk) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.HKDF.Extract(System.Security.Cryptography.HashAlgorithmName,System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte},System.Span{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Extract (hashAlgorithmName As HashAlgorithmName, ikm As ReadOnlySpan(Of Byte), salt As ReadOnlySpan(Of Byte), prk As Span(Of Byte)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Extract(System::Security::Cryptography::HashAlgorithmName hashAlgorithmName, ReadOnlySpan&lt;System::Byte&gt; ikm, ReadOnlySpan&lt;System::Byte&gt; salt, Span&lt;System::Byte&gt; prk);" />
      <MemberSignature Language="F#" Value="static member Extract : System.Security.Cryptography.HashAlgorithmName * ReadOnlySpan&lt;byte&gt; * ReadOnlySpan&lt;byte&gt; * Span&lt;byte&gt; -&gt; int" Usage="System.Security.Cryptography.HKDF.Extract (hashAlgorithmName, ikm, salt, prk)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hashAlgorithmName" Type="System.Security.Cryptography.HashAlgorithmName" />
        <Parameter Name="ikm" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="salt" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="prk" Type="System.Span&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="hashAlgorithmName">用于 HMAC 操作的哈希算法。</param>
        <param name="ikm">输入密钥内容。</param>
        <param name="salt">盐值（非机密随机值）。</param>
        <param name="prk">用于接收伪随机密钥 (prk) 的目标缓冲区。</param>
        <summary>执行 HKDF 提取功能。
请参阅 <a href="https://tools.ietf.org/html/rfc5869#section-2.2">RFC5869</a> 的 2.2 节。</summary>
        <returns>写入 <paramref name="prk" /> 缓冲区的字节数。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
