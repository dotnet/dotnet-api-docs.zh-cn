<Type Name="HKDF" FullName="System.Security.Cryptography.HKDF">
  <Metadata><Meta Name="ms.openlocfilehash" Value="3c6d6f0f2476daa06d1036946cc26240f8c3d261" /><Meta Name="ms.sourcegitcommit" Value="0bd9d099f2522ef14c6f48a8ea5f2c0650df0f6f" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="10/15/2020" /><Meta Name="ms.locfileid" Value="92083630" /></Metadata><TypeSignature Language="C#" Value="public static class HKDF" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit HKDF extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.HKDF" />
  <TypeSignature Language="VB.NET" Value="Public Class HKDF" />
  <TypeSignature Language="C++ CLI" Value="public ref class HKDF abstract sealed" />
  <TypeSignature Language="F#" Value="type HKDF = class" />
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.Versioning.UnsupportedOSPlatform("browser")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.Versioning.UnsupportedOSPlatform("browser")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="51357-101">RFC5869 基于 HMAC 的提取和扩展密钥派生 (HKDF)</span><span class="sxs-lookup"><span data-stu-id="51357-101">RFC5869  HMAC-based Extract-and-Expand Key Derivation (HKDF)</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="51357-102">在输入密钥材料已是一个统一的随机位字符串的情况下，HKDF 标准允许跳过提取阶段并将主密钥直接用作伪随机密钥。</span><span class="sxs-lookup"><span data-stu-id="51357-102">In situations where the input key material is already a uniformly random bit string, the HKDF standard allows the Extract phase to be skipped and the master key to be used directly as the pseudorandom key.</span></span>
<span data-ttu-id="51357-103">有关详细信息，请参阅 <a href="https://tools.ietf.org/html/rfc5869">RFC5869</a> 。</span><span class="sxs-lookup"><span data-stu-id="51357-103">See <a href="https://tools.ietf.org/html/rfc5869">RFC5869</a> for more information.</span></span>

          ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="DeriveKey">
      <MemberSignature Language="C#" Value="public static byte[] DeriveKey (System.Security.Cryptography.HashAlgorithmName hashAlgorithmName, byte[] ikm, int outputLength, byte[]? salt = default, byte[]? info = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] DeriveKey(valuetype System.Security.Cryptography.HashAlgorithmName hashAlgorithmName, unsigned int8[] ikm, int32 outputLength, unsigned int8[] salt, unsigned int8[] info) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.HKDF.DeriveKey(System.Security.Cryptography.HashAlgorithmName,System.Byte[],System.Int32,System.Byte[],System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DeriveKey (hashAlgorithmName As HashAlgorithmName, ikm As Byte(), outputLength As Integer, Optional salt As Byte() = Nothing, Optional info As Byte() = Nothing) As Byte()" />
      <MemberSignature Language="F#" Value="static member DeriveKey : System.Security.Cryptography.HashAlgorithmName * byte[] * int * byte[] * byte[] -&gt; byte[]" Usage="System.Security.Cryptography.HKDF.DeriveKey (hashAlgorithmName, ikm, outputLength, salt, info)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hashAlgorithmName" Type="System.Security.Cryptography.HashAlgorithmName" />
        <Parameter Name="ikm" Type="System.Byte[]" />
        <Parameter Name="outputLength" Type="System.Int32" />
        <Parameter Name="salt" Type="System.Byte[]" />
        <Parameter Name="info" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="hashAlgorithmName"><span data-ttu-id="51357-104">用于 HMAC 操作的哈希算法。</span><span class="sxs-lookup"><span data-stu-id="51357-104">The hash algorithm used for HMAC operations.</span></span></param>
        <param name="ikm"><span data-ttu-id="51357-105">输入密钥内容。</span><span class="sxs-lookup"><span data-stu-id="51357-105">The input keying material.</span></span></param>
        <param name="outputLength"><span data-ttu-id="51357-106">输出密钥内容的长度。</span><span class="sxs-lookup"><span data-stu-id="51357-106">The length of the output keying material.</span></span></param>
        <param name="salt"><span data-ttu-id="51357-107">可选的盐值（非机密随机值）。</span><span class="sxs-lookup"><span data-stu-id="51357-107">The optional salt value (a non-secret random value).</span></span> <span data-ttu-id="51357-108">如果没有提供，则默认为与指定的哈希算法输出长度相同的字节数组。</span><span class="sxs-lookup"><span data-stu-id="51357-108">If not provided, it defaults to a byte array of the same length as the output of the specified hash algorithm.</span></span></param>
        <param name="info"><span data-ttu-id="51357-109">可选的上下文和应用程序具体信息。</span><span class="sxs-lookup"><span data-stu-id="51357-109">The optional context and application specific information.</span></span></param>
        <summary><span data-ttu-id="51357-110">执行密钥派生 HKDF 展开和提取功能。</span><span class="sxs-lookup"><span data-stu-id="51357-110">Performs the key derivation HKDF Expand and Extract functions.</span></span></summary>
        <returns><span data-ttu-id="51357-111">输出密钥内容。</span><span class="sxs-lookup"><span data-stu-id="51357-111">The output keying material.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeriveKey">
      <MemberSignature Language="C#" Value="public static void DeriveKey (System.Security.Cryptography.HashAlgorithmName hashAlgorithmName, ReadOnlySpan&lt;byte&gt; ikm, Span&lt;byte&gt; output, ReadOnlySpan&lt;byte&gt; salt, ReadOnlySpan&lt;byte&gt; info);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DeriveKey(valuetype System.Security.Cryptography.HashAlgorithmName hashAlgorithmName, valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; ikm, valuetype System.Span`1&lt;unsigned int8&gt; output, valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; salt, valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; info) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.HKDF.DeriveKey(System.Security.Cryptography.HashAlgorithmName,System.ReadOnlySpan{System.Byte},System.Span{System.Byte},System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub DeriveKey (hashAlgorithmName As HashAlgorithmName, ikm As ReadOnlySpan(Of Byte), output As Span(Of Byte), salt As ReadOnlySpan(Of Byte), info As ReadOnlySpan(Of Byte))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DeriveKey(System::Security::Cryptography::HashAlgorithmName hashAlgorithmName, ReadOnlySpan&lt;System::Byte&gt; ikm, Span&lt;System::Byte&gt; output, ReadOnlySpan&lt;System::Byte&gt; salt, ReadOnlySpan&lt;System::Byte&gt; info);" />
      <MemberSignature Language="F#" Value="static member DeriveKey : System.Security.Cryptography.HashAlgorithmName * ReadOnlySpan&lt;byte&gt; * Span&lt;byte&gt; * ReadOnlySpan&lt;byte&gt; * ReadOnlySpan&lt;byte&gt; -&gt; unit" Usage="System.Security.Cryptography.HKDF.DeriveKey (hashAlgorithmName, ikm, output, salt, info)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hashAlgorithmName" Type="System.Security.Cryptography.HashAlgorithmName" />
        <Parameter Name="ikm" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="output" Type="System.Span&lt;System.Byte&gt;" />
        <Parameter Name="salt" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="info" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="hashAlgorithmName"><span data-ttu-id="51357-112">用于 HMAC 操作的哈希算法。</span><span class="sxs-lookup"><span data-stu-id="51357-112">The hash algorithm used for HMAC operations.</span></span></param>
        <param name="ikm"><span data-ttu-id="51357-113">输入密钥内容。</span><span class="sxs-lookup"><span data-stu-id="51357-113">The input keying material.</span></span></param>
        <param name="output"><span data-ttu-id="51357-114">表示输出密钥内容的输出缓冲区。</span><span class="sxs-lookup"><span data-stu-id="51357-114">The output buffer that represents output keying material.</span></span></param>
        <param name="salt"><span data-ttu-id="51357-115">盐值（非机密随机值）。</span><span class="sxs-lookup"><span data-stu-id="51357-115">The salt value (a non-secret random value).</span></span></param>
        <param name="info"><span data-ttu-id="51357-116">上下文和应用程序具体信息（可以为空跨度）。</span><span class="sxs-lookup"><span data-stu-id="51357-116">The context and application specific information (can be an empty span).</span></span></param>
        <summary><span data-ttu-id="51357-117">执行密钥派生 HKDF 展开和提取功能。</span><span class="sxs-lookup"><span data-stu-id="51357-117">Performs the key derivation HKDF Expand and Extract functions.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Expand">
      <MemberSignature Language="C#" Value="public static byte[] Expand (System.Security.Cryptography.HashAlgorithmName hashAlgorithmName, byte[] prk, int outputLength, byte[]? info = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] Expand(valuetype System.Security.Cryptography.HashAlgorithmName hashAlgorithmName, unsigned int8[] prk, int32 outputLength, unsigned int8[] info) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.HKDF.Expand(System.Security.Cryptography.HashAlgorithmName,System.Byte[],System.Int32,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Expand (hashAlgorithmName As HashAlgorithmName, prk As Byte(), outputLength As Integer, Optional info As Byte() = Nothing) As Byte()" />
      <MemberSignature Language="F#" Value="static member Expand : System.Security.Cryptography.HashAlgorithmName * byte[] * int * byte[] -&gt; byte[]" Usage="System.Security.Cryptography.HKDF.Expand (hashAlgorithmName, prk, outputLength, info)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hashAlgorithmName" Type="System.Security.Cryptography.HashAlgorithmName" />
        <Parameter Name="prk" Type="System.Byte[]" />
        <Parameter Name="outputLength" Type="System.Int32" />
        <Parameter Name="info" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="hashAlgorithmName"><span data-ttu-id="51357-118">用于 HMAC 操作的哈希算法。</span><span class="sxs-lookup"><span data-stu-id="51357-118">The hash algorithm used for HMAC operations.</span></span></param>
        <param name="prk"><span data-ttu-id="51357-119">至少与指定哈希算法的输出字节数组（通常为展开步骤的输出）相同的伪随机密钥。</span><span class="sxs-lookup"><span data-stu-id="51357-119">The pseudorandom key that is at least as long as the output byte array of the specified hash algorithm (usually the output from Expand step).</span></span></param>
        <param name="outputLength"><span data-ttu-id="51357-120">输出密钥内容的长度。</span><span class="sxs-lookup"><span data-stu-id="51357-120">The length of the output keying material.</span></span></param>
        <param name="info"><span data-ttu-id="51357-121">可选的上下文和应用程序具体信息。</span><span class="sxs-lookup"><span data-stu-id="51357-121">The optional context and application specific information.</span></span></param>
        <summary><span data-ttu-id="51357-122">执行 HKDF 扩展功能，请参阅 <a href="https://tools.ietf.org/html/rfc5869#section-2.3">RFC5869</a> 的 2.3 节。</span><span class="sxs-lookup"><span data-stu-id="51357-122">Performs the HKDF-Expand function See section 2.3 of <a href="https://tools.ietf.org/html/rfc5869#section-2.3">RFC5869</a>.</span></span></summary>
        <returns><span data-ttu-id="51357-123">输出密钥内容。</span><span class="sxs-lookup"><span data-stu-id="51357-123">The output keying material.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Expand">
      <MemberSignature Language="C#" Value="public static void Expand (System.Security.Cryptography.HashAlgorithmName hashAlgorithmName, ReadOnlySpan&lt;byte&gt; prk, Span&lt;byte&gt; output, ReadOnlySpan&lt;byte&gt; info);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Expand(valuetype System.Security.Cryptography.HashAlgorithmName hashAlgorithmName, valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; prk, valuetype System.Span`1&lt;unsigned int8&gt; output, valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; info) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.HKDF.Expand(System.Security.Cryptography.HashAlgorithmName,System.ReadOnlySpan{System.Byte},System.Span{System.Byte},System.ReadOnlySpan{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Expand (hashAlgorithmName As HashAlgorithmName, prk As ReadOnlySpan(Of Byte), output As Span(Of Byte), info As ReadOnlySpan(Of Byte))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Expand(System::Security::Cryptography::HashAlgorithmName hashAlgorithmName, ReadOnlySpan&lt;System::Byte&gt; prk, Span&lt;System::Byte&gt; output, ReadOnlySpan&lt;System::Byte&gt; info);" />
      <MemberSignature Language="F#" Value="static member Expand : System.Security.Cryptography.HashAlgorithmName * ReadOnlySpan&lt;byte&gt; * Span&lt;byte&gt; * ReadOnlySpan&lt;byte&gt; -&gt; unit" Usage="System.Security.Cryptography.HKDF.Expand (hashAlgorithmName, prk, output, info)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hashAlgorithmName" Type="System.Security.Cryptography.HashAlgorithmName" />
        <Parameter Name="prk" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="output" Type="System.Span&lt;System.Byte&gt;" />
        <Parameter Name="info" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="hashAlgorithmName"><span data-ttu-id="51357-124">用于 HMAC 操作的哈希算法。</span><span class="sxs-lookup"><span data-stu-id="51357-124">The hash algorithm used for HMAC operations.</span></span></param>
        <param name="prk"><span data-ttu-id="51357-125">至少与指定哈希算法的输出字节数组（通常为展开步骤的输出）相同的伪随机密钥。</span><span class="sxs-lookup"><span data-stu-id="51357-125">The pseudorandom key that is at least as long as as the output byte array of the specified hash algorithm (usually the output from Expand step).</span></span></param>
        <param name="output"><span data-ttu-id="51357-126">用于接收输出密钥内容的目标缓冲区。</span><span class="sxs-lookup"><span data-stu-id="51357-126">The destination buffer to receive the output keying material.</span></span></param>
        <param name="info"><span data-ttu-id="51357-127">上下文和应用程序具体信息（可以为空跨度）。</span><span class="sxs-lookup"><span data-stu-id="51357-127">The context and application specific information (can be an empty span).</span></span></param>
        <summary><span data-ttu-id="51357-128">执行 HKDF 扩展功能。</span><span class="sxs-lookup"><span data-stu-id="51357-128">Performs the HKDF-Expand function.</span></span> <span data-ttu-id="51357-129">请参阅 <a href="https://tools.ietf.org/html/rfc5869#section-2.3">RFC5869</a> 的 2.3 节。</span><span class="sxs-lookup"><span data-stu-id="51357-129">See section 2.3 of <a href="https://tools.ietf.org/html/rfc5869#section-2.3">RFC5869</a>.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Extract">
      <MemberSignature Language="C#" Value="public static byte[] Extract (System.Security.Cryptography.HashAlgorithmName hashAlgorithmName, byte[] ikm, byte[]? salt = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] Extract(valuetype System.Security.Cryptography.HashAlgorithmName hashAlgorithmName, unsigned int8[] ikm, unsigned int8[] salt) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.HKDF.Extract(System.Security.Cryptography.HashAlgorithmName,System.Byte[],System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Extract (hashAlgorithmName As HashAlgorithmName, ikm As Byte(), Optional salt As Byte() = Nothing) As Byte()" />
      <MemberSignature Language="F#" Value="static member Extract : System.Security.Cryptography.HashAlgorithmName * byte[] * byte[] -&gt; byte[]" Usage="System.Security.Cryptography.HKDF.Extract (hashAlgorithmName, ikm, salt)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hashAlgorithmName" Type="System.Security.Cryptography.HashAlgorithmName" />
        <Parameter Name="ikm" Type="System.Byte[]" />
        <Parameter Name="salt" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="hashAlgorithmName"><span data-ttu-id="51357-130">用于 HMAC 操作的哈希算法。</span><span class="sxs-lookup"><span data-stu-id="51357-130">The hash algorithm used for HMAC operations.</span></span></param>
        <param name="ikm"><span data-ttu-id="51357-131">输入密钥内容。</span><span class="sxs-lookup"><span data-stu-id="51357-131">The input keying material.</span></span></param>
        <param name="salt"><span data-ttu-id="51357-132">可选的盐值（非机密随机值）。</span><span class="sxs-lookup"><span data-stu-id="51357-132">The optional salt value (a non-secret random value).</span></span> <span data-ttu-id="51357-133">如果没有提供，则默认为与指定的哈希算法输出长度相同的字节数组。</span><span class="sxs-lookup"><span data-stu-id="51357-133">If not provided it defaults to a byte array of the same length as the output of the specified hash algorithm.</span></span></param>
        <summary><span data-ttu-id="51357-134">执行 HKDF 提取功能。</span><span class="sxs-lookup"><span data-stu-id="51357-134">Performs the HKDF-Extract function.</span></span>
<span data-ttu-id="51357-135">请参阅 <a href="https://tools.ietf.org/html/rfc5869#section-2.2">RFC5869</a> 的 2.2 节。</span><span class="sxs-lookup"><span data-stu-id="51357-135">See section 2.2 of <a href="https://tools.ietf.org/html/rfc5869#section-2.2">RFC5869</a>.</span></span></summary>
        <returns><span data-ttu-id="51357-136">伪随机密钥 (prk)。</span><span class="sxs-lookup"><span data-stu-id="51357-136">The pseudorandom key (prk).</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Extract">
      <MemberSignature Language="C#" Value="public static int Extract (System.Security.Cryptography.HashAlgorithmName hashAlgorithmName, ReadOnlySpan&lt;byte&gt; ikm, ReadOnlySpan&lt;byte&gt; salt, Span&lt;byte&gt; prk);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Extract(valuetype System.Security.Cryptography.HashAlgorithmName hashAlgorithmName, valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; ikm, valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; salt, valuetype System.Span`1&lt;unsigned int8&gt; prk) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.HKDF.Extract(System.Security.Cryptography.HashAlgorithmName,System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte},System.Span{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Extract (hashAlgorithmName As HashAlgorithmName, ikm As ReadOnlySpan(Of Byte), salt As ReadOnlySpan(Of Byte), prk As Span(Of Byte)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Extract(System::Security::Cryptography::HashAlgorithmName hashAlgorithmName, ReadOnlySpan&lt;System::Byte&gt; ikm, ReadOnlySpan&lt;System::Byte&gt; salt, Span&lt;System::Byte&gt; prk);" />
      <MemberSignature Language="F#" Value="static member Extract : System.Security.Cryptography.HashAlgorithmName * ReadOnlySpan&lt;byte&gt; * ReadOnlySpan&lt;byte&gt; * Span&lt;byte&gt; -&gt; int" Usage="System.Security.Cryptography.HKDF.Extract (hashAlgorithmName, ikm, salt, prk)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hashAlgorithmName" Type="System.Security.Cryptography.HashAlgorithmName" />
        <Parameter Name="ikm" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="salt" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="prk" Type="System.Span&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="hashAlgorithmName"><span data-ttu-id="51357-137">用于 HMAC 操作的哈希算法。</span><span class="sxs-lookup"><span data-stu-id="51357-137">The hash algorithm used for HMAC operations.</span></span></param>
        <param name="ikm"><span data-ttu-id="51357-138">输入密钥内容。</span><span class="sxs-lookup"><span data-stu-id="51357-138">The input keying material.</span></span></param>
        <param name="salt"><span data-ttu-id="51357-139">盐值（非机密随机值）。</span><span class="sxs-lookup"><span data-stu-id="51357-139">The salt value (a non-secret random value).</span></span></param>
        <param name="prk"><span data-ttu-id="51357-140">用于接收伪随机密钥 (prk) 的目标缓冲区。</span><span class="sxs-lookup"><span data-stu-id="51357-140">The destination buffer to receive the pseudorandom key (prk).</span></span></param>
        <summary><span data-ttu-id="51357-141">执行 HKDF 提取功能。</span><span class="sxs-lookup"><span data-stu-id="51357-141">Performs the HKDF-Extract function.</span></span>
<span data-ttu-id="51357-142">请参阅 <a href="https://tools.ietf.org/html/rfc5869#section-2.2">RFC5869</a> 的 2.2 节。</span><span class="sxs-lookup"><span data-stu-id="51357-142">See section 2.2 of <a href="https://tools.ietf.org/html/rfc5869#section-2.2">RFC5869</a>.</span></span></summary>
        <returns><span data-ttu-id="51357-143">写入 <paramref name="prk" /> 缓冲区的字节数。</span><span class="sxs-lookup"><span data-stu-id="51357-143">The number of bytes written to the <paramref name="prk" /> buffer.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
