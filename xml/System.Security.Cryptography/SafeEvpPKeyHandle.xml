<Type Name="SafeEvpPKeyHandle" FullName="System.Security.Cryptography.SafeEvpPKeyHandle">
  <Metadata><Meta Name="ms.openlocfilehash" Value="86ee99fb8085c8dc13b6143ed57d423bb1591e2e" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89983888" /></Metadata><TypeSignature Language="C#" Value="public sealed class SafeEvpPKeyHandle : System.Runtime.InteropServices.SafeHandle" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SafeEvpPKeyHandle extends System.Runtime.InteropServices.SafeHandle" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.SafeEvpPKeyHandle" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SafeEvpPKeyHandle&#xA;Inherits SafeHandle" />
  <TypeSignature Language="C++ CLI" Value="public ref class SafeEvpPKeyHandle sealed : System::Runtime::InteropServices::SafeHandle" />
  <TypeSignature Language="F#" Value="type SafeEvpPKeyHandle = class&#xA;    inherit SafeHandle" />
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.OpenSsl</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.2.0</AssemblyVersion>
    <AssemblyVersion>4.1.3.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Runtime.InteropServices.SafeHandle</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="a6d41-101">表示来自 OpenSSL 的 <see langword="EVP_PKEY*" /> 指针类型。</span><span class="sxs-lookup"><span data-stu-id="a6d41-101">Represents the <see langword="EVP_PKEY*" /> pointer type from OpenSSL.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  

## Remarks

 <span data-ttu-id="a6d41-102">在使用 <xref:System.Security.Cryptography.SafeEvpPKeyHandle> 执行与 OpenSSL 的互操作之前，调用方必须确保调用的 OpenSSL 版本与 .net 运行时所调用的版本相同，而不是并行版本。</span><span class="sxs-lookup"><span data-stu-id="a6d41-102">Before using <xref:System.Security.Cryptography.SafeEvpPKeyHandle> to perform interop with OpenSSL a caller must ensure that the version of OpenSSL they are calling is the same as the version the .NET runtime is calling, and not a side-by-side version.</span></span> <span data-ttu-id="a6d41-103">运行时调用的 OpenSSL 的版本可以由确定 <xref:System.Security.Cryptography.SafeEvpPKeyHandle.OpenSslVersion> 。</span><span class="sxs-lookup"><span data-stu-id="a6d41-103">The version of OpenSSL that the runtime is calling can be determined by <xref:System.Security.Cryptography.SafeEvpPKeyHandle.OpenSslVersion>.</span></span>

 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SafeEvpPKeyHandle (IntPtr handle, bool ownsHandle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(native int handle, bool ownsHandle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.SafeEvpPKeyHandle.#ctor(System.IntPtr,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (handle As IntPtr, ownsHandle As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SafeEvpPKeyHandle(IntPtr handle, bool ownsHandle);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.SafeEvpPKeyHandle : nativeint * bool -&gt; System.Security.Cryptography.SafeEvpPKeyHandle" Usage="new System.Security.Cryptography.SafeEvpPKeyHandle (handle, ownsHandle)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.OpenSsl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
        <Parameter Name="ownsHandle" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="handle"><span data-ttu-id="a6d41-104">要表示的句柄值。</span><span class="sxs-lookup"><span data-stu-id="a6d41-104">The handle value to represent.</span></span></param>
        <param name="ownsHandle"><span data-ttu-id="a6d41-105">在终止阶段使 <see langword="true" /> 可靠地释放句柄，则为 <see cref="T:System.Security.Cryptography.SafeEvpPKeyHandle" />；否则为 <see langword="false" />（不建议使用）。</span><span class="sxs-lookup"><span data-stu-id="a6d41-105"><see langword="true" /> to reliably let <see cref="T:System.Security.Cryptography.SafeEvpPKeyHandle" /> release the handle during the finalization phase; otherwise, <see langword="false" /> (not recommended).</span></span></param>
        <summary><span data-ttu-id="a6d41-106">使用指定句柄值初始化 <see cref="T:System.Security.Cryptography.SafeEvpPKeyHandle" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="a6d41-106">Initializes a new instance of the <see cref="T:System.Security.Cryptography.SafeEvpPKeyHandle" /> class with the specified handle value.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DuplicateHandle">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.SafeEvpPKeyHandle DuplicateHandle ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Security.Cryptography.SafeEvpPKeyHandle DuplicateHandle() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.SafeEvpPKeyHandle.DuplicateHandle" />
      <MemberSignature Language="VB.NET" Value="Public Function DuplicateHandle () As SafeEvpPKeyHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::Cryptography::SafeEvpPKeyHandle ^ DuplicateHandle();" />
      <MemberSignature Language="F#" Value="member this.DuplicateHandle : unit -&gt; System.Security.Cryptography.SafeEvpPKeyHandle" Usage="safeEvpPKeyHandle.DuplicateHandle " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.OpenSsl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.SafeEvpPKeyHandle</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a6d41-107">创建此类型的另一个实例，该实例具有独立生存期，但是跟踪相同资源。</span><span class="sxs-lookup"><span data-stu-id="a6d41-107">Creates another instance of this type which has an independent lifetime but tracks the same resource.</span></span></summary>
        <returns><span data-ttu-id="a6d41-108">此类型的另一个实例，该实例具有独立生存期，但是跟踪相同资源。</span><span class="sxs-lookup"><span data-stu-id="a6d41-108">Another instance of this type which has an independent lifetime but tracks the same resource.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a6d41-109">此句柄无效。</span><span class="sxs-lookup"><span data-stu-id="a6d41-109">This handle is invalid.</span></span></exception>
        <altmember cref="P:System.Security.Cryptography.SafeEvpPKeyHandle.IsInvalid" />
      </Docs>
    </Member>
    <Member MemberName="IsInvalid">
      <MemberSignature Language="C#" Value="public override bool IsInvalid { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsInvalid" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.SafeEvpPKeyHandle.IsInvalid" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsInvalid As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsInvalid { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsInvalid : bool" Usage="System.Security.Cryptography.SafeEvpPKeyHandle.IsInvalid" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.OpenSsl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a6d41-110">获取一个值，该值指示句柄值是否无效。</span><span class="sxs-lookup"><span data-stu-id="a6d41-110">Gets a value indicating whether the handle value is invalid.</span></span></summary>
        <value><span data-ttu-id="a6d41-111">如果句柄值无效，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a6d41-111"><see langword="true" /> if the handle value is invalid; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OpenSslVersion">
      <MemberSignature Language="C#" Value="public static long OpenSslVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property int64 OpenSslVersion" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.SafeEvpPKeyHandle.OpenSslVersion" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property OpenSslVersion As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property long OpenSslVersion { long get(); };" />
      <MemberSignature Language="F#" Value="member this.OpenSslVersion : int64" Usage="System.Security.Cryptography.SafeEvpPKeyHandle.OpenSslVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.OpenSsl</AssemblyName>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a6d41-112">获取一个值，该值表示加载的 OpenSSL 版本报告的版本号。</span><span class="sxs-lookup"><span data-stu-id="a6d41-112">Gets a value representing the version number as reported by the loaded version of OpenSSL.</span></span></summary>
        <value><span data-ttu-id="a6d41-113">一个值，该值表示 OpenSSL 的加载版本报告的版本号。</span><span class="sxs-lookup"><span data-stu-id="a6d41-113">A value representing the version number as reported by the loaded version of OpenSSL.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  

## Remarks

 <span data-ttu-id="a6d41-114">在使用 <xref:System.Security.Cryptography.SafeEvpPKeyHandle> 执行与 OpenSSL 的互操作之前，调用方必须确保调用的 OpenSSL 版本与 .net 运行时所调用的版本相同，而不是并行版本。</span><span class="sxs-lookup"><span data-stu-id="a6d41-114">Before using <xref:System.Security.Cryptography.SafeEvpPKeyHandle> to perform interop with OpenSSL a caller must ensure that the version of OpenSSL they are calling is the same as the version the .NET runtime is calling, and not a side-by-side version.</span></span>

 <span data-ttu-id="a6d41-115">对于 OpenSSL 1.1.0 和更高版本，将从函数中报告该值 `OpenSSL_version_num()` 。</span><span class="sxs-lookup"><span data-stu-id="a6d41-115">For OpenSSL 1.1.0 and newer, this value is reported from the `OpenSSL_version_num()` function.</span></span> <span data-ttu-id="a6d41-116">当使用较旧版本的 OpenSSL 时，将从函数中报告该值 `SSLeay()` 。</span><span class="sxs-lookup"><span data-stu-id="a6d41-116">When an older version of OpenSSL is in use, this value is reported from the `SSLeay()` function.</span></span>

 <span data-ttu-id="a6d41-117">建议调用方只使用此值执行等同性检查。</span><span class="sxs-lookup"><span data-stu-id="a6d41-117">Callers are encouraged to only perform an equality check with this value.</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReleaseHandle">
      <MemberSignature Language="C#" Value="protected override bool ReleaseHandle ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool ReleaseHandle() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.SafeEvpPKeyHandle.ReleaseHandle" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function ReleaseHandle () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool ReleaseHandle();" />
      <MemberSignature Language="F#" Value="override this.ReleaseHandle : unit -&gt; bool" Usage="safeEvpPKeyHandle.ReleaseHandle " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.OpenSsl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a6d41-118">执行释放句柄所需的代码。</span><span class="sxs-lookup"><span data-stu-id="a6d41-118">Executes the code required to free the handle.</span></span></summary>
        <returns><span data-ttu-id="a6d41-119">在所有情况下均为 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="a6d41-119"><see langword="true" /> in all cases.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
