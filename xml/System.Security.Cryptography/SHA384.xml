<Type Name="SHA384" FullName="System.Security.Cryptography.SHA384">
  <Metadata><Meta Name="ms.openlocfilehash" Value="7e1a8a5d037d9f2aae652c51b4a7b90d4798d389" /><Meta Name="ms.sourcegitcommit" Value="9a0316374d19cc78674994106d073aa5ef1bd5f3" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="11/10/2020" /><Meta Name="ms.locfileid" Value="94453897" /></Metadata><TypeSignature Language="C#" Value="public abstract class SHA384 : System.Security.Cryptography.HashAlgorithm" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit SHA384 extends System.Security.Cryptography.HashAlgorithm" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.SHA384" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class SHA384&#xA;Inherits HashAlgorithm" />
  <TypeSignature Language="C++ CLI" Value="public ref class SHA384 abstract : System::Security::Cryptography::HashAlgorithm" />
  <TypeSignature Language="F#" Value="type SHA384 = class&#xA;    inherit HashAlgorithm" />
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.3.0.0</AssemblyVersion>
    <AssemblyVersion>4.3.1.0</AssemblyVersion>
    <AssemblyVersion>4.3.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="mscorlib" FromVersion="4.0.0.0" To="System.Security.Cryptography.Algorithms" ToVersion="0.0.0.0" FrameworkAlternate="net-5.0" />
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.Security.Cryptography.Algorithms" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Security.Cryptography.HashAlgorithm</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName Language="C#">[System.Runtime.InteropServices.ComVisible(true)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.ComVisible(true)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="b0608-101">计算输入数据的 <see cref="T:System.Security.Cryptography.SHA384" /> 哈希值。</span><span class="sxs-lookup"><span data-stu-id="b0608-101">Computes the <see cref="T:System.Security.Cryptography.SHA384" /> hash for the input data.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0608-102">哈希值用作表示大量数据的固定大小的唯一值。</span><span class="sxs-lookup"><span data-stu-id="b0608-102">The hash is used as a unique value of fixed size representing a large amount of data.</span></span> <span data-ttu-id="b0608-103">当且仅当相应的数据也匹配时，两组数据的哈希才会匹配。</span><span class="sxs-lookup"><span data-stu-id="b0608-103">Hashes of two sets of data should match if and only if the corresponding data also matches.</span></span> <span data-ttu-id="b0608-104">对数据的小更改会导致哈希中的大量无法预测的更改。</span><span class="sxs-lookup"><span data-stu-id="b0608-104">Small changes to the data result in large unpredictable changes in the hash.</span></span>  
  
 <span data-ttu-id="b0608-105">算法的哈希大小 <xref:System.Security.Cryptography.SHA384> 为384位。</span><span class="sxs-lookup"><span data-stu-id="b0608-105">The hash size for the <xref:System.Security.Cryptography.SHA384> algorithm is 384 bits.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b0608-106">下面的示例计算的 <xref:System.Security.Cryptography.SHA384> 哈希值 `data` ，并将其存储在中 `result` 。</span><span class="sxs-lookup"><span data-stu-id="b0608-106">The following example computes the <xref:System.Security.Cryptography.SHA384> hash for `data` and stores it in `result`.</span></span> <span data-ttu-id="b0608-107">此示例假设有一个预定义的常量 `DATA_SIZE` 。</span><span class="sxs-lookup"><span data-stu-id="b0608-107">This example assumes that there is a predefined constant `DATA_SIZE`.</span></span>  
  
 [!code-cpp[Classic SHA384 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic SHA384 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic SHA384 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic SHA384 Example/CS/source.cs#1)]
 [!code-vb[Classic SHA384 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic SHA384 Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="/dotnet/standard/security/cryptographic-services"><span data-ttu-id="b0608-108">加密服务</span><span class="sxs-lookup"><span data-stu-id="b0608-108">Cryptographic Services</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SHA384 ();" FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.SHA384.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; SHA384();" FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C#" Value="public SHA384 ();" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SHA384();" FrameworkAlternate="netframework-1.1" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b0608-109">初始化 <see cref="T:System.Security.Cryptography.SHA384" /> 的新实例。</span><span class="sxs-lookup"><span data-stu-id="b0608-109">Initializes a new instance of <see cref="T:System.Security.Cryptography.SHA384" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0608-110">不能创建抽象类的实例。</span><span class="sxs-lookup"><span data-stu-id="b0608-110">You cannot create an instance of an abstract class.</span></span> <span data-ttu-id="b0608-111">应用程序代码创建派生类的新实例。</span><span class="sxs-lookup"><span data-stu-id="b0608-111">Application code create a new instance of a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/standard/security/cryptographic-services"><span data-ttu-id="b0608-112">加密服务</span><span class="sxs-lookup"><span data-stu-id="b0608-112">Cryptographic Services</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Create">
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b0608-113">允许实例化此抽象类的特定实现。</span><span class="sxs-lookup"><span data-stu-id="b0608-113">Allows specific implementations of this abstract class to be instantiated.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.SHA384 Create ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.Cryptography.SHA384 Create() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.SHA384.Create" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create () As SHA384" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Security::Cryptography::SHA384 ^ Create();" />
      <MemberSignature Language="F#" Value="static member Create : unit -&gt; System.Security.Cryptography.SHA384" Usage="System.Security.Cryptography.SHA384.Create " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.SHA384</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b0608-114">创建 <see cref="T:System.Security.Cryptography.SHA384" /> 的默认实现的实例。</span><span class="sxs-lookup"><span data-stu-id="b0608-114">Creates an instance of the default implementation of <see cref="T:System.Security.Cryptography.SHA384" />.</span></span></summary>
        <returns><span data-ttu-id="b0608-115"><see cref="T:System.Security.Cryptography.SHA384" /> 的新实例。</span><span class="sxs-lookup"><span data-stu-id="b0608-115">A new instance of <see cref="T:System.Security.Cryptography.SHA384" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Reflection.TargetInvocationException"><span data-ttu-id="b0608-116">使用算法时启用了美国联邦信息处理标准 (FIPS) 模式，但该算法与 FIPS 不兼容。</span><span class="sxs-lookup"><span data-stu-id="b0608-116">The algorithm was used with Federal Information Processing Standards (FIPS) mode enabled, but is not FIPS compatible.</span></span></exception>
        <related type="Article" href="/dotnet/standard/security/cryptographic-services"><span data-ttu-id="b0608-117">加密服务</span><span class="sxs-lookup"><span data-stu-id="b0608-117">Cryptographic Services</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.SHA384? Create (string hashName);" FrameworkAlternate="net-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.Cryptography.SHA384 Create(string hashName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.SHA384.Create(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (hashName As String) As SHA384" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Security::Cryptography::SHA384 ^ Create(System::String ^ hashName);" />
      <MemberSignature Language="F#" Value="static member Create : string -&gt; System.Security.Cryptography.SHA384" Usage="System.Security.Cryptography.SHA384.Create hashName" />
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.SHA384 Create (string hashName);" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.SHA384</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hashName" Type="System.String" Index="0" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="hashName"><span data-ttu-id="b0608-118">要使用的 <see cref="T:System.Security.Cryptography.SHA384" /> 的特定实现的名称。</span><span class="sxs-lookup"><span data-stu-id="b0608-118">The name of the specific implementation of <see cref="T:System.Security.Cryptography.SHA384" /> to be used.</span></span></param>
        <summary><span data-ttu-id="b0608-119">创建 <see cref="T:System.Security.Cryptography.SHA384" /> 的指定实现的实例。</span><span class="sxs-lookup"><span data-stu-id="b0608-119">Creates an instance of a specified implementation of <see cref="T:System.Security.Cryptography.SHA384" />.</span></span></summary>
        <returns><span data-ttu-id="b0608-120">使用指定实现的 <see cref="T:System.Security.Cryptography.SHA384" /> 的新实例。</span><span class="sxs-lookup"><span data-stu-id="b0608-120">A new instance of <see cref="T:System.Security.Cryptography.SHA384" /> using the specified implementation.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Reflection.TargetInvocationException"><span data-ttu-id="b0608-121">由 <paramref name="hashName" /> 参数描述的算法在使用中已启用联邦信息处理标准 (FIPS) 模式，但与 FIPS 不兼容。</span><span class="sxs-lookup"><span data-stu-id="b0608-121">The algorithm described by the <paramref name="hashName" /> parameter was used with Federal Information Processing Standards (FIPS) mode enabled, but is not FIPS compatible.</span></span></exception>
        <related type="Article" href="/dotnet/standard/security/cryptographic-services"><span data-ttu-id="b0608-122">加密服务</span><span class="sxs-lookup"><span data-stu-id="b0608-122">Cryptographic Services</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="HashData">
      <MemberSignature Language="C#" Value="public static byte[] HashData (byte[] source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] HashData(unsigned int8[] source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.SHA384.HashData(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function HashData (source As Byte()) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ HashData(cli::array &lt;System::Byte&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member HashData : byte[] -&gt; byte[]" Usage="System.Security.Cryptography.SHA384.HashData source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Byte[]" Index="0" FrameworkAlternate="net-5.0" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="b0608-123">要进行哈希处理的数据。</span><span class="sxs-lookup"><span data-stu-id="b0608-123">The data to hash.</span></span></param>
        <summary><span data-ttu-id="b0608-124">使用 SHA384 算法计算数据的哈希值。</span><span class="sxs-lookup"><span data-stu-id="b0608-124">Computes the hash of data using the SHA384 algorithm.</span></span></summary>
        <returns><span data-ttu-id="b0608-125">数据的哈希。</span><span class="sxs-lookup"><span data-stu-id="b0608-125">The hash of the data.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b0608-126"><paramref name="source" /> 上声明的默认值为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="b0608-126"><paramref name="source" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="HashData">
      <MemberSignature Language="C#" Value="public static byte[]? HashData (ReadOnlySpan&lt;byte&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] HashData(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.SHA384.HashData(System.ReadOnlySpan{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function HashData (source As ReadOnlySpan(Of Byte)) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ HashData(ReadOnlySpan&lt;System::Byte&gt; source);" />
      <MemberSignature Language="F#" Value="static member HashData : ReadOnlySpan&lt;byte&gt; -&gt; byte[]" Usage="System.Security.Cryptography.SHA384.HashData source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ReadOnlySpan&lt;System.Byte&gt;" Index="0" FrameworkAlternate="net-5.0" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="b0608-127">要进行哈希处理的数据。</span><span class="sxs-lookup"><span data-stu-id="b0608-127">The data to hash.</span></span></param>
        <summary><span data-ttu-id="b0608-128">使用 SHA384 算法计算数据的哈希值。</span><span class="sxs-lookup"><span data-stu-id="b0608-128">Computes the hash of data using the SHA384 algorithm.</span></span></summary>
        <returns><span data-ttu-id="b0608-129">数据的哈希。</span><span class="sxs-lookup"><span data-stu-id="b0608-129">The hash of the data.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HashData">
      <MemberSignature Language="C#" Value="public static int HashData (ReadOnlySpan&lt;byte&gt; source, Span&lt;byte&gt; destination);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 HashData(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; source, valuetype System.Span`1&lt;unsigned int8&gt; destination) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.SHA384.HashData(System.ReadOnlySpan{System.Byte},System.Span{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function HashData (source As ReadOnlySpan(Of Byte), destination As Span(Of Byte)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int HashData(ReadOnlySpan&lt;System::Byte&gt; source, Span&lt;System::Byte&gt; destination);" />
      <MemberSignature Language="F#" Value="static member HashData : ReadOnlySpan&lt;byte&gt; * Span&lt;byte&gt; -&gt; int" Usage="System.Security.Cryptography.SHA384.HashData (source, destination)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ReadOnlySpan&lt;System.Byte&gt;" Index="0" FrameworkAlternate="net-5.0" />
        <Parameter Name="destination" Type="System.Span&lt;System.Byte&gt;" Index="1" FrameworkAlternate="net-5.0" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="b0608-130">要进行哈希处理的数据。</span><span class="sxs-lookup"><span data-stu-id="b0608-130">The data to hash.</span></span></param>
        <param name="destination"><span data-ttu-id="b0608-131">要接收哈希值的缓冲区。</span><span class="sxs-lookup"><span data-stu-id="b0608-131">The buffer to receive the hash value.</span></span></param>
        <summary><span data-ttu-id="b0608-132">使用 SHA384 算法计算数据的哈希值。</span><span class="sxs-lookup"><span data-stu-id="b0608-132">Computes the hash of data using the SHA384 algorithm.</span></span></summary>
        <returns><span data-ttu-id="b0608-133">写入 <paramref name="destination" /> 的总字节数。</span><span class="sxs-lookup"><span data-stu-id="b0608-133">The total number of bytes written to <paramref name="destination" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b0608-134"><paramref name="destination" /> 中的缓冲区太小，无法容纳计算所得的哈希大小。</span><span class="sxs-lookup"><span data-stu-id="b0608-134">The buffer in <paramref name="destination" /> is too small to hold the calculated hash size.</span></span> <span data-ttu-id="b0608-135">SHA384 算法始终会生成 384 位的哈希或 48 个字节。</span><span class="sxs-lookup"><span data-stu-id="b0608-135">The SHA384 algorithm always produces a 384-bit hash, or 48 bytes.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="TryHashData">
      <MemberSignature Language="C#" Value="public static bool TryHashData (ReadOnlySpan&lt;byte&gt; source, Span&lt;byte&gt; destination, out int bytesWritten);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryHashData(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; source, valuetype System.Span`1&lt;unsigned int8&gt; destination, [out] int32&amp; bytesWritten) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.SHA384.TryHashData(System.ReadOnlySpan{System.Byte},System.Span{System.Byte},System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryHashData (source As ReadOnlySpan(Of Byte), destination As Span(Of Byte), ByRef bytesWritten As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryHashData(ReadOnlySpan&lt;System::Byte&gt; source, Span&lt;System::Byte&gt; destination, [Runtime::InteropServices::Out] int % bytesWritten);" />
      <MemberSignature Language="F#" Value="static member TryHashData : ReadOnlySpan&lt;byte&gt; * Span&lt;byte&gt; * int -&gt; bool" Usage="System.Security.Cryptography.SHA384.TryHashData (source, destination, bytesWritten)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ReadOnlySpan&lt;System.Byte&gt;" Index="0" FrameworkAlternate="net-5.0" />
        <Parameter Name="destination" Type="System.Span&lt;System.Byte&gt;" Index="1" FrameworkAlternate="net-5.0" />
        <Parameter Name="bytesWritten" Type="System.Int32" RefType="out" Index="2" FrameworkAlternate="net-5.0" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="b0608-136">要进行哈希处理的数据。</span><span class="sxs-lookup"><span data-stu-id="b0608-136">The data to hash.</span></span></param>
        <param name="destination"><span data-ttu-id="b0608-137">要接收哈希值的缓冲区。</span><span class="sxs-lookup"><span data-stu-id="b0608-137">The buffer to receive the hash value.</span></span></param>
        <param name="bytesWritten"><span data-ttu-id="b0608-138">此方法返回时，为写入 <paramref name="destination" /> 的字节总数。</span><span class="sxs-lookup"><span data-stu-id="b0608-138">When this method returns, the total number of bytes written into <paramref name="destination" />.</span></span></param>
        <summary><span data-ttu-id="b0608-139">尝试使用 SHA384 算法计算数据的哈希值。</span><span class="sxs-lookup"><span data-stu-id="b0608-139">Attempts to compute the hash of data using the SHA384 algorithm.</span></span></summary>
        <returns><span data-ttu-id="b0608-140">如果 <paramref name="destination" /> 太小，无法容纳计算所得的哈希，则为 <see langword="false" />；否则为 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="b0608-140"><see langword="false" /> if <paramref name="destination" /> is too small to hold the calculated hash, <see langword="true" /> otherwise.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
