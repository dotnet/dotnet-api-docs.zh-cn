<Type Name="KeyedHashAlgorithm" FullName="System.Security.Cryptography.KeyedHashAlgorithm">
  <Metadata><Meta Name="ms.openlocfilehash" Value="2f82615f181e65d56896f5ad630078351752b335" /><Meta Name="ms.sourcegitcommit" Value="a8ca33e500a87229bed50d12e09b1347df519648" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="10/09/2020" /><Meta Name="ms.locfileid" Value="91904253" /></Metadata><TypeSignature Language="C#" Value="public abstract class KeyedHashAlgorithm : System.Security.Cryptography.HashAlgorithm" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit KeyedHashAlgorithm extends System.Security.Cryptography.HashAlgorithm" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.KeyedHashAlgorithm" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class KeyedHashAlgorithm&#xA;Inherits HashAlgorithm" />
  <TypeSignature Language="C++ CLI" Value="public ref class KeyedHashAlgorithm abstract : System::Security::Cryptography::HashAlgorithm" />
  <TypeSignature Language="F#" Value="type KeyedHashAlgorithm = class&#xA;    inherit HashAlgorithm" />
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="mscorlib" FromVersion="4.0.0.0" To="System.Security.Cryptography.Primitives" ToVersion="0.0.0.0" FrameworkAlternate="net-5.0" />
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.Security.Cryptography.Primitives" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Security.Cryptography.HashAlgorithm</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName Language="C#">[System.Runtime.InteropServices.ComVisible(true)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.ComVisible(true)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="9b9b2-101">显示所有加密哈希算法实现均必须从中派生的抽象类。</span><span class="sxs-lookup"><span data-stu-id="9b9b2-101">Represents the abstract class from which all implementations of keyed hash algorithms must derive.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9b9b2-102">哈希函数将任意长度的二进制字符串映射为固定长度的小型二进制字符串。</span><span class="sxs-lookup"><span data-stu-id="9b9b2-102">Hash functions map binary strings of an arbitrary length to small binary strings of a fixed length.</span></span> <span data-ttu-id="9b9b2-103">加密哈希函数具有属性，该属性不能进行计算以查找两个不同的输入，这些输入将散列到相同的值。</span><span class="sxs-lookup"><span data-stu-id="9b9b2-103">A cryptographic hash function has the property that it is computationally infeasible to find two distinct inputs that hash to the same value.</span></span> <span data-ttu-id="9b9b2-104">数据的小更改会导致哈希中的大量无法预测的更改。</span><span class="sxs-lookup"><span data-stu-id="9b9b2-104">Small changes to the data result in large, unpredictable changes in the hash.</span></span>  
  
 <span data-ttu-id="9b9b2-105">键控哈希算法是一种用于作为消息身份验证代码的键相关的单向哈希函数。</span><span class="sxs-lookup"><span data-stu-id="9b9b2-105">A keyed hash algorithm is a key-dependent, one-way hash function used as a message authentication code.</span></span> <span data-ttu-id="9b9b2-106">只有知道密钥的人员才能验证哈希。</span><span class="sxs-lookup"><span data-stu-id="9b9b2-106">Only someone who knows the key can verify the hash.</span></span> <span data-ttu-id="9b9b2-107">键控哈希算法提供没有机密的真实性。</span><span class="sxs-lookup"><span data-stu-id="9b9b2-107">Keyed hash algorithms provide authenticity without secrecy.</span></span>  
  
 <span data-ttu-id="9b9b2-108">哈希函数通常与数字签名一起使用并用来保持数据的完整性。</span><span class="sxs-lookup"><span data-stu-id="9b9b2-108">Hash functions are commonly used with digital signatures and for data integrity.</span></span> <span data-ttu-id="9b9b2-109"><xref:System.Security.Cryptography.HMACSHA1>类是加密哈希算法的一个示例。</span><span class="sxs-lookup"><span data-stu-id="9b9b2-109">The <xref:System.Security.Cryptography.HMACSHA1> class is an example of a keyed hash algorithm.</span></span>  
  
 <span data-ttu-id="9b9b2-110">由于 SHA1 出现冲突问题，Microsoft 建议使用基于 SHA256 或更好的安全模型。</span><span class="sxs-lookup"><span data-stu-id="9b9b2-110">Due to collision problems with SHA1, Microsoft recommends a security model based on SHA256 or better.</span></span>  
  
## Examples  
 <span data-ttu-id="9b9b2-111">下面的代码示例演示如何从 <xref:System.Security.Cryptography.KeyedHashAlgorithm> 类派生。</span><span class="sxs-lookup"><span data-stu-id="9b9b2-111">The following code example demonstrates how to derive from the <xref:System.Security.Cryptography.KeyedHashAlgorithm> class.</span></span>  
 
 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_CLR/keyedhashalgorithm/cs/program.cs" interactive="try-dotnet" id="Snippet1":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_CLR/keyedhashalgorithm/vb/program.vb" id="Snippet1":::
  
 ]]></format>
    </remarks>
    <related type="Article" href="/dotnet/standard/security/cryptographic-services"><span data-ttu-id="9b9b2-112">加密服务</span><span class="sxs-lookup"><span data-stu-id="9b9b2-112">Cryptographic Services</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected KeyedHashAlgorithm ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.KeyedHashAlgorithm.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; KeyedHashAlgorithm();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9b9b2-113">初始化 <see cref="T:System.Security.Cryptography.KeyedHashAlgorithm" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="9b9b2-113">Initializes a new instance of the <see cref="T:System.Security.Cryptography.KeyedHashAlgorithm" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9b9b2-114">不能创建抽象类的实例。</span><span class="sxs-lookup"><span data-stu-id="9b9b2-114">You cannot create an instance of an abstract class.</span></span> <span data-ttu-id="9b9b2-115">应用程序代码创建派生类的新实例。</span><span class="sxs-lookup"><span data-stu-id="9b9b2-115">Application code creates a new instance of a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/standard/security/cryptographic-services"><span data-ttu-id="9b9b2-116">加密服务</span><span class="sxs-lookup"><span data-stu-id="9b9b2-116">Cryptographic Services</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Create">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="9b9b2-117">创建加密哈希算法实现的实例。</span><span class="sxs-lookup"><span data-stu-id="9b9b2-117">Creates an instance of an implementation of a keyed hash algorithm.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.KeyedHashAlgorithm Create ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.Cryptography.KeyedHashAlgorithm Create() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.KeyedHashAlgorithm.Create" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create () As KeyedHashAlgorithm" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Security::Cryptography::KeyedHashAlgorithm ^ Create();" />
      <MemberSignature Language="F#" Value="static member Create : unit -&gt; System.Security.Cryptography.KeyedHashAlgorithm" Usage="System.Security.Cryptography.KeyedHashAlgorithm.Create " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.KeyedHashAlgorithm</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9b9b2-118">创建加密哈希算法的默认实现的实例。</span><span class="sxs-lookup"><span data-stu-id="9b9b2-118">Creates an instance of the default implementation of a keyed hash algorithm.</span></span></summary>
        <returns><span data-ttu-id="9b9b2-119">新 <see cref="T:System.Security.Cryptography.HMACSHA1" /> 实例，除非已更改默认设置。</span><span class="sxs-lookup"><span data-stu-id="9b9b2-119">A new <see cref="T:System.Security.Cryptography.HMACSHA1" /> instance, unless the default settings have been changed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9b9b2-120">默认情况下，此重载使用 <xref:System.Security.Cryptography.HMACSHA1> 加密哈希算法的实现。</span><span class="sxs-lookup"><span data-stu-id="9b9b2-120">By default, this overload uses the <xref:System.Security.Cryptography.HMACSHA1> implementation of a keyed hash algorithm.</span></span> <span data-ttu-id="9b9b2-121">如果要指定其他实现，请使用 <xref:System.Security.Cryptography.KeyedHashAlgorithm.Create%28System.String%29> 重载，该重载使您可以改为指定算法名称。</span><span class="sxs-lookup"><span data-stu-id="9b9b2-121">If you want to specify a different implementation, use the <xref:System.Security.Cryptography.KeyedHashAlgorithm.Create%28System.String%29> overload, which lets you specify an algorithm name, instead.</span></span> <span data-ttu-id="9b9b2-122">加密配置系统定义类的默认实现 <xref:System.Security.Cryptography.KeyedHashAlgorithm> 。</span><span class="sxs-lookup"><span data-stu-id="9b9b2-122">The cryptography configuration system defines the default implementation of the <xref:System.Security.Cryptography.KeyedHashAlgorithm> class.</span></span>  

 <span data-ttu-id="9b9b2-123">由于 SHA1 出现冲突问题，Microsoft 建议使用基于 SHA256 或更好的安全模型。</span><span class="sxs-lookup"><span data-stu-id="9b9b2-123">Due to collision problems with SHA1, Microsoft recommends a security model based on SHA256 or better.</span></span>
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/standard/security/cryptographic-services"><span data-ttu-id="9b9b2-124">加密服务</span><span class="sxs-lookup"><span data-stu-id="9b9b2-124">Cryptographic Services</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.KeyedHashAlgorithm? Create (string algName);" FrameworkAlternate="net-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.Cryptography.KeyedHashAlgorithm Create(string algName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.KeyedHashAlgorithm.Create(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (algName As String) As KeyedHashAlgorithm" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Security::Cryptography::KeyedHashAlgorithm ^ Create(System::String ^ algName);" />
      <MemberSignature Language="F#" Value="static member Create : string -&gt; System.Security.Cryptography.KeyedHashAlgorithm" Usage="System.Security.Cryptography.KeyedHashAlgorithm.Create algName" />
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.KeyedHashAlgorithm Create (string algName);" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.KeyedHashAlgorithm</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algName" Type="System.String" Index="0" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="algName"><span data-ttu-id="9b9b2-125">要使用的加密哈希算法实现。</span><span class="sxs-lookup"><span data-stu-id="9b9b2-125">The keyed hash algorithm implementation to use.</span></span> <span data-ttu-id="9b9b2-126">下表显示 <paramref name="algName" /> 参数的有效值以及它们映射到的算法。</span><span class="sxs-lookup"><span data-stu-id="9b9b2-126">The following table shows the valid values for the <paramref name="algName" /> parameter and the algorithms they map to.</span></span>  
  
 <list type="table"><listheader><term> <span data-ttu-id="9b9b2-127">参数值</span><span class="sxs-lookup"><span data-stu-id="9b9b2-127">Parameter value</span></span> 
 </term><description> <span data-ttu-id="9b9b2-128">实现为其类型参数</span><span class="sxs-lookup"><span data-stu-id="9b9b2-128">Implements</span></span> 
 </description></listheader><item><term> <span data-ttu-id="9b9b2-129">System.Security.Cryptography.HMAC</span><span class="sxs-lookup"><span data-stu-id="9b9b2-129">System.Security.Cryptography.HMAC</span></span> 
 </term><description><see cref="T:System.Security.Cryptography.HMACSHA1" /></description></item><item><term> <span data-ttu-id="9b9b2-130">System.Security.Cryptography.KeyedHashAlgorithm</span><span class="sxs-lookup"><span data-stu-id="9b9b2-130">System.Security.Cryptography.KeyedHashAlgorithm</span></span> 
 </term><description><see cref="T:System.Security.Cryptography.HMACSHA1" /></description></item><item><term> <span data-ttu-id="9b9b2-131">HMACMD5</span><span class="sxs-lookup"><span data-stu-id="9b9b2-131">HMACMD5</span></span> 
 </term><description><see cref="T:System.Security.Cryptography.HMACMD5" /></description></item><item><term> <span data-ttu-id="9b9b2-132">System.Security.Cryptography.HMACMD5</span><span class="sxs-lookup"><span data-stu-id="9b9b2-132">System.Security.Cryptography.HMACMD5</span></span> 
 </term><description><see cref="T:System.Security.Cryptography.HMACMD5" /></description></item><item><term> <span data-ttu-id="9b9b2-133">HMACRIPEMD160</span><span class="sxs-lookup"><span data-stu-id="9b9b2-133">HMACRIPEMD160</span></span> 
 </term><description><see cref="T:System.Security.Cryptography.HMACRIPEMD160" /></description></item><item><term> <span data-ttu-id="9b9b2-134">System.Security.Cryptography.HMACRIPEMD160</span><span class="sxs-lookup"><span data-stu-id="9b9b2-134">System.Security.Cryptography.HMACRIPEMD160</span></span> 
 </term><description><see cref="T:System.Security.Cryptography.HMACRIPEMD160" /></description></item><item><term> <span data-ttu-id="9b9b2-135">HMACSHA1</span><span class="sxs-lookup"><span data-stu-id="9b9b2-135">HMACSHA1</span></span> 
 </term><description><see cref="T:System.Security.Cryptography.HMACSHA1" /></description></item><item><term> <span data-ttu-id="9b9b2-136">System.Security.Cryptography.HMACSHA1</span><span class="sxs-lookup"><span data-stu-id="9b9b2-136">System.Security.Cryptography.HMACSHA1</span></span> 
 </term><description><see cref="T:System.Security.Cryptography.HMACSHA1" /></description></item><item><term> <span data-ttu-id="9b9b2-137">HMACSHA256</span><span class="sxs-lookup"><span data-stu-id="9b9b2-137">HMACSHA256</span></span> 
 </term><description><see cref="T:System.Security.Cryptography.HMACSHA256" /></description></item><item><term> <span data-ttu-id="9b9b2-138">System.Security.Cryptography.HMACSHA256</span><span class="sxs-lookup"><span data-stu-id="9b9b2-138">System.Security.Cryptography.HMACSHA256</span></span> 
 </term><description><see cref="T:System.Security.Cryptography.HMACSHA256" /></description></item><item><term> <span data-ttu-id="9b9b2-139">HMACSHA384</span><span class="sxs-lookup"><span data-stu-id="9b9b2-139">HMACSHA384</span></span> 
 </term><description><see cref="T:System.Security.Cryptography.HMACSHA384" /></description></item><item><term> <span data-ttu-id="9b9b2-140">System.Security.Cryptography.HMACSHA384</span><span class="sxs-lookup"><span data-stu-id="9b9b2-140">System.Security.Cryptography.HMACSHA384</span></span> 
 </term><description><see cref="T:System.Security.Cryptography.HMACSHA384" /></description></item><item><term> <span data-ttu-id="9b9b2-141">HMACSHA512</span><span class="sxs-lookup"><span data-stu-id="9b9b2-141">HMACSHA512</span></span> 
 </term><description><see cref="T:System.Security.Cryptography.HMACSHA512" /></description></item><item><term> <span data-ttu-id="9b9b2-142">System.Security.Cryptography.HMACSHA512</span><span class="sxs-lookup"><span data-stu-id="9b9b2-142">System.Security.Cryptography.HMACSHA512</span></span> 
 </term><description><see cref="T:System.Security.Cryptography.HMACSHA512" /></description></item><item><term> <span data-ttu-id="9b9b2-143">MACTripleDES</span><span class="sxs-lookup"><span data-stu-id="9b9b2-143">MACTripleDES</span></span> 
 </term><description><see cref="T:System.Security.Cryptography.MACTripleDES" /></description></item><item><term> <span data-ttu-id="9b9b2-144">System.Security.Cryptography.MACTripleDES</span><span class="sxs-lookup"><span data-stu-id="9b9b2-144">System.Security.Cryptography.MACTripleDES</span></span> 
 </term><description><see cref="T:System.Security.Cryptography.MACTripleDES" /></description></item></list></param>
        <summary><span data-ttu-id="9b9b2-145">创建加密哈希算法的指定实现的实例。</span><span class="sxs-lookup"><span data-stu-id="9b9b2-145">Creates an instance of the specified implementation of a keyed hash algorithm.</span></span></summary>
        <returns><span data-ttu-id="9b9b2-146">指定的加密哈希算法的新实例。</span><span class="sxs-lookup"><span data-stu-id="9b9b2-146">A new instance of the specified keyed hash algorithm.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9b9b2-147">此方法支持多种算法，包括 MD5、SHA-1、SHA-256 和 RIPEMD160。</span><span class="sxs-lookup"><span data-stu-id="9b9b2-147">This method supports a number of algorithms, including MD5, SHA-1, SHA-256, and RIPEMD160.</span></span> <span data-ttu-id="9b9b2-148">有关完整列表，请参阅参数支持的值 `algName` 。</span><span class="sxs-lookup"><span data-stu-id="9b9b2-148">For a full list, see the supported values for the `algName` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/standard/security/cryptographic-services"><span data-ttu-id="9b9b2-149">加密服务</span><span class="sxs-lookup"><span data-stu-id="9b9b2-149">Cryptographic Services</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.KeyedHashAlgorithm.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="keyedHashAlgorithm.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="9b9b2-150">若要释放托管资源和非托管资源，则为 <see langword="true" />；若仅释放非托管资源，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="9b9b2-150"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="9b9b2-151">释放由 <see cref="T:System.Security.Cryptography.KeyedHashAlgorithm" /> 占用的非托管资源，还可以另外再释放托管资源。</span><span class="sxs-lookup"><span data-stu-id="9b9b2-151">Releases the unmanaged resources used by the <see cref="T:System.Security.Cryptography.KeyedHashAlgorithm" /> and optionally releases the managed resources.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9b9b2-152">此方法由公共 `Dispose()` 方法和 `Finalize` 方法调用。</span><span class="sxs-lookup"><span data-stu-id="9b9b2-152">This method is called by the public `Dispose()` method and the `Finalize` method.</span></span> <span data-ttu-id="9b9b2-153">`Dispose()` 调用受保护的 `Dispose(Boolean)` 方法，并将 `disposing` 参数设置为 `true` 。</span><span class="sxs-lookup"><span data-stu-id="9b9b2-153">`Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="9b9b2-154">`Finalize``Dispose`在设置为的情况调用 `disposing` `false` 。</span><span class="sxs-lookup"><span data-stu-id="9b9b2-154">`Finalize` invokes `Dispose` with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="9b9b2-155">当 `disposing` 参数为 `true` 时，此方法释放该 <xref:System.Security.Cryptography.KeyedHashAlgorithm> 引用的、由任何托管对象持有的全部资源。</span><span class="sxs-lookup"><span data-stu-id="9b9b2-155">When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.Security.Cryptography.KeyedHashAlgorithm> references.</span></span> <span data-ttu-id="9b9b2-156">此方法将调用每个被引用对象的 `Dispose()` 方法。</span><span class="sxs-lookup"><span data-stu-id="9b9b2-156">This method invokes the `Dispose()` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="9b9b2-157">
            <see langword="Dispose" /> 可以由其他对象多次调用。</span><span class="sxs-lookup"><span data-stu-id="9b9b2-157">
            <see langword="Dispose" /> can be called multiple times by other objects.</span></span> <span data-ttu-id="9b9b2-158">重写时 <see langword="Dispose(Boolean)" /> ，请注意不要引用先前在调用时已释放的对象 <see langword="Dispose" /> 。</span><span class="sxs-lookup"><span data-stu-id="9b9b2-158">When overriding <see langword="Dispose(Boolean)" />, be careful not to reference objects that have been previously disposed in an earlier call to <see langword="Dispose" />.</span></span> <span data-ttu-id="9b9b2-159">有关如何实现的详细信息 <see langword="Dispose(Boolean)" /> ，请参阅 [实现 Dispose 方法](/dotnet/standard/garbage-collection/implementing-dispose)。</span><span class="sxs-lookup"><span data-stu-id="9b9b2-159">For more information about how to implement <see langword="Dispose(Boolean)" />, see [Implementing a Dispose Method](/dotnet/standard/garbage-collection/implementing-dispose).</span></span>  
  
<span data-ttu-id="9b9b2-160">有关和的详细 <see langword="Dispose" /> 信息 <see langword="Finalize" /> ，请参阅 [清理非托管资源](/dotnet/standard/garbage-collection/unmanaged)。</span><span class="sxs-lookup"><span data-stu-id="9b9b2-160">For more information about <see langword="Dispose" /> and <see langword="Finalize" />, see [Cleaning Up Unmanaged Resources](/dotnet/standard/garbage-collection/unmanaged).</span></span></para></block>
        <related type="Article" href="/dotnet/standard/security/cryptographic-services"><span data-ttu-id="9b9b2-161">加密服务</span><span class="sxs-lookup"><span data-stu-id="9b9b2-161">Cryptographic Services</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~KeyedHashAlgorithm ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.KeyedHashAlgorithm.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!KeyedHashAlgorithm ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="keyedHashAlgorithm.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9b9b2-162">此成员替代 <see cref="M:System.Object.Finalize" /> 且该主题可能包括更完整的文档。</span><span class="sxs-lookup"><span data-stu-id="9b9b2-162">This member overrides <see cref="M:System.Object.Finalize" />, and more complete documentation might be available in that topic.</span></span>

<span data-ttu-id="9b9b2-163">允许 <see cref="T:System.Object" /> 在"垃圾回收"回收 <see cref="T:System.Object" /> 之前尝试释放资源并执行其他清理操作。</span><span class="sxs-lookup"><span data-stu-id="9b9b2-163">Allows an <see cref="T:System.Object" /> to attempt to free resources and perform other cleanup operations before the <see cref="T:System.Object" /> is reclaimed by garbage collection.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Key">
      <MemberSignature Language="C#" Value="public virtual byte[] Key { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8[] Key" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.KeyedHashAlgorithm.Key" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Key As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property cli::array &lt;System::Byte&gt; ^ Key { cli::array &lt;System::Byte&gt; ^ get(); void set(cli::array &lt;System::Byte&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Key : byte[] with get, set" Usage="System.Security.Cryptography.KeyedHashAlgorithm.Key" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9b9b2-164">获取或设置用于哈希算法的密钥。</span><span class="sxs-lookup"><span data-stu-id="9b9b2-164">Gets or sets the key to use in the hash algorithm.</span></span></summary>
        <value><span data-ttu-id="9b9b2-165">用于哈希算法的密钥。</span><span class="sxs-lookup"><span data-stu-id="9b9b2-165">The key to use in the hash algorithm.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9b9b2-166">此属性是字段的公共访问器 <xref:System.Security.Cryptography.KeyedHashAlgorithm.KeyValue> 。</span><span class="sxs-lookup"><span data-stu-id="9b9b2-166">This property is the public accessor for the <xref:System.Security.Cryptography.KeyedHashAlgorithm.KeyValue> field.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9b9b2-167">下面的代码示例演示如何重写 <xref:System.Security.Cryptography.KeyedHashAlgorithm.Key%2A> 属性以检索当前对象中使用的密钥 <xref:System.Security.Cryptography.KeyedHashAlgorithm> 。</span><span class="sxs-lookup"><span data-stu-id="9b9b2-167">The following code example demonstrates how to override the <xref:System.Security.Cryptography.KeyedHashAlgorithm.Key%2A> property to retrieve the key used in the current <xref:System.Security.Cryptography.KeyedHashAlgorithm> object.</span></span> <span data-ttu-id="9b9b2-168">此代码示例是为类提供的更大示例的一部分 <xref:System.Security.Cryptography.KeyedHashAlgorithm> 。</span><span class="sxs-lookup"><span data-stu-id="9b9b2-168">This code example is part of a larger example provided for the <xref:System.Security.Cryptography.KeyedHashAlgorithm> class.</span></span>  
  
 [!code-cpp[System.Security.Cryptography.KeyedHashAlgorithm#22](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.KeyedHashAlgorithm/CPP/contosokeyedhash.cpp#22)]
 [!code-csharp[System.Security.Cryptography.KeyedHashAlgorithm#22](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.KeyedHashAlgorithm/CS/contosokeyedhash.cs#22)]
 [!code-vb[System.Security.Cryptography.KeyedHashAlgorithm#22](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.KeyedHashAlgorithm/VB/contosokeyedhash.vb#22)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="9b9b2-169">尝试在哈希计算已开始后更改 <see cref="P:System.Security.Cryptography.KeyedHashAlgorithm.Key" /> 属性。</span><span class="sxs-lookup"><span data-stu-id="9b9b2-169">An attempt was made to change the <see cref="P:System.Security.Cryptography.KeyedHashAlgorithm.Key" /> property after hashing has begun.</span></span></exception>
        <related type="Article" href="/dotnet/standard/security/cryptographic-services"><span data-ttu-id="9b9b2-170">加密服务</span><span class="sxs-lookup"><span data-stu-id="9b9b2-170">Cryptographic Services</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="KeyValue">
      <MemberSignature Language="C#" Value="protected byte[] KeyValue;" />
      <MemberSignature Language="ILAsm" Value=".field family unsigned int8[] KeyValue" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.KeyedHashAlgorithm.KeyValue" />
      <MemberSignature Language="VB.NET" Value="Protected KeyValue As Byte() " />
      <MemberSignature Language="C++ CLI" Value="protected: cli::array &lt;System::Byte&gt; ^ KeyValue;" />
      <MemberSignature Language="F#" Value="val mutable KeyValue : byte[]" Usage="System.Security.Cryptography.KeyedHashAlgorithm.KeyValue" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9b9b2-171">用于哈希算法的密钥。</span><span class="sxs-lookup"><span data-stu-id="9b9b2-171">The key to use in the hash algorithm.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9b9b2-172">此字段通过属性进行访问 <xref:System.Security.Cryptography.KeyedHashAlgorithm.Key%2A> 。</span><span class="sxs-lookup"><span data-stu-id="9b9b2-172">This field is accessed through the <xref:System.Security.Cryptography.KeyedHashAlgorithm.Key%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/standard/security/cryptographic-services"><span data-ttu-id="9b9b2-173">加密服务</span><span class="sxs-lookup"><span data-stu-id="9b9b2-173">Cryptographic Services</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>
