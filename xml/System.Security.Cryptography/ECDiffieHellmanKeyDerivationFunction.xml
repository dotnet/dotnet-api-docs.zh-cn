<Type Name="ECDiffieHellmanKeyDerivationFunction" FullName="System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction">
  <Metadata><Meta Name="ms.openlocfilehash" Value="a98711fbdb2d933c4902ea35cc70881562bb25d7" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="82325728" /></Metadata><TypeSignature Language="C#" Value="public enum ECDiffieHellmanKeyDerivationFunction" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed ECDiffieHellmanKeyDerivationFunction extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction" />
  <TypeSignature Language="VB.NET" Value="Public Enum ECDiffieHellmanKeyDerivationFunction" />
  <TypeSignature Language="C++ CLI" Value="public enum class ECDiffieHellmanKeyDerivationFunction" />
  <TypeSignature Language="F#" Value="type ECDiffieHellmanKeyDerivationFunction = " />
  <AssemblyInfo>
    <AssemblyName>System.Core</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
    <AssemblyVersion>4.3.1.0</AssemblyVersion>
    <AssemblyVersion>4.3.2.0</AssemblyVersion>
    <AssemblyVersion>4.3.3.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary><span data-ttu-id="f9500-101">指定密钥派生函数，<see cref="T:System.Security.Cryptography.ECDiffieHellmanCng" /> 类将使用此函数将机密协议转换为密钥材料。</span><span class="sxs-lookup"><span data-stu-id="f9500-101">Specifies the key derivation function that the <see cref="T:System.Security.Cryptography.ECDiffieHellmanCng" /> class will use to convert secret agreements into key material.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9500-102">`ECDiffieHellmanKeyDerivationFunction`枚举定义将用于将原始机密协议转换为密钥材料的算法类型。</span><span class="sxs-lookup"><span data-stu-id="f9500-102">The `ECDiffieHellmanKeyDerivationFunction` enumeration defines the type of algorithm that will be used to transform a raw secret agreement into key material.</span></span> <span data-ttu-id="f9500-103">机密协议是密钥交换的一部分，从私钥和另一方的公钥生成的值。</span><span class="sxs-lookup"><span data-stu-id="f9500-103">The secret agreement is the value that is generated from a private key and the other party's public key, as part of the key exchange.</span></span> <span data-ttu-id="f9500-104">它是方法生成的密钥材料的种子值 <xref:System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyMaterial%2A?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="f9500-104">It is the seed value for the key material that is generated by the <xref:System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyMaterial%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="f9500-105"><xref:System.Security.Cryptography.ECDiffieHellmanCng.KeyDerivationFunction%2A?displayProperty=nameWithType>属性使用此枚举获取类的密钥派生函数 <xref:System.Security.Cryptography.ECDiffieHellmanCng> 。</span><span class="sxs-lookup"><span data-stu-id="f9500-105">The <xref:System.Security.Cryptography.ECDiffieHellmanCng.KeyDerivationFunction%2A?displayProperty=nameWithType> property uses this enumeration to get the key derivation function for the <xref:System.Security.Cryptography.ECDiffieHellmanCng> class.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Hash">
      <MemberSignature Language="C#" Value="Hash" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction Hash = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hash" />
      <MemberSignature Language="VB.NET" Value="Hash" />
      <MemberSignature Language="C++ CLI" Value="Hash" />
      <MemberSignature Language="F#" Value="Hash = 0" Usage="System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hash" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
        <AssemblyVersion>4.3.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary><span data-ttu-id="f9500-106">哈希算法用于生成密钥材料。</span><span class="sxs-lookup"><span data-stu-id="f9500-106">A hash algorithm is used to generate key material.</span></span> <span data-ttu-id="f9500-107"><see cref="P:System.Security.Cryptography.ECDiffieHellmanCng.HashAlgorithm" /> 属性指定要使用的算法的名称。</span><span class="sxs-lookup"><span data-stu-id="f9500-107">The <see cref="P:System.Security.Cryptography.ECDiffieHellmanCng.HashAlgorithm" /> property specifies the name of the algorithm to use.</span></span> <span data-ttu-id="f9500-108">如果未指定算法名称，则将 <see cref="T:System.Security.Cryptography.SHA256" /> 用作默认算法。</span><span class="sxs-lookup"><span data-stu-id="f9500-108">If the algorithm name is not specified, <see cref="T:System.Security.Cryptography.SHA256" /> is used as the default algorithm.</span></span> <span data-ttu-id="f9500-109">此外，可以指定 <see cref="P:System.Security.Cryptography.ECDiffieHellmanCng.SecretPrepend" /> 和 <see cref="P:System.Security.Cryptography.ECDiffieHellmanCng.SecretAppend" /> 属性，但不是必需的。</span><span class="sxs-lookup"><span data-stu-id="f9500-109">You can also specify the <see cref="P:System.Security.Cryptography.ECDiffieHellmanCng.SecretPrepend" /> and <see cref="P:System.Security.Cryptography.ECDiffieHellmanCng.SecretAppend" /> properties, but they are not required.</span></span> <span data-ttu-id="f9500-110">生成的密钥材料的数量等同于指定算法哈希值的大小。</span><span class="sxs-lookup"><span data-stu-id="f9500-110">The amount of key material that is generated is equivalent to the size of the hash value for the specified algorithm.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="Hmac">
      <MemberSignature Language="C#" Value="Hmac" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction Hmac = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hmac" />
      <MemberSignature Language="VB.NET" Value="Hmac" />
      <MemberSignature Language="C++ CLI" Value="Hmac" />
      <MemberSignature Language="F#" Value="Hmac = 1" Usage="System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hmac" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
        <AssemblyVersion>4.3.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary><span data-ttu-id="f9500-111">基于散列的消息验证代码 (HMAC) 算法用于生成密钥材料。</span><span class="sxs-lookup"><span data-stu-id="f9500-111">A Hash-based Message Authentication Code (HMAC) algorithm is used to generate key material.</span></span> <span data-ttu-id="f9500-112"><see cref="P:System.Security.Cryptography.ECDiffieHellmanCng.HmacKey" /> 属性指定要使用的密钥。</span><span class="sxs-lookup"><span data-stu-id="f9500-112">The <see cref="P:System.Security.Cryptography.ECDiffieHellmanCng.HmacKey" /> property specifies the key to use.</span></span> <span data-ttu-id="f9500-113">必须设置此属性或者必须将 <see cref="P:System.Security.Cryptography.ECDiffieHellmanCng.UseSecretAgreementAsHmacKey" /> 属性设置为 <see langword="true" />；否则使用 <see cref="T:System.Security.Cryptography.CryptographicException" /> 时，会引发 <see cref="F:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hmac" />。</span><span class="sxs-lookup"><span data-stu-id="f9500-113">Either this property must be set or the <see cref="P:System.Security.Cryptography.ECDiffieHellmanCng.UseSecretAgreementAsHmacKey" /> property must be set to <see langword="true" />; otherwise, a <see cref="T:System.Security.Cryptography.CryptographicException" /> is thrown when you use <see cref="F:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hmac" />.</span></span> <span data-ttu-id="f9500-114">如果同时设置了这两个属性，则将机密协议用作 HMAC 密钥。</span><span class="sxs-lookup"><span data-stu-id="f9500-114">If both properties are set, the secret agreement is used as the HMAC key.</span></span> <span data-ttu-id="f9500-115">此外，可以指定 <see cref="P:System.Security.Cryptography.ECDiffieHellmanCng.SecretPrepend" /> 和 <see cref="P:System.Security.Cryptography.ECDiffieHellmanCng.SecretAppend" /> 属性，但不是必需的。</span><span class="sxs-lookup"><span data-stu-id="f9500-115">You can also specify the <see cref="P:System.Security.Cryptography.ECDiffieHellmanCng.SecretPrepend" /> and <see cref="P:System.Security.Cryptography.ECDiffieHellmanCng.SecretAppend" /> properties, but they are not required.</span></span> <span data-ttu-id="f9500-116">生成的密钥材料的数量等同于 HMAC 值的大小。</span><span class="sxs-lookup"><span data-stu-id="f9500-116">The amount of key material that is generated is equivalent to the size of the HMAC value.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="Tls">
      <MemberSignature Language="C#" Value="Tls" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction Tls = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Tls" />
      <MemberSignature Language="VB.NET" Value="Tls" />
      <MemberSignature Language="C++ CLI" Value="Tls" />
      <MemberSignature Language="F#" Value="Tls = 2" Usage="System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Tls" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
        <AssemblyVersion>4.3.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary><span data-ttu-id="f9500-117">传输层安全 (TLS) 协议用于生成密钥材料。</span><span class="sxs-lookup"><span data-stu-id="f9500-117">The Transport Layer Security (TLS) protocol is used to generate key material.</span></span> <span data-ttu-id="f9500-118">必须设置 <see cref="P:System.Security.Cryptography.ECDiffieHellmanCng.Seed" /> 和 <see cref="P:System.Security.Cryptography.ECDiffieHellmanCng.Label" /> 属性；否则使用 <see cref="T:System.Security.Cryptography.CryptographicException" /> 时，会引发 <see cref="F:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Tls" />。</span><span class="sxs-lookup"><span data-stu-id="f9500-118">The <see cref="P:System.Security.Cryptography.ECDiffieHellmanCng.Seed" /> and <see cref="P:System.Security.Cryptography.ECDiffieHellmanCng.Label" /> properties must be set; otherwise, a <see cref="T:System.Security.Cryptography.CryptographicException" /> is thrown when you use <see cref="F:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Tls" />.</span></span> <span data-ttu-id="f9500-119">此值将生成 160 位的密钥材料。</span><span class="sxs-lookup"><span data-stu-id="f9500-119">This value generates 160 bits of key material.</span></span></summary>
      </Docs>
    </Member>
  </Members>
</Type>
