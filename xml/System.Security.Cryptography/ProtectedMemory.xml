<Type Name="ProtectedMemory" FullName="System.Security.Cryptography.ProtectedMemory">
  <Metadata><Meta Name="ms.openlocfilehash" Value="f271d226ab4cce8995374b46b79cca17ee18fa86" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86751398" /></Metadata><TypeSignature Language="C#" Value="public sealed class ProtectedMemory" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;xamarinmac-3.0" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ProtectedMemory extends System.Object" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;xamarinmac-3.0" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.ProtectedMemory" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ProtectedMemory" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;xamarinmac-3.0" />
  <TypeSignature Language="C++ CLI" Value="public ref class ProtectedMemory sealed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;xamarinmac-3.0" />
  <TypeSignature Language="F#" Value="type ProtectedMemory = class" />
  <TypeSignature Language="C#" Value="public static class ProtectedMemory" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit ProtectedMemory extends System.Object" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <TypeSignature Language="VB.NET" Value="Public Class ProtectedMemory" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <TypeSignature Language="C++ CLI" Value="public ref class ProtectedMemory abstract sealed" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <AssemblyInfo>
    <AssemblyName>System.Security</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="cf871-101">提供保护内存和取消内存保护的方法。</span><span class="sxs-lookup"><span data-stu-id="cf871-101">Provides methods for protecting and unprotecting memory.</span></span> <span data-ttu-id="cf871-102">此类不能被继承。</span><span class="sxs-lookup"><span data-stu-id="cf871-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf871-103">此类提供对在 Windows XP 和更高版本的操作系统中可用的数据保护 API (DPAPI) 的访问。</span><span class="sxs-lookup"><span data-stu-id="cf871-103">This class provides access to the Data Protection API (DPAPI) available in the Windows XP and later operating systems.</span></span> <span data-ttu-id="cf871-104">这是由操作系统提供的服务，不需要其他库。</span><span class="sxs-lookup"><span data-stu-id="cf871-104">This is a service that is provided by the operating system and does not require additional libraries.</span></span> <span data-ttu-id="cf871-105">它为内存中的敏感数据提供加密。</span><span class="sxs-lookup"><span data-stu-id="cf871-105">It provides encryption for sensitive data in memory.</span></span>  
  
 <span data-ttu-id="cf871-106">此类包含两个非托管 DPAPI 和的包装 <xref:System.Security.Cryptography.ProtectedMemory.Protect%2A> 器 <xref:System.Security.Cryptography.ProtectedMemory.Unprotect%2A> 。</span><span class="sxs-lookup"><span data-stu-id="cf871-106">The class consists of two wrappers for the unmanaged DPAPI, <xref:System.Security.Cryptography.ProtectedMemory.Protect%2A> and <xref:System.Security.Cryptography.ProtectedMemory.Unprotect%2A>.</span></span> <span data-ttu-id="cf871-107">这两种方法可用于对内存中的数据进行加密和解密。</span><span class="sxs-lookup"><span data-stu-id="cf871-107">These two methods can be used to encrypt and decrypt data in memory.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cf871-108">下面的示例演示如何使用数据保护。</span><span class="sxs-lookup"><span data-stu-id="cf871-108">The following example shows how to use data protection.</span></span>  
  
 [!code-cpp[Cryptography.MemoryProtectionSample#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.MemoryProtectionSample/CPP/memoryprotectionsample.cpp#1)]
 [!code-csharp[Cryptography.MemoryProtectionSample#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.MemoryProtectionSample/CS/memoryprotectionsample.cs#1)]
 [!code-vb[Cryptography.MemoryProtectionSample#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.MemoryProtectionSample/vb/memoryprotectionsample.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Protect">
      <MemberSignature Language="C#" Value="public static void Protect (byte[] userData, System.Security.Cryptography.MemoryProtectionScope scope);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Protect(unsigned int8[] userData, valuetype System.Security.Cryptography.MemoryProtectionScope scope) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ProtectedMemory.Protect(System.Byte[],System.Security.Cryptography.MemoryProtectionScope)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Protect (userData As Byte(), scope As MemoryProtectionScope)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Protect(cli::array &lt;System::Byte&gt; ^ userData, System::Security::Cryptography::MemoryProtectionScope scope);" />
      <MemberSignature Language="F#" Value="static member Protect : byte[] * System.Security.Cryptography.MemoryProtectionScope -&gt; unit" Usage="System.Security.Cryptography.ProtectedMemory.Protect (userData, scope)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userData" Type="System.Byte[]" />
        <Parameter Name="scope" Type="System.Security.Cryptography.MemoryProtectionScope" />
      </Parameters>
      <Docs>
        <param name="userData"><span data-ttu-id="cf871-109">一个字节数组，包含要保护的内存中的数据。</span><span class="sxs-lookup"><span data-stu-id="cf871-109">The byte array containing data in memory to protect.</span></span> <span data-ttu-id="cf871-110">该数组必须是 16 字节的倍数。</span><span class="sxs-lookup"><span data-stu-id="cf871-110">The array must be a multiple of 16 bytes.</span></span></param>
        <param name="scope"><span data-ttu-id="cf871-111">指定内存保护范围的枚举值之一。</span><span class="sxs-lookup"><span data-stu-id="cf871-111">One of the enumeration values that specifies the scope of memory protection.</span></span></param>
        <summary><span data-ttu-id="cf871-112">保护指定数据。</span><span class="sxs-lookup"><span data-stu-id="cf871-112">Protects the specified data.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf871-113">此方法可用于保护内存中的数据。</span><span class="sxs-lookup"><span data-stu-id="cf871-113">This method can be used to protect data in memory.</span></span> <span data-ttu-id="cf871-114">请注意，方法不会创建数据的副本，但会就地加密字节数组。</span><span class="sxs-lookup"><span data-stu-id="cf871-114">Note that the method does not make a copy of the data, but encrypts the byte array in place.</span></span> <span data-ttu-id="cf871-115">`userData`参数的长度必须为16字节或16字节的倍数。</span><span class="sxs-lookup"><span data-stu-id="cf871-115">The `userData` parameter must be 16 bytes in length or a multiple of 16 bytes.</span></span>  
  
 <span data-ttu-id="cf871-116">Windows XP 和更高版本的操作系统中提供对此方法的支持。</span><span class="sxs-lookup"><span data-stu-id="cf871-116">Support for this method is available in the Windows XP and later operating systems.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cf871-117">下面的代码示例演示如何使用数据保护。</span><span class="sxs-lookup"><span data-stu-id="cf871-117">The following code example shows how to use data protection.</span></span>  
  
 [!code-cpp[Cryptography.MemoryProtectionSample#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.MemoryProtectionSample/CPP/memoryprotectionsample.cpp#1)]
 [!code-csharp[Cryptography.MemoryProtectionSample#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.MemoryProtectionSample/CS/memoryprotectionsample.cs#1)]
 [!code-vb[Cryptography.MemoryProtectionSample#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.MemoryProtectionSample/vb/memoryprotectionsample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="cf871-118"><paramref name="userData" /> 的长度必须是 16 字节或 16 字节的倍数。</span><span class="sxs-lookup"><span data-stu-id="cf871-118"><paramref name="userData" /> must be 16 bytes in length or in multiples of 16 bytes.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="cf871-119">该操作系统不支持此方法。</span><span class="sxs-lookup"><span data-stu-id="cf871-119">The operating system does not support this method.</span></span> <span data-ttu-id="cf871-120">此方法仅可用于 Windows 2000 或更高版本的操作系统。</span><span class="sxs-lookup"><span data-stu-id="cf871-120">This method can be used only with the Windows 2000 or later operating systems.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="cf871-121"><paramref name="userData" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="cf871-121"><paramref name="userData" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Unprotect">
      <MemberSignature Language="C#" Value="public static void Unprotect (byte[] encryptedData, System.Security.Cryptography.MemoryProtectionScope scope);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Unprotect(unsigned int8[] encryptedData, valuetype System.Security.Cryptography.MemoryProtectionScope scope) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ProtectedMemory.Unprotect(System.Byte[],System.Security.Cryptography.MemoryProtectionScope)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Unprotect (encryptedData As Byte(), scope As MemoryProtectionScope)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Unprotect(cli::array &lt;System::Byte&gt; ^ encryptedData, System::Security::Cryptography::MemoryProtectionScope scope);" />
      <MemberSignature Language="F#" Value="static member Unprotect : byte[] * System.Security.Cryptography.MemoryProtectionScope -&gt; unit" Usage="System.Security.Cryptography.ProtectedMemory.Unprotect (encryptedData, scope)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="encryptedData" Type="System.Byte[]" />
        <Parameter Name="scope" Type="System.Security.Cryptography.MemoryProtectionScope" />
      </Parameters>
      <Docs>
        <param name="encryptedData"><span data-ttu-id="cf871-122">要解密的内存中的字节数组。</span><span class="sxs-lookup"><span data-stu-id="cf871-122">The byte array in memory to unencrypt.</span></span></param>
        <param name="scope"><span data-ttu-id="cf871-123">指定内存保护范围的枚举值之一。</span><span class="sxs-lookup"><span data-stu-id="cf871-123">One of the enumeration values that specifies the scope of memory protection.</span></span></param>
        <summary><span data-ttu-id="cf871-124">取消对使用 <see cref="M:System.Security.Cryptography.ProtectedMemory.Protect(System.Byte[],System.Security.Cryptography.MemoryProtectionScope)" /> 方法保护的内存中的数据的保护。</span><span class="sxs-lookup"><span data-stu-id="cf871-124">Unprotects data in memory that was protected using the <see cref="M:System.Security.Cryptography.ProtectedMemory.Protect(System.Byte[],System.Security.Cryptography.MemoryProtectionScope)" /> method.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf871-125">此方法可用于对内存中使用方法加密的数据进行解密 <xref:System.Security.Cryptography.ProtectedMemory.Protect%2A> 。</span><span class="sxs-lookup"><span data-stu-id="cf871-125">This method can be used to unencrypt data in memory that was encrypted using the <xref:System.Security.Cryptography.ProtectedMemory.Protect%2A> method.</span></span>  
  
 <span data-ttu-id="cf871-126">Windows XP 和更高版本的操作系统中提供对此方法的支持。</span><span class="sxs-lookup"><span data-stu-id="cf871-126">Support for this method is available in the Windows XP and later operating systems.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cf871-127">下面的示例演示如何使用数据保护。</span><span class="sxs-lookup"><span data-stu-id="cf871-127">The following example shows how to use data protection.</span></span>  
  
 [!code-cpp[Cryptography.MemoryProtectionSample#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.MemoryProtectionSample/CPP/memoryprotectionsample.cpp#1)]
 [!code-csharp[Cryptography.MemoryProtectionSample#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.MemoryProtectionSample/CS/memoryprotectionsample.cs#1)]
 [!code-vb[Cryptography.MemoryProtectionSample#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.MemoryProtectionSample/vb/memoryprotectionsample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="cf871-128">该操作系统不支持此方法。</span><span class="sxs-lookup"><span data-stu-id="cf871-128">The operating system does not support this method.</span></span> <span data-ttu-id="cf871-129">此方法仅可用于 Windows 2000 或更高版本的操作系统。</span><span class="sxs-lookup"><span data-stu-id="cf871-129">This method can be used only with the Windows 2000 or later operating systems.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="cf871-130"><paramref name="encryptedData" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="cf871-130"><paramref name="encryptedData" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="cf871-131"><paramref name="encryptedData" /> 为空。</span><span class="sxs-lookup"><span data-stu-id="cf871-131"><paramref name="encryptedData" /> is empty.</span></span>  
  
<span data-ttu-id="cf871-132">- 或 -</span><span class="sxs-lookup"><span data-stu-id="cf871-132">-or-</span></span> 
<span data-ttu-id="cf871-133">未实现此调用。</span><span class="sxs-lookup"><span data-stu-id="cf871-133">This call was not implemented.</span></span>  
  
<span data-ttu-id="cf871-134">- 或 -</span><span class="sxs-lookup"><span data-stu-id="cf871-134">-or-</span></span> 
<span data-ttu-id="cf871-135">NTSTATUS 包含错误。</span><span class="sxs-lookup"><span data-stu-id="cf871-135">NTSTATUS contains an error.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
