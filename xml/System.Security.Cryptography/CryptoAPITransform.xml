<Type Name="CryptoAPITransform" FullName="System.Security.Cryptography.CryptoAPITransform">
  <Metadata><Meta Name="ms.openlocfilehash" Value="6fc24de42dfcb998e05622f295decf5a5fd6f7da" /><Meta Name="ms.sourcegitcommit" Value="11d168140aa8fade0768c2a9dde3e3bcacfdfb7d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="05/27/2020" /><Meta Name="ms.locfileid" Value="83964043" /></Metadata><TypeSignature Language="C#" Value="public sealed class CryptoAPITransform : System.Security.Cryptography.ICryptoTransform" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit CryptoAPITransform extends System.Object implements class System.IDisposable, class System.Security.Cryptography.ICryptoTransform" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.CryptoAPITransform" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class CryptoAPITransform&#xA;Implements ICryptoTransform" />
  <TypeSignature Language="C++ CLI" Value="public ref class CryptoAPITransform sealed : System::Security::Cryptography::ICryptoTransform" />
  <TypeSignature Language="F#" Value="type CryptoAPITransform = class&#xA;    interface ICryptoTransform&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Security.Cryptography.ICryptoTransform</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="a011c-101">执行数据的加密转换。</span><span class="sxs-lookup"><span data-stu-id="a011c-101">Performs a cryptographic transformation of data.</span></span> <span data-ttu-id="a011c-102">无法继承此类。</span><span class="sxs-lookup"><span data-stu-id="a011c-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a011c-103">下面的代码示例演示如何使用 <xref:System.Security.Cryptography.CryptoAPITransform> 类的成员。</span><span class="sxs-lookup"><span data-stu-id="a011c-103">The following code example demonstrates how to use members of the <xref:System.Security.Cryptography.CryptoAPITransform> class.</span></span>  
  
 [!code-cpp[System.Security.Cryptography.CryptoAPITransform#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.CryptoAPITransform/CPP/members.cpp#1)]
 [!code-csharp[System.Security.Cryptography.CryptoAPITransform#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.CryptoAPITransform/CS/members.cs#1)]
 [!code-vb[System.Security.Cryptography.CryptoAPITransform#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.CryptoAPITransform/VB/members.vb#1)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="/dotnet/standard/security/cryptographic-services"><span data-ttu-id="a011c-104">加密服务</span><span class="sxs-lookup"><span data-stu-id="a011c-104">Cryptographic Services</span></span></related>
  </Docs>
  <Members>
    <Member MemberName="CanReuseTransform">
      <MemberSignature Language="C#" Value="public bool CanReuseTransform { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanReuseTransform" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.CryptoAPITransform.CanReuseTransform" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanReuseTransform As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanReuseTransform { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanReuseTransform : bool" Usage="System.Security.Cryptography.CryptoAPITransform.CanReuseTransform" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Security.Cryptography.ICryptoTransform.CanReuseTransform</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a011c-105">获取一个值，该值指示是否可重复使用当前转换。</span><span class="sxs-lookup"><span data-stu-id="a011c-105">Gets a value indicating whether the current transform can be reused.</span></span></summary>
        <value><span data-ttu-id="a011c-106">始终为 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="a011c-106">Always <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a011c-107">下面的代码示例演示如何调用 <xref:System.Security.Cryptography.CryptoAPITransform.CanReuseTransform%2A> 属性来确定是否可以重复使用当前转换。</span><span class="sxs-lookup"><span data-stu-id="a011c-107">The following code example demonstrates how to call the <xref:System.Security.Cryptography.CryptoAPITransform.CanReuseTransform%2A> property to determine if the current transform can be reused.</span></span> <span data-ttu-id="a011c-108">此代码示例是为 <xref:System.Security.Cryptography.CryptoAPITransform> 类提供的更大示例的一部分。</span><span class="sxs-lookup"><span data-stu-id="a011c-108">This code example is part of a larger example provided for the <xref:System.Security.Cryptography.CryptoAPITransform> class.</span></span>  
  
 [!code-cpp[System.Security.Cryptography.CryptoAPITransform#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.CryptoAPITransform/CPP/members.cpp#2)]
 [!code-csharp[System.Security.Cryptography.CryptoAPITransform#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.CryptoAPITransform/CS/members.cs#2)]
 [!code-vb[System.Security.Cryptography.CryptoAPITransform#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.CryptoAPITransform/VB/members.vb#2)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/standard/security/cryptographic-services"><span data-ttu-id="a011c-109">加密服务</span><span class="sxs-lookup"><span data-stu-id="a011c-109">Cryptographic Services</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CanTransformMultipleBlocks">
      <MemberSignature Language="C#" Value="public bool CanTransformMultipleBlocks { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanTransformMultipleBlocks" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.CryptoAPITransform.CanTransformMultipleBlocks" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanTransformMultipleBlocks As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanTransformMultipleBlocks { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanTransformMultipleBlocks : bool" Usage="System.Security.Cryptography.CryptoAPITransform.CanTransformMultipleBlocks" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Security.Cryptography.ICryptoTransform.CanTransformMultipleBlocks</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a011c-110">获取一个值，该值指示是否可以转换多个块。</span><span class="sxs-lookup"><span data-stu-id="a011c-110">Gets a value indicating whether multiple blocks can be transformed.</span></span></summary>
        <value><span data-ttu-id="a011c-111">如果可以转换多个块，则为 <see langword="true" />；否则，为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a011c-111"><see langword="true" /> if multiple blocks can be transformed; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a011c-112">下面的代码示例演示如何调用 <xref:System.Security.Cryptography.CryptoAPITransform.CanTransformMultipleBlocks%2A> 属性来确定是否可以转换多个块。</span><span class="sxs-lookup"><span data-stu-id="a011c-112">The following code example demonstrates how to call the <xref:System.Security.Cryptography.CryptoAPITransform.CanTransformMultipleBlocks%2A> property to determine if multiple blocks can be transformed.</span></span> <span data-ttu-id="a011c-113">此代码示例是为 <xref:System.Security.Cryptography.CryptoAPITransform> 类提供的更大示例的一部分。</span><span class="sxs-lookup"><span data-stu-id="a011c-113">This code example is part of a larger example provided for the <xref:System.Security.Cryptography.CryptoAPITransform> class.</span></span>  
  
 [!code-cpp[System.Security.Cryptography.CryptoAPITransform#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.CryptoAPITransform/CPP/members.cpp#3)]
 [!code-csharp[System.Security.Cryptography.CryptoAPITransform#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.CryptoAPITransform/CS/members.cs#3)]
 [!code-vb[System.Security.Cryptography.CryptoAPITransform#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.CryptoAPITransform/VB/members.vb#3)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/standard/security/cryptographic-services"><span data-ttu-id="a011c-114">加密服务</span><span class="sxs-lookup"><span data-stu-id="a011c-114">Cryptographic Services</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.CryptoAPITransform.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberSignature Language="F#" Value="member this.Clear : unit -&gt; unit" Usage="cryptoAPITransform.Clear " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a011c-115">释放由 <see cref="T:System.Security.Cryptography.CryptoAPITransform" /> 方法使用的所有资源。</span><span class="sxs-lookup"><span data-stu-id="a011c-115">Releases all resources used by the <see cref="T:System.Security.Cryptography.CryptoAPITransform" /> method.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a011c-116">此方法是对 <xref:System.IDisposable.Dispose%2A?displayProperty=nameWithType>的简单调用。</span><span class="sxs-lookup"><span data-stu-id="a011c-116">This method is a simple call to <xref:System.IDisposable.Dispose%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="a011c-117">调用 `Dispose` 允许出于其他目的重新分配 <xref:System.Security.Cryptography.CryptoAPITransform> 所使用的资源。</span><span class="sxs-lookup"><span data-stu-id="a011c-117">Calling `Dispose` allows the resources used by the <xref:System.Security.Cryptography.CryptoAPITransform> to be reallocated for other purposes.</span></span> <span data-ttu-id="a011c-118">有关 `Dispose`的详细信息，请参阅[清理非托管资源](/dotnet/standard/garbage-collection/unmanaged)。</span><span class="sxs-lookup"><span data-stu-id="a011c-118">For more information about `Dispose`, see [Cleaning Up Unmanaged Resources](/dotnet/standard/garbage-collection/unmanaged).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a011c-119">下面的代码示例演示如何调用 <xref:System.Security.Cryptography.CryptoAPITransform.Clear%2A> 方法来释放当前转换使用的资源。</span><span class="sxs-lookup"><span data-stu-id="a011c-119">The following code example demonstrates how to call the <xref:System.Security.Cryptography.CryptoAPITransform.Clear%2A> method to release the resources used by the current transform.</span></span> <span data-ttu-id="a011c-120">此代码示例是为 <xref:System.Security.Cryptography.CryptoAPITransform> 类提供的更大示例的一部分。</span><span class="sxs-lookup"><span data-stu-id="a011c-120">This code example is part of a larger example provided for the <xref:System.Security.Cryptography.CryptoAPITransform> class.</span></span>  
  
 [!code-cpp[System.Security.Cryptography.CryptoAPITransform#7](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.CryptoAPITransform/CPP/members.cpp#7)]
 [!code-csharp[System.Security.Cryptography.CryptoAPITransform#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.CryptoAPITransform/CS/members.cs#7)]
 [!code-vb[System.Security.Cryptography.CryptoAPITransform#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.CryptoAPITransform/VB/members.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.CryptoAPITransform.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="cryptoAPITransform.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a011c-121">释放由 <see cref="T:System.Security.Cryptography.CryptoAPITransform" /> 类的当前实例占用的所有资源。</span><span class="sxs-lookup"><span data-stu-id="a011c-121">Releases all resources used by the current instance of the <see cref="T:System.Security.Cryptography.CryptoAPITransform" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a011c-122">在完成使用 `Dispose` 后，应调用 <xref:System.Security.Cryptography.CryptoAPITransform>。</span><span class="sxs-lookup"><span data-stu-id="a011c-122">Call `Dispose` when you are finished using the <xref:System.Security.Cryptography.CryptoAPITransform>.</span></span> <span data-ttu-id="a011c-123">`Dispose` 方法使 <xref:System.Security.Cryptography.CryptoAPITransform> 处于不可用状态。</span><span class="sxs-lookup"><span data-stu-id="a011c-123">The `Dispose` method leaves the <xref:System.Security.Cryptography.CryptoAPITransform> in an unusable state.</span></span> <span data-ttu-id="a011c-124">调用 `Dispose`后，必须释放对 <xref:System.Security.Cryptography.CryptoAPITransform> 的所有引用，以便垃圾回收器可以回收 <xref:System.Security.Cryptography.CryptoAPITransform> 占用的内存。</span><span class="sxs-lookup"><span data-stu-id="a011c-124">After calling `Dispose`, you must release all references to the <xref:System.Security.Cryptography.CryptoAPITransform> so the garbage collector can reclaim the memory that the <xref:System.Security.Cryptography.CryptoAPITransform> was occupying.</span></span>  
  
 <span data-ttu-id="a011c-125">有关详细信息，请参阅[清理非托管资源](/dotnet/standard/garbage-collection/unmanaged)和[实现 Dispose 方法](/dotnet/standard/garbage-collection/implementing-dispose)。</span><span class="sxs-lookup"><span data-stu-id="a011c-125">For more information, see [Cleaning Up Unmanaged Resources](/dotnet/standard/garbage-collection/unmanaged) and [Implementing a Dispose Method](/dotnet/standard/garbage-collection/implementing-dispose).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a011c-126">每次释放对 `Dispose` 的最后一个引用前，均应调用 <xref:System.Security.Cryptography.CryptoAPITransform>。</span><span class="sxs-lookup"><span data-stu-id="a011c-126">Always call `Dispose` before you release your last reference to the <xref:System.Security.Cryptography.CryptoAPITransform>.</span></span> <span data-ttu-id="a011c-127">否则，在垃圾回收器调用 <xref:System.Security.Cryptography.CryptoAPITransform> 对象的 `Finalize` 方法之前，该对象正在使用的资源不会被释放。</span><span class="sxs-lookup"><span data-stu-id="a011c-127">Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Security.Cryptography.CryptoAPITransform> object's `Finalize` method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~CryptoAPITransform ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.CryptoAPITransform.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!CryptoAPITransform ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="cryptoAPITransform.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a011c-128">在垃圾回收将某一对象回收前允许该对象尝试释放资源并执行其他清理操作。</span><span class="sxs-lookup"><span data-stu-id="a011c-128">Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InputBlockSize">
      <MemberSignature Language="C#" Value="public int InputBlockSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 InputBlockSize" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.CryptoAPITransform.InputBlockSize" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InputBlockSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int InputBlockSize { int get(); };" />
      <MemberSignature Language="F#" Value="member this.InputBlockSize : int" Usage="System.Security.Cryptography.CryptoAPITransform.InputBlockSize" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Security.Cryptography.ICryptoTransform.InputBlockSize</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a011c-129">获取输入块大小。</span><span class="sxs-lookup"><span data-stu-id="a011c-129">Gets the input block size.</span></span></summary>
        <value><span data-ttu-id="a011c-130">输入块的大小（以字节为单位）。</span><span class="sxs-lookup"><span data-stu-id="a011c-130">The input block size in bytes.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a011c-131">下面的代码示例演示如何调用 <xref:System.Security.Cryptography.CryptoAPITransform.InputBlockSize%2A> 属性以检索输入块大小。</span><span class="sxs-lookup"><span data-stu-id="a011c-131">The following code example demonstrates how to call the <xref:System.Security.Cryptography.CryptoAPITransform.InputBlockSize%2A> property to retrieve the input block size.</span></span> <span data-ttu-id="a011c-132">此代码示例是为 <xref:System.Security.Cryptography.CryptoAPITransform> 类提供的更大示例的一部分。</span><span class="sxs-lookup"><span data-stu-id="a011c-132">This code example is part of a larger example provided for the <xref:System.Security.Cryptography.CryptoAPITransform> class.</span></span>  
  
 [!code-cpp[System.Security.Cryptography.CryptoAPITransform#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.CryptoAPITransform/CPP/members.cpp#4)]
 [!code-csharp[System.Security.Cryptography.CryptoAPITransform#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.CryptoAPITransform/CS/members.cs#4)]
 [!code-vb[System.Security.Cryptography.CryptoAPITransform#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.CryptoAPITransform/VB/members.vb#4)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/standard/security/cryptographic-services"><span data-ttu-id="a011c-133">加密服务</span><span class="sxs-lookup"><span data-stu-id="a011c-133">Cryptographic Services</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="KeyHandle">
      <MemberSignature Language="C#" Value="public IntPtr KeyHandle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int KeyHandle" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.CryptoAPITransform.KeyHandle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property KeyHandle As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property IntPtr KeyHandle { IntPtr get(); };" />
      <MemberSignature Language="F#" Value="member this.KeyHandle : nativeint" Usage="System.Security.Cryptography.CryptoAPITransform.KeyHandle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a011c-134">获取密钥句柄。</span><span class="sxs-lookup"><span data-stu-id="a011c-134">Gets the key handle.</span></span></summary>
        <value><span data-ttu-id="a011c-135">密钥句柄。</span><span class="sxs-lookup"><span data-stu-id="a011c-135">The key handle.</span></span></value>
        <remarks>To be added.</remarks>
        <related type="Article" href="/dotnet/standard/security/cryptographic-services"><span data-ttu-id="a011c-136">加密服务</span><span class="sxs-lookup"><span data-stu-id="a011c-136">Cryptographic Services</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="OutputBlockSize">
      <MemberSignature Language="C#" Value="public int OutputBlockSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 OutputBlockSize" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.CryptoAPITransform.OutputBlockSize" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OutputBlockSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int OutputBlockSize { int get(); };" />
      <MemberSignature Language="F#" Value="member this.OutputBlockSize : int" Usage="System.Security.Cryptography.CryptoAPITransform.OutputBlockSize" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Security.Cryptography.ICryptoTransform.OutputBlockSize</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a011c-137">获取输出块大小。</span><span class="sxs-lookup"><span data-stu-id="a011c-137">Gets the output block size.</span></span></summary>
        <value><span data-ttu-id="a011c-138">输出块的大小（以字节为单位）。</span><span class="sxs-lookup"><span data-stu-id="a011c-138">The output block size in bytes.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a011c-139">下面的代码示例演示如何调用 <xref:System.Security.Cryptography.CryptoAPITransform.OutputBlockSize%2A> 属性以检索输出块大小。</span><span class="sxs-lookup"><span data-stu-id="a011c-139">The following code example demonstrates how to call the <xref:System.Security.Cryptography.CryptoAPITransform.OutputBlockSize%2A> property to retrieve the output block size.</span></span> <span data-ttu-id="a011c-140">此代码示例是为 <xref:System.Security.Cryptography.CryptoAPITransform> 类提供的更大示例的一部分。</span><span class="sxs-lookup"><span data-stu-id="a011c-140">This code example is part of a larger example provided for the <xref:System.Security.Cryptography.CryptoAPITransform> class.</span></span>  
  
 [!code-cpp[System.Security.Cryptography.CryptoAPITransform#6](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.CryptoAPITransform/CPP/members.cpp#6)]
 [!code-csharp[System.Security.Cryptography.CryptoAPITransform#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.CryptoAPITransform/CS/members.cs#6)]
 [!code-vb[System.Security.Cryptography.CryptoAPITransform#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.CryptoAPITransform/VB/members.vb#6)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/standard/security/cryptographic-services"><span data-ttu-id="a011c-141">加密服务</span><span class="sxs-lookup"><span data-stu-id="a011c-141">Cryptographic Services</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.CryptoAPITransform.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Reset();" />
      <MemberSignature Language="F#" Value="member this.Reset : unit -&gt; unit" Usage="cryptoAPITransform.Reset " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a011c-142">重置 <see cref="T:System.Security.Cryptography.CryptoAPITransform" /> 的内部状态，以便它可再次用于不同的加密或解密。</span><span class="sxs-lookup"><span data-stu-id="a011c-142">Resets the internal state of <see cref="T:System.Security.Cryptography.CryptoAPITransform" /> so that it can be used again to do a different encryption or decryption.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a011c-143">调用 TransformFinalBlock 时，会自动调用 <xref:System.Security.Cryptography.CryptoAPITransform.Reset%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="a011c-143">The <xref:System.Security.Cryptography.CryptoAPITransform.Reset%2A> method is called automatically when you call TransformFinalBlock.</span></span> <span data-ttu-id="a011c-144">例如，当加密的输入数据是垃圾的并且无法解密时，不会调用 `Reset` 方法。</span><span class="sxs-lookup"><span data-stu-id="a011c-144">The `Reset` method is not called when, for example, the encrypted input data is garbage and cannot be decrypted.</span></span> <span data-ttu-id="a011c-145">在这种情况下，将引发异常，并且不会调用 `Reset`。</span><span class="sxs-lookup"><span data-stu-id="a011c-145">In this case, an exception is thrown and `Reset` is not called.</span></span> <span data-ttu-id="a011c-146">在这种情况下，你可以选择手动调用 `Reset` 方法。</span><span class="sxs-lookup"><span data-stu-id="a011c-146">You can choose to manually call the `Reset` method in this case.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IDisposable.Dispose">
      <MemberSignature Language="C#" Value="void IDisposable.Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.IDisposable.Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.CryptoAPITransform.System#IDisposable#Dispose" />
      <MemberSignature Language="VB.NET" Value="Sub Dispose () Implements IDisposable.Dispose" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.IDisposable.Dispose() = IDisposable::Dispose;" />
      <MemberSignature Language="F#" Value="abstract member System.IDisposable.Dispose : unit -&gt; unit&#xA;override this.System.IDisposable.Dispose : unit -&gt; unit" Usage="cryptoAPITransform.System.IDisposable.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a011c-147">执行与释放或重置非托管资源关联的应用程序定义的任务。</span><span class="sxs-lookup"><span data-stu-id="a011c-147">Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.</span></span></summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <related type="Article" href="/dotnet/standard/security/cryptographic-services"><span data-ttu-id="a011c-148">加密服务</span><span class="sxs-lookup"><span data-stu-id="a011c-148">Cryptographic Services</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="TransformBlock">
      <MemberSignature Language="C#" Value="public int TransformBlock (byte[] inputBuffer, int inputOffset, int inputCount, byte[] outputBuffer, int outputOffset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 TransformBlock(unsigned int8[] inputBuffer, int32 inputOffset, int32 inputCount, unsigned int8[] outputBuffer, int32 outputOffset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.CryptoAPITransform.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function TransformBlock (inputBuffer As Byte(), inputOffset As Integer, inputCount As Integer, outputBuffer As Byte(), outputOffset As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int TransformBlock(cli::array &lt;System::Byte&gt; ^ inputBuffer, int inputOffset, int inputCount, cli::array &lt;System::Byte&gt; ^ outputBuffer, int outputOffset);" />
      <MemberSignature Language="F#" Value="abstract member TransformBlock : byte[] * int * int * byte[] * int -&gt; int&#xA;override this.TransformBlock : byte[] * int * int * byte[] * int -&gt; int" Usage="cryptoAPITransform.TransformBlock (inputBuffer, inputOffset, inputCount, outputBuffer, outputOffset)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Security.Cryptography.ICryptoTransform.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputBuffer" Type="System.Byte[]" />
        <Parameter Name="inputOffset" Type="System.Int32" />
        <Parameter Name="inputCount" Type="System.Int32" />
        <Parameter Name="outputBuffer" Type="System.Byte[]" />
        <Parameter Name="outputOffset" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="inputBuffer"><span data-ttu-id="a011c-149">对其执行操作的输入。</span><span class="sxs-lookup"><span data-stu-id="a011c-149">The input on which to perform the operation on.</span></span></param>
        <param name="inputOffset"><span data-ttu-id="a011c-150">输入字节数组中的偏移量，从该位置开始使用数据。</span><span class="sxs-lookup"><span data-stu-id="a011c-150">The offset into the input byte array from which to begin using data from.</span></span></param>
        <param name="inputCount"><span data-ttu-id="a011c-151">输入字节数组中用作数据的字节数。</span><span class="sxs-lookup"><span data-stu-id="a011c-151">The number of bytes in the input byte array to use as data.</span></span></param>
        <param name="outputBuffer"><span data-ttu-id="a011c-152">将数据写入的输出。</span><span class="sxs-lookup"><span data-stu-id="a011c-152">The output to which to write the data to.</span></span></param>
        <param name="outputOffset"><span data-ttu-id="a011c-153">输出字节数组中的偏移量，从该位置开始写入数据。</span><span class="sxs-lookup"><span data-stu-id="a011c-153">The offset into the output byte array from which to begin writing data from.</span></span></param>
        <summary><span data-ttu-id="a011c-154">计算输入字节数组的指定区域的转换，并将所得到的转换复制到输出字节数组的指定区域。</span><span class="sxs-lookup"><span data-stu-id="a011c-154">Computes the transformation for the specified region of the input byte array and copies the resulting transformation to the specified region of the output byte array.</span></span></summary>
        <returns><span data-ttu-id="a011c-155">写入的字节数。</span><span class="sxs-lookup"><span data-stu-id="a011c-155">The number of bytes written.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a011c-156">下面的代码示例演示如何调用 <xref:System.Security.Cryptography.CryptoAPITransform.TransformBlock%2A> 方法来转换 `sourceBytes` 数组中 `currentPosition` 的字节，并将字节写入 `targetBytes` 数组。</span><span class="sxs-lookup"><span data-stu-id="a011c-156">The following code example demonstrates how to call the <xref:System.Security.Cryptography.CryptoAPITransform.TransformBlock%2A> method to transform the bytes from `currentPosition` in the `sourceBytes` array, writing the bytes to the `targetBytes` array.</span></span> <span data-ttu-id="a011c-157">此代码示例是为 <xref:System.Security.Cryptography.CryptoAPITransform> 类提供的更大示例的一部分。</span><span class="sxs-lookup"><span data-stu-id="a011c-157">This code example is part of a larger example provided for the <xref:System.Security.Cryptography.CryptoAPITransform> class.</span></span>  
  
 [!code-cpp[System.Security.Cryptography.CryptoAPITransform#8](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.CryptoAPITransform/CPP/members.cpp#8)]
 [!code-csharp[System.Security.Cryptography.CryptoAPITransform#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.CryptoAPITransform/CS/members.cs#8)]
 [!code-vb[System.Security.Cryptography.CryptoAPITransform#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.CryptoAPITransform/VB/members.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a011c-158">
          <paramref name="inputBuffer" /> 参数为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="a011c-158">The <paramref name="inputBuffer" /> parameter is <see langword="null" />.</span></span>  
  
<span data-ttu-id="a011c-159">- 或 -</span><span class="sxs-lookup"><span data-stu-id="a011c-159">-or-</span></span> 
<span data-ttu-id="a011c-160">
          <paramref name="outputBuffer" /> 参数为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="a011c-160">The <paramref name="outputBuffer" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a011c-161">输入缓冲区的长度小于输入偏移量和输入计数之和。</span><span class="sxs-lookup"><span data-stu-id="a011c-161">The length of the input buffer is less than the sum of the input offset and the input count.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="a011c-162"><paramref name="inputOffset" /> 超出范围。</span><span class="sxs-lookup"><span data-stu-id="a011c-162"><paramref name="inputOffset" /> is out of range.</span></span> <span data-ttu-id="a011c-163">此参数需要非负数。</span><span class="sxs-lookup"><span data-stu-id="a011c-163">This parameter requires a non-negative number.</span></span></exception>
        <related type="Article" href="/dotnet/standard/security/cryptographic-services"><span data-ttu-id="a011c-164">加密服务</span><span class="sxs-lookup"><span data-stu-id="a011c-164">Cryptographic Services</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="TransformFinalBlock">
      <MemberSignature Language="C#" Value="public byte[] TransformFinalBlock (byte[] inputBuffer, int inputOffset, int inputCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance unsigned int8[] TransformFinalBlock(unsigned int8[] inputBuffer, int32 inputOffset, int32 inputCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.CryptoAPITransform.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function TransformFinalBlock (inputBuffer As Byte(), inputOffset As Integer, inputCount As Integer) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Byte&gt; ^ TransformFinalBlock(cli::array &lt;System::Byte&gt; ^ inputBuffer, int inputOffset, int inputCount);" />
      <MemberSignature Language="F#" Value="abstract member TransformFinalBlock : byte[] * int * int -&gt; byte[]&#xA;override this.TransformFinalBlock : byte[] * int * int -&gt; byte[]" Usage="cryptoAPITransform.TransformFinalBlock (inputBuffer, inputOffset, inputCount)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Security.Cryptography.ICryptoTransform.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputBuffer" Type="System.Byte[]" />
        <Parameter Name="inputOffset" Type="System.Int32" />
        <Parameter Name="inputCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="inputBuffer"><span data-ttu-id="a011c-165">对其执行操作的输入。</span><span class="sxs-lookup"><span data-stu-id="a011c-165">The input on which to perform the operation on.</span></span></param>
        <param name="inputOffset"><span data-ttu-id="a011c-166">字节数组中的偏移量，从该位置开始使用数据。</span><span class="sxs-lookup"><span data-stu-id="a011c-166">The offset into the byte array from which to begin using data from.</span></span></param>
        <param name="inputCount"><span data-ttu-id="a011c-167">字节数组中用作数据的字节数。</span><span class="sxs-lookup"><span data-stu-id="a011c-167">The number of bytes in the byte array to use as data.</span></span></param>
        <summary><span data-ttu-id="a011c-168">计算指定字节数组的指定区域的转换。</span><span class="sxs-lookup"><span data-stu-id="a011c-168">Computes the transformation for the specified region of the specified byte array.</span></span></summary>
        <returns><span data-ttu-id="a011c-169">计算所得的转换。</span><span class="sxs-lookup"><span data-stu-id="a011c-169">The computed transformation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a011c-170">下面的代码示例演示如何调用 <xref:System.Security.Cryptography.CryptoAPITransform.TransformFinalBlock%2A> 方法来转换最终字节块。</span><span class="sxs-lookup"><span data-stu-id="a011c-170">The following code example demonstrates how to call the <xref:System.Security.Cryptography.CryptoAPITransform.TransformFinalBlock%2A> method to transform the final block of bytes.</span></span> <span data-ttu-id="a011c-171">此代码示例是为 <xref:System.Security.Cryptography.CryptoAPITransform> 类提供的更大示例的一部分。</span><span class="sxs-lookup"><span data-stu-id="a011c-171">This code example is part of a larger example provided for the <xref:System.Security.Cryptography.CryptoAPITransform> class.</span></span>  
  
 [!code-cpp[System.Security.Cryptography.CryptoAPITransform#9](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.CryptoAPITransform/CPP/members.cpp#9)]
 [!code-csharp[System.Security.Cryptography.CryptoAPITransform#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.CryptoAPITransform/CS/members.cs#9)]
 [!code-vb[System.Security.Cryptography.CryptoAPITransform#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.CryptoAPITransform/VB/members.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a011c-172">
          <paramref name="inputBuffer" /> 参数为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="a011c-172">The <paramref name="inputBuffer" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a011c-173"><paramref name="inputOffset" /> 参数小于零。</span><span class="sxs-lookup"><span data-stu-id="a011c-173">The <paramref name="inputOffset" /> parameter is less than zero.</span></span>  
  
<span data-ttu-id="a011c-174">- 或 -</span><span class="sxs-lookup"><span data-stu-id="a011c-174">-or-</span></span> 
<span data-ttu-id="a011c-175"><paramref name="inputCount" /> 参数小于零。</span><span class="sxs-lookup"><span data-stu-id="a011c-175">The <paramref name="inputCount" /> parameter is less than zero.</span></span>  
  
<span data-ttu-id="a011c-176">- 或 -</span><span class="sxs-lookup"><span data-stu-id="a011c-176">-or-</span></span> 
<span data-ttu-id="a011c-177">输入缓冲区的长度小于输入偏移量和输入计数之和。</span><span class="sxs-lookup"><span data-stu-id="a011c-177">The length of the input buffer is less than the sum of the input offset and the input count.</span></span></exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="a011c-178"><see cref="F:System.Security.Cryptography.PaddingMode.PKCS7" /> 填充无效。</span><span class="sxs-lookup"><span data-stu-id="a011c-178">The <see cref="F:System.Security.Cryptography.PaddingMode.PKCS7" /> padding is invalid.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="a011c-179"><paramref name="inputOffset" /> 参数超出范围。</span><span class="sxs-lookup"><span data-stu-id="a011c-179">The <paramref name="inputOffset" /> parameter is out of range.</span></span> <span data-ttu-id="a011c-180">此参数需要非负数。</span><span class="sxs-lookup"><span data-stu-id="a011c-180">This parameter requires a non-negative number.</span></span></exception>
        <related type="Article" href="/dotnet/standard/security/cryptographic-services"><span data-ttu-id="a011c-181">加密服务</span><span class="sxs-lookup"><span data-stu-id="a011c-181">Cryptographic Services</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>
