<Type Name="ProjectGraph" FullName="Microsoft.Build.Graph.ProjectGraph">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e1a9acb04a0ec80116521a1608c81b0882b38d1d" /><Meta Name="ms.sourcegitcommit" Value="02dd069b9696eb4eee675b6541f86b2602076448" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="10/20/2020" /><Meta Name="ms.locfileid" Value="92232454" /></Metadata><TypeSignature Language="C#" Value="public sealed class ProjectGraph" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ProjectGraph extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Build.Graph.ProjectGraph" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ProjectGraph" />
  <TypeSignature Language="C++ CLI" Value="public ref class ProjectGraph sealed" />
  <TypeSignature Language="F#" Value="type ProjectGraph = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Build</AssemblyName>
    <AssemblyVersion>15.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.Diagnostics.DebuggerDisplay("#roots={GraphRoots.Count}, #nodes={ProjectNodes.Count}, #entryPoints={EntryPointNodes.Count}")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerDisplay("#roots={GraphRoots.Count}, #nodes={ProjectNodes.Count}, #entryPoints={EntryPointNodes.Count}")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="a1f05-101">表示计算项目的关系图。</span><span class="sxs-lookup"><span data-stu-id="a1f05-101">Represents a graph of evaluated projects.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ProjectGraph (Microsoft.Build.Graph.ProjectGraphEntryPoint entryPoint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype Microsoft.Build.Graph.ProjectGraphEntryPoint entryPoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Graph.ProjectGraph.#ctor(Microsoft.Build.Graph.ProjectGraphEntryPoint)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (entryPoint As ProjectGraphEntryPoint)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ProjectGraph(Microsoft::Build::Graph::ProjectGraphEntryPoint entryPoint);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Graph.ProjectGraph : Microsoft.Build.Graph.ProjectGraphEntryPoint -&gt; Microsoft.Build.Graph.ProjectGraph" Usage="new Microsoft.Build.Graph.ProjectGraph entryPoint" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="entryPoint" Type="Microsoft.Build.Graph.ProjectGraphEntryPoint" />
      </Parameters>
      <Docs>
        <param name="entryPoint"><span data-ttu-id="a1f05-102">要在构造关系图时使用的入口点</span><span class="sxs-lookup"><span data-stu-id="a1f05-102">The entry point to use in constructing the graph</span></span></param>
        <summary><span data-ttu-id="a1f05-103">构造从给定关系图入口点开始的关系图，使用全局项目集合进行计算。</span><span class="sxs-lookup"><span data-stu-id="a1f05-103">Constructs a graph starting from the given graph entry point, evaluating with the global project collection.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:Microsoft.Build.Exceptions.InvalidProjectFileException"><span data-ttu-id="a1f05-104">如果关系图中任何项目的计算失败</span><span class="sxs-lookup"><span data-stu-id="a1f05-104">If the evaluation of any project in the graph fails</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ProjectGraph (System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Graph.ProjectGraphEntryPoint&gt; entryPoints);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;valuetype Microsoft.Build.Graph.ProjectGraphEntryPoint&gt; entryPoints) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Graph.ProjectGraph.#ctor(System.Collections.Generic.IEnumerable{Microsoft.Build.Graph.ProjectGraphEntryPoint})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (entryPoints As IEnumerable(Of ProjectGraphEntryPoint))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ProjectGraph(System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Graph::ProjectGraphEntryPoint&gt; ^ entryPoints);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Graph.ProjectGraph : seq&lt;Microsoft.Build.Graph.ProjectGraphEntryPoint&gt; -&gt; Microsoft.Build.Graph.ProjectGraph" Usage="new Microsoft.Build.Graph.ProjectGraph entryPoints" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="entryPoints" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Graph.ProjectGraphEntryPoint&gt;" />
      </Parameters>
      <Docs>
        <param name="entryPoints"><span data-ttu-id="a1f05-105">要在构造关系图时使用的入口点</span><span class="sxs-lookup"><span data-stu-id="a1f05-105">The entry points to use in constructing the graph</span></span></param>
        <summary><span data-ttu-id="a1f05-106">构造从给定关系图入口点开始的关系图，使用全局项目集合进行计算。</span><span class="sxs-lookup"><span data-stu-id="a1f05-106">Constructs a graph starting from the given graph entry points, evaluating with the global project collection.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:Microsoft.Build.Exceptions.InvalidProjectFileException"><span data-ttu-id="a1f05-107">如果关系图中任何项目的计算失败</span><span class="sxs-lookup"><span data-stu-id="a1f05-107">If the evaluation of any project in the graph fails</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ProjectGraph (System.Collections.Generic.IEnumerable&lt;string&gt; entryProjectFiles);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;string&gt; entryProjectFiles) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Graph.ProjectGraph.#ctor(System.Collections.Generic.IEnumerable{System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (entryProjectFiles As IEnumerable(Of String))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ProjectGraph(System::Collections::Generic::IEnumerable&lt;System::String ^&gt; ^ entryProjectFiles);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Graph.ProjectGraph : seq&lt;string&gt; -&gt; Microsoft.Build.Graph.ProjectGraph" Usage="new Microsoft.Build.Graph.ProjectGraph entryProjectFiles" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="entryProjectFiles" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="entryProjectFiles"><span data-ttu-id="a1f05-108">要在构造关系图时用作入口点的项目文件</span><span class="sxs-lookup"><span data-stu-id="a1f05-108">The project files to use as the entry points in constructing the graph</span></span></param>
        <summary><span data-ttu-id="a1f05-109">构造从给定项目文件开始的关系图，使用全局项目集合而不使用全局属性进行计算。</span><span class="sxs-lookup"><span data-stu-id="a1f05-109">Constructs a graph starting from the given project files, evaluating with the global project collection and no global properties.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:Microsoft.Build.Exceptions.InvalidProjectFileException"><span data-ttu-id="a1f05-110">如果关系图中任何项目的计算失败</span><span class="sxs-lookup"><span data-stu-id="a1f05-110">If the evaluation of any project in the graph fails</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ProjectGraph (string entryProjectFile);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string entryProjectFile) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Graph.ProjectGraph.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (entryProjectFile As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ProjectGraph(System::String ^ entryProjectFile);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Graph.ProjectGraph : string -&gt; Microsoft.Build.Graph.ProjectGraph" Usage="new Microsoft.Build.Graph.ProjectGraph entryProjectFile" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="entryProjectFile" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="entryProjectFile"><span data-ttu-id="a1f05-111">要在构造关系图时用作入口点的项目文件</span><span class="sxs-lookup"><span data-stu-id="a1f05-111">The project file to use as the entry point in constructing the graph</span></span></param>
        <summary><span data-ttu-id="a1f05-112">构造从给定项目文件开始的关系图，使用全局项目集合而不使用全局属性进行计算。</span><span class="sxs-lookup"><span data-stu-id="a1f05-112">Constructs a graph starting from the given project file, evaluating with the global project collection and no global properties.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:Microsoft.Build.Exceptions.InvalidProjectFileException"><span data-ttu-id="a1f05-113">如果关系图中任何项目的计算失败</span><span class="sxs-lookup"><span data-stu-id="a1f05-113">If the evaluation of any project in the graph fails</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ProjectGraph (Microsoft.Build.Graph.ProjectGraphEntryPoint entryPoint, Microsoft.Build.Evaluation.ProjectCollection projectCollection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype Microsoft.Build.Graph.ProjectGraphEntryPoint entryPoint, class Microsoft.Build.Evaluation.ProjectCollection projectCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Graph.ProjectGraph.#ctor(Microsoft.Build.Graph.ProjectGraphEntryPoint,Microsoft.Build.Evaluation.ProjectCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (entryPoint As ProjectGraphEntryPoint, projectCollection As ProjectCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ProjectGraph(Microsoft::Build::Graph::ProjectGraphEntryPoint entryPoint, Microsoft::Build::Evaluation::ProjectCollection ^ projectCollection);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Graph.ProjectGraph : Microsoft.Build.Graph.ProjectGraphEntryPoint * Microsoft.Build.Evaluation.ProjectCollection -&gt; Microsoft.Build.Graph.ProjectGraph" Usage="new Microsoft.Build.Graph.ProjectGraph (entryPoint, projectCollection)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="entryPoint" Type="Microsoft.Build.Graph.ProjectGraphEntryPoint" />
        <Parameter Name="projectCollection" Type="Microsoft.Build.Evaluation.ProjectCollection" />
      </Parameters>
      <Docs>
        <param name="entryPoint"><span data-ttu-id="a1f05-114">要在构造关系图时使用的入口点</span><span class="sxs-lookup"><span data-stu-id="a1f05-114">The entry point to use in constructing the graph</span></span></param>
        <param name="projectCollection"><span data-ttu-id="a1f05-115">应与关系图中的所有项目关联的集合。</span><span class="sxs-lookup"><span data-stu-id="a1f05-115">The collection with which all projects in the graph should be associated.</span></span> <span data-ttu-id="a1f05-116">不能为 null。</span><span class="sxs-lookup"><span data-stu-id="a1f05-116">May not be null.</span></span></param>
        <summary><span data-ttu-id="a1f05-117">构造从给定关系图入口点开始的关系图，使用提供的项目集合进行计算。</span><span class="sxs-lookup"><span data-stu-id="a1f05-117">Constructs a graph starting from the given graph entry point, evaluating with the provided project collection.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:Microsoft.Build.Exceptions.InvalidProjectFileException"><span data-ttu-id="a1f05-118">如果关系图中任何项目的计算失败</span><span class="sxs-lookup"><span data-stu-id="a1f05-118">If the evaluation of any project in the graph fails</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ProjectGraph (System.Collections.Generic.IEnumerable&lt;string&gt; entryProjectFiles, Microsoft.Build.Evaluation.ProjectCollection projectCollection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;string&gt; entryProjectFiles, class Microsoft.Build.Evaluation.ProjectCollection projectCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Graph.ProjectGraph.#ctor(System.Collections.Generic.IEnumerable{System.String},Microsoft.Build.Evaluation.ProjectCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (entryProjectFiles As IEnumerable(Of String), projectCollection As ProjectCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ProjectGraph(System::Collections::Generic::IEnumerable&lt;System::String ^&gt; ^ entryProjectFiles, Microsoft::Build::Evaluation::ProjectCollection ^ projectCollection);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Graph.ProjectGraph : seq&lt;string&gt; * Microsoft.Build.Evaluation.ProjectCollection -&gt; Microsoft.Build.Graph.ProjectGraph" Usage="new Microsoft.Build.Graph.ProjectGraph (entryProjectFiles, projectCollection)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="entryProjectFiles" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="projectCollection" Type="Microsoft.Build.Evaluation.ProjectCollection" />
      </Parameters>
      <Docs>
        <param name="entryProjectFiles"><span data-ttu-id="a1f05-119">要在构造关系图时用作入口点的项目文件</span><span class="sxs-lookup"><span data-stu-id="a1f05-119">The project files to use as the entry points in constructing the graph</span></span></param>
        <param name="projectCollection"><span data-ttu-id="a1f05-120">应与关系图中的所有项目关联的集合。</span><span class="sxs-lookup"><span data-stu-id="a1f05-120">The collection with which all projects in the graph should be associated.</span></span> <span data-ttu-id="a1f05-121">不能为 null。</span><span class="sxs-lookup"><span data-stu-id="a1f05-121">May not be null.</span></span></param>
        <summary><span data-ttu-id="a1f05-122">构造从给定项目文件开始的关系图，使用提供的项目集合而不使用全局属性进行计算。</span><span class="sxs-lookup"><span data-stu-id="a1f05-122">Constructs a graph starting from the given project files, evaluating with the provided project collection and no global properties.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:Microsoft.Build.Exceptions.InvalidProjectFileException"><span data-ttu-id="a1f05-123">如果关系图中任何项目的计算失败</span><span class="sxs-lookup"><span data-stu-id="a1f05-123">If the evaluation of any project in the graph fails</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ProjectGraph (System.Collections.Generic.IEnumerable&lt;string&gt; entryProjectFiles, System.Collections.Generic.IDictionary&lt;string,string&gt; globalProperties);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;string&gt; entryProjectFiles, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; globalProperties) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Graph.ProjectGraph.#ctor(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IDictionary{System.String,System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (entryProjectFiles As IEnumerable(Of String), globalProperties As IDictionary(Of String, String))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ProjectGraph(System::Collections::Generic::IEnumerable&lt;System::String ^&gt; ^ entryProjectFiles, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ globalProperties);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Graph.ProjectGraph : seq&lt;string&gt; * System.Collections.Generic.IDictionary&lt;string, string&gt; -&gt; Microsoft.Build.Graph.ProjectGraph" Usage="new Microsoft.Build.Graph.ProjectGraph (entryProjectFiles, globalProperties)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="entryProjectFiles" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="globalProperties" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="entryProjectFiles"><span data-ttu-id="a1f05-124">要在构造关系图时用作入口点的项目文件</span><span class="sxs-lookup"><span data-stu-id="a1f05-124">The project files to use as the entry points in constructing the graph</span></span></param>
        <param name="globalProperties"><span data-ttu-id="a1f05-125">用于所有项目的全局属性。</span><span class="sxs-lookup"><span data-stu-id="a1f05-125">The global properties to use for all projects.</span></span> <span data-ttu-id="a1f05-126">可能为 null，在这种情况下不会设置任何全局属性。</span><span class="sxs-lookup"><span data-stu-id="a1f05-126">May be null, in which case no global properties will be set.</span></span></param>
        <summary><span data-ttu-id="a1f05-127">构造从给定项目文件开始的关系图，使用提供的全局属性和全局项目集合进行计算。</span><span class="sxs-lookup"><span data-stu-id="a1f05-127">Constructs a graph starting from the given project files, evaluating with the provided global properties and the global project collection.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:Microsoft.Build.Exceptions.InvalidProjectFileException"><span data-ttu-id="a1f05-128">如果关系图中任何项目的计算失败</span><span class="sxs-lookup"><span data-stu-id="a1f05-128">If the evaluation of any project in the graph fails</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ProjectGraph (string entryProjectFile, Microsoft.Build.Evaluation.ProjectCollection projectCollection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string entryProjectFile, class Microsoft.Build.Evaluation.ProjectCollection projectCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Graph.ProjectGraph.#ctor(System.String,Microsoft.Build.Evaluation.ProjectCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (entryProjectFile As String, projectCollection As ProjectCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ProjectGraph(System::String ^ entryProjectFile, Microsoft::Build::Evaluation::ProjectCollection ^ projectCollection);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Graph.ProjectGraph : string * Microsoft.Build.Evaluation.ProjectCollection -&gt; Microsoft.Build.Graph.ProjectGraph" Usage="new Microsoft.Build.Graph.ProjectGraph (entryProjectFile, projectCollection)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="entryProjectFile" Type="System.String" />
        <Parameter Name="projectCollection" Type="Microsoft.Build.Evaluation.ProjectCollection" />
      </Parameters>
      <Docs>
        <param name="entryProjectFile"><span data-ttu-id="a1f05-129">要在构造关系图时用作入口点的项目文件</span><span class="sxs-lookup"><span data-stu-id="a1f05-129">The project file to use as the entry point in constructing the graph</span></span></param>
        <param name="projectCollection"><span data-ttu-id="a1f05-130">应与关系图中的所有项目关联的集合。</span><span class="sxs-lookup"><span data-stu-id="a1f05-130">The collection with which all projects in the graph should be associated.</span></span> <span data-ttu-id="a1f05-131">不能为 null。</span><span class="sxs-lookup"><span data-stu-id="a1f05-131">May not be null.</span></span></param>
        <summary><span data-ttu-id="a1f05-132">构造从给定项目文件开始的关系图，使用提供的项目集合而不使用全局属性进行计算。</span><span class="sxs-lookup"><span data-stu-id="a1f05-132">Constructs a graph starting from the given project file, evaluating with the provided project collection and no global properties.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:Microsoft.Build.Exceptions.InvalidProjectFileException"><span data-ttu-id="a1f05-133">如果关系图中任何项目的计算失败</span><span class="sxs-lookup"><span data-stu-id="a1f05-133">If the evaluation of any project in the graph fails</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ProjectGraph (string entryProjectFile, System.Collections.Generic.IDictionary&lt;string,string&gt; globalProperties);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string entryProjectFile, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; globalProperties) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Graph.ProjectGraph.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (entryProjectFile As String, globalProperties As IDictionary(Of String, String))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ProjectGraph(System::String ^ entryProjectFile, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ globalProperties);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Graph.ProjectGraph : string * System.Collections.Generic.IDictionary&lt;string, string&gt; -&gt; Microsoft.Build.Graph.ProjectGraph" Usage="new Microsoft.Build.Graph.ProjectGraph (entryProjectFile, globalProperties)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="entryProjectFile" Type="System.String" />
        <Parameter Name="globalProperties" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="entryProjectFile"><span data-ttu-id="a1f05-134">要在构造关系图时用作入口点的项目文件</span><span class="sxs-lookup"><span data-stu-id="a1f05-134">The project file to use as the entry point in constructing the graph</span></span></param>
        <param name="globalProperties"><span data-ttu-id="a1f05-135">用于所有项目的全局属性。</span><span class="sxs-lookup"><span data-stu-id="a1f05-135">The global properties to use for all projects.</span></span> <span data-ttu-id="a1f05-136">可能为 null，在这种情况下不会设置任何全局属性。</span><span class="sxs-lookup"><span data-stu-id="a1f05-136">May be null, in which case no global properties will be set.</span></span></param>
        <summary><span data-ttu-id="a1f05-137">构造从给定项目文件开始的关系图，使用提供的全局属性和全局项目集合进行计算。</span><span class="sxs-lookup"><span data-stu-id="a1f05-137">Constructs a graph starting from the given project file, evaluating with the provided global properties and the global project collection.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:Microsoft.Build.Exceptions.InvalidProjectFileException"><span data-ttu-id="a1f05-138">如果关系图中任何项目的计算失败</span><span class="sxs-lookup"><span data-stu-id="a1f05-138">If the evaluation of any project in the graph fails</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ProjectGraph (System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Graph.ProjectGraphEntryPoint&gt; entryPoints, Microsoft.Build.Evaluation.ProjectCollection projectCollection, Microsoft.Build.Graph.ProjectGraph.ProjectInstanceFactoryFunc projectInstanceFactory);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;valuetype Microsoft.Build.Graph.ProjectGraphEntryPoint&gt; entryPoints, class Microsoft.Build.Evaluation.ProjectCollection projectCollection, class Microsoft.Build.Graph.ProjectGraph/ProjectInstanceFactoryFunc projectInstanceFactory) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Graph.ProjectGraph.#ctor(System.Collections.Generic.IEnumerable{Microsoft.Build.Graph.ProjectGraphEntryPoint},Microsoft.Build.Evaluation.ProjectCollection,Microsoft.Build.Graph.ProjectGraph.ProjectInstanceFactoryFunc)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (entryPoints As IEnumerable(Of ProjectGraphEntryPoint), projectCollection As ProjectCollection, projectInstanceFactory As ProjectGraph.ProjectInstanceFactoryFunc)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ProjectGraph(System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Graph::ProjectGraphEntryPoint&gt; ^ entryPoints, Microsoft::Build::Evaluation::ProjectCollection ^ projectCollection, Microsoft::Build::Graph::ProjectGraph::ProjectInstanceFactoryFunc ^ projectInstanceFactory);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Graph.ProjectGraph : seq&lt;Microsoft.Build.Graph.ProjectGraphEntryPoint&gt; * Microsoft.Build.Evaluation.ProjectCollection * Microsoft.Build.Graph.ProjectGraph.ProjectInstanceFactoryFunc -&gt; Microsoft.Build.Graph.ProjectGraph" Usage="new Microsoft.Build.Graph.ProjectGraph (entryPoints, projectCollection, projectInstanceFactory)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="entryPoints" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Graph.ProjectGraphEntryPoint&gt;" />
        <Parameter Name="projectCollection" Type="Microsoft.Build.Evaluation.ProjectCollection" />
        <Parameter Name="projectInstanceFactory" Type="Microsoft.Build.Graph.ProjectGraph+ProjectInstanceFactoryFunc" />
      </Parameters>
      <Docs>
        <param name="entryPoints"><span data-ttu-id="a1f05-139">要在构造关系图时使用的入口点</span><span class="sxs-lookup"><span data-stu-id="a1f05-139">The entry points to use in constructing the graph</span></span></param>
        <param name="projectCollection"><span data-ttu-id="a1f05-140">应与关系图中的所有项目关联的集合。</span><span class="sxs-lookup"><span data-stu-id="a1f05-140">The collection with which all projects in the graph should be associated.</span></span> <span data-ttu-id="a1f05-141">不能为 null。</span><span class="sxs-lookup"><span data-stu-id="a1f05-141">May not be null.</span></span></param>
        <param name="projectInstanceFactory"><span data-ttu-id="a1f05-142">用于构造 <see cref="T:Microsoft.Build.Execution.ProjectInstance" /> 的委托，为在关系图创建期间创建的每个项目调用。</span><span class="sxs-lookup"><span data-stu-id="a1f05-142">A delegate used for constructing a <see cref="T:Microsoft.Build.Execution.ProjectInstance" />, called for each project created during graph creation.</span></span> <span data-ttu-id="a1f05-143">此值可以为 null，它使用调用 ProjectInstance 构造函数的默认实现。</span><span class="sxs-lookup"><span data-stu-id="a1f05-143">This value can be null, which uses a default implementation that calls the ProjectInstance constructor.</span></span> <span data-ttu-id="a1f05-144">对于其他情况，请参阅有关 <see cref="T:Microsoft.Build.Graph.ProjectGraph.ProjectInstanceFactoryFunc" /> 的备注。</span><span class="sxs-lookup"><span data-stu-id="a1f05-144">See the remarks on <see cref="T:Microsoft.Build.Graph.ProjectGraph.ProjectInstanceFactoryFunc" /> for other scenarios.</span></span></param>
        <summary><span data-ttu-id="a1f05-145">构造从给定关系图入口点开始的关系图，使用提供的项目集合进行计算。</span><span class="sxs-lookup"><span data-stu-id="a1f05-145">Constructs a graph starting from the given graph entry points, evaluating with the provided project collection.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:Microsoft.Build.Exceptions.InvalidProjectFileException"><span data-ttu-id="a1f05-146">如果关系图中任何项目的计算失败</span><span class="sxs-lookup"><span data-stu-id="a1f05-146">If the evaluation of any project in the graph fails</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a1f05-147">如果从 <paramref name="projectInstanceFactory" /> 返回空引用</span><span class="sxs-lookup"><span data-stu-id="a1f05-147">If a null reference is returned from <paramref name="projectInstanceFactory" /></span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ProjectGraph (System.Collections.Generic.IEnumerable&lt;string&gt; entryProjectFiles, System.Collections.Generic.IDictionary&lt;string,string&gt; globalProperties, Microsoft.Build.Evaluation.ProjectCollection projectCollection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;string&gt; entryProjectFiles, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; globalProperties, class Microsoft.Build.Evaluation.ProjectCollection projectCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Graph.ProjectGraph.#ctor(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IDictionary{System.String,System.String},Microsoft.Build.Evaluation.ProjectCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (entryProjectFiles As IEnumerable(Of String), globalProperties As IDictionary(Of String, String), projectCollection As ProjectCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ProjectGraph(System::Collections::Generic::IEnumerable&lt;System::String ^&gt; ^ entryProjectFiles, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ globalProperties, Microsoft::Build::Evaluation::ProjectCollection ^ projectCollection);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Graph.ProjectGraph : seq&lt;string&gt; * System.Collections.Generic.IDictionary&lt;string, string&gt; * Microsoft.Build.Evaluation.ProjectCollection -&gt; Microsoft.Build.Graph.ProjectGraph" Usage="new Microsoft.Build.Graph.ProjectGraph (entryProjectFiles, globalProperties, projectCollection)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="entryProjectFiles" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="globalProperties" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="projectCollection" Type="Microsoft.Build.Evaluation.ProjectCollection" />
      </Parameters>
      <Docs>
        <param name="entryProjectFiles"><span data-ttu-id="a1f05-148">要在构造关系图时用作入口点的项目文件</span><span class="sxs-lookup"><span data-stu-id="a1f05-148">The project files to use as the entry points in constructing the graph</span></span></param>
        <param name="globalProperties"><span data-ttu-id="a1f05-149">用于所有项目的全局属性。</span><span class="sxs-lookup"><span data-stu-id="a1f05-149">The global properties to use for all projects.</span></span> <span data-ttu-id="a1f05-150">可能为 null，在这种情况下不会设置任何全局属性。</span><span class="sxs-lookup"><span data-stu-id="a1f05-150">May be null, in which case no global properties will be set.</span></span></param>
        <param name="projectCollection"><span data-ttu-id="a1f05-151">应与关系图中的所有项目关联的集合。</span><span class="sxs-lookup"><span data-stu-id="a1f05-151">The collection with which all projects in the graph should be associated.</span></span> <span data-ttu-id="a1f05-152">不能为 null。</span><span class="sxs-lookup"><span data-stu-id="a1f05-152">May not be null.</span></span></param>
        <summary><span data-ttu-id="a1f05-153">构造从给定项目文件开始的关系图，使用提供的全局属性和提供的项目集合进行计算。</span><span class="sxs-lookup"><span data-stu-id="a1f05-153">Constructs a graph starting from the given project files, evaluating with the provided global properties and the provided project collection.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:Microsoft.Build.Exceptions.InvalidProjectFileException"><span data-ttu-id="a1f05-154">如果关系图中任何项目的计算失败</span><span class="sxs-lookup"><span data-stu-id="a1f05-154">If the evaluation of any project in the graph fails</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ProjectGraph (string entryProjectFile, Microsoft.Build.Evaluation.ProjectCollection projectCollection, Microsoft.Build.Graph.ProjectGraph.ProjectInstanceFactoryFunc projectInstanceFactory);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string entryProjectFile, class Microsoft.Build.Evaluation.ProjectCollection projectCollection, class Microsoft.Build.Graph.ProjectGraph/ProjectInstanceFactoryFunc projectInstanceFactory) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Graph.ProjectGraph.#ctor(System.String,Microsoft.Build.Evaluation.ProjectCollection,Microsoft.Build.Graph.ProjectGraph.ProjectInstanceFactoryFunc)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (entryProjectFile As String, projectCollection As ProjectCollection, projectInstanceFactory As ProjectGraph.ProjectInstanceFactoryFunc)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ProjectGraph(System::String ^ entryProjectFile, Microsoft::Build::Evaluation::ProjectCollection ^ projectCollection, Microsoft::Build::Graph::ProjectGraph::ProjectInstanceFactoryFunc ^ projectInstanceFactory);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Graph.ProjectGraph : string * Microsoft.Build.Evaluation.ProjectCollection * Microsoft.Build.Graph.ProjectGraph.ProjectInstanceFactoryFunc -&gt; Microsoft.Build.Graph.ProjectGraph" Usage="new Microsoft.Build.Graph.ProjectGraph (entryProjectFile, projectCollection, projectInstanceFactory)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="entryProjectFile" Type="System.String" />
        <Parameter Name="projectCollection" Type="Microsoft.Build.Evaluation.ProjectCollection" />
        <Parameter Name="projectInstanceFactory" Type="Microsoft.Build.Graph.ProjectGraph+ProjectInstanceFactoryFunc" />
      </Parameters>
      <Docs>
        <param name="entryProjectFile">To be added.</param>
        <param name="projectCollection">To be added.</param>
        <param name="projectInstanceFactory">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ProjectGraph (string entryProjectFile, System.Collections.Generic.IDictionary&lt;string,string&gt; globalProperties, Microsoft.Build.Evaluation.ProjectCollection projectCollection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string entryProjectFile, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; globalProperties, class Microsoft.Build.Evaluation.ProjectCollection projectCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Graph.ProjectGraph.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String},Microsoft.Build.Evaluation.ProjectCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (entryProjectFile As String, globalProperties As IDictionary(Of String, String), projectCollection As ProjectCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ProjectGraph(System::String ^ entryProjectFile, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ globalProperties, Microsoft::Build::Evaluation::ProjectCollection ^ projectCollection);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Graph.ProjectGraph : string * System.Collections.Generic.IDictionary&lt;string, string&gt; * Microsoft.Build.Evaluation.ProjectCollection -&gt; Microsoft.Build.Graph.ProjectGraph" Usage="new Microsoft.Build.Graph.ProjectGraph (entryProjectFile, globalProperties, projectCollection)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="entryProjectFile" Type="System.String" />
        <Parameter Name="globalProperties" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="projectCollection" Type="Microsoft.Build.Evaluation.ProjectCollection" />
      </Parameters>
      <Docs>
        <param name="entryProjectFile"><span data-ttu-id="a1f05-155">要在构造关系图时用作入口点的项目文件</span><span class="sxs-lookup"><span data-stu-id="a1f05-155">The project file to use as the entry point in constructing the graph</span></span></param>
        <param name="globalProperties"><span data-ttu-id="a1f05-156">用于所有项目的全局属性。</span><span class="sxs-lookup"><span data-stu-id="a1f05-156">The global properties to use for all projects.</span></span> <span data-ttu-id="a1f05-157">可能为 null，在这种情况下不会设置任何全局属性。</span><span class="sxs-lookup"><span data-stu-id="a1f05-157">May be null, in which case no global properties will be set.</span></span></param>
        <param name="projectCollection"><span data-ttu-id="a1f05-158">应与关系图中的所有项目关联的集合。</span><span class="sxs-lookup"><span data-stu-id="a1f05-158">The collection with which all projects in the graph should be associated.</span></span> <span data-ttu-id="a1f05-159">不能为 null。</span><span class="sxs-lookup"><span data-stu-id="a1f05-159">May not be null.</span></span></param>
        <summary><span data-ttu-id="a1f05-160">构造从给定项目文件开始的关系图，使用提供的全局属性和提供的项目集合进行计算。</span><span class="sxs-lookup"><span data-stu-id="a1f05-160">Constructs a graph starting from the given project file, evaluating with the provided global properties and the provided project collection.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:Microsoft.Build.Exceptions.InvalidProjectFileException"><span data-ttu-id="a1f05-161">如果关系图中任何项目的计算失败</span><span class="sxs-lookup"><span data-stu-id="a1f05-161">If the evaluation of any project in the graph fails</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ProjectGraph (System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Graph.ProjectGraphEntryPoint&gt; entryPoints, Microsoft.Build.Evaluation.ProjectCollection projectCollection, Microsoft.Build.Graph.ProjectGraph.ProjectInstanceFactoryFunc projectInstanceFactory, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;valuetype Microsoft.Build.Graph.ProjectGraphEntryPoint&gt; entryPoints, class Microsoft.Build.Evaluation.ProjectCollection projectCollection, class Microsoft.Build.Graph.ProjectGraph/ProjectInstanceFactoryFunc projectInstanceFactory, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Graph.ProjectGraph.#ctor(System.Collections.Generic.IEnumerable{Microsoft.Build.Graph.ProjectGraphEntryPoint},Microsoft.Build.Evaluation.ProjectCollection,Microsoft.Build.Graph.ProjectGraph.ProjectInstanceFactoryFunc,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (entryPoints As IEnumerable(Of ProjectGraphEntryPoint), projectCollection As ProjectCollection, projectInstanceFactory As ProjectGraph.ProjectInstanceFactoryFunc, cancellationToken As CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ProjectGraph(System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Graph::ProjectGraphEntryPoint&gt; ^ entryPoints, Microsoft::Build::Evaluation::ProjectCollection ^ projectCollection, Microsoft::Build::Graph::ProjectGraph::ProjectInstanceFactoryFunc ^ projectInstanceFactory, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Graph.ProjectGraph : seq&lt;Microsoft.Build.Graph.ProjectGraphEntryPoint&gt; * Microsoft.Build.Evaluation.ProjectCollection * Microsoft.Build.Graph.ProjectGraph.ProjectInstanceFactoryFunc * System.Threading.CancellationToken -&gt; Microsoft.Build.Graph.ProjectGraph" Usage="new Microsoft.Build.Graph.ProjectGraph (entryPoints, projectCollection, projectInstanceFactory, cancellationToken)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="entryPoints" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Graph.ProjectGraphEntryPoint&gt;" />
        <Parameter Name="projectCollection" Type="Microsoft.Build.Evaluation.ProjectCollection" />
        <Parameter Name="projectInstanceFactory" Type="Microsoft.Build.Graph.ProjectGraph+ProjectInstanceFactoryFunc" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="entryPoints"><span data-ttu-id="a1f05-162">要在构造关系图时使用的入口点</span><span class="sxs-lookup"><span data-stu-id="a1f05-162">The entry points to use in constructing the graph</span></span></param>
        <param name="projectCollection"><span data-ttu-id="a1f05-163">应与关系图中的所有项目关联的集合。</span><span class="sxs-lookup"><span data-stu-id="a1f05-163">The collection with which all projects in the graph should be associated.</span></span> <span data-ttu-id="a1f05-164">不能为 null。</span><span class="sxs-lookup"><span data-stu-id="a1f05-164">May not be null.</span></span></param>
        <param name="projectInstanceFactory"><span data-ttu-id="a1f05-165">用于构造 <see cref="T:Microsoft.Build.Execution.ProjectInstance" /> 的委托，为在关系图创建期间创建的每个项目调用。</span><span class="sxs-lookup"><span data-stu-id="a1f05-165">A delegate used for constructing a <see cref="T:Microsoft.Build.Execution.ProjectInstance" />, called for each project created during graph creation.</span></span> <span data-ttu-id="a1f05-166">此值可以为 null，它使用调用 ProjectInstance 构造函数的默认实现。</span><span class="sxs-lookup"><span data-stu-id="a1f05-166">This value can be null, which uses a default implementation that calls the ProjectInstance constructor.</span></span> <span data-ttu-id="a1f05-167">对于其他情况，请参阅有关 <see cref="T:Microsoft.Build.Graph.ProjectGraph.ProjectInstanceFactoryFunc" /> 的备注。</span><span class="sxs-lookup"><span data-stu-id="a1f05-167">See the remarks on <see cref="T:Microsoft.Build.Graph.ProjectGraph.ProjectInstanceFactoryFunc" /> for other scenarios.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="a1f05-168">要观察的 <see cref="T:System.Threading.CancellationToken" /> 标记。</span><span class="sxs-lookup"><span data-stu-id="a1f05-168">The <see cref="T:System.Threading.CancellationToken" /> token to observe.</span></span></param>
        <summary><span data-ttu-id="a1f05-169">构造从给定关系图入口点开始的关系图，使用提供的项目集合进行计算。</span><span class="sxs-lookup"><span data-stu-id="a1f05-169">Constructs a graph starting from the given graph entry points, evaluating with the provided project collection.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:Microsoft.Build.Exceptions.InvalidProjectFileException"><span data-ttu-id="a1f05-170">如果关系图中任何项目的计算失败</span><span class="sxs-lookup"><span data-stu-id="a1f05-170">If the evaluation of any project in the graph fails</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a1f05-171">如果从 <paramref name="projectInstanceFactory" /> 返回空引用</span><span class="sxs-lookup"><span data-stu-id="a1f05-171">If a null reference is returned from <paramref name="projectInstanceFactory" /></span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ProjectGraph (System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Graph.ProjectGraphEntryPoint&gt; entryPoints, Microsoft.Build.Evaluation.ProjectCollection projectCollection, Microsoft.Build.Graph.ProjectGraph.ProjectInstanceFactoryFunc projectInstanceFactory, int degreeOfParallelism, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;valuetype Microsoft.Build.Graph.ProjectGraphEntryPoint&gt; entryPoints, class Microsoft.Build.Evaluation.ProjectCollection projectCollection, class Microsoft.Build.Graph.ProjectGraph/ProjectInstanceFactoryFunc projectInstanceFactory, int32 degreeOfParallelism, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Graph.ProjectGraph.#ctor(System.Collections.Generic.IEnumerable{Microsoft.Build.Graph.ProjectGraphEntryPoint},Microsoft.Build.Evaluation.ProjectCollection,Microsoft.Build.Graph.ProjectGraph.ProjectInstanceFactoryFunc,System.Int32,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (entryPoints As IEnumerable(Of ProjectGraphEntryPoint), projectCollection As ProjectCollection, projectInstanceFactory As ProjectGraph.ProjectInstanceFactoryFunc, degreeOfParallelism As Integer, cancellationToken As CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ProjectGraph(System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Graph::ProjectGraphEntryPoint&gt; ^ entryPoints, Microsoft::Build::Evaluation::ProjectCollection ^ projectCollection, Microsoft::Build::Graph::ProjectGraph::ProjectInstanceFactoryFunc ^ projectInstanceFactory, int degreeOfParallelism, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Graph.ProjectGraph : seq&lt;Microsoft.Build.Graph.ProjectGraphEntryPoint&gt; * Microsoft.Build.Evaluation.ProjectCollection * Microsoft.Build.Graph.ProjectGraph.ProjectInstanceFactoryFunc * int * System.Threading.CancellationToken -&gt; Microsoft.Build.Graph.ProjectGraph" Usage="new Microsoft.Build.Graph.ProjectGraph (entryPoints, projectCollection, projectInstanceFactory, degreeOfParallelism, cancellationToken)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="entryPoints" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Graph.ProjectGraphEntryPoint&gt;" />
        <Parameter Name="projectCollection" Type="Microsoft.Build.Evaluation.ProjectCollection" />
        <Parameter Name="projectInstanceFactory" Type="Microsoft.Build.Graph.ProjectGraph+ProjectInstanceFactoryFunc" />
        <Parameter Name="degreeOfParallelism" Type="System.Int32" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="entryPoints"><span data-ttu-id="a1f05-172">要在构造关系图时使用的入口点</span><span class="sxs-lookup"><span data-stu-id="a1f05-172">The entry points to use in constructing the graph</span></span></param>
        <param name="projectCollection"><span data-ttu-id="a1f05-173">应与关系图中的所有项目关联的集合。</span><span class="sxs-lookup"><span data-stu-id="a1f05-173">The collection with which all projects in the graph should be associated.</span></span> <span data-ttu-id="a1f05-174">不能为 null。</span><span class="sxs-lookup"><span data-stu-id="a1f05-174">May not be null.</span></span></param>
        <param name="projectInstanceFactory"><span data-ttu-id="a1f05-175">用于构造 <see cref="T:Microsoft.Build.Execution.ProjectInstance" /> 的委托，为在关系图创建期间创建的每个项目调用。</span><span class="sxs-lookup"><span data-stu-id="a1f05-175">A delegate used for constructing a <see cref="T:Microsoft.Build.Execution.ProjectInstance" />, called for each project created during graph creation.</span></span> <span data-ttu-id="a1f05-176">此值可以为 null，它使用调用 ProjectInstance 构造函数的默认实现。</span><span class="sxs-lookup"><span data-stu-id="a1f05-176">This value can be null, which uses a default implementation that calls the ProjectInstance constructor.</span></span> <span data-ttu-id="a1f05-177">对于其他情况，请参阅有关 <see cref="T:Microsoft.Build.Graph.ProjectGraph.ProjectInstanceFactoryFunc" /> 的备注。</span><span class="sxs-lookup"><span data-stu-id="a1f05-177">See the remarks on <see cref="T:Microsoft.Build.Graph.ProjectGraph.ProjectInstanceFactoryFunc" /> for other scenarios.</span></span></param>
        <param name="degreeOfParallelism"><span data-ttu-id="a1f05-178">要参与生成项目关系图的线程数。</span><span class="sxs-lookup"><span data-stu-id="a1f05-178">Number of threads to participate in building the project graph.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="a1f05-179">要观察的 <see cref="T:System.Threading.CancellationToken" /> 标记。</span><span class="sxs-lookup"><span data-stu-id="a1f05-179">The <see cref="T:System.Threading.CancellationToken" /> token to observe.</span></span></param>
        <summary><span data-ttu-id="a1f05-180">构造从给定关系图入口点开始的关系图，使用提供的项目集合进行计算。</span><span class="sxs-lookup"><span data-stu-id="a1f05-180">Constructs a graph starting from the given graph entry points, evaluating with the provided project collection.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:Microsoft.Build.Exceptions.InvalidProjectFileException"><span data-ttu-id="a1f05-181">如果关系图中任何项目的计算失败</span><span class="sxs-lookup"><span data-stu-id="a1f05-181">If the evaluation of any project in the graph fails</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a1f05-182">如果从 <paramref name="projectInstanceFactory" /> 返回空引用</span><span class="sxs-lookup"><span data-stu-id="a1f05-182">If a null reference is returned from <paramref name="projectInstanceFactory" /></span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ConstructionMetrics">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Graph.ProjectGraph.GraphConstructionMetrics ConstructionMetrics { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Build.Graph.ProjectGraph/GraphConstructionMetrics ConstructionMetrics" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Graph.ProjectGraph.ConstructionMetrics" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ConstructionMetrics As ProjectGraph.GraphConstructionMetrics" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Build::Graph::ProjectGraph::GraphConstructionMetrics ConstructionMetrics { Microsoft::Build::Graph::ProjectGraph::GraphConstructionMetrics get(); };" />
      <MemberSignature Language="F#" Value="member this.ConstructionMetrics : Microsoft.Build.Graph.ProjectGraph.GraphConstructionMetrics" Usage="Microsoft.Build.Graph.ProjectGraph.ConstructionMetrics" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Graph.ProjectGraph+GraphConstructionMetrics</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EntryPointNodes">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IReadOnlyCollection&lt;Microsoft.Build.Graph.ProjectGraphNode&gt; EntryPointNodes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IReadOnlyCollection`1&lt;class Microsoft.Build.Graph.ProjectGraphNode&gt; EntryPointNodes" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Graph.ProjectGraph.EntryPointNodes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EntryPointNodes As IReadOnlyCollection(Of ProjectGraphNode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IReadOnlyCollection&lt;Microsoft::Build::Graph::ProjectGraphNode ^&gt; ^ EntryPointNodes { System::Collections::Generic::IReadOnlyCollection&lt;Microsoft::Build::Graph::ProjectGraphNode ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EntryPointNodes : System.Collections.Generic.IReadOnlyCollection&lt;Microsoft.Build.Graph.ProjectGraphNode&gt;" Usage="Microsoft.Build.Graph.ProjectGraph.EntryPointNodes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyCollection&lt;Microsoft.Build.Graph.ProjectGraphNode&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a1f05-183">获取表示入口点的项目节点。</span><span class="sxs-lookup"><span data-stu-id="a1f05-183">Gets the project nodes representing the entry points.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTargetLists">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IReadOnlyDictionary&lt;Microsoft.Build.Graph.ProjectGraphNode,System.Collections.Immutable.ImmutableList&lt;string&gt;&gt; GetTargetLists (System.Collections.Generic.ICollection&lt;string&gt; entryProjectTargets);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IReadOnlyDictionary`2&lt;class Microsoft.Build.Graph.ProjectGraphNode, class System.Collections.Immutable.ImmutableList`1&lt;string&gt;&gt; GetTargetLists(class System.Collections.Generic.ICollection`1&lt;string&gt; entryProjectTargets) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Graph.ProjectGraph.GetTargetLists(System.Collections.Generic.ICollection{System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTargetLists (entryProjectTargets As ICollection(Of String)) As IReadOnlyDictionary(Of ProjectGraphNode, ImmutableList(Of String))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IReadOnlyDictionary&lt;Microsoft::Build::Graph::ProjectGraphNode ^, System::Collections::Immutable::ImmutableList&lt;System::String ^&gt; ^&gt; ^ GetTargetLists(System::Collections::Generic::ICollection&lt;System::String ^&gt; ^ entryProjectTargets);" />
      <MemberSignature Language="F#" Value="member this.GetTargetLists : System.Collections.Generic.ICollection&lt;string&gt; -&gt; System.Collections.Generic.IReadOnlyDictionary&lt;Microsoft.Build.Graph.ProjectGraphNode, System.Collections.Immutable.ImmutableList&lt;string&gt;&gt;" Usage="projectGraph.GetTargetLists entryProjectTargets" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyDictionary&lt;Microsoft.Build.Graph.ProjectGraphNode,System.Collections.Immutable.ImmutableList&lt;System.String&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entryProjectTargets" Type="System.Collections.Generic.ICollection&lt;System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="entryProjectTargets"><span data-ttu-id="a1f05-184"><see cref="P:Microsoft.Build.Graph.ProjectGraph.GraphRoots" /> 的目标列表。</span><span class="sxs-lookup"><span data-stu-id="a1f05-184">The target list for the <see cref="P:Microsoft.Build.Graph.ProjectGraph.GraphRoots" />.</span></span> <span data-ttu-id="a1f05-185">可能为 null 或空，在这种情况下将使用条目项目的默认目标。</span><span class="sxs-lookup"><span data-stu-id="a1f05-185">May be null or empty, in which case the entry projects' default targets will be used.</span></span></param>
        <summary><span data-ttu-id="a1f05-186">获取要为关系图中的每个项目执行的目标列表（给定条目项目的特定目标列表）。</span><span class="sxs-lookup"><span data-stu-id="a1f05-186">Gets the target list to be executed for every project in the graph, given a particular target list for the entry project.</span></span></summary>
        <returns><span data-ttu-id="a1f05-187">包含每个节点的目标列表的字典。</span><span class="sxs-lookup"><span data-stu-id="a1f05-187">A dictionary containing the target list for each node.</span></span> <span data-ttu-id="a1f05-188">如果节点的目标列表为空，则不会为该节点推断出目标，并且应在基于关系图的生成过程中跳过目标。</span><span class="sxs-lookup"><span data-stu-id="a1f05-188">If a node's target list is empty, then no targets were inferred for that node and it should get skipped during a graph based build.</span></span></returns>
        <remarks><span data-ttu-id="a1f05-189">此方法使用 ProjectReferenceTargets 项来确定要在每个节点上运行的目标。</span><span class="sxs-lookup"><span data-stu-id="a1f05-189">This method uses the ProjectReferenceTargets items to determine the targets to run per node.</span></span> <span data-ttu-id="a1f05-190">然后，可以使用结果分别开始生成每个项目，前提是给定项目在其引用后生成。</span><span class="sxs-lookup"><span data-stu-id="a1f05-190">The results can then be used to start building each project individually, assuming a given project is built after its references.</span></span></remarks>
      </Docs>
    </Member>
    <Member MemberName="GraphRoots">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IReadOnlyCollection&lt;Microsoft.Build.Graph.ProjectGraphNode&gt; GraphRoots { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IReadOnlyCollection`1&lt;class Microsoft.Build.Graph.ProjectGraphNode&gt; GraphRoots" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Graph.ProjectGraph.GraphRoots" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property GraphRoots As IReadOnlyCollection(Of ProjectGraphNode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IReadOnlyCollection&lt;Microsoft::Build::Graph::ProjectGraphNode ^&gt; ^ GraphRoots { System::Collections::Generic::IReadOnlyCollection&lt;Microsoft::Build::Graph::ProjectGraphNode ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.GraphRoots : System.Collections.Generic.IReadOnlyCollection&lt;Microsoft.Build.Graph.ProjectGraphNode&gt;" Usage="Microsoft.Build.Graph.ProjectGraph.GraphRoots" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyCollection&lt;Microsoft.Build.Graph.ProjectGraphNode&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProjectNodes">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IReadOnlyCollection&lt;Microsoft.Build.Graph.ProjectGraphNode&gt; ProjectNodes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IReadOnlyCollection`1&lt;class Microsoft.Build.Graph.ProjectGraphNode&gt; ProjectNodes" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Graph.ProjectGraph.ProjectNodes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProjectNodes As IReadOnlyCollection(Of ProjectGraphNode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IReadOnlyCollection&lt;Microsoft::Build::Graph::ProjectGraphNode ^&gt; ^ ProjectNodes { System::Collections::Generic::IReadOnlyCollection&lt;Microsoft::Build::Graph::ProjectGraphNode ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ProjectNodes : System.Collections.Generic.IReadOnlyCollection&lt;Microsoft.Build.Graph.ProjectGraphNode&gt;" Usage="Microsoft.Build.Graph.ProjectGraph.ProjectNodes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyCollection&lt;Microsoft.Build.Graph.ProjectGraphNode&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a1f05-191">获取关系图中所有项目节点的无序集合。</span><span class="sxs-lookup"><span data-stu-id="a1f05-191">Get an unordered collection of all project nodes in the graph.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProjectNodesTopologicallySorted">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IReadOnlyCollection&lt;Microsoft.Build.Graph.ProjectGraphNode&gt; ProjectNodesTopologicallySorted { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IReadOnlyCollection`1&lt;class Microsoft.Build.Graph.ProjectGraphNode&gt; ProjectNodesTopologicallySorted" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Graph.ProjectGraph.ProjectNodesTopologicallySorted" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProjectNodesTopologicallySorted As IReadOnlyCollection(Of ProjectGraphNode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IReadOnlyCollection&lt;Microsoft::Build::Graph::ProjectGraphNode ^&gt; ^ ProjectNodesTopologicallySorted { System::Collections::Generic::IReadOnlyCollection&lt;Microsoft::Build::Graph::ProjectGraphNode ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ProjectNodesTopologicallySorted : System.Collections.Generic.IReadOnlyCollection&lt;Microsoft.Build.Graph.ProjectGraphNode&gt;" Usage="Microsoft.Build.Graph.ProjectGraph.ProjectNodesTopologicallySorted" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyCollection&lt;Microsoft.Build.Graph.ProjectGraphNode&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a1f05-192">获取关系图中所有项目节点的按拓扑结构排序的集合。</span><span class="sxs-lookup"><span data-stu-id="a1f05-192">Get a topologically sorted collection of all project nodes in the graph.</span></span>
<span data-ttu-id="a1f05-193">在引用项目之前显示引用的项目。</span><span class="sxs-lookup"><span data-stu-id="a1f05-193">Referenced projects appear before the referencing projects.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
