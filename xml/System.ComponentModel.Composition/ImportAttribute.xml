<Type Name="ImportAttribute" FullName="System.ComponentModel.Composition.ImportAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="16540f4b67c9cb095afc71fa77660fb8c1ec1439" /><Meta Name="ms.sourcegitcommit" Value="943c8cdbe5b47c6c296a6f4b73038bbd43da0dd2" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="02/12/2021" /><Meta Name="ms.locfileid" Value="100328914" /></Metadata><TypeSignature Language="C#" Value="public class ImportAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ImportAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Composition.ImportAttribute" />
  <TypeSignature Language="VB.NET" Value="Public Class ImportAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class ImportAttribute : Attribute" />
  <TypeSignature Language="F#" Value="type ImportAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.Composition</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.AttributeUsage(System.AttributeTargets.Field | System.AttributeTargets.Parameter | System.AttributeTargets.Property, AllowMultiple=false, Inherited=false)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.AttributeUsage(System.AttributeTargets.Field | System.AttributeTargets.Parameter | System.AttributeTargets.Property, AllowMultiple=false, Inherited=false)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="a1111-101">指定属性、字段或参数值应由 <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> 对象提供。</span><span class="sxs-lookup"><span data-stu-id="a1111-101">Specifies that a property, field, or parameter value should be provided by the <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" />.object.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1111-102">在特性化编程模型中， <xref:System.ComponentModel.Composition.ImportAttribute> 用于声明给定部件的导入或依赖项。</span><span class="sxs-lookup"><span data-stu-id="a1111-102">In the Attributed Programming Model, the <xref:System.ComponentModel.Composition.ImportAttribute> is used to declare the imports, or dependencies, of a given part.</span></span> <span data-ttu-id="a1111-103">它可以修饰属性、字段或方法。</span><span class="sxs-lookup"><span data-stu-id="a1111-103">It can decorate a property, a field, or a method.</span></span> <span data-ttu-id="a1111-104">在撰写过程中，部件的导入将由 <xref:System.ComponentModel.Composition.Hosting.CompositionContainer> 该部件所属的对象填充，方法是使用提供给该对象的导出 <xref:System.ComponentModel.Composition.Hosting.CompositionContainer> 。</span><span class="sxs-lookup"><span data-stu-id="a1111-104">During composition, a part's imports will be filled by the <xref:System.ComponentModel.Composition.Hosting.CompositionContainer> object to which that part belongs, by using the exports provided to that <xref:System.ComponentModel.Composition.Hosting.CompositionContainer> object.</span></span>  
  
 <span data-ttu-id="a1111-105">导入是否与给定的导出匹配主要是通过比较协定名称和协定类型确定的。</span><span class="sxs-lookup"><span data-stu-id="a1111-105">Whether an import matches a given export is determined primarily by comparing the contract name and the contract type.</span></span> <span data-ttu-id="a1111-106">通常，当您在代码中使用 import 特性时，无需指定其中任何一个，它们将自动从修饰成员的类型中推断。</span><span class="sxs-lookup"><span data-stu-id="a1111-106">Ordinarily, you do not have to specify either of these when using the import attribute in code, and they will be automatically inferred from the type of the decorated member.</span></span> <span data-ttu-id="a1111-107">如果导入必须与不同类型的导出 (例如，已修饰成员的类型的子类或该成员) 实现的接口，则必须显式指定协定类型。</span><span class="sxs-lookup"><span data-stu-id="a1111-107">If the import must match an export of a different type (for example, a subclass of the type of the decorated member, or an interface implemented by that member), then the contract type must be explicitly specified.</span></span> <span data-ttu-id="a1111-108">还可以显式指定协定名称，例如，区分同一类型的多个协定，但通常可以通过元数据来实现此目的。</span><span class="sxs-lookup"><span data-stu-id="a1111-108">The contract name can also be explicitly specified, for example to distinguish between multiple contracts with the same type, but it is usually better to do this through metadata.</span></span> <span data-ttu-id="a1111-109">有关元数据的详细信息，请参阅 <xref:System.ComponentModel.Composition.PartMetadataAttribute> 。</span><span class="sxs-lookup"><span data-stu-id="a1111-109">For more information about metadata, see <xref:System.ComponentModel.Composition.PartMetadataAttribute>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a1111-110">下面的示例演示三个类，它们具有修饰的成员 <xref:System.ComponentModel.Composition.ImportAttribute> 和三个匹配它们的导出。</span><span class="sxs-lookup"><span data-stu-id="a1111-110">The following example shows three classes with members decorated with the <xref:System.ComponentModel.Composition.ImportAttribute>, and three exports that match them.</span></span>  
  
 [!code-csharp[ImportAndExport#1](~/samples/snippets/csharp/VS_Snippets_Misc/importandexport/cs/program.cs#1)]
 [!code-vb[ImportAndExport#1](~/samples/snippets/visualbasic/VS_Snippets_Misc/importandexport/vb/module1.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.Composition.ExportAttribute" />
    <related type="Article" href="/dotnet/framework/mef/"><span data-ttu-id="a1111-111">特性化编程模型概述</span><span class="sxs-lookup"><span data-stu-id="a1111-111">Attributed Programming Model Overview</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a1111-112">初始化 <see cref="T:System.ComponentModel.Composition.ImportAttribute" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="a1111-112">Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.ImportAttribute" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ImportAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.ImportAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ImportAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a1111-113">通过导入具有默认协定名称的导出，初始化 <see cref="T:System.ComponentModel.Composition.ImportAttribute" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="a1111-113">Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.ImportAttribute" /> class, importing the export with the default contract name.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1111-114">默认协定名称是对 <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> 属性、字段或参数类型调用方法的结果，该方法用此特性标记。</span><span class="sxs-lookup"><span data-stu-id="a1111-114">The default contract name is the result of calling the <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> method on the property, field, or parameter type that this is marked with this attribute.</span></span>  
  
 <span data-ttu-id="a1111-115">通过使用 <xref:System.StringComparer.Ordinal%2A> 属性执行区分大小写的非语言比较，对协定名称进行比较。</span><span class="sxs-lookup"><span data-stu-id="a1111-115">The contract name is compared by using the <xref:System.StringComparer.Ordinal%2A> property to perform a case-sensitive, non-linguistic comparison.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ImportAttribute (string contractName);" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string contractName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.ImportAttribute.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (contractName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ImportAttribute(System::String ^ contractName);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.Composition.ImportAttribute : string -&gt; System.ComponentModel.Composition.ImportAttribute" Usage="new System.ComponentModel.Composition.ImportAttribute contractName" />
      <MemberSignature Language="C#" Value="public ImportAttribute (string? contractName);" FrameworkAlternate="dotnet-plat-ext-5.0" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="contractName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="contractName"><span data-ttu-id="a1111-116">要导入的导出结果的协定名称，或 <see langword="null" /> 或空字符串 ("") 以使用默认协定名称。</span><span class="sxs-lookup"><span data-stu-id="a1111-116">The contract name of the export to import, or <see langword="null" /> or an empty string ("") to use the default contract name.</span></span></param>
        <summary><span data-ttu-id="a1111-117">通过导入具有指定协定名称的导出，初始化 <see cref="T:System.ComponentModel.Composition.ImportAttribute" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="a1111-117">Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.ImportAttribute" /> class, importing the export with the specified contract name.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1111-118">默认协定名称是对 <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> 用此特性标记的属性、字段或参数类型调用方法的结果。</span><span class="sxs-lookup"><span data-stu-id="a1111-118">The default contract name is the result of calling the <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> method on the property, field, or parameter type that is marked with this attribute.</span></span>  
  
 <span data-ttu-id="a1111-119">通过使用 <xref:System.StringComparer.Ordinal%2A> 属性执行区分大小写的非语言比较，对协定名称进行比较。</span><span class="sxs-lookup"><span data-stu-id="a1111-119">The contract name is compared by using the <xref:System.StringComparer.Ordinal%2A> property to perform a case-sensitive, non-linguistic comparison.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ImportAttribute (Type contractType);" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type contractType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.ImportAttribute.#ctor(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (contractType As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ImportAttribute(Type ^ contractType);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.Composition.ImportAttribute : Type -&gt; System.ComponentModel.Composition.ImportAttribute" Usage="new System.ComponentModel.Composition.ImportAttribute contractType" />
      <MemberSignature Language="C#" Value="public ImportAttribute (Type? contractType);" FrameworkAlternate="dotnet-plat-ext-5.0" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="contractType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="contractType"><span data-ttu-id="a1111-120">要从中派生导出的协定名称的类型，或 <see langword="null" /> 以使用默认协定名称。</span><span class="sxs-lookup"><span data-stu-id="a1111-120">The type to derive the contract name of the export from, or <see langword="null" /> to use the default contract name.</span></span></param>
        <summary><span data-ttu-id="a1111-121">通过导入具有派生自指定类型的协定名称的导出，初始化 <see cref="T:System.ComponentModel.Composition.ImportAttribute" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="a1111-121">Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.ImportAttribute" /> class, importing the export with the contract name derived from the specified type.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1111-122">协定名称是对调用方法的结果 <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> `contractType` 。</span><span class="sxs-lookup"><span data-stu-id="a1111-122">The contract name is the result of calling the <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> method on `contractType`.</span></span>  
  
 <span data-ttu-id="a1111-123">默认协定名称是对 <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> 用此特性标记的属性、字段或参数类型调用方法的结果。</span><span class="sxs-lookup"><span data-stu-id="a1111-123">The default contract name is the result of calling the <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> method on the property, field, or parameter type that is marked with this attribute.</span></span>  
  
 <span data-ttu-id="a1111-124">通过使用 <xref:System.StringComparer.Ordinal%2A> 属性执行区分大小写的非语言比较，对协定名称进行比较。</span><span class="sxs-lookup"><span data-stu-id="a1111-124">The contract name is compared by using the <xref:System.StringComparer.Ordinal%2A> property to perform a case-sensitive, non-linguistic comparison.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ImportAttribute (string contractName, Type contractType);" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string contractName, class System.Type contractType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.ImportAttribute.#ctor(System.String,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (contractName As String, contractType As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ImportAttribute(System::String ^ contractName, Type ^ contractType);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.Composition.ImportAttribute : string * Type -&gt; System.ComponentModel.Composition.ImportAttribute" Usage="new System.ComponentModel.Composition.ImportAttribute (contractName, contractType)" />
      <MemberSignature Language="C#" Value="public ImportAttribute (string? contractName, Type? contractType);" FrameworkAlternate="dotnet-plat-ext-5.0" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="contractName" Type="System.String" />
        <Parameter Name="contractType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="contractName"><span data-ttu-id="a1111-125">要导入的导出结果的协定名称，或 <see langword="null" /> 或空字符串 ("") 以使用默认协定名称。</span><span class="sxs-lookup"><span data-stu-id="a1111-125">The contract name of the export to import, or <see langword="null" /> or an empty string ("") to use the default contract name.</span></span></param>
        <param name="contractType"><span data-ttu-id="a1111-126">要导入的导出结果的类型。</span><span class="sxs-lookup"><span data-stu-id="a1111-126">The type of the export to import.</span></span></param>
        <summary><span data-ttu-id="a1111-127">通过导入具有指定协定名称和类型的导出，初始化 <see cref="T:System.ComponentModel.Composition.ImportAttribute" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="a1111-127">Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.ImportAttribute" /> class, importing the export with the specified contract name and type.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowDefault">
      <MemberSignature Language="C#" Value="public bool AllowDefault { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowDefault" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Composition.ImportAttribute.AllowDefault" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowDefault As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowDefault { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowDefault : bool with get, set" Usage="System.ComponentModel.Composition.ImportAttribute.AllowDefault" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a1111-128">获取或设置一个值，该值指示在容器中不存在具有协定名称的导出时，是否将属性、字段或参数设置为其类型的默认值。</span><span class="sxs-lookup"><span data-stu-id="a1111-128">Gets or sets a value that indicates whether the property, field, or parameter will be set to its type's default value when an export with the contract name is not present in the container.</span></span></summary>
        <value><span data-ttu-id="a1111-129">如果在 <see cref="P:System.ComponentModel.Composition.ImportAttribute.ContractName" /> 中不存在具有 <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> 的导出时，将属性、字段或参数设置为其类型的默认值，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a1111-129"><see langword="true" /> if the property, field, or parameter will be set to its type's default value when there is no export with the <see cref="P:System.ComponentModel.Composition.ImportAttribute.ContractName" /> in the <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" />; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="a1111-130">默认值为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a1111-130">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1111-131">属性、字段或参数的类型的默认值 `null` 适用于引用类型，数值类型的默认值为零。</span><span class="sxs-lookup"><span data-stu-id="a1111-131">The default value of the type of a property, field, or parameter is `null` for reference types and zero for numeric value types.</span></span> <span data-ttu-id="a1111-132">对于其他值类型，如果字段是值类型，则默认值将是值类型的每个字段初始化为零，或者 `null` 如果该字段是引用类型，则为。</span><span class="sxs-lookup"><span data-stu-id="a1111-132">For other value types, the default value will be each field of the value type initialized to zero if the field is a value type, or `null` if the field is a reference type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowRecomposition">
      <MemberSignature Language="C#" Value="public bool AllowRecomposition { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowRecomposition" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Composition.ImportAttribute.AllowRecomposition" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowRecomposition As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowRecomposition { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowRecomposition : bool with get, set" Usage="System.ComponentModel.Composition.ImportAttribute.AllowRecomposition" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a1111-133">获取或设置一个值，该值指示在容器中具有匹配协定的导出发生更改时，是否将重新组合属性或字段。</span><span class="sxs-lookup"><span data-stu-id="a1111-133">Gets or sets a value that indicates whether the property or field will be recomposed when exports with a matching contract have changed in the container.</span></span></summary>
        <value><span data-ttu-id="a1111-134">如果在 <see cref="P:System.ComponentModel.Composition.ImportAttribute.ContractName" /> 中添加或移除具有匹配的 <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> 的导出时，允许重新组合属性或字段，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a1111-134"><see langword="true" /> if the property or field allows recomposition when exports with a matching <see cref="P:System.ComponentModel.Composition.ImportAttribute.ContractName" /> are added or removed from the <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" />; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="a1111-135">默认值为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a1111-135">The default is <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContractName">
      <MemberSignature Language="C#" Value="public string ContractName { get; }" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".property instance string ContractName" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Composition.ImportAttribute.ContractName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContractName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ContractName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ContractName : string" Usage="System.ComponentModel.Composition.ImportAttribute.ContractName" />
      <MemberSignature Language="C#" Value="public string? ContractName { get; }" FrameworkAlternate="dotnet-plat-ext-5.0" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a1111-136">获取要导入的导出结果的协定名称。</span><span class="sxs-lookup"><span data-stu-id="a1111-136">Gets the contract name of the export to import.</span></span></summary>
        <value><span data-ttu-id="a1111-137">要导入的导出结果的协定名称。</span><span class="sxs-lookup"><span data-stu-id="a1111-137">The contract name of the export to import.</span></span> <span data-ttu-id="a1111-138">默认值为空字符串("")。</span><span class="sxs-lookup"><span data-stu-id="a1111-138">The default is an empty string ("").</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContractType">
      <MemberSignature Language="C#" Value="public Type ContractType { get; }" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ContractType" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Composition.ImportAttribute.ContractType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContractType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ ContractType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ContractType : Type" Usage="System.ComponentModel.Composition.ImportAttribute.ContractType" />
      <MemberSignature Language="C#" Value="public Type? ContractType { get; }" FrameworkAlternate="dotnet-plat-ext-5.0" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a1111-139">获取要导入的导出结果的类型。</span><span class="sxs-lookup"><span data-stu-id="a1111-139">Gets the type of the export to import.</span></span></summary>
        <value><span data-ttu-id="a1111-140">要导入的导出结果的类型。</span><span class="sxs-lookup"><span data-stu-id="a1111-140">The type of the export to import.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RequiredCreationPolicy">
      <MemberSignature Language="C#" Value="public System.ComponentModel.Composition.CreationPolicy RequiredCreationPolicy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ComponentModel.Composition.CreationPolicy RequiredCreationPolicy" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Composition.ImportAttribute.RequiredCreationPolicy" />
      <MemberSignature Language="VB.NET" Value="Public Property RequiredCreationPolicy As CreationPolicy" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::Composition::CreationPolicy RequiredCreationPolicy { System::ComponentModel::Composition::CreationPolicy get(); void set(System::ComponentModel::Composition::CreationPolicy value); };" />
      <MemberSignature Language="F#" Value="member this.RequiredCreationPolicy : System.ComponentModel.Composition.CreationPolicy with get, set" Usage="System.ComponentModel.Composition.ImportAttribute.RequiredCreationPolicy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Composition.CreationPolicy</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a1111-141">获取或设置一个值，该值指示导入程序需要导出结果的特定 <see cref="T:System.ComponentModel.Composition.CreationPolicy" />，以满足此导入。</span><span class="sxs-lookup"><span data-stu-id="a1111-141">Gets or sets a value that indicates that the importer requires a specific <see cref="T:System.ComponentModel.Composition.CreationPolicy" /> for the exports used to satisfy this import.</span></span></summary>
        <value><span data-ttu-id="a1111-142">以下值之一：</span><span class="sxs-lookup"><span data-stu-id="a1111-142">One of the following values:</span></span> 
 <span data-ttu-id="a1111-143">如果导入程序不需要特定 <see cref="F:System.ComponentModel.Composition.CreationPolicy.Any" />，则为 <see cref="T:System.ComponentModel.Composition.CreationPolicy" />。</span><span class="sxs-lookup"><span data-stu-id="a1111-143"><see cref="F:System.ComponentModel.Composition.CreationPolicy.Any" />, if the importer does not require a specific <see cref="T:System.ComponentModel.Composition.CreationPolicy" />.</span></span> <span data-ttu-id="a1111-144">这是默认设置。</span><span class="sxs-lookup"><span data-stu-id="a1111-144">This is the default.</span></span>  
  
 <span data-ttu-id="a1111-145">若要求容器中的所有部件共享所有已使用的导出，则为 <see cref="F:System.ComponentModel.Composition.CreationPolicy.Shared" />。</span><span class="sxs-lookup"><span data-stu-id="a1111-145"><see cref="F:System.ComponentModel.Composition.CreationPolicy.Shared" /> to require that all used exports be shared by all parts in the container.</span></span>  
  
 <span data-ttu-id="a1111-146">若要求所有已使用的导出在容器中不共享，则为 <see cref="F:System.ComponentModel.Composition.CreationPolicy.NonShared" />。</span><span class="sxs-lookup"><span data-stu-id="a1111-146"><see cref="F:System.ComponentModel.Composition.CreationPolicy.NonShared" /> to require that all used exports be non-shared in a container.</span></span> <span data-ttu-id="a1111-147">在此情况下，每个部件都会收到各自的实例。</span><span class="sxs-lookup"><span data-stu-id="a1111-147">In this case, each part receives their own instance.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Source">
      <MemberSignature Language="C#" Value="public System.ComponentModel.Composition.ImportSource Source { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ComponentModel.Composition.ImportSource Source" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Composition.ImportAttribute.Source" />
      <MemberSignature Language="VB.NET" Value="Public Property Source As ImportSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::Composition::ImportSource Source { System::ComponentModel::Composition::ImportSource get(); void set(System::ComponentModel::Composition::ImportSource value); };" />
      <MemberSignature Language="F#" Value="member this.Source : System.ComponentModel.Composition.ImportSource with get, set" Usage="System.ComponentModel.Composition.ImportAttribute.Source" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Composition.ImportSource</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a1111-148">获取或设置指定可能满足此导出的域的值。</span><span class="sxs-lookup"><span data-stu-id="a1111-148">Gets or sets a value that specifies the scopes from which this import may be satisfied.</span></span></summary>
        <value><span data-ttu-id="a1111-149">指定可能满足此导入范围的值。</span><span class="sxs-lookup"><span data-stu-id="a1111-149">A value that specifies the scopes from which this import may be satisfied.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
