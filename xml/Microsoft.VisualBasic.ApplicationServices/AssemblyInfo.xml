<Type Name="AssemblyInfo" FullName="Microsoft.VisualBasic.ApplicationServices.AssemblyInfo">
  <Metadata><Meta Name="ms.openlocfilehash" Value="8bc9028f4b5c5a766b1be9c4522b35f7c8052bcc" /><Meta Name="ms.sourcegitcommit" Value="11d168140aa8fade0768c2a9dde3e3bcacfdfb7d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="05/27/2020" /><Meta Name="ms.locfileid" Value="83975993" /></Metadata><TypeSignature Language="C#" Value="public class AssemblyInfo" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi AssemblyInfo extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo" />
  <TypeSignature Language="VB.NET" Value="Public Class AssemblyInfo" />
  <TypeSignature Language="C++ CLI" Value="public ref class AssemblyInfo" />
  <TypeSignature Language="F#" Value="type AssemblyInfo = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic</AssemblyName>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
    <AssemblyVersion>10.0.4.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic.Forms</AssemblyName>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>提供用来获取应用程序信息（如版本号、说明、加载的程序集等）的属性。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `My.Application.Info` 对象公开的某些属性返回应用程序的程序集信息。 若要设置应用程序的程序集中的信息，您必须使用 "**程序集信息**" 对话框，该对话框可从 "**项目设计器**" 的 "**应用程序**" 窗格中访问。  
  
 `My.Application.Info` 对象提供类似于 <xref:System.Diagnostics.FileVersionInfo> 类的功能，但其作用域为快速访问最常见的属性。  
  
 其他属性（如 `LoadedAssemblies`）提供对应用程序的当前状态的访问。  
  
   
  
## Examples  
 此示例使用 `My.Application.Info.Version` 属性来显示应用程序的版本。  
  
 [!code-vb[VbVbalrMyApplication#30](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyApplication/VB/Form1.vb#30)]  
  
 ]]></format>
    </remarks>
    <altmember cref="P:Microsoft.VisualBasic.ApplicationServices.ApplicationBase.Info" />
    <altmember cref="T:System.Diagnostics.FileVersionInfo" />
    <related type="Article" href="/dotnet/visual-basic/language-reference/objects/">对象 (Visual Basic)</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AssemblyInfo (System.Reflection.Assembly currentAssembly);" />
      <MemberSignature Language="ILAsm" Value=".method public specialname rtspecialname instance void .ctor(class System.Reflection.Assembly currentAssembly) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.#ctor(System.Reflection.Assembly)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (currentAssembly As Assembly)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AssemblyInfo(System::Reflection::Assembly ^ currentAssembly);" />
      <MemberSignature Language="F#" Value="new Microsoft.VisualBasic.ApplicationServices.AssemblyInfo : System.Reflection.Assembly -&gt; Microsoft.VisualBasic.ApplicationServices.AssemblyInfo" Usage="new Microsoft.VisualBasic.ApplicationServices.AssemblyInfo currentAssembly" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="currentAssembly" Type="System.Reflection.Assembly" />
      </Parameters>
      <Docs>
        <param name="currentAssembly"><see cref="T:System.Reflection.Assembly" /> 列中的一个值匹配。 要获取其信息的程序集。</param>
        <summary>使用指定的程序集信息初始化 <see cref="T:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo" /> 类的新实例。</summary>
        <remarks>To be added.</remarks>
        <altmember cref="P:Microsoft.VisualBasic.ApplicationServices.ApplicationBase.Info" />
        <related type="Article" href="/dotnet/visual-basic/language-reference/objects/">对象 (Visual Basic)</related>
      </Docs>
    </Member>
    <Member MemberName="AssemblyName">
      <MemberSignature Language="C#" Value="public string AssemblyName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AssemblyName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.AssemblyName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AssemblyName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ AssemblyName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AssemblyName : string" Usage="Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.AssemblyName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取应用程序的程序集文件的名称（不含扩展名）。</summary>
        <value>一个包含文件名的 <see langword="String" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `My.Application.Info.AssemblyName` 属性获取包含清单的文件的名称。  
  
## <a name="availability-by-project-type"></a>按项目类型的可用性  
  
|项目类型|可用|  
|------------------|---------------|  
|Windows 窗体应用程序|**是**|  
|类库|**是**|  
|控制台应用程序|**是**|  
|Windows 窗体控件库|**是**|  
|Web 控件库|是|  
|Windows 服务|**是**|  
|网站|是|  
  
   
  
## Examples  
 此示例使用 `My.Application.Info.AssemblyName` 属性来显示应用程序的名称。  
  
 [!code-vb[VbVbalrMyApplication#20](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyApplication/VB/Form1.vb#20)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:Microsoft.VisualBasic.ApplicationServices.ApplicationBase.Info" />
        <altmember cref="P:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.AssemblyName" />
        <related type="Article" href="/dotnet/visual-basic/language-reference/objects/">对象 (Visual Basic)</related>
      </Docs>
    </Member>
    <Member MemberName="CompanyName">
      <MemberSignature Language="C#" Value="public string CompanyName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CompanyName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.CompanyName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CompanyName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CompanyName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CompanyName : string" Usage="Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.CompanyName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取与该应用程序关联的公司名称。</summary>
        <value>一个 <see langword="String" /> 值，包含与应用程序关联的公司名称。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `My.Application.Info.CompanyName` 属性获取与应用程序关联的公司名称。  
  
 可以通过在 "**程序集信息**" 对话框中更改 "**公司**的值" 来更改公司名称，该对话框可从 "**项目设计器**" 的 "**应用程序**" 窗格中访问。  
  
## <a name="availability-by-project-type"></a>按项目类型的可用性  
  
|项目类型|可用|  
|------------------|---------------|  
|Windows 窗体应用程序|**是**|  
|类库|**是**|  
|控制台应用程序|**是**|  
|Windows 窗体控件库|**是**|  
|Web 控件库|是|  
|Windows 服务|**是**|  
|网站|是|  
  
   
  
## Examples  
 此示例使用 `My.Application.Info.CompanyName` 属性显示与应用程序关联的公司名称。  
  
 [!code-vb[VbVbalrMyApplication#21](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyApplication/VB/Form1.vb#21)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">程序集没有 <see cref="T:System.Reflection.AssemblyCompanyAttribute" /> 特性。</exception>
        <altmember cref="P:Microsoft.VisualBasic.ApplicationServices.ApplicationBase.Info" />
        <related type="Article" href="/dotnet/visual-basic/language-reference/objects/">对象 (Visual Basic)</related>
      </Docs>
    </Member>
    <Member MemberName="Copyright">
      <MemberSignature Language="C#" Value="public string Copyright { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Copyright" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.Copyright" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Copyright As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Copyright { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Copyright : string" Usage="Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.Copyright" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取与应用程序关联的版权声明。</summary>
        <value>一个 <see langword="String" /> 值，包含与应用程序关联的版权声明。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `My.Application.Info.Copyright` 属性获取与应用程序关联的版权声明。  
  
 可以通过在 "**程序集信息**" 对话框中更改 "**版权**" 的值，在 "**项目设计器**" 的 "**应用程序**" 窗格中进行访问来更改版权声明。  
  
## <a name="availability-by-project-type"></a>按项目类型的可用性  
  
|项目类型|可用|  
|------------------|---------------|  
|Windows 窗体应用程序|**是**|  
|类库|**是**|  
|控制台应用程序|**是**|  
|Windows 窗体控件库|**是**|  
|Web 控件库|是|  
|Windows 服务|**是**|  
|网站|是|  
  
   
  
## Examples  
 此示例使用 `My.Application.Info.Copyright` 属性显示与应用程序关联的公司名称。  
  
 [!code-vb[VbVbalrMyApplication#22](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyApplication/VB/Form1.vb#22)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">程序集没有 <see cref="T:System.Reflection.AssemblyCopyrightAttribute" /> 特性。</exception>
        <altmember cref="P:Microsoft.VisualBasic.ApplicationServices.ApplicationBase.Info" />
        <related type="Article" href="/dotnet/visual-basic/language-reference/objects/">对象 (Visual Basic)</related>
      </Docs>
    </Member>
    <Member MemberName="Description">
      <MemberSignature Language="C#" Value="public string Description { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Description" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.Description" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Description As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Description { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Description : string" Usage="Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.Description" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取与应用程序关联的说明。</summary>
        <value>一个 <see langword="String" /> 值，包含与应用程序关联的说明。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `My.Application.Info.Description` 属性获取与应用程序关联的说明。  
  
 您可以通过在 "**程序集信息**" 对话框中更改 "**说明**" 的值来更改说明，该对话框可从 "**项目设计器**" 的 "**应用程序**" 窗格中访问。  
  
## <a name="availability-by-project-type"></a>按项目类型的可用性  
  
|项目类型|可用|  
|------------------|---------------|  
|Windows 窗体应用程序|**是**|  
|类库|**是**|  
|控制台应用程序|**是**|  
|Windows 窗体控件库|**是**|  
|Web 控件库|是|  
|Windows 服务|**是**|  
|网站|是|  
  
   
  
## Examples  
 此示例使用 `My.Application.Info.Description` 属性显示与应用程序关联的说明。  
  
 [!code-vb[VbVbalrMyApplication#23](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyApplication/VB/Form1.vb#23)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">程序集没有 <see cref="T:System.Reflection.AssemblyDescriptionAttribute" /> 特性。</exception>
        <altmember cref="P:Microsoft.VisualBasic.ApplicationServices.ApplicationBase.Info" />
        <related type="Article" href="/dotnet/visual-basic/language-reference/objects/">对象 (Visual Basic)</related>
      </Docs>
    </Member>
    <Member MemberName="DirectoryPath">
      <MemberSignature Language="C#" Value="public string DirectoryPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DirectoryPath" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.DirectoryPath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DirectoryPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DirectoryPath { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DirectoryPath : string" Usage="Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.DirectoryPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取应用程序的存储目录。</summary>
        <value>一个 <see langword="String" /> 值，包含应用程序的存储目录。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `My.Application.Info.DirectoryPath` 属性获取应用程序的存储目录。  
  
## <a name="availability-by-project-type"></a>按项目类型的可用性  
  
|项目类型|可用|  
|------------------|---------------|  
|Windows 窗体应用程序|**是**|  
|类库|**是**|  
|控制台应用程序|**是**|  
|Windows 窗体控件库|**是**|  
|Web 控件库|是|  
|Windows 服务|**是**|  
|网站|是|  
  
   
  
## Examples  
 此示例使用 `My.Application.Info.DirectoryPath` 属性显示存储应用程序的目录路径。  
  
 [!code-vb[VbVbalrMyApplication#24](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyApplication/VB/Form1.vb#24)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:Microsoft.VisualBasic.ApplicationServices.ApplicationBase.Info" />
        <related type="Article" href="/dotnet/visual-basic/language-reference/objects/">对象 (Visual Basic)</related>
      </Docs>
    </Member>
    <Member MemberName="LoadedAssemblies">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Reflection.Assembly&gt; LoadedAssemblies { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Reflection.Assembly&gt; LoadedAssemblies" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.LoadedAssemblies" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LoadedAssemblies As ReadOnlyCollection(Of Assembly)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Reflection::Assembly ^&gt; ^ LoadedAssemblies { System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Reflection::Assembly ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LoadedAssemblies : System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Reflection.Assembly&gt;" Usage="Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.LoadedAssemblies" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Reflection.Assembly&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取由应用程序加载的所有程序集的集合。</summary>
        <value><see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> 的 <see cref="T:System.Reflection.Assembly" />，包含由应用程序加载的所有程序集。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `My.Application.Info.LoadedAssemblies` 属性类似于 <xref:System.AppDomain.GetAssemblies%2A> 方法。  
  
## <a name="availability-by-project-type"></a>按项目类型的可用性  
  
|项目类型|可用|  
|------------------|---------------|  
|Windows 窗体应用程序|**是**|  
|类库|**是**|  
|控制台应用程序|**是**|  
|Windows 窗体控件库|**是**|  
|Web 控件库|是|  
|Windows 服务|**是**|  
|网站|是|  
  
   
  
## Examples  
 此示例使用 `My.Application.Info.LoadedAssemblies` 属性显示应用程序加载的程序集。  
  
 [!code-vb[VbVbalrMyApplication#25](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyApplication/VB/Form1.vb#25)]  
  
 此示例要求 Windows 窗体应用程序具有一个名为 `ListBox1`的 <xref:System.Windows.Forms.ListBox> 控件。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AppDomainUnloadedException">未加载应用程序域。</exception>
        <altmember cref="P:Microsoft.VisualBasic.ApplicationServices.ApplicationBase.Info" />
        <altmember cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" />
        <altmember cref="T:System.Reflection.Assembly" />
        <related type="Article" href="/dotnet/visual-basic/language-reference/objects/">对象 (Visual Basic)</related>
      </Docs>
    </Member>
    <Member MemberName="ProductName">
      <MemberSignature Language="C#" Value="public string ProductName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ProductName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.ProductName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProductName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ProductName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ProductName : string" Usage="Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.ProductName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取与应用程序关联的产品名称。</summary>
        <value>一个 <see langword="String" /> 值，包含与应用程序关联的产品名称。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `My.Application.Info.ProductName` 属性获取与应用程序关联的产品名称。  
  
 您可以通过更改 "**程序集信息**" 对话框中的 "**产品**" 的值来更改产品名称，该对话框可从 "**项目设计器**" 的 "**应用程序**" 窗格中访问。  
  
## <a name="availability-by-project-type"></a>按项目类型的可用性  
  
|项目类型|可用|  
|------------------|---------------|  
|Windows 窗体应用程序|**是**|  
|类库|**是**|  
|控制台应用程序|**是**|  
|Windows 窗体控件库|**是**|  
|Web 控件库|是|  
|Windows 服务|**是**|  
|网站|是|  
  
   
  
## Examples  
 此示例使用 `My.Application.Info.ProductName` 属性显示与应用程序关联的产品名称。  
  
 [!code-vb[VbVbalrMyApplication#26](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyApplication/VB/Form1.vb#26)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">程序集没有 <see cref="T:System.Reflection.AssemblyProductAttribute" /> 特性。</exception>
        <altmember cref="P:Microsoft.VisualBasic.ApplicationServices.ApplicationBase.Info" />
        <related type="Article" href="/dotnet/visual-basic/language-reference/objects/">对象 (Visual Basic)</related>
      </Docs>
    </Member>
    <Member MemberName="StackTrace">
      <MemberSignature Language="C#" Value="public string StackTrace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StackTrace" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.StackTrace" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property StackTrace As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ StackTrace { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.StackTrace : string" Usage="Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.StackTrace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取当前的堆栈跟踪信息。</summary>
        <value>一个 <see langword="String" /> 值，包含当前的堆栈跟踪信息。 返回值可能为 <see cref="F:System.String.Empty" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `My.Application.Info.StackTrace` 属性以反向时间顺序列出方法调用，也就是说，它首先描述最近的方法调用，并在单独的行上列出堆栈上的每个方法调用。 但是，由于优化期间发生的代码转换，`My.Application.Info.StackTrace` 属性可能不会按预期方式报告任意数量的方法调用。  
  
 通常，堆栈跟踪信息用于调试应用程序。  
  
 每个方法调用的堆栈跟踪信息的格式如下：  
  
 "位于*FullClassName*。*FileName*： line *LineNumber* "中的*方法名称*（*MethodParams*）  
  
 文本 "at" 前面有三个空格，如果调试符号不可用，则省略文本 "in" 和 "： line"。 占位符 `FullClassName`、`MethodName`、`MethodParams`、`FileName`和 `LineNumber` 被实际值替换，定义如下：  
  
|组成部分|说明|  
|----------|-----------------|  
|*FullClassName*|类的完整名称，包括命名空间。|  
|*MethodName*|方法的名称。|  
|*MethodParams*|参数类型/名称对的列表。 每个对由逗号（，）分隔。 如果*方法名称*采用零个参数，则忽略此信息。|  
|*FileName*|声明*方法名称方法的*源文件的名称。 如果调试符号不可用，则忽略此信息。|  
|*LineNumber*|*FileName*中的行号，其中包含针对调用堆栈上的指令的 "*方法名称*" 中的源代码。 如果调试符号不可用，则忽略此信息。|  
  
 `My.Applicaiton.Info.StackTrace` 属性提供类似于 <xref:System.Environment.StackTrace%2A> 属性的功能。  
  
## <a name="availability-by-project-type"></a>按项目类型的可用性  
  
|项目类型|可用|  
|------------------|---------------|  
|Windows 窗体应用程序|**是**|  
|类库|**是**|  
|控制台应用程序|**是**|  
|Windows 窗体控件库|**是**|  
|Web 控件库|是|  
|Windows 服务|**是**|  
|网站|是|  
  
   
  
## Examples  
 此示例使用 `My.Application.Info.StackTrace` 属性从代码执行点显示应用程序的堆栈跟踪。  
  
 [!code-vb[VbVbalrMyApplication#27](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyApplication/VB/Form1.vb#27)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">请求的堆栈跟踪信息超出范围。</exception>
        <altmember cref="P:Microsoft.VisualBasic.ApplicationServices.ApplicationBase.Info" />
        <altmember cref="P:System.Environment.StackTrace" />
        <related type="Article" href="/dotnet/visual-basic/language-reference/objects/">对象 (Visual Basic)</related>
      </Docs>
    </Member>
    <Member MemberName="Title">
      <MemberSignature Language="C#" Value="public string Title { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Title" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.Title" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Title As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Title { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Title : string" Usage="Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.Title" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取与应用程序关联的标题。</summary>
        <value>一个 <see langword="String" /> 值，包含与应用程序关联的 <see cref="T:System.Reflection.AssemblyTitleAttribute" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `My.Application.Info.Title` 属性获取与应用程序关联的标题。  
  
 您可以通过在 "**程序集信息**" 对话框中更改 "**标题**" 的值来更改标题，该对话框可从 "**项目设计器**" 的 "**应用程序**" 窗格中访问。  
  
## <a name="availability-by-project-type"></a>按项目类型的可用性  
  
|项目类型|可用|  
|------------------|---------------|  
|Windows 窗体应用程序|**是**|  
|类库|**是**|  
|控制台应用程序|**是**|  
|Windows 窗体控件库|**是**|  
|Web 控件库|是|  
|Windows 服务|**是**|  
|网站|是|  
  
   
  
## Examples  
 此示例使用 `My.Application.Info.Title` 属性显示与应用程序关联的标题。  
  
 [!code-vb[VbVbalrMyApplication#28](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyApplication/VB/Form1.vb#28)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">程序集没有 <see cref="T:System.Reflection.AssemblyTitleAttribute" /> 特性。</exception>
        <altmember cref="P:Microsoft.VisualBasic.ApplicationServices.ApplicationBase.Info" />
        <related type="Article" href="/dotnet/visual-basic/language-reference/objects/">对象 (Visual Basic)</related>
      </Docs>
    </Member>
    <Member MemberName="Trademark">
      <MemberSignature Language="C#" Value="public string Trademark { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Trademark" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.Trademark" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Trademark As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Trademark { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Trademark : string" Usage="Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.Trademark" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取与应用程序关联的商标声明。</summary>
        <value>一个 <see langword="String" /> 值，包含与应用程序关联的商标声明。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `My.Application.Info.Trademark` 属性获取与应用程序关联的商标声明。  
  
 您可以通过在 "**程序集信息**" 对话框中更改**商标**的值（可从 "**项目设计器**" 的 "**应用程序**" 窗格访问）更改商标通知。  
  
## <a name="availability-by-project-type"></a>按项目类型的可用性  
  
|项目类型|可用|  
|------------------|---------------|  
|Windows 窗体应用程序|**是**|  
|类库|**是**|  
|控制台应用程序|**是**|  
|Windows 窗体控件库|**是**|  
|Web 控件库|是|  
|Windows 服务|**是**|  
|网站|是|  
  
   
  
## Examples  
 此示例使用 `My.Application.Info.Trademark` 属性显示与应用程序关联的商标信息。  
  
 [!code-vb[VbVbalrMyApplication#29](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyApplication/VB/Form1.vb#29)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">程序集没有 <see cref="T:System.Reflection.AssemblyTrademarkAttribute" /> 特性。</exception>
        <altmember cref="P:Microsoft.VisualBasic.ApplicationServices.ApplicationBase.Info" />
        <related type="Article" href="/dotnet/visual-basic/language-reference/objects/">对象 (Visual Basic)</related>
      </Docs>
    </Member>
    <Member MemberName="Version">
      <MemberSignature Language="C#" Value="public Version Version { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Version Version" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.Version" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Version As Version" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Version ^ Version { Version ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Version : Version" Usage="Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.Version" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Version</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取应用程序的版本号。</summary>
        <value>一个 <see cref="T:System.Version" /> 对象，包含应用程序的版本号。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `My.Application.Info.Version` 属性获取一个 <xref:System.Version> 对象，其中包含应用程序的版本号。 您可以使用 <xref:System.Version> 对象的 <xref:System.Version.Major%2A>、<xref:System.Version.Minor%2A>、<xref:System.Version.Build%2A>和 <xref:System.Version.Revision%2A> 属性来访问有关应用程序的特定版本信息。  
  
 ClickOnce 部署的应用程序应使用 <xref:Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.Deployment%2A> 属性的 <xref:System.Deployment.Application.ApplicationDeployment.CurrentVersion%2A> 属性。  
  
## <a name="availability-by-project-type"></a>按项目类型的可用性  
  
|项目类型|可用|  
|------------------|---------------|  
|Windows 窗体应用程序|**是**|  
|类库|**是**|  
|控制台应用程序|**是**|  
|Windows 窗体控件库|**是**|  
|Web 控件库|是|  
|Windows 服务|**是**|  
|网站|是|  
  
   
  
## Examples  
 此示例使用 `My.Application.Info.Version` 属性来显示应用程序的版本。  
  
 [!code-vb[VbVbalrMyApplication#30](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyApplication/VB/Form1.vb#30)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">应用程序没有足够的权限访问程序集版本。</exception>
        <altmember cref="P:Microsoft.VisualBasic.ApplicationServices.ApplicationBase.Info" />
        <altmember cref="P:Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.Deployment" />
        <altmember cref="P:System.Deployment.Application.ApplicationDeployment.CurrentVersion" />
        <altmember cref="T:System.Version" />
        <related type="Article" href="/dotnet/visual-basic/language-reference/objects/">对象 (Visual Basic)</related>
      </Docs>
    </Member>
    <Member MemberName="WorkingSet">
      <MemberSignature Language="C#" Value="public long WorkingSet { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 WorkingSet" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.WorkingSet" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property WorkingSet As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long WorkingSet { long get(); };" />
      <MemberSignature Language="F#" Value="member this.WorkingSet : int64" Usage="Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.WorkingSet" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取映射到进程上下文的物理内存量。</summary>
        <value>一个 <see langword="Long" /> 值，包含映射到进程上下文的物理内存的字节数。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `My.Application.Info.WorkingSet` 属性与 <xref:System.Environment.WorkingSet%2A> 属性具有相同的行为。  
  
> [!NOTE]
>  对于 Windows 98 和 Windows Millennium Edition，此属性始终返回零。  
  
## <a name="availability-by-project-type"></a>按项目类型的可用性  
  
|项目类型|可用|  
|------------------|---------------|  
|Windows 窗体应用程序|**是**|  
|类库|**是**|  
|控制台应用程序|**是**|  
|Windows 窗体控件库|**是**|  
|Web 控件库|是|  
|Windows 服务|**是**|  
|网站|是|  
  
   
  
## Examples  
 此示例使用 `My.Application.Info.WorkingSet` 属性显示映射到应用程序的物理内存的字节数。  
  
 [!code-vb[VbVbalrMyApplication#31](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyApplication/VB/Form1.vb#31)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">存在部分信任的情况，用户缺少必要的权限。</exception>
        <altmember cref="P:Microsoft.VisualBasic.ApplicationServices.ApplicationBase.Info" />
        <altmember cref="P:System.Environment.WorkingSet" />
        <related type="Article" href="/dotnet/visual-basic/language-reference/objects/">对象 (Visual Basic)</related>
      </Docs>
    </Member>
  </Members>
</Type>
