<Type Name="User" FullName="Microsoft.VisualBasic.ApplicationServices.User">
  <Metadata><Meta Name="ms.openlocfilehash" Value="833c3e51b2557af66667fd6c75208570b2e7d6ea" /><Meta Name="ms.sourcegitcommit" Value="11d168140aa8fade0768c2a9dde3e3bcacfdfb7d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="05/27/2020" /><Meta Name="ms.locfileid" Value="83947737" /></Metadata><TypeSignature Language="C#" Value="public class User" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi User extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.ApplicationServices.User" />
  <TypeSignature Language="VB.NET" Value="Public Class User" />
  <TypeSignature Language="C++ CLI" Value="public ref class User" />
  <TypeSignature Language="F#" Value="type User = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic</AssemblyName>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
    <AssemblyVersion>10.0.4.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic.Forms</AssemblyName>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="4f3e3-101">提供对有关当前用户的信息的访问。</span><span class="sxs-lookup"><span data-stu-id="4f3e3-101">Provides access to the information about the current user.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4f3e3-102">`My.User` 对象公开的属性和方法提供对有关当前用户的信息的访问。</span><span class="sxs-lookup"><span data-stu-id="4f3e3-102">The properties and methods exposed by the `My.User` object provide access to the information about the current user.</span></span> <span data-ttu-id="4f3e3-103">"当前用户" 的含义在 Windows 和 Web 应用程序之间略有不同。</span><span class="sxs-lookup"><span data-stu-id="4f3e3-103">The meaning of "current user" differs slightly between Windows and Web applications.</span></span> <span data-ttu-id="4f3e3-104">在 Windows 应用程序中，当前用户是运行应用程序的用户。</span><span class="sxs-lookup"><span data-stu-id="4f3e3-104">In a Windows application, the current user is the user who runs the application.</span></span> <span data-ttu-id="4f3e3-105">在 Web 应用程序中，当前用户是访问应用程序的用户。</span><span class="sxs-lookup"><span data-stu-id="4f3e3-105">In a Web application, the current user is the user who accesses the application.</span></span>  
  
 <span data-ttu-id="4f3e3-106">`My.User` 属性还提供对当前用户的 <xref:System.Security.Principal.IPrincipal> 的访问。</span><span class="sxs-lookup"><span data-stu-id="4f3e3-106">The `My.User` property also provides access to the <xref:System.Security.Principal.IPrincipal> for the current user.</span></span> <span data-ttu-id="4f3e3-107">主体对象表示用户的安全上下文，包括该用户的标识和用户所属的任何角色。</span><span class="sxs-lookup"><span data-stu-id="4f3e3-107">A principal object represents the user's security context, including that user's identity and any roles to which the user belongs.</span></span>  
  
 <span data-ttu-id="4f3e3-108">对于 Windows 应用程序，此属性提供与 <xref:System.Threading.Thread.CurrentPrincipal%2A> 属性相同的功能。</span><span class="sxs-lookup"><span data-stu-id="4f3e3-108">For Windows applications, this property provides the same functionality as the <xref:System.Threading.Thread.CurrentPrincipal%2A> property.</span></span> <span data-ttu-id="4f3e3-109">对于 Web 应用程序，此属性提供的功能与 <xref:System.Web.HttpContext.Current%2A> 属性返回的对象的 <xref:System.Web.HttpContext.User%2A> 属性相同。</span><span class="sxs-lookup"><span data-stu-id="4f3e3-109">For Web applications, this property provides the same functionality as the <xref:System.Web.HttpContext.User%2A> property of the object returned by the <xref:System.Web.HttpContext.Current%2A> property.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4f3e3-110">对于 Windows 应用程序，默认情况下，只有**Windows 应用程序**模板生成的项目会初始化 `My.User` 对象。</span><span class="sxs-lookup"><span data-stu-id="4f3e3-110">For Windows applications, only projects built on the **Windows Application** template initialize the `My.User` object by default.</span></span> <span data-ttu-id="4f3e3-111">在所有其他 Windows 项目类型中，你必须通过显式调用 <xref:Microsoft.VisualBasic.ApplicationServices.User.InitializeWithWindowsUser%2A> 方法或通过将值分配给 <xref:System.Threading.Thread.CurrentPrincipal%2A>来初始化 `My.User` 对象。</span><span class="sxs-lookup"><span data-stu-id="4f3e3-111">In all other Windows project types, you must initialize the `My.User` object by calling the <xref:Microsoft.VisualBasic.ApplicationServices.User.InitializeWithWindowsUser%2A> method explicitly or by assigning a value to <xref:System.Threading.Thread.CurrentPrincipal%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4f3e3-112">当在 Windows 95 和 Windows 98 下运行时，`My.User` 对象无法报告有关当前 Windows 用户的信息，因为这些操作系统不支持登录用户的概念。</span><span class="sxs-lookup"><span data-stu-id="4f3e3-112">The `My.User` object cannot report information about the current Windows user when run under Windows 95 and Windows 98 because those operating systems do not support the concept of a logged-on user.</span></span> <span data-ttu-id="4f3e3-113">必须实现自定义身份验证，才能在这些操作系统上使用 `My.User` 对象。</span><span class="sxs-lookup"><span data-stu-id="4f3e3-113">You must implement custom authentication to use the `My.User` object on those operating systems.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4f3e3-114">此示例检查应用程序是否正在使用 Windows 或自定义身份验证，并使用该信息来分析 `My.User.Name` 属性。</span><span class="sxs-lookup"><span data-stu-id="4f3e3-114">This example checks if the application is using Windows or custom authentication, and uses that information to parse the `My.User.Name` property.</span></span>  
  
 [!code-vb[VbVbalrMyUser#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyUser/VB/Class1.vb#3)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Security.Principal.IPrincipal" />
    <altmember cref="P:System.Threading.Thread.CurrentPrincipal" />
    <altmember cref="P:System.Web.HttpContext.User" />
    <altmember cref="P:System.Web.HttpContext.Current" />
    <related type="Article" href="/dotnet/visual-basic/language-reference/objects/"><span data-ttu-id="4f3e3-115">对象 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="4f3e3-115">Objects (Visual Basic)</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public User ();" />
      <MemberSignature Language="ILAsm" Value=".method public specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.ApplicationServices.User.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; User();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4f3e3-116">初始化 <see cref="T:Microsoft.VisualBasic.ApplicationServices.User" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="4f3e3-116">Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.ApplicationServices.User" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4f3e3-117">`My.User` 对象公开的属性和方法提供对有关当前用户的信息的访问。</span><span class="sxs-lookup"><span data-stu-id="4f3e3-117">The properties and methods exposed by the `My.User` object provide access to information about the current user.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/visual-basic/language-reference/objects/"><span data-ttu-id="4f3e3-118">对象 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="4f3e3-118">Objects (Visual Basic)</span></span></related>
        <related type="Article" href="/dotnet/visual-basic/developing-apps/programming/accessing-user-data"><span data-ttu-id="4f3e3-119">访问用户数据 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="4f3e3-119">Accessing User Data (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CurrentPrincipal">
      <MemberSignature Language="C#" Value="public System.Security.Principal.IPrincipal CurrentPrincipal { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Principal.IPrincipal CurrentPrincipal" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ApplicationServices.User.CurrentPrincipal" />
      <MemberSignature Language="VB.NET" Value="Public Property CurrentPrincipal As IPrincipal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Principal::IPrincipal ^ CurrentPrincipal { System::Security::Principal::IPrincipal ^ get(); void set(System::Security::Principal::IPrincipal ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CurrentPrincipal : System.Security.Principal.IPrincipal with get, set" Usage="Microsoft.VisualBasic.ApplicationServices.User.CurrentPrincipal" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Principal.IPrincipal</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4f3e3-120">获取或设置当前主体（对基于角色的安全性而言）。</span><span class="sxs-lookup"><span data-stu-id="4f3e3-120">Gets or sets the current principal (for role-based security).</span></span></summary>
        <value><span data-ttu-id="4f3e3-121">一个 <see cref="T:System.Security.Principal.IPrincipal" /> 值，表示安全上下文。</span><span class="sxs-lookup"><span data-stu-id="4f3e3-121">A <see cref="T:System.Security.Principal.IPrincipal" /> value representing the security context.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4f3e3-122">可以将 `My.User.CurrentPrincipal` 属性设置为实现 <xref:System.Security.Principal.IPrincipal> 接口的对象，以启用自定义身份验证。</span><span class="sxs-lookup"><span data-stu-id="4f3e3-122">You can set the `My.User.CurrentPrincipal` property to an object that implements the <xref:System.Security.Principal.IPrincipal> interface to enable custom authentication.</span></span>  
  
 <span data-ttu-id="4f3e3-123">在大多数项目类型中，此属性获取并设置线程的当前主体。</span><span class="sxs-lookup"><span data-stu-id="4f3e3-123">In most project types, this property gets and sets the thread's current principal.</span></span> <span data-ttu-id="4f3e3-124">在 ASP.NET 应用程序中，此属性获取并设置当前 HTTP 请求的用户标识的安全信息。</span><span class="sxs-lookup"><span data-stu-id="4f3e3-124">In an ASP.NET application, this property gets and sets the security information for the current HTTP request's user identity.</span></span>  
  
 <span data-ttu-id="4f3e3-125">这是一个高级成员;除非您单击 "**全部**" 选项卡，否则它不会显示在 IntelliSense 中。</span><span class="sxs-lookup"><span data-stu-id="4f3e3-125">This is an advanced member; it does not show in IntelliSense unless you click the **All** tab.</span></span>  
  
## <a name="availability-by-project-type"></a><span data-ttu-id="4f3e3-126">按项目类型的可用性</span><span class="sxs-lookup"><span data-stu-id="4f3e3-126">Availability by Project Type</span></span>  
  
|<span data-ttu-id="4f3e3-127">项目类型</span><span class="sxs-lookup"><span data-stu-id="4f3e3-127">Project type</span></span>|<span data-ttu-id="4f3e3-128">可用</span><span class="sxs-lookup"><span data-stu-id="4f3e3-128">Available</span></span>|  
|-|-|  
|<span data-ttu-id="4f3e3-129">Windows 应用程序</span><span class="sxs-lookup"><span data-stu-id="4f3e3-129">Windows Application</span></span>|<span data-ttu-id="4f3e3-130">**是**</span><span class="sxs-lookup"><span data-stu-id="4f3e3-130">**Yes**</span></span>|  
|<span data-ttu-id="4f3e3-131">类库</span><span class="sxs-lookup"><span data-stu-id="4f3e3-131">Class Library</span></span>|<span data-ttu-id="4f3e3-132">**是**</span><span class="sxs-lookup"><span data-stu-id="4f3e3-132">**Yes**</span></span>|  
|<span data-ttu-id="4f3e3-133">控制台应用程序</span><span class="sxs-lookup"><span data-stu-id="4f3e3-133">Console Application</span></span>|<span data-ttu-id="4f3e3-134">**是**</span><span class="sxs-lookup"><span data-stu-id="4f3e3-134">**Yes**</span></span>|  
|<span data-ttu-id="4f3e3-135">Windows 控件库</span><span class="sxs-lookup"><span data-stu-id="4f3e3-135">Windows Control Library</span></span>|<span data-ttu-id="4f3e3-136">**是**</span><span class="sxs-lookup"><span data-stu-id="4f3e3-136">**Yes**</span></span>|  
|<span data-ttu-id="4f3e3-137">Web 控件库</span><span class="sxs-lookup"><span data-stu-id="4f3e3-137">Web Control Library</span></span>|<span data-ttu-id="4f3e3-138">**是**</span><span class="sxs-lookup"><span data-stu-id="4f3e3-138">**Yes**</span></span>|  
|<span data-ttu-id="4f3e3-139">Windows 服务</span><span class="sxs-lookup"><span data-stu-id="4f3e3-139">Windows Service</span></span>|<span data-ttu-id="4f3e3-140">**是**</span><span class="sxs-lookup"><span data-stu-id="4f3e3-140">**Yes**</span></span>|  
|<span data-ttu-id="4f3e3-141">网站</span><span class="sxs-lookup"><span data-stu-id="4f3e3-141">Web Site</span></span>|<span data-ttu-id="4f3e3-142">**是**</span><span class="sxs-lookup"><span data-stu-id="4f3e3-142">**Yes**</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="4f3e3-143">此示例检查应用程序是否正在使用 Windows 或自定义身份验证，并使用该信息来分析 `My.User.Name` 属性。</span><span class="sxs-lookup"><span data-stu-id="4f3e3-143">This example checks if the application is using Windows or custom authentication, and uses that information to parse `My.User.Name` property.</span></span>  
  
 [!code-vb[VbVbalrMyUser#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyUser/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="4f3e3-144">调用方没有设置该主体所需的权限。</span><span class="sxs-lookup"><span data-stu-id="4f3e3-144">The caller does not have the permission required to set the principal.</span></span></exception>
        <altmember cref="T:System.Security.Principal.IPrincipal" />
        <related type="Article" href="/dotnet/visual-basic/language-reference/objects/"><span data-ttu-id="4f3e3-145">对象 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="4f3e3-145">Objects (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="InitializeWithWindowsUser">
      <MemberSignature Language="C#" Value="public void InitializeWithWindowsUser ();" />
      <MemberSignature Language="ILAsm" Value=".method public instance void InitializeWithWindowsUser() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.ApplicationServices.User.InitializeWithWindowsUser" />
      <MemberSignature Language="VB.NET" Value="Public Sub InitializeWithWindowsUser ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InitializeWithWindowsUser();" />
      <MemberSignature Language="F#" Value="member this.InitializeWithWindowsUser : unit -&gt; unit" Usage="user.InitializeWithWindowsUser " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Forms</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4f3e3-146">将线程的当前主体设置为启动应用程序的 Windows 用户。</span><span class="sxs-lookup"><span data-stu-id="4f3e3-146">Sets the thread's current principal to the Windows user that started the application.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4f3e3-147">您可以使用 `My.User.InitializeWithWindowsUser` 方法将线程的当前主体设置为启动该应用程序的 Windows 用户。</span><span class="sxs-lookup"><span data-stu-id="4f3e3-147">You can use the `My.User.InitializeWithWindowsUser` method to set the thread's current principal to the Windows user that started the application.</span></span> <span data-ttu-id="4f3e3-148">默认情况下，Windows 应用程序中的 Visual Basic 应用程序模型在启动时调用此方法。</span><span class="sxs-lookup"><span data-stu-id="4f3e3-148">The Visual Basic Application Model in a Windows application calls this method at startup by default.</span></span> <span data-ttu-id="4f3e3-149">在其他项目类型中，你必须通过显式调用此方法或通过将值分配给 <xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=nameWithType>来设置线程的当前主体。</span><span class="sxs-lookup"><span data-stu-id="4f3e3-149">In other project types, you must set the thread's current principal by calling this method explicitly or by assigning a value to <xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="4f3e3-150">在 Windows 项目中，`My.User` 对象基于线程的当前主体;因此，此方法可以更改 `My.User` 返回的信息。</span><span class="sxs-lookup"><span data-stu-id="4f3e3-150">In Windows projects, the `My.User` object is based on the thread's current principal; therefore, this method can change the information `My.User` returns.</span></span> <span data-ttu-id="4f3e3-151">在 ASP.NET 应用程序中，`My.User` 对象基于当前 HTTP 请求的用户标识，不受此方法的影响。</span><span class="sxs-lookup"><span data-stu-id="4f3e3-151">In an ASP.NET application, the `My.User` object is based on the current HTTP request's user identity, and is unaffected by this method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4f3e3-152">`My.User` 对象的确切行为取决于应用程序的类型和运行应用程序的操作系统。</span><span class="sxs-lookup"><span data-stu-id="4f3e3-152">The exact behavior of the `My.User` object depends on the type of application and on the operating system on which the application runs.</span></span> <span data-ttu-id="4f3e3-153">有关详细信息，请参阅 <xref:Microsoft.VisualBasic.ApplicationServices.User> 类概述。</span><span class="sxs-lookup"><span data-stu-id="4f3e3-153">For more information, see the <xref:Microsoft.VisualBasic.ApplicationServices.User> class overview.</span></span>  
  
 <span data-ttu-id="4f3e3-154">这是一个高级成员;除非您单击 "**全部**" 选项卡，否则它不会显示在 IntelliSense 中。</span><span class="sxs-lookup"><span data-stu-id="4f3e3-154">This is an advanced member; it does not show in IntelliSense unless you click the **All** tab.</span></span>  
  
## <a name="availability-by-project-type"></a><span data-ttu-id="4f3e3-155">按项目类型的可用性</span><span class="sxs-lookup"><span data-stu-id="4f3e3-155">Availability by Project Type</span></span>  
  
|<span data-ttu-id="4f3e3-156">项目类型</span><span class="sxs-lookup"><span data-stu-id="4f3e3-156">Project type</span></span>|<span data-ttu-id="4f3e3-157">可用</span><span class="sxs-lookup"><span data-stu-id="4f3e3-157">Available</span></span>|  
|-|-|  
|<span data-ttu-id="4f3e3-158">Windows 应用程序</span><span class="sxs-lookup"><span data-stu-id="4f3e3-158">Windows Application</span></span>|<span data-ttu-id="4f3e3-159">**是**</span><span class="sxs-lookup"><span data-stu-id="4f3e3-159">**Yes**</span></span>|  
|<span data-ttu-id="4f3e3-160">类库</span><span class="sxs-lookup"><span data-stu-id="4f3e3-160">Class Library</span></span>|<span data-ttu-id="4f3e3-161">**是**</span><span class="sxs-lookup"><span data-stu-id="4f3e3-161">**Yes**</span></span>|  
|<span data-ttu-id="4f3e3-162">控制台应用程序</span><span class="sxs-lookup"><span data-stu-id="4f3e3-162">Console Application</span></span>|<span data-ttu-id="4f3e3-163">**是**</span><span class="sxs-lookup"><span data-stu-id="4f3e3-163">**Yes**</span></span>|  
|<span data-ttu-id="4f3e3-164">Windows 控件库</span><span class="sxs-lookup"><span data-stu-id="4f3e3-164">Windows Control Library</span></span>|<span data-ttu-id="4f3e3-165">**是**</span><span class="sxs-lookup"><span data-stu-id="4f3e3-165">**Yes**</span></span>|  
|<span data-ttu-id="4f3e3-166">Web 控件库</span><span class="sxs-lookup"><span data-stu-id="4f3e3-166">Web Control Library</span></span>|<span data-ttu-id="4f3e3-167">**是**</span><span class="sxs-lookup"><span data-stu-id="4f3e3-167">**Yes**</span></span>|  
|<span data-ttu-id="4f3e3-168">Windows 服务</span><span class="sxs-lookup"><span data-stu-id="4f3e3-168">Windows Service</span></span>|<span data-ttu-id="4f3e3-169">**是**</span><span class="sxs-lookup"><span data-stu-id="4f3e3-169">**Yes**</span></span>|  
|<span data-ttu-id="4f3e3-170">网站</span><span class="sxs-lookup"><span data-stu-id="4f3e3-170">Web Site</span></span>|<span data-ttu-id="4f3e3-171">**是**</span><span class="sxs-lookup"><span data-stu-id="4f3e3-171">**Yes**</span></span>|  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/visual-basic/language-reference/objects/"><span data-ttu-id="4f3e3-172">对象 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="4f3e3-172">Objects (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="InternalPrincipal">
      <MemberSignature Language="C#" Value="protected virtual System.Security.Principal.IPrincipal InternalPrincipal { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Principal.IPrincipal InternalPrincipal" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ApplicationServices.User.InternalPrincipal" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Property InternalPrincipal As IPrincipal" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Security::Principal::IPrincipal ^ InternalPrincipal { System::Security::Principal::IPrincipal ^ get(); void set(System::Security::Principal::IPrincipal ^ value); };" />
      <MemberSignature Language="F#" Value="member this.InternalPrincipal : System.Security.Principal.IPrincipal with get, set" Usage="Microsoft.VisualBasic.ApplicationServices.User.InternalPrincipal" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Principal.IPrincipal</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4f3e3-173">获取或设置表示当前用户的主体对象。</span><span class="sxs-lookup"><span data-stu-id="4f3e3-173">Gets or sets the principal object representing the current user.</span></span></summary>
        <value><span data-ttu-id="4f3e3-174">一个表示当前用户的 <see cref="T:System.Security.Principal.IPrincipal" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="4f3e3-174">An <see cref="T:System.Security.Principal.IPrincipal" /> object representing the current user.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4f3e3-175">在 <xref:Microsoft.VisualBasic.ApplicationServices.User> 对象中，此属性对 <xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=nameWithType> 属性进行包装。</span><span class="sxs-lookup"><span data-stu-id="4f3e3-175">In the <xref:Microsoft.VisualBasic.ApplicationServices.User> object, this property wraps the <xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="4f3e3-176">在派生类中重写此方法以提供不同的行为。</span><span class="sxs-lookup"><span data-stu-id="4f3e3-176">Override this method in a derived class to provide different behavior.</span></span> <span data-ttu-id="4f3e3-177">例如，<xref:Microsoft.VisualBasic.ApplicationServices.WebUser.InternalPrincipal%2A?displayProperty=nameWithType> 属性覆盖此属性。</span><span class="sxs-lookup"><span data-stu-id="4f3e3-177">For example, the <xref:Microsoft.VisualBasic.ApplicationServices.WebUser.InternalPrincipal%2A?displayProperty=nameWithType> property overrides this property.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/visual-basic/language-reference/objects/"><span data-ttu-id="4f3e3-178">对象 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="4f3e3-178">Objects (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="IsAuthenticated">
      <MemberSignature Language="C#" Value="public bool IsAuthenticated { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAuthenticated" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ApplicationServices.User.IsAuthenticated" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsAuthenticated As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsAuthenticated { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsAuthenticated : bool" Usage="Microsoft.VisualBasic.ApplicationServices.User.IsAuthenticated" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4f3e3-179">获取一个值，该值指示是否验证了用户。</span><span class="sxs-lookup"><span data-stu-id="4f3e3-179">Gets a value that indicates whether the user has been authenticated.</span></span></summary>
        <value><span data-ttu-id="4f3e3-180">如果用户已经过验证，则为 <see langword="True" />；否则为 <see langword="False" />。</span><span class="sxs-lookup"><span data-stu-id="4f3e3-180"><see langword="True" /> if the user was authenticated; otherwise, <see langword="False" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4f3e3-181">`My.User.IsAuthenticated` 属性允许代码确定当前用户是否已经过身份验证。</span><span class="sxs-lookup"><span data-stu-id="4f3e3-181">The `My.User.IsAuthenticated` property allows your code to determine if the current user has been authenticated.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4f3e3-182">`My.User` 对象的确切行为取决于应用程序的类型和运行应用程序的操作系统。</span><span class="sxs-lookup"><span data-stu-id="4f3e3-182">The exact behavior of `My.User` object depends on the type of the application and on the operating system on which the application runs.</span></span> <span data-ttu-id="4f3e3-183">有关详细信息，请参阅 <xref:Microsoft.VisualBasic.ApplicationServices.User> 类概述。</span><span class="sxs-lookup"><span data-stu-id="4f3e3-183">For more information, see the <xref:Microsoft.VisualBasic.ApplicationServices.User> class overview.</span></span>  
  
## <a name="availability-by-project-type"></a><span data-ttu-id="4f3e3-184">按项目类型的可用性</span><span class="sxs-lookup"><span data-stu-id="4f3e3-184">Availability by Project Type</span></span>  
  
|<span data-ttu-id="4f3e3-185">项目类型</span><span class="sxs-lookup"><span data-stu-id="4f3e3-185">Project type</span></span>|<span data-ttu-id="4f3e3-186">可用</span><span class="sxs-lookup"><span data-stu-id="4f3e3-186">Available</span></span>|  
|-|-|  
|<span data-ttu-id="4f3e3-187">Windows 应用程序</span><span class="sxs-lookup"><span data-stu-id="4f3e3-187">Windows Application</span></span>|<span data-ttu-id="4f3e3-188">**是**</span><span class="sxs-lookup"><span data-stu-id="4f3e3-188">**Yes**</span></span>|  
|<span data-ttu-id="4f3e3-189">类库</span><span class="sxs-lookup"><span data-stu-id="4f3e3-189">Class Library</span></span>|<span data-ttu-id="4f3e3-190">**是**</span><span class="sxs-lookup"><span data-stu-id="4f3e3-190">**Yes**</span></span>|  
|<span data-ttu-id="4f3e3-191">控制台应用程序</span><span class="sxs-lookup"><span data-stu-id="4f3e3-191">Console Application</span></span>|<span data-ttu-id="4f3e3-192">**是**</span><span class="sxs-lookup"><span data-stu-id="4f3e3-192">**Yes**</span></span>|  
|<span data-ttu-id="4f3e3-193">Windows 控件库</span><span class="sxs-lookup"><span data-stu-id="4f3e3-193">Windows Control Library</span></span>|<span data-ttu-id="4f3e3-194">**是**</span><span class="sxs-lookup"><span data-stu-id="4f3e3-194">**Yes**</span></span>|  
|<span data-ttu-id="4f3e3-195">Web 控件库</span><span class="sxs-lookup"><span data-stu-id="4f3e3-195">Web Control Library</span></span>|<span data-ttu-id="4f3e3-196">**是**</span><span class="sxs-lookup"><span data-stu-id="4f3e3-196">**Yes**</span></span>|  
|<span data-ttu-id="4f3e3-197">Windows 服务</span><span class="sxs-lookup"><span data-stu-id="4f3e3-197">Windows Service</span></span>|<span data-ttu-id="4f3e3-198">**是**</span><span class="sxs-lookup"><span data-stu-id="4f3e3-198">**Yes**</span></span>|  
|<span data-ttu-id="4f3e3-199">网站</span><span class="sxs-lookup"><span data-stu-id="4f3e3-199">Web Site</span></span>|<span data-ttu-id="4f3e3-200">**是**</span><span class="sxs-lookup"><span data-stu-id="4f3e3-200">**Yes**</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="4f3e3-201">此示例在访问资源之前验证用户是否已经过身份验证。</span><span class="sxs-lookup"><span data-stu-id="4f3e3-201">This example verifies that the user has been authenticated before accessing a resource.</span></span>  
  
 [!code-vb[VbVbalrMyUser#2](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyUser/VB/Class1.vb#2)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/visual-basic/language-reference/objects/"><span data-ttu-id="4f3e3-202">对象 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="4f3e3-202">Objects (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="IsInRole">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="4f3e3-203">确定当前用户是否属于指定的角色。</span><span class="sxs-lookup"><span data-stu-id="4f3e3-203">Determines whether the current user belongs to the specified role.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsInRole">
      <MemberSignature Language="C#" Value="public bool IsInRole (Microsoft.VisualBasic.ApplicationServices.BuiltInRole role);" />
      <MemberSignature Language="ILAsm" Value=".method public instance bool IsInRole(valuetype Microsoft.VisualBasic.ApplicationServices.BuiltInRole role) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.ApplicationServices.User.IsInRole(Microsoft.VisualBasic.ApplicationServices.BuiltInRole)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsInRole (role As BuiltInRole) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsInRole(Microsoft::VisualBasic::ApplicationServices::BuiltInRole role);" />
      <MemberSignature Language="F#" Value="member this.IsInRole : Microsoft.VisualBasic.ApplicationServices.BuiltInRole -&gt; bool" Usage="user.IsInRole role" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Forms</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="role" Type="Microsoft.VisualBasic.ApplicationServices.BuiltInRole" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="role"><span data-ttu-id="4f3e3-204">要检查其成员资格的内置 Windows 角色。</span><span class="sxs-lookup"><span data-stu-id="4f3e3-204">The built-in Windows role for which to check membership.</span></span></param>
        <summary><span data-ttu-id="4f3e3-205">确定当前用户是否属于指定的角色。</span><span class="sxs-lookup"><span data-stu-id="4f3e3-205">Determines whether the current user belongs to the specified role.</span></span></summary>
        <returns><span data-ttu-id="4f3e3-206">如果当前用户是指定角色的成员，则为 <see langword="True" />；否则为 <see langword="False" />。</span><span class="sxs-lookup"><span data-stu-id="4f3e3-206"><see langword="True" /> if the current user is a member of the specified role; otherwise, <see langword="False" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4f3e3-207">使用 `My.User.IsInRole` 方法，你的代码可以确定当前用户是否为指定角色的成员。</span><span class="sxs-lookup"><span data-stu-id="4f3e3-207">The `My.User.IsInRole` method allows your code to determine if the current user is a member of the specified role.</span></span>  
  
 <span data-ttu-id="4f3e3-208">采用字符串的 `My.User.IsInRole` 方法的重载可以轻松访问当前主体的 <xref:System.Security.Principal.IPrincipal.IsInRole%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="4f3e3-208">The overload of the `My.User.IsInRole` method that takes a string provides easy access to the <xref:System.Security.Principal.IPrincipal.IsInRole%2A> method of the current principal.</span></span>  
  
 <span data-ttu-id="4f3e3-209">采用 `BuiltInRole` 枚举的 `My.User.IsInRole` 方法的重载的行为方式不同，具体取决于当前主体。</span><span class="sxs-lookup"><span data-stu-id="4f3e3-209">The overload of the `My.User.IsInRole` method that takes a `BuiltInRole` enumeration behaves differently, depending on the current principal.</span></span> <span data-ttu-id="4f3e3-210">如果它是 Windows 用户主体（<xref:System.Security.Principal.WindowsPrincipal>），则此函数将 `role` 转换为等效的 <xref:System.Security.Principal.WindowsBuiltInRole> 枚举并返回调用 <xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A>的结果。</span><span class="sxs-lookup"><span data-stu-id="4f3e3-210">If it is a Windows user principal (<xref:System.Security.Principal.WindowsPrincipal>), this function converts `role` to the equivalent <xref:System.Security.Principal.WindowsBuiltInRole> enumeration and returns the result of calling <xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A>.</span></span> <span data-ttu-id="4f3e3-211">如果当前主体是任何其他主体，则此函数将 `role` 中的枚举值的名称传递给主体的 <xref:System.Security.Principal.IPrincipal.IsInRole%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="4f3e3-211">If the current principal is any other principal, this function passes the name of the enumeration value in `role` to the principal's <xref:System.Security.Principal.IPrincipal.IsInRole%2A> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4f3e3-212">`My.User` 对象的确切行为取决于应用程序的类型和运行应用程序的操作系统。</span><span class="sxs-lookup"><span data-stu-id="4f3e3-212">The exact behavior of the `My.User` object depends on the type of the application and on the operating system on which the application runs.</span></span> <span data-ttu-id="4f3e3-213">有关详细信息，请参阅 <xref:Microsoft.VisualBasic.ApplicationServices.User> 类概述。</span><span class="sxs-lookup"><span data-stu-id="4f3e3-213">For more information, see the <xref:Microsoft.VisualBasic.ApplicationServices.User> class overview.</span></span>  
  
## <a name="availability-by-project-type"></a><span data-ttu-id="4f3e3-214">按项目类型的可用性</span><span class="sxs-lookup"><span data-stu-id="4f3e3-214">Availability by Project Type</span></span>  
  
|<span data-ttu-id="4f3e3-215">项目类型</span><span class="sxs-lookup"><span data-stu-id="4f3e3-215">Project type</span></span>|<span data-ttu-id="4f3e3-216">可用</span><span class="sxs-lookup"><span data-stu-id="4f3e3-216">Available</span></span>|  
|-|-|  
|<span data-ttu-id="4f3e3-217">Windows 应用程序</span><span class="sxs-lookup"><span data-stu-id="4f3e3-217">Windows Application</span></span>|<span data-ttu-id="4f3e3-218">**是**</span><span class="sxs-lookup"><span data-stu-id="4f3e3-218">**Yes**</span></span>|  
|<span data-ttu-id="4f3e3-219">类库</span><span class="sxs-lookup"><span data-stu-id="4f3e3-219">Class Library</span></span>|<span data-ttu-id="4f3e3-220">**是**</span><span class="sxs-lookup"><span data-stu-id="4f3e3-220">**Yes**</span></span>|  
|<span data-ttu-id="4f3e3-221">控制台应用程序</span><span class="sxs-lookup"><span data-stu-id="4f3e3-221">Console Application</span></span>|<span data-ttu-id="4f3e3-222">**是**</span><span class="sxs-lookup"><span data-stu-id="4f3e3-222">**Yes**</span></span>|  
|<span data-ttu-id="4f3e3-223">Windows 控件库</span><span class="sxs-lookup"><span data-stu-id="4f3e3-223">Windows Control Library</span></span>|<span data-ttu-id="4f3e3-224">**是**</span><span class="sxs-lookup"><span data-stu-id="4f3e3-224">**Yes**</span></span>|  
|<span data-ttu-id="4f3e3-225">Web 控件库</span><span class="sxs-lookup"><span data-stu-id="4f3e3-225">Web Control Library</span></span>|<span data-ttu-id="4f3e3-226">**是**</span><span class="sxs-lookup"><span data-stu-id="4f3e3-226">**Yes**</span></span>|  
|<span data-ttu-id="4f3e3-227">Windows 服务</span><span class="sxs-lookup"><span data-stu-id="4f3e3-227">Windows Service</span></span>|<span data-ttu-id="4f3e3-228">**是**</span><span class="sxs-lookup"><span data-stu-id="4f3e3-228">**Yes**</span></span>|  
|<span data-ttu-id="4f3e3-229">网站</span><span class="sxs-lookup"><span data-stu-id="4f3e3-229">Web Site</span></span>|<span data-ttu-id="4f3e3-230">**是**</span><span class="sxs-lookup"><span data-stu-id="4f3e3-230">**Yes**</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="4f3e3-231">此示例在访问资源前检查用户是否为管理员。</span><span class="sxs-lookup"><span data-stu-id="4f3e3-231">This example checks if the user is an administrator before accessing a resource.</span></span>  
  
 [!code-vb[VbVbalrMyUser#1](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyUser/VB/Class1.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/visual-basic/language-reference/objects/"><span data-ttu-id="4f3e3-232">对象 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="4f3e3-232">Objects (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="IsInRole">
      <MemberSignature Language="C#" Value="public bool IsInRole (string role);" />
      <MemberSignature Language="ILAsm" Value=".method public instance bool IsInRole(string role) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.ApplicationServices.User.IsInRole(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsInRole (role As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsInRole(System::String ^ role);" />
      <MemberSignature Language="F#" Value="member this.IsInRole : string -&gt; bool" Usage="user.IsInRole role" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="role" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="role"><span data-ttu-id="4f3e3-233">要检查其成员资格的角色的名称。</span><span class="sxs-lookup"><span data-stu-id="4f3e3-233">The name of the role for which to check membership.</span></span></param>
        <summary><span data-ttu-id="4f3e3-234">确定当前用户是否属于指定的角色。</span><span class="sxs-lookup"><span data-stu-id="4f3e3-234">Determines whether the current user belongs to the specified role.</span></span></summary>
        <returns><span data-ttu-id="4f3e3-235">如果当前用户是指定角色的成员，则为 <see langword="True" />；否则为 <see langword="False" />。</span><span class="sxs-lookup"><span data-stu-id="4f3e3-235"><see langword="True" /> if the current user is a member of the specified role; otherwise, <see langword="False" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4f3e3-236">使用 `My.User.IsInRole` 方法，你的代码可以确定当前用户是否为指定角色的成员。</span><span class="sxs-lookup"><span data-stu-id="4f3e3-236">The `My.User.IsInRole` method allows your code to determine if the current user is a member of the specified role.</span></span>  
  
 <span data-ttu-id="4f3e3-237">采用字符串的 `My.User.IsInRole` 方法的重载可以轻松访问当前主体的 <xref:System.Security.Principal.IPrincipal.IsInRole%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="4f3e3-237">The overload of the `My.User.IsInRole` method that takes a string provides easy access to the <xref:System.Security.Principal.IPrincipal.IsInRole%2A> method of the current principal.</span></span>  
  
 <span data-ttu-id="4f3e3-238">采用 `BuiltInRole` 枚举的 `My.User.IsInRole` 方法的重载的行为方式不同，具体取决于当前主体。</span><span class="sxs-lookup"><span data-stu-id="4f3e3-238">The overload of the `My.User.IsInRole` method that takes a `BuiltInRole` enumeration behaves differently, depending on the current principal.</span></span> <span data-ttu-id="4f3e3-239">如果它是 Windows 用户主体（<xref:System.Security.Principal.WindowsPrincipal>），则此函数将 `role` 转换为等效的 <xref:System.Security.Principal.WindowsBuiltInRole> 枚举并返回调用 <xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A>的结果。</span><span class="sxs-lookup"><span data-stu-id="4f3e3-239">If it is a Windows user principal (<xref:System.Security.Principal.WindowsPrincipal>), this function converts `role` to the equivalent <xref:System.Security.Principal.WindowsBuiltInRole> enumeration and returns the result of calling <xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A>.</span></span> <span data-ttu-id="4f3e3-240">如果当前主体是任何其他主体，则此函数将 `role` 中的枚举值的名称传递给主体的 <xref:System.Security.Principal.IPrincipal.IsInRole%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="4f3e3-240">If the current principal is any other principal, this function passes the name of the enumeration value in `role` to the principal's <xref:System.Security.Principal.IPrincipal.IsInRole%2A> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4f3e3-241">`My.User` 对象的确切行为取决于应用程序的类型和运行应用程序的操作系统。</span><span class="sxs-lookup"><span data-stu-id="4f3e3-241">The exact behavior of the `My.User` object depends on the type of the application and on the operating system on which the application runs.</span></span> <span data-ttu-id="4f3e3-242">有关详细信息，请参阅 <xref:Microsoft.VisualBasic.ApplicationServices.User> 类概述。</span><span class="sxs-lookup"><span data-stu-id="4f3e3-242">For more information, see the <xref:Microsoft.VisualBasic.ApplicationServices.User> class overview.</span></span>  
  
## <a name="availability-by-project-type"></a><span data-ttu-id="4f3e3-243">按项目类型的可用性</span><span class="sxs-lookup"><span data-stu-id="4f3e3-243">Availability by Project Type</span></span>  
  
|<span data-ttu-id="4f3e3-244">项目类型</span><span class="sxs-lookup"><span data-stu-id="4f3e3-244">Project type</span></span>|<span data-ttu-id="4f3e3-245">可用</span><span class="sxs-lookup"><span data-stu-id="4f3e3-245">Available</span></span>|  
|-|-|  
|<span data-ttu-id="4f3e3-246">Windows 应用程序</span><span class="sxs-lookup"><span data-stu-id="4f3e3-246">Windows Application</span></span>|<span data-ttu-id="4f3e3-247">**是**</span><span class="sxs-lookup"><span data-stu-id="4f3e3-247">**Yes**</span></span>|  
|<span data-ttu-id="4f3e3-248">类库</span><span class="sxs-lookup"><span data-stu-id="4f3e3-248">Class Library</span></span>|<span data-ttu-id="4f3e3-249">**是**</span><span class="sxs-lookup"><span data-stu-id="4f3e3-249">**Yes**</span></span>|  
|<span data-ttu-id="4f3e3-250">控制台应用程序</span><span class="sxs-lookup"><span data-stu-id="4f3e3-250">Console Application</span></span>|<span data-ttu-id="4f3e3-251">**是**</span><span class="sxs-lookup"><span data-stu-id="4f3e3-251">**Yes**</span></span>|  
|<span data-ttu-id="4f3e3-252">Windows 控件库</span><span class="sxs-lookup"><span data-stu-id="4f3e3-252">Windows Control Library</span></span>|<span data-ttu-id="4f3e3-253">**是**</span><span class="sxs-lookup"><span data-stu-id="4f3e3-253">**Yes**</span></span>|  
|<span data-ttu-id="4f3e3-254">Web 控件库</span><span class="sxs-lookup"><span data-stu-id="4f3e3-254">Web Control Library</span></span>|<span data-ttu-id="4f3e3-255">**是**</span><span class="sxs-lookup"><span data-stu-id="4f3e3-255">**Yes**</span></span>|  
|<span data-ttu-id="4f3e3-256">Windows 服务</span><span class="sxs-lookup"><span data-stu-id="4f3e3-256">Windows Service</span></span>|<span data-ttu-id="4f3e3-257">**是**</span><span class="sxs-lookup"><span data-stu-id="4f3e3-257">**Yes**</span></span>|  
|<span data-ttu-id="4f3e3-258">网站</span><span class="sxs-lookup"><span data-stu-id="4f3e3-258">Web Site</span></span>|<span data-ttu-id="4f3e3-259">**是**</span><span class="sxs-lookup"><span data-stu-id="4f3e3-259">**Yes**</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="4f3e3-260">此示例在访问资源前检查用户是否为管理员。</span><span class="sxs-lookup"><span data-stu-id="4f3e3-260">This example checks if the user is an administrator before accessing a resource.</span></span>  
  
 [!code-vb[VbVbalrMyUser#1](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyUser/VB/Class1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.ApplicationServices.BuiltInRole" />
        <related type="Article" href="/dotnet/visual-basic/language-reference/objects/"><span data-ttu-id="4f3e3-261">对象 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="4f3e3-261">Objects (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ApplicationServices.User.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="Microsoft.VisualBasic.ApplicationServices.User.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4f3e3-262">获取当前用户的名称。</span><span class="sxs-lookup"><span data-stu-id="4f3e3-262">Gets the name of the current user.</span></span></summary>
        <value><span data-ttu-id="4f3e3-263"><see langword="String" /> 列中的一个值匹配。</span><span class="sxs-lookup"><span data-stu-id="4f3e3-263"><see langword="String" />.</span></span> <span data-ttu-id="4f3e3-264">当前用户的用户名。</span><span class="sxs-lookup"><span data-stu-id="4f3e3-264">The name of the current user.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4f3e3-265">您可以使用 `My.User` 对象获取有关当前用户的信息。</span><span class="sxs-lookup"><span data-stu-id="4f3e3-265">You can use the `My.User` object to get information about the current user.</span></span>  
  
 <span data-ttu-id="4f3e3-266">对用户进行身份验证的主体也会控制用户名的格式。</span><span class="sxs-lookup"><span data-stu-id="4f3e3-266">The principal that authenticates the user also controls the format of the user name.</span></span> <span data-ttu-id="4f3e3-267">默认情况下，应用程序使用 Windows 身份验证，用户名的格式为 "域 \ 用户名"</span><span class="sxs-lookup"><span data-stu-id="4f3e3-267">By default, an application uses Windows authentication, and the user name has the format DOMAIN\USERNAME.</span></span> <span data-ttu-id="4f3e3-268">主体的自定义实现不一定要使用相同的格式。</span><span class="sxs-lookup"><span data-stu-id="4f3e3-268">A custom implementation of the principal does not necessarily use the same format.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4f3e3-269">当在 Windows 95 和 Windows 98 下运行时，`My.User.Name` 属性返回空字符串，因为这些操作系统不识别用户名。</span><span class="sxs-lookup"><span data-stu-id="4f3e3-269">The `My.User.Name` property returns an empty string when run under Windows 95 and Windows 98 because those operating systems do not recognize user names.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4f3e3-270">`My.User` 对象的确切行为取决于应用程序的类型和运行应用程序的操作系统。</span><span class="sxs-lookup"><span data-stu-id="4f3e3-270">The exact behavior of the `My.User` object depends on the type of the application and on the operating system on which the application runs.</span></span> <span data-ttu-id="4f3e3-271">有关详细信息，请参阅 <xref:Microsoft.VisualBasic.ApplicationServices.User> 类概述。</span><span class="sxs-lookup"><span data-stu-id="4f3e3-271">For more information, see the <xref:Microsoft.VisualBasic.ApplicationServices.User> class overview.</span></span>  
  
## <a name="availability-by-project-type"></a><span data-ttu-id="4f3e3-272">按项目类型的可用性</span><span class="sxs-lookup"><span data-stu-id="4f3e3-272">Availability by Project Type</span></span>  
  
|<span data-ttu-id="4f3e3-273">项目类型</span><span class="sxs-lookup"><span data-stu-id="4f3e3-273">Project type</span></span>|<span data-ttu-id="4f3e3-274">可用</span><span class="sxs-lookup"><span data-stu-id="4f3e3-274">Available</span></span>|  
|-|-|  
|<span data-ttu-id="4f3e3-275">Windows 应用程序</span><span class="sxs-lookup"><span data-stu-id="4f3e3-275">Windows Application</span></span>|<span data-ttu-id="4f3e3-276">**是**</span><span class="sxs-lookup"><span data-stu-id="4f3e3-276">**Yes**</span></span>|  
|<span data-ttu-id="4f3e3-277">类库</span><span class="sxs-lookup"><span data-stu-id="4f3e3-277">Class Library</span></span>|<span data-ttu-id="4f3e3-278">**是**</span><span class="sxs-lookup"><span data-stu-id="4f3e3-278">**Yes**</span></span>|  
|<span data-ttu-id="4f3e3-279">控制台应用程序</span><span class="sxs-lookup"><span data-stu-id="4f3e3-279">Console Application</span></span>|<span data-ttu-id="4f3e3-280">**是**</span><span class="sxs-lookup"><span data-stu-id="4f3e3-280">**Yes**</span></span>|  
|<span data-ttu-id="4f3e3-281">Windows 控件库</span><span class="sxs-lookup"><span data-stu-id="4f3e3-281">Windows Control Library</span></span>|<span data-ttu-id="4f3e3-282">**是**</span><span class="sxs-lookup"><span data-stu-id="4f3e3-282">**Yes**</span></span>|  
|<span data-ttu-id="4f3e3-283">Web 控件库</span><span class="sxs-lookup"><span data-stu-id="4f3e3-283">Web Control Library</span></span>|<span data-ttu-id="4f3e3-284">**是**</span><span class="sxs-lookup"><span data-stu-id="4f3e3-284">**Yes**</span></span>|  
|<span data-ttu-id="4f3e3-285">Windows 服务</span><span class="sxs-lookup"><span data-stu-id="4f3e3-285">Windows Service</span></span>|<span data-ttu-id="4f3e3-286">**是**</span><span class="sxs-lookup"><span data-stu-id="4f3e3-286">**Yes**</span></span>|  
|<span data-ttu-id="4f3e3-287">网站</span><span class="sxs-lookup"><span data-stu-id="4f3e3-287">Web Site</span></span>|<span data-ttu-id="4f3e3-288">**是**</span><span class="sxs-lookup"><span data-stu-id="4f3e3-288">**Yes**</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="4f3e3-289">此示例检查应用程序是否正在使用 Windows 或自定义身份验证，并使用该信息来分析 `My.User.Name` 属性。</span><span class="sxs-lookup"><span data-stu-id="4f3e3-289">This example checks if the application is using Windows or custom authentication, and uses that information to parse the `My.User.Name` property.</span></span>  
  
 [!code-vb[VbVbalrMyUser#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyUser/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/visual-basic/language-reference/objects/"><span data-ttu-id="4f3e3-290">对象 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="4f3e3-290">Objects (Visual Basic)</span></span></related>
        <related type="Article" href="/dotnet/visual-basic/developing-apps/programming/accessing-user-data"><span data-ttu-id="4f3e3-291">访问用户数据 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="4f3e3-291">Accessing User Data (Visual Basic)</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>
