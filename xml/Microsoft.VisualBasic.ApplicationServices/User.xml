<Type Name="User" FullName="Microsoft.VisualBasic.ApplicationServices.User">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e506e361e7114c5f445836bf975fa86cb2359de6" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86684188" /></Metadata><TypeSignature Language="C#" Value="public class User" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi User extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.ApplicationServices.User" />
  <TypeSignature Language="VB.NET" Value="Public Class User" />
  <TypeSignature Language="C++ CLI" Value="public ref class User" />
  <TypeSignature Language="F#" Value="type User = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic</AssemblyName>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
    <AssemblyVersion>10.0.4.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic.Forms</AssemblyName>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="80474-101">提供对有关当前用户的信息的访问。</span><span class="sxs-lookup"><span data-stu-id="80474-101">Provides access to the information about the current user.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80474-102">对象公开的属性和方法 `My.User` 提供对有关当前用户的信息的访问。</span><span class="sxs-lookup"><span data-stu-id="80474-102">The properties and methods exposed by the `My.User` object provide access to the information about the current user.</span></span> <span data-ttu-id="80474-103">"当前用户" 的含义在 Windows 和 Web 应用程序之间略有不同。</span><span class="sxs-lookup"><span data-stu-id="80474-103">The meaning of "current user" differs slightly between Windows and Web applications.</span></span> <span data-ttu-id="80474-104">在 Windows 应用程序中，当前用户是运行应用程序的用户。</span><span class="sxs-lookup"><span data-stu-id="80474-104">In a Windows application, the current user is the user who runs the application.</span></span> <span data-ttu-id="80474-105">在 Web 应用程序中，当前用户是访问应用程序的用户。</span><span class="sxs-lookup"><span data-stu-id="80474-105">In a Web application, the current user is the user who accesses the application.</span></span>  
  
 <span data-ttu-id="80474-106">`My.User`属性还为当前用户提供对的访问 <xref:System.Security.Principal.IPrincipal> 。</span><span class="sxs-lookup"><span data-stu-id="80474-106">The `My.User` property also provides access to the <xref:System.Security.Principal.IPrincipal> for the current user.</span></span> <span data-ttu-id="80474-107">主体对象表示用户的安全上下文，包括该用户的标识和用户所属的任何角色。</span><span class="sxs-lookup"><span data-stu-id="80474-107">A principal object represents the user's security context, including that user's identity and any roles to which the user belongs.</span></span>  
  
 <span data-ttu-id="80474-108">对于 Windows 应用程序，此属性提供的功能与 <xref:System.Threading.Thread.CurrentPrincipal%2A> 属性相同。</span><span class="sxs-lookup"><span data-stu-id="80474-108">For Windows applications, this property provides the same functionality as the <xref:System.Threading.Thread.CurrentPrincipal%2A> property.</span></span> <span data-ttu-id="80474-109">对于 Web 应用程序，此属性提供的功能与 <xref:System.Web.HttpContext.User%2A> 属性返回的对象的属性相同 <xref:System.Web.HttpContext.Current%2A> 。</span><span class="sxs-lookup"><span data-stu-id="80474-109">For Web applications, this property provides the same functionality as the <xref:System.Web.HttpContext.User%2A> property of the object returned by the <xref:System.Web.HttpContext.Current%2A> property.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="80474-110">对于 Windows 应用程序，默认情况下，只有 **Windows 应用程序** 模板上生成的项目会初始化该 `My.User` 对象。</span><span class="sxs-lookup"><span data-stu-id="80474-110">For Windows applications, only projects built on the **Windows Application** template initialize the `My.User` object by default.</span></span> <span data-ttu-id="80474-111">在所有其他 Windows 项目类型中，你必须 `My.User` 通过 <xref:Microsoft.VisualBasic.ApplicationServices.User.InitializeWithWindowsUser%2A> 显式调用方法或将值分配给来初始化对象 <xref:System.Threading.Thread.CurrentPrincipal%2A> 。</span><span class="sxs-lookup"><span data-stu-id="80474-111">In all other Windows project types, you must initialize the `My.User` object by calling the <xref:Microsoft.VisualBasic.ApplicationServices.User.InitializeWithWindowsUser%2A> method explicitly or by assigning a value to <xref:System.Threading.Thread.CurrentPrincipal%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="80474-112">`My.User`当在 windows 95 和 windows 98 下运行时，对象无法报告有关当前 Windows 用户的信息，因为这些操作系统不支持登录用户的概念。</span><span class="sxs-lookup"><span data-stu-id="80474-112">The `My.User` object cannot report information about the current Windows user when run under Windows 95 and Windows 98 because those operating systems do not support the concept of a logged-on user.</span></span> <span data-ttu-id="80474-113">您必须实现自定义身份验证，才能 `My.User` 在这些操作系统上使用该对象。</span><span class="sxs-lookup"><span data-stu-id="80474-113">You must implement custom authentication to use the `My.User` object on those operating systems.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="80474-114">此示例检查应用程序是否正在使用 Windows 或自定义身份验证，并使用这些信息来分析 `My.User.Name` 属性。</span><span class="sxs-lookup"><span data-stu-id="80474-114">This example checks if the application is using Windows or custom authentication, and uses that information to parse the `My.User.Name` property.</span></span>  
  
 [!code-vb[VbVbalrMyUser#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyUser/VB/Class1.vb#3)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Security.Principal.IPrincipal" />
    <altmember cref="P:System.Threading.Thread.CurrentPrincipal" />
    <altmember cref="P:System.Web.HttpContext.User" />
    <altmember cref="P:System.Web.HttpContext.Current" />
    <related type="Article" href="/dotnet/visual-basic/language-reference/objects/"><span data-ttu-id="80474-115">对象 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="80474-115">Objects (Visual Basic)</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public User ();" />
      <MemberSignature Language="ILAsm" Value=".method public specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.ApplicationServices.User.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; User();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="80474-116">初始化 <see cref="T:Microsoft.VisualBasic.ApplicationServices.User" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="80474-116">Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.ApplicationServices.User" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80474-117">对象公开的属性和方法 `My.User` 提供对有关当前用户的信息的访问。</span><span class="sxs-lookup"><span data-stu-id="80474-117">The properties and methods exposed by the `My.User` object provide access to information about the current user.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/visual-basic/language-reference/objects/"><span data-ttu-id="80474-118">对象 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="80474-118">Objects (Visual Basic)</span></span></related>
        <related type="Article" href="/dotnet/visual-basic/developing-apps/programming/accessing-user-data"><span data-ttu-id="80474-119">访问用户数据 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="80474-119">Accessing User Data (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CurrentPrincipal">
      <MemberSignature Language="C#" Value="public System.Security.Principal.IPrincipal CurrentPrincipal { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Principal.IPrincipal CurrentPrincipal" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ApplicationServices.User.CurrentPrincipal" />
      <MemberSignature Language="VB.NET" Value="Public Property CurrentPrincipal As IPrincipal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Principal::IPrincipal ^ CurrentPrincipal { System::Security::Principal::IPrincipal ^ get(); void set(System::Security::Principal::IPrincipal ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CurrentPrincipal : System.Security.Principal.IPrincipal with get, set" Usage="Microsoft.VisualBasic.ApplicationServices.User.CurrentPrincipal" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Principal.IPrincipal</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="80474-120">获取或设置当前主体（对基于角色的安全性而言）。</span><span class="sxs-lookup"><span data-stu-id="80474-120">Gets or sets the current principal (for role-based security).</span></span></summary>
        <value><span data-ttu-id="80474-121">一个 <see cref="T:System.Security.Principal.IPrincipal" /> 值，表示安全上下文。</span><span class="sxs-lookup"><span data-stu-id="80474-121">A <see cref="T:System.Security.Principal.IPrincipal" /> value representing the security context.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80474-122">可以将属性设置 `My.User.CurrentPrincipal` 为实现接口的对象， <xref:System.Security.Principal.IPrincipal> 以启用自定义身份验证。</span><span class="sxs-lookup"><span data-stu-id="80474-122">You can set the `My.User.CurrentPrincipal` property to an object that implements the <xref:System.Security.Principal.IPrincipal> interface to enable custom authentication.</span></span>  
  
 <span data-ttu-id="80474-123">在大多数项目类型中，此属性获取并设置线程的当前主体。</span><span class="sxs-lookup"><span data-stu-id="80474-123">In most project types, this property gets and sets the thread's current principal.</span></span> <span data-ttu-id="80474-124">在 ASP.NET 应用程序中，此属性获取并设置当前 HTTP 请求的用户标识的安全信息。</span><span class="sxs-lookup"><span data-stu-id="80474-124">In an ASP.NET application, this property gets and sets the security information for the current HTTP request's user identity.</span></span>  
  
 <span data-ttu-id="80474-125">这是一个高级成员;除非您单击 " **全部** " 选项卡，否则它不会显示在 IntelliSense 中。</span><span class="sxs-lookup"><span data-stu-id="80474-125">This is an advanced member; it does not show in IntelliSense unless you click the **All** tab.</span></span>  
  
## <a name="availability-by-project-type"></a><span data-ttu-id="80474-126">按项目类型的可用性</span><span class="sxs-lookup"><span data-stu-id="80474-126">Availability by Project Type</span></span>  
  
|<span data-ttu-id="80474-127">项目类型</span><span class="sxs-lookup"><span data-stu-id="80474-127">Project type</span></span>|<span data-ttu-id="80474-128">可用</span><span class="sxs-lookup"><span data-stu-id="80474-128">Available</span></span>|  
|-|-|  
|<span data-ttu-id="80474-129">Windows 应用程序</span><span class="sxs-lookup"><span data-stu-id="80474-129">Windows Application</span></span>|<span data-ttu-id="80474-130">**是**</span><span class="sxs-lookup"><span data-stu-id="80474-130">**Yes**</span></span>|  
|<span data-ttu-id="80474-131">类库</span><span class="sxs-lookup"><span data-stu-id="80474-131">Class Library</span></span>|<span data-ttu-id="80474-132">**是**</span><span class="sxs-lookup"><span data-stu-id="80474-132">**Yes**</span></span>|  
|<span data-ttu-id="80474-133">控制台应用程序</span><span class="sxs-lookup"><span data-stu-id="80474-133">Console Application</span></span>|<span data-ttu-id="80474-134">**是**</span><span class="sxs-lookup"><span data-stu-id="80474-134">**Yes**</span></span>|  
|<span data-ttu-id="80474-135">Windows 控件库</span><span class="sxs-lookup"><span data-stu-id="80474-135">Windows Control Library</span></span>|<span data-ttu-id="80474-136">**是**</span><span class="sxs-lookup"><span data-stu-id="80474-136">**Yes**</span></span>|  
|<span data-ttu-id="80474-137">Web 控件库</span><span class="sxs-lookup"><span data-stu-id="80474-137">Web Control Library</span></span>|<span data-ttu-id="80474-138">**是**</span><span class="sxs-lookup"><span data-stu-id="80474-138">**Yes**</span></span>|  
|<span data-ttu-id="80474-139">Windows 服务</span><span class="sxs-lookup"><span data-stu-id="80474-139">Windows Service</span></span>|<span data-ttu-id="80474-140">**是**</span><span class="sxs-lookup"><span data-stu-id="80474-140">**Yes**</span></span>|  
|<span data-ttu-id="80474-141">网站</span><span class="sxs-lookup"><span data-stu-id="80474-141">Web Site</span></span>|<span data-ttu-id="80474-142">**是**</span><span class="sxs-lookup"><span data-stu-id="80474-142">**Yes**</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="80474-143">此示例检查应用程序是否正在使用 Windows 或自定义身份验证，并使用该信息来分析 `My.User.Name` 属性。</span><span class="sxs-lookup"><span data-stu-id="80474-143">This example checks if the application is using Windows or custom authentication, and uses that information to parse `My.User.Name` property.</span></span>  
  
 [!code-vb[VbVbalrMyUser#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyUser/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="80474-144">调用方没有设置该主体所需的权限。</span><span class="sxs-lookup"><span data-stu-id="80474-144">The caller does not have the permission required to set the principal.</span></span></exception>
        <altmember cref="T:System.Security.Principal.IPrincipal" />
        <related type="Article" href="/dotnet/visual-basic/language-reference/objects/"><span data-ttu-id="80474-145">对象 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="80474-145">Objects (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="InitializeWithWindowsUser">
      <MemberSignature Language="C#" Value="public void InitializeWithWindowsUser ();" />
      <MemberSignature Language="ILAsm" Value=".method public instance void InitializeWithWindowsUser() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.ApplicationServices.User.InitializeWithWindowsUser" />
      <MemberSignature Language="VB.NET" Value="Public Sub InitializeWithWindowsUser ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InitializeWithWindowsUser();" />
      <MemberSignature Language="F#" Value="member this.InitializeWithWindowsUser : unit -&gt; unit" Usage="user.InitializeWithWindowsUser " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Forms</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="80474-146">将线程的当前主体设置为启动应用程序的 Windows 用户。</span><span class="sxs-lookup"><span data-stu-id="80474-146">Sets the thread's current principal to the Windows user that started the application.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80474-147">您可以使用 `My.User.InitializeWithWindowsUser` 方法将线程的当前主体设置为启动应用程序的 Windows 用户。</span><span class="sxs-lookup"><span data-stu-id="80474-147">You can use the `My.User.InitializeWithWindowsUser` method to set the thread's current principal to the Windows user that started the application.</span></span> <span data-ttu-id="80474-148">默认情况下，Windows 应用程序中的 Visual Basic 应用程序模型在启动时调用此方法。</span><span class="sxs-lookup"><span data-stu-id="80474-148">The Visual Basic Application Model in a Windows application calls this method at startup by default.</span></span> <span data-ttu-id="80474-149">在其他项目类型中，你必须通过显式调用此方法或通过将值分配给来设置线程的当前主体 <xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="80474-149">In other project types, you must set the thread's current principal by calling this method explicitly or by assigning a value to <xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="80474-150">在 Windows 项目中， `My.User` 对象基于线程的当前主体; 因此，此方法可以更改信息返回的信息 `My.User` 。</span><span class="sxs-lookup"><span data-stu-id="80474-150">In Windows projects, the `My.User` object is based on the thread's current principal; therefore, this method can change the information `My.User` returns.</span></span> <span data-ttu-id="80474-151">在 ASP.NET 应用程序中， `My.User` 对象基于当前 HTTP 请求的用户标识，不受此方法的影响。</span><span class="sxs-lookup"><span data-stu-id="80474-151">In an ASP.NET application, the `My.User` object is based on the current HTTP request's user identity, and is unaffected by this method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="80474-152">对象的确切行为 `My.User` 取决于应用程序的类型和运行应用程序的操作系统。</span><span class="sxs-lookup"><span data-stu-id="80474-152">The exact behavior of the `My.User` object depends on the type of application and on the operating system on which the application runs.</span></span> <span data-ttu-id="80474-153">有关详细信息，请参阅 <xref:Microsoft.VisualBasic.ApplicationServices.User> 类概述。</span><span class="sxs-lookup"><span data-stu-id="80474-153">For more information, see the <xref:Microsoft.VisualBasic.ApplicationServices.User> class overview.</span></span>  
  
 <span data-ttu-id="80474-154">这是一个高级成员;除非您单击 " **全部** " 选项卡，否则它不会显示在 IntelliSense 中。</span><span class="sxs-lookup"><span data-stu-id="80474-154">This is an advanced member; it does not show in IntelliSense unless you click the **All** tab.</span></span>  
  
## <a name="availability-by-project-type"></a><span data-ttu-id="80474-155">按项目类型的可用性</span><span class="sxs-lookup"><span data-stu-id="80474-155">Availability by Project Type</span></span>  
  
|<span data-ttu-id="80474-156">项目类型</span><span class="sxs-lookup"><span data-stu-id="80474-156">Project type</span></span>|<span data-ttu-id="80474-157">可用</span><span class="sxs-lookup"><span data-stu-id="80474-157">Available</span></span>|  
|-|-|  
|<span data-ttu-id="80474-158">Windows 应用程序</span><span class="sxs-lookup"><span data-stu-id="80474-158">Windows Application</span></span>|<span data-ttu-id="80474-159">**是**</span><span class="sxs-lookup"><span data-stu-id="80474-159">**Yes**</span></span>|  
|<span data-ttu-id="80474-160">类库</span><span class="sxs-lookup"><span data-stu-id="80474-160">Class Library</span></span>|<span data-ttu-id="80474-161">**是**</span><span class="sxs-lookup"><span data-stu-id="80474-161">**Yes**</span></span>|  
|<span data-ttu-id="80474-162">控制台应用程序</span><span class="sxs-lookup"><span data-stu-id="80474-162">Console Application</span></span>|<span data-ttu-id="80474-163">**是**</span><span class="sxs-lookup"><span data-stu-id="80474-163">**Yes**</span></span>|  
|<span data-ttu-id="80474-164">Windows 控件库</span><span class="sxs-lookup"><span data-stu-id="80474-164">Windows Control Library</span></span>|<span data-ttu-id="80474-165">**是**</span><span class="sxs-lookup"><span data-stu-id="80474-165">**Yes**</span></span>|  
|<span data-ttu-id="80474-166">Web 控件库</span><span class="sxs-lookup"><span data-stu-id="80474-166">Web Control Library</span></span>|<span data-ttu-id="80474-167">**是**</span><span class="sxs-lookup"><span data-stu-id="80474-167">**Yes**</span></span>|  
|<span data-ttu-id="80474-168">Windows 服务</span><span class="sxs-lookup"><span data-stu-id="80474-168">Windows Service</span></span>|<span data-ttu-id="80474-169">**是**</span><span class="sxs-lookup"><span data-stu-id="80474-169">**Yes**</span></span>|  
|<span data-ttu-id="80474-170">网站</span><span class="sxs-lookup"><span data-stu-id="80474-170">Web Site</span></span>|<span data-ttu-id="80474-171">**是**</span><span class="sxs-lookup"><span data-stu-id="80474-171">**Yes**</span></span>|  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/visual-basic/language-reference/objects/"><span data-ttu-id="80474-172">对象 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="80474-172">Objects (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="InternalPrincipal">
      <MemberSignature Language="C#" Value="protected virtual System.Security.Principal.IPrincipal InternalPrincipal { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Principal.IPrincipal InternalPrincipal" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ApplicationServices.User.InternalPrincipal" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Property InternalPrincipal As IPrincipal" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Security::Principal::IPrincipal ^ InternalPrincipal { System::Security::Principal::IPrincipal ^ get(); void set(System::Security::Principal::IPrincipal ^ value); };" />
      <MemberSignature Language="F#" Value="member this.InternalPrincipal : System.Security.Principal.IPrincipal with get, set" Usage="Microsoft.VisualBasic.ApplicationServices.User.InternalPrincipal" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Principal.IPrincipal</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="80474-173">获取或设置表示当前用户的主体对象。</span><span class="sxs-lookup"><span data-stu-id="80474-173">Gets or sets the principal object representing the current user.</span></span></summary>
        <value><span data-ttu-id="80474-174">一个表示当前用户的 <see cref="T:System.Security.Principal.IPrincipal" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="80474-174">An <see cref="T:System.Security.Principal.IPrincipal" /> object representing the current user.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80474-175">在 <xref:Microsoft.VisualBasic.ApplicationServices.User> 对象中，此属性对属性进行包装 <xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="80474-175">In the <xref:Microsoft.VisualBasic.ApplicationServices.User> object, this property wraps the <xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="80474-176">在派生类中重写此方法以提供不同的行为。</span><span class="sxs-lookup"><span data-stu-id="80474-176">Override this method in a derived class to provide different behavior.</span></span> <span data-ttu-id="80474-177">例如，属性将 <xref:Microsoft.VisualBasic.ApplicationServices.WebUser.InternalPrincipal%2A?displayProperty=nameWithType> 重写此属性。</span><span class="sxs-lookup"><span data-stu-id="80474-177">For example, the <xref:Microsoft.VisualBasic.ApplicationServices.WebUser.InternalPrincipal%2A?displayProperty=nameWithType> property overrides this property.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/visual-basic/language-reference/objects/"><span data-ttu-id="80474-178">对象 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="80474-178">Objects (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="IsAuthenticated">
      <MemberSignature Language="C#" Value="public bool IsAuthenticated { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAuthenticated" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ApplicationServices.User.IsAuthenticated" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsAuthenticated As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsAuthenticated { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsAuthenticated : bool" Usage="Microsoft.VisualBasic.ApplicationServices.User.IsAuthenticated" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="80474-179">获取一个值，该值指示是否验证了用户。</span><span class="sxs-lookup"><span data-stu-id="80474-179">Gets a value that indicates whether the user has been authenticated.</span></span></summary>
        <value><span data-ttu-id="80474-180">如果用户已经过验证，则为 <see langword="True" />；否则为 <see langword="False" />。</span><span class="sxs-lookup"><span data-stu-id="80474-180"><see langword="True" /> if the user was authenticated; otherwise, <see langword="False" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80474-181">`My.User.IsAuthenticated`属性允许代码确定当前用户是否已经过身份验证。</span><span class="sxs-lookup"><span data-stu-id="80474-181">The `My.User.IsAuthenticated` property allows your code to determine if the current user has been authenticated.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="80474-182">对象的确切行为 `My.User` 取决于应用程序的类型和运行应用程序的操作系统。</span><span class="sxs-lookup"><span data-stu-id="80474-182">The exact behavior of `My.User` object depends on the type of the application and on the operating system on which the application runs.</span></span> <span data-ttu-id="80474-183">有关详细信息，请参阅 <xref:Microsoft.VisualBasic.ApplicationServices.User> 类概述。</span><span class="sxs-lookup"><span data-stu-id="80474-183">For more information, see the <xref:Microsoft.VisualBasic.ApplicationServices.User> class overview.</span></span>  
  
## <a name="availability-by-project-type"></a><span data-ttu-id="80474-184">按项目类型的可用性</span><span class="sxs-lookup"><span data-stu-id="80474-184">Availability by Project Type</span></span>  
  
|<span data-ttu-id="80474-185">项目类型</span><span class="sxs-lookup"><span data-stu-id="80474-185">Project type</span></span>|<span data-ttu-id="80474-186">可用</span><span class="sxs-lookup"><span data-stu-id="80474-186">Available</span></span>|  
|-|-|  
|<span data-ttu-id="80474-187">Windows 应用程序</span><span class="sxs-lookup"><span data-stu-id="80474-187">Windows Application</span></span>|<span data-ttu-id="80474-188">**是**</span><span class="sxs-lookup"><span data-stu-id="80474-188">**Yes**</span></span>|  
|<span data-ttu-id="80474-189">类库</span><span class="sxs-lookup"><span data-stu-id="80474-189">Class Library</span></span>|<span data-ttu-id="80474-190">**是**</span><span class="sxs-lookup"><span data-stu-id="80474-190">**Yes**</span></span>|  
|<span data-ttu-id="80474-191">控制台应用程序</span><span class="sxs-lookup"><span data-stu-id="80474-191">Console Application</span></span>|<span data-ttu-id="80474-192">**是**</span><span class="sxs-lookup"><span data-stu-id="80474-192">**Yes**</span></span>|  
|<span data-ttu-id="80474-193">Windows 控件库</span><span class="sxs-lookup"><span data-stu-id="80474-193">Windows Control Library</span></span>|<span data-ttu-id="80474-194">**是**</span><span class="sxs-lookup"><span data-stu-id="80474-194">**Yes**</span></span>|  
|<span data-ttu-id="80474-195">Web 控件库</span><span class="sxs-lookup"><span data-stu-id="80474-195">Web Control Library</span></span>|<span data-ttu-id="80474-196">**是**</span><span class="sxs-lookup"><span data-stu-id="80474-196">**Yes**</span></span>|  
|<span data-ttu-id="80474-197">Windows 服务</span><span class="sxs-lookup"><span data-stu-id="80474-197">Windows Service</span></span>|<span data-ttu-id="80474-198">**是**</span><span class="sxs-lookup"><span data-stu-id="80474-198">**Yes**</span></span>|  
|<span data-ttu-id="80474-199">网站</span><span class="sxs-lookup"><span data-stu-id="80474-199">Web Site</span></span>|<span data-ttu-id="80474-200">**是**</span><span class="sxs-lookup"><span data-stu-id="80474-200">**Yes**</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="80474-201">此示例在访问资源之前验证用户是否已经过身份验证。</span><span class="sxs-lookup"><span data-stu-id="80474-201">This example verifies that the user has been authenticated before accessing a resource.</span></span>  
  
 [!code-vb[VbVbalrMyUser#2](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyUser/VB/Class1.vb#2)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/visual-basic/language-reference/objects/"><span data-ttu-id="80474-202">对象 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="80474-202">Objects (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="IsInRole">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="80474-203">确定当前用户是否属于指定的角色。</span><span class="sxs-lookup"><span data-stu-id="80474-203">Determines whether the current user belongs to the specified role.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsInRole">
      <MemberSignature Language="C#" Value="public bool IsInRole (Microsoft.VisualBasic.ApplicationServices.BuiltInRole role);" />
      <MemberSignature Language="ILAsm" Value=".method public instance bool IsInRole(valuetype Microsoft.VisualBasic.ApplicationServices.BuiltInRole role) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.ApplicationServices.User.IsInRole(Microsoft.VisualBasic.ApplicationServices.BuiltInRole)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsInRole (role As BuiltInRole) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsInRole(Microsoft::VisualBasic::ApplicationServices::BuiltInRole role);" />
      <MemberSignature Language="F#" Value="member this.IsInRole : Microsoft.VisualBasic.ApplicationServices.BuiltInRole -&gt; bool" Usage="user.IsInRole role" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Forms</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="role" Type="Microsoft.VisualBasic.ApplicationServices.BuiltInRole" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="role"><span data-ttu-id="80474-204">要检查其成员资格的内置 Windows 角色。</span><span class="sxs-lookup"><span data-stu-id="80474-204">The built-in Windows role for which to check membership.</span></span></param>
        <summary><span data-ttu-id="80474-205">确定当前用户是否属于指定的角色。</span><span class="sxs-lookup"><span data-stu-id="80474-205">Determines whether the current user belongs to the specified role.</span></span></summary>
        <returns><span data-ttu-id="80474-206">如果当前用户是指定角色的成员，则为 <see langword="True" />；否则为 <see langword="False" />。</span><span class="sxs-lookup"><span data-stu-id="80474-206"><see langword="True" /> if the current user is a member of the specified role; otherwise, <see langword="False" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80474-207">`My.User.IsInRole`方法允许代码确定当前用户是否为指定角色的成员。</span><span class="sxs-lookup"><span data-stu-id="80474-207">The `My.User.IsInRole` method allows your code to determine if the current user is a member of the specified role.</span></span>  
  
 <span data-ttu-id="80474-208">`My.User.IsInRole`采用字符串的方法的重载提供对当前主体的方法的轻松访问 <xref:System.Security.Principal.IPrincipal.IsInRole%2A> 。</span><span class="sxs-lookup"><span data-stu-id="80474-208">The overload of the `My.User.IsInRole` method that takes a string provides easy access to the <xref:System.Security.Principal.IPrincipal.IsInRole%2A> method of the current principal.</span></span>  
  
 <span data-ttu-id="80474-209">`My.User.IsInRole`采用枚举的方法重载的 `BuiltInRole` 行为方式不同，具体取决于当前主体。</span><span class="sxs-lookup"><span data-stu-id="80474-209">The overload of the `My.User.IsInRole` method that takes a `BuiltInRole` enumeration behaves differently, depending on the current principal.</span></span> <span data-ttu-id="80474-210">如果它是 Windows 用户主体 (<xref:System.Security.Principal.WindowsPrincipal>) ，则此函数将转换 `role` 为等效的 <xref:System.Security.Principal.WindowsBuiltInRole> 枚举并返回调用的结果 <xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A> 。</span><span class="sxs-lookup"><span data-stu-id="80474-210">If it is a Windows user principal (<xref:System.Security.Principal.WindowsPrincipal>), this function converts `role` to the equivalent <xref:System.Security.Principal.WindowsBuiltInRole> enumeration and returns the result of calling <xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A>.</span></span> <span data-ttu-id="80474-211">如果当前主体是任何其他主体，则此函数会将中的枚举值的名称传递 `role` 到主体的 <xref:System.Security.Principal.IPrincipal.IsInRole%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="80474-211">If the current principal is any other principal, this function passes the name of the enumeration value in `role` to the principal's <xref:System.Security.Principal.IPrincipal.IsInRole%2A> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="80474-212">对象的确切行为 `My.User` 取决于应用程序的类型和运行应用程序的操作系统。</span><span class="sxs-lookup"><span data-stu-id="80474-212">The exact behavior of the `My.User` object depends on the type of the application and on the operating system on which the application runs.</span></span> <span data-ttu-id="80474-213">有关详细信息，请参阅 <xref:Microsoft.VisualBasic.ApplicationServices.User> 类概述。</span><span class="sxs-lookup"><span data-stu-id="80474-213">For more information, see the <xref:Microsoft.VisualBasic.ApplicationServices.User> class overview.</span></span>  
  
## <a name="availability-by-project-type"></a><span data-ttu-id="80474-214">按项目类型的可用性</span><span class="sxs-lookup"><span data-stu-id="80474-214">Availability by Project Type</span></span>  
  
|<span data-ttu-id="80474-215">项目类型</span><span class="sxs-lookup"><span data-stu-id="80474-215">Project type</span></span>|<span data-ttu-id="80474-216">可用</span><span class="sxs-lookup"><span data-stu-id="80474-216">Available</span></span>|  
|-|-|  
|<span data-ttu-id="80474-217">Windows 应用程序</span><span class="sxs-lookup"><span data-stu-id="80474-217">Windows Application</span></span>|<span data-ttu-id="80474-218">**是**</span><span class="sxs-lookup"><span data-stu-id="80474-218">**Yes**</span></span>|  
|<span data-ttu-id="80474-219">类库</span><span class="sxs-lookup"><span data-stu-id="80474-219">Class Library</span></span>|<span data-ttu-id="80474-220">**是**</span><span class="sxs-lookup"><span data-stu-id="80474-220">**Yes**</span></span>|  
|<span data-ttu-id="80474-221">控制台应用程序</span><span class="sxs-lookup"><span data-stu-id="80474-221">Console Application</span></span>|<span data-ttu-id="80474-222">**是**</span><span class="sxs-lookup"><span data-stu-id="80474-222">**Yes**</span></span>|  
|<span data-ttu-id="80474-223">Windows 控件库</span><span class="sxs-lookup"><span data-stu-id="80474-223">Windows Control Library</span></span>|<span data-ttu-id="80474-224">**是**</span><span class="sxs-lookup"><span data-stu-id="80474-224">**Yes**</span></span>|  
|<span data-ttu-id="80474-225">Web 控件库</span><span class="sxs-lookup"><span data-stu-id="80474-225">Web Control Library</span></span>|<span data-ttu-id="80474-226">**是**</span><span class="sxs-lookup"><span data-stu-id="80474-226">**Yes**</span></span>|  
|<span data-ttu-id="80474-227">Windows 服务</span><span class="sxs-lookup"><span data-stu-id="80474-227">Windows Service</span></span>|<span data-ttu-id="80474-228">**是**</span><span class="sxs-lookup"><span data-stu-id="80474-228">**Yes**</span></span>|  
|<span data-ttu-id="80474-229">网站</span><span class="sxs-lookup"><span data-stu-id="80474-229">Web Site</span></span>|<span data-ttu-id="80474-230">**是**</span><span class="sxs-lookup"><span data-stu-id="80474-230">**Yes**</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="80474-231">此示例在访问资源前检查用户是否为管理员。</span><span class="sxs-lookup"><span data-stu-id="80474-231">This example checks if the user is an administrator before accessing a resource.</span></span>  
  
 [!code-vb[VbVbalrMyUser#1](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyUser/VB/Class1.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/visual-basic/language-reference/objects/"><span data-ttu-id="80474-232">对象 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="80474-232">Objects (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="IsInRole">
      <MemberSignature Language="C#" Value="public bool IsInRole (string role);" />
      <MemberSignature Language="ILAsm" Value=".method public instance bool IsInRole(string role) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.ApplicationServices.User.IsInRole(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsInRole (role As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsInRole(System::String ^ role);" />
      <MemberSignature Language="F#" Value="member this.IsInRole : string -&gt; bool" Usage="user.IsInRole role" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="role" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="role"><span data-ttu-id="80474-233">要检查其成员资格的角色的名称。</span><span class="sxs-lookup"><span data-stu-id="80474-233">The name of the role for which to check membership.</span></span></param>
        <summary><span data-ttu-id="80474-234">确定当前用户是否属于指定的角色。</span><span class="sxs-lookup"><span data-stu-id="80474-234">Determines whether the current user belongs to the specified role.</span></span></summary>
        <returns><span data-ttu-id="80474-235">如果当前用户是指定角色的成员，则为 <see langword="True" />；否则为 <see langword="False" />。</span><span class="sxs-lookup"><span data-stu-id="80474-235"><see langword="True" /> if the current user is a member of the specified role; otherwise, <see langword="False" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80474-236">`My.User.IsInRole`方法允许代码确定当前用户是否为指定角色的成员。</span><span class="sxs-lookup"><span data-stu-id="80474-236">The `My.User.IsInRole` method allows your code to determine if the current user is a member of the specified role.</span></span>  
  
 <span data-ttu-id="80474-237">`My.User.IsInRole`采用字符串的方法的重载提供对当前主体的方法的轻松访问 <xref:System.Security.Principal.IPrincipal.IsInRole%2A> 。</span><span class="sxs-lookup"><span data-stu-id="80474-237">The overload of the `My.User.IsInRole` method that takes a string provides easy access to the <xref:System.Security.Principal.IPrincipal.IsInRole%2A> method of the current principal.</span></span>  
  
 <span data-ttu-id="80474-238">`My.User.IsInRole`采用枚举的方法重载的 `BuiltInRole` 行为方式不同，具体取决于当前主体。</span><span class="sxs-lookup"><span data-stu-id="80474-238">The overload of the `My.User.IsInRole` method that takes a `BuiltInRole` enumeration behaves differently, depending on the current principal.</span></span> <span data-ttu-id="80474-239">如果它是 Windows 用户主体 (<xref:System.Security.Principal.WindowsPrincipal>) ，则此函数将转换 `role` 为等效的 <xref:System.Security.Principal.WindowsBuiltInRole> 枚举并返回调用的结果 <xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A> 。</span><span class="sxs-lookup"><span data-stu-id="80474-239">If it is a Windows user principal (<xref:System.Security.Principal.WindowsPrincipal>), this function converts `role` to the equivalent <xref:System.Security.Principal.WindowsBuiltInRole> enumeration and returns the result of calling <xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A>.</span></span> <span data-ttu-id="80474-240">如果当前主体是任何其他主体，则此函数会将中的枚举值的名称传递 `role` 到主体的 <xref:System.Security.Principal.IPrincipal.IsInRole%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="80474-240">If the current principal is any other principal, this function passes the name of the enumeration value in `role` to the principal's <xref:System.Security.Principal.IPrincipal.IsInRole%2A> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="80474-241">对象的确切行为 `My.User` 取决于应用程序的类型和运行应用程序的操作系统。</span><span class="sxs-lookup"><span data-stu-id="80474-241">The exact behavior of the `My.User` object depends on the type of the application and on the operating system on which the application runs.</span></span> <span data-ttu-id="80474-242">有关详细信息，请参阅 <xref:Microsoft.VisualBasic.ApplicationServices.User> 类概述。</span><span class="sxs-lookup"><span data-stu-id="80474-242">For more information, see the <xref:Microsoft.VisualBasic.ApplicationServices.User> class overview.</span></span>  
  
## <a name="availability-by-project-type"></a><span data-ttu-id="80474-243">按项目类型的可用性</span><span class="sxs-lookup"><span data-stu-id="80474-243">Availability by Project Type</span></span>  
  
|<span data-ttu-id="80474-244">项目类型</span><span class="sxs-lookup"><span data-stu-id="80474-244">Project type</span></span>|<span data-ttu-id="80474-245">可用</span><span class="sxs-lookup"><span data-stu-id="80474-245">Available</span></span>|  
|-|-|  
|<span data-ttu-id="80474-246">Windows 应用程序</span><span class="sxs-lookup"><span data-stu-id="80474-246">Windows Application</span></span>|<span data-ttu-id="80474-247">**是**</span><span class="sxs-lookup"><span data-stu-id="80474-247">**Yes**</span></span>|  
|<span data-ttu-id="80474-248">类库</span><span class="sxs-lookup"><span data-stu-id="80474-248">Class Library</span></span>|<span data-ttu-id="80474-249">**是**</span><span class="sxs-lookup"><span data-stu-id="80474-249">**Yes**</span></span>|  
|<span data-ttu-id="80474-250">控制台应用程序</span><span class="sxs-lookup"><span data-stu-id="80474-250">Console Application</span></span>|<span data-ttu-id="80474-251">**是**</span><span class="sxs-lookup"><span data-stu-id="80474-251">**Yes**</span></span>|  
|<span data-ttu-id="80474-252">Windows 控件库</span><span class="sxs-lookup"><span data-stu-id="80474-252">Windows Control Library</span></span>|<span data-ttu-id="80474-253">**是**</span><span class="sxs-lookup"><span data-stu-id="80474-253">**Yes**</span></span>|  
|<span data-ttu-id="80474-254">Web 控件库</span><span class="sxs-lookup"><span data-stu-id="80474-254">Web Control Library</span></span>|<span data-ttu-id="80474-255">**是**</span><span class="sxs-lookup"><span data-stu-id="80474-255">**Yes**</span></span>|  
|<span data-ttu-id="80474-256">Windows 服务</span><span class="sxs-lookup"><span data-stu-id="80474-256">Windows Service</span></span>|<span data-ttu-id="80474-257">**是**</span><span class="sxs-lookup"><span data-stu-id="80474-257">**Yes**</span></span>|  
|<span data-ttu-id="80474-258">网站</span><span class="sxs-lookup"><span data-stu-id="80474-258">Web Site</span></span>|<span data-ttu-id="80474-259">**是**</span><span class="sxs-lookup"><span data-stu-id="80474-259">**Yes**</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="80474-260">此示例在访问资源前检查用户是否为管理员。</span><span class="sxs-lookup"><span data-stu-id="80474-260">This example checks if the user is an administrator before accessing a resource.</span></span>  
  
 [!code-vb[VbVbalrMyUser#1](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyUser/VB/Class1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.ApplicationServices.BuiltInRole" />
        <related type="Article" href="/dotnet/visual-basic/language-reference/objects/"><span data-ttu-id="80474-261">对象 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="80474-261">Objects (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ApplicationServices.User.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="Microsoft.VisualBasic.ApplicationServices.User.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="80474-262">获取当前用户的名称。</span><span class="sxs-lookup"><span data-stu-id="80474-262">Gets the name of the current user.</span></span></summary>
        <value><span data-ttu-id="80474-263"><see langword="String" />.</span><span class="sxs-lookup"><span data-stu-id="80474-263"><see langword="String" />.</span></span> <span data-ttu-id="80474-264">当前用户的名称。</span><span class="sxs-lookup"><span data-stu-id="80474-264">The name of the current user.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80474-265">可以使用 `My.User` 对象获取有关当前用户的信息。</span><span class="sxs-lookup"><span data-stu-id="80474-265">You can use the `My.User` object to get information about the current user.</span></span>  
  
 <span data-ttu-id="80474-266">对用户进行身份验证的主体也会控制用户名的格式。</span><span class="sxs-lookup"><span data-stu-id="80474-266">The principal that authenticates the user also controls the format of the user name.</span></span> <span data-ttu-id="80474-267">默认情况下，应用程序使用 Windows 身份验证，用户名的格式为 "域 \ 用户名"</span><span class="sxs-lookup"><span data-stu-id="80474-267">By default, an application uses Windows authentication, and the user name has the format DOMAIN\USERNAME.</span></span> <span data-ttu-id="80474-268">主体的自定义实现不一定要使用相同的格式。</span><span class="sxs-lookup"><span data-stu-id="80474-268">A custom implementation of the principal does not necessarily use the same format.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="80474-269">`My.User.Name`当在 windows 95 和 windows 98 下运行时，该属性将返回空字符串，因为这些操作系统不识别用户名。</span><span class="sxs-lookup"><span data-stu-id="80474-269">The `My.User.Name` property returns an empty string when run under Windows 95 and Windows 98 because those operating systems do not recognize user names.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="80474-270">对象的确切行为 `My.User` 取决于应用程序的类型和运行应用程序的操作系统。</span><span class="sxs-lookup"><span data-stu-id="80474-270">The exact behavior of the `My.User` object depends on the type of the application and on the operating system on which the application runs.</span></span> <span data-ttu-id="80474-271">有关详细信息，请参阅 <xref:Microsoft.VisualBasic.ApplicationServices.User> 类概述。</span><span class="sxs-lookup"><span data-stu-id="80474-271">For more information, see the <xref:Microsoft.VisualBasic.ApplicationServices.User> class overview.</span></span>  
  
## <a name="availability-by-project-type"></a><span data-ttu-id="80474-272">按项目类型的可用性</span><span class="sxs-lookup"><span data-stu-id="80474-272">Availability by Project Type</span></span>  
  
|<span data-ttu-id="80474-273">项目类型</span><span class="sxs-lookup"><span data-stu-id="80474-273">Project type</span></span>|<span data-ttu-id="80474-274">可用</span><span class="sxs-lookup"><span data-stu-id="80474-274">Available</span></span>|  
|-|-|  
|<span data-ttu-id="80474-275">Windows 应用程序</span><span class="sxs-lookup"><span data-stu-id="80474-275">Windows Application</span></span>|<span data-ttu-id="80474-276">**是**</span><span class="sxs-lookup"><span data-stu-id="80474-276">**Yes**</span></span>|  
|<span data-ttu-id="80474-277">类库</span><span class="sxs-lookup"><span data-stu-id="80474-277">Class Library</span></span>|<span data-ttu-id="80474-278">**是**</span><span class="sxs-lookup"><span data-stu-id="80474-278">**Yes**</span></span>|  
|<span data-ttu-id="80474-279">控制台应用程序</span><span class="sxs-lookup"><span data-stu-id="80474-279">Console Application</span></span>|<span data-ttu-id="80474-280">**是**</span><span class="sxs-lookup"><span data-stu-id="80474-280">**Yes**</span></span>|  
|<span data-ttu-id="80474-281">Windows 控件库</span><span class="sxs-lookup"><span data-stu-id="80474-281">Windows Control Library</span></span>|<span data-ttu-id="80474-282">**是**</span><span class="sxs-lookup"><span data-stu-id="80474-282">**Yes**</span></span>|  
|<span data-ttu-id="80474-283">Web 控件库</span><span class="sxs-lookup"><span data-stu-id="80474-283">Web Control Library</span></span>|<span data-ttu-id="80474-284">**是**</span><span class="sxs-lookup"><span data-stu-id="80474-284">**Yes**</span></span>|  
|<span data-ttu-id="80474-285">Windows 服务</span><span class="sxs-lookup"><span data-stu-id="80474-285">Windows Service</span></span>|<span data-ttu-id="80474-286">**是**</span><span class="sxs-lookup"><span data-stu-id="80474-286">**Yes**</span></span>|  
|<span data-ttu-id="80474-287">网站</span><span class="sxs-lookup"><span data-stu-id="80474-287">Web Site</span></span>|<span data-ttu-id="80474-288">**是**</span><span class="sxs-lookup"><span data-stu-id="80474-288">**Yes**</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="80474-289">此示例检查应用程序是否正在使用 Windows 或自定义身份验证，并使用这些信息来分析 `My.User.Name` 属性。</span><span class="sxs-lookup"><span data-stu-id="80474-289">This example checks if the application is using Windows or custom authentication, and uses that information to parse the `My.User.Name` property.</span></span>  
  
 [!code-vb[VbVbalrMyUser#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyUser/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/visual-basic/language-reference/objects/"><span data-ttu-id="80474-290">对象 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="80474-290">Objects (Visual Basic)</span></span></related>
        <related type="Article" href="/dotnet/visual-basic/developing-apps/programming/accessing-user-data"><span data-ttu-id="80474-291">访问用户数据 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="80474-291">Accessing User Data (Visual Basic)</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>
