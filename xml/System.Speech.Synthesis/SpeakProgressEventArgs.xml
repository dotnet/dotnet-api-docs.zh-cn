<Type Name="SpeakProgressEventArgs" FullName="System.Speech.Synthesis.SpeakProgressEventArgs">
  <Metadata><Meta Name="ms.openlocfilehash" Value="f0a54272b2865280caba6becc4ebde711233a614" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86589626" /></Metadata><TypeSignature Language="C#" Value="public class SpeakProgressEventArgs : System.Speech.Synthesis.PromptEventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SpeakProgressEventArgs extends System.Speech.Synthesis.PromptEventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Speech.Synthesis.SpeakProgressEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class SpeakProgressEventArgs&#xA;Inherits PromptEventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class SpeakProgressEventArgs : System::Speech::Synthesis::PromptEventArgs" />
  <TypeSignature Language="F#" Value="type SpeakProgressEventArgs = class&#xA;    inherit PromptEventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Speech</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Speech.Synthesis.PromptEventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="d7099-101">从 <see cref="E:System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress" /> 事件返回数据。</span><span class="sxs-lookup"><span data-stu-id="d7099-101">Returns data from the <see cref="E:System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress" /> event.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d7099-102"><xref:System.Speech.Synthesis.SpeakProgressEventArgs>当 <xref:System.Speech.Synthesis.SpeechSynthesizer> 对象引发事件时，将创建的实例 <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress> 。</span><span class="sxs-lookup"><span data-stu-id="d7099-102">An instance of <xref:System.Speech.Synthesis.SpeakProgressEventArgs> is created when the <xref:System.Speech.Synthesis.SpeechSynthesizer> object raises the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress> event.</span></span> <span data-ttu-id="d7099-103"><xref:System.Speech.Synthesis.SpeechSynthesizer>使用 <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> 、 <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> 、 <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A> 或方法中的任何一个在提示符下讲述的新字词，都将引发此事件 <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> 。</span><span class="sxs-lookup"><span data-stu-id="d7099-103">The <xref:System.Speech.Synthesis.SpeechSynthesizer> raises this event for each new word that it speaks in a prompt using any of the <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A>, or <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> methods.</span></span>  
  
 <span data-ttu-id="d7099-104">返回的数据基于语音合成标记语言 (代码生成的 SSML) 。</span><span class="sxs-lookup"><span data-stu-id="d7099-104">The returned data is based on the Speech Synthesis Markup Language (SSML) that the code generates.</span></span> <span data-ttu-id="d7099-105">为返回的值 <xref:System.Speech.Synthesis.SpeakProgressEventArgs.CharacterCount%2A> 包括空格以及代码生成的 SSML 标记的字符和内容。</span><span class="sxs-lookup"><span data-stu-id="d7099-105">The values returned for <xref:System.Speech.Synthesis.SpeakProgressEventArgs.CharacterCount%2A> include spaces and the characters and contents of the SSML tags generated by the code.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d7099-106">下面的示例演示中提供的信息 <xref:System.Speech.Synthesis.SpeakProgressEventArgs> 。</span><span class="sxs-lookup"><span data-stu-id="d7099-106">The following example demonstrates the information that is available from <xref:System.Speech.Synthesis.SpeakProgressEventArgs>.</span></span> <span data-ttu-id="d7099-107">请注意，、、 <xref:System.Speech.Synthesis.PromptBuilder.StartParagraph%2A> <xref:System.Speech.Synthesis.PromptBuilder.EndParagraph%2A> 和方法是如何 <xref:System.Speech.Synthesis.PromptBuilder.StartSentence%2A> <xref:System.Speech.Synthesis.PromptBuilder.EndSentence%2A> 影响在 <xref:System.Speech.Synthesis.SpeakProgressEventArgs.CharacterCount%2A> 生成的 **\<p>** SSML 中添加、 **\</p>** 、 **\<s>** 和标记的 **\</s>** 。</span><span class="sxs-lookup"><span data-stu-id="d7099-107">Note how the <xref:System.Speech.Synthesis.PromptBuilder.StartParagraph%2A>, <xref:System.Speech.Synthesis.PromptBuilder.EndParagraph%2A>, <xref:System.Speech.Synthesis.PromptBuilder.StartSentence%2A>, and <xref:System.Speech.Synthesis.PromptBuilder.EndSentence%2A> methods affect the <xref:System.Speech.Synthesis.SpeakProgressEventArgs.CharacterCount%2A> by their addition of **\<p>**, **\</p>**, **\<s>**, and **\</s>** tags to the generated SSML.</span></span> <span data-ttu-id="d7099-108">此外，在输出中有两个条目，分别用于 "30%"，每个词用于说这一数字字符串 (三十%) 。</span><span class="sxs-lookup"><span data-stu-id="d7099-108">Also, there are two entries in the output for "30%", one for each word to speak this number string (thirty percent).</span></span> <span data-ttu-id="d7099-109"><xref:System.Speech.Synthesis.SpeakProgressEventArgs.CharacterCount%2A>和 <xref:System.Speech.Synthesis.SpeakProgressEventArgs.CharacterPosition%2A> 对于每个条目都是相同的，并表示字符 "30%"。</span><span class="sxs-lookup"><span data-stu-id="d7099-109">The <xref:System.Speech.Synthesis.SpeakProgressEventArgs.CharacterCount%2A> and <xref:System.Speech.Synthesis.SpeakProgressEventArgs.CharacterPosition%2A> are the same for each entry and represent the characters "30%.</span></span> <span data-ttu-id="d7099-110">但是，所 <xref:System.Speech.Synthesis.SpeakProgressEventArgs.AudioPosition%2A> 做的更改反映了单词 "三十" 和 "percent" <xref:System.Speech.Synthesis.SpeechSynthesizer> 。</span><span class="sxs-lookup"><span data-stu-id="d7099-110">However, the <xref:System.Speech.Synthesis.SpeakProgressEventArgs.AudioPosition%2A> changes to reflect the speaking of the words "thirty" and "percent" by the <xref:System.Speech.Synthesis.SpeechSynthesizer>.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Configure the audio output.   
        synth.SetOutputToWaveFile(@"C:\test\weather.wav");  
  
        // Create a SoundPlayer instance to play the output audio file.  
        System.Media.SoundPlayer m_SoundPlayer =  
          new System.Media.SoundPlayer(@"C:\test\weather.wav");  
  
        // Build a prompt containing a paragraph and two sentences.  
        PromptBuilder builder = new PromptBuilder(  
          new System.Globalization.CultureInfo("en-US"));  
        builder.StartParagraph();  
        builder.StartSentence();  
        builder.AppendText(  
          "The weather forecast for today is partly cloudy with some sun breaks.");  
        builder.EndSentence();  
        builder.StartSentence();  
        builder.AppendText(  
          "Tonight's weather will be cloudy with a 30% chance of showers.");  
        builder.EndSentence();  
        builder.EndParagraph();  
  
        // Add a handler for the SpeakProgress event.  
        synth.SpeakProgress +=  
          new EventHandler<SpeakProgressEventArgs>(synth_SpeakProgress);  
  
        // Speak the prompt and play back the output file.  
        synth.Speak(builder);  
        m_SoundPlayer.Play();  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  
    // Write each word and its character position to the console.  
    static void synth_SpeakProgress(object sender, SpeakProgressEventArgs e)  
    {  
      Console.WriteLine("CharPos: {0}   CharCount: {1}   AudioPos: {2}    \"{3}\"",  
        e.CharacterPosition, e.CharacterCount, e.AudioPosition, e.Text);  
    }  
  }  
}  
  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AudioPosition">
      <MemberSignature Language="C#" Value="public TimeSpan AudioPosition { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan AudioPosition" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Synthesis.SpeakProgressEventArgs.AudioPosition" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AudioPosition As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan AudioPosition { TimeSpan get(); };" />
      <MemberSignature Language="F#" Value="member this.AudioPosition : TimeSpan" Usage="System.Speech.Synthesis.SpeakProgressEventArgs.AudioPosition" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d7099-111">获取事件的音频位置。</span><span class="sxs-lookup"><span data-stu-id="d7099-111">Gets the audio position of the event.</span></span></summary>
        <value><span data-ttu-id="d7099-112">返回音频输出流中的事件的位置。</span><span class="sxs-lookup"><span data-stu-id="d7099-112">Returns the position of the event in the audio output stream.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d7099-113">将 <xref:System.Speech.Synthesis.SpeechSynthesizer> 数字规范化为与数字的讲述方式相对应的单词。</span><span class="sxs-lookup"><span data-stu-id="d7099-113">The <xref:System.Speech.Synthesis.SpeechSynthesizer> normalizes numbers to the words that correspond to how the number will be spoken.</span></span> <span data-ttu-id="d7099-114">例如，合成器将数字 "4003" 说为 "4003"。</span><span class="sxs-lookup"><span data-stu-id="d7099-114">For example, the synthesizer speaks the number "4003" as "four thousand three".</span></span> <span data-ttu-id="d7099-115">它 <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress> 为每个口述字词引发事件，并返回 <xref:System.Speech.Synthesis.SpeakProgressEventArgs.AudioPosition%2A> 每个单词的。</span><span class="sxs-lookup"><span data-stu-id="d7099-115">It raises a <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress> event for each of the spoken words, and returns the <xref:System.Speech.Synthesis.SpeakProgressEventArgs.AudioPosition%2A> for each word.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CharacterCount">
      <MemberSignature Language="C#" Value="public int CharacterCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CharacterCount" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Synthesis.SpeakProgressEventArgs.CharacterCount" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CharacterCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int CharacterCount { int get(); };" />
      <MemberSignature Language="F#" Value="member this.CharacterCount : int" Usage="System.Speech.Synthesis.SpeakProgressEventArgs.CharacterCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d7099-116">获取事件引发之前刚刚说出的单词中的字符数。</span><span class="sxs-lookup"><span data-stu-id="d7099-116">Gets the number of characters in the word that was spoken just before the event was raised.</span></span></summary>
        <value><span data-ttu-id="d7099-117">返回引发事件之前讲出的单词中的字符数。</span><span class="sxs-lookup"><span data-stu-id="d7099-117">Returns the number of characters in the word that was spoken just before the event was raised.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d7099-118">将 <xref:System.Speech.Synthesis.SpeechSynthesizer> 数字规范化为与数字的讲述方式相对应的单词。</span><span class="sxs-lookup"><span data-stu-id="d7099-118">The <xref:System.Speech.Synthesis.SpeechSynthesizer> normalizes numbers to the words that correspond to how the number will be spoken.</span></span> <span data-ttu-id="d7099-119">例如，合成器将数字 "4003" 说为 "4003"。</span><span class="sxs-lookup"><span data-stu-id="d7099-119">For example, the synthesizer speaks the number "4003" as "four thousand three".</span></span> <span data-ttu-id="d7099-120">它 <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress> 为每个口述字词引发事件。</span><span class="sxs-lookup"><span data-stu-id="d7099-120">It raises a <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress> event for each of the spoken words.</span></span> <span data-ttu-id="d7099-121">但是， <xref:System.Speech.Synthesis.SpeakProgressEventArgs.CharacterCount%2A> 这三个单词中的每一个都是相同的。</span><span class="sxs-lookup"><span data-stu-id="d7099-121">However, the <xref:System.Speech.Synthesis.SpeakProgressEventArgs.CharacterCount%2A> property for each of the three words is the same.</span></span> <span data-ttu-id="d7099-122">这是提示文本中字符 "4003" （在本例中为四）的计数。</span><span class="sxs-lookup"><span data-stu-id="d7099-122">It is the count of the characters in the number "4003" in the text of the prompt, in this case, four.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CharacterPosition">
      <MemberSignature Language="C#" Value="public int CharacterPosition { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CharacterPosition" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Synthesis.SpeakProgressEventArgs.CharacterPosition" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CharacterPosition As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int CharacterPosition { int get(); };" />
      <MemberSignature Language="F#" Value="member this.CharacterPosition : int" Usage="System.Speech.Synthesis.SpeakProgressEventArgs.CharacterPosition" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d7099-123">获取从提示开始到刚刚说出的单词的第一字母之前的位置的字符与空格数。</span><span class="sxs-lookup"><span data-stu-id="d7099-123">Gets the number of characters and spaces from the beginning of the prompt to the position before the first letter of the word that was just spoken.</span></span></summary>
        <value><span data-ttu-id="d7099-124">返回从提示符开始到刚刚讲出的单词的第一个字母前的字符和空格数。</span><span class="sxs-lookup"><span data-stu-id="d7099-124">Returns the number of characters and spaces from the beginning of the prompt to the position before the first letter of the word that was just spoken.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d7099-125"><xref:System.Speech.Synthesis.SpeakProgressEventArgs.CharacterPosition%2A>包括 XML 标记中字符的计数，包括它们的括在括号中。</span><span class="sxs-lookup"><span data-stu-id="d7099-125">The <xref:System.Speech.Synthesis.SpeakProgressEventArgs.CharacterPosition%2A> includes the count for characters in XML tags, including their enclosing brackets.</span></span> <span data-ttu-id="d7099-126">使用 <xref:System.Speech.Synthesis.PromptBuilder.AppendText%2A> 、 <xref:System.Speech.Synthesis.PromptBuilder.AppendTextWithAlias%2A> 、 <xref:System.Speech.Synthesis.PromptBuilder.AppendTextWithHint%2A> 、 <xref:System.Speech.Synthesis.PromptBuilder.AppendSsmlMarkup%2A> 或 <xref:System.Speech.Synthesis.PromptBuilder.AppendTextWithPronunciation%2A> 方法中的任何一个时，会将内容添加到包含开始和结束元素的 SSML 提示符下 `speak` 。</span><span class="sxs-lookup"><span data-stu-id="d7099-126">When using any of the <xref:System.Speech.Synthesis.PromptBuilder.AppendText%2A>, <xref:System.Speech.Synthesis.PromptBuilder.AppendTextWithAlias%2A>, <xref:System.Speech.Synthesis.PromptBuilder.AppendTextWithHint%2A>, <xref:System.Speech.Synthesis.PromptBuilder.AppendSsmlMarkup%2A>, or <xref:System.Speech.Synthesis.PromptBuilder.AppendTextWithPronunciation%2A> methods, the contents are added to an SSML prompt that includes the opening and closing `speak` elements.</span></span> <span data-ttu-id="d7099-127">开始 `speak` 元素向 <xref:System.Speech.Synthesis.SpeakProgressEventArgs.CharacterPosition%2A> 提示符中所有单词和字母的中添加了82个字符和空格的偏移量。</span><span class="sxs-lookup"><span data-stu-id="d7099-127">The opening `speak` element adds an offset of 82 characters and spaces to the <xref:System.Speech.Synthesis.SpeakProgressEventArgs.CharacterPosition%2A> of the all the words and letters in the prompt.</span></span> <span data-ttu-id="d7099-128">例如，在以下代码片段中， <xref:System.Speech.Synthesis.SpeakProgressEventArgs.CharacterPosition%2A> 第一个单词 "this" 的是82。</span><span class="sxs-lookup"><span data-stu-id="d7099-128">For example, in the following snippet, the <xref:System.Speech.Synthesis.SpeakProgressEventArgs.CharacterPosition%2A> of the first word, "this", is 82.</span></span>  
  
```csharp  
builder.AppendText("This is a test");  
Synthesizer.Speak(builder);  
```  
  
 <span data-ttu-id="d7099-129">在上面的示例中， <xref:System.Speech.Synthesis.SpeakProgressEventArgs.CharacterPosition%2A> "test" 一词为92。</span><span class="sxs-lookup"><span data-stu-id="d7099-129">In the above example the <xref:System.Speech.Synthesis.SpeakProgressEventArgs.CharacterPosition%2A> of the word "test" is 92.</span></span> <span data-ttu-id="d7099-130">在下面的代码片段中，" <xref:System.Speech.Synthesis.SpeakProgressEventArgs.CharacterPosition%2A> test" 一词的 "test" 为23个字符 (115) ，因为 **\<prosody pitch="high">**  它前面的开始标记包含23个字符和空格 (这两个转义符 " \\ " 不计入) 。</span><span class="sxs-lookup"><span data-stu-id="d7099-130">In the following snippet the <xref:System.Speech.Synthesis.SpeakProgressEventArgs.CharacterPosition%2A> of the word "test" is 23 characters higher (115) because the opening **\<prosody pitch="high">**  tag that precedes it contains 23 characters and spaces (the two escape characters "\\" are not counted).</span></span>  
  
```csharp  
builder.AppendSsmlMarkup("This is a <prosody pitch=\"high\"> test </prosody>.");   
Synthesizer.Speak(builder);  
```  
  
 <span data-ttu-id="d7099-131">如果 <xref:System.Speech.Synthesis.PromptBuilder.AppendSsml%2A> 通过指定文件来使用向提示添加内容的方法，则 `xml` `speak` 不会使用文件中的开始声明和元素，也不会对其进行计数。</span><span class="sxs-lookup"><span data-stu-id="d7099-131">If you use the <xref:System.Speech.Synthesis.PromptBuilder.AppendSsml%2A> methods to add content to a prompt by specifying a file, the opening `xml` declaration and `speak` elements in the file are not used or counted.</span></span> <span data-ttu-id="d7099-132">开始标记后，文件中的第一个字符 `speak` 位于位置82（如果它是提示中的第一个内容）。</span><span class="sxs-lookup"><span data-stu-id="d7099-132">The first character in the file after the opening `speak` tag will be at position 82 if it is the first content in the prompt.</span></span>  
  
 <span data-ttu-id="d7099-133">与此相反，在 <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> 朗读之前，不会将方法的字符串参数添加到 SSML 提示符下。</span><span class="sxs-lookup"><span data-stu-id="d7099-133">By contrast, the string parameter of a <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> method does not get added to an SSML prompt before being spoken.</span></span> <span data-ttu-id="d7099-134">因此， <xref:System.Speech.Synthesis.SpeakProgressEventArgs.CharacterPosition%2A> 以下代码片段中第一个单词 "this" 的是零。</span><span class="sxs-lookup"><span data-stu-id="d7099-134">Therefore, the <xref:System.Speech.Synthesis.SpeakProgressEventArgs.CharacterPosition%2A> of the first word, "this", in the following snippet is zero.</span></span>  
  
```csharp  
Synthesizer.Speak("This is a test.");  
```  
  
 <span data-ttu-id="d7099-135">将 <xref:System.Speech.Synthesis.SpeechSynthesizer> 数字规范化为与数字的讲述方式相对应的单词。</span><span class="sxs-lookup"><span data-stu-id="d7099-135">The <xref:System.Speech.Synthesis.SpeechSynthesizer> normalizes numbers to the words that correspond to how the number will be spoken.</span></span> <span data-ttu-id="d7099-136">例如，合成器将数字 "4003" 说为 "4003"。</span><span class="sxs-lookup"><span data-stu-id="d7099-136">For example, the synthesizer speaks the number "4003" as "four thousand three".</span></span> <span data-ttu-id="d7099-137">它 <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress> 为三个口述单词中的每一个都引发一个事件。</span><span class="sxs-lookup"><span data-stu-id="d7099-137">It raises a <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress> event for each of the three spoken words.</span></span> <span data-ttu-id="d7099-138">但是， <xref:System.Speech.Synthesis.SpeakProgressEventArgs.CharacterPosition%2A> 这三个单词中的每一个都是相同的。</span><span class="sxs-lookup"><span data-stu-id="d7099-138">However, the <xref:System.Speech.Synthesis.SpeakProgressEventArgs.CharacterPosition%2A> property for each of the three words is the same.</span></span> <span data-ttu-id="d7099-139">它是提示文本中第一个字符 "4003" 之前的位置。</span><span class="sxs-lookup"><span data-stu-id="d7099-139">It is the position before the first character of the number "4003" in the text of the prompt.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d7099-140">下面的示例创建一个 <xref:System.Speech.Synthesis.PromptBuilder> ，并使用追加 XML 文件的 SSML 内容 <xref:System.Xml.XmlReader> 。</span><span class="sxs-lookup"><span data-stu-id="d7099-140">The following example creates a <xref:System.Speech.Synthesis.PromptBuilder> and appends the SSML contents of an XML file using <xref:System.Xml.XmlReader>.</span></span> <span data-ttu-id="d7099-141">该示例将语音输出到 WAV 文件以进行播放。</span><span class="sxs-lookup"><span data-stu-id="d7099-141">The example outputs speech to a WAV file for playback.</span></span> <span data-ttu-id="d7099-142">包含 SSML 的 XML 文件的内容将显示在代码示例下面。</span><span class="sxs-lookup"><span data-stu-id="d7099-142">The contents of the XML file containing the SSML appear below the code example.</span></span>  
  
```csharp  
using System;  
using System.Xml;  
using System.IO;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Configure the audio output.   
        synth.SetOutputToDefaultAudioDevice();  
  
        // Create a path to the file that contains SSML.  
        string weatherFile = Path.GetFullPath("c:\\test\\Weather.ssml");  
  
        // Create an XML Reader from the file, create a PromptBuilder and   
        // append the XmlReader.  
        PromptBuilder builder = new PromptBuilder();  
  
        if (File.Exists(weatherFile))  
        {  
          XmlReader reader = XmlReader.Create(weatherFile);  
          builder.AppendSsml(reader);  
          reader.Close();  
        }  
  
        // Add a handler for the SpeakProgress event.  
        synth.SpeakProgress +=  
          new EventHandler<SpeakProgressEventArgs>(synth_SpeakProgress);  
  
        // Speak the prompt and play back the output file.  
        synth.Speak(builder);  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  
    // Write each word and its character position to the console.  
    static void synth_SpeakProgress(object sender, SpeakProgressEventArgs e)  
    {  
      Console.WriteLine("Speak progress: {0} {1}",  
        e.CharacterPosition, e.Text);  
    }  
  }  
}  
  
```  
  
```xml  
<!-- The following are the contents of the file Weather.ssml.   
Note that because of the <p> tag and the space that follows it,   
that the character position of the first word "The" will be 86. -->  
  
<?xml version="1.0" encoding="ISO-8859-1"?>  
<speak version="1.0"  
 xmlns="http://www.w3.org/2001/10/synthesis"  
 xml:lang="en-US">  
  
  <p> The weather forecast for today is partly cloudy with   
some sun breaks. </p>  
  
  <break strength="medium" />  
  
  <p> Tonight's weather will be cloudy with a 30% chance of   
showers. </p>  
  
</speak>  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public string Text { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Synthesis.SpeakProgressEventArgs.Text" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Text As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Text { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Text : string" Usage="System.Speech.Synthesis.SpeakProgressEventArgs.Text" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d7099-143">引发事件时只读的文本。</span><span class="sxs-lookup"><span data-stu-id="d7099-143">The text that was just spoken when the event was raised.</span></span></summary>
        <value><span data-ttu-id="d7099-144">返回引发事件时朗读的文本。</span><span class="sxs-lookup"><span data-stu-id="d7099-144">Returns the text that was just spoken when the event was raised.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d7099-145">将 <xref:System.Speech.Synthesis.SpeechSynthesizer> 数字规范化为与数字的讲述方式相对应的单词。</span><span class="sxs-lookup"><span data-stu-id="d7099-145">The <xref:System.Speech.Synthesis.SpeechSynthesizer> normalizes numbers to the words that correspond to how the number will be spoken.</span></span> <span data-ttu-id="d7099-146">例如，合成器将数字 "4003" 说为 "4003"。</span><span class="sxs-lookup"><span data-stu-id="d7099-146">For example, the synthesizer speaks the number "4003" as "four thousand three".</span></span> <span data-ttu-id="d7099-147">它 <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress> 为每个口述字词引发事件。</span><span class="sxs-lookup"><span data-stu-id="d7099-147">It raises a <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress> event for each of the spoken words.</span></span> <span data-ttu-id="d7099-148">但是， <xref:System.Speech.Synthesis.SpeakProgressEventArgs.Text%2A> 这三个单词中的每一个都是相同的。</span><span class="sxs-lookup"><span data-stu-id="d7099-148">However, the <xref:System.Speech.Synthesis.SpeakProgressEventArgs.Text%2A> property for each of the three words is the same.</span></span> <span data-ttu-id="d7099-149">这是来自提示的文本 "4003"。</span><span class="sxs-lookup"><span data-stu-id="d7099-149">It is the text "4003" from the prompt.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d7099-150">下面的示例演示 <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress> 事件如何报告 <xref:System.Speech.Synthesis.SpeakProgressEventArgs.CharacterPosition%2A> 包含数字的字符串的和 <xref:System.Speech.Synthesis.SpeakProgressEventArgs.Text%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="d7099-150">The following example illustrates the how the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress> event reports the <xref:System.Speech.Synthesis.SpeakProgressEventArgs.CharacterPosition%2A> and <xref:System.Speech.Synthesis.SpeakProgressEventArgs.Text%2A> properties for strings that contain numbers.</span></span>  
  
```csharp  
using System;  
using System.Xml;  
using System.IO;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Configure the audio output.   
        synth.SetOutputToDefaultAudioDevice();  
  
        // Create an XML Reader from the file, create a PromptBuilder and   
        // append the XmlReader.  
        PromptBuilder builder = new PromptBuilder();  
        builder.AppendText("4003");  
  
        // Add a handler for the SpeakProgress event.  
        synth.SpeakProgress +=  
          new EventHandler<SpeakProgressEventArgs>(synth_SpeakProgress);  
  
        // Speak the prompt and play back the output file.  
        synth.Speak(builder);  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  
    // Write each word and its character position to the console.  
    static void synth_SpeakProgress(object sender, SpeakProgressEventArgs e)  
    {  
      Console.WriteLine("Speak progress -    Character position:  {0}    Text:  {1}",  
        e.CharacterPosition, e.Text);  
    }  
  }  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
